---
# Source: fulcio/charts/ctlog/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: ctlog-system
---
# Source: fulcio/charts/ctlog/templates/createctconfig-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-ctlog-createctconfig
  namespace: ctlog-system
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: fulcio/charts/ctlog/templates/createtree-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ctlog-createtree
  namespace: ctlog-system
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: fulcio/charts/ctlog/templates/ctlog-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ctlog
  namespace: ctlog-system
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: fulcio/templates/createcerts-serviceacount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-fulcio-createcerts
  namespace: default
  labels:
    helm.sh/chart: fulcio-2.3.20
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: fulcio/templates/fulcio-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-fulcio-server
  namespace: default
  labels:
    helm.sh/chart: fulcio-2.3.20
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: fulcio/charts/ctlog/templates/ctlog-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ctlog-config
  namespace: ctlog-system
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
data:
  __placeholder: |
    ###################################################################
    # Just a placeholder so that reapplying this won't overwrite treeID
    # if it already exists. This caused grief, do not remove.
    ###################################################################
---
# Source: fulcio/templates/fulcio-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-fulcio-server-config
  namespace: default
  labels:
    helm.sh/chart: fulcio-2.3.20
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.5"
    app.kubernetes.io/managed-by: Helm
data:
  config.json: |-
    {
      "OIDCIssuers": {
        "https://kubernetes.default.svc": {
          "IssuerURL": "https://kubernetes.default.svc",
          "ClientID": "sigstore",
          "Type": "kubernetes"
        }
      },
      "MetaIssuers": {
        "https://kubernetes.*.svc": {
          "ClientID": "sigstore",
          "Type": "kubernetes"
        }
      }
    }
---
# Source: fulcio/charts/ctlog/templates/cm-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ctlog-cm-operator
  namespace: ctlog-system
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps"]
    resourceNames: ["ctlog-config"]
    verbs: ["get", "update"]
---
# Source: fulcio/charts/ctlog/templates/secret-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ctlog-secret-operator
  namespace: ctlog-system
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps"]
    resourceNames: ["ctlog-config"]
    verbs: ["get", "update"]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["secrets"]
    verbs: ["create", "get", "update"]
---
# Source: fulcio/templates/secret-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-fulcio-server-secret-operator
  namespace: default
  labels:
    helm.sh/chart: fulcio-2.3.20
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.5"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["secrets"]
    verbs: ["create", "get", "update"]
---
# Source: fulcio/charts/ctlog/templates/cm-operator-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ctlog-cm-operator
  namespace: ctlog-system
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ctlog-cm-operator
subjects:
  - kind: ServiceAccount
    name: ctlog-createtree
    namespace: ctlog-system
---
# Source: fulcio/charts/ctlog/templates/secret-operator-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ctlog-secret-operator
  namespace: ctlog-system
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ctlog-secret-operator
subjects:
  - kind: ServiceAccount
    name: my-release-ctlog-createctconfig
    namespace: ctlog-system
---
# Source: fulcio/templates/secret-operator-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-fulcio-server-secret-operator
  namespace: default
  labels:
    helm.sh/chart: fulcio-2.3.20
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.5"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-fulcio-server-secret-operator
subjects:
  - kind: ServiceAccount
    name: my-release-fulcio-createcerts
    namespace: default
---
# Source: fulcio/charts/ctlog/templates/ctlog-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
  name: ctlog
  namespace: ctlog-system
spec:
  ports:
    - name: 6962-tcp
      port: 80
      protocol: TCP
      targetPort: 6962
    - name: 6963-tcp
      port: 6963
      protocol: TCP
      targetPort: 6963
  selector:
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
  type: "ClusterIP"
---
# Source: fulcio/templates/fulcio-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    helm.sh/chart: fulcio-2.3.20
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.5"
    app.kubernetes.io/managed-by: Helm
  name: my-release-fulcio-server
  namespace: default
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 5555
    - name: grpc
      port: 5554
      protocol: TCP
      targetPort: 5554
    - name: 2112-tcp
      port: 2112
      protocol: TCP
      targetPort: 2112
  selector:
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: my-release
  type: "ClusterIP"
---
# Source: fulcio/charts/ctlog/templates/ctlog-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ctlog
  namespace: ctlog-system
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ctlog
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: 2a8d8eaf8eda4e290285309cbb0aea0412ac0c23f73bdd11c2b3aa43f3ef7258
        prometheus.io/path: /metrics
        prometheus.io/port: "6963"
        prometheus.io/scrape: "true"
      labels:
        helm.sh/chart: ctlog-0.2.53
        app.kubernetes.io/name: ctlog
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.6.17"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: ctlog
      containers:
        - name: ctlog
          image: "ghcr.io/sigstore/scaffolding/ct_server@sha256:e16f0a2be43a317a4c392cca24eec8c8fef06b0e836bc3545979ac0335fcf6f5"
          imagePullPolicy: "IfNotPresent"
          args:
            - "--http_endpoint=0.0.0.0:6962"
            - "--metrics_endpoint=0.0.0.0:6963"
            - "--log_config=/ctfe-keys/config"
            - "--alsologtostderr"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 6962
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6962
            initialDelaySeconds: 10
          volumeMounts:
            - name: keys
              mountPath: "/ctfe-keys"
              readOnly: true
          ports:            
            - containerPort: 6962
              protocol: TCP
            - containerPort: 6963
              protocol: TCP
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
      volumes:
        - name: keys
          secret:
            secretName: ctlog-secret
---
# Source: fulcio/templates/fulcio-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-fulcio-server
  namespace: default
  labels:
    helm.sh/chart: fulcio-2.3.20
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fulcio
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: 8e1a9f063a2a8e7f5a36999d069bb6907b17d15d6585c2931009d68c987f9c29
      labels:
        app.kubernetes.io/name: fulcio
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-fulcio-server
      # This doesn't actually use Kubernetes credentials, so don't mount them in.
      automountServiceAccountToken: true
      containers:
        - name: my-release-fulcio-server
          image: "gcr.io/projectsigstore/fulcio@sha256:003d38b43442d436fe645feaebf8784975c138e411cf232276bea9de2a9f7b58"
          imagePullPolicy: "IfNotPresent"
          ports:            
            - containerPort: 5555
              protocol: TCP
            - containerPort: 5554
              protocol: TCP
            - containerPort: 2112
              protocol: TCP
          args:
            - "serve"
            - "--port=5555"
            - "--grpc-port=5554"
            - "--ca=fileca"
            - "--fileca-key"
            - "/var/run/fulcio-secrets/key.pem"
            - "--fileca-cert"
            - "/var/run/fulcio-secrets/cert.pem"
            - "--fileca-key-passwd"
            - "$(PASSWORD)"
            - "--ct-log-url=http://ctlog.ctlog-system.svc/fulcio"
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fulcio-server-secret
                  key: password
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 5555
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 5555
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: fulcio-config
              mountPath: /etc/fulcio-config
            - name: oidc-info
              mountPath: /var/run/fulcio
            - name: fulcio-cert
              mountPath: "/var/run/fulcio-secrets"
              readOnly: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
      volumes:
        - name: fulcio-config
          configMap:
            name: my-release-fulcio-server-config
        - name: oidc-info
          projected:
            sources:
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
                      mode: 0666
        - name: fulcio-cert
          secret:
            secretName: fulcio-server-secret
            items:
              - key: private
                path: key.pem
              - key: cert
                path: cert.pem
---
# Source: fulcio/charts/ctlog/templates/createctconfig-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-ctlog-createctconfig
  namespace: ctlog-system
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 3600
  backoffLimit: 6
  template:
    spec:
      serviceAccountName: my-release-ctlog-createctconfig
      restartPolicy: Never
      automountServiceAccountToken: true
      initContainers:
        - name: "wait-for-createtree-configmap"
          image: "docker.io/curlimages/curl@sha256:4bfa3e2c0164fb103fb9bfd4dc956facce32b6c5d47cc09fcec883ce9535d5ac"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "until curl --fail --header \"Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\" --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt --max-time 10 https://kubernetes.default.svc/api/v1/namespaces/$(NAMESPACE)/configmaps/ctlog-config | grep '\"treeID\":'; do echo waiting for Configmap ctlog-config; sleep 5; done;"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      containers:
        - name: my-release-ctlog-createctconfig
          image: "ghcr.io/sigstore/scaffolding/createctconfig@sha256:a891233c7f54a11025a4cac6119ba4aeea4f643c2012ff30e921aeca8a32d6db"
          imagePullPolicy: "IfNotPresent"
          args: [
            "--configmap=ctlog-config",
            "--secret=ctlog-secret",
            "--pubkeysecret=ctlog-public-key",
            "--fulcio-url=http://fulcio-server.fulcio-system.svc",
            "--trillian-server=trillian-logserver.trillian-system:8091",
            "--log-prefix=fulcio"
          ]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
---
# Source: fulcio/charts/ctlog/templates/createtree-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: ctlog-createtree
  namespace: ctlog-system
  labels:
    helm.sh/chart: ctlog-0.2.53
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.17"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      serviceAccountName: ctlog-createtree
      restartPolicy: Never
      automountServiceAccountToken: true
      containers:
        - name: ctlog-createtree
          image: "ghcr.io/sigstore/scaffolding/createtree@sha256:eb1a94738f34964c7456d18d30b8a45a654af89bb5371f69b2403df373be0826"
          imagePullPolicy: "IfNotPresent"
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          args: [
            "--namespace=$(NAMESPACE)",
            "--configmap=ctlog-config",
            "--display_name=ctlog-tree",
            "--admin_server=trillian-logserver.trillian-system:8091"
          ]
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
---
# Source: fulcio/templates/createcerts-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-fulcio-createcerts
  namespace: default
  labels:
    helm.sh/chart: fulcio-2.3.20
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.5"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      serviceAccountName: my-release-fulcio-createcerts
      restartPolicy: Never
      automountServiceAccountToken: true
      containers:
        - name: my-release-fulcio-createcerts
          image: "ghcr.io/sigstore/scaffolding/createcerts@sha256:2aaea38198d25ee53fb1f6da79eaa75c24bcc4ef81792a68687ba2ae0dc8ccf6"
          imagePullPolicy: "IfNotPresent"
          args: ["--secret=fulcio-server-secret"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
---
# Source: fulcio/templates/fulcio-http-ingress.yaml
apiVersion: "networking.k8s.io/v1"
kind: Ingress
metadata:
  labels:
    helm.sh/chart: fulcio-2.3.20
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.5"
    app.kubernetes.io/managed-by: Helm
  name: my-release-fulcio-server-http
  namespace: default
  annotations:
    {}
spec:
  ingressClassName: nginx
  rules:
    - host: "fulcio.localhost"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-fulcio-server
                port:
                  number: 80
