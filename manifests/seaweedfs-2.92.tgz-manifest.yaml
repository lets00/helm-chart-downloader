---
# Source: seaweedfs/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: seaweefds-rw-sa
  namespace: default
---
# Source: seaweedfs/templates/service-account.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: seaweefds-rw-cr
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: seaweedfs/templates/service-account.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:serviceaccount:seaweefds-rw-sa:default
subjects:
- kind: ServiceAccount
  name: seaweefds-rw-sa
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: seaweefds-rw-cr
---
# Source: seaweedfs/templates/filer-service-client.yaml
apiVersion: v1
kind: Service
metadata:
  name: seaweedfs-filer-client
  namespace: default
  labels:
    app: seaweedfs
    component: filer
    monitoring: "true"
spec:
  clusterIP: None
  ports:
  - name: "swfs-filer"
    port: 8888
    targetPort: 8888
    protocol: TCP
  - name: "swfs-filer-grpc"
    port: 18888
    targetPort: 18888
    protocol: TCP
  - name: "metrics"
    port: 9327
    targetPort: 9327
    protocol: TCP
  selector:
    app: seaweedfs
    component: filer
---
# Source: seaweedfs/templates/filer-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: seaweedfs-filer
  namespace: default
  labels:
    app: seaweedfs
    component: filer
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: "swfs-filer"
    port: 8888
    targetPort: 8888
    protocol: TCP
  - name: "swfs-filer-grpc"
    port: 18888
    targetPort: 18888
    protocol: TCP
  selector:
    app: seaweedfs
    component: filer
---
# Source: seaweedfs/templates/master-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: seaweedfs-master
  namespace: default
  labels:
    app: seaweedfs
    component: master
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"    
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: "swfs-master"
    port: 9333
    targetPort: 9333
    protocol: TCP
  - name: "swfs-master-grpc"
    port: 19333
    targetPort: 19333
    protocol: TCP
  selector:
    app: seaweedfs
    component: master
---
# Source: seaweedfs/templates/s3-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: seaweedfs-s3
  namespace: default
  labels:
    app: seaweedfs
    component: s3
spec:
  ports:
  - name: "swfs-s3"
    port: 8333
    targetPort: 8333
    protocol: TCP
  selector:
    app: seaweedfs
    component: filer
---
# Source: seaweedfs/templates/volume-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: seaweedfs-volume
  namespace: default
  labels:
    app: seaweedfs
    component: volume
spec:
  clusterIP: None
  ports:
  - name: "swfs-volume"
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: "swfs-volume-18080"
    port: 18080
    targetPort: 18080
    protocol: TCP
  - name: "swfs-volume-metrics"
    port: 9327
    targetPort: 9327
    protocol: TCP
  selector:
    app: seaweedfs
    component: volume
---
# Source: seaweedfs/templates/filer-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: seaweedfs-filer
  namespace: default
  labels:
    app: seaweedfs
    chart: seaweedfs-helm
    heritage: Helm
    release: my-release
spec:
  serviceName: seaweedfs-filer
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: seaweedfs
      chart: seaweedfs-helm
      release: my-release
      component: filer
  template:
    metadata:
      labels:
        app: seaweedfs
        chart: seaweedfs-helm
        release: my-release
        component: filer
    spec:
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: seaweedfs
                  release: "my-release"
                  component: filer
              topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: imagepullsecret
      serviceAccountName: seaweefds-rw-sa #hack for delete pod master after migration
      terminationGracePeriodSeconds: 60
      enableServiceLinks: false
      containers:
        - name: seaweedfs
          image: chrislusf/seaweedfs:2.92
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WEED_MYSQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: secret-seaweedfs-db
                  key: user
            - name: WEED_MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-seaweedfs-db
                  key: password
            - name: SEAWEEDFS_FULLNAME
              value: "seaweedfs"
            - name: WEED_FILER_BUCKETS_FOLDER
              value: "/buckets"
            - name: WEED_FILER_OPTIONS_RECURSIVE_DELETE
              value: "false"
            - name: WEED_LEVELDB2_ENABLED
              value: "false"
            - name: WEED_MYSQL_CONNECTION_MAX_IDLE
              value: "5"
            - name: WEED_MYSQL_CONNECTION_MAX_LIFETIME_SECONDS
              value: "600"
            - name: WEED_MYSQL_CONNECTION_MAX_OPEN
              value: "75"
            - name: WEED_MYSQL_DATABASE
              value: "sw_database"
            - name: WEED_MYSQL_ENABLED
              value: "true"
            - name: WEED_MYSQL_HOSTNAME
              value: "mysql-db-host"
            - name: WEED_MYSQL_INTERPOLATEPARAMS
              value: "true"
            - name: WEED_MYSQL_PORT
              value: "3306"
            - name: WEED_CLUSTER_DEFAULT
              value: "sw"
            - name: WEED_CLUSTER_SW_FILER
              value: "seaweedfs-filer-client:8888"
            - name: WEED_CLUSTER_SW_MASTER
              value: "seaweedfs-master:9333"
          command:
            - "/bin/sh"
            - "-ec"
            - | 
              exec /usr/bin/weed -logdir=/logs \
              -v=1 \
              filer \
              -port=8888 \
              -metricsPort 9327 \
              -dirListLimit=100000 \
              -defaultReplicaPlacement=000 \
              -ip=${POD_IP} \
              -s3 \
              -s3.port=8333 \
              -master=${SEAWEEDFS_FULLNAME}-master-0.${SEAWEEDFS_FULLNAME}-master:9333
          ports:
            - containerPort: 8888
              name: swfs-filer
            - containerPort: 18888
              #name: swfs-filer-grpc
          readinessProbe:
            httpGet:
              path: /
              port: 8888
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 100
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8888
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 10
      volumes:
        - name: seaweedfs-filer-log-volume
          hostPath:
            path: /storage/logs/seaweedfs/filer
            type: DirectoryOrCreate
        - name: db-schema-config-volume
          configMap:
            name: seaweedfs-db-init-config
        - name: config-users
          secret:
            defaultMode: 420
            secretName: seaweedfs-s3-secret
        
      nodeSelector:
        sw-backend: "true"
---
# Source: seaweedfs/templates/master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: seaweedfs-master
  namespace: default
  labels:
    app: seaweedfs
    chart: seaweedfs-helm
    heritage: Helm
    release: my-release
spec:
  serviceName: seaweedfs-master
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: seaweedfs
      chart: seaweedfs-helm
      release: my-release
      component: master
  template:
    metadata:
      labels:
        app: seaweedfs
        chart: seaweedfs-helm
        release: my-release
        component: master
    spec:
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: seaweedfs
                  release: "my-release"
                  component: master
              topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: imagepullsecret
      terminationGracePeriodSeconds: 60
      enableServiceLinks: false
      containers:
        - name: seaweedfs
          image: chrislusf/seaweedfs:2.92
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SEAWEEDFS_FULLNAME
              value: "seaweedfs"
            - name: WEED_MASTER_VOLUME_GROWTH_COPY_1
              value: "7"
            - name: WEED_MASTER_VOLUME_GROWTH_COPY_2
              value: "6"
            - name: WEED_MASTER_VOLUME_GROWTH_COPY_3
              value: "3"
            - name: WEED_MASTER_VOLUME_GROWTH_COPY_OTHER
              value: "1"
            - name: WEED_CLUSTER_DEFAULT
              value: "sw"
            - name: WEED_CLUSTER_SW_FILER
              value: "seaweedfs-filer-client:8888"
            - name: WEED_CLUSTER_SW_MASTER
              value: "seaweedfs-master:9333"
          command:
            - "/bin/sh"
            - "-ec"
            - | 
              exec /usr/bin/weed -logdir=/logs \
              -v=1 \
              master \
              -port=9333 \
              -mdir=/data \
              -ip.bind=0.0.0.0 \
              -defaultReplication=000 \
              -volumeSizeLimitMB=30000 \
              -metrics.intervalSeconds=15 \
              -ip=${POD_NAME}.${SEAWEEDFS_FULLNAME}-master \
              -peers=${SEAWEEDFS_FULLNAME}-master-0.${SEAWEEDFS_FULLNAME}-master:9333
          volumeMounts:
            - name : data-default
              mountPath: /data
            - name: seaweedfs-master-log-volume
              mountPath: "/logs/"
            
          ports:
            - containerPort: 9333
              name: swfs-master
            - containerPort: 19333
              #name: swfs-master-grpc
          readinessProbe:
            httpGet:
              path: /cluster/status
              port: 9333
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 45
            successThreshold: 2
            failureThreshold: 100
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /cluster/status
              port: 9333
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 4
            timeoutSeconds: 10
      volumes:
        - name: seaweedfs-master-log-volume
          hostPath:
            path: /storage/logs/seaweedfs/master
            type: DirectoryOrCreate
        - name: data-default
          hostPath:
            path: /ssd/seaweed-master/
            type: DirectoryOrCreate
        
      nodeSelector:
        sw-backend: "true"
---
# Source: seaweedfs/templates/volume-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: seaweedfs-volume
  namespace: default
  labels:
    app: seaweedfs
    chart: seaweedfs-helm
    heritage: Helm
    release: my-release
spec:
  serviceName: seaweedfs-volume
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: seaweedfs
      chart: seaweedfs-helm
      release: my-release
      component: volume
  template:
    metadata:
      labels:
        app: seaweedfs
        chart: seaweedfs-helm
        release: my-release
        component: volume
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: seaweedfs
                  release: "my-release"
                  component: volume
              topologyKey: kubernetes.io/hostname
      restartPolicy: Always
      imagePullSecrets:
        - name: imagepullsecret
      terminationGracePeriodSeconds: 150
      enableServiceLinks: false
      containers:
        - name: seaweedfs
          image: chrislusf/seaweedfs:2.92
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: SEAWEEDFS_FULLNAME
              value: "seaweedfs"
            - name: WEED_CLUSTER_DEFAULT
              value: "sw"
            - name: WEED_CLUSTER_SW_FILER
              value: "seaweedfs-filer-client:8888"
            - name: WEED_CLUSTER_SW_MASTER
              value: "seaweedfs-master:9333"
          command:
            - "/bin/sh"
            - "-ec"
            - |
              exec /usr/bin/weed -logdir=/logs \
                -v=1 \
                volume \
                -port=8080 \
                -metricsPort 9327 \
                -dir=/data \
                -max=0 \
                -ip.bind=0.0.0.0 \
                -readMode=proxy \
                -minFreeSpacePercent=7 \
                -ip=${POD_NAME}.${SEAWEEDFS_FULLNAME}-volume \
                -compactionMBps=50 \
                -mserver=${SEAWEEDFS_FULLNAME}-master-0.${SEAWEEDFS_FULLNAME}-master:9333
          volumeMounts:
            - name: data
              mountPath: "/data/"
            - name: logs
              mountPath: "/logs/"
            
          ports:
            - containerPort: 8080
              name: swfs-vol
            - containerPort: 18080
              #name: swfs-vol-grpc
          readinessProbe:
            httpGet:
              path: /status
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 90
            successThreshold: 1
            failureThreshold: 100
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /status
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 90
            successThreshold: 1
            failureThreshold: 4
            timeoutSeconds: 30
      volumes:
        - name: data
          hostPath:
            path: /storage/object_store/
            type: DirectoryOrCreate
        - name: logs
          hostPath:
            path: /storage/logs/seaweedfs/volume
            type: DirectoryOrCreate
      nodeSelector:
        sw-volume: "true"
  volumeClaimTemplates:
---
# Source: seaweedfs/templates/service-account.yaml
#hack for delete pod master after migration
---
# Source: seaweedfs/templates/seaweedfs-s3-secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: seaweedfs-s3-secret
  namespace: default
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook": "pre-install"
stringData:
  admin_access_key_id: O0kK4SlBRQDizi6N
  admin_secret_access_key: 6WWF7hOybwtu8B9ONAv6Ar5igxDpmLV5
  read_access_key_id: XiZR2ny9bUcmP1SF
  read_secret_access_key: 9JRLsqZc4narZWoRixq3DEnx4jCKM5kb
  seaweedfs_s3_config: '{"identities":[{"name":"anvAdmin","credentials":[{"accessKey":"O0kK4SlBRQDizi6N","secretKey":"6WWF7hOybwtu8B9ONAv6Ar5igxDpmLV5"}],"actions":["Admin","Read","Write"]},{"name":"anvReadOnly","credentials":[{"accessKey":"XiZR2ny9bUcmP1SF","secretKey":"9JRLsqZc4narZWoRixq3DEnx4jCKM5kb"}],"actions":["Read"]}]}'
---
# Source: seaweedfs/templates/secret-seaweedfs-db.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: secret-seaweedfs-db
  namespace: default
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook": "pre-install"
stringData:
  user: "YourSWUser"
  password: "HardCodedPassword"
  # better to random generate and create in DB
  # password: NTU2YzhkM2JkM2M0NDk3NWM5M2I1YjVk
