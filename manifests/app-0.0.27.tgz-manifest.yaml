---
# Source: app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: app
  labels:
    parcellab.dev/app: "app"
    parcellab.dev/env: "prod"
    parcellab.dev/chart-version: "0.0.27"
    parcellab.dev/chart-name: "app"
    parcellab.dev/part-of: "app-0.0.27"
    parcellab.dev/version: "stable"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    parcellab.dev/app: "app"
    parcellab.dev/env: "prod"
---
# Source: app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  labels:
    parcellab.dev/app: "app"
    parcellab.dev/env: "prod"
    parcellab.dev/chart-version: "0.0.27"
    parcellab.dev/chart-name: "app"
    parcellab.dev/part-of: "app-0.0.27"
    parcellab.dev/version: "stable"
spec:
  replicas: 1
  selector:
    matchLabels:
      parcellab.dev/app: "app"
      parcellab.dev/env: "prod"
  template:
    metadata:
      annotations:
        parcellab.dev/name: "app"
        parcellab.dev/version: "stable"
      labels:
        parcellab.dev/app: "app"
        parcellab.dev/env: "prod"
        parcellab.dev/chart-version: "0.0.27"
        parcellab.dev/chart-name: "app"
        parcellab.dev/part-of: "app-0.0.27"
        parcellab.dev/version: "stable"
        tags.datadoghq.com/env: "prod"
        tags.datadoghq.com/service: "app"
        tags.datadoghq.com/version: "stable"
    spec:
      imagePullSecrets:
        - name: github-docker
      serviceAccountName: default
      volumes:
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      containers:
        - name: app
          image: ghcr.io/parcellab/app:stable
          imagePullPolicy: Always
          livenessProbe:
            null
          readinessProbe:
            null
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_TRACE_ENABLED
              value: "true"
            - name: DD_TRACE_AGENT_URL
              value: unix:///var/run/datadog/apm.socket
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                parcellab.dev/app: "app"
                parcellab.dev/env: "prod"
            topologyKey: "kubernetes.io/hostname"
---
# Source: app/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "app-test-connection"
  labels:
    parcellab.dev/app: "app"
    parcellab.dev/env: "prod"
    parcellab.dev/chart-version: "0.0.27"
    parcellab.dev/chart-name: "app"
    parcellab.dev/part-of: "app-0.0.27"
    parcellab.dev/version: "stable"
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['app:80']
  restartPolicy: Never
