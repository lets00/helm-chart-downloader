---
# Source: demo-frontend/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-demo-frontend
  namespace: demo-frontend
  labels:
    helm.sh/chart: demo-frontend-0.0.3
    app.kubernetes.io/name: demo-frontend
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: demo-frontend/templates/configmap.yaml
apiVersion: v1
data:
  default.conf: |-
    server {
      listen       80;
      listen  [::]:80;
      server_name  localhost;

      #access_log  /var/log/nginx/host.access.log  main;

      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }

      #error_page  404              /404.html;

      # redirect server error pages to the static page /50x.html
      #
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }

      location /stats {
          proxy_pass http://demo-backend-http.demo-backend:5000;
      }
    }
kind: ConfigMap
metadata:
  name: my-release-demo-frontend
  namespace: demo-frontend
  labels:
    helm.sh/chart: demo-frontend-0.0.3
    app.kubernetes.io/name: demo-frontend
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: demo-frontend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-demo-frontend-http
  namespace: demo-frontend
  labels:
    helm.sh/chart: demo-frontend-0.0.3
    app.kubernetes.io/name: demo-frontend
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/name: demo-frontend
    app.kubernetes.io/instance: my-release
---
# Source: demo-frontend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-demo-frontend
  namespace: demo-frontend
  labels:
    helm.sh/chart: demo-frontend-0.0.3
    app.kubernetes.io/name: demo-frontend
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  selector:
    matchLabels:
      app.kubernetes.io/name: demo-frontend
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: demo-frontend
        app.kubernetes.io/instance: my-release
      annotations:
    spec:
      serviceAccountName: my-release-demo-frontend
      containers:
        - name: main
          image: quay.io/yushiwho/sys-stats:e1f9d77
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BACKEND_HOST
              value: localhost:5000
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: conf
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: conf
          configMap:
            name: my-release-demo-frontend
