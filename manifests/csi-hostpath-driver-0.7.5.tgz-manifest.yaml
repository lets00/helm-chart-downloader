---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-attacher.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-attacher-my-release-csi-hostpath-driver
  namespace: default
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-health-monitor.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-external-health-monitor-my-release-csi-hostpath-driver
  namespace: default
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-provisioner.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-provisioner-my-release-csi-hostpath-driver
  namespace: default
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-resizer.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-resizer-my-release-csi-hostpath-driver
  namespace: default
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-snapshotter.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-snapshotter-my-release-csi-hostpath-driver
---
# Source: csi-hostpath-driver/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-csi-hostpath-driver
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: csi-hostpath-driver/templates/storageclass.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: csi-hostpath-sc
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: hostpath.csi.k8s.io
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-attacher.yaml
# Attacher must be able to work with PVs, CSINodes and VolumeAttachments
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-attacher-runner-my-release-csi-hostpath-driver
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
#Secret permission is optional.
#Enable it if you need value from secret.
#For example, you have key `csi.storage.k8s.io/controller-publish-secret-name` in StorageClass.parameters
#see https://kubernetes-csi.github.io/docs/secrets-and-credentials.html
#  - apiGroups: [""]
#    resources: ["secrets"]
#    verbs: ["get", "list"]
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-health-monitor.yaml
# Health monitor controller must be able to work with PVs, PVCs, Nodes and Pods
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-health-monitor-runner-my-release-csi-hostpath-driver
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "patch"]
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-provisioner.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-provisioner-runner-my-release-csi-hostpath-driver
rules:
  # The following rule should be uncommented for plugins that require secrets
  # for provisioning.
  # - apiGroups: [""]
  #   resources: ["secrets"]
  #   verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  # Access to volumeattachments is only needed when the CSI driver
  # has the PUBLISH_UNPUBLISH_VOLUME controller capability.
  # In that case, external-provisioner will watch volumeattachments
  # to determine when it is safe to delete a volume.
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch"]
  # (Alpha) Access to referencegrants is only needed when the CSI driver
  # has the CrossNamespaceVolumeDataSource controller capability.
  # In that case, external-provisioner requires "get", "list", "watch"
  # permissions  for "referencegrants" on "gateway.networking.k8s.io".
  #- apiGroups: ["gateway.networking.k8s.io"]
  #  resources: ["referencegrants"]
  #  verbs: ["get", "list", "watch"]
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-resizer.yaml
# Resizer must be able to work with PVCs, PVs, SCs.
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-resizer-runner-my-release-csi-hostpath-driver
rules:
  # The following rule should be uncommented for plugins that require secrets
  # for provisioning.
  # - apiGroups: [""]
  #   resources: ["secrets"]
  #   verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-snapshotter.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  # rename if there are conflicts
  name: external-snapshotter-runner-my-release-csi-hostpath-driver
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  # Secret permission is optional.
  # Enable it if your driver needs secret.
  # For example, `csi.storage.k8s.io/snapshotter-secret-name` is set in VolumeSnapshotClass.
  # See https://kubernetes-csi.github.io/docs/secrets-and-credentials.html for more details.
  #  - apiGroups: [""]
  #    resources: ["secrets"]
  #    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["update", "patch"]
---
# Source: csi-hostpath-driver/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: attacher-cluster-role
  name: csi-hostpathplugin-attacher-cluster-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-attacher-runner-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: my-release-csi-hostpath-driver
    namespace: default
---
# Source: csi-hostpath-driver/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: health-monitor-controller-cluster-role
  name: csi-hostpathplugin-health-monitor-controller-cluster-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-health-monitor-runner-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: my-release-csi-hostpath-driver
    namespace: default
---
# Source: csi-hostpath-driver/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: provisioner-cluster-role
  name: csi-hostpathplugin-provisioner-cluster-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-provisioner-runner-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: my-release-csi-hostpath-driver
    namespace: default
---
# Source: csi-hostpath-driver/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: resizer-cluster-role
  name: csi-hostpathplugin-resizer-cluster-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-resizer-runner-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: my-release-csi-hostpath-driver
    namespace: default
---
# Source: csi-hostpath-driver/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: snapshotter-cluster-role
  name: csi-hostpathplugin-snapshotter-cluster-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-snapshotter-runner-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: my-release-csi-hostpath-driver
    namespace: default
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-attacher.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-attacher-role-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: csi-attacher-my-release-csi-hostpath-driver
    namespace: default
roleRef:
  kind: ClusterRole
  name: external-attacher-runner-my-release-csi-hostpath-driver
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-health-monitor.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-external-health-monitor-role-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: csi-external-health-monitor-my-release-csi-hostpath-driver
    namespace: default
roleRef:
  kind: ClusterRole
  name: external-health-monitor-runner-my-release-csi-hostpath-driver
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-provisioner.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: csi-provisioner-my-release-csi-hostpath-driver
    namespace: default
roleRef:
  kind: ClusterRole
  name: external-provisioner-runner-my-release-csi-hostpath-driver
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-resizer.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-resizer-role-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: csi-resizer-my-release-csi-hostpath-driver
    namespace: default
roleRef:
  kind: ClusterRole
  name: external-resizer-runner-my-release-csi-hostpath-driver
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-snapshotter.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-snapshotter-role-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: csi-snapshotter-my-release-csi-hostpath-driver
    namespace: default
roleRef:
  kind: ClusterRole
  # change the name also here if the ClusterRole gets renamed
  name: external-snapshotter-runner-my-release-csi-hostpath-driver
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-attacher.yaml
# Attacher must be able to work with configmaps or leases in the current namespace
# if (and only if) leadership election is enabled
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: external-attacher-cfg-my-release-csi-hostpath-driver
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-health-monitor.yaml
# Health monitor controller must be able to work with configmaps or leases in the current namespace
# if (and only if) leadership election is enabled
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: external-health-monitor-cfg-my-release-csi-hostpath-driver
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-provisioner.yaml
# Provisioner must be able to work with endpoints in current namespace
# if (and only if) leadership election is enabled
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: external-provisioner-cfg-my-release-csi-hostpath-driver
rules:
  # Only one of the following rules for endpoints or leases is required based on
  # what is set for `--leader-election-type`. Endpoints are deprecated in favor of Leases.
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  # Permissions for CSIStorageCapacity are only needed enabling the publishing
  # of storage capacity information.
  - apiGroups: ["storage.k8s.io"]
    resources: ["csistoragecapacities"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # The GET permissions below are needed for walking up the ownership chain
  # for CSIStorageCapacity. They are sufficient for deployment via
  # StatefulSet (only needs to get Pod) and Deployment (needs to get
  # Pod and then ReplicaSet to find the Deployment).
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get"]
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-resizer.yaml
# Resizer must be able to work with `leases` in current namespace
# if (and only if) leadership election is enabled
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: external-resizer-cfg-my-release-csi-hostpath-driver
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-snapshotter.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: external-snapshotter-leaderelection-my-release-csi-hostpath-driver
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: csi-hostpath-driver/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: attacher-role
  name: csi-hostpathplugin-attacher-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-attacher-cfg-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: my-release-csi-hostpath-driver
    namespace: default
---
# Source: csi-hostpath-driver/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: health-monitor-controller-role
  name: csi-hostpathplugin-health-monitor-controller-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-health-monitor-cfg-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: my-release-csi-hostpath-driver
    namespace: default
---
# Source: csi-hostpath-driver/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: provisioner-role
  name: csi-hostpathplugin-provisioner-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-provisioner-cfg-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: my-release-csi-hostpath-driver
    namespace: default
---
# Source: csi-hostpath-driver/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: resizer-role
  name: csi-hostpathplugin-resizer-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-resizer-cfg-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: my-release-csi-hostpath-driver
    namespace: default
---
# Source: csi-hostpath-driver/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: snapshotter-role
  name: csi-hostpathplugin-snapshotter-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-snapshotter-leaderelection-my-release-csi-hostpath-driver
subjects:
  - kind: ServiceAccount
    name: my-release-csi-hostpath-driver
    namespace: default
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-attacher.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-attacher-role-cfg-my-release-csi-hostpath-driver
  namespace: default
subjects:
  - kind: ServiceAccount
    name: csi-attacher-my-release-csi-hostpath-driver
    namespace: default
roleRef:
  kind: Role
  name: external-attacher-cfg-my-release-csi-hostpath-driver
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-health-monitor.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-external-health-monitor-role-cfg-my-release-csi-hostpath-driver
  namespace: default
subjects:
  - kind: ServiceAccount
    name: csi-external-health-monitor-my-release-csi-hostpath-driver
    namespace: default
roleRef:
  kind: Role
  name: external-health-monitor-cfg-my-release-csi-hostpath-driver
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-provisioner.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role-cfg-my-release-csi-hostpath-driver
  namespace: default
subjects:
  - kind: ServiceAccount
    name: csi-provisioner-my-release-csi-hostpath-driver
    namespace: default
roleRef:
  kind: Role
  name: external-provisioner-cfg-my-release-csi-hostpath-driver
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-resizer.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-resizer-role-cfg-my-release-csi-hostpath-driver
  namespace: default
subjects:
  - kind: ServiceAccount
    name: csi-resizer-my-release-csi-hostpath-driver
    namespace: default
roleRef:
  kind: Role
  name: external-resizer-cfg-my-release-csi-hostpath-driver
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-hostpath-driver/templates/rbac/rbac-csi-snapshotter.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-snapshotter-leaderelection-my-release-csi-hostpath-driver
  namespace: default
subjects:
  - kind: ServiceAccount
    name: csi-snapshotter-my-release-csi-hostpath-driver
    namespace: default
roleRef:
  kind: Role
  name: external-snapshotter-leaderelection-my-release-csi-hostpath-driver
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-hostpath-driver/templates/statefulset.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: my-release-csi-hostpath-driver
  labels:
    
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: my-release-csi-hostpath-driver
  # One replica only:
  # Host path driver only works when everything runs
  # on a single node.
  replicas: 1
  selector:
    matchLabels:
      
      app.kubernetes.io/name: csi-hostpath-driver
      app.kubernetes.io/instance: hostpath.csi.k8s.io
      app.kubernetes.io/part-of: csi-driver-host-path
  template:
    metadata:
      labels:
        
        app.kubernetes.io/name: csi-hostpath-driver
        app.kubernetes.io/instance: hostpath.csi.k8s.io
        app.kubernetes.io/part-of: csi-driver-host-path
    spec:
      serviceAccountName: my-release-csi-hostpath-driver
      
      serviceAccountName: my-release-csi-hostpath-driver
      securityContext:
        
        {}
      containers:
        - name: hostpath
          #image: registry.k8s.io/sig-storage/hostpathplugin:v1.9.0
          image: "infracreate-registry.cn-zhangjiakou.cr.aliyuncs.com/apecloud/hostpathplugin:v1.11.0"
          imagePullPolicy: IfNotPresent
          args:
            - "--drivername=hostpath.csi.k8s.io"
            - "--v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          ports:
            - containerPort: 9898
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
              name: plugins-dir
            - mountPath: /csi-data-dir
              name: csi-data-dir
            - mountPath: /dev
              name: dev-dir

        - name: csi-external-health-monitor-controller
          #image: registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.7.0
          image: "infracreate-registry.cn-zhangjiakou.cr.aliyuncs.com/apecloud/csi-external-health-monitor-controller:v0.7.0"
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /csi/csi.sock

          volumeMounts:
            - name: socket-dir
              mountPath: /csi

        - name: node-driver-registrar
          #image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.6.0
          image: "infracreate-registry.cn-zhangjiakou.cr.aliyuncs.com/apecloud/csi-node-driver-registrar:v2.6.0"
          imagePullPolicy: IfNotPresent
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-hostpath/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /registration
              name: registration-dir
            - mountPath: /csi-data-dir
              name: csi-data-dir

        - name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          #image: registry.k8s.io/sig-storage/livenessprobe:v2.8.0
          image: "infracreate-registry.cn-zhangjiakou.cr.aliyuncs.com/apecloud/livenessprobe:v2.8.0"
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=/csi/csi.sock
            - --health-port=9898

        - name: csi-attacher
          #image: registry.k8s.io/sig-storage/csi-attacher:v4.0.0
          image: "infracreate-registry.cn-zhangjiakou.cr.aliyuncs.com/apecloud/csi-attacher:v4.0.0"
          imagePullPolicy: IfNotPresent
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir

        - name: csi-provisioner
          #image: registry.k8s.io/sig-storage/csi-provisioner:v3.3.0
          image: "infracreate-registry.cn-zhangjiakou.cr.aliyuncs.com/apecloud/csi-provisioner:v3.3.0"
          imagePullPolicy: IfNotPresent
          args:
            - -v=5
            - --csi-address=/csi/csi.sock
            - --feature-gates=Topology=true
            # end csi-provisioner args
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir

        - name: csi-resizer
          #image: registry.k8s.io/sig-storage/csi-resizer:v1.6.0
          image: "infracreate-registry.cn-zhangjiakou.cr.aliyuncs.com/apecloud/csi-resizer:v1.6.0"
          imagePullPolicy: IfNotPresent
          args:
            - -v=5
            - -csi-address=/csi/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir

        - name: csi-snapshotter
          #image: registry.k8s.io/sig-storage/csi-snapshotter:v6.1.0
          image: "infracreate-registry.cn-zhangjiakou.cr.aliyuncs.com/apecloud/csi-snapshotter:v6.1.0"
          imagePullPolicy: IfNotPresent
          args:
            - -v=5
            - --csi-address=/csi/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: kb-controller
                operator: In
                values:
                - "true"
            weight: 100
      tolerations:
        - effect: NoSchedule
          key: kb-controller
          operator: Equal
          value: "true"

      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-hostpath
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
          name: plugins-dir
        - hostPath:
            # 'path' is where PV data is persisted on host.
            # using /tmp is also possible while the PVs will not available after plugin container recreation or host reboot
            path: /var/lib/csi-hostpath-data/
            type: DirectoryOrCreate
          name: csi-data-dir
        - hostPath:
            path: /dev
            type: Directory
          name: dev-dir
---
# Source: csi-hostpath-driver/templates/csidriver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: hostpath.csi.k8s.io
  labels:
    helm.sh/chart: csi-hostpath-driver-0.7.5
    app.kubernetes.io/name: csi-hostpath-driver
    app.kubernetes.io/instance: hostpath.csi.k8s.io
    app.kubernetes.io/part-of: csi-driver-host-path
    app.kubernetes.io/version: "v1.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: csi-driver
spec:
  # Supports persistent and ephemeral inline volumes.
  volumeLifecycleModes:
    - Persistent
    - Ephemeral
  # To determine at runtime which mode a volume uses, pod info and its
  # "csi.storage.k8s.io/ephemeral" entry are needed.
  podInfoOnMount: true
  # Kubernetes may use fsGroup to change permissions and ownership
  # of the volume to match user requested fsGroup in the pod's SecurityPolicy
  fsGroupPolicy: File
