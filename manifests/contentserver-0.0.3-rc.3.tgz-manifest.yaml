---
# Source: contentserver/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-contentserver
  labels:
    helm.sh/chart: contentserver-0.0.3-rc.3
    app.kubernetes.io/name: contentserver
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.11.0-rc.11"
    app.kubernetes.io/managed-by: Helm
  namespace: default
automountServiceAccountToken: true
---
# Source: contentserver/templates/contentserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-contentserver
  labels:
    helm.sh/chart: contentserver-0.0.3-rc.3
    app.kubernetes.io/name: contentserver
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.11.0-rc.11"
    app.kubernetes.io/managed-by: Helm
  namespace: default
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
  selector:
    app.kubernetes.io/name: contentserver
    app.kubernetes.io/instance: my-release
---
# Source: contentserver/templates/contentserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-contentserver
  labels:
    helm.sh/chart: contentserver-0.0.3-rc.3
    app.kubernetes.io/name: contentserver
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.11.0-rc.11"
    app.kubernetes.io/managed-by: Helm
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: contentserver
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        helm.sh/chart: contentserver-0.0.3-rc.3
        app.kubernetes.io/name: contentserver
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "1.11.0-rc.11"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: my-release-contentserver
      terminationGracePeriodSeconds: 30
      containers:
        - name: contentserver
          image: "foomo/contentserver:1.11.0-rc.11"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: healthz
              containerPort: 9400
              protocol: TCP
          args:
            - http
            - http://contentserverexport:8080
            - --address
            - :8080
            - --base-path
            - /contentserver
            - --graceful-period
            - 30s
            - --graceful-timeout
            - 15s
            - --history-dir
            - /var/lib/contentserver
            - --service-healthz-enabled
          env:
          readinessProbe:
            httpGet:
              path: /healthz/readiness
              port: 9400
          livenessProbe:
            httpGet:
              path: /healthz/liveness
              port: 9400
      volumes:
