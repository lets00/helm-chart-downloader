---
# Source: clickhouse-exporter/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: my-release-clickhouse-exporter
  labels:
    chart: clickhouse-exporter-0.1.1
    app: clickhouse-exporter
    release: "my-release"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9116
      protocol: TCP
  selector:
    app: clickhouse-exporter
    release: "my-release"
---
# Source: clickhouse-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-clickhouse-exporter
  labels:
    chart: clickhouse-exporter-0.1.1
    app: clickhouse-exporter
    release: "my-release"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clickhouse-exporter
      release: "my-release"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: clickhouse-exporter
        release: "my-release"
    spec:
      serviceAccountName: default
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: clickhouse-exporter
          env:
            - name: CLICKHOUSE_USER
              value: "default"
          image: "flant/clickhouse-exporter:0.2.1"
          imagePullPolicy: IfNotPresent
          command: ["clickhouse_exporter",
            "--scrape_uri=http://localhost:8123",]
          securityContext:
            capabilities:
              drop:
                - SETPCAP
                - MKNOD
                - AUDIT_WRITE
                - CHOWN
                - NET_RAW
                - DAC_OVERRIDE
                - FOWNER
                - FSETID
                - KILL
                - SETGID
                - SETUID
                - NET_BIND_SERVICE
                - SYS_CHROOT
                - SETFCAP
            readOnlyRootFilesystem: true
          resources:
            {}
          ports:
            - containerPort: 9116
              name: http
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 1
            timeoutSeconds: 5
            periodSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "sleep 20"]
          volumeMounts:
      volumes:
