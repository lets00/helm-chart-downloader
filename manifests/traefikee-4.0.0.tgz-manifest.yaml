---
# Source: traefikee/templates/rbac/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default-svc-acc
  namespace: default
  labels:
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
---
# Source: traefikee/templates/stateful-sets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: default-registry-token
  namespace: default
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  token:  Z0h1cHhWQXJDVw==
---
# Source: traefikee/templates/controller/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: default-static-config
  namespace: default
  labels: 
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
data:
  static.yaml:
    |
      api: {}
      entrypoints:
        traefik:
          address: ":9000"
        web:
          address: ":7080"
        websecure:
          http:
            tls: {}
          address: ":7443"
      ping: {}
      providers:
        kubernetesIngress:
          allowEmptyServices: true
          ingressClass:
        kubernetesCRD:
          allowEmptyServices: true
          ingressClass:
---
# Source: traefikee/templates/rbac/cluster-role.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default-svc-acc-role
  labels:
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
rules:
  - apiGroups:
    - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - update
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - pods
      - pods/log
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - create
      - update
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.io
      - traefik.containo.us
    resources:
      - ingressroutes
      - ingressroutetcps
      - ingressrouteudps
      - tlsstores
      - tlsoptions
      - middlewares
      - middlewaretcps
      - traefikservices
      - serverstransports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - access.smi-spec.io
      - specs.smi-spec.io
      - split.smi-spec.io
    resources:
      - traffictargets
      - tcproutes
      - httproutegroups
      - trafficsplits
    verbs:
      - get
      - list
      - watch
---
# Source: traefikee/templates/rbac/cluster-role-binding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: default-svc-acc
  labels:
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-svc-acc-role
subjects:
  - kind: ServiceAccount
    name: default-svc-acc
    namespace: default
---
# Source: traefikee/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: default-svc-acc-role-default
  namespace: default
  labels:
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
---
# Source: traefikee/templates/rbac/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-svc-acc-role-default
  namespace: default
  labels:
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
roleRef:
  kind: Role
  name: default-svc-acc-role-default
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: default-svc-acc
    namespace: default
---
# Source: traefikee/templates/controller/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: default-ctrl-svc
  namespace: default
  labels:
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
  annotations:
spec:
  selector:
    app: traefikee
    component: controllers
    release: default
  clusterIP: None
  publishNotReadyAddresses: true
---
# Source: traefikee/templates/proxy/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: default-proxy-svc
  namespace: default
  labels:
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
    component: proxies
  annotations:
spec:
  type: LoadBalancer
  ports: 
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https

  selector:
    app: traefikee
    release: default
    component: proxies
---
# Source: traefikee/templates/registry/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: default-plugin-registry-svc
  namespace: default
  labels:
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      targetPort: https
  selector:
    app: traefikee
    release: default
    component: registry
---
# Source: traefikee/templates/proxy/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: default-proxy
  namespace: default
  labels:
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
    component: proxies
  annotations:
spec:
  replicas: 2
  selector:
    matchLabels:
      app: traefikee
      release: default
      component: proxies
  template:
    metadata:
      labels:
        app: traefikee
        app.kubernetes.io/version: v2.11.2
        helm.sh/chart: "traefikee-4.0.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-release
        release: default
        component: proxies
      annotations:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - proxies
              topologyKey: kubernetes.io/hostname
            weight: 100
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: false
      initContainers:
        - name: wait-dns
          image: docker.io/busybox:1.36.1
          command: ['sh', '-c', 'until nslookup -type=a default-ctrl-svc.default.svc.cluster.local; do echo waiting for published dns records; sleep 1; done;']
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 20m
              memory: 32Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - NET_RAW
        - name: chown
          image: docker.io/busybox:1.36.1
          command: ['chown', '-R', '65532:', '/var/lib/traefikee']
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 20m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - NET_RAW
          volumeMounts:
            - name: default-proxy-data
              mountPath: "/var/lib/traefikee"
      containers:
        - name: default-proxy
          image: docker.io/traefik/traefikee:v2.11.2
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 65532
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
          ports:
            - containerPort: 8484
              name: distributed
            - containerPort: 9000
              name: traefik
            - containerPort: 7080
              name: http
            - containerPort: 7443
              name: https
          readinessProbe:
            httpGet:
              path: /ping
              port: traefik
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /ping
              port: traefik
            initialDelaySeconds: 2
            periodSeconds: 5
          resources:
            requests:
              memory: 256Mi
              cpu: 400m
            limits:
              memory: 1Gi
              cpu: 1000m
          volumeMounts:
            - name: default-proxy-data
              mountPath: "/var/lib/traefikee"
            - name: "join-token"
              mountPath: "/var/run/secrets"
          command:
            - "/traefikee"
            - "proxy"
            - "--role=ingress"
            - "--name=$(POD_NAME)"
            - --discovery.dns.domain=default-ctrl-svc.$(POD_NAMESPACE)
            - "--jointoken.file.path=/var/run/secrets"
            - "--log.level="
            - "--log.filepath="
            - "--log.format="
      volumes:
        - name: default-proxy-data
          emptyDir: {}
        - name: "join-token"
          secret:
            secretName: default-tokens
---
# Source: traefikee/templates/stateful-sets.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: default-plugin-registry
  namespace: default
  labels:
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
  annotations:
spec:
  serviceName: default-plugin-registry-svc
  replicas: 1
  selector:
    matchLabels:
      app: traefikee
      release: default
      component: registry
  template:
    metadata:
      annotations:
        # This ensures that the registry pods will be rollout,
        # if the token for the plugin registry has changed since last deployment.
        checksum/config: 1e08487b09902c3f0f3e035325910a4e1c945063f81cae3fb8fa0aff1de675a5
      labels:
        component: registry
        
        app: traefikee
        app.kubernetes.io/version: v2.11.2
        helm.sh/chart: "traefikee-4.0.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-release
        release: default
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - registry
              topologyKey: kubernetes.io/hostname
            weight: 100
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: false
      initContainers:
        - name: wait-dns
          image: docker.io/busybox:1.36.1
          command: ['sh', '-c', 'until nslookup -type=a default-ctrl-svc.default.svc.cluster.local; do echo waiting for published dns records; sleep 1; done;']
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 20m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - NET_RAW
        - name: chown
          image: docker.io/busybox:1.36.1
          command: ['chown', '-R', '65532:', '/var/lib/traefikee', '/var/lib/plugins']
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 20m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - NET_RAW
          volumeMounts:
            - name: default-plugin-registry-data
              mountPath: "/var/lib/traefikee"
            - name: plugin-data
              mountPath: "/var/lib/plugins"
      containers:
        - name: default-plugin-registry
          image: docker.io/traefik/traefikee:v2.11.2
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PLUGIN_REGISTRY_TOKEN
              valueFrom:
                secretKeyRef:
                  name: default-registry-token
                  key: token
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
          ports:
            - containerPort: 6443
              name: https
          livenessProbe:
            httpGet:
              port: https
              scheme: HTTPS
              path: /plugins
            initialDelaySeconds: 2
            periodSeconds: 5
          readinessProbe:
            httpGet:
              port: https
              scheme: HTTPS
              path: /plugins
            initialDelaySeconds: 2
            periodSeconds: 5
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 4Gi
              cpu: 1000m
          volumeMounts:
            - name: default-plugin-registry-data
              mountPath: "/var/lib/traefikee"
            - name: plugin-data
              mountPath: "/var/lib/plugins"
            - name: "join-token"
              mountPath: "/var/run/secrets"
          command:
            - "/traefikee"
            - "plugin-registry"
            - "--name=$(POD_NAME)"
            - "--addr=:6443"
            - "--plugindir=/var/lib/plugins"
            - "--token=$(PLUGIN_REGISTRY_TOKEN)"
            - "--discovery.dns.domain=default-ctrl-svc.$(POD_NAMESPACE)"
            - "--jointoken.file.path=/var/run/secrets"
            - "--log.level="
            - "--log.filepath="
            - "--log.format="
      volumes:
        - name: default-plugin-registry-data
          emptyDir: {}
        - name: "join-token"
          secret:
            secretName: default-tokens
  volumeClaimTemplates:
    - metadata:
        name: plugin-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---
# Source: traefikee/templates/stateful-sets.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: default-controller
  namespace: default
  labels:
    app: traefikee
    app.kubernetes.io/version: v2.11.2
    helm.sh/chart: "traefikee-4.0.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    release: default
  annotations:
spec:
  selector:
    matchLabels:
      app: traefikee
      release: default
      component: controllers
  podManagementPolicy: Parallel
  serviceName: default-ctrl-svc
  replicas: 1
  template:
    metadata:
      annotations:
        # This ensures that the registry pods will be rollout,
        # if the token for the plugin registry has changed since last deployment.
        checksum/config: 1e08487b09902c3f0f3e035325910a4e1c945063f81cae3fb8fa0aff1de675a5
      labels:
        component: controllers
        app: traefikee
        app.kubernetes.io/version: v2.11.2
        helm.sh/chart: "traefikee-4.0.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-release
        release: default
    spec:
      serviceAccountName: default-svc-acc
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - controllers
              topologyKey: kubernetes.io/hostname
            weight: 100
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: wait-dns
          image: docker.io/busybox:1.36.1
          command: ['sh', '-c', 'until nslookup -type=a default-ctrl-svc.default.svc.cluster.local; do echo waiting for published dns records; sleep 1; done;']
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 20m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - NET_RAW
        - name: chown
          image: docker.io/busybox:1.36.1
          command: ['chown', '-R', '65532:', '/var/lib/traefikee']
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 20m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - NET_RAW
          volumeMounts:
            - name: data
              mountPath: /var/lib/traefikee
      containers:
        - name: default-controller
          image: docker.io/traefik/traefikee:v2.11.2
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LICENSE
              valueFrom:
                secretKeyRef:
                  name: default-license
                  key: license
            - name: PLUGIN_REGISTRY_TOKEN
              valueFrom:
                secretKeyRef:
                  name: default-registry-token
                  key: token
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 65532
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
          ports:
            - containerPort: 4242
              name: control-port
            - containerPort: 8080
              name: api
          readinessProbe:
            tcpSocket:
              port: control-port
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: control-port
            initialDelaySeconds: 10
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 4Gi
              cpu: 1000m
          volumeMounts:
            - name: data
              mountPath: /var/lib/traefikee
            - name: sockets
              mountPath: /var/run/traefikee
            - name: staticconfig
              mountPath: /etc/traefikee
          command:
            - "/traefikee"
            - "controller"
            - "--name=$(POD_NAME)"
            - "--advertise=$(POD_NAME).default-ctrl-svc.$(POD_NAMESPACE):4242"
            - "--discovery.dns.bootstrapexpected=1"
            - "--discovery.dns.domain=default-ctrl-svc.$(POD_NAMESPACE)"
            - "--jointoken.kubernetes.prefix=default"
            - "--jointoken.kubernetes.namespace=default"
            - "--license=$(LICENSE)"
            - "--api.autocerts"
            - "--configFile=/etc/traefikee/static.yaml"
            - "--log.level="
            - "--log.filepath="
            - "--log.format="
            - "--plugin.url=https://default-plugin-registry-svc.default.svc.cluster.local"
            - "--plugin.token=$(PLUGIN_REGISTRY_TOKEN)"
      volumes:
        - name: sockets
          emptyDir: {}
        - name: staticconfig
          configMap:
            name: default-static-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
