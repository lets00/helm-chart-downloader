---
# Source: influxdb/templates/influxdb/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: influxdb
  labels:
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-2.2.11
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  admin-user-password: "Y2xvdWQxNjg4"
  admin-user-token: "UVNUejdNaGd1TTA3SXdPVm9BUmc="
---
# Source: influxdb/templates/relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: influxdb-relay
  labels:
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-2.2.11
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: relay
data:
  relay.toml: |-
    
    [[http]]
    # Name of the HTTP server, used for display purposes only.
    name = "relay-server"
    
    # TCP address to bind to, for HTTP server.
    bind-addr = "0.0.0.0:9096"
    
    # Array of InfluxDB(TM) instances to use as backends for Relay.
    output = [
        { name="influxdb-0", location="http://influxdb-0.influxdb-headless.default.svc.cluster.local:8086/write", timeout="10s"},
    ]
---
# Source: influxdb/templates/influxdb/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: influxdb-headless
  labels:
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-2.2.11
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: influxdb
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 8086
      targetPort: http
      protocol: TCP
      name: http
    - port: 8088
      targetPort: rpc
      protocol: TCP
      name: rpc
  selector:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/component: influxdb
---
# Source: influxdb/templates/influxdb/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  labels:
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-2.2.11
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: influxdb
spec:
  type: ClusterIP
  ports:
    - port: 8086
      targetPort: http
      protocol: TCP
      name: http
      nodePort: null
    - port: 8088
      targetPort: rpc
      protocol: TCP
      name: rpc
      nodePort: null
  selector:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/component: influxdb
---
# Source: influxdb/templates/relay/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: influxdb-relay
  labels:
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-2.2.11
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: relay
spec:
  type: ClusterIP
  ports:
    - port: 9096
      targetPort: http
      protocol: TCP
      name: http
      nodePort: null
  selector:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/component: relay
---
# Source: influxdb/templates/relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb-relay
  labels:
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-2.2.11
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: relay
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb
      app.kubernetes.io/component: relay
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb
        helm.sh/chart: influxdb-2.2.11
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: relay
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: influxdb
                    app.kubernetes.io/component: relay
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: relay
          image: registry.cn-beijing.aliyuncs.com/kubegemsapp/influxdb-relay:0.20200717.0-scratch-r7
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - /influxdb-relay
          args:
            - -config
            - /conf/relay.toml
          ports:
            - name: http
              containerPort: 9096
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: http
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: http
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: relay-config
              mountPath: /conf
      volumes:
        - name: relay-config
          configMap:
            name: influxdb-relay
---
# Source: influxdb/templates/influxdb/statefulset-high-availability.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: influxdb
  labels:
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-2.2.11
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: influxdb
spec:
  serviceName: influxdb-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb
      app.kubernetes.io/component: influxdb
  template:
    metadata:
      labels:
        
        app.kubernetes.io/name: influxdb
        helm.sh/chart: influxdb-2.2.11
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: influxdb
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: influxdb
                    app.kubernetes.io/component: influxdb
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: influxdb
          image: registry.cn-beijing.aliyuncs.com/kubegemsapp/influxdb:2.0.7-debian-10-r10
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: INFLUXDB_HTTP_AUTH_ENABLED
              value: "true"
            - name: INFLUXDB_CREATE_USER_TOKEN
              value: "no"
            - name: INFLUXDB_ADMIN_USER
              value: "gems"
            - name: INFLUXDB_ADMIN_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: influxdb
                  key: admin-user-password
            - name: INFLUXDB_ADMIN_USER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: influxdb
                  key: admin-user-token
            - name: INFLUXDB_ADMIN_BUCKET
              value: "primary"
            - name: INFLUXDB_ADMIN_ORG
              value: "primary"
          ports:
            - name: http
              containerPort: 8086
              protocol: TCP
            - name: rpc
              containerPort: 8088
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 180
            periodSeconds: 45
            successThreshold: 1
            timeoutSeconds: 30
            exec:
              command:
                - bash
                - -c
                - |
                  . /opt/bitnami/scripts/libinfluxdb.sh

                  influxdb_env
                  export INFLUX_USERNAME="$INFLUXDB_ADMIN_USER"
                  export INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"

                  branch=$(influxdb_branch)

                  if [[ "$branch" = "2" ]]; then
                      timeout 29s influx --host http://$POD_IP:8086 ping
                  else
                      timeout 29s influx -host $POD_IP -port 8086 -execute "SHOW DATABASES"
                  fi
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 45
            successThreshold: 1
            timeoutSeconds: 30
            exec:
              command:
                - bash
                - -c
                - |
                  . /opt/bitnami/scripts/libinfluxdb.sh

                  influxdb_env
                  export INFLUX_USERNAME="$INFLUXDB_ADMIN_USER"
                  export INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"

                  branch=$(influxdb_branch)

                  if [[ "$branch" = "2" ]]; then
                      timeout 29s influx --host http://$POD_IP:8086 ping
                  else
                      timeout 29s influx -host $POD_IP -port 8086 -execute "SHOW DATABASES"
                  fi
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/influxdb
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
        storageClassName: local-path
