---
# Source: cluster-auth-agent/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: default
---
# Source: cluster-auth-agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-cluster-auth-agent
  namespace: default
  labels:
    helm.sh/chart: cluster-auth-agent-v2024.2.25
    app.kubernetes.io/name: cluster-auth-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: cluster-auth-agent/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cluster-auth-agent
  labels:
    helm.sh/chart: cluster-auth-agent-v2024.2.25
    app.kubernetes.io/name: cluster-auth-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# create/update rbac objects
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs: ["*"]
---
# Source: cluster-auth-agent/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-cluster-auth-agent
  labels:
    helm.sh/chart: cluster-auth-agent-v2024.2.25
    app.kubernetes.io/name: cluster-auth-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-cluster-auth-agent
subjects:
- kind: ServiceAccount
  name: my-release-cluster-auth-agent
  namespace: default
---
# Source: cluster-auth-agent/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-cluster-auth-agent
  namespace: default
  labels:
    helm.sh/chart: cluster-auth-agent-v2024.2.25
    app.kubernetes.io/name: cluster-auth-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: telemetry
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: cluster-auth-agent
    app.kubernetes.io/instance: my-release
---
# Source: cluster-auth-agent/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-auth-agent
  namespace: default
  labels:
    helm.sh/chart: cluster-auth-agent-v2024.2.25
    app.kubernetes.io/name: cluster-auth-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cluster-auth-agent
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cluster-auth-agent
        app.kubernetes.io/instance: my-release
      annotations:
    spec:
      
      serviceAccountName: my-release-cluster-auth-agent
      containers:
      - name: agent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        image: ghcr.io/kluster-manager/cluster-auth:v0.0.1
        imagePullPolicy: IfNotPresent
        args:
        - agent
        - --v=3
        ports:
        - containerPort: 8080
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
      volumes:
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cluster-auth-agent/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: my-release-cluster-auth-agent
  namespace: default
  labels:
    app.kubernetes.io/name: cluster-auth-agent
    app.kubernetes.io/instance: my-release
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: cluster-auth-agent
      app.kubernetes.io/instance: my-release
  endpoints:
  - port: telemetry
    bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    scheme: http
    interval: 10s
