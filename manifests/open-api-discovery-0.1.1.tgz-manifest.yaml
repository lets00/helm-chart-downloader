---
# Source: open-api-discovery/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-open-api-discovery
  labels:
    helm.sh/chart: open-api-discovery-0.1.1
    app.kubernetes.io/name: open-api-discovery
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: open-api-discovery/templates/provider_config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: open-api-discovery-providers
data:
  providers.json: "[{\"type\":\"kubernetes\"}]"
---
# Source: open-api-discovery/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: get-services
rules:
  - apiGroups: [ "" ]
    resources: [ "services" ]
    verbs: [ "get", "watch", "list" ]
---
# Source: open-api-discovery/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-open-api-discovery-services
subjects:
  - kind: ServiceAccount
    name: my-release-open-api-discovery
    namespace: default
roleRef:
  kind: ClusterRole
  name: get-services
  apiGroup: rbac.authorization.k8s.io
---
# Source: open-api-discovery/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-open-api-discovery
  labels:
    helm.sh/chart: open-api-discovery-0.1.1
    app.kubernetes.io/name: open-api-discovery
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: open-api-discovery
    app.kubernetes.io/instance: my-release
---
# Source: open-api-discovery/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-open-api-discovery
  labels:
    helm.sh/chart: open-api-discovery-0.1.1
    app.kubernetes.io/name: open-api-discovery
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: open-api-discovery
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: open-api-discovery
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-open-api-discovery
      securityContext:
        {}
      containers:
        - name: open-api-discovery
          securityContext:
            {}
          image: "lukasreining/open-api-schema-collector:0.1.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: OASD_PORT
              value: "3000"
            - name: OASD_DISCOVERY_JSON_PATH
              value: /config/providers.json
          resources:
          volumeMounts:
            - name: providers
              mountPath: /config
      volumes:
        - name: providers
          configMap:
            name: open-api-discovery-providers
