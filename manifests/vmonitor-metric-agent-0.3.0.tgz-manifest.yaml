---
# Source: vmonitor-metric-agent/charts/kube-state-metrics/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-4.20.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.0"
  name: my-release-kube-state-metrics
  namespace: default
imagePullSecrets:
  []
---
# Source: vmonitor-metric-agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-vmonitor-metric-agent
  namespace: default
  labels:
    helm.sh/chart: vmonitor-metric-agent-0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vmonitor-metric-agent
    app.kubernetes.io/instance: my-release
---
# Source: vmonitor-metric-agent/templates/secret-vmonitor.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-vmonitor-metric-agent-secret
  namespace: default
  labels:
    helm.sh/chart: vmonitor-metric-agent-0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vmonitor-metric-agent
    app.kubernetes.io/instance: my-release
type: Opaque
data:
  CLUSTER_NAME: "Y2x1c3Rlci1rOHM="
  IAM_CLIENT_ID: "WU9VUl9JQU1fQ0xJRU5UX0lE"
  IAM_CLIENT_SECRET: "WU9VUl9JQU1fQ0xJRU5UX1NFQ1JFVA=="
  VMONITOR_SITE: "bW9uaXRvcmluZy1hZ2VudC52bmdjbG91ZC52bg=="
  IAM_URL: "aHR0cHM6Ly9pYW1hcGlzLnZuZ2Nsb3VkLnZuL2FjY291bnRzLWFwaS92Mi9hdXRoL3Rva2Vu"
---
# Source: vmonitor-metric-agent/templates/configmap-kube-state.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-vmonitor-metric-agent-kube-state-config
  namespace: default
  labels:
    helm.sh/chart: vmonitor-metric-agent-0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vmonitor-metric-agent
    app.kubernetes.io/instance: my-release
data:
  telegraf.conf: |+
    [global_tags]
      cluster = "${CLUSTER_NAME}"
    [agent]
      collection_jitter = "0s"
      debug = false
      flush_interval = "30s"
      flush_jitter = "1s"
      hostname = ""
      interval = "30s"
      logfile = ""
      metric_batch_size = 1000
      metric_buffer_limit = 100000
      omit_hostname = true
      precision = ""
      quiet = false
      round_interval = true

    ###############################################################################
    #                            PROCESSOR PLUGINS                                #
    ###############################################################################

    

    ###############################################################################
    #                            AGGREGATOR PLUGINS                               #
    ###############################################################################

    

    ###############################################################################
    #                            OUTPUT PLUGINS                                   #
    ###############################################################################

    
    [[outputs.vngcloud_vmonitor]]
      url = "https://${VMONITOR_SITE}:443"
      insecure_skip_verify = false
      data_format = "vngcloud_vmonitor"
      client_id = "${IAM_CLIENT_ID}"
      client_secret = "${IAM_CLIENT_SECRET}"
      iam_url = "${IAM_URL}"
      timeout = "30s"

    ###############################################################################
    #                            INPUT PLUGINS                                    #
    ###############################################################################
    
    [[inputs.kube_inventory]]
      fielddrop = [
        "terminated_reason"
      ]
      insecure_skip_verify = true
      namespace = ""
      resource_include = [
        "nodes",
        "statefulsets",
        "deployments",
        "pods",
        "daemonsets"
      ]
      url = "https://kubernetes.default"
    
    
    [[inputs.prometheus]]
      urls = [
        "http://my-release-kube-state-metrics.default:8080/metrics"
      ]
---
# Source: vmonitor-metric-agent/templates/configmap-node-agent.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-vmonitor-metric-agent-node-config
  namespace: default
  labels:
    helm.sh/chart: vmonitor-metric-agent-0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vmonitor-metric-agent
    app.kubernetes.io/instance: my-release
data:
  telegraf.conf: |+
    [global_tags]
      cluster = "${CLUSTER_NAME}"
    [agent]
      collection_jitter = "0s"
      debug = false
      flush_interval = "30s"
      flush_jitter = "1s"
      hostname = "$HOSTNAME"
      interval = "30s"
      logfile = ""
      metric_batch_size = 1000
      metric_buffer_limit = 100000
      omit_hostname = false
      precision = ""
      quiet = false
      round_interval = true

    ###############################################################################
    #                            PROCESSOR PLUGINS                                #
    ###############################################################################
    
    

    ###############################################################################
    #                            AGGREGATOR PLUGINS                               #
    ###############################################################################

    

    ###############################################################################
    #                            OUTPUT PLUGINS                                   #
    ###############################################################################

    
    [[outputs.vngcloud_vmonitor]]
      url = "https://${VMONITOR_SITE}:443"
      insecure_skip_verify = false
      data_format = "vngcloud_vmonitor"
      client_id = "${IAM_CLIENT_ID}"
      client_secret = "${IAM_CLIENT_SECRET}"
      iam_url = "${IAM_URL}"
      timeout = "30s"

    ###############################################################################
    #                            INPUT PLUGINS                                    #
    ###############################################################################
    
    
    [[inputs.kubernetes]]
      insecure_skip_verify = true
      url = "https://$HOSTIP:10250"
    
    [[inputs.diskio]]
    [[inputs.kernel]]
    [[inputs.mem]]
    [[inputs.net]]
    [[inputs.processes]]
    [[inputs.swap]]
    [[inputs.system]]

    [[inputs.cpu]]
      percpu = true
      totalcpu = true
      collect_cpu_time = false
      report_active = false

    [[inputs.disk]]
      ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
---
# Source: vmonitor-metric-agent/charts/kube-state-metrics/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-4.20.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.0"
  name: my-release-kube-state-metrics
rules:

- apiGroups: ["certificates.k8s.io"]
  resources:
  - certificatesigningrequests
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - cronjobs
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - daemonsets
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - deployments
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - endpoints
  verbs: ["list", "watch"]

- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - limitranges
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - mutatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["list", "watch"]

- apiGroups: ["networking.k8s.io"]
  resources:
  - networkpolicies
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumeclaims
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumes
  verbs: ["list", "watch"]

- apiGroups: ["policy"]
  resources:
    - poddisruptionbudgets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - pods
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - replicasets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - replicationcontrollers
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - resourcequotas
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - secrets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - services
  verbs: ["list", "watch"]

- apiGroups: ["apps"]
  resources:
  - statefulsets
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - storageclasses
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - validatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - volumeattachments
  verbs: ["list", "watch"]
---
# Source: vmonitor-metric-agent/templates/role.yaml
# kubernetes_plugin: Give access to stats endpoints
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-vmonitor-metric-agent-stats-viewer
  labels:
    helm.sh/chart: vmonitor-metric-agent-0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vmonitor-metric-agent
    app.kubernetes.io/instance: my-release
    rbac.authorization.k8s.io/aggregate-view-stats: "true"
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes", "nodes"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["nodes/proxy", "nodes/stats"]
    verbs: ["get", "list", "watch"]
---
# Source: vmonitor-metric-agent/templates/role.yaml
# Define global role with the default system:aggregate-to-view cluster role and the two rules we just created
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-vmonitor-metric-agent
  labels:
    helm.sh/chart: vmonitor-metric-agent-0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vmonitor-metric-agent
    app.kubernetes.io/instance: my-release
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-view-stats: "true"
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
# Source: vmonitor-metric-agent/charts/kube-state-metrics/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-4.20.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.0"
  name: my-release-kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kube-state-metrics
subjects:
- kind: ServiceAccount
  name: my-release-kube-state-metrics
  namespace: default
---
# Source: vmonitor-metric-agent/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-vmonitor-metric-agent-binding
  labels:
    helm.sh/chart: vmonitor-metric-agent-0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vmonitor-metric-agent
    app.kubernetes.io/instance: my-release
subjects:
  - kind: ServiceAccount
    name: my-release-vmonitor-metric-agent
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-vmonitor-metric-agent
---
# Source: vmonitor-metric-agent/charts/kube-state-metrics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kube-state-metrics
  namespace: default
  labels:    
    helm.sh/chart: kube-state-metrics-4.20.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.0"
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: "ClusterIP"
  ports:
  - name: "http"
    protocol: TCP
    port: 8080
    targetPort: 8080
  
  selector:    
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: my-release
---
# Source: vmonitor-metric-agent/templates/daemonset-node-agent.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-release-vmonitor-metric-agent-node
  namespace: default
  labels:
    helm.sh/chart: vmonitor-metric-agent-0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vmonitor-metric-agent
    app.kubernetes.io/instance: my-release
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: vmonitor-metric-agent
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vmonitor-metric-agent
        app.kubernetes.io/instance: my-release
      annotations:
        # Include a hash of the configmap in the pod template
        # This means that if the configmap changes, the deployment will be rolled
        checksum/config: c6b52ddfdfa7f42c2bc7522fa87a1d966928e844538f4ada27321e06de610c5c
        checksum/secret: 35c5e0ad5c61fe284076e03844762ff1bfc8eafedacef674f4be4dc6e0a74499
    spec:
      serviceAccountName: my-release-vmonitor-metric-agent
      containers:
      - name: vmonitor-metric-agent
        image: "vngcloud/vmonitor-metrics-agent:1.26.0-2.0.2"
        imagePullPolicy: "IfNotPresent"
        resources:
          null
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOSTIP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HOST_PROC
          value: /hostfs/proc
        - name: HOST_SYS
          value: /hostfs/sys
        - name: HOST_MOUNT_PREFIX
          value: /hostfs
        envFrom:
          - secretRef:
              name: my-release-vmonitor-metric-agent-secret
        volumeMounts:
        - name: varrunutmpro
          mountPath: /var/run/utmp
          readOnly: true
        - name: machine-id
          mountPath: /etc/machine-id
          readOnly: true
        - name: hostfsro
          mountPath: /hostfs
          readOnly: true
        - name: config
          mountPath: /etc/telegraf
      volumes:
      - name: hostfsro
        hostPath:
          path: /
      - name: varrunutmpro
        hostPath:
          path: /var/run/utmp
      - name: config
        configMap:
          name:  my-release-vmonitor-metric-agent-node-config
      - name: machine-id
        hostPath:
          path: /etc/machine-id
          type: File
      hostNetwork: false
---
# Source: vmonitor-metric-agent/charts/kube-state-metrics/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kube-state-metrics
  namespace: default
  labels:    
    helm.sh/chart: kube-state-metrics-4.20.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.0"
spec:
  selector:
    matchLabels:      
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/instance: my-release
  replicas: 1
  template:
    metadata:
      labels:        
        helm.sh/chart: kube-state-metrics-4.20.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: metrics
        app.kubernetes.io/part-of: kube-state-metrics
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "2.6.0"
    spec:
      hostNetwork: false
      serviceAccountName: my-release-kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsUser: 65534
      containers:
      - name: kube-state-metrics
        args:
        - --port=8080
        - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
        imagePullPolicy: IfNotPresent
        image: "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.6.0"
        ports:
        - containerPort: 8080
          name: "http"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
---
# Source: vmonitor-metric-agent/templates/deployment-kube-state.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-vmonitor-metric-agent-kube-state
  namespace: default
  labels:
    helm.sh/chart: vmonitor-metric-agent-0.3.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vmonitor-metric-agent
    app.kubernetes.io/instance: my-release
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vmonitor-metric-agent
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vmonitor-metric-agent
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/config: d146e25d8b34ad13e9b45848dabfb49b4af2cb5fbee6d92f1bdedb12f4914451
        checksum/secret: 35c5e0ad5c61fe284076e03844762ff1bfc8eafedacef674f4be4dc6e0a74499
    spec:
      serviceAccountName: my-release-vmonitor-metric-agent
      containers:
      - name: vmonitor-metric-agent
        image: "vngcloud/vmonitor-metrics-agent:1.26.0-2.0.2"
        imagePullPolicy: "IfNotPresent"
        resources:
          null
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOSTIP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        envFrom:
          - secretRef:
              name: my-release-vmonitor-metric-agent-secret
        volumeMounts:
        - name: config
          mountPath: /etc/telegraf
        - name: machine-id
          mountPath: /etc/machine-id
        - name: hostfsro
          mountPath: /hostfs
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: my-release-vmonitor-metric-agent-kube-state-config
      - name: machine-id
        hostPath:
          path: /etc/machine-id
          type: File
      - name: hostfsro
        hostPath:
          path: /
