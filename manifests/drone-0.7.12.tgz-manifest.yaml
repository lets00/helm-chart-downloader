---
# Source: drone/templates/serviceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: drone-0.7.12
    app.kubernetes.io/name: drone
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.20.0"
    app.kubernetes.io/managed-by: Helm
  name: my-release-drone
---
# Source: drone/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-drone
type: Opaque
stringData:
  
  DRONE_SERVER_HOST: "your-hostname"
  
  DRONE_SERVER_PROTO: "https"
---
# Source: drone/templates/persistentVolumeClaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-drone
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
---
# Source: drone/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: drone-0.7.12
    app.kubernetes.io/name: drone
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.20.0"
    app.kubernetes.io/managed-by: Helm
  name: my-release-drone
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: drone
    app.kubernetes.io/instance: my-release
---
# Source: drone/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-drone
  labels:
    helm.sh/chart: drone-0.7.12
    app.kubernetes.io/name: drone
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.20.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: drone
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: drone
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: drone
          envFrom:
          - secretRef:
              name: my-release-drone
          securityContext:
            {}
          image: "docker.io/drone/drone:2.20.0"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: http
          ports:
          - name: http
            containerPort: 80
            protocol: TCP
          - name: https
            containerPort: 443
            protocol: TCP
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: http
          resources:
            {}
          volumeMounts:
          - name: data
            mountPath: /data
      securityContext:
        {}
      serviceAccountName: my-release-drone
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: my-release-drone
---
# Source: drone/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-drone-test-connection"
  labels:
    helm.sh/chart: drone-0.7.12
    app.kubernetes.io/name: drone
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.20.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-drone:80']
  restartPolicy: Never
