---
# Source: influxdb/templates/influxdb/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-influxdb
  labels:
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-2.3.10
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  admin-user-password: "VENNdnR3UVJJRQ=="
  admin-user-token: "cFVwSFc5enFtU1JvRnJOajN2VzI="
---
# Source: influxdb/templates/influxdb/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-influxdb
  labels:
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-2.3.10
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: influxdb/templates/influxdb/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-influxdb
  labels:
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-2.3.10
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: influxdb
spec:
  type: ClusterIP
  ports:
    - port: 8086
      targetPort: http
      protocol: TCP
      name: http
      nodePort: null
    - port: 8088
      targetPort: rpc
      protocol: TCP
      name: rpc
      nodePort: null
  selector:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: influxdb
---
# Source: influxdb/templates/influxdb/deployment-standalone.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-influxdb
  labels:
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-2.3.10
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: influxdb
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: influxdb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb
        helm.sh/chart: influxdb-2.3.10
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: influxdb
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: influxdb
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/component: influxdb
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: influxdb
          image: docker.io/bitnami/influxdb:2.0.8-debian-10-r41
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: INFLUXDB_HTTP_AUTH_ENABLED
              value: "true"
            - name: INFLUXDB_CREATE_USER_TOKEN
              value: "no"
            - name: INFLUXDB_ADMIN_USER
              value: "admin"
            - name: INFLUXDB_ADMIN_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-influxdb
                  key: admin-user-password
            - name: INFLUXDB_ADMIN_USER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: my-release-influxdb
                  key: admin-user-token
            - name: INFLUXDB_ADMIN_BUCKET
              value: "primary"
            - name: INFLUXDB_ADMIN_ORG
              value: "primary"
          ports:
            - name: http
              containerPort: 8086
              protocol: TCP
            - name: rpc
              containerPort: 8088
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 180
            periodSeconds: 45
            successThreshold: 1
            timeoutSeconds: 30
            exec:
              command:
                - bash
                - -c
                - |
                  . /opt/bitnami/scripts/libinfluxdb.sh

                  influxdb_env
                  export INFLUX_USERNAME="$INFLUXDB_ADMIN_USER"
                  export INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"

                  branch=$(influxdb_branch)

                  if [[ "$branch" = "2" ]]; then
                      timeout 29s influx --host http://$POD_IP:8086 ping
                  else
                      timeout 29s influx -host $POD_IP -port 8086 -execute "SHOW DATABASES"
                  fi
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 45
            successThreshold: 1
            timeoutSeconds: 30
            exec:
              command:
                - bash
                - -c
                - |
                  . /opt/bitnami/scripts/libinfluxdb.sh

                  influxdb_env
                  export INFLUX_USERNAME="$INFLUXDB_ADMIN_USER"
                  export INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"

                  branch=$(influxdb_branch)

                  if [[ "$branch" = "2" ]]; then
                      timeout 29s influx --host http://$POD_IP:8086 ping
                  else
                      timeout 29s influx -host $POD_IP -port 8086 -execute "SHOW DATABASES"
                  fi
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/influxdb
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: my-release-influxdb
