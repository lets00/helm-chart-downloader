---
# Source: wiki/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-wiki
  labels:
    helm.sh/chart: wiki-2.2.0
    app.kubernetes.io/name: wiki
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: wiki/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-postgresql
  labels:
    app: postgresql
    chart: postgresql-8.10.14
    release: "my-release"
    heritage: "Helm"
type: Opaque
data:
  postgresql-password: "VjRjV21nbTEwUw=="
---
# Source: wiki/charts/postgresql/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql-headless
  labels:
    app: postgresql
    chart: postgresql-8.10.14
    release: "my-release"
    heritage: "Helm"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app: postgresql
    release: "my-release"
---
# Source: wiki/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql
  labels:
    app: postgresql
    chart: postgresql-8.10.14
    release: "my-release"
    heritage: "Helm"
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app: postgresql
    release: "my-release"
    role: master
---
# Source: wiki/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-wiki
  labels:
    helm.sh/chart: wiki-2.2.0
    app.kubernetes.io/name: wiki
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 443
      targetPort: http
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: wiki
    app.kubernetes.io/instance: my-release
---
# Source: wiki/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-wiki
  labels:
    helm.sh/chart: wiki-2.2.0
    app.kubernetes.io/name: wiki
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: wiki
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wiki
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-wiki
      securityContext:
        {}
      containers:
        - name: wiki
          securityContext:
            {}
          image: "requarks/wiki:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_TYPE
              value: postgres
            - name: DB_HOST
              value: my-release-postgresql
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: wiki
            - name: DB_USER
              value: postgres
            - name: DB_SSL
              value: "false"    
            - name: DB_SSL_CA
              value: ""   
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: "postgresql-password"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {}
---
# Source: wiki/charts/postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-postgresql
  labels:
    app: postgresql
    chart: postgresql-8.10.14
    release: "my-release"
    heritage: "Helm"
  annotations:
spec:
  serviceName: my-release-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgresql
      release: "my-release"
      role: master
  template:
    metadata:
      name: my-release-postgresql
      labels:
        app: postgresql
        chart: postgresql-8.10.14
        release: "my-release"
        heritage: "Helm"
        role: master
    spec:      
      securityContext:
        fsGroup: 1001
      containers:
        - name: my-release-postgresql
          image: docker.io/bitnami/postgresql:11.8.0-debian-10-r57
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: "wiki"
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -d "wiki" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -d "wiki" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: 
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: wiki/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-wiki-test-connection"
  labels:
    helm.sh/chart: wiki-2.2.0
    app.kubernetes.io/name: wiki
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-wiki:80']
  restartPolicy: Never
