---
# Source: prometheus-cloudwatch-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: my-release-prometheus-cloudwatch-exporter
  namespace: default
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.25.3
    release: "my-release"
    heritage: "Helm"
---
# Source: prometheus-cloudwatch-exporter/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-prometheus-cloudwatch-exporter
  namespace: default
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.25.3
    heritage: Helm
    release: my-release
type: Opaque
data:
---
# Source: prometheus-cloudwatch-exporter/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-prometheus-cloudwatch-exporter
  namespace: default
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.25.3
    release: my-release
    heritage: Helm
data:
  config.yml: |
    
    # This is the default configuration for prometheus-cloudwatch-exporter
    region: eu-west-1
    period_seconds: 240
    metrics:
    - aws_namespace: AWS/ELB
      aws_metric_name: HealthyHostCount
      aws_dimensions: [AvailabilityZone, LoadBalancerName]
      aws_statistics: [Average]
    
    - aws_namespace: AWS/ELB
      aws_metric_name: UnHealthyHostCount
      aws_dimensions: [AvailabilityZone, LoadBalancerName]
      aws_statistics: [Average]
    
    - aws_namespace: AWS/ELB
      aws_metric_name: RequestCount
      aws_dimensions: [AvailabilityZone, LoadBalancerName]
      aws_statistics: [Sum]
    
    - aws_namespace: AWS/ELB
      aws_metric_name: Latency
      aws_dimensions: [AvailabilityZone, LoadBalancerName]
      aws_statistics: [Average]
    
    - aws_namespace: AWS/ELB
      aws_metric_name: SurgeQueueLength
      aws_dimensions: [AvailabilityZone, LoadBalancerName]
      aws_statistics: [Maximum, Sum]
---
# Source: prometheus-cloudwatch-exporter/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-prometheus-cloudwatch-exporter
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.25.3
    release: my-release
    heritage: Helm
rules:
  - apiGroups: [""]
    resources: ["secrets","configmap"]
    resourceNames: ["my-release-prometheus-cloudwatch-exporter"]
    verbs: ["get"]
---
# Source: prometheus-cloudwatch-exporter/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-prometheus-cloudwatch-exporter
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.25.3
    release: my-release
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: my-release-prometheus-cloudwatch-exporter
    namespace: default
roleRef:
  kind: ClusterRole
  name: my-release-prometheus-cloudwatch-exporter
  apiGroup: rbac.authorization.k8s.io
---
# Source: prometheus-cloudwatch-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-prometheus-cloudwatch-exporter
  namespace: default
  annotations:
    {}
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.25.3
    release: my-release
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9106
      targetPort: container-port
      protocol: TCP
      name: http
  selector:
    app: prometheus-cloudwatch-exporter
    release: my-release
---
# Source: prometheus-cloudwatch-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-prometheus-cloudwatch-exporter
  namespace: default
  labels:
    app: prometheus-cloudwatch-exporter
    chart: prometheus-cloudwatch-exporter-0.25.3
    release: my-release
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-cloudwatch-exporter
      release: my-release
  template:
    metadata:
      labels:
        app: prometheus-cloudwatch-exporter
        release: my-release
      annotations:
        
        checksum/config: 61801ce406c77ce68f84fb91ab5af4a1c53839ac922644f3675d8d67044baa25
        checksum/secrets: 06c47d92e0a57033411a796b3acce5f48b5c67c6627c82594c4dfba6a103c37a
    spec:
      containers:
        - name: prometheus-cloudwatch-exporter
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: "prom/cloudwatch-exporter:v0.15.5"
          imagePullPolicy: IfNotPresent
          ports:
            - name: container-port
              containerPort: 9106
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: container-port
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: container-port
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {}
          volumeMounts:
            - name: vol-prometheus-cloudwatch-exporter
              mountPath: /config
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      serviceAccount: my-release-prometheus-cloudwatch-exporter
      serviceAccountName: my-release-prometheus-cloudwatch-exporter
      volumes:
      - configMap:
          defaultMode: 420
          name: my-release-prometheus-cloudwatch-exporter
        name: vol-prometheus-cloudwatch-exporter
