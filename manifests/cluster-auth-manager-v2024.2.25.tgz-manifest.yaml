---
# Source: cluster-auth-manager/templates/k8s/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-auth-manager
  namespace: default
---
# Source: cluster-auth-manager/templates/k8s/addon.yaml
# Grant cluster-gateway permission to all users' service accounts
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: open-cluster-management:cluster-gateway:proxy
rules:
  - apiGroups:
      - gateway.open-cluster-management.io
    resources:
      - clustergateways
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - gateway.open-cluster-management.io
    resources:
      - clustergateways/health
    verbs: ["get"]
  - apiGroups:
      - gateway.open-cluster-management.io
    resources:
      - clustergateways/proxy
    verbs: ["*"]
---
# Source: cluster-auth-manager/templates/k8s/cluster_role.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: open-cluster-management:cluster-auth:addon-manager
rules:
  - apiGroups: [""]
    resources: ["configmaps", "events", "namespaces", "secrets", "serviceaccounts"]
    verbs: ["get", "list", "watch", "create", "update", "delete", "deletecollection", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews"]
    verbs: ["get", "create"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests", "certificatesigningrequests/approval"]
    verbs: ["get", "list", "watch", "create", "update"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["signers"]
    verbs: ["approve"]
  - apiGroups: ["cluster.open-cluster-management.io"]
    resources: ["managedclusters"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["work.open-cluster-management.io"]
    resources: ["manifestworks"]
    verbs: ["create", "update", "get", "list", "watch", "delete", "deletecollection", "patch"]
  - apiGroups: ["addon.open-cluster-management.io"]
    resources: ["managedclusteraddons/finalizers"]
    verbs: ["update"]
  - apiGroups: [ "addon.open-cluster-management.io" ]
    resources: [ "clustermanagementaddons/finalizers" ]
    verbs: [ "update" ]
  - apiGroups: ["addon.open-cluster-management.io"]
    resources: ["clustermanagementaddons/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["addon.open-cluster-management.io"]
    resources: ["clustermanagementaddons"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["addon.open-cluster-management.io"]
    resources: ["managedclusteraddons"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: ["addon.open-cluster-management.io"]
    resources: ["managedclusteraddons/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["addon.open-cluster-management.io"]
    resources: ["addondeploymentconfigs"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [ "cluster.open-cluster-management.io" ]
    resources: [ "managedclustersets" ]
    verbs: [ "get", "list", "watch" ]
  # cluster gateway
  - apiGroups: [ "gateway.open-cluster-management.io" ]
    resources:
      - "clustergateways/health"
      - "clustergateways/proxy"
    verbs: [ "*" ]
  - apiGroups: [ "authorization.k8s.appscode.com" ]
    resources:
      - "managedclustersetrolebindings"
      - "managedclusterrolebindings"
      - "managedclusterroles"
    verbs: [ "*" ]
  - apiGroups: [ "authentication.open-cluster-management.io" ]
    resources:
      - "managedserviceaccounts"
    verbs: [ "*" ]
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - clusterrolebindings
      - roles
      - rolebindings
    verbs: [ "*" ]
  - apiGroups: [ "authentication.k8s.appscode.com" ]
    resources:
      - users
      - groups
    verbs: [ "*" ]
---
# Source: cluster-auth-manager/templates/k8s/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: open-cluster-management:cluster-auth:addon-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: open-cluster-management:cluster-auth:addon-manager
subjects:
  - kind: ServiceAccount
    name: cluster-auth-manager
    namespace: default
---
# Source: cluster-auth-manager/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: cluster-auth-manager
  namespace: default
  labels:
    helm.sh/chart: cluster-auth-manager-v2024.2.25
    app.kubernetes.io/name: cluster-auth-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cluster-auth-manager
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        helm.sh/chart: cluster-auth-manager-v2024.2.25
        app.kubernetes.io/name: cluster-auth-manager
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "v0.0.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccount: cluster-auth-manager
      automountServiceAccountToken: true
      containers:
        - name: manager
          image: ghcr.io/kluster-manager/cluster-auth:v0.0.1
          imagePullPolicy: IfNotPresent
          args:
            - manager
            - --registryFQDN=ghcr.io
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NAMESPACE
              value: default
          volumeMounts:
      volumes:
---
# Source: cluster-auth-manager/templates/k8s/addon.yaml
apiVersion: addon.open-cluster-management.io/v1alpha1
kind: ClusterManagementAddOn
metadata:
  name: cluster-auth
  annotations:
    addon.open-cluster-management.io/lifecycle: "addon-manager"
spec:
  addOnMeta:
    displayName: cluster-auth-manager
    description: Cluster Auth Manager
  installStrategy:
    type: Placements
    placements:
      - name: global
        namespace: default
---
# Source: cluster-auth-manager/templates/k8s/addon.yaml
apiVersion: cluster.open-cluster-management.io/v1beta2
kind: ManagedClusterSetBinding
metadata:
  name: global
  namespace: default
spec:
  clusterSet: global
---
# Source: cluster-auth-manager/templates/k8s/addon.yaml
apiVersion: work.open-cluster-management.io/v1alpha1
kind: ManifestWorkReplicaSet
metadata:
  name: auth-agent
  namespace: default
spec:
  placementRefs:
    - name: global
  manifestWorkTemplate:
    # deleteOption:
    #   propagationPolicy: SelectivelyOrphan
    #   selectivelyOrphans:
    #     orphaningRules:
    #       - group: ''
    #         name: ocm-ns
    #         namespace: ''
    #         resource: Namespace
    # manifestConfigs:
    #   - feedbackRules:
    #       - jsonPaths:
    #           - name: lastScheduleTime
    #             path: .status.lastScheduleTime
    #           - name: lastSuccessfulTime
    #             path: .status.lastSuccessfulTime
    #         type: JSONPaths
    #     resourceIdentifier:
    #       group: batch
    #       name: sync-cronjob
    #       namespace: ocm-ns
    #       resource: cronjobs
    workload:
      manifests:
        - apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: open-cluster-management:klusterlet-work:cluster-auth
            labels:
              open-cluster-management.io/aggregate-to-work: "true"  # with this label, the clusterRole will be selected to aggregate
          rules:
            # Allow agent to managed machines
            - apiGroups:
              - rbac.authorization.k8s.io
              resources:
              - clusterroles
              - clusterrolebindings
              - roles
              - rolebindings
              verbs: ["*"]
---
# Source: cluster-auth-manager/templates/k8s/addon.yaml
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: global
  namespace: default
spec:
  clusterSets:
    - global
  tolerations:
    - key: cluster.open-cluster-management.io/unreachable
      operator: Exists
      tolerationSeconds: 600
    - key: cluster.open-cluster-management.io/unavailable
      operator: Exists
      tolerationSeconds: 600
