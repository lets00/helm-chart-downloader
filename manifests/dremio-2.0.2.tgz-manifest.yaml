---
# Source: dremio/templates/zookeeper.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: zk-pdb
spec:
  selector:
    matchLabels:
      app: zk
  maxUnavailable: 1
---
# Source: dremio/templates/dremio-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dremio-config
data:
  core-site.xml: |-
    <?xml version="1.0"?>
    <configuration>
      <!-- If you are editing any content in this file, please remove lines with double curly braces around them -->
    </configuration>
  dremio-env: |
    #
    # Copyright (C) 2017-2018 Dremio Corporation
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
  
    #
    # Dremio environment variables used by Dremio daemon
    #
  
    #
    # Directory where Dremio logs are written
    # Default to $DREMIO_HOME/log
    #
    #DREMIO_LOG_DIR=${DREMIO_HOME}/log
  
    #
    # Send logs to console and not to log files. The DREMIO_LOG_DIR is ignored if set.
    #
    #DREMIO_LOG_TO_CONSOLE=1
  
    #
    # Directory where Dremio pidfiles are written
    # Default to $DREMIO_HOME/run
    #
    #DREMIO_PID_DIR=${DREMIO_HOME}/run
  
    #
    # Max total memory size (in MB) for the Dremio process
    #
    # If not set, default to using max heap and max direct.
    #
    # If both max heap and max direct are set, this is not used
    # If one is set, the other is calculated as difference
    # of max memory and the one that is set.
    #
    #DREMIO_MAX_MEMORY_SIZE_MB=
  
    #
    # Max heap memory size (in MB) for the Dremio process
    #
    # Default to 4096 for server
    #
    #DREMIO_MAX_HEAP_MEMORY_SIZE_MB=4096
  
    #
    # Max direct memory size (in MB) for the Dremio process
    #
    # Default to 8192 for server
    #
    #DREMIO_MAX_DIRECT_MEMORY_SIZE_MB=8192
  
    #
    # Max permanent generation memory size (in MB) for the Dremio process
    # (Only used for Java 7)
    #
    # Default to 512 for server
    #
    #DREMIO_MAX_PERMGEN_MEMORY_SIZE_MB=512
  
    #
    # Garbage collection logging is enabled by default. Set the following
    # parameter to "no" to disable garbage collection logging.
    #
    #DREMIO_GC_LOGS_ENABLED="yes"
  
    #
    # The scheduling priority for the server
    #
    # Default to 0
    #
    # DREMIO_NICENESS=0
    #
  
    #
    # Number of seconds after which the server is killed forcibly it it hasn't stopped
    #
    # Default to 120
    #
    #DREMIO_STOP_TIMEOUT=120
  
    # Extra Java options - shared between dremio and dremio-admin commands
    #
    #DREMIO_JAVA_EXTRA_OPTS=
  
    # Extra Java options - client only (dremio-admin command)
    #
    #DREMIO_JAVA_CLIENT_EXTRA_OPTS=
  
    # Warning: Do not set DREMIO_JAVA_SERVER_EXTRA_OPTS in dremio-env.
    # Please see the values.yaml extraStartParams for setting additional options for Dremio process startup.
  dremio.conf: |
    #
    # Copyright (C) 2017-2018 Dremio Corporation
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
  
    paths: {
      # Local path for dremio to store data.
      local: ${DREMIO_HOME}"/data"
      # Distributed path Dremio data including job results, downloads,
      # uploads, etc
      dist: "pdfs://"${paths.local}"/pdfs"
    }
  
    services: {
      # The services running are controlled via command line options passed in
      # while starting the services via kubernetes. Updating the values listed below will not
      # impact what is running:
      # - coordinator.enabled
      # - coordinator.master.enabled
      # - coordinator.master.embedded-zookeeper.enabled
      # - executor.enabled
      #
      # Other service parameters can be customized via this file.
      executor: {
        cache: {
          path.db: "/opt/dremio/cloudcache/c0"
          pctquota.db: 100
  
          path.fs: ["/opt/dremio/cloudcache/c0"]
          pctquota.fs: [100]
          ensurefreespace.fs: [0]
          
        }
      }
    }
  logback-access.xml: |
    <?xml version="1.0" encoding="UTF-8" ?>
    <!--
  
        Copyright (C) 2017-2018 Dremio Corporation
  
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
  
            http://www.apache.org/licenses/LICENSE-2.0
  
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
  
    -->
    <configuration>
  
      <!-- The following appender is only available if dremio.log.path is defined -->
      <if condition='isDefined("dremio.log.path")'>
        <then>
          <appender name="access-text" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/access.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/archive/access.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
              <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
              </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
  
            <encoder>
              <pattern>combined</pattern>
            </encoder>
          </appender>
  
          <appender-ref ref="access-text" />
        </then>
        <else>
          <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
              <pattern>combined</pattern>
            </encoder>
          </appender>
  
          <appender-ref ref="console"/>
        </else>
      </if>
    </configuration>
  logback-admin.xml: |
    <?xml version="1.0" encoding="UTF-8" ?>
    <!--
  
        Copyright (C) 2017-2018 Dremio Corporation
  
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
  
            http://www.apache.org/licenses/LICENSE-2.0
  
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
  
    -->
    <configuration>
      <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
          <pattern>%msg%n%ex{0}%n</pattern>
        </encoder>
      </appender>
  
  
      <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
          <level>${dremio.admin.log.verbosity:-OFF}</level>
        </filter>
        <encoder>
          <pattern>%date{ISO8601} [%thread] %-5level %logger{30} - %msg%n</pattern>
        </encoder>
      </appender>
  
  
      <if condition='isDefined("dremio.admin.log.path")'>
        <then>
          <appender name="ADMINLOG" class="ch.qos.logback.core.FileAppender">
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
              <level>${dremio.admin.log.verbosity:-OFF}</level>
            </filter>
            <file>${dremio.admin.log.path}</file>
            <encoder>
              <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
          </appender>
        </then>
      </if>
  
      <logger name="admin" level="INFO" additivity="true">
        <appender-ref ref="STDOUT"/>
      </logger>
  
      <root>
        <level value="${dremio.admin.log.verbosity:-OFF}"/>
        <if condition='isDefined("dremio.admin.log.path")'>
          <then>
            <appender-ref ref="ADMINLOG"/>
          </then>
          <else>
            <appender-ref ref="CONSOLE"/>
          </else>
        </if>
      </root>
  
    </configuration>
  logback.xml: |
    <?xml version="1.0" encoding="UTF-8" ?>
    <!--
  
        Copyright (C) 2017-2018 Dremio Corporation
  
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
  
            http://www.apache.org/licenses/LICENSE-2.0
  
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
  
    -->
    <configuration>
      <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator"/>
      <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
          <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
      </appender>
  
      <!-- The following appenders are only available if dremio.log.path is defined -->
      <if condition='isDefined("dremio.log.path")'>
        <then>
          <appender name="text" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/server.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/archive/server.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
              <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
              </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
  
            <encoder>
              <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
          </appender>
  
          <appender name="metadata_refresh" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/metadata_refresh.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/archive/metadata_refresh.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
            </rollingPolicy>
  
            <encoder>
              <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
          </appender>
  
          <appender name="json" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/json/server.json</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/json/archive/server.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
              <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
              </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
  
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
              <providers>
                <pattern><pattern>{"timestamp": "%date{ISO8601}", "host":"${HOSTNAME}" }</pattern></pattern>
                <threadName><fieldName>thread</fieldName></threadName>
                <logLevel><fieldName>levelName</fieldName></logLevel>
                <logLevelValue><fieldName>levelValue</fieldName></logLevelValue>
                <loggerName><fieldName>logger</fieldName></loggerName>
                <message><fieldName>message</fieldName></message>
                <arguments />
                <stackTrace />
              </providers>
            </encoder>
          </appender>
  
          <appender name="query" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/queries.json</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/archive/queries.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
              <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
              </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
  
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
              <providers>
                <arguments />
              </providers>
            </encoder>
          </appender>
  
          <appender name="audit" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/audit.json</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/archive/audit.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
              <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
              </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
  
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
              <providers>
                <pattern><pattern>{"timestamp": "%date{ISO8601}"}</pattern></pattern>
                <arguments />
              </providers>
            </encoder>
          </appender>
  
          <appender name="tracker" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${dremio.log.path}/tracker.json</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
              <fileNamePattern>${dremio.log.path}/archive/tracker.%d{yyyy-MM-dd}.%i.json.gz</fileNamePattern>
              <maxHistory>30</maxHistory>
              <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                  <maxFileSize>100MB</maxFileSize>
              </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
  
            <encoder>
              <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
          </appender>
  
        </then>
      </if>
  
      <logger name="com.dremio">
        <level value="${dremio.log.level:-info}"/>
      </logger>
  
      <logger name="query.logger">
        <level value="${dremio.log.level:-info}"/>
        <if condition='isDefined("dremio.log.path")'>
          <then>
            <appender-ref ref="query"/>
          </then>
        </if>
      </logger>
  
      <logger name="audit.logger">
        <level value="${dremio.log.level:-info}"/>
        <if condition='isDefined("dremio.log.path")'>
          <then>
            <appender-ref ref="audit"/>
          </then>
        </if>
      </logger>
  
      <logger name="tracker.logger">
          <level value="{dremio.log.level: -info}"/>
          <if condition='isDefined("dremio.log.path")'>
              <then>
                  <additivity value ="false"/>
                  <appender-ref ref="tracker"/>
              </then>
          </if>
      </logger>
  
      <logger name="com.dremio.exec.catalog.SourceMetadataManager" additivity="false">
        <level value="${dremio.log.level:-info}"/>
        <if condition='isDefined("dremio.log.path")'>
          <then>
            <appender-ref ref="metadata_refresh"/>
          </then>
        </if>
      </logger>
  
      <logger name="com.dremio.exec.store.hive.HiveClient" additivity="false">
        <level value="${dremio.log.level:-info}"/>
        <if condition='isDefined("dremio.log.path")'>
          <then>
            <appender-ref ref="metadata_refresh"/>
          </then>
        </if>
      </logger>
  
      <logger name="hive.deprecated.function.warning.logger" level="warn">
        <if condition='isDefined("dremio.log.path")'>
          <then>
            <additivity value ="false"/>
            <appender name="text" class="ch.qos.logback.core.rolling.RollingFileAppender">
              <file>${dremio.log.path}/hive.deprecated.function.warning.log</file>
              <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${dremio.log.path}/archive/hive.deprecated.function.warning.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
                <maxHistory>30</maxHistory>
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                  <maxFileSize>100MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
              </rollingPolicy>
  
              <encoder>
                <pattern>%date{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
              </encoder>
            </appender>
          </then>
        </if>
      </logger>
  
      <logger name="org.apache.hadoop.hdfs.DFSClient">
        <level value="warn"/>
      </logger>
  
      <root>
        <level value="${dremio.log.root.level:-error}"/>
        <if condition='isDefined("dremio.log.path")'>
          <then>
            <appender-ref ref="text"/>
            <appender-ref ref="json"/>
          </then>
          <else>
            <appender-ref ref="console"/>
          </else>
        </if>
      </root>
  
    </configuration>
---
# Source: dremio/templates/dremio-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dremio-hive2-config
data:
  README.md: |-
    ### Hive 2 Configuration Files
    This directory is used to store Hive 2 configuration files to be deployed to Dremio.
---
# Source: dremio/templates/dremio-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dremio-hive3-config
data:
  README.md: |-
    ### Hive 3 Configuration Files
    This directory is used to store Hive 3 configuration files to be deployed to Dremio.
---
# Source: dremio/templates/dremio-service-client.yaml
apiVersion: v1
kind: Service
metadata:
  name: dremio-client
  labels:
    app: dremio-client
    
  
spec:
  ports:
  - port: 31010
    targetPort: client
    name: client
  - port: 9047
    targetPort: web
    name: web
  - port: 32010
    targetPort: flight
    name: flight
  selector:
    app: dremio-coordinator
  type: LoadBalancer
---
# Source: dremio/templates/dremio-service-client.yaml
apiVersion: v1
kind: Service
metadata:
  name: dremio-cluster-pod
spec:
  ports:
  - port: 9999
  clusterIP: None
  selector:
    role: dremio-cluster-pod
---
# Source: dremio/templates/zookeeper.yaml
apiVersion: v1
kind: Service
metadata:
  name: zk-hs
  labels:
    app: zk
spec:
  ports:
  - port: 2181
    name: client
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zk
---
# Source: dremio/templates/zookeeper.yaml
apiVersion: v1
kind: Service
metadata:
  name: zk-cs
  labels:
    app: zk
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: zk
---
# Source: dremio/templates/dremio-coordinator.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dremio-coordinator
  
  
spec:
  serviceName: "dremio-cluster-pod"
  replicas: 0
  podManagementPolicy: "Parallel"
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dremio-coordinator
  template:
    metadata:
      labels:
        app: dremio-coordinator
        role: dremio-cluster-pod
        
      annotations:
        dremio-configmap/checksum: de4726fe57f2e1250cbf29fbffd4b3bd36c6ae27d4776abc59103d3b0a4a725c
        
    spec:
      
      terminationGracePeriodSeconds: 120
      
      
      containers:
      - name: dremio-coordinator
        image: dremio/dremio-oss:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 15
            memory: 122800M
        volumeMounts:
        - name: dremio-config
          mountPath: /opt/dremio/conf
        - name: dremio-hive2-config
          mountPath: /opt/dremio/plugins/connectors/hive2.d
        - name: dremio-hive2-config
          mountPath: /opt/dremio/plugins/connectors/hive2-ee.d
        - name: dremio-hive3-config
          mountPath: /opt/dremio/plugins/connectors/hive3.d
        - name: dremio-hive3-config
          mountPath: /opt/dremio/plugins/connectors/hive3-ee.d
        
        env:
        - name: DREMIO_MAX_HEAP_MEMORY_SIZE_MB
          value: "16384"
        - name: DREMIO_MAX_DIRECT_MEMORY_SIZE_MB
          value: "106416"
        - name: DREMIO_JAVA_SERVER_EXTRA_OPTS
          value: >-
            -Dzookeeper=zk-hs:2181
            -Dservices.coordinator.enabled=true
            -Dservices.coordinator.master.enabled=false
            -Dservices.coordinator.master.embedded-zookeeper.enabled=false
            -Dservices.executor.enabled=false
            -Dservices.conduit.port=45679
        - name: AWS_CREDENTIAL_PROFILES_FILE
          value: "/opt/dremio/aws/credentials"
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: "/opt/dremio/aws/credentials"
        command: ["/opt/dremio/bin/dremio"]
        args: ["start-fg"]
        ports:
        - containerPort: 31010
          name: client
        - containerPort: 32010
          name: flight
        - containerPort: 45678
          name: server-fabric
        - containerPort: 45679
          name: server-conduit
        readinessProbe:
          httpGet:
            path: /
            port: 9047
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
      
      - name: wait-for-dremio-master
        image: busybox
        command:  ["sh", "-c", "until nc -z dremio-client 9047 > /dev/null; do echo Waiting for Dremio master.; sleep 2; done;"]
      volumes:
      - name: dremio-config
        configMap:
          name: dremio-config
      - name: dremio-hive2-config
        configMap:
          name: dremio-hive2-config
      - name: dremio-hive3-config
        configMap:
          name: dremio-hive3-config
---
# Source: dremio/templates/dremio-executor.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dremio-executor
  
  
spec:
  serviceName: "dremio-cluster-pod"
  replicas: 3
  podManagementPolicy: "Parallel"
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: dremio-executor
  template:
    metadata:
      labels:
        app: dremio-executor
        role: dremio-cluster-pod
        
      annotations:
        dremio-configmap/checksum: de4726fe57f2e1250cbf29fbffd4b3bd36c6ae27d4776abc59103d3b0a4a725c
        
    spec:
      
      terminationGracePeriodSeconds: 120
      
      
      containers:
      - name: dremio-executor
        image: dremio/dremio-oss:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 15
            memory: 122800M
        volumeMounts:
        - name: dremio-default-executor-volume
          mountPath: /opt/dremio/data
        - name: dremio-config
          mountPath: /opt/dremio/conf
        - name: dremio-hive2-config
          mountPath: /opt/dremio/plugins/connectors/hive2.d
        - name: dremio-hive2-config
          mountPath: /opt/dremio/plugins/connectors/hive2-ee.d
        - name: dremio-hive3-config
          mountPath: /opt/dremio/plugins/connectors/hive3.d
        - name: dremio-hive3-config
          mountPath: /opt/dremio/plugins/connectors/hive3-ee.d
        
        - name: dremio-default-executor-c3-0
          mountPath: /opt/dremio/cloudcache/c0
        
        env:
        - name: DREMIO_MAX_HEAP_MEMORY_SIZE_MB
          value: "8192"
        - name: DREMIO_MAX_DIRECT_MEMORY_SIZE_MB
          value: "114608"
        - name: DREMIO_JAVA_SERVER_EXTRA_OPTS
          value: >-
            -Dzookeeper=zk-hs:2181
            -Dservices.coordinator.enabled=false
            -Dservices.coordinator.master.enabled=false
            -Dservices.coordinator.master.embedded-zookeeper.enabled=false
            -Dservices.executor.enabled=true
            -Dservices.conduit.port=45679
            -Dservices.node-tag=default
        - name: AWS_CREDENTIAL_PROFILES_FILE
          value: "/opt/dremio/aws/credentials"
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: "/opt/dremio/aws/credentials"
        command: ["/opt/dremio/bin/dremio"]
        args: ["start-fg"]
        ports:
        - containerPort: 45678
          name: server-fabric
        - containerPort: 45679
          name: server-conduit
      initContainers:
      
      - name: chown-data-directory
        image: dremio/dremio-oss:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: dremio-default-executor-volume
          mountPath: /opt/dremio/data
        command: ["chown"]
        args: ["dremio:dremio", "/opt/dremio/data"]
      - name: chown-cloudcache-directory
        image: dremio/dremio-oss:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
        volumeMounts:
        
        - name: dremio-default-executor-c3-0
          mountPath: /opt/dremio/cloudcache/c0
        command: ["bash"]
        args: ["-c", "chown dremio:dremio /opt/dremio/cloudcache/c*"]
      - name: wait-for-zookeeper
        image: busybox
        command:  ["sh", "-c", "until ping -c 1 -W 1 zk-hs > /dev/null; do echo Waiting for Zookeeper to be ready.; sleep 2; done;"]
      volumes:
      - name: dremio-config
        configMap:
          name: dremio-config
      - name: dremio-hive2-config
        configMap:
          name: dremio-hive2-config
      - name: dremio-hive3-config
        configMap:
          name: dremio-hive3-config
      
      
  volumeClaimTemplates:
  - metadata:
      name: dremio-default-executor-volume
    spec:
      accessModes: ["ReadWriteOnce"]
      
      resources:
        requests:
          storage: 128Gi
  
  - metadata:
      name: dremio-default-executor-c3-0
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 100Gi
---
# Source: dremio/templates/dremio-master.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dremio-master
  
  
spec:
  serviceName: "dremio-cluster-pod"
  podManagementPolicy: "Parallel"
  replicas: 1
  selector:
    matchLabels:
      app: dremio-coordinator
  template:
    metadata:
      labels:
        app: dremio-coordinator
        role: dremio-cluster-pod
        
      annotations:
        dremio-configmap/checksum: de4726fe57f2e1250cbf29fbffd4b3bd36c6ae27d4776abc59103d3b0a4a725c
        
    spec:
      
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - dremio-coordinator
              topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 120
      
      
      containers:
      - name: dremio-master-coordinator
        image: dremio/dremio-oss:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 15
            memory: 122800M
        volumeMounts:
        - name: dremio-master-volume
          mountPath: /opt/dremio/data
        - name: dremio-config
          mountPath: /opt/dremio/conf
        - name: dremio-hive2-config
          mountPath: /opt/dremio/plugins/connectors/hive2.d
        - name: dremio-hive2-config
          mountPath: /opt/dremio/plugins/connectors/hive2-ee.d
        - name: dremio-hive3-config
          mountPath: /opt/dremio/plugins/connectors/hive3.d
        - name: dremio-hive3-config
          mountPath: /opt/dremio/plugins/connectors/hive3-ee.d
        
        env:
        - name: DREMIO_MAX_HEAP_MEMORY_SIZE_MB
          value: "16384"
        - name: DREMIO_MAX_DIRECT_MEMORY_SIZE_MB
          value: "106416"
        - name: DREMIO_JAVA_SERVER_EXTRA_OPTS
          value: >-
            -Dzookeeper=zk-hs:2181
            -Dservices.coordinator.enabled=true
            -Dservices.coordinator.master.enabled=true
            -Dservices.coordinator.master.embedded-zookeeper.enabled=false
            -Dservices.executor.enabled=false
            -Dservices.conduit.port=45679
        - name: AWS_CREDENTIAL_PROFILES_FILE
          value: "/opt/dremio/aws/credentials"
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: "/opt/dremio/aws/credentials"
        command: ["/opt/dremio/bin/dremio"]
        args:
        - "start-fg"
        ports:
        - containerPort: 9047
          name: web
        - containerPort: 31010
          name: client
        - containerPort: 32010
          name: flight
        - containerPort: 45678
          name: server-fabric
        - containerPort: 45679
          name: server-conduit
        readinessProbe:
          httpGet:
            path: /
            port: 9047
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
      
      - name: start-only-one-dremio-master
        image: busybox
        command: ["sh", "-c", "INDEX=${HOSTNAME##*-}; if [ $INDEX -ne 0 ]; then echo Only one master should be running.; exit 1; fi; "]
      - name: wait-for-zookeeper
        image: busybox
        command:  ["sh", "-c", "until ping -c 1 -W 1 zk-hs > /dev/null; do echo Waiting for Zookeeper to be ready.; sleep 2; done;"]
      - name: chown-data-directory
        image: dremio/dremio-oss:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: dremio-master-volume
          mountPath: /opt/dremio/data
        command: ["chown"]
        args:
        - "dremio:dremio"
        - "/opt/dremio/data"
      - name: upgrade-task
        image: dremio/dremio-oss:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: dremio-master-volume
          mountPath: /opt/dremio/data
        - name: dremio-config
          mountPath: /opt/dremio/conf
        command: ["/opt/dremio/bin/dremio-admin"]
        args:
        - "upgrade"
      volumes:
      - name: dremio-config
        configMap:
          name: dremio-config
      - name: dremio-hive2-config
        configMap:
          name: dremio-hive2-config
      - name: dremio-hive3-config
        configMap:
          name: dremio-hive3-config
      
      
  volumeClaimTemplates:
  - metadata:
      name: dremio-master-volume
    spec:
      accessModes: ["ReadWriteOnce"]
      
      resources:
        requests:
          storage: 128Gi
---
# Source: dremio/templates/zookeeper.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
  
  
spec:
  selector:
    matchLabels:
      app: zk
  serviceName: zk-hs
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: zk
        
      
    spec:
      
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - zk
              topologyKey: "kubernetes.io/hostname"
      
      
      containers:
      - name: kubernetes-zookeeper
        imagePullPolicy: Always
        image: "k8s.gcr.io/kubernetes-zookeeper:1.0-3.4.10"
        resources:
          requests:
            cpu: 0.5
            memory: 1024M
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        command:
        - sh
        - -c
        - "start-zookeeper \
          --servers=3 \
          --data_dir=/var/lib/zookeeper/data \
          --data_log_dir=/var/lib/zookeeper/data/log \
          --conf_dir=/opt/zookeeper/conf \
          --client_port=2181 \
          --election_port=3888 \
          --server_port=2888 \
          --tick_time=2000 \
          --init_limit=10 \
          --sync_limit=5 \
          --heap=924M \
          --max_client_cnxns=60 \
          --snap_retain_count=3 \
          --purge_interval=12 \
          --max_session_timeout=40000 \
          --min_session_timeout=4000 \
          --log_level=INFO"
        readinessProbe:
          exec:
            command: ["sh", "-c", "zookeeper-ready 2181"]
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command: ["sh", "-c", "zookeeper-ready 2181"]
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: ["ReadWriteOnce"]
      
      resources:
        requests:
          storage: 10Gi
