---
# Source: azuredisk-csi-driver/templates/namespace-azure-disk-csi.yaml
{
  "apiVersion": "v1",
  "kind": "Namespace",
  "metadata": {
    "name": "azure-disk-csi",
    "labels": {
      "name": "azure-disk-csi"
    }
  }
}
---
# Source: azuredisk-csi-driver/templates/serviceaccount-csi-azuredisk-controller.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-azuredisk-controller-sa
  namespace: default
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
---
# Source: azuredisk-csi-driver/templates/serviceaccount-csi-azuredisk-node.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-azuredisk-node-sa
  namespace: default
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
---
# Source: azuredisk-csi-driver/templates/serviceaccount-csi-azuredisk-scheduler-extender.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-azuredisk-scheduler-extender-sa
  namespace: default
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-controller.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: csi-azuredisk-controller-config
  namespace: default
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
data:
  config.yaml: |
    apiVersion: disk.csi.azure.com/v1beta2
    kind: AzDiskDriverConfiguration
    controllerConfig:
      disableAVSetNodes: false
      vmType: 
      enabled: true
      leaderElectionNamespace: default
    nodeConfig:
      enablePerfOptimization: true
    cloudConfig:
      secretName: azure-cloud-provider
      secretNamespace: kube-system
      customUserAgent: 
      userAgentSuffix: OSS-helm
      allowEmptyCloudConfig: false
      vmssCacheTTLInSeconds: -1
    objectNamespace: azure-disk-csi
    endpoint: unix:///csi/csi.sock
    metricsAddress: 0.0.0.0:29604
    driverName: disk.csi.azure.com
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-node-windows.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: csi-azuredisk-node-win-config
  namespace: default
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
data:
  config.yaml: |
    apiVersion: disk.csi.azure.com/v1beta2
    kind: AzDiskDriverConfiguration
    nodeConfig:
      volumeAttachLimit: -1
      supportZone: true
      getNodeInfoFromLabels: false
      enabled: true
    cloudConfig:
      secretName: azure-cloud-provider
      secretNamespace: kube-system
      customUserAgent: 
      userAgentSuffix: OSS-helm
      allowEmptyCloudConfig: true
    objectNamespace: azure-disk-csi
    endpoint: unix://C:\csi\csi.sock
    metricsAddress: 0.0.0.0:29605
    driverName: disk.csi.azure.com
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-node.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: csi-azuredisk-node-config
  namespace: default
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
data:
  config.yaml: |
    apiVersion: disk.csi.azure.com/v1beta2
    kind: AzDiskDriverConfiguration
    nodeConfig:
      volumeAttachLimit: -1
      supportZone: true
      enablePerfOptimization: true
      getNodeInfoFromLabels: false
      enabled: true
    cloudConfig:
      secretName: azure-cloud-provider
      secretNamespace: kube-system
      customUserAgent: 
      userAgentSuffix: OSS-helm
      allowEmptyCloudConfig: true
    objectNamespace: azure-disk-csi
    endpoint: unix:///csi/csi.sock
    metricsAddress: 0.0.0.0:29605
    driverName: disk.csi.azure.com
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-scheduler-extender.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: csi-azuredisk-scheduler-extender-config
  namespace: default
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1beta1
    kind: KubeSchedulerConfiguration
    leaderElection:
      leaderElect: true
      leaseDuration: "15s"
      renewDeadline: "10s"
      retryPeriod: "2s"
      resourceLock: leases
      resourceName: csi-azuredisk-scheduler-extender
      resourceNamespace: default
    profiles:
    - schedulerName: csi-azuredisk-scheduler-extender
    extenders:
    - urlPrefix: "http://localhost:8889/azdiskschedulerextender"
      filterVerb: "filter"
      prioritizeVerb: "prioritize"
      weight: 1
      nodeCacheCapable: true
      ignorable: true
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-storage-class.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azuredisk-standard-hdd-lrs
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
provisioner: disk.csi.azure.com
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
parameters:
  skuName: Standard_LRS
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-storage-class.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azuredisk-standard-ssd-lrs
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
provisioner: disk.csi.azure.com
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
parameters:
  skuName: StandardSSD_LRS
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-storage-class.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azuredisk-standard-ssd-lrs-replicas
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
provisioner: disk.csi.azure.com
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
parameters:
  skuName: StandardSSD_LRS
  maxShares: "3"
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-storage-class.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azuredisk-premium-ssd-lrs
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
provisioner: disk.csi.azure.com
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
parameters:
  skuName: Premium_LRS
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-storage-class.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azuredisk-premium-ssd-lrs-replicas
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
provisioner: disk.csi.azure.com
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
parameters:
  skuName: Premium_LRS
  maxShares: "3"
---
# Source: azuredisk-csi-driver/templates/disk.csi.azure.com_azdrivernodes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: azdrivernodes.disk.csi.azure.com
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
spec:
  group: disk.csi.azure.com
  names:
    kind: AzDriverNode
    listKind: AzDriverNodeList
    plural: azdrivernodes
    singular: azdrivernode
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Name of the Node which this AzDriverNode object represents.
      jsonPath: .spec.nodeName
      name: NodeName
      type: string
    - description: Indicates if the azure persistent volume driver is ready for new
        pods which use azure persistent volumes.
      jsonPath: .status.readyForVolumeAllocation
      name: ReadyForVolumeAllocation
      type: boolean
    - description: Represents the time stamp at which azure persistent volume driver
        sent a heatbeat.
      jsonPath: .status.lastHeartbeatTime
      name: LastHeartbeatTime
      type: date
    - description: A brief node status message.
      jsonPath: .status.statusMessage
      name: StatusMessage
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzDriverNode is a representation of a node, where azure CSI driver
          node plug-in runs.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of a AzDriverNode. Required.
            properties:
              nodeName:
                description: Name of the node which this AzDriverNode represents.
                  Required.
                type: string
            required:
            - nodeName
            type: object
          status:
            description: status represents the current state of AzDriverNode. If this
              is nil or empty, clients should prefer other nodes for persistent volume
              allocations or pod places for pods which use azure persistent volumes.
            properties:
              conditions:
                description: Conditions contains an array of generic AzDriver related
                  health conditions These conditions can be used programmatically
                  to take decisions
                items:
                  description: AzDriverCondition defines condition for the AzDriver
                  properties:
                    lastHeartbeatTime:
                      description: Last time we got an update on a given condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of node condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastHeartbeatTime:
                description: LastHeartbeatTime represents the timestamp when a heatbeat
                  was sent by driver node plugin. A recent timestamp means that node-plugin
                  is responsive and is communicating to API server. Clients should
                  not solely reply on LastHeartbeatTime to ascertain node plugin's
                  health state.
                format: date-time
                type: string
              readyForVolumeAllocation:
                description: ReadyForVolumeAllocation tells client whether the node
                  plug-in is ready for volume allocation. If status is not present
                  or ReadyForVolumeAllocation, then clients should prefer other nodes
                  in the clusters for azure persistent volumes\pod placements for
                  pods with azure disks.
                type: boolean
              statusMessage:
                description: StatusMessage is a brief status message regarding nodes
                  health This field should not be used for any decision making in
                  code It is for display/debug purpose only For code logic dependency,
                  use Conditions filed
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Name of the Node which this AzDriverNode object represents.
      jsonPath: .spec.nodeName
      name: NodeName
      type: string
    - description: Indicates if the azure persistent volume driver is ready for new
        pods which use azure persistent volumes.
      jsonPath: .status.readyForVolumeAllocation
      name: ReadyForVolumeAllocation
      type: boolean
    - description: Represents the time stamp at which azure persistent volume driver
        sent a heatbeat.
      jsonPath: .status.lastHeartbeatTime
      name: LastHeartbeatTime
      type: date
    - description: A brief node status message.
      jsonPath: .status.statusMessage
      name: StatusMessage
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: AzDriverNode is a representation of a node, where azure CSI driver
          node plug-in runs.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of a AzDriverNode. Required.
            properties:
              nodeName:
                description: Name of the node which this AzDriverNode represents.
                  Required.
                type: string
            required:
            - nodeName
            type: object
          status:
            description: status represents the current state of AzDriverNode. If this
              is nil or empty, clients should prefer other nodes for persistent volume
              allocations or pod places for pods which use azure persistent volumes.
            properties:
              conditions:
                description: Conditions contains an array of generic AzDriver related
                  health conditions These conditions can be used programmatically
                  to take decisions
                items:
                  description: AzDriverCondition defines condition for the AzDriver
                  properties:
                    lastHeartbeatTime:
                      description: Last time we got an update on a given condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of node condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastHeartbeatTime:
                description: LastHeartbeatTime represents the timestamp when a heatbeat
                  was sent by driver node plugin. A recent timestamp means that node-plugin
                  is responsive and is communicating to API server. Clients should
                  not solely reply on LastHeartbeatTime to ascertain node plugin's
                  health state.
                format: date-time
                type: string
              readyForVolumeAllocation:
                description: ReadyForVolumeAllocation tells client whether the node
                  plug-in is ready for volume allocation. If status is not present
                  or ReadyForVolumeAllocation, then clients should prefer other nodes
                  in the clusters for azure persistent volumes\pod placements for
                  pods with azure disks.
                type: boolean
              statusMessage:
                description: StatusMessage is a brief status message regarding nodes
                  health This field should not be used for any decision making in
                  code It is for display/debug purpose only For code logic dependency,
                  use Conditions filed
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: azuredisk-csi-driver/templates/disk.csi.azure.com_azvolumeattachments.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: azvolumeattachments.disk.csi.azure.com
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
spec:
  group: disk.csi.azure.com
  names:
    kind: AzVolumeAttachment
    listKind: AzVolumeAttachmentList
    plural: azvolumeattachments
    singular: azvolumeattachment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The age of the attachment
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Name of the Node which this AzVolumeAttachment object is attached
        to
      jsonPath: .spec.nodeName
      name: NodeName
      priority: 10
      type: string
    - description: Name of the volume which this AzVolumeAttachment object references
      jsonPath: .spec.volumeName
      name: VolumeName
      priority: 10
      type: string
    - description: Indicates if the volume attachment should be primary attachment
        or not
      jsonPath: .spec.role
      name: RequestedRole
      type: string
    - description: Indicates if the volume attachment is primary attachment or not
      jsonPath: .status.detail.role
      name: Role
      type: string
    - description: Describes the previous volume attachment role
      jsonPath: .status.detail.previous_role
      name: PreviousRole
      priority: 10
      type: string
    - description: Indicates the state of the volume attachment
      jsonPath: .status.state
      name: State
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzVolumeAttachment is a specification for a AzVolumeAttachment
          resource
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of a AzVolumeAttachment. Required.
            properties:
              nodeName:
                type: string
              role:
                description: Role indicates if the volume attachment is replica attachment
                  or not
                type: string
              volume_context:
                additionalProperties:
                  type: string
                type: object
              volume_id:
                type: string
              volumeName:
                type: string
            required:
            - nodeName
            - role
            - volumeName
            - volume_context
            - volume_id
            type: object
          status:
            description: status represents the current state of AzVolumeAttachment.
              includes error, state, and attachment status Required
            properties:
              detail:
                description: Status summarizes the current attachment state of the
                  volume attachment Nil Status indicates that the volume has not yet
                  been attached to the node
                properties:
                  previous_role:
                    description: The previous attachment role.
                    type: string
                  publish_context:
                    additionalProperties:
                      type: string
                    type: object
                  role:
                    description: The current attachment role.
                    type: string
                required:
                - role
                type: object
              error:
                description: Error occurred during attach/detach of volume
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - code
                - message
                type: object
              state:
                description: State shows the current attachment state (whether operations
                  are in progress or not)
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources: {}
  - additionalPrinterColumns:
    - description: The age of the attachment
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Name of the Node which this AzVolumeAttachment object is attached
        to
      jsonPath: .spec.nodeName
      name: NodeName
      priority: 10
      type: string
    - description: Name of the volume which this AzVolumeAttachment object references
      jsonPath: .spec.volumeName
      name: VolumeName
      priority: 10
      type: string
    - description: Indicates if the volume attachment should be primary attachment
        or not
      jsonPath: .spec.role
      name: RequestedRole
      type: string
    - description: Indicates if the volume attachment is primary attachment or not
      jsonPath: .status.detail.role
      name: Role
      type: string
    - description: Describes the previous volume attachment role
      jsonPath: .status.detail.previous_role
      name: PreviousRole
      priority: 10
      type: string
    - description: Indicates the state of the volume attachment
      jsonPath: .status.state
      name: State
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: AzVolumeAttachment is a specification for a AzVolumeAttachment
          resource
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of a AzVolumeAttachment. Required.
            properties:
              nodeName:
                type: string
              role:
                description: Role indicates if the volume attachment is replica attachment
                  or not
                type: string
              volume_context:
                additionalProperties:
                  type: string
                type: object
              volume_id:
                type: string
              volumeName:
                type: string
            required:
            - nodeName
            - role
            - volumeName
            - volume_context
            - volume_id
            type: object
          status:
            description: status represents the current state of AzVolumeAttachment.
              includes error, state, and attachment status
            properties:
              annotation:
                additionalProperties:
                  type: string
                description: Annotations contains additional resource information
                  to guide driver actions
                type: object
              detail:
                description: Status summarizes the current attachment state of the
                  volume attachment Nil Status indicates that the volume has not yet
                  been attached to the node
                properties:
                  previous_role:
                    description: The previous attachment role.
                    type: string
                  publish_context:
                    additionalProperties:
                      type: string
                    type: object
                  role:
                    description: The current attachment role.
                    type: string
                required:
                - role
                type: object
              error:
                description: Error occurred during attach/detach of volume
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - code
                - message
                type: object
              state:
                description: State shows the current attachment state (whether operations
                  are in progress or not)
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: azuredisk-csi-driver/templates/disk.csi.azure.com_azvolumes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: azvolumes.disk.csi.azure.com
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
spec:
  group: disk.csi.azure.com
  names:
    kind: AzVolume
    listKind: AzVolumeList
    plural: azvolumes
    singular: azvolume
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Indicates the state of the volume
      jsonPath: .status.state
      name: State
      type: string
    - description: Indicates the phase of the underlying persistent volume
      jsonPath: .status.detail.phase
      name: Phase
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzVolume is a specification for an AzVolume resource
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of an AzVolume. Required.
            properties:
              accessibilityRequirements:
                description: Specifies where the provisioned volume should be accessible.
                properties:
                  preferred:
                    items:
                      properties:
                        segments:
                          additionalProperties:
                            type: string
                          type: object
                      type: object
                    type: array
                  requisite:
                    items:
                      properties:
                        segments:
                          additionalProperties:
                            type: string
                          type: object
                      type: object
                    type: array
                type: object
              capacityRange:
                description: The capacity of the storage.
                properties:
                  limit_bytes:
                    description: Volume MUST not be bigger than this. This field is
                      OPTIONAL. A value of 0 is equal to an unspecified field value.
                      The value of this field MUST NOT be negative.
                    format: int64
                    type: integer
                  required_bytes:
                    description: Volume MUST be at least this big. This field is OPTIONAL.
                      A value of 0 is equal to an unspecified field value. The value
                      of this field MUST NOT be negative.
                    format: int64
                    type: integer
                type: object
              contentVolumeSource:
                description: The source of initial content for the volume.
                properties:
                  content_source:
                    type: integer
                  content_source_id:
                    type: string
                required:
                - content_source
                - content_source_id
                type: object
              maxMountReplicaCount:
                description: The number of replicas attachments to maintain. This
                  value must be in the range [0..(maxShares - 1)]. If the volume access
                  mode is ReadWriteMany, the default is 0. Otherwise, the default
                  is maxShares - 1.
                type: integer
              parameters:
                additionalProperties:
                  type: string
                description: Parameters for the volume.
                type: object
              secrets:
                additionalProperties:
                  type: string
                description: Secrets for the volume.
                type: object
              volumeCapability:
                description: The capabilities that the volume MUST have.
                items:
                  properties:
                    access_mode:
                      description: This is a REQUIRED field.
                      type: integer
                    access_type:
                      description: Specifies the access type for the volume.
                      type: integer
                    fs_type:
                      description: The filesystem type. This field is OPTIONAL. An
                        empty string is equal to an unspecified field value.
                      type: string
                    mount_flags:
                      description: The mount options that can be used for the volume.
                        This field is OPTIONAL. `mount_flags` MAY contain sensitive
                        information. Therefore, the CO and the Plugin MUST NOT leak
                        this information to untrusted entities. The total size of
                        this repeated field SHALL NOT exceed 4 KiB.
                      items:
                        type: string
                      type: array
                  required:
                  - access_mode
                  - access_type
                  type: object
                type: array
              volumeName:
                description: The disk name.
                type: string
            required:
            - maxMountReplicaCount
            - volumeCapability
            - volumeName
            type: object
          status:
            description: status represents the current state of AzVolume. includes
              error, state, and volume status
            properties:
              detail:
                description: Current status detail of the AzVolume Nil detail indicates
                  that the volume has not been created
                properties:
                  accessible_topology:
                    items:
                      properties:
                        segments:
                          additionalProperties:
                            type: string
                          type: object
                      type: object
                    type: array
                  capacity_bytes:
                    format: int64
                    type: integer
                  content_source:
                    properties:
                      content_source:
                        type: integer
                      content_source_id:
                        type: string
                    required:
                    - content_source
                    - content_source_id
                    type: object
                  node_expansion_required:
                    type: boolean
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                  volume_id:
                    type: string
                required:
                - capacity_bytes
                - node_expansion_required
                - volume_id
                type: object
              error:
                description: Error occurred during creation/deletion of volume
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - code
                - message
                type: object
              persistentVolume:
                description: The name of the PersistentVolume that corresponds to
                  the AzVolume instance.
                type: string
              state:
                description: Current state of underlying volume
                type: string
            required:
            - state
            type: object
        required:
        - spec
        - status
        type: object
    served: true
    storage: false
    subresources: {}
  - additionalPrinterColumns:
    - description: Indicates the state of the volume
      jsonPath: .status.state
      name: State
      type: string
    - description: Indicates the phase of the underlying persistent volume
      jsonPath: .status.detail.phase
      name: Phase
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: AzVolume is a specification for an AzVolume resource
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of an AzVolume. Required.
            properties:
              accessibilityRequirements:
                description: Specifies where the provisioned volume should be accessible.
                properties:
                  preferred:
                    items:
                      properties:
                        segments:
                          additionalProperties:
                            type: string
                          type: object
                      type: object
                    type: array
                  requisite:
                    items:
                      properties:
                        segments:
                          additionalProperties:
                            type: string
                          type: object
                      type: object
                    type: array
                type: object
              capacityRange:
                description: The capacity of the storage.
                properties:
                  limit_bytes:
                    description: Volume MUST not be bigger than this. This field is
                      OPTIONAL. A value of 0 is equal to an unspecified field value.
                      The value of this field MUST NOT be negative.
                    format: int64
                    type: integer
                  required_bytes:
                    description: Volume MUST be at least this big. This field is OPTIONAL.
                      A value of 0 is equal to an unspecified field value. The value
                      of this field MUST NOT be negative.
                    format: int64
                    type: integer
                type: object
              contentVolumeSource:
                description: The source of initial content for the volume.
                properties:
                  content_source:
                    type: integer
                  content_source_id:
                    type: string
                required:
                - content_source
                - content_source_id
                type: object
              maxMountReplicaCount:
                description: The number of replicas attachments to maintain. This
                  value must be in the range [0..(maxShares - 1)]. If the volume access
                  mode is ReadWriteMany, the default is 0. Otherwise, the default
                  is maxShares - 1.
                type: integer
              parameters:
                additionalProperties:
                  type: string
                description: Parameters for the volume.
                type: object
              persistentVolume:
                description: The name of the PersistentVolume that corresponds to
                  the AzVolume instance.
                type: string
              secrets:
                additionalProperties:
                  type: string
                description: Secrets for the volume.
                type: object
              volumeCapability:
                description: The capabilities that the volume MUST have.
                items:
                  properties:
                    access_mode:
                      description: This is a REQUIRED field.
                      type: integer
                    access_type:
                      description: Specifies the access type for the volume.
                      type: integer
                    fs_type:
                      description: The filesystem type. This field is OPTIONAL. An
                        empty string is equal to an unspecified field value.
                      type: string
                    mount_flags:
                      description: The mount options that can be used for the volume.
                        This field is OPTIONAL. `mount_flags` MAY contain sensitive
                        information. Therefore, the CO and the Plugin MUST NOT leak
                        this information to untrusted entities. The total size of
                        this repeated field SHALL NOT exceed 4 KiB.
                      items:
                        type: string
                      type: array
                  required:
                  - access_mode
                  - access_type
                  type: object
                type: array
              volumeName:
                description: The disk name.
                type: string
            required:
            - maxMountReplicaCount
            - volumeCapability
            - volumeName
            type: object
          status:
            description: status represents the current state of AzVolume. includes
              error, state, and volume status
            properties:
              annotation:
                additionalProperties:
                  type: string
                description: Annotations contains additional resource information
                  to guide driver actions
                type: object
              detail:
                description: Current status detail of the AzVolume Nil detail indicates
                  that the volume has not been created
                properties:
                  accessible_topology:
                    items:
                      properties:
                        segments:
                          additionalProperties:
                            type: string
                          type: object
                      type: object
                    type: array
                  capacity_bytes:
                    format: int64
                    type: integer
                  content_source:
                    properties:
                      content_source:
                        type: integer
                      content_source_id:
                        type: string
                    required:
                    - content_source
                    - content_source_id
                    type: object
                  node_expansion_required:
                    type: boolean
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                  volume_id:
                    type: string
                required:
                - capacity_bytes
                - node_expansion_required
                - volume_id
                type: object
              error:
                description: Error occurred during creation/deletion of volume
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  parameters:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - code
                - message
                type: object
              state:
                description: Current state of underlying volume
                type: string
            required:
            - state
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-controller.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: azuredisk-external-provisioner-role
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create", "patch"]
  - apiGroups: ["disk.csi.azure.com"]
    resources: ["azdrivernodes", "azvolumeattachments", "azvolumes"]
    verbs: ["create", "get", "list", "watch", "patch", "update", "delete"]
  - apiGroups: ["disk.csi.azure.com"]
    resources: ["azdrivernodes/status", "azvolumeattachments/status", "azvolumes/status"]
    verbs: ["get", "patch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles"]
    verbs: ["get", "patch", "update"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterrolebindings"]
    verbs: ["get", "patch", "update"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get", "patch", "update"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-controller.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: azuredisk-external-attacher-role
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["csi.storage.k8s.io"]
    resources: ["csinodeinfos"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create", "patch"]
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-controller.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: azuredisk-external-snapshotter-role
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions/status"]
    verbs: ["update"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create", "patch"]
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-controller.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: azuredisk-external-resizer-role
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create", "patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-controller.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-azuredisk-controller-secret-role
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-node.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-azuredisk-node-secret-role
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["disk.csi.azure.com"]
    resources: ["azdrivernodes"]
    verbs: ["create", "get", "list", "watch", "patch", "update", "delete"]
  - apiGroups: ["disk.csi.azure.com"]
    resources: ["azvolumeattachments"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["disk.csi.azure.com"]
    resources: ["azvolumes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["disk.csi.azure.com"]
    resources: ["azdrivernodes/status", "azvolumeattachments/status"]
    verbs: ["get", "patch", "update"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-scheduler-extender.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-azuredisk-scheduler-extender-role
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["create"]
  - apiGroups: [""]
    resourceNames: ["csi-azuredisk-scheduler-extender"]
    resources: ["endpoints"]
    verbs: ["get", "update"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["", "events.k8s.io"]
    resources: ["events"]
    verbs: ["create", "patch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["delete", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["bindings", "pods/binding"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["pods/status"]
    verbs: ["patch", "update"]
  - apiGroups: [""]
    resources: ["replicationcontrollers", "services"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps", "extensions"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews", "tokenreviews"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses", "csinodes", "csistoragecapacities", "csidrivers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    resourceNames: ["csi-azuredisk-scheduler-extender"]
    verbs: ["get", "update"]
  - apiGroups: ["disk.csi.azure.com"]
    resources: ["azdrivernodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["disk.csi.azure.com"]
    resources: ["azvolumeattachments"]
    verbs: ["get", "list", "watch"]
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-controller.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: azuredisk-csi-provisioner-binding
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
subjects:
  - kind: ServiceAccount
    name: csi-azuredisk-controller-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: azuredisk-external-provisioner-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-controller.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: azuredisk-csi-attacher-binding
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
subjects:
  - kind: ServiceAccount
    name: csi-azuredisk-controller-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: azuredisk-external-attacher-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-controller.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: azuredisk-csi-snapshotter-binding
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
subjects:
  - kind: ServiceAccount
    name: csi-azuredisk-controller-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: azuredisk-external-snapshotter-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-controller.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: azuredisk-csi-resizer-role
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
subjects:
  - kind: ServiceAccount
    name: csi-azuredisk-controller-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: azuredisk-external-resizer-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-controller.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-azuredisk-controller-secret-binding
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
subjects:
  - kind: ServiceAccount
    name: csi-azuredisk-controller-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: csi-azuredisk-controller-secret-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-node.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-azuredisk-node-secret-binding
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
subjects:
  - kind: ServiceAccount
    name: csi-azuredisk-node-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: csi-azuredisk-node-secret-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: azuredisk-csi-driver/templates/rbac-csi-azuredisk-scheduler-extender.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-azuredisk-scheduler-extender-role-binding
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-azuredisk-scheduler-extender-role
subjects:
  - kind: ServiceAccount
    name: csi-azuredisk-scheduler-extender-sa
    namespace: default
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-node-windows.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-azuredisk-node-win
  namespace: default
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: csi-azuredisk-node-win
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "azuredisk-csi-driver"
        app.kubernetes.io/version: "v2.0.0-beta.6"
        helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
        app: csi-azuredisk-node-win
    spec:
      serviceAccountName: csi-azuredisk-node-sa
      tolerations:
        - effect: NoSchedule
          key: node.kubernetes.io/os
          operator: Exists
      nodeSelector:
        kubernetes.io/os: windows
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: NotIn
                values:
                - virtual-kubelet
      priorityClassName: system-node-critical      
      containers:
        - name: liveness-probe
          volumeMounts:
            - mountPath: C:\csi
              name: plugin-dir
          image: "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.7.0"
          args:
            - "--csi-address=$(CSI_ENDPOINT)"
            - "--probe-timeout=3s"
            - "--health-port=29603"
            - "--v=2"
          env:
            - name: CSI_ENDPOINT
              value: unix://C:\\csi\\csi.sock
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 40Mi
        - name: node-driver-registrar
          image: "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.5.1"
          args:
            - "--v=2"
            - "--csi-address=$(CSI_ENDPOINT)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          livenessProbe:
            exec:
              command:
                - /csi-node-driver-registrar.exe
                - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
                - --mode=kubelet-registration-probe
            initialDelaySeconds: 60
            timeoutSeconds: 30
          env:
            - name: CSI_ENDPOINT
              value: unix://C:\\csi\\csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: kubelet-dir
              mountPath: "C:\\var\\lib\\kubelet"
            - name: plugin-dir
              mountPath: C:\csi
            - name: registration-dir
              mountPath: C:\registration
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 30m
              memory: 40Mi
        - name: azuredisk
          image: "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v2.0.0-beta.6"
          args:
            - "--v=5"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--config=.\\etc\\csi-azuredisk-node-win\\config.yaml"
          ports:
            - containerPort: 29603
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          env:
            - name: AZURE_CREDENTIAL_FILE
              valueFrom:
                configMapKeyRef:
                  name: azure-cred-file
                  key: path-windows
                  optional: true
            - name: CSI_ENDPOINT
              value: unix://C:\\csi\\csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: AZURE_GO_SDK_LOG_LEVEL
              value: 
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: kubelet-dir
              mountPath: "C:\\var\\lib\\kubelet"
            - name: plugin-dir
              mountPath: C:\csi
            - name: azure-config
              mountPath: C:\k
            - name: csi-azuredisk-node-win-config
              mountPath: /etc/csi-azuredisk-node-win
            - name: csi-proxy-fs-pipe-v1
              mountPath: \\.\pipe\csi-proxy-filesystem-v1
            - name: csi-proxy-disk-pipe-v1
              mountPath: \\.\pipe\csi-proxy-disk-v1
            - name: csi-proxy-volume-pipe-v1
              mountPath: \\.\pipe\csi-proxy-volume-v1
            # these paths are still included for compatibility, they're used
            # only if the node has still the beta version of the CSI proxy
            - name: csi-proxy-fs-pipe-v1beta1
              mountPath: \\.\pipe\csi-proxy-filesystem-v1beta1
            - name: csi-proxy-disk-pipe-v1beta2
              mountPath: \\.\pipe\csi-proxy-disk-v1beta2
            - name: csi-proxy-volume-pipe-v1beta2
              mountPath: \\.\pipe\csi-proxy-volume-v1beta2
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 10m
              memory: 40Mi
      volumes:
        - name: csi-proxy-fs-pipe-v1
          hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1
        - name: csi-proxy-disk-pipe-v1
          hostPath:
            path: \\.\pipe\csi-proxy-disk-v1
        - name: csi-proxy-volume-pipe-v1
          hostPath:
            path: \\.\pipe\csi-proxy-volume-v1
        - name: csi-azuredisk-node-win-config
          configMap:
            name: csi-azuredisk-node-win-config
        # these paths are still included for compatibility, they're used
        # only if the node has still the beta version of the CSI proxy
        - name: csi-proxy-fs-pipe-v1beta1
          hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1beta1
        - name: csi-proxy-disk-pipe-v1beta2
          hostPath:
            path: \\.\pipe\csi-proxy-disk-v1beta2
        - name: csi-proxy-volume-pipe-v1beta2
          hostPath:
            path: \\.\pipe\csi-proxy-volume-v1beta2
        - name: registration-dir
          hostPath:
            path: C:\var\lib\kubelet\plugins_registry\
            type: Directory
        - name: kubelet-dir
          hostPath:
            path: C:\var\lib\kubelet\
            type: Directory
        - name: plugin-dir
          hostPath:
            path: C:\var\lib\kubelet\plugins\disk.csi.azure.com\
            type: DirectoryOrCreate
        - name: azure-config
          hostPath:
            path: C:\k
            type: DirectoryOrCreate
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-node.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-azuredisk-node
  namespace: default
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: csi-azuredisk-node
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "azuredisk-csi-driver"
        app.kubernetes.io/version: "v2.0.0-beta.6"
        helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
        app: csi-azuredisk-node
    spec:
      hostNetwork: true
      dnsPolicy: Default
      serviceAccountName: csi-azuredisk-node-sa
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: NotIn
                values:
                - virtual-kubelet
      priorityClassName: system-node-critical
      tolerations:
        - operator: Exists      
      containers:
        - name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          image: "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.7.0"
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=29603
            - --v=2
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: node-driver-registrar
          image: "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.5.1"
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --v=2
          livenessProbe:
            exec:
              command:
                - /csi-node-driver-registrar
                - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
                - --mode=kubelet-registration-probe
            initialDelaySeconds: 30
            timeoutSeconds: 15
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: azuredisk
          image: "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v2.0.0-beta.6"
          args:
            - "--v=5"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--config=/etc/csi-azuredisk-node/config.yaml"
          ports:
            - containerPort: 29603
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          env:
            - name: AZURE_CREDENTIAL_FILE
              valueFrom:
                configMapKeyRef:
                  name: azure-cred-file
                  key: path
                  optional: true
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: AZURE_GO_SDK_LOG_LEVEL
              value: 
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /etc/kubernetes/
              name: azure-cred
            - mountPath: /dev
              name: device-dir
            - mountPath: /sys/bus/scsi/devices
              name: sys-devices-dir
            - mountPath: /sys/class/
              name: sys-class
            - name: csi-azuredisk-node-config
              mountPath: /etc/csi-azuredisk-node
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 10m
              memory: 20Mi
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/disk.csi.azure.com
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
          name: azure-cred
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /sys/bus/scsi/devices
            type: Directory
          name: sys-devices-dir
        - hostPath:
            path: /sys/class/
            type: Directory
          name: sys-class
        - name: csi-azuredisk-node-config
          configMap:
            name: csi-azuredisk-node-config
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-controller.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: csi-azuredisk-controller
  namespace: default
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: csi-azuredisk-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "azuredisk-csi-driver"
        app.kubernetes.io/version: "v2.0.0-beta.6"
        helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
        app: csi-azuredisk-controller
    spec:
      hostNetwork: true
      serviceAccountName: csi-azuredisk-controller-sa
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/controlplane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists      
      containers:
        - name: csi-provisioner
          image: "mcr.microsoft.com/oss/kubernetes-csi/csi-provisioner:v3.2.0"
          args:
            - "--feature-gates=Topology=true"
            - "--csi-address=$(ADDRESS)"
            - "--v=2"
            - "--timeout=15s"
            - "--leader-election"
            - "--leader-election-namespace=default"
            - "--worker-threads=40"
            - "--extra-create-metadata=true"
            - "--strict-topology=true"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: csi-attacher
          image: "mcr.microsoft.com/oss/kubernetes-csi/csi-attacher:v3.5.0"
          args:
            - "-v=2"
            - "-csi-address=$(ADDRESS)"
            - "-timeout=600s"
            - "-leader-election"
            - "--leader-election-namespace=default"
            - "-worker-threads=500"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: csi-snapshotter
          image: "mcr.microsoft.com/oss/kubernetes-csi/csi-snapshotter:v5.0.1"
          args:
            - "-csi-address=$(ADDRESS)"
            - "-leader-election"
            - "--leader-election-namespace=default"
            - "-v=2"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: csi-resizer
          image: "mcr.microsoft.com/oss/kubernetes-csi/csi-resizer:v1.5.0"
          args:
            - "-csi-address=$(ADDRESS)"
            - "-v=2"
            - "-leader-election"
            - "--leader-election-namespace=default"
            - '-handle-volume-inuse-error=false'
            - '-feature-gates=RecoverVolumeExpansionFailure=true'
            - "-timeout=240s"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: liveness-probe
          image: "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.7.0"
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=29602
            - --v=2
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - name: azuredisk
          image: "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v2.0.0-beta.6"
          args:
            - "--v=5"
            - "--config=/etc/csi-azuredisk-controller/config.yaml"
          ports:
            - containerPort: 29602
              name: healthz
              protocol: TCP
            - containerPort: 29604
              name: metrics
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          env:
            - name: AZURE_CREDENTIAL_FILE
              valueFrom:
                configMapKeyRef:
                  name: azure-cred-file
                  key: path
                  optional: true
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: AZURE_GO_SDK_LOG_LEVEL
              value: 
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /etc/kubernetes/
              name: azure-cred
            - mountPath: /etc/csi-azuredisk-controller
              name: csi-azuredisk-controller-config
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 10m
              memory: 20Mi
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: azure-cred
          hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
        - name: csi-azuredisk-controller-config
          configMap:
            name: csi-azuredisk-controller-config
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-scheduler-extender.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: csi-azuredisk-scheduler-extender
  namespace: default
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
    app: csi-azuredisk-scheduler-extender
spec:
  replicas: 2
  selector:
    matchLabels:
      app: csi-azuredisk-scheduler-extender
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "azuredisk-csi-driver"
        app.kubernetes.io/version: "v2.0.0-beta.6"
        helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
        app: csi-azuredisk-scheduler-extender
    spec:
      serviceAccountName: csi-azuredisk-scheduler-extender-sa
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/controlplane
          operator: Exists
      volumes:
      - name: csi-azuredisk-scheduler-extender-config
        configMap:
          name: csi-azuredisk-scheduler-extender-config
      containers:
      - name: csi-azuredisk-scheduler
        image: "mcr.microsoft.com/oss/kubernetes/kube-scheduler:v1.21.2"
        imagePullPolicy: IfNotPresent
        args:
        - kube-scheduler
        - --config=/azdiskschedulerextender/config.yaml
        - --v=5
        - --feature-gates
        - CSIInlineVolume=true,LocalStorageCapacityIsolation=true,ServiceNodeExclusion=true
        volumeMounts:
        - name: csi-azuredisk-scheduler-extender-config
          mountPath: /azdiskschedulerextender
      - name: csi-azuredisk-scheduler-extender
        image: "mcr.microsoft.com/oss/kubernetes-csi/azdiskschedulerextender-csi:v2.0.0-beta.6"
        imagePullPolicy: IfNotPresent
        args:
        - "--port=8889"
        - "--metrics-address=0.0.0.0:29606"
        - "--driver-object-namespace=azure-disk-csi"
        - "--drivername=disk.csi.azure.com"
        - "--v=5"
        livenessProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 2
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 3
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /ping
            port: extender-port
          failureThreshold: 20
          periodSeconds: 3
        ports:
          - name: extender-port
            containerPort: 8889
            hostPort: 8889
          - name: metrics-port
            containerPort: 29606
            protocol: TCP
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-driver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: disk.csi.azure.com
  annotations:
    csiDriver: "v2.0.0-beta.6"
    snapshot: "v5.0.1"
spec:
  attachRequired: true
  podInfoOnMount: false
  fsGroupPolicy: File
---
# Source: azuredisk-csi-driver/templates/csi-azuredisk-controller-cleanup.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: csi-azuredisk-controller-cleanup
  namespace: default
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "azuredisk-csi-driver"
    app.kubernetes.io/version: "v2.0.0-beta.6"
    helm.sh/chart: "azuredisk-csi-driver-v2.0.0-beta.6"
spec:
  template:
    spec:
      serviceAccountName: csi-azuredisk-controller-sa
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/controlplane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists      
      restartPolicy: Never
      containers:
        - name: delete-azvolume
          image: mcr.microsoft.com/oss/kubernetes/kubectl:v1.21.2
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
            - "-c"
            - "(kubectl delete customresourcedefinition azvolumes.disk.csi.azure.com || true) && (kubectl delete customresourcedefinition azvolumeattachments.disk.csi.azure.com || true) && (kubectl delete customresourcedefinition azdrivernodes.disk.csi.azure.com || true)"
