---
# Source: betydb/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-postgresql
  labels:
    app: postgresql
    chart: postgresql-8.9.9
    release: "my-release"
    heritage: "Helm"
type: Opaque
data:
  postgresql-password: "c3VwZXJzZWNyZXQ="
---
# Source: betydb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-betydb
  labels:
    app.kubernetes.io/name: betydb
    helm.sh/chart: betydb-0.5.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "5.4.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  betyPassword:  "YmV0eQ=="
  secretKey:  "dGhpc2lzbm90YXNlY3JldA=="
---
# Source: betydb/charts/postgresql/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql-headless
  labels:
    app: postgresql
    chart: postgresql-8.9.9
    release: "my-release"
    heritage: "Helm"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app: postgresql
    release: "my-release"
---
# Source: betydb/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql
  labels:
    app: postgresql
    chart: postgresql-8.9.9
    release: "my-release"
    heritage: "Helm"
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app: postgresql
    release: "my-release"
    role: master
---
# Source: betydb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-betydb
  labels:
    app.kubernetes.io/name: betydb
    helm.sh/chart: betydb-0.5.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "5.4.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: bety
      port: 8000
      targetPort: bety
      protocol: TCP
  selector:
    app.kubernetes.io/name: betydb
    app.kubernetes.io/instance: my-release
---
# Source: betydb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-betydb
  labels:
    app.kubernetes.io/name: betydb
    helm.sh/chart: betydb-0.5.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "5.4.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: betydb
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: betydb
        app.kubernetes.io/instance: my-release
    spec:
      initContainers:
        - name: check-postgresql
          image: "ncsa/checks:1.0.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: PGHOST
              value: "my-release-postgresql"
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
            - name: PGDATABASE
              value: "bety"
            - name: PG_TABLE
              value: "sessions"
      containers:
        - name: betydb
          image: "pecan/bety:5.4.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: bety
              containerPort: 8000
              protocol: TCP
          env:
            - name: UNICORN_WORKER_PROCESSES
              value: "1"
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: my-release-betydb
                  key: secretKey
            - name: RAILS_RELATIVE_URL_ROOT
              value: ""
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            - name: PGHOST
              value: "my-release-postgresql"
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
            - name: BETYUSER
              value: "bety"
            - name: BETYPASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-betydb
                  key: betyPassword
            - name: BETYDATABASE
              value: "bety"
            - name: LOCAL_SERVER
              value: "99"
            - name: REMOTE_SERVERS
              value: "0, 1, 2, 5"
          # startupProbe:
          #   httpGet:
          #     path: /
          #     port: bety
          #   failureThreshold: 30
          #   periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: bety
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: bety
          resources:
            {}
---
# Source: betydb/charts/postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-postgresql
  labels:
    app: postgresql
    chart: postgresql-8.9.9
    release: "my-release"
    heritage: "Helm"
  annotations:
spec:
  serviceName: my-release-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgresql
      release: "my-release"
      role: master
  template:
    metadata:
      name: my-release-postgresql
      labels:
        app: postgresql
        chart: postgresql-8.9.9
        release: "my-release"
        heritage: "Helm"
        role: master
    spec:      
      securityContext:
        fsGroup: 1001
      containers:
        - name: my-release-postgresql
          image: docker.io/bitnami/postgresql:11.8.0-debian-10-r4
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 300
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: 
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "20Gi"
---
# Source: betydb/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-betydb-test-connection"
  labels:
    app.kubernetes.io/name: betydb
    helm.sh/chart: betydb-0.5.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "5.4.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['my-release-betydb:8000']
  restartPolicy: Never
---
# Source: betydb/templates/hooks/load-db.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-betydb-load-db
  labels:
    app.kubernetes.io/name: betydb
    helm.sh/chart: betydb-0.5.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "5.4.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": "post-install"
    "helm.sh/hook-delete-policy": "pre-delete"
    "helm.sh/hook-weight": "5"
spec:
  template:
    metadata:
      name: betydb-load-db
      labels:
        app.kubernetes.io/name: betydb
        helm.sh/chart: betydb-0.5.4
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "5.4.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      restartPolicy: Never
      initContainers:
        - name: check-postgresql
          image: "ncsa/checks:1.0.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: PGHOST
              value: "my-release-postgresql"
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
      containers:
        - name: bety-init
          image: "pecan/db:latest"
          imagePullPolicy: Always
          env:
            - name: PGHOST
              value: "my-release-postgresql"
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
            - name: BETYUSER
              value: "bety"
            - name: BETYPASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-betydb
                  key: betyPassword
            - name: BETYDATABASE
              value: "bety"
            - name: LOCAL_SERVER
              value: "99"
            - name: REMOTE_SERVERS
              value: "0, 1, 2, 5"
