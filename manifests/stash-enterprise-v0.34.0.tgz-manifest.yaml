---
# Source: stash-enterprise/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-stash-enterprise
  namespace: default
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: stash-enterprise/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-stash-enterprise-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURlVENDQW1HZ0F3SUJBZ0lSQU4vc3U2UXcya3oxZmRSRUZaSTlxWTB3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qRTJNREF5TURRNFdoY05NelF3TmpFME1EQXlNRFE0V2pBbQpNU1F3SWdZRFZRUURFeHR0ZVMxeVpXeGxZWE5sTFhOMFlYTm9MV1Z1ZEdWeWNISnBjMlV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURuYjhJcTArMnZDa2pXNjFtenk2K1BCdWRPNy9hTEVyMDAKMENyVlhWTFRRc09VZldWVzlJV085eEIwcm9KcHRGazZrRkw3ZGI1TmkzQ0pQY0liR2NiYlAyNUNqeWIrQU5MTQpJcGNrUlBLdDlwaHVUV2E3dmNIRkVaWlFwbmlpR0V3OVBnMm5BRDBrdXNRWDNBbkJ0WUVLeHVOZlZaNndWMkd3CkRkZ0dtbWIrcnpaeGsyOFBhZElVS2hCekQySjFPaU9IY1BKdCtjWkFpSWJqMEQ3ZTMxZkJwWWExNlZpUTdrakUKREk2cWlBYVE4OThXWkJDM1RYMWZJTHdwcDBwQUFaRGV4cldkTzRHK1lSd1ZVVHRqMnY3Vjd3c295RllvRUlCNQpUY0JaYjZsaWJmdGljaVI2K2FZSnA1TG9wSUFZcGVhdnNxMmk0V3pkRzJxUldMbytISXBaQWdNQkFBR2pnYm93CmdiY3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRk5SVU1NblhNYUxtMU4rb2w4WTFLd0VjbmFXTApNRmNHQTFVZEVRUlFNRTZDSTIxNUxYSmxiR1ZoYzJVdGMzUmhjMmd0Wlc1MFpYSndjbWx6WlM1a1pXWmhkV3gwCmdpZHRlUzF5Wld4bFlYTmxMWE4wWVhOb0xXVnVkR1Z5Y0hKcGMyVXVaR1ZtWVhWc2RDNXpkbU13RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFEZXpnai9CVWQxQ09nOXNvUGhyWk9wQ0lHM0RZa1pRclN0eDBDREJEVFo5a05mSQpFWFdBTW44RG9lTCt2dWx3T2xwTmVZQ25jYmwxY3VDMWF3V2JNekxNMlNpMzV1aWQ1WmVRTTBxcWE2eVBjakdWClFOSFV3dkd5Z05pVm5YY2w2aXptQlRSa3pHMHUwTERCZWlMalRxdkw0Y2k2K0lyWmVQczQ2Sm5vTVVxdHV1RkYKV1d6L0hGbzBCRmdiUzVBckpqdERpTTZBUUJQblNRRUdQSDJWR21YWVJaeU9nOGM4VDlXRkI1NncraGFMMFk3Qgp1Z29SNHdqdUh3cmJCUERJdXBQUUZrT25mZ0R1M05ZN1RJY0N3cDFCY0RMbEo3N0o4cW9reE9YdG1CaExXU1NMCjF1eUZFTGpXOGR6WERJSDAzQi9KK3NKbTlxcENaQ2NGN3owM1dVTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNTIvQ0t0UHRyd3BJMXV0WnM4dXZqd2JuVHUvMml4SzlOTkFxMVYxUzAwTERsSDFsClZ2U0ZqdmNRZEs2Q2FiUlpPcEJTKzNXK1RZdHdpVDNDR3huRzJ6OXVRbzhtL2dEU3pDS1hKRVR5cmZhWWJrMW0KdTczQnhSR1dVS1o0b2hoTVBUNE5wd0E5SkxyRUY5d0p3YldCQ3NialgxV2VzRmRoc0EzWUJwcG0vcTgyY1pOdgpEMm5TRkNvUWN3OWlkVG9qaDNEeWJmbkdRSWlHNDlBKzN0OVh3YVdHdGVsWWtPNUl4QXlPcW9nR2tQUGZGbVFRCnQwMTlYeUM4S2FkS1FBR1Ezc2ExblR1QnZtRWNGVkU3WTlyKzFlOExLTWhXS0JDQWVVM0FXVytwWW0zN1luSWsKZXZtbUNhZVM2S1NBR0tYbXI3S3RvdUZzM1J0cWtWaTZQaHlLV1FJREFRQUJBb0lCQUVqbC8vQURqek42ZHRVVApqczYrVXM4bmFvYUh1VTIzR2xmZlZnNmM5YkRMcjlVKzVrUE1nNkV6bTBCVms0aCtJVGo4S3RkQUVEQld3cHpJCkVqTDlISkVFMnRNbVNpN3B6WHcxVFF4RWwzaEtXMXNyRURnRW5sdFhuZFJMaTJYcloyQkhBbi9lNkdPQVhMSHoKUWpOODIyZXNuQVAwY1NhMGIzWEg5b3FsNmRsQWQvTUQzL1NKMHhZcE1aWlVLSWFnN2xiS055c21nZGxrK3RoawpSUWdUYUNueUxaS0dSb1dFU0dJQ09kaGxMV2pHTit6Rjk1dGRnaG5YUG9UYTBpUXJCSzExUmNKYjQ3elJ6Z1ZICjhHTCtSWmlXT2xYRGZxYjVpSEs5azc5N1pNelY5ckpOeW5uMGNmWFlUZWpDWXhrTGpUbjM1QUJTZnFKaGh1UHAKaUR0LzNYRUNnWUVBK0hsN1crb1FtVm9oTkUvR1ZKcU1wYkJMeUtsQy9hM2ZEWDJlbkF2Szg1emc1cmxMUmYzTgpiT0NwNmtETzl6bGhpRDFkcEQ1Z3ZTMis4TWpQWERQNzc4ejM3QTdZSlNEand6RW4rNnNUVUtxT2lidjJRVTFYCmI0YXl5VGYxWGhWdFY3eFgwRTlBV0E1RzBBMkMyZW8yeUU3b2Jzd2p3WFV6a0ZrVU5FZVlVRzBDZ1lFQTduSXMKc3RIaitOS3ZWb3RvNmpQL28xN0ZjMURqMEFiOUFhS2Z2ZTN5cE8rZno3eElDMDlsRjVXZkl6aVFXVkVBNmJkbwpFUnVkc3ZnQ1l3VW9EZ0ZYclpiR2JSakE5ekJHN3F4T1llem9LaGp0RUJiMzh5cW96WWZrVUI4cldBOFN4cGVtCk45bHhORnQxdjBpYlB1SzNVTTdHa3pieHF6SlVmekJXaHpjUVpoMENnWUVBOUFZQ3M2czFjQllISkNQd3FPZzcKbHdHRCsrYlhodUg2ZkhwUmlmays4Vyt4cElaM3VaNWY0RHpvUXNveE9MVmU1dmsxZlBkUjlKajN1K3ZMVWtjdgpkenU2aEZlenlRcjdCSmpESnJQRnZXUXpwbXMxbHI2SlQxdGZQS1M3VWhJREY3WStHN09wZ3BGSzFFdGdwZmtTCm9qaDBwMVBQRGRDM3VsenhyY0plZ1NVQ2dZQlYra2RSeDBycmVwU01vVUlZU04yaHU5ZDRpQzlNNEdnMFFiNVYKenNuU1hURUR4OEUyaXM5SjNNS0FBYkpTOGxsZzdLZ1NteUdXMmNTS2pkNXVobDltRVZyRkZjcm1scnJNN3Nabwptdkx2MHdNUDdTaEV2eG9VMmk0aUVjc2dPbmNyc3B6VndJc0lOUDVWRmNvY3Q4VWYxeDlWRDllK1FpeWptL3RuClVCeVNwUUtCZ1FEaEdLUFdneHJVRWJQZ2wxd1J1ckNKR2F1RHhiTzZ1U0drUHN2NmlNbkUwYUJRZWttc2hxS3cKVVdNblUvTjUva2ttc2JheDVaZXEvcTB4WG54SEt6SlphMExQN3dpRURXbVVLUDJjQzd2VWpHRm1QdHljRnhkKwp2ZmJIdjJObStPQzBleTJ6RHMxZ2dUc0lwajNSeGRaTERPNWV5QVM2SmhBVVJyR1hEY3ZrVXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: stash-enterprise/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-stash-enterprise
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get", "patch", "delete"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["delete", "get", "list", "watch", "patch"]
- apiGroups:
  - stash.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - statefulsets
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - apps
  resources:
  - deployments
  verbs: ["create", "patch", "delete"]
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs: ["get", "list", "watch", "create", "delete", "patch"]
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "update", "get", "list", "watch", "delete"]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["get", "list", "watch", "create", "patch"]
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: ["get", "list", "create", "patch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs: ["get", "create", "list", "delete", "deletecollection"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["get", "create", "patch", "delete"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - roles
  - rolebindings
  - clusterrolebindings
  verbs: ["get","list", "create", "delete", "patch"]
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  - volumesnapshotcontents
  - volumesnapshotclasses
  verbs: ["create", "get", "list", "watch", "patch", "delete"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - coordination.k8s.io
  resources:
    - leases
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - daemonsets/finalizers
  - deployments/finalizers
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs/finalizers
  verbs: ["update"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - elasticsearches
  - elasticsearchversions
  verbs:
  - get
- apiGroups:
  - elasticsearch.kubedb.com
  resources:
    - elasticsearchdashboards
  verbs: ["list"]
---
# Source: stash-enterprise/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise-apiserver-auth-delegator
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-stash-enterprise
  namespace: default
---
# Source: stash-enterprise/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-stash-enterprise
subjects:
- kind: ServiceAccount
  name: my-release-stash-enterprise
  namespace: default
---
# Source: stash-enterprise/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise-license-checker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-stash-enterprise
  namespace: default
---
# Source: stash-enterprise/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise-license-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-stash-enterprise
  namespace: default
---
# Source: stash-enterprise/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-stash-enterprise-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-stash-enterprise
  namespace: default
---
# Source: stash-enterprise/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-stash-enterprise
  namespace: default
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  # Port used to expose Prometheus pushgateway
  - name: pushgateway
    port: 56789
    protocol: TCP
    targetPort: 56789
  selector:
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
---
# Source: stash-enterprise/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-stash-enterprise
  namespace: default
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: stash-enterprise
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: stash-enterprise
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: abb83ea48b45a8656302e3ff920c8bb719aa7d8875e1e47dd0af8fa4ed4cc0d4
    spec:
      
      serviceAccountName: my-release-stash-enterprise
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/stashed/stash-enterprise:v0.34.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --docker-registry=ghcr.io/stashed
        - --image=stash-enterprise
        - --image-tag=v0.34.0
        - --secure-port=8443
        - --authentication-configmap-namespace=kube-system
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --pushgateway-url=http://my-release-stash-enterprise.default.svc:56789
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --nva-cpu=100m
        - --nva-memory=128Mi
        - --nva-user=2000
        - --nva-privileged-mode=false
        - --license-apiservice=v1beta1.admission.stash.appscode.com
        ports:
        - containerPort: 8443
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        - mountPath: /tmp
          name: stash-scratchdir
      - name: pushgateway
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: 'prom/pushgateway:v1.4.2'
        imagePullPolicy: IfNotPresent
        args:
        - --web.listen-address=:56789
        - --persistence.file=/var/pv/pushgateway.dat
        resources:
          {}
        ports:
        - containerPort: 56789
        volumeMounts:
        - mountPath: /var/pv
          name: data-volume
        - mountPath: /tmp
          name: stash-scratchdir
      volumes:
      - emptyDir: {}
        name: data-volume
      - emptyDir: {}
        name: stash-scratchdir
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-stash-enterprise-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: stash-enterprise/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.admission.stash.appscode.com
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: admission.stash.appscode.com
  version: v1alpha1
  service:
    namespace: default
    name: my-release-stash-enterprise
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRZWxzVHRxWm8wVmt4LzI4VEpaUW0vekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1UWXdNREl3TkRoYUZ3MHpOREEyTVRRd01ESXdORGhhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFwN1ozCkRyZCtVZkhubEZRRTJ5ZmhQcklKMUdWOVVBVU9EUnMrSXY2YkpHM0RzdHBkTkRYVXdzZGhIZjJoeVp1eVA2ck4KcjlDVWthaGVhNmRzRzg4aXRTb3RqNm9sbWJ1aUE2RVdkTk0xVkpRbVl6d0dDdU1UNmkvWUp1Y0Y0b24wS0V5VwpLVnlMa09KM0xYZ0tITDY1Z3BFVDRUbGtacnZ4T3FDTUZGdzFvWmZuYlFNMGI1b1duSDcrYkZmZlQ0ZTlpcXBiCjFWQ0pPUk1tdkMrWldTZy9CUE5jeXA1ajN2aGNRR3pWd1MzYWJKUWl2QU11ZnhlU1hiOU5neVV3dDJrN3JQQ0oKSWlzNmlibWJjUFkxQjFPb252YkN5QThNOHZmVVJaOVR5VmdCYXF0eWZDYU1WTkgvdysxVUtxWHI3MmxnVTQyZwpPbGRJRjdpZDhUUmNoWVhlcXdJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRk5SVU1NblhNYUxtMU4rb2w4WTFLd0VjbmFXTE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1hCWkE2Z1AzVgpHQlJzRTh0bFJmUm45NG02MTN6elR0N3F4dFF6Y2pnNTRPaDFEWHpWczBqb1dJRWpheTZsSDcyaEtjOW1seEszCkRzbDEwcUxlYzJIbUt4bldSVmJhVHZCRFNWQTUvazBuandjcTFSSUVVaUppaGFveDUyM3pvV1hCMkE1VFhucmEKS1VhODJHWjhXeW0xQ1NkNVpiYS9JaHBmcERrdFhmYzA3QndKL3lSRmZIOCsycU1pdVF4aXRUbkIyQ3dJYzBoZAo1SnU1enllMXVQOTNibkh4T2lHYzc4MTY3VUMvRDhUa09KTDFWN1hTRVUzNnFiTFQxbllwZ2wrKzdrb2dnS2NuCmJBdFhhUS9RZ3VaMnAyQjkwc01NeDFDc0JMRWhFSmQ1c2R0bDdDYU5EcFhqK1BzSExyN1h5ZEpQd0tsQXp4ZUgKb0JubmVoTXdyZjA0Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: stash-enterprise/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.admission.stash.appscode.com
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: admission.stash.appscode.com
  version: v1beta1
  service:
    namespace: default
    name: my-release-stash-enterprise
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRZWxzVHRxWm8wVmt4LzI4VEpaUW0vekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1UWXdNREl3TkRoYUZ3MHpOREEyTVRRd01ESXdORGhhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFwN1ozCkRyZCtVZkhubEZRRTJ5ZmhQcklKMUdWOVVBVU9EUnMrSXY2YkpHM0RzdHBkTkRYVXdzZGhIZjJoeVp1eVA2ck4KcjlDVWthaGVhNmRzRzg4aXRTb3RqNm9sbWJ1aUE2RVdkTk0xVkpRbVl6d0dDdU1UNmkvWUp1Y0Y0b24wS0V5VwpLVnlMa09KM0xYZ0tITDY1Z3BFVDRUbGtacnZ4T3FDTUZGdzFvWmZuYlFNMGI1b1duSDcrYkZmZlQ0ZTlpcXBiCjFWQ0pPUk1tdkMrWldTZy9CUE5jeXA1ajN2aGNRR3pWd1MzYWJKUWl2QU11ZnhlU1hiOU5neVV3dDJrN3JQQ0oKSWlzNmlibWJjUFkxQjFPb252YkN5QThNOHZmVVJaOVR5VmdCYXF0eWZDYU1WTkgvdysxVUtxWHI3MmxnVTQyZwpPbGRJRjdpZDhUUmNoWVhlcXdJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRk5SVU1NblhNYUxtMU4rb2w4WTFLd0VjbmFXTE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1hCWkE2Z1AzVgpHQlJzRTh0bFJmUm45NG02MTN6elR0N3F4dFF6Y2pnNTRPaDFEWHpWczBqb1dJRWpheTZsSDcyaEtjOW1seEszCkRzbDEwcUxlYzJIbUt4bldSVmJhVHZCRFNWQTUvazBuandjcTFSSUVVaUppaGFveDUyM3pvV1hCMkE1VFhucmEKS1VhODJHWjhXeW0xQ1NkNVpiYS9JaHBmcERrdFhmYzA3QndKL3lSRmZIOCsycU1pdVF4aXRUbkIyQ3dJYzBoZAo1SnU1enllMXVQOTNibkh4T2lHYzc4MTY3VUMvRDhUa09KTDFWN1hTRVUzNnFiTFQxbllwZ2wrKzdrb2dnS2NuCmJBdFhhUS9RZ3VaMnAyQjkwc01NeDFDc0JMRWhFSmQ1c2R0bDdDYU5EcFhqK1BzSExyN1h5ZEpQd0tsQXp4ZUgKb0JubmVoTXdyZjA0Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: stash-enterprise/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.repositories.stash.appscode.com
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: repositories.stash.appscode.com
  version: v1alpha1
  service:
    namespace: default
    name: my-release-stash-enterprise
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRZWxzVHRxWm8wVmt4LzI4VEpaUW0vekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1UWXdNREl3TkRoYUZ3MHpOREEyTVRRd01ESXdORGhhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFwN1ozCkRyZCtVZkhubEZRRTJ5ZmhQcklKMUdWOVVBVU9EUnMrSXY2YkpHM0RzdHBkTkRYVXdzZGhIZjJoeVp1eVA2ck4KcjlDVWthaGVhNmRzRzg4aXRTb3RqNm9sbWJ1aUE2RVdkTk0xVkpRbVl6d0dDdU1UNmkvWUp1Y0Y0b24wS0V5VwpLVnlMa09KM0xYZ0tITDY1Z3BFVDRUbGtacnZ4T3FDTUZGdzFvWmZuYlFNMGI1b1duSDcrYkZmZlQ0ZTlpcXBiCjFWQ0pPUk1tdkMrWldTZy9CUE5jeXA1ajN2aGNRR3pWd1MzYWJKUWl2QU11ZnhlU1hiOU5neVV3dDJrN3JQQ0oKSWlzNmlibWJjUFkxQjFPb252YkN5QThNOHZmVVJaOVR5VmdCYXF0eWZDYU1WTkgvdysxVUtxWHI3MmxnVTQyZwpPbGRJRjdpZDhUUmNoWVhlcXdJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRk5SVU1NblhNYUxtMU4rb2w4WTFLd0VjbmFXTE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1hCWkE2Z1AzVgpHQlJzRTh0bFJmUm45NG02MTN6elR0N3F4dFF6Y2pnNTRPaDFEWHpWczBqb1dJRWpheTZsSDcyaEtjOW1seEszCkRzbDEwcUxlYzJIbUt4bldSVmJhVHZCRFNWQTUvazBuandjcTFSSUVVaUppaGFveDUyM3pvV1hCMkE1VFhucmEKS1VhODJHWjhXeW0xQ1NkNVpiYS9JaHBmcERrdFhmYzA3QndKL3lSRmZIOCsycU1pdVF4aXRUbkIyQ3dJYzBoZAo1SnU1enllMXVQOTNibkh4T2lHYzc4MTY3VUMvRDhUa09KTDFWN1hTRVUzNnFiTFQxbllwZ2wrKzdrb2dnS2NuCmJBdFhhUS9RZ3VaMnAyQjkwc01NeDFDc0JMRWhFSmQ1c2R0bDdDYU5EcFhqK1BzSExyN1h5ZEpQd0tsQXp4ZUgKb0JubmVoTXdyZjA0Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: stash-enterprise/templates/apiregistration.yaml
# copy kube-system/extension-apiserver-authentication into stash operator namespace
---
# Source: stash-enterprise/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: stash-enterprise/templates/cleaner/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-stash-enterprise-cleaner
  namespace: default
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
---
# Source: stash-enterprise/templates/crd-installer/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-stash-enterprise-crd-installer
  namespace: default
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
---
# Source: stash-enterprise/templates/cleaner/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-stash-enterprise-cleaner
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["delete"]
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs: ["delete"]
  - apiGroups:
      - stash.appscode.com
    resources:
      - "*"
    verbs: ["delete"]
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs: ["delete"]
---
# Source: stash-enterprise/templates/crd-installer/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-stash-enterprise-crd-installer
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs: ["*"]
  - apiGroups:
      - stash.appscode.com
    resources:
      - "*"
    verbs: ["*"]
---
# Source: stash-enterprise/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:stash:garbage-collector
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: stash-enterprise/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: stash-enterprise/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for stash addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: stash-enterprise/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:stash:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - stash.appscode.com
  - repositories.stash.appscode.com
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: stash-enterprise/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:stash:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - stash.appscode.com
  - repositories.stash.appscode.com
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: stash-enterprise/templates/cleaner/cluster_rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise-cleaner
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-stash-enterprise-cleaner
subjects:
  - kind: ServiceAccount
    name: my-release-stash-enterprise-cleaner
    namespace: default
---
# Source: stash-enterprise/templates/crd-installer/cluster_rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise-crd-installer
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-stash-enterprise-crd-installer
subjects:
  - kind: ServiceAccount
    name: my-release-stash-enterprise-crd-installer
    namespace: default
---
# Source: stash-enterprise/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: appscode:stash:garbage-collector
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:stash:garbage-collector
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kube-system
---
# Source: stash-enterprise/templates/cleaner/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-stash-enterprise-cleaner
  namespace: default
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 600
  template:
    spec:
      
      serviceAccountName: my-release-stash-enterprise-cleaner
      containers:
      - name: busybox
        image: ghcr.io/appscode/kubectl:v1.22
        command:
          - sh
          - -c
          - "sleep 2; \
           kubectl delete job my-release-stash-enterprise-crd-installer -n default || true; \
           kubectl delete functions.stash.appscode.com update-status pvc-backup pvc-restore || true; \
           kubectl delete tasks.stash.appscode.com pvc-backup pvc-restore || true;"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
      restartPolicy: Never
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: stash-enterprise/templates/crd-installer/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-stash-enterprise-crd-installer
  namespace: default
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 300
  ttlSecondsAfterFinished: 10
  template:
    spec:
      
      serviceAccountName: my-release-stash-enterprise-crd-installer
      containers:
        - name: installer
          image: "ghcr.io/stashed/stash-crd-installer:v0.34.0"
          args:
            - --enterprise=true
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
      restartPolicy: Never
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: stash-enterprise/templates/mutating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: admission.stash.appscode.com
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: deployment.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/deploymentmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - apps
    - extensions
    apiVersions:
    - "*"
    resources:
    - deployments
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: daemonset.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/daemonsetmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - apps
    - extensions
    apiVersions:
    - "*"
    resources:
    - daemonsets
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: statefulset.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/statefulsetmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    apiGroups:
    - apps
    apiVersions:
    - "*"
    resources:
    - statefulsets
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: deploymentconfig.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/deploymentconfigmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - apps.openshift.io
    apiVersions:
    - "*"
    resources:
    - deploymentconfigs
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: restoresession.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/restoresessionmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - restoresessions
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: stash-enterprise/templates/validating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: admission.stash.appscode.com
  labels:
    helm.sh/chart: stash-enterprise-v0.34.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.34.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: restic.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/resticvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - restics
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: recovery.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/recoveryvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - recoveries
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: repository.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/repositoryvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - repositories
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: restoresession.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/restoresessionvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - restoresessions
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: restorebatch.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/restorebatchvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - restorebatches
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: backupconfiguration.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/backupconfigurationvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - backupconfigurations
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: backupbatch.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/backupbatchvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - backupbatches
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: backupblueprint.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/backupblueprintvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - backupblueprints
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
