---
# Source: azure-keyvault-exporter/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-azure-keyvault
  namespace: default
  labels:     
    helm.sh/chart: azure-keyvault-exporter-1.0.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: azure-keyvault-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: azure-keyvault-exporter
    app.kubernetes.io/version: "23.7.1"
spec:
  podSelector:
    matchLabels:
      
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: azure-keyvault-exporter
  policyTypes: 
    - Ingress
    - Egress
  ingress: 
    []
  egress: 
    - ports:
      - port: 53
        protocol: TCP
    - ports:
      - port: 53
        protocol: UDP
    - ports:
      - port: 443
        protocol: TCP
---
# Source: azure-keyvault-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "azure-keyvault-exporter"
  namespace: default
  labels:
    
    helm.sh/chart: azure-keyvault-exporter-1.0.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: azure-keyvault-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: azure-keyvault-exporter
    app.kubernetes.io/version: "23.7.1"
---
# Source: azure-keyvault-exporter/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: my-release-azure-keyvault
  namespace: default
  labels:
    
    helm.sh/chart: azure-keyvault-exporter-1.0.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: azure-keyvault-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: azure-keyvault-exporter
    app.kubernetes.io/version: "23.7.1"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http-metrics
      appProtocol: http
  selector:
    
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: azure-keyvault-exporter
---
# Source: azure-keyvault-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-azure-keyvault
  namespace: default
  labels:     
    helm.sh/chart: azure-keyvault-exporter-1.0.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: azure-keyvault-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: azure-keyvault-exporter
    app.kubernetes.io/version: "23.7.1"
spec:
  replicas: 1

  selector:
    matchLabels:
      
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: azure-keyvault-exporter

  minReadySeconds: 
  template:
    metadata:
      labels:
        
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: azure-keyvault-exporter
      annotations:
        checksum/secret: "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b"

    spec:
      serviceAccountName: "azure-keyvault-exporter"
      priorityClassName: ""

      securityContext: 
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
        - 1000
      terminationGracePeriodSeconds: 60

      containers:
        #######################
        # Kube pool manager
        #######################
        - name: azure-keyvault-exporter
          image: "docker.io/webdevops/azure-keyvault-exporter:23.7.1"
          imagePullPolicy: "IfNotPresent"

          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          env:
          ports:
            - containerPort: 8080
              name: http-metrics
              protocol: TCP
          resources: 
            limits:
              cpu: 500m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          startupProbe: 
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 10
            tcpSocket:
              port: http-metrics
          livenessProbe: 
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 30
            tcpSocket:
              port: http-metrics
          readinessProbe: 
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 30
            tcpSocket:
              port: http-metrics
      nodeSelector: 
        kubernetes.io/os: linux
