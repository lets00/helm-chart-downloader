---
# Source: personal-ovpn/templates/network-policy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-personal-ovpn
  namespace: ovpn
  labels:
    app.kubernetes.io/name: personal-ovpn
    helm.sh/chart: personal-ovpn-0.2.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector: { }
  policyTypes:
    - Egress
  egress:
    - to:
      - ipBlock:
          cidr: 0.0.0.0/0
          except:
          - 10.0.0.0/8
---
# Source: personal-ovpn/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-personal-ovpn
  namespace: ovpn
  labels:
    app.kubernetes.io/name: personal-ovpn
    helm.sh/chart: personal-ovpn-0.2.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 31304
      targetPort: openvpn
      protocol: TCP
      name: openvpn
  selector:
    app.kubernetes.io/name: personal-ovpn
    app.kubernetes.io/instance: my-release
  type: NodePort
---
# Source: personal-ovpn/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-personal-ovpn
  namespace: ovpn
  labels:
    app.kubernetes.io/name: personal-ovpn
    helm.sh/chart: personal-ovpn-0.2.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: personal-ovpn
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: personal-ovpn
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - image: "kylemanna/openvpn:2.4"
          imagePullPolicy: IfNotPresent
          name: personal-ovpn
          ports:
            - containerPort: 1194
              name: openvpn
              protocol: TCP
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          volumeMounts:
            - name: ovpn0-key
              mountPath: /etc/openvpn/pki/private
            - name: ovpn0-cert
              mountPath: /etc/openvpn/pki/issued
            - name: ovpn0-pki
              mountPath: /etc/openvpn/pki
            - name: ovpn0-conf
              mountPath: /etc/openvpn
            - name: ccd0
              mountPath: /etc/openvpn/ccd
          resources:
            {}
      volumes:
        - name: ovpn0-key
          secret:
            secretName: ovpn0-key
            defaultMode: 0600
        - name: ovpn0-cert
          secret:
            secretName: ovpn0-cert
        - name: ovpn0-pki
          secret:
            secretName: ovpn0-pki
            defaultMode: 0600
        - name: ovpn0-conf
          configMap:
            name: ovpn0-conf
        - name: ccd0
          configMap:
            name: ccd0
---
# Source: personal-ovpn/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-personal-ovpn-test-connection"
  namespace: ovpn
  labels:
    helm.sh/chart: personal-ovpn-0.2.2
    app.kubernetes.io/name: personal-ovpn
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: resolv-conf
      image: busybox
      command: ['cat']
      args: ['/etc/resolv.conf']
    - name: nc
      image: busybox
      command: ['nc']
      args: ['-v', '-z', 'my-release-personal-ovpn', '31304']
  restartPolicy: Never
