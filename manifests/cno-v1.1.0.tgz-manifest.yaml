---
# Source: cno/charts/agentConfig/charts/metrics-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-metrics-server
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: cno/charts/agentConfig/templates/agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cno-agent
  namespace: default
---
# Source: cno/charts/agentConfig/templates/cd/cno-cd.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cno-cd-operator
  namespace: default
---
# Source: cno/charts/agentConfig/templates/onboard/cno-onboard.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cno-onboarding-operator
  namespace: default
---
# Source: cno/charts/strimziKafkaOperator/templates/010-ServiceAccount-strimzi-cluster-operator.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: strimzi-cluster-operator
  namespace: default
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: service-account
    release: my-release
    heritage: Helm
---
# Source: cno/templates/cno-api.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cno-api
  namespace: default
---
# Source: cno/templates/default-licence.yaml
apiVersion: v1
data:
  uuid: NzcxNjEyNGQtMjRlOC00YWIyLWFiZDgtOTBjNjM4YTEyZjg5
kind: Secret
metadata:
  name: agent-licence
  namespace: default
---
# Source: cno/templates/keycloak-secret.yaml
apiVersion: v1
data:
  ADMIN_PASSWORD: Y25vQDIwMjIh
  ADMIN_USERNAME: YWRtaW4=
kind: Secret
metadata:
  name: cno-keycloak-admin
  namespace: default
---
# Source: cno/templates/mysql-secret.yaml
apiVersion: v1
data:
  DB_USERNAME: cm9vdA==
  DB_PASSWORD: cGFzc3dvcmQ=
kind: Secret
metadata:
  name: cno-db-credentals
  namespace: default
---
# Source: cno/charts/strimziKafkaOperator/templates/050-ConfigMap-strimzi-cluster-operator.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: strimzi-cluster-operator
  namespace: default
  labels:
    app: strimzi
data:
  log4j2.properties: |
    name = COConfig
    monitorInterval = 30

    appender.console.type = Console
    appender.console.name = STDOUT
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

    rootLogger.level = ${env:STRIMZI_LOG_LEVEL:-INFO}
    rootLogger.appenderRefs = stdout
    rootLogger.appenderRef.console.ref = STDOUT

    # Kafka AdminClient logging is a bit noisy at INFO level
    logger.kafka.name = org.apache.kafka
    logger.kafka.level = WARN

    # Zookeeper is very verbose even on INFO level -> We set it to WARN by default
    logger.zookeepertrustmanager.name = org.apache.zookeeper
    logger.zookeepertrustmanager.level = WARN

    # Keeps separate level for Netty logging -> to not be changed by the root logger
    logger.netty.name = io.netty
    logger.netty.level = INFO
---
# Source: cno/templates/keycloak-config.yaml
apiVersion: v1
data:
  cno-realm.json: |-
    {"id": "cno",
      "realm": "cno",
      "displayName": "CNO REALM",
      "notBefore": 1613759244,
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 300,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": true,
      "registrationEmailAsUsername": false,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": false,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "ed15c366-08f0-43f7-a261-83d2437c2206",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "cno",
            "attributes": {}
          },
          {
            "id": "fa022900-47f9-44f1-8331-f21ae40a3426",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "cno",
            "attributes": {}
          }
        ],
        "client": {
          "cno-api": [
            {
              "id": "03433236-0b13-4549-813c-bc463e5788bc",
              "name": "test",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "manage-users",
                    "manage-realm"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "c39b01dd-c137-4a95-b3ea-91b297110b43",
              "attributes": {}
            }
          ],
          "realm-management": [
            {
              "id": "b7141ef0-c9ae-47f5-8692-8e64ed253cc7",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "043c439c-61a1-4ab5-9cdf-f29c235d9ed7",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "bb7c3c7e-66f3-4395-81ba-a5eaa304f9a9",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "a9b7f4d7-4c9c-4874-b526-ac4b5ecac7f1",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "098b3c45-8b5e-4ecc-bb4d-59b6d8f2b564",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "55c5a15f-60eb-4dff-87ad-49bf3f416cd7",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "c9a1af0d-d758-4cf8-800b-ba064b5e26f8",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "5928e0b0-3832-46cf-887b-ec28a1f77928",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "6b48b081-5240-4528-b123-31d0ae6d0a09",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "create-client",
                    "view-clients",
                    "manage-users",
                    "manage-events",
                    "manage-identity-providers",
                    "impersonation",
                    "query-realms",
                    "view-authorization",
                    "view-identity-providers",
                    "view-realm",
                    "manage-authorization",
                    "view-users",
                    "query-clients",
                    "manage-clients",
                    "query-groups",
                    "manage-realm",
                    "view-events",
                    "query-users"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "f3fe1d3e-da65-4f2a-b30f-886598ff4f65",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "9ff7fbc5-2f6c-42b3-91cd-c70b923bd6b4",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "6e73b729-c66f-4ce4-93b0-6fdba0af394f",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "883a53b8-4cc2-49a0-a6a8-634286c22fea",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-groups",
                    "query-users"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "cbb15794-3638-4034-acc9-73f711317ade",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "2f61dfbd-967d-4eae-8e20-ac7d66afb95e",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "5e61d6cf-edeb-4cdc-8726-fc70775b8f26",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "c2130e3d-b6e1-4978-9397-f5d0b8405bc9",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "3b4d0934-99b2-46d2-a6a3-578f3a732a4c",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            },
            {
              "id": "21d642dc-672c-48e2-8090-9f7d476adfce",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "1e273189-ea35-4245-9d11-4389035c573c",
              "attributes": {}
            }
          ],
          "public": [],
          "security-admin-console": [],
          "admin-cli": [],
          "account-console": [],
          "broker": [
            {
              "id": "ff970270-04fa-4152-b987-9bd98ff127fb",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "a4d88250-88a4-48e9-82bf-1d82b34dfcba",
              "attributes": {}
            }
          ],
          "account": [
            {
              "id": "d1a3681a-15d9-4751-ac76-2ca0cba1a5fe",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "manage-account-links"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "a23c3f4a-600d-4d2b-9754-32b42a9bf733",
              "attributes": {}
            },
            {
              "id": "91961740-75b1-4190-b4d8-3aa3b64c0fab",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "a23c3f4a-600d-4d2b-9754-32b42a9bf733",
              "attributes": {}
            },
            {
              "id": "105609d6-d7ff-4a03-bb02-772562b58281",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "a23c3f4a-600d-4d2b-9754-32b42a9bf733",
              "attributes": {}
            },
            {
              "id": "290b323e-51d7-482a-b784-eef0f99fc706",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "view-consent"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "a23c3f4a-600d-4d2b-9754-32b42a9bf733",
              "attributes": {}
            },
            {
              "id": "6db0a4dd-562a-4af1-9c5b-cfd570199cf4",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "a23c3f4a-600d-4d2b-9754-32b42a9bf733",
              "attributes": {}
            },
            {
              "id": "506bcaea-28c5-44a1-b503-4177712fe13e",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "a23c3f4a-600d-4d2b-9754-32b42a9bf733",
              "attributes": {}
            },
            {
              "id": "fc9c430d-fd11-45b0-a1ff-d284638d9c04",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "a23c3f4a-600d-4d2b-9754-32b42a9bf733",
              "attributes": {}
            }
          ]
        }
      },
      "defaultRoles": [
        "uma_authorization",
        "offline_access"
      ],
      "requiredCredentials": [
        "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpSupportedApplications": [
        "FreeOTP",
        "Google Authenticator"
      ],
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "users": [
        {
          "id": "294b81b8-f151-4920-9bdf-f2f2e2dfadb2",
          "createdTimestamp": 1613738052893,
          "username": "service-account-cno-api",
          "enabled": true,
          "totp": false,
          "emailVerified": false,
          "serviceAccountClientId": "cno-api",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "uma_authorization",
            "offline_access"
          ],
          "clientRoles": {
            "realm-management": [
              "manage-users",
              "manage-realm"
            ],
            "account": [
              "manage-account",
              "view-profile"
            ]
          },
          "notBefore": 0,
          "groups": []
        }
      ],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": [
              "manage-account"
            ]
          }
        ]
      },
      "clients": [
        {
          "id": "a23c3f4a-600d-4d2b-9754-32b42a9bf733",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/cno/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "defaultRoles": [
            "manage-account",
            "view-profile"
          ],
          "redirectUris": [
            "/realms/cno/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "677d49a6-df60-40fc-b2f1-d265b417632d",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/cno/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/realms/cno/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "e5e81dc6-193d-4d2a-ba04-1c984dc02e4d",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "9ddf37c8-5172-440a-ad84-8afc78696f35",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "a4d88250-88a4-48e9-82bf-1d82b34dfcba",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "c39b01dd-c137-4a95-b3ea-91b297110b43",
          "clientId": "cno-api",
          "adminUrl": "http://keycloak:8080",
          "baseUrl": "http://keycloak:8080",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "cno-api-client-secret",
          "redirectUris": [
            "*"
          ],
          "webOrigins": [
            "*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "saml.assertion.signature": "false",
            "saml.force.post.binding": "false",
            "saml.multivalued.roles": "false",
            "saml.encrypt": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "saml.server.signature": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "exclude.session.state.from.auth.response": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "saml_force_name_id_format": "false",
            "saml.client.signature": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "saml.onetimeuse.condition": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "3d1f5d1a-a07e-4129-807a-bd40daec407e",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientId",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientId",
                "jsonType.label": "String"
              }
            },
            {
              "id": "026eb6e9-ba10-4410-8274-dc0b01c416ce",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            },
            {
              "id": "33d29b33-d942-4b73-ad17-789a98ac7982",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "openid",
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "38ed526a-6b52-442d-a663-d4980e19cbe9",
          "clientId": "public",
          "adminUrl": "https://cno-auth.$AUTH_URL/",
          "baseUrl": "https://cno-auth.$AUTH_URL/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "*"
          ],
          "webOrigins": [
            "*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": true,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "saml.assertion.signature": "false",
            "saml.force.post.binding": "false",
            "saml.multivalued.roles": "false",
            "saml.encrypt": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "saml.server.signature": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "exclude.session.state.from.auth.response": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "saml_force_name_id_format": "false",
            "saml.client.signature": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "saml.onetimeuse.condition": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "1e273189-ea35-4245-9d11-4389035c573c",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "90afd1fc-9003-44f9-b895-5353a3f60898",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/cno/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/admin/cno/console/*"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "58240a95-bbc2-4a1f-a66c-811a9a15db9c",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "id": "d8bb3997-6a87-4a1b-8efa-473d8f9d5f6f",
          "name": "openid",
          "description": "",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          }
        },
        {
          "id": "034528d9-e00f-43ff-bed1-96a8317b5ec5",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "4796eedc-9749-4efb-9fe8-a19a14490550",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            },
            {
              "id": "735cb783-2e10-4395-ae26-496080b9ef0f",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "7f4a60e2-fe93-44f5-804b-2a6e5689879c",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "6c755d6d-cbef-406a-a44a-a540de26d158",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "4df9ac39-d82b-4a3f-8ea2-3c0f02dd524f",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "72b94724-fb79-4168-a24c-d4417986f449",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String"
              }
            },
            {
              "id": "3fbd198a-f6cf-4632-8c54-9a5dd6671058",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "3e520ca9-8cf1-4869-9f1d-c7cf0b798ff5",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "9c2bea57-eba0-41d0-8531-e9e2354b23ea",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "b4d7de65-8f38-4fa9-9a6f-a67d32696e15",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "25c17e68-ac35-4e74-9ba1-68c6f2573bc1",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "362045ed-6ffd-45ba-b07f-50680e9301b6",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "855892d8-2024-41c7-a549-8de08bf429a7",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "6973887a-9e7c-432c-a349-e920fac078e5",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "b846a4f3-f971-4cf6-8713-079d47cf0c8a",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            },
            {
              "id": "4378f686-0721-4805-9fe7-0eb8946d2121",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            }
          ]
        },
        {
          "id": "3c497a2e-2fd5-4add-984a-4de38d7c1405",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "3fc5b4b2-fbe9-49a6-ba60-2470fadc5703",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "id": "b2464bbf-4845-4c69-8299-eeebfa0565c0",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "55e81e62-60b2-4f11-a3e1-d2cd1c13f8ff",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "c9e19b82-5219-479f-b7d1-09dae203d775",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "c58bfff3-38a7-488f-a649-e87d2d5d6490",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "id": "4028c741-37cd-4ee7-a741-7bc50c657e41",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "String"
              }
            },
            {
              "id": "988adc5f-8f98-4310-9056-7a2f0f4d04ce",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "c0fe35f8-75a3-48fa-af57-e94bff2449d4",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "a8e8ba69-8699-4451-848f-b1cceaeb1256",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "4bff7e77-3e3c-4414-b376-fd323cea3cb2",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "3fd4129b-c3ce-403a-ac66-fadade38e1fa",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "dc05c2e6-776c-4b29-bdf7-69c6377c805c",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "9c216274-9c6f-448b-bbb6-a75c683e91da",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "7ab6d462-1f51-4d45-bba5-6f6e8d820c3e",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "2af956a2-10d5-463f-ad5c-4d662004dab3",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "40730260-efd7-4946-b29a-d6bc14ebf02a",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "45bb7c2f-8f1d-4c79-a773-7f0cc205ff51",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        }
      ],
      "defaultDefaultClientScopes": [
        "openid",
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {},
      "eventsEnabled": false,
      "eventsListeners": [
        "jboss-logging"
      ],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "99f208a0-426e-461f-920c-edb3a07e64c1",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "ef432e5d-c204-47ec-b9c2-1e3e2d177d48",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-full-name-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "oidc-usermodel-attribute-mapper",
                "saml-user-property-mapper",
                "saml-user-attribute-mapper",
                "oidc-address-mapper",
                "oidc-usermodel-property-mapper",
                "saml-role-list-mapper"
              ]
            }
          },
          {
            "id": "15ecb186-7d69-437b-a874-b3fd19562425",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "saml-user-attribute-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-full-name-mapper",
                "oidc-address-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "oidc-usermodel-property-mapper",
                "saml-user-property-mapper",
                "saml-role-list-mapper"
              ]
            }
          },
          {
            "id": "5d19fb25-634b-4d2a-a27b-9f053dd600bc",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": [
                "true"
              ],
              "client-uris-must-match": [
                "true"
              ]
            }
          },
          {
            "id": "d731386e-ab75-45d0-a2bb-5c79c8662f76",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "2568b6cb-0c68-4ea5-90a2-474c0824eb3b",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": [
                "200"
              ]
            }
          },
          {
            "id": "48c46e5e-5790-4822-9d75-f6e5aad46f46",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "bc13e120-43e6-42c9-b362-b4e1f7040484",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "710f35ef-f411-49bb-bdf6-fa94fff797f7",
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "HS256"
              ]
            }
          },
          {
            "id": "71848c4d-d7bd-4e2c-befd-b905b20d2457",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "87d4021e-aa0f-4bea-b0bf-e2a5988c7e42",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          }
        ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [],
      "authenticationFlows": [
        {
          "id": "1a3b92fd-80a5-474b-b897-6da571928f9d",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "dea1bcce-de40-4a92-b19a-6a3fab6e879f",
          "alias": "Authentication Options",
          "description": "Authentication options.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "basic-auth",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "basic-auth-otp",
              "requirement": "DISABLED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-spnego",
              "requirement": "DISABLED",
              "priority": 30,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "fe247908-3393-4ae5-9af9-d40b50a57155",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-otp-form",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "9ac182f0-e973-4fea-b0f9-d0b11212a807",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "5fb814d3-ab10-40d6-a2d6-e6b0ecd87e6f",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-otp-form",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "4fd80ff8-538c-4b2b-a543-e612f542fb04",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "REQUIRED",
              "priority": 20,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "815aabce-e155-4aeb-87e9-329f0bc3d1a2",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "reset-otp",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "42b6fa49-0470-4a4b-b3bf-3498f3cfcfa1",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "486df33b-2711-49fd-a01c-71e5a635924a",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "CONDITIONAL",
              "priority": 20,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "6d7a913c-2ece-4f84-be10-5cadccafdfa2",
          "alias": "browser",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-spnego",
              "requirement": "DISABLED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "flowAlias": "forms",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "a38d7e0b-8d5c-4a72-9670-99feea2d1ee6",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "client-jwt",
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "client-secret-jwt",
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "client-x509",
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "8a2dd212-df86-4992-9a16-f8bf7fbc0363",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "CONDITIONAL",
              "priority": 30,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "ff1dd3f5-bd43-4f4a-b2bd-6f99e9751fed",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "57d3577a-bfee-481a-bcfa-cf12e62d6033",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "REQUIRED",
              "priority": 20,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "4bbc25ed-2875-4a93-a876-8799aba20bb9",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "CONDITIONAL",
              "priority": 20,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "f12cf339-067e-43ec-9f39-c60c4e7970ae",
          "alias": "http challenge",
          "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "no-cookie-redirect",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "REQUIRED",
              "priority": 20,
              "flowAlias": "Authentication Options",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "40897e83-b830-46ab-bb0c-447588bea37c",
          "alias": "registration",
          "description": "registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "requirement": "REQUIRED",
              "priority": 10,
              "flowAlias": "registration form",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "9870d065-fbad-43fd-aaa1-066c31d873b1",
          "alias": "registration form",
          "description": "registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "registration-profile-action",
              "requirement": "REQUIRED",
              "priority": 40,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "registration-password-action",
              "requirement": "REQUIRED",
              "priority": 50,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "requirement": "DISABLED",
              "priority": 60,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "8baeab47-c03d-4115-896a-88caafe15878",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "reset-credential-email",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "reset-password",
              "requirement": "REQUIRED",
              "priority": 30,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "CONDITIONAL",
              "priority": 40,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "f23f143b-a7f3-4d6f-8497-002a18ddd892",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "4f33bfdd-a05b-41ad-b9dc-490eded3df3f",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "3a05c5f1-7294-46b7-9ba7-fe38a59f3176",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "terms_and_conditions",
          "name": "Terms and Conditions",
          "providerId": "terms_and_conditions",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "attributes": {},
      "keycloakVersion": "17.0.0",
      "userManagedAccessAllowed": false
    }
kind: ConfigMap
metadata:
  name: cno-realm
  namespace: default
---
# Source: cno/charts/agentConfig/templates/cd/cno-cd-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: workloads.cnocd.beopenit.com
spec:
  group: cnocd.beopenit.com
  names:
    kind: Workload
    listKind: WorkloadList
    plural: workloads
    singular: workload
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Workload is the Schema for the workloads API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadSpec defines the desired state of Workload
            properties:
              bascule:
                type: string
              containers:
                items:
                  properties:
                    autoDeploy:
                      type: boolean
                    filter:
                      type: string
                    image:
                      type: string
                    name:
                      type: string
                    version:
                      type: string
                  required:
                  - image
                  type: object
                type: array
              deploymentStrategy:
                type: string
              replicas:
                format: int32
                type: integer
              strategySpec:
                properties:
                  blue:
                    items:
                      properties:
                        image:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - version
                      type: object
                    type: array
                  green:
                    items:
                      properties:
                        image:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - version
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: WorkloadStatus defines the observed state of Workload
            properties:
              ContainerStatus:
                items:
                  properties:
                    image:
                      type: string
                    name:
                      type: string
                    otherVersion:
                      items:
                        properties:
                          createdAt:
                            type: string
                          name:
                            type: string
                        required:
                        - createdAt
                        - name
                        type: object
                      type: array
                    version:
                      type: string
                    versionHistory:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              desiredReplicas:
                format: int32
                type: integer
              endpoints:
                properties:
                  current:
                    properties:
                      ingress:
                        items:
                          properties:
                            address:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            host:
                              type: string
                            ingressName:
                              type: string
                            path:
                              type: string
                            serviceName:
                              type: string
                            tls:
                              type: boolean
                          type: object
                        type: array
                      loadBalancer:
                        items:
                          properties:
                            loadBalancerStatus:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                      nodePort:
                        items:
                          properties:
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                    type: object
                  staging:
                    properties:
                      ingress:
                        items:
                          properties:
                            address:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            host:
                              type: string
                            ingressName:
                              type: string
                            path:
                              type: string
                            serviceName:
                              type: string
                            tls:
                              type: boolean
                          type: object
                        type: array
                      loadBalancer:
                        items:
                          properties:
                            loadBalancerStatus:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                      nodePort:
                        items:
                          properties:
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              readWriteOncePvc:
                type: boolean
              readyBlueReplicas:
                format: int32
                type: integer
              readyGreenReplicas:
                format: int32
                type: integer
              readyReplicas:
                format: int32
                type: integer
              services:
                items:
                  type: string
                type: array
              status:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Workload is the Schema for the workloads API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadSpec defines the desired state of Workload
            properties:
              deploymentStrategy:
                enum:
                - default
                - blue/green
                - canary
                - ab/testing
                type: string
              replicas:
                format: int32
                type: integer
              resourceType:
                enum:
                - Deployment
                - StatefulSet
                - DaemonSet
                - CronJob
                - DeploymentConfig
                type: string
              strategySpec:
                description: StrategySpec defines the desired state of Workload
                properties:
                  autoDeploy:
                    type: boolean
                  autoProgression:
                    properties:
                      enabled:
                        type: boolean
                      increment:
                        format: int32
                        type: integer
                      interval:
                        type: string
                      maxWeight:
                        format: int32
                        type: integer
                      metrics:
                        additionalProperties:
                          properties:
                            max:
                              format: int32
                              type: integer
                            min:
                              format: int32
                              type: integer
                          type: object
                        type: object
                      minRequest:
                        format: int32
                        type: integer
                      steps:
                        items:
                          format: int32
                          type: integer
                        type: array
                      webhooks:
                        items:
                          properties:
                            metadata:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                            url:
                              type: string
                          type: object
                        type: array
                    type: object
                  bascule:
                    enum:
                    - blue
                    - green
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    type: object
                  live:
                    items:
                      description: Container defines the desired state of Workload
                      properties:
                        filter:
                          type: string
                        image:
                          type: string
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - name
                      - version
                      type: object
                    type: array
                  staging:
                    items:
                      description: Container defines the desired state of Workload
                      properties:
                        filter:
                          type: string
                        image:
                          type: string
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - name
                      - version
                      type: object
                    type: array
                  trafficSplitting:
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                required:
                - live
                type: object
            required:
            - deploymentStrategy
            - replicas
            - resourceType
            - strategySpec
            type: object
          status:
            description: WorkloadStatus defines the observed state of Workload
            properties:
              containerStatus:
                items:
                  description: ContainerStatus defines the observed state of Workload
                  properties:
                    image:
                      type: string
                    name:
                      type: string
                    othersVersion:
                      items:
                        description: Tag defines
                        properties:
                          createdAt:
                            type: string
                          name:
                            type: string
                          sha265:
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    stagingVersion:
                      type: string
                    version:
                      type: string
                    versionHistory:
                      items:
                        type: string
                      type: array
                  required:
                  - image
                  - name
                  - version
                  type: object
                type: array
              desiredReplicas:
                format: int32
                type: integer
              ingresses:
                description: IngressSpec  defines the observed state of Workload
                properties:
                  live:
                    items:
                      description: IngressEndpoint defines the observed state of Workload
                      properties:
                        address:
                          items:
                            description: 'LoadBalancerIngress represents the status
                              of a load-balancer ingress point: traffic intended for
                              the service should be sent to an ingress point.'
                            properties:
                              hostname:
                                description: Hostname is set for load-balancer ingress
                                  points that are DNS based (typically AWS load-balancers)
                                type: string
                              ip:
                                description: IP is set for load-balancer ingress points
                                  that are IP based (typically GCE or OpenStack load-balancers)
                                type: string
                              ports:
                                description: Ports is a list of records of service
                                  ports If used, every port defined in the service
                                  should have an entry in it
                                items:
                                  properties:
                                    error:
                                      description: 'Error is to record the problem
                                        with the service port The format of the error
                                        shall comply with the following rules: - built-in
                                        error values shall be specified in this file
                                        and those shall use CamelCase names - cloud
                                        provider specific error values must have names
                                        that comply with the format foo.example.com/CamelCase.
                                        --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                      maxLength: 316
                                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                      type: string
                                    port:
                                      description: Port is the port number of the
                                        service port of which status is recorded here
                                      format: int32
                                      type: integer
                                    protocol:
                                      default: TCP
                                      description: 'Protocol is the protocol of the
                                        service port of which status is recorded here
                                        The supported values are: "TCP", "UDP", "SCTP"'
                                      type: string
                                  required:
                                  - port
                                  - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          type: array
                        host:
                          type: string
                        name:
                          type: string
                        path:
                          type: string
                        serviceName:
                          type: string
                        servicePort:
                          format: int32
                          type: integer
                        tls:
                          type: boolean
                      required:
                      - host
                      - name
                      - serviceName
                      type: object
                    type: array
                  staging:
                    items:
                      description: IngressEndpoint defines the observed state of Workload
                      properties:
                        address:
                          items:
                            description: 'LoadBalancerIngress represents the status
                              of a load-balancer ingress point: traffic intended for
                              the service should be sent to an ingress point.'
                            properties:
                              hostname:
                                description: Hostname is set for load-balancer ingress
                                  points that are DNS based (typically AWS load-balancers)
                                type: string
                              ip:
                                description: IP is set for load-balancer ingress points
                                  that are IP based (typically GCE or OpenStack load-balancers)
                                type: string
                              ports:
                                description: Ports is a list of records of service
                                  ports If used, every port defined in the service
                                  should have an entry in it
                                items:
                                  properties:
                                    error:
                                      description: 'Error is to record the problem
                                        with the service port The format of the error
                                        shall comply with the following rules: - built-in
                                        error values shall be specified in this file
                                        and those shall use CamelCase names - cloud
                                        provider specific error values must have names
                                        that comply with the format foo.example.com/CamelCase.
                                        --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                      maxLength: 316
                                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                      type: string
                                    port:
                                      description: Port is the port number of the
                                        service port of which status is recorded here
                                      format: int32
                                      type: integer
                                    protocol:
                                      default: TCP
                                      description: 'Protocol is the protocol of the
                                        service port of which status is recorded here
                                        The supported values are: "TCP", "UDP", "SCTP"'
                                      type: string
                                  required:
                                  - port
                                  - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          type: array
                        host:
                          type: string
                        name:
                          type: string
                        path:
                          type: string
                        serviceName:
                          type: string
                        servicePort:
                          format: int32
                          type: integer
                        tls:
                          type: boolean
                      required:
                      - host
                      - name
                      - serviceName
                      type: object
                    type: array
                type: object
              lastAutoProgressDate:
                format: date-time
                type: string
              lastReconciledStragegy:
                type: string
              liveReadyReplicas:
                format: int32
                type: integer
              liveVersion:
                type: string
              readWriteOncePvc:
                type: boolean
              services:
                description: Services defines the observed state of Workload
                properties:
                  live:
                    items:
                      description: ServiceEndpoint defines the observed state of Workload
                      properties:
                        address:
                          description: LoadBalancerStatus represents the status of
                            a load-balancer.
                          properties:
                            ingress:
                              description: Ingress is a list containing ingress points
                                for the load-balancer. Traffic intended for the service
                                should be sent to these ingress points.
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                          type: object
                        name:
                          type: string
                        port:
                          items:
                            description: ServicePort contains information on service's
                              port.
                            properties:
                              appProtocol:
                                description: The application protocol for this port.
                                  This field follows standard Kubernetes label syntax.
                                  Un-prefixed names are reserved for IANA standard
                                  service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).
                                  Non-standard protocols should use prefixed names
                                  such as mycompany.com/my-custom-protocol.
                                type: string
                              name:
                                description: The name of this port within the service.
                                  This must be a DNS_LABEL. All ports within a ServiceSpec
                                  must have unique names. When considering the endpoints
                                  for a Service, this must match the 'name' field
                                  in the EndpointPort. Optional if only one ServicePort
                                  is defined on this service.
                                type: string
                              nodePort:
                                description: 'The port on each node on which this
                                  service is exposed when type is NodePort or LoadBalancer.  Usually
                                  assigned by the system. If a value is specified,
                                  in-range, and not in use it will be used, otherwise
                                  the operation will fail.  If not specified, a port
                                  will be allocated if this Service requires one.  If
                                  this field is specified when creating a Service
                                  which does not need it, creation will fail. This
                                  field will be wiped when updating a Service to no
                                  longer need it (e.g. changing type from NodePort
                                  to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                format: int32
                                type: integer
                              port:
                                description: The port that will be exposed by this
                                  service.
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: The IP protocol for this port. Supports
                                  "TCP", "UDP", and "SCTP". Default is TCP.
                                type: string
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: 'Number or name of the port to access
                                  on the pods targeted by the service. Number must
                                  be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  If this is a string, it will be looked up as a named
                                  port in the target Pod''s container ports. If this
                                  is not specified, the value of the ''port'' field
                                  is used (an identity map). This field is ignored
                                  for services with clusterIP=None, and should be
                                  omitted or set equal to the ''port'' field. More
                                  info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          type: array
                        type:
                          enum:
                          - ClusterIP
                          - LoadBalancer
                          - NodePort
                          type: string
                      required:
                      - address
                      - name
                      - port
                      - type
                      type: object
                    type: array
                  staging:
                    items:
                      description: ServiceEndpoint defines the observed state of Workload
                      properties:
                        address:
                          description: LoadBalancerStatus represents the status of
                            a load-balancer.
                          properties:
                            ingress:
                              description: Ingress is a list containing ingress points
                                for the load-balancer. Traffic intended for the service
                                should be sent to these ingress points.
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                          type: object
                        name:
                          type: string
                        port:
                          items:
                            description: ServicePort contains information on service's
                              port.
                            properties:
                              appProtocol:
                                description: The application protocol for this port.
                                  This field follows standard Kubernetes label syntax.
                                  Un-prefixed names are reserved for IANA standard
                                  service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).
                                  Non-standard protocols should use prefixed names
                                  such as mycompany.com/my-custom-protocol.
                                type: string
                              name:
                                description: The name of this port within the service.
                                  This must be a DNS_LABEL. All ports within a ServiceSpec
                                  must have unique names. When considering the endpoints
                                  for a Service, this must match the 'name' field
                                  in the EndpointPort. Optional if only one ServicePort
                                  is defined on this service.
                                type: string
                              nodePort:
                                description: 'The port on each node on which this
                                  service is exposed when type is NodePort or LoadBalancer.  Usually
                                  assigned by the system. If a value is specified,
                                  in-range, and not in use it will be used, otherwise
                                  the operation will fail.  If not specified, a port
                                  will be allocated if this Service requires one.  If
                                  this field is specified when creating a Service
                                  which does not need it, creation will fail. This
                                  field will be wiped when updating a Service to no
                                  longer need it (e.g. changing type from NodePort
                                  to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                format: int32
                                type: integer
                              port:
                                description: The port that will be exposed by this
                                  service.
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: The IP protocol for this port. Supports
                                  "TCP", "UDP", and "SCTP". Default is TCP.
                                type: string
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: 'Number or name of the port to access
                                  on the pods targeted by the service. Number must
                                  be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  If this is a string, it will be looked up as a named
                                  port in the target Pod''s container ports. If this
                                  is not specified, the value of the ''port'' field
                                  is used (an identity map). This field is ignored
                                  for services with clusterIP=None, and should be
                                  omitted or set equal to the ''port'' field. More
                                  info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          type: array
                        type:
                          enum:
                          - ClusterIP
                          - LoadBalancer
                          - NodePort
                          type: string
                      required:
                      - address
                      - name
                      - port
                      - type
                      type: object
                    type: array
                type: object
              stagingReadyReplicas:
                format: int32
                type: integer
              status:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: cno/charts/agentConfig/templates/onboard/cno-onboard-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: environments.onboarding.beopenit.com
spec:
  group: onboarding.beopenit.com
  names:
    kind: Environment
    listKind: EnvironmentList
    plural: environments
    singular: environment
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Environment is the Schema for the environments API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: EnvironmentSpec defines the desired state of Environment
              properties:
                name:
                  type: string
                isprod:
                  type: boolean
                resources:
                  description: Resources describes requests and limits for the cluster
                    resources.
                  properties:
                    limits:
                      description: ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                          type: string
                        ephemeral-storage:
                          pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                          type: string
                        memory:
                          pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                          type: string
                      required:
                        - cpu
                        - ephemeral-storage
                        - memory
                      type: object
                    requests:
                      description: ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                          type: string
                        ephemeral-storage:
                          pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                          type: string
                        memory:
                          pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                          type: string
                      required:
                        - cpu
                        - ephemeral-storage
                        - memory
                      type: object
                  type: object
                storage:
                  pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                  type: string
                users:
                  items:
                    properties:
                      email:
                        type: string
                      environmentId:
                        type: string
                      userId:
                        type: string
                      role:
                        type: string
                      userFullName:
                        type: string
                      username:
                        type: string
                    required:
                      - email
                      - environmentId
                      - userId
                      - role
                      - userFullName
                      - username
                    type: object
                  type: array
              required:
                - name
                - resources
                - storage
                - users
              type: object
            status:
              description: EnvironmentStatus defines the observed state of Environment
                (success, failed)
              properties:
                environmentStatus:
                  type: string
              required:
                - environmentStatus
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: cno/charts/agentConfig/charts/metrics-server/templates/clusterrole-aggregated-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:metrics-server-aggregated-reader
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
  - apiGroups:
      - metrics.k8s.io
    resources:
      - pods
      - nodes
    verbs:
      - get
      - list
      - watch
---
# Source: cno/charts/agentConfig/charts/metrics-server/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:my-release-metrics-server
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - ""
    resources:
    - nodes/metrics
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
      - pods
      - nodes
      - namespaces
      - configmaps
    verbs:
      - get
      - list
      - watch
---
# Source: cno/charts/agentConfig/templates/cd/cno-cd.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cno-cd-operator
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - daemonsets/finalizers
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - deployments/finalizers
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - statefulsets
  - statefulsets/finalizers
  verbs:
  - '*'
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs
  - deploymentconfigs/finalizers
  verbs:
  - '*'
- apiGroups:
  - cnocd.beopenit.com
  resources:
  - workloads
  - workloads/finalizers
  - workloads/status
  verbs:
  - '*'
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  - httproutes
  - tcproutes
  verbs:
  - '*'
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  - imagestreams/finalizers
  verbs:
  - '*'
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingresses/finalizers
  - ingresses/status
  verbs:
  - '*'
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  - routes/finalizers
  verbs:
  - '*'
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
# Source: cno/charts/agentConfig/templates/cd/cno-cd.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cno-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: cno/charts/agentConfig/templates/onboard/cno-onboard-user-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: cno-admin-cluster-role
rules:
- apiGroups:
  - cnocd.beopenit.com
  resources:
  - workloads
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addonoperators
  verbs:
  - '*'
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addons
  verbs:
  - '*'
- apiGroups:
  - operators.coreos.com
  resources:
  - subscriptions
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - catalogsources
  - installplans
  - subscriptions
  verbs:
  - delete
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - catalogsources
  - installplans
  - subscriptions
  - operatorgroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  - packagemanifests/icon
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monitoring.openshift.io
  resources:
  - clusterurlmonitors
  verbs:
  - '*'
- apiGroups:
  - managed.openshift.io
  resources:
  - customdomains
  verbs:
  - '*'
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addonoperators
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addons
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - monitoring.openshift.io
  resources:
  - clusterurlmonitors
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - managed.openshift.io
  resources:
  - customdomains
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - managednotifications
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - managed.openshift.io
  resources:
  - mustgathers
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - ocmagents
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreamimages
  - imagestreammappings
  - imagestreams
  - imagestreams/secrets
  - imagestreamtags
  - imagetags
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreamimports
  verbs:
  - create
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams/layers
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  - project.openshift.io
  resources:
  - projects
  verbs:
  - get
- apiGroups:
  - monitoring.openshift.io
  resources:
  - routemonitors
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - splunkforwarder.managed.openshift.io
  resources:
  - splunkforwarders
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - managed.openshift.io
  resources:
  - subjectpermissions
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/attach
  - pods/exec
  - pods/portforward
  - pods/proxy
  - secrets
  - services/proxy
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - impersonate
- apiGroups:
  - ""
  resources:
  - pods
  - pods/attach
  - pods/exec
  - pods/portforward
  - pods/proxy
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - persistentvolumeclaims
  - replicationcontrollers
  - replicationcontrollers/scale
  - secrets
  - serviceaccounts
  - services
  - services/proxy
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - deployments/rollback
  - deployments/scale
  - replicasets
  - replicasets/scale
  - statefulsets
  - statefulsets/scale
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - deployments/rollback
  - deployments/scale
  - ingresses
  - networkpolicies
  - replicasets
  - replicasets/scale
  - replicationcontrollers/scale
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - networkpolicies
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams
  verbs:
  - create
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - builds/details
  verbs:
  - update
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - builds
  verbs:
  - get
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
  - deletecollection
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildconfigs
  - buildconfigs/webhooks
  - builds
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - builds/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildconfigs/instantiate
  - buildconfigs/instantiatebinary
  - builds/clone
  verbs:
  - create
- apiGroups:
  - build.openshift.io
  resources:
  - jenkins
  verbs:
  - edit
  - view
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigs
  - deploymentconfigs/scale
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigrollbacks
  - deploymentconfigs/instantiate
  - deploymentconfigs/rollback
  verbs:
  - create
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigs/log
  - deploymentconfigs/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - quota.openshift.io
  resources:
  - appliedclusterresourcequotas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes/custom-host
  verbs:
  - create
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - template.openshift.io
  resources:
  - processedtemplates
  - templateconfigs
  - templateinstances
  - templates
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildlogs
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - resourcequotausages
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - upgrade.managed.openshift.io
  resources:
  - upgradeconfigs
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - managed.openshift.io
  resources:
  - veleroinstalls
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - addonoperators.addons.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addonoperators
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - addons.addons.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addons
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - clusterurlmonitors.monitoring.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - monitoring.openshift.io
  resources:
  - clusterurlmonitors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - customdomains.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - customdomains
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - managednotifications.ocmagent.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - managednotifications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - mustgathers.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - mustgathers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ocmagents.ocmagent.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - ocmagents
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreamimages
  - imagestreammappings
  - imagestreams
  - imagestreamtags
  - imagetags
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams/layers
  verbs:
  - get
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - routemonitors.monitoring.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - monitoring.openshift.io
  resources:
  - routemonitors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - splunkforwarders.splunkforwarder.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - splunkforwarder.managed.openshift.io
  resources:
  - splunkforwarders
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - subjectpermissions.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - subjectpermissions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  - pods
  - replicationcontrollers
  - replicationcontrollers/scale
  - serviceaccounts
  - services
  - services/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - bindings
  - events
  - limitranges
  - namespaces/status
  - pods/log
  - pods/status
  - replicationcontrollers/status
  - resourcequotas
  - resourcequotas/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - controllerrevisions
  - daemonsets
  - daemonsets/status
  - deployments
  - deployments/scale
  - deployments/status
  - replicasets
  - replicasets/scale
  - replicasets/status
  - statefulsets
  - statefulsets/scale
  - statefulsets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  - horizontalpodautoscalers/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - cronjobs/status
  - jobs
  - jobs/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - daemonsets/status
  - deployments
  - deployments/scale
  - deployments/status
  - ingresses
  - ingresses/status
  - networkpolicies
  - replicasets
  - replicasets/scale
  - replicasets/status
  - replicationcontrollers/scale
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  - poddisruptionbudgets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingresses/status
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildconfigs
  - buildconfigs/webhooks
  - builds
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - build.openshift.io
  resources:
  - jenkins
  verbs:
  - view
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigs
  - deploymentconfigs/scale
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - template.openshift.io
  resources:
  - processedtemplates
  - templateconfigs
  - templateinstances
  - templates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildlogs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - upgradeconfigs.upgrade.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - upgrade.managed.openshift.io
  resources:
  - upgradeconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - veleroinstalls.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - veleroinstalls
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - managednotifications
  verbs:
  - '*'
- apiGroups:
  - managed.openshift.io
  resources:
  - mustgathers
  verbs:
  - '*'
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - ocmagents
  verbs:
  - '*'
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  verbs:
  - '*'
- apiGroups:
  - ""
  - authorization.openshift.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - authorization.openshift.io
  resources:
  - localresourceaccessreviews
  - localsubjectaccessreviews
  - subjectrulesreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - localsubjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  - project.openshift.io
  resources:
  - projects
  verbs:
  - delete
  - get
- apiGroups:
  - ""
  - authorization.openshift.io
  resources:
  - resourceaccessreviews
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - monitoring.openshift.io
  resources:
  - routemonitors
  verbs:
  - '*'
- apiGroups:
  - splunkforwarder.managed.openshift.io
  resources:
  - splunkforwarders
  verbs:
  - '*'
- apiGroups:
  - managed.openshift.io
  resources:
  - subjectpermissions
  verbs:
  - '*'
- apiGroups:
  - ""
  - security.openshift.io
  resources:
  - podsecuritypolicyreviews
  - podsecuritypolicyselfsubjectreviews
  - podsecuritypolicysubjectreviews
  verbs:
  - create
- apiGroups:
  - ""
  - authorization.openshift.io
  resources:
  - rolebindingrestrictions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - build.openshift.io
  resources:
  - jenkins
  verbs:
  - admin
  - edit
  - view
- apiGroups:
  - ""
  - project.openshift.io
  resources:
  - projects
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes/status
  verbs:
  - update
- apiGroups:
  - upgrade.managed.openshift.io
  resources:
  - upgradeconfigs
  verbs:
  - '*'
- apiGroups:
  - managed.openshift.io
  resources:
  - veleroinstalls
  verbs:
  - '*'
---
# Source: cno/charts/agentConfig/templates/onboard/cno-onboard-user-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: cno-viewer-cluster-role
rules:
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - addonoperators.addons.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addonoperators
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - addons.addons.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addons
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - catalogsources
  - installplans
  - subscriptions
  - operatorgroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  - packagemanifests/icon
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - clusterurlmonitors.monitoring.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - monitoring.openshift.io
  resources:
  - clusterurlmonitors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - customdomains.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - customdomains
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - managednotifications.ocmagent.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - managednotifications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - mustgathers.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - mustgathers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ocmagents.ocmagent.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - ocmagents
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreamimages
  - imagestreammappings
  - imagestreams
  - imagestreamtags
  - imagetags
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams/layers
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  - project.openshift.io
  resources:
  - projects
  verbs:
  - get
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - routemonitors.monitoring.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - monitoring.openshift.io
  resources:
  - routemonitors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - splunkforwarders.splunkforwarder.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - splunkforwarder.managed.openshift.io
  resources:
  - splunkforwarders
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - subjectpermissions.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - subjectpermissions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  - pods
  - replicationcontrollers
  - replicationcontrollers/scale
  - serviceaccounts
  - services
  - services/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - bindings
  - events
  - limitranges
  - namespaces/status
  - pods/log
  - pods/status
  - replicationcontrollers/status
  - resourcequotas
  - resourcequotas/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - controllerrevisions
  - daemonsets
  - daemonsets/status
  - deployments
  - deployments/scale
  - deployments/status
  - replicasets
  - replicasets/scale
  - replicasets/status
  - statefulsets
  - statefulsets/scale
  - statefulsets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  - horizontalpodautoscalers/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - cronjobs/status
  - jobs
  - jobs/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - daemonsets/status
  - deployments
  - deployments/scale
  - deployments/status
  - ingresses
  - ingresses/status
  - networkpolicies
  - replicasets
  - replicasets/scale
  - replicasets/status
  - replicationcontrollers/scale
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  - poddisruptionbudgets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingresses/status
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildconfigs
  - buildconfigs/webhooks
  - builds
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - builds/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - build.openshift.io
  resources:
  - jenkins
  verbs:
  - view
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigs
  - deploymentconfigs/scale
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigs/log
  - deploymentconfigs/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - quota.openshift.io
  resources:
  - appliedclusterresourcequotas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - template.openshift.io
  resources:
  - processedtemplates
  - templateconfigs
  - templateinstances
  - templates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildlogs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - resourcequotausages
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - upgradeconfigs.upgrade.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - upgrade.managed.openshift.io
  resources:
  - upgradeconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - veleroinstalls.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - veleroinstalls
  verbs:
  - get
  - list
  - watch
---
# Source: cno/charts/strimziKafkaOperator/templates/020-ClusterRole-strimzi-cluster-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-cluster-operator-namespaced
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: role
    release: my-release
    heritage: Helm
rules:
# Resources in this role are used by the operator based on an operand being deployed in some namespace. When needed, you
# can deploy the operator as a cluster-wide operator. But grant the rights listed in this role only on the namespaces
# where the operands will be deployed. That way, you can limit the access the operator has to other namespaces where it
# does not manage any clusters.
- apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
    # The cluster operator needs to access and manage rolebindings to grant Strimzi components cluster permissions
  - rolebindings
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
    # The cluster operator needs to access and manage roles to grant the entity operator permissions
  - roles
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - ""
  resources:
    # The cluster operator needs to access and delete pods, this is to allow it to monitor pod health and coordinate rolling updates
  - pods
    # The cluster operator needs to access and manage service accounts to grant Strimzi components cluster permissions
  - serviceaccounts
    # The cluster operator needs to access and manage config maps for Strimzi components configuration
  - configmaps
    # The cluster operator needs to access and manage services and endpoints to expose Strimzi components to network traffic
  - services
  - endpoints
    # The cluster operator needs to access and manage secrets to handle credentials
  - secrets
    # The cluster operator needs to access and manage persistent volume claims to bind them to Strimzi components for persistent data
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
    # The cluster operator needs the extensions api as the operator supports Kubernetes version 1.11+
    # apps/v1 was introduced in Kubernetes 1.14
  - "extensions"
  resources:
    # The cluster operator needs to access and manage deployments to run deployment based Strimzi components
  - deployments
  - deployments/scale
    # The cluster operator needs to access replica sets to manage Strimzi components and to determine error states
  - replicasets
    # The cluster operator needs to access and manage replication controllers to manage replicasets
  - replicationcontrollers
    # The cluster operator needs to access and manage network policies to lock down communication between Strimzi components
  - networkpolicies
    # The cluster operator needs to access and manage ingresses which allow external access to the services in a cluster
  - ingresses
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - "apps"
  resources:
    # The cluster operator needs to access and manage deployments to run deployment based Strimzi components
  - deployments
  - deployments/scale
  - deployments/status
    # The cluster operator needs to access and manage stateful sets to run stateful sets based Strimzi components
  - statefulsets
    # The cluster operator needs to access replica-sets to manage Strimzi components and to determine error states
  - replicasets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - ""   # legacy core events api, used by topic operator
  - "events.k8s.io" # new events api, used by cluster operator
  resources:
    # The cluster operator needs to be able to create events and delegate permissions to do so
  - events
  verbs:
  - create
- apiGroups:
    # Kafka Connect Build on OpenShift requirement
  - build.openshift.io
  resources:
  - buildconfigs
  - buildconfigs/instantiate
  - builds
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
    # The cluster operator needs to access and manage network policies to lock down communication between Strimzi components
  - networkpolicies
    # The cluster operator needs to access and manage ingresses which allow external access to the services in a cluster
  - ingresses
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - route.openshift.io
  resources:
    # The cluster operator needs to access and manage routes to expose Strimzi components for external access
  - routes
  - routes/custom-host
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - policy
  resources:
    # The cluster operator needs to access and manage pod disruption budgets this limits the number of concurrent disruptions
    # that a Strimzi component experiences, allowing for higher availability
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
---
# Source: cno/charts/strimziKafkaOperator/templates/021-ClusterRole-strimzi-cluster-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-cluster-operator-global
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: role
    release: my-release
    heritage: Helm
rules:
- apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
    # The cluster operator needs to create and manage cluster role bindings in the case of an install where a user
    # has specified they want their cluster role bindings generated
  - clusterrolebindings
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
    # The cluster operator requires "get" permissions to view storage class details
    # This is because only a persistent volume of a supported storage class type can be resized
  - storageclasses
  verbs:
  - get
- apiGroups:
    - ""
  resources:
    # The cluster operator requires "list" permissions to view all nodes in a cluster
    # The listing is used to determine the node addresses when NodePort access is configured
    # These addresses are then exposed in the custom resource states
  - nodes
  verbs:
  - list
---
# Source: cno/charts/strimziKafkaOperator/templates/022-ClusterRole-strimzi-cluster-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-cluster-operator-leader-election
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: role
    release: my-release
    heritage: Helm
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
    # The cluster operator needs to access and manage leases for leader election
    # The "create" verb cannot be used with "resourceNames"
  - leases
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
    # The cluster operator needs to access and manage leases for leader election
  - leases
  resourceNames:
    # The default RBAC files give the operator only access to the Lease resource names strimzi-cluster-operator
    # If you want to use another resource name or resource namespace, you have to configure the RBAC resources accordingly
  - strimzi-cluster-operator
  verbs:
  - get
  - list
  - watch
  - delete
  - patch
  - update
---
# Source: cno/charts/strimziKafkaOperator/templates/023-ClusterRole-strimzi-cluster-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-cluster-operator-watched
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: role
    release: my-release
    heritage: Helm
rules:
# Resources in this role are being watched by the operator. When operator is deployed as cluster-wide, these permissions
# need to be granted to the operator on a cluster wide level as well, even if the operands will be deployed only in
# few of the namespaces in given cluster. This is required to set up the Kubernetes watches and informers.
# Note: The rights included in this role might change in the future
- apiGroups:
  - ""
  resources:
    # The cluster operator needs to access and delete pods, this is to allow it to monitor pod health and coordinate rolling updates
  - pods
  verbs:
  - watch
  - list
- apiGroups:
  - "kafka.strimzi.io"
  resources:
  # The cluster operator runs the KafkaAssemblyOperator, which needs to access and manage Kafka resources
  - kafkas
  - kafkas/status
  # The cluster operator runs the KafkaConnectAssemblyOperator, which needs to access and manage KafkaConnect resources
  - kafkaconnects
  - kafkaconnects/status
  # The cluster operator runs the KafkaConnectorAssemblyOperator, which needs to access and manage KafkaConnector resources
  - kafkaconnectors
  - kafkaconnectors/status
  # The cluster operator runs the KafkaMirrorMakerAssemblyOperator, which needs to access and manage KafkaMirrorMaker resources
  - kafkamirrormakers
  - kafkamirrormakers/status
  # The cluster operator runs the KafkaBridgeAssemblyOperator, which needs to access and manage BridgeMaker resources
  - kafkabridges
  - kafkabridges/status
  # The cluster operator runs the KafkaMirrorMaker2AssemblyOperator, which needs to access and manage KafkaMirrorMaker2 resources
  - kafkamirrormaker2s
  - kafkamirrormaker2s/status
  # The cluster operator runs the KafkaRebalanceAssemblyOperator, which needs to access and manage KafkaRebalance resources
  - kafkarebalances
  - kafkarebalances/status
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - "core.strimzi.io"
  resources:
  # The cluster operator uses StrimziPodSets to manage the Kafka and ZooKeeper pods
  - strimzipodsets
  - strimzipodsets/status
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
---
# Source: cno/charts/strimziKafkaOperator/templates/030-ClusterRole-strimzi-kafka-broker.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-kafka-broker
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: broker-role
    release: my-release
    heritage: Helm
rules:
- apiGroups:
  - ""
  resources:
    # The Kafka Brokers require "get" permissions to view the node they are on
    # This information is used to generate a Rack ID that is used for High Availability configurations
  - nodes
  verbs:
  - get
---
# Source: cno/charts/strimziKafkaOperator/templates/031-ClusterRole-strimzi-entity-operator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-entity-operator
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: entity-operator-role
    release: my-release
    heritage: Helm
rules:
- apiGroups:
  - "kafka.strimzi.io"
  resources:
    # The entity operator runs the KafkaTopic assembly operator, which needs to access and manage KafkaTopic resources
  - kafkatopics
  - kafkatopics/status
    # The entity operator runs the KafkaUser assembly operator, which needs to access and manage KafkaUser resources
  - kafkausers
  - kafkausers/status
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
    # The entity operator needs to be able to create events
  - create
- apiGroups:
  - ""
  resources:
    # The entity operator user-operator needs to access and manage secrets to store generated credentials
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
---
# Source: cno/charts/strimziKafkaOperator/templates/033-ClusterRole-strimzi-kafka-client.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-kafka-client
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: client-role
    release: my-release
    heritage: Helm
rules:
- apiGroups:
  - ""
  resources:
    # The Kafka clients (Connect, Mirror Maker, etc.) require "get" permissions to view the node they are on
    # This information is used to generate a Rack ID (client.rack option) that is used for consuming from the closest
    # replicas when enabled
  - nodes
  verbs:
  - get
---
# Source: cno/charts/agentConfig/charts/metrics-server/templates/clusterrolebinding-auth-delegator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-metrics-server:system:auth-delegator
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: my-release-metrics-server
    namespace: default
---
# Source: cno/charts/agentConfig/charts/metrics-server/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:my-release-metrics-server
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:my-release-metrics-server
subjects:
  - kind: ServiceAccount
    name: my-release-metrics-server
    namespace: default
---
# Source: cno/charts/agentConfig/templates/agent/serviceaccount.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cno-agent
subjects:
  - kind: ServiceAccount
    name: cno-agent
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno/charts/agentConfig/templates/cd/cno-cd.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cno-cd-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cno-cd-operator
subjects:
  - kind: ServiceAccount
    name: cno-cd-operator
    namespace: default
---
# Source: cno/charts/agentConfig/templates/cd/cno-cd.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cno-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cno-proxy-role
subjects:
- kind: ServiceAccount
  name: cno-cd-operator
  namespace: default
---
# Source: cno/charts/agentConfig/templates/onboard/cno-onboard.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cno-onboarding-operator
subjects:
  - kind: ServiceAccount
    name: cno-onboarding-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno/charts/strimziKafkaOperator/templates/021-ClusterRoleBinding-strimzi-cluster-operator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: strimzi-cluster-operator
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: role-binding
    release: my-release
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: strimzi-cluster-operator-global
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno/charts/strimziKafkaOperator/templates/030-ClusterRoleBinding-strimzi-cluster-operator-kafka-broker-delegation.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: strimzi-cluster-operator-kafka-broker-delegation
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: broker-role-binding
    release: my-release
    heritage: Helm
# The Kafka broker cluster role must be bound to the cluster operator service account so that it can delegate the cluster role to the Kafka brokers.
# This must be done to avoid escalating privileges which would be blocked by Kubernetes.
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: strimzi-kafka-broker
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno/charts/strimziKafkaOperator/templates/033-ClusterRoleBinding-strimzi-cluster-operator-kafka-client-delegation.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: strimzi-cluster-operator-kafka-client-delegation
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: client-role-binding
    release: my-release
    heritage: Helm
# The Kafka clients cluster role must be bound to the cluster operator service account so that it can delegate the
# cluster role to the Kafka clients using it for consuming from closest replica.
# This must be done to avoid escalating privileges which would be blocked by Kubernetes.
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: strimzi-kafka-client
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno/templates/cno-api.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cno-api
subjects:
  - kind: ServiceAccount
    name: cno-api
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno/charts/agentConfig/templates/cd/cno-cd.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cno-cd-operator-leader-election-role
  namespace: default
rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
---
# Source: cno/charts/agentConfig/charts/metrics-server/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-metrics-server-auth-reader
  namespace: kube-system
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: my-release-metrics-server
    namespace: default
---
# Source: cno/charts/agentConfig/templates/cd/cno-cd.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cno-cd-operator-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cno-cd-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    name: cno-cd-operator
    namespace: default
---
# Source: cno/charts/strimziKafkaOperator/templates/020-RoleBinding-strimzi-cluster-operator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: strimzi-cluster-operator
  namespace: default
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: role-binding
    release: my-release
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: strimzi-cluster-operator-namespaced
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno/charts/strimziKafkaOperator/templates/022-RoleBinding-strimzi-cluster-operator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: strimzi-cluster-operator-leader-election
  namespace: default
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: role-binding
    release: my-release
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: strimzi-cluster-operator-leader-election
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno/charts/strimziKafkaOperator/templates/023-RoleBinding-strimzi-cluster-operator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: strimzi-cluster-operator-watched
  namespace: default
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: role-binding
    release: my-release
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: strimzi-cluster-operator-watched
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno/charts/strimziKafkaOperator/templates/031-RoleBinding-strimzi-cluster-operator-entity-operator-delegation.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: strimzi-cluster-operator-entity-operator-delegation
  namespace: default
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: entity-operator-role-binding
    release: my-release
    heritage: Helm
# The Entity Operator cluster role must be bound to the cluster operator service account so that it can delegate the cluster role to the Entity Operator.
# This must be done to avoid escalating privileges which would be blocked by Kubernetes.
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: strimzi-entity-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno/charts/agentConfig/charts/metrics-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-metrics-server
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
---
# Source: cno/charts/agentConfig/templates/cd/cno-cd.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cno-cd-operator
  name: controller-manager-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app: cno-cd-operator
---
# Source: cno/templates/cno-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: cno-api
  namespace: default
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: cno-api
  sessionAffinity: None
---
# Source: cno/templates/cno-ui.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cno-ui
  name: cno-ui
  namespace: default
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: cno-ui
  type: ClusterIP
---
# Source: cno/templates/keycloak.yaml
apiVersion: v1
kind: Service
metadata:
  name: cno-keycloak
  namespace: default
  labels:
    app: keycloak
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: cno-keycloak
  type: ClusterIP
---
# Source: cno/templates/mysql-db.yaml
apiVersion: v1
kind: Service
metadata:
  name: cno-api-mysql
  namespace: default
spec:
  ports:
    - port: 3306
  selector:
    app: cno-mysql
---
# Source: cno/charts/agentConfig/charts/metrics-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-metrics-server
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: metrics-server
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metrics-server
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-metrics-server
      priorityClassName: "system-cluster-critical"
      containers:
        - name: metrics-server
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
          imagePullPolicy: IfNotPresent
          args:
            - --secure-port=4443
            - --cert-dir=/tmp
            - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
            - --kubelet-use-node-status-port
            - --metric-resolution=15s
          ports:
          - name: https
            protocol: TCP
            containerPort: 4443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 0
            periodSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
---
# Source: cno/charts/agentConfig/templates/agent/agent-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    fluxcd.io/automated: 'true'
  labels:
    app: cno-agent
  name: cno-agent
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: cno-agent
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cno-agent
    spec:
      initContainers:
        - name: cno-api-check
          image: docker.io/nginxinc/nginx-unprivileged:latest
          command: ["/bin/sh","-c"]
          args:
            - |
              until curl -s -f -o /dev/null "http://cno-api/api/v1/healthy"
              do
                echo cno API http://cno-api/api/v1/healthy unvailable `date`
                sleep 10
              done
              echo Successed: `date`
      containers:
        - image: docker.io/beopenit/cno-agent:v1.1.0
          imagePullPolicy: Always
          name: cno-agent
          resources:
          env:
            - name: IN_CLUSTER
              value: "true"
            - name: CNO_NAMESPACE
              value: default
            - name: KAFKA_TlS_ENABLED
              value: "true"
            - name: KAFKA_BROKERS
              value: cno-kafka-cluster-kafka-bootstrap:9093
            - name: KAFKA_CA_CERT
              value: /kafka/ca/ca.crt
            - name: KAFKA_CLIENT_CERT
              value: /kafka/user/user.crt
            - name: KAFKA_CLIENT_KEY
              value: /kafka/user/user.key
            - name: LICENCE
              valueFrom:
                secretKeyRef:
                  name: agent-licence
                  key: uuid
          volumeMounts:
            - name: kafka-user
              mountPath: /kafka/user
            - name: kafka-ca
              mountPath: /kafka/ca
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      serviceAccountName: cno-agent
      volumes:
        - name: kafka-user
          secret:
            secretName: cno-kafka-superadmin
        - name: kafka-ca
          secret:
            secretName: cno-kafka-cluster-cluster-ca-cert
---
# Source: cno/charts/agentConfig/templates/cd/cno-cd.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
  name: cno-cd-operator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cno-cd-operator
  template:
    metadata:
      annotations:
         kubectl.kubernetes.io/default-container: manager
      labels:
        app: cno-cd-operator
    spec:
      securityContext:
        runAsNonRoot: true
      serviceAccountName: cno-cd-operator
      containers:
        - command:
          - /manager
          args:
          - --leader-elect
          name: cno-cd-operator
          image: docker.io/beopenit/cno-cd-operator:v1.1.0
          securityContext:
            allowPrivilegeEscalation: false
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CLUSTER_TYPE
              value: eks
            - name: DEFAULT_GATEWAY_NAMESPACE
              value: "cno-gateway-api"
            - name: DEFAULT_GATEWAY_NAME
              value: "cno"
---
# Source: cno/charts/agentConfig/templates/onboard/cno-onboard.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cno-onboarding-operator
  namespace: default
  labels:
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cno-onboarding-operator
  template:
    metadata:
      labels:
        app: cno-onboarding-operator
    spec:
      serviceAccountName: cno-onboarding-operator
      containers:
        - name: cno-onboarding-operator
          image: docker.io/beopenit/onboarding-operator-kubernetes:v1.1.0
          imagePullPolicy: Always
          resources:
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: CNO_NAMESPACE
              value:  default
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "cno-onboarding-operator"
---
# Source: cno/charts/strimziKafkaOperator/templates/060-Deployment-strimzi-cluster-operator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: strimzi-cluster-operator
  namespace: default
  labels:
    app: strimzi
    chart: strimziKafkaOperator-0.32.0
    component: deployment
    release: my-release
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      name: strimzi-cluster-operator
      strimzi.io/kind: cluster-operator
  template:
    metadata:
      labels:
        name: strimzi-cluster-operator
        strimzi.io/kind: cluster-operator
    spec:
      serviceAccountName: strimzi-cluster-operator
      volumes:
        - name: strimzi-tmp
          emptyDir:
            medium: Memory
            sizeLimit: 1Mi
        - name: co-config-volume
          configMap:
            name: strimzi-cluster-operator
      containers:
        - name: strimzi-cluster-operator
          image: quay.io/strimzi/operator:0.32.0
          ports:
            - containerPort: 8080
              name: http
          args:
            - /opt/strimzi/bin/cluster_operator_run.sh
          volumeMounts:
            - name: strimzi-tmp
              mountPath: /tmp
            - name: co-config-volume
              mountPath: /opt/strimzi/custom-config/
          env:
            - name: STRIMZI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
              value: "120000"
            - name: STRIMZI_OPERATION_TIMEOUT_MS
              value: "300000"
            - name: STRIMZI_DEFAULT_TLS_SIDECAR_ENTITY_OPERATOR_IMAGE
              value: quay.io/strimzi/kafka:0.32.0-kafka-3.3.1
            - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
              value: quay.io/strimzi/kafka:0.32.0-kafka-3.3.1
            - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
              value: quay.io/strimzi/kafka:0.32.0-kafka-3.3.1
            - name: STRIMZI_KAFKA_IMAGES
              value: |                 
                3.2.0=quay.io/strimzi/kafka:0.32.0-kafka-3.2.0
                3.2.1=quay.io/strimzi/kafka:0.32.0-kafka-3.2.1
                3.2.3=quay.io/strimzi/kafka:0.32.0-kafka-3.2.3
                3.3.1=quay.io/strimzi/kafka:0.32.0-kafka-3.3.1
            - name: STRIMZI_KAFKA_CONNECT_IMAGES
              value: |                 
                3.2.0=quay.io/strimzi/kafka:0.32.0-kafka-3.2.0
                3.2.1=quay.io/strimzi/kafka:0.32.0-kafka-3.2.1
                3.2.3=quay.io/strimzi/kafka:0.32.0-kafka-3.2.3
                3.3.1=quay.io/strimzi/kafka:0.32.0-kafka-3.3.1
            - name: STRIMZI_KAFKA_MIRROR_MAKER_IMAGES
              value: |                 
                3.2.0=quay.io/strimzi/kafka:0.32.0-kafka-3.2.0
                3.2.1=quay.io/strimzi/kafka:0.32.0-kafka-3.2.1
                3.2.3=quay.io/strimzi/kafka:0.32.0-kafka-3.2.3
                3.3.1=quay.io/strimzi/kafka:0.32.0-kafka-3.3.1
            - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
              value: |                 
                3.2.0=quay.io/strimzi/kafka:0.32.0-kafka-3.2.0
                3.2.1=quay.io/strimzi/kafka:0.32.0-kafka-3.2.1
                3.2.3=quay.io/strimzi/kafka:0.32.0-kafka-3.2.3
                3.3.1=quay.io/strimzi/kafka:0.32.0-kafka-3.3.1
            - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
              value: quay.io/strimzi/operator:0.32.0
            - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
              value: quay.io/strimzi/operator:0.32.0
            - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
              value: quay.io/strimzi/operator:0.32.0
            - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
              value: quay.io/strimzi/kafka-bridge:0.22.3
            - name: STRIMZI_DEFAULT_JMXTRANS_IMAGE
              value: quay.io/strimzi/jmxtrans:0.32.0
            - name: STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE
              value: quay.io/strimzi/kaniko-executor:0.32.0
            - name: STRIMZI_DEFAULT_MAVEN_BUILDER
              value: quay.io/strimzi/maven-builder:0.32.0
            - name: STRIMZI_OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            
            - name: STRIMZI_FEATURE_GATES
              value: ""
            - name: STRIMZI_LEADER_ELECTION_ENABLED
              value: "true"
            - name: STRIMZI_LEADER_ELECTION_LEASE_NAME
              value: "strimzi-cluster-operator"
            - name: STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STRIMZI_LEADER_ELECTION_IDENTITY
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          livenessProbe:
            httpGet:
              path: /healthy
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            limits:
              cpu: 1000m
              memory: 384Mi
            requests:
              cpu: 200m
              memory: 384Mi
  strategy:
    type: Recreate
---
# Source: cno/templates/cno-api.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    fluxcd.io/automated: 'true'
  labels:
    app: cno-api
  name: cno-api
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: cno-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cno-api
    spec:
      initContainers:
        - name: keycloak-check
          image: quay.io/keycloak/keycloak:20.0.1
          command: ["/bin/sh","-c"]
          args:
            - |
              until $(curl --output /dev/null --silent --head --fail http://cno-keycloak:8080/auth/realms/cno); do
                echo keycloak unvailable `date`
                sleep 10
              done
              echo Successed: `date`
        - name: kafka-check
          image: quay.io/strimzi/kafka:0.32.0-kafka-3.2.1
          env:
            - name: KAFKA_BROKERS
              value: cno-kafka-cluster-kafka-bootstrap:9092
            - name: SERVER_URL
              value: https://cno-api.dev.gocno.io
            - name: UI_URL
              value: https://cno.dev.gocno.io
          command:
            - /bin/sh
            - -c
          args:
            - |
              while true; do
                 bin/kafka-console-producer.sh --bootstrap-server $KAFKA_BROKERS --topic cno-kafka-health-check &> /dev/null
                 if [[ $? == 0 ]]; then
                    echo Successed: `date`
                    break
                 fi
                 echo Kafka unvailable `date`
                 sleep 5
              done
      containers:
        - image: docker.io/beopenit/cno-api:v1.1.0
          imagePullPolicy: Always
          name: cno-api
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            - name: DEFAULT_SUPER_ADMIN_PASSWORD
              value: admin
            - name: IN_CLUSTER
              value: "true"
            - name: SERVER_PORT
              value: "8080"
            - name: OIDC_REALM
              value: cno
            - name: OIDC_SERVER_BASE_URL
              value: "http://cno-keycloak:8080"
            - name: OIDC_CLIENT_ID
              value: cno-api
            - name: OIDC_CLIENT_SECRET
              value: "cno-api-client-secret"
            - name: KAFKA_BROKERS
              value: cno-kafka-cluster-kafka-bootstrap:9093
            - name: KAFKA_TlS_ENABLED
              value: "true"
            - name: KAFKA_TLS_SKIP_VERIFY
              value: "false"
            - name: KAFKA_VERBOSE
              value: "false"
            - name: CNO_NAMESPACE
              value:  default
            - name: KAFKA_CLUSTER_NAME
              value: cno-kafka-cluster
            - name: DB_HOST
              value: cno-api-mysql
            - name: DB_PORT
              value: "3306"
            - name: DB_NAME
              value: cnoapi
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cno-db-credentals
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cno-db-credentals
                  key: DB_PASSWORD
            - name: CREATE_DEFAULT_CLUSTER
              value: "true"
            - name: DEFAULT_EXTERNAL_BROKERS_URL
              value: broker-0-cno.dev.gocno.io:443
            - name: SERVER_URL
              value: https://cno-api.dev.gocno.io
            - name: DEFAULT_CLUSTER_ID
              value: 7716124d-24e8-4ab2-abd8-90c638a12f89
            - name: DEFAULT_CLUSTER_TYPE
              value: eks
            - name: DEFAULT_CLUSTER_API_SERVER_URL
              value: https://kubernetes.default.svc.cluster.local:443
            - name: KAFKA_CA_CERT
              value: /kafka/ca/ca.crt
            - name: KAFKA_CLIENT_CERT
              value: /kafka/user/user.crt
            - name: KAFKA_CLIENT_KEY
              value: /kafka/user/user.key
          volumeMounts:
            - name: kafka-user
              mountPath: /kafka/user
            - name: kafka-ca
              mountPath: /kafka/ca
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      serviceAccountName: cno-api
      volumes:
        - name: kafka-user
          secret:
            secretName: cno-kafka-superadmin
        - name: kafka-ca
          secret:
            secretName: cno-kafka-cluster-cluster-ca-cert
---
# Source: cno/templates/cno-ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cno-ui
  name: cno-ui
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cno-ui
  template:
    metadata:
      labels:
        app: cno-ui
    spec:          
      containers:
        - image: docker.io/beopenit/cno-ui:v1.1.0
          name: cno-ui
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: API_URL
              value: https://cno-api.dev.gocno.io
            - name: NOTIFICATION_URL
              value: https://cno-api.dev.gocno.io
            - name: OIDC_CLIENT_ID
              value: "public"
---
# Source: cno/templates/mysql-db.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cno-mysql
  namespace: default
  labels:
spec:
  selector:
    matchLabels:
      app: cno-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cno-mysql
    spec:
      containers:
        - image: docker.io/mysql:8.0.31
          name: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cno-db-credentals
                  key: DB_PASSWORD
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
      volumes:
---
# Source: cno/templates/keycloak.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cno-keycloak
  namespace: default
  labels:
    app: cno-keycloak
spec:
  serviceName: keycloak
  replicas: 1
  selector:
    matchLabels:
      app: cno-keycloak
  template:
    metadata:
      labels:
        app: cno-keycloak
    spec:
      initContainers:
      - name: init-db
        env:
          - name: DB_ADDR
            value: cno-api-mysql
          - name: DB_DATABASE
            value: cnoapi
          - name: DB_PORT
            value: "3306"
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: cno-db-credentals
                key: DB_USERNAME
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cno-db-credentals
                key: DB_PASSWORD
        image: docker.io/mysql:8.0.31
        command: ["/bin/sh","-c"]
        args:
          - |
            while ! mysql -h$DB_ADDR -P$DB_PORT -u$DB_USER -p$DB_PASSWORD  -e "create database if not exists $DB_DATABASE;" ; do
              date
              echo `date` Failed: mysql -h$DB_ADDR -P$DB_PORT -u$DB_USER -p$DB_PASSWORD  -e "create database if not exists $DB_DATABASE;"
              sleep 10
            done
            echo Successed: `date`
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:20.0.1
          args: ["start-dev --import-realm --db $KC_DB --db-username $KC_DB_USERNAME --db-password $KC_DB_PASSWORD --db-schema $KC_DB_SCHEMA --db-url-host $KC_DB_URL_HOST --db-url-database $KC_DB_URL_DATABASE"]
          env:
            - name: KEYCLOAK_USER
              valueFrom:
                secretKeyRef:
                  name: cno-keycloak-admin
                  key: ADMIN_USERNAME
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cno-keycloak-admin
                  key: ADMIN_PASSWORD
            - name: KC_PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: KC_DB
              value: mysql
            - name: KC_DB_URL_HOST
              value: cno-api-mysql
            - name: KC_DB_URL_DATABASE
              value: cnoapi
            - name: KC_DB_SCHEMA
              value: cnoapi
            - name: KC_DB_PORT
              value: "3306"
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cno-db-credentals
                  key: DB_USERNAME
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cno-db-credentals
                  key: DB_PASSWORD
            - name: KC_HTTP_RELATIVE_PATH
              value: "/auth"
            - name : KEYCLOAK_HTTP_PORT
              value : "80"
            - name: KEYCLOAK_HTTPS_PORT
              value: "443"
          volumeMounts:
            - name: cno-realm
              mountPath: /opt/keycloak/data/import
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          readinessProbe:
            httpGet:
              path: /auth/realms/master
              port: 8080
      volumes:
        - name: cno-realm
          configMap:
            name: cno-realm
---
# Source: cno/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
  labels:
    app: cno-api
  name: cno-api
  namespace: default
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - cno-api.dev.gocno.io
      secretName: cno-dev.gocno.io-tls
  rules:
    - host: cno-api.dev.gocno.io
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: cno-api
                port:
                  number: 80
---
# Source: cno/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
  labels:
    app: cno-ui
  name: cno-ui
  namespace: default
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - cno.dev.gocno.io
      secretName: cno-dev.gocno.io-tls
  rules:
    - host: cno.dev.gocno.io
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: cno-ui
                port:
                  number: 80
---
# Source: cno/charts/agentConfig/charts/metrics-server/templates/apiservice.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.metrics.k8s.io
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
spec:
  group: metrics.k8s.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: my-release-metrics-server
    namespace: default
  version: v1beta1
  versionPriority: 100
---
# Source: cno/templates/kafka.yaml
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: cno-kafka-cluster
  namespace: default
  labels:
spec:
  kafka:
    template:
      pod:
        metadata:
          labels:
    version: 3.3.1
    replicas: 1
    storage:
      type: ephemeral
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: tls
      - name: external
        port: 9094
        type: ingress
        tls: true
        authentication:
          type: tls
          disableTlsHostnameVerification: true
        configuration:
          class: nginx
          bootstrap:
            host: bootstrap-cno.dev.gocno.io
          brokers:
          - broker: 0
            host: broker-0-cno.dev.gocno.io
          - broker: 1
            host: broker-1-cno.dev.gocno.io
          - broker: 2
            host: broker-2-cno.dev.gocno.io
    authorization:
      type: simple
      superUsers:
        - CN=cno-kafka-superadmin
    config:
      retention.ms:   1800000
      segment.bytes:  268435456
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      default.replication.factor: 1
      min.insync.replicas: 1
      inter.broker.protocol.version: "3.3"
      log.message.format.version: "3.0"
  zookeeper:
    template:
      pod:
        metadata:
          labels:
    replicas: 1
    storage:
      type: ephemeral
  entityOperator:
    topicOperator: {}
    userOperator: {}
---
# Source: cno/templates/kafkauser.yaml
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: cno-kafka-superadmin
  namespace: default
  labels:
    strimzi.io/cluster: cno-kafka-cluster
spec:
  authentication:
    type: tls
  authorization:
    type: simple
    acls: []
