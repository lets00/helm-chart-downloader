---
# Source: elasticsearch2/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-elasticsearch2
  labels:
    app: elasticsearch2
    chart: elasticsearch2-1.0.0
    release: my-release
    heritage: Helm
data:
  elasticsearch.yml: |-
    cluster.name: my-release-elasticsearch2
    node.name: ${HOSTNAME}
    network.host: 0.0.0.0
    discovery.zen.ping.unicast.hosts: ["my-release-elasticsearch2"]
    discovery.zen.minimum_master_nodes: 2
---
# Source: elasticsearch2/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-elasticsearch2-headless
  labels:
    app: elasticsearch2
    chart: elasticsearch2-1.0.0
    release: my-release
    heritage: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: sync
      targetPort: sync
      port: 9300
      protocol: TCP
    - name: web
      targetPort: web
      port: 9200
      protocol: TCP
  selector:
    app: elasticsearch2
    release: my-release
---
# Source: elasticsearch2/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-elasticsearch2
  labels:
    app: elasticsearch2
    chart: elasticsearch2-1.0.0
    release: my-release
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: sync
      targetPort: sync
      port: 9300
      protocol: TCP
    - name: web
      targetPort: web
      port: 9200
      protocol: TCP
  selector:
    app: elasticsearch2
    release: my-release
---
# Source: elasticsearch2/templates/deployment-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-elasticsearch2
  labels:
    app: elasticsearch2
    chart: elasticsearch2-1.0.0
    release: my-release
    heritage: Helm
spec:
  replicas: 3
  serviceName: my-release-elasticsearch2
  selector:
    matchLabels:
      app: elasticsearch2
      release: my-release
  template:
    metadata:
      labels:
        app: elasticsearch2
        release: my-release
    spec:
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      containers:
        - name: elasticsearch2
          image: "elasticsearch:2.4.6"
          imagePullPolicy: IfNotPresent
          env:
            []
          resources:
            {}
          ports:
            - name: sync
              containerPort: 9300
              protocol: TCP
            - name: web
              containerPort: 9200
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: web
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: web
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
            - mountPath: /usr/share/elasticsearch/data
              name: data-storage
              subPath: data
            - mountPath: /usr/share/elasticsearch/plugins
              name: data-storage
              subPath: plugins
      volumes:
        - name: config
          configMap:
            name: my-release-elasticsearch2
  volumeClaimTemplates:
  - metadata:
      name: data-storage
      labels:
        app: elasticsearch2
        chart: elasticsearch2-1.0.0
        release: my-release
        heritage: Helm
      annotations:
        helm.sh/resource-policy: keep
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 4Gi
---
# Source: elasticsearch2/templates/tmp_job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-elasticsearch2
  labels:
    app: elasticsearch2
    chart: elasticsearch2-1.0.0
    release: my-release
    heritage: Helm
spec:
  template:
    metadata:
      labels:
        app: elasticsearch2
        release: my-release
    spec:
      restartPolicy: Never
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      containers:
        - name: elasticsearch2
          image: "elasticsearch:2.4.6"
          imagePullPolicy: IfNotPresent
          command:
            - sleep
            - "60"
          env:
            []
          resources:
            {}
          ports:
            - name: sync
              containerPort: 9300
              protocol: TCP
            - name: web
              containerPort: 9200
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
            - mountPath: /usr/share/elasticsearch/data
              name: data-storage
              subPath: data
            - mountPath: /usr/share/elasticsearch/plugins
              name: data-storage
              subPath: plugins
      volumes:
        - name: config
          configMap:
            name: my-release-elasticsearch2
        - name: data-storage
          emptyDir: {}
