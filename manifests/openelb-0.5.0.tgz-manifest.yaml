---
# Source: openelb/templates/admission-webhooks/job-patch/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openelb-admission
  namespace: default
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-admission
---
# Source: openelb/templates/manager-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openelb-manager
  namespace: default
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-manager
---
# Source: openelb/templates/manager-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-keepalived-vip
  namespace: default
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-keepalived
---
# Source: openelb/templates/admission-webhooks/job-patch/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-admission
  name: my-release-openelb-admission
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - update
---
# Source: openelb/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
  name: my-release-openelb
rules:
  - apiGroups:
      - apps
    resources:
      - daemonsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets/status
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments/status
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - network.kubesphere.io
    resources:
      - bgpconfs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - network.kubesphere.io
    resources:
      - bgpconfs/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - network.kubesphere.io
    resources:
      - bgppeers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - network.kubesphere.io
    resources:
      - bgppeers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - network.kubesphere.io
    resources:
      - eips
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - network.kubesphere.io
    resources:
      - eips/status
    verbs:
      - get
      - patch
      - update
---
# Source: openelb/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-keepalived
  name: my-release-openelb-keepalived
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes
      - endpoints
      - services
      - configmaps
    verbs:
      - get
      - list
      - watch
---
# Source: openelb/templates/admission-webhooks/job-patch/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-admission
  name: my-release-openelb-admission
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-openelb-admission
subjects:
  - kind: ServiceAccount
    name: openelb-admission
    namespace:  default
---
# Source: openelb/templates/manager-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-manager
  name: my-release-openelb-manager
subjects:
  - kind: ServiceAccount
    name: openelb-manager
    namespace: default
roleRef:
  kind: ClusterRole
  name: my-release-openelb
  apiGroup: rbac.authorization.k8s.io
---
# Source: openelb/templates/manager-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-keepalived
  name: my-release-openelb-keepalived
subjects:
  - kind: ServiceAccount
    name: kube-keepalived-vip
    namespace: default
roleRef:
  kind: ClusterRole
  name: my-release-openelb-keepalived
  apiGroup: rbac.authorization.k8s.io
---
# Source: openelb/templates/admission-webhooks/job-patch/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-admission
  name: my-release-openelb-admission
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
---
# Source: openelb/templates/manager-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-openelb-manager
  namespace: default
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-manager
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
# Source: openelb/templates/admission-webhooks/job-patch/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-admission
  name: my-release-openelb-admission
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-openelb-admission
subjects:
  - kind: ServiceAccount
    name: openelb-admission
    namespace: default
---
# Source: openelb/templates/manager-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-openelb-manager
  namespace: default
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-openelb-manager
subjects:
- kind: ServiceAccount
  name: openelb-manager
  namespace: default
---
# Source: openelb/templates/manager-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-openelb-manager
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-manager
  namespace: default
spec:
  ports:
    - name: https-webhook
      port: 443
      targetPort: webhook
  selector:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-manager
  type: ClusterIP
---
# Source: openelb/templates/manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-openelb-manager
  namespace: default
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-manager
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: openelb
      helm.sh/chart: openelb-0.5.0
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/version: "0.5.0"
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/component: my-release-openelb-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openelb
        helm.sh/chart: openelb-0.5.0
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.5.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: my-release-openelb-manager
    spec:
      serviceAccountName: openelb-manager
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: openelb
                helm.sh/chart: openelb-0.5.0
                app.kubernetes.io/instance: my-release
                app.kubernetes.io/version: "0.5.0"
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/component: my-release-openelb-manager
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      containers:
      - command:
          - openelb-manager
        args:
          - --webhook-port=443
          - --api-hosts=:50051
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: OPENELB_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        image: kubesphere/openelb:v0.5.0
        imagePullPolicy: IfNotPresent
        name: openelb-manager
        ports:
          - containerPort: 443
            name: webhook
            protocol: TCP
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - |
                gobgp -p 50051 global
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_TIME
            - NET_RAW
            - NET_BIND_SERVICE
        volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs/
            name: webhook-cert
            readOnly: true
      hostNetwork: true
      terminationGracePeriodSeconds: 10
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      volumes:
        - name: webhook-cert
          secret:
            items:
              - key: key
                path: tls.key
              - key: cert
                path: tls.crt
            secretName: my-release-openelb-admission
---
# Source: openelb/templates/admission-webhooks/job-patch/job-createSecret.yaml
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-admission
  name: my-release-openelb-admission-create
  namespace: default
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openelb
        helm.sh/chart: openelb-0.5.0
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.5.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: my-release-openelb-admission
      name: my-release-openelb-admission-create
    spec:
      containers:
        - args:
            - create
            - --host=my-release-openelb-manager,my-release-openelb-manager.$(POD_NAMESPACE).svc
            - --namespace=$(POD_NAMESPACE)
            - --secret-name=my-release-openelb-admission
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: kubespheredev/kube-webhook-certgen:v1.1.1
          imagePullPolicy: IfNotPresent
          name: create
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: openelb-admission
---
# Source: openelb/templates/admission-webhooks/job-patch/job-patchWebhook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-admission
  name: my-release-openelb-admission-patch
  namespace: default
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openelb
        helm.sh/chart: openelb-0.5.0
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.5.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: my-release-openelb-admission
      name: my-release-openelb-admission-patch
    spec:
      containers:
        - args:
            - patch
            - --webhook-name=my-release-openelb-admission
            - --namespace=$(POD_NAMESPACE)
            - --patch-mutating=true
            - --secret-name=my-release-openelb-admission
            - --patch-failure-policy=Fail
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: kubespheredev/kube-webhook-certgen:v1.1.1
          imagePullPolicy: IfNotPresent
          name: patch
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: openelb-admission
---
# Source: openelb/templates/admission-webhooks/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: my-release-openelb-admission
webhooks:
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      service:
        name: my-release-openelb-manager
        namespace: default
        path: /validate-network-kubesphere-io-v1alpha2-svc
    failurePolicy: Fail
    name: mutating.eip.network.kubesphere.io
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - services

    sideEffects: NoneOnDryRun
---
# Source: openelb/templates/admission-webhooks/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/name: openelb
    helm.sh/chart: openelb-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: my-release-openelb-admission
  name: my-release-openelb-admission
webhooks:
  - admissionReviewVersions:
      - v1beta1
      - v1
    clientConfig:
      service:
        name: my-release-openelb-manager
        namespace: default
        path: /validate-network-kubesphere-io-v1alpha2-eip
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validate.eip.network.kubesphere.io
    rules:
      - apiGroups:
          - network.kubesphere.io
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
          - UPDATE
        resources:
          - eips
    sideEffects: None
