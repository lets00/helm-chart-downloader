---
# Source: gitlab-aio/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab
  labels:
    helm.sh/chart: gitlab-aio-0.1.0
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: gitlab-aio/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-config
data:
  config: |
    
    external_url "https://gitlab.domain.tld"
    letsencrypt['enable'] = false
    gitlab_rails['time_zone'] = 'Europe/Paris'
    gitlab_rails['gitlab_email_from'] = 'gitlab@domain.tld'
    gitlab_rails['gitlab_email_reply_to'] = 'admin@domain.tld'
    gitlab_rails['gitlab_shell_ssh_port'] = 22 
    gitlab_rails['gitlab_ssh_host'] = 'gitlab-ssh.domain.tld'
    gitlab_rails['smtp_enable'] = false 
    gitlab_rails['smtp_address'] = "" 
    gitlab_rails['smtp_port'] = 587 
    gitlab_rails['smtp_user_name'] = ""
    gitlab_rails['smtp_password'] = "" 
    gitlab_rails['smtp_domain'] = "" 
    gitlab_rails['smtp_authentication'] = ""
    gitlab_rails['smtp_enable_starttls_auto'] = false
    gitlab_rails['smtp_tls'] = true
    gitlab_rails['smtp_openssl_verify_mode'] = 'none'
    nginx['ssl_certificate'] = '/cert/tls.crt'
    nginx['ssl_certificate_key'] = '/cert/tls.key'
---
# Source: gitlab-aio/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-data
  labels:
    helm.sh/chart: gitlab-aio-0.1.0
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: 
  volumeMode: Filesystem
---
# Source: gitlab-aio/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-config
  labels:
    helm.sh/chart: gitlab-aio-0.1.0
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: 
  volumeMode: Filesystem
---
# Source: gitlab-aio/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-logs
  labels:
    helm.sh/chart: gitlab-aio-0.1.0
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: 
  volumeMode: Filesystem
---
# Source: gitlab-aio/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitlab-updater
  labels:
    helm.sh/chart: gitlab-aio-0.1.0
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
rules:
    - apiGroups: [""]
      resources: ["pods"]
      verbs: ["delete"]
      resourceNames: ["gitlab-0"]
---
# Source: gitlab-aio/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-updater
  labels:
    helm.sh/chart: gitlab-aio-0.1.0
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: gitlab-updater
subjects:
    - kind: ServiceAccount
      name: gitlab
---
# Source: gitlab-aio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  labels:
    helm.sh/chart: gitlab-aio-0.1.0
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
---
# Source: gitlab-aio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-ssh
  labels:
    helm.sh/chart: gitlab-aio-0.1.0
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 22
      targetPort: ssh
      protocol: TCP
      name: ssh
  selector:
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
---
# Source: gitlab-aio/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gitlab
  labels:
    helm.sh/chart: gitlab-aio-0.1.0
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: gitlab
  selector:
    matchLabels:
      app.kubernetes.io/name: gitlab-aio
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gitlab-aio
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      volumes:
        - name: gitlab
          persistentVolumeClaim:
            claimName: gitlab-data
        - name: gitlab-config
          persistentVolumeClaim:
            claimName: gitlab-config
        - name: gitlab-logs
          persistentVolumeClaim:
            claimName: gitlab-logs
        - name: cert
          secret:
            secretName: gitlab-cert
            defaultMode: 420
      initContainers:
        - name: setperms
          image: gitlab/gitlab-ce:latest
          command:
            - update-permissions
          volumeMounts:
            - name: gitlab
              mountPath: /var/opt/gitlab
            - name: gitlab-config
              mountPath: /etc/gitlab
            - name: gitlab-logs
              mountPath: /var/log/gitlab
            - name: cert
              mountPath: /cert
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      containers:
        - name: gitlab-aio
          securityContext:
            {}
          image: "gitlab/gitlab-ce:latest"
          imagePullPolicy: Always
          env:
            - name: GITLAB_OMNIBUS_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: gitlab-config
                  key: config
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: ssh
              containerPort: 22
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - curl -f --insecure https://localhost:443/ || exit 1
            initialDelaySeconds: 600
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - curl -f --insecure https://localhost:443/ || exit 1
          resources:
            limits:
              cpu: 500m
              memory: 6Gi
            requests:
              cpu: 500m
              memory: 6Gi
          volumeMounts:
            - name: gitlab
              mountPath: /var/opt/gitlab
            - name: gitlab-config
              mountPath: /etc/gitlab
            - name: gitlab-logs
              mountPath: /var/log/gitlab
            - name: cert
              mountPath: /cert
---
# Source: gitlab-aio/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: gitlab-updater
  labels:
    helm.sh/chart: gitlab-aio-0.1.0
    app.kubernetes.io/name: gitlab-aio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: 20 2 * * *
  concurrencyPolicy: Forbid
  suspend: false
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - name: kubectl
              image: lwolf/helm-kubectl-docker:v1.21.1-v3.6.0
              command:
                - kubectl
              args:
                - delete
                - pods/gitlab-0
                - '-n'
                - default
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: IfNotPresent
          restartPolicy: Never
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          serviceAccountName: gitlab
          serviceAccount: gitlab
          securityContext: {}
          schedulerName: default-scheduler
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
