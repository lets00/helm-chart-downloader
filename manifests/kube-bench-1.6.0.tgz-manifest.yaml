---
# Source: kube-bench/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-bench-sa
  labels:
    helm.sh/chart: kube-bench-1.6.0
    app.kubernetes.io/name: kube-bench
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.6.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kube-bench/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: my-release-kube-bench
  labels:
    app: kube-bench
    chart: kube-bench-1.6.0
    release: my-release
    heritage: Helm
  annotations:
    {}
spec:
  schedule: "0 0 * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      labels:
        app: kube-bench
        release: my-release
    spec:
      template:
        metadata:
          labels:
            app: kube-bench
            release: my-release
          annotations:
            helm.sh/hook: post-install,post-upgrade
            helm.sh/hook-delete-policy: before-hook-creation
            helm.sh/hook-weight: "2"
        spec:
          hostPID: true
          serviceAccount: kube-bench-sa
          restartPolicy: Never
          containers:
            - name: kube-bench
              image: "aquasec/kube-bench:v0.6.17"
              imagePullPolicy: IfNotPresent
              command: [ "/bin/sh" ]
              args: [ "-c", "kube-bench --json > kube-bench-results.json && wget -S -O - --header \"Content-Type: application/json\" --post-file kube-bench-results.json \"\"" ]
              volumeMounts:
                - name: var-lib-etcd
                  mountPath: /var/lib/etcd
                  readOnly: true
                - name: var-lib-kubelet
                  mountPath: /var/lib/kubelet
                  readOnly: true
                - name: var-lib-kube-scheduler
                  mountPath: /var/lib/kube-scheduler
                  readOnly: true
                - name: var-lib-kube-controller-manager
                  mountPath: /var/lib/kube-controller-manager
                  readOnly: true
                - name: etc-systemd
                  mountPath: /etc/systemd
                  readOnly: true
                - name: lib-systemd
                  mountPath: /lib/systemd/
                  readOnly: true
                - name: srv-kubernetes
                  mountPath: /srv/kubernetes/
                  readOnly: true
                - name: etc-kubernetes
                  mountPath: /etc/kubernetes
                  readOnly: true
                # /usr/local/mount-from-host/bin is mounted to access kubectl / kubelet, for auto-detecting the Kubernetes version.
                # You can omit this mount if you specify --version as part of the command.
                - name: usr-bin
                  mountPath: /usr/local/mount-from-host/bin
                  readOnly: true
                - name: etc-cni-netd
                  mountPath: /etc/cni/net.d/
                  readOnly: true
                - name: opt-cni-bin
                  mountPath: /opt/cni/bin/
                  readOnly: true
              resources:
                limits:
                  cpu: 300m
                  memory: 512Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
          volumes:
            - name: var-lib-etcd
              hostPath:
                path: "/var/lib/etcd"
            - name: var-lib-kubelet
              hostPath:
                path: "/var/lib/kubelet"
            - name: var-lib-kube-scheduler
              hostPath:
                path: "/var/lib/kube-scheduler"
            - name: var-lib-kube-controller-manager
              hostPath:
                path: "/var/lib/kube-controller-manager"
            - name: etc-systemd
              hostPath:
                path: "/etc/systemd"
            - name: lib-systemd
              hostPath:
                path: "/lib/systemd"
            - name: srv-kubernetes
              hostPath:
                path: "/srv/kubernetes"
            - name: etc-kubernetes
              hostPath:
                path: "/etc/kubernetes"
            - name: usr-bin
              hostPath:
                path: "/usr/bin"
            - name: etc-cni-netd
              hostPath:
                path: "/etc/cni/net.d/"
            - name: opt-cni-bin
              hostPath:
                path: "/opt/cni/bin/"
