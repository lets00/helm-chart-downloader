---
# Source: bundle-controller/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-bundle-controller
  namespace: "default"
  labels:
    app.kubernetes.io/name: bundle-controller
    helm.sh/chart: bundle-controller-1.0.0-alpha1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: bundle
---
# Source: bundle-controller/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-bundle-controller
  namespace: "default"
  labels:
    app.kubernetes.io/name: bundle-controller
    helm.sh/chart: bundle-controller-1.0.0-alpha1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: bundle
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: my-release-bundle-controller
    namespace: default
---
# Source: bundle-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-bundle-controller
  namespace: "default"
  labels:
    app.kubernetes.io/name: bundle-controller
    helm.sh/chart: bundle-controller-1.0.0-alpha1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: bundle
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: bundle-controller
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: bundle
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bundle-controller
        helm.sh/chart: bundle-controller-1.0.0-alpha1
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: bundle
    spec:
      serviceAccountName: my-release-bundle-controller
      
      containers:
        - name: bundle
          image: docker.io/kubegems/bundle-controller:latest
          imagePullPolicy: IfNotPresent
          args:
            - run
            - --enable-leader-election
            - --probe-addr=:8080
            - --metrics-addr=:9100
          env:
            - name: LOG_LEVEL
              value: debug
          resources:
            limits: {}
            requests: {}
          ports:
            - name: probe
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 9100
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /healthz
              port: probe
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /healthz
              port: probe
