---
# Source: opta-agent/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: opta-agent
  labels:
    helm.sh/chart: opta-agent-0.1.3
    app.kubernetes.io/name: opta-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: opta-agent/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-opta-agent
  labels:
    helm.sh/chart: opta-agent-0.1.3
    app.kubernetes.io/name: opta-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  namespace: opta-agent
---
# Source: opta-agent/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: opta-agent
  name: opta-secrets
  labels:
    helm.sh/chart: opta-agent-0.1.3
    app.kubernetes.io/name: opta-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  token: "bmls"
---
# Source: opta-agent/templates/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-opta-agent
  labels:
    helm.sh/chart: opta-agent-0.1.3
    app.kubernetes.io/name: opta-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - extensions
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - patch
      - list
      - get
      - watch
  - apiGroups:
      - extensions
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/status
      - endpoints
      - services
      - replicationcontrollers
      - namespaces
    verbs:
      - list
      - get
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
# Source: opta-agent/templates/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-opta-agent
  labels:
    helm.sh/chart: opta-agent-0.1.3
    app.kubernetes.io/name: opta-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-opta-agent
subjects:
  - kind: ServiceAccount
    name: my-release-opta-agent
    namespace: opta-agent
---
# Source: opta-agent/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: opta-agent
  name:  my-release-opta-agent
rules:
  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]
---
# Source: opta-agent/templates/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: opta-agent
  name:  my-release-opta-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name:  my-release-opta-agent
subjects:
  - kind: ServiceAccount
    name: my-release-opta-agent
---
# Source: opta-agent/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-opta-agent
  labels:
    helm.sh/chart: opta-agent-0.1.3
    app.kubernetes.io/name: opta-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  namespace: opta-agent
spec:
  replicas: 1 # TODO: figure out HA by fixing kopf: https://kopf.readthedocs.io/en/latest/deployment/
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: opta-agent
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: opta-agent
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-opta-agent
      containers:
        - name: opta-agent
          image: "runx1/opta-agent:latest"
          imagePullPolicy: Always
          ports:
            - name: main
              protocol: TCP
              containerPort: 8080
          env:
            - name: OPTA_TOKEN
              valueFrom:
                secretKeyRef:
                  name: opta-secrets
                  key: token
          
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /healthz
              port: 8080
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 10
            httpGet:
              path: /healthz
              port: 8080
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
