---
# Source: storm/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-storm-config
  labels:
    chart: storm-1.2.0
    release: my-release
    heritage: Helm
data:
  storm.yaml: |-
    storm.zookeeper.servers:
      - "my-release-zookeeper"
    storm.zookeeper.port: 2181
    nimbus.seeds:
    - my-release-storm-nimbus-0.my-release-storm-nimbus
    nimbus.thrift.port: 6627
    storm.log4j2.conf.dir: /log4j2
    storm.local.dir: /data
    storm.log.dir: /logs
    nimbus.childopts: -Xmx1024m -ea
    supervisor.childopts: -Xmx256m -ea
    ui.childopts: -Xmx768m -ea
    worker.childopts: -Xmx%HEAP-MEM%m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump
    worker.heap.memory.mb: 768
    storm.metricstore.rocksdb.location: /storm_rocks
    supervisor.slots.ports:
      - 6700
      - 6701
      - 6702
      - 6703
    ui.header.buffer.bytes: 8192
    supervisor.memory.capacity.mb: 1024
    #By convention 1 cpu core should be about 100, but this can be adjusted if needed
    # using 100 makes it simple to set the desired value to the capacity measurement
    # for single threaded bolts
    supervisor.cpu.capacity: 200
    topology.fall.back.on.java.serialization: true
    topology.disable.loadaware.messaging: true
    topology.metrics.reporters: [
      {
        "filter": {
          "expression": ".*",
          "class": "org.apache.storm.metrics2.filters.RegexFilter"
        },
        "report.period": 15,
        "report.period.units": "SECONDS",
        "class": "org.apache.storm.metrics2.reporters.JmxStormReporter"
      }
    ]
---
# Source: storm/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-storm-logging
  labels:
    chart: storm-1.2.0
    release: my-release
    heritage: Helm
  namespace: default
data:
  cluster.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
     Licensed to the Apache Software Foundation (ASF) under one or more
     contributor license agreements.  See the NOTICE file distributed with
     this work for additional information regarding copyright ownership.
     The ASF licenses this file to You under the Apache License, Version 2.0
     (the "License"); you may not use this file except in compliance with
     the License.  You may obtain a copy of the License at
    
         http://www.apache.org/licenses/LICENSE-2.0
    
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
    -->
    
    <configuration monitorInterval="60" shutdownHook="disable">
    <properties>
        <property name="pattern">%d{yyyy-MM-dd HH:mm:ss.SSS} %c{1.} %t [%p] %.-5000msg%n</property>
    </properties>
    <appenders>
        <Console name="STDOUT" target="SYSTEM_OUT">
            <PatternLayout>
                <pattern>${pattern}</pattern>
            </PatternLayout>
        </Console>
        <Console name="STDERR" target="SYSTEM_ERR">
            <PatternLayout>
                <pattern>${pattern}</pattern>
            </PatternLayout>
        </Console>
        <RollingFile name="A1" immediateFlush="false"
                     fileName="${sys:storm.log.dir}/${sys:logfile.name}"
                     filePattern="${sys:storm.log.dir}/${sys:logfile.name}.%i.gz">
            <PatternLayout>
                <pattern>${pattern}</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB"/> <!-- Or every 100 MB -->
            </Policies>
            <DefaultRolloverStrategy max="9"/>
        </RollingFile>
        <RollingFile name="WEB-ACCESS" immediateFlush="false"
                     fileName="${sys:storm.log.dir}/access-web-${sys:daemon.name}.log"
                     filePattern="${sys:storm.log.dir}/access-web-${sys:daemon.name}.log.%i.gz">
            <PatternLayout>
                <pattern>${pattern}</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB"/> <!-- Or every 100 MB -->
            </Policies>
            <DefaultRolloverStrategy max="9"/>
        </RollingFile>
        <RollingFile name="THRIFT-ACCESS" immediateFlush="false"
                     fileName="${sys:storm.log.dir}/access-${sys:logfile.name}"
                     filePattern="${sys:storm.log.dir}/access-${sys:logfile.name}.%i.gz">
        <PatternLayout>
            <pattern>${pattern}</pattern>
        </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB"/> <!-- Or every 100 MB -->
            </Policies>
            <DefaultRolloverStrategy max="9"/>
        </RollingFile>
        <RollingFile name="METRICS"
                     fileName="${sys:storm.log.dir}/${sys:logfile.name}.metrics"
                     filePattern="${sys:storm.log.dir}/${sys:logfile.name}.metrics.%i.gz">
            <PatternLayout>
                <pattern>${patternMetrics}</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="2 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="9"/>
        </RollingFile>
        <Syslog name="syslog" format="RFC5424" charset="UTF-8" host="localhost" port="514"
                protocol="UDP" appName="[${sys:daemon.name}]" mdcId="mdc" includeMDC="true"
                facility="LOCAL5" enterpriseNumber="18060" newLine="true" exceptionPattern="%rEx{full}"
                messageId="[${sys:user.name}:S0]" id="storm" immediateFlush="true" immediateFail="true"/>
    </appenders>
    <loggers>
    
        <Logger name="org.apache.storm.logging.filters.AccessLoggingFilter" level="info" additivity="false">
            <AppenderRef ref="WEB-ACCESS"/>
            <AppenderRef ref="STDOUT"/>
        </Logger>
        <Logger name="org.apache.storm.logging.ThriftAccessLogger" level="info" additivity="false">
            <AppenderRef ref="THRIFT-ACCESS"/>
            <AppenderRef ref="STDOUT"/>
        </Logger>
        <Logger name="org.apache.storm.metric.LoggingClusterMetricsConsumer" level="info" additivity="false">
            <appender-ref ref="METRICS"/>
        </Logger>
        <root level="info"> <!-- We log everything -->
            <appender-ref ref="STDERR"/>
            <appender-ref ref="STDOUT"/>
        </root>
    </loggers>
    </configuration>
  worker.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
     Licensed to the Apache Software Foundation (ASF) under one or more
     contributor license agreements.  See the NOTICE file distributed with
     this work for additional information regarding copyright ownership.
     The ASF licenses this file to You under the Apache License, Version 2.0
     (the "License"); you may not use this file except in compliance with
     the License.  You may obtain a copy of the License at
    
         http://www.apache.org/licenses/LICENSE-2.0
    
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
    -->
    
    <configuration monitorInterval="60" shutdownHook="disable">
    <properties>
        <property name="pattern">%d{yyyy-MM-dd HH:mm:ss.SSS} %c{1.} %t [%p] %.-5000msg%n</property>
        <property name="patternNoTime">%msg%n</property>
        <property name="patternMetrics">%d %-8r %m%n</property>
    </properties>
    <appenders>
        <RollingFile name="A1"
    		fileName="${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}"
    		filePattern="${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.%i.gz">
            <PatternLayout>
                <pattern>${pattern}</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB"/> <!-- Or every 100 MB -->
            </Policies>
            <DefaultRolloverStrategy max="9"/>
        </RollingFile>
        <Console name="STDOUT" target="SYSTEM_OUT">
            <PatternLayout>
                <pattern>${pattern}</pattern>
            </PatternLayout>
        </Console>
        <Console name="STDERR" target="SYSTEM_ERR">
            <PatternLayout>
                <pattern>${pattern}</pattern>
            </PatternLayout>
        </Console>
        <RollingFile name="METRICS"
    		fileName="${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.metrics"
    		filePattern="${sys:workers.artifacts}/${sys:storm.id}/${sys:worker.port}/${sys:logfile.name}.metrics.%i.gz">
            <PatternLayout>
                <pattern>${patternMetrics}</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy size="2 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="9"/>
        </RollingFile>
        <Syslog name="syslog" format="RFC5424" charset="UTF-8" host="localhost" port="514"
            protocol="UDP" appName="[${sys:storm.id}:${sys:worker.port}]" mdcId="mdc" includeMDC="true"
            facility="LOCAL5" enterpriseNumber="18060" newLine="true" exceptionPattern="%rEx{full}"
            messageId="[${sys:user.name}:${sys:logging.sensitivity}]" id="storm" immediateFail="true" immediateFlush="true"/>
    </appenders>
    <loggers>
        <root level="info"> <!-- We log everything -->
            <appender-ref ref="STDOUT"/>
        </root>
        <Logger name="org.apache.storm.metric.LoggingMetricsConsumer" level="info" additivity="false">
            <appender-ref ref="METRICS"/>
        </Logger>
        <Logger name="STDERR" level="INFO">
            <appender-ref ref="STDERR"/>
        </Logger>
        <Logger name="STDOUT" level="INFO">
            <appender-ref ref="STDOUT"/>
        </Logger>
    </loggers>
    </configuration>
---
# Source: storm/charts/zookeeper/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-zookeeper-headless
  namespace: default
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-6.5.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: zookeeper
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    
    - name: tcp-client
      port: 2181
      targetPort: client
    
    
    - name: follower
      port: 2888
      targetPort: follower
    - name: tcp-election
      port: 3888
      targetPort: election
  selector:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: zookeeper
---
# Source: storm/charts/zookeeper/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-zookeeper
  namespace: default
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-6.5.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: zookeeper
spec:
  type: ClusterIP
  ports:
    
    - name: tcp-client
      port: 2181
      targetPort: client
    
    
    - name: follower
      port: 2888
      targetPort: follower
    - name: tcp-election
      port: 3888
      targetPort: election
  selector:
    app.kubernetes.io/name: zookeeper
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: zookeeper
---
# Source: storm/templates/nimbus-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-storm-nimbus
  labels:
    chart: storm-1.2.0
    release: my-release
    heritage: Helm
  namespace: default
spec:
  type: ClusterIP
  ports:
  - port: 6627
    name: nimbus
  selector:
    app: storm-nimbus
    release: my-release
---
# Source: storm/templates/nimbus-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-storm-nimbus-headless
  labels:
    chart: storm-1.2.0
    release: my-release
    heritage: Helm
  namespace: default
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 6627
    name: nimbus
  selector:
    app: storm-nimbus
    release: my-release
---
# Source: storm/templates/supervisor-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-storm-supervisor
  labels:
    chart: storm-1.2.0
    release: my-release
    heritage: Helm
  namespace: default
spec:
  type:  ClusterIP
  ports:
  - port: 6700
    name: slot-0
  - port: 6701
    name: slot-1
  - port: 6702
    name: slot-2
  - port: 6703
    name: slot-3
  selector:
    app: storm-supervisor
    release: my-release
---
# Source: storm/templates/supervisor-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-storm-supervisor-headless
  labels:
    chart: storm-1.2.0
    release: my-release
    heritage: Helm
  namespace: default
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 6700
    name: slot-0
  - port: 6701
    name: slot-1
  - port: 6702
    name: slot-2
  - port: 6703
    name: slot-3
  selector:
    app: storm-supervisor
    release: my-release
---
# Source: storm/templates/ui-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-storm-ui
  labels:
    chart: storm-1.2.0
    release: my-release
    heritage: Helm
  namespace: default
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 8080
    name: ui

  selector:
    app: storm-ui
    release: my-release
---
# Source: storm/templates/supervisor-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-storm-supervisor
  labels:
    app: storm-supervisor
    chart: storm-1.2.0
    release: my-release
    heritage: Helm
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: storm-supervisor
      release: my-release
  template:
    metadata:
      labels:
        app: storm-supervisor
        release: my-release
    spec:
      initContainers:
      - command: 
        - sh
        - -c
        - until storm list; do echo waiting for my-release-storm-nimbus; sleep 10; done
        image: storm:2.4.0
        imagePullPolicy: IfNotPresent
        name: init-my-release-storm-nimbus
        volumeMounts:
        - name: storm-configmap
          mountPath: /conf
      containers:
      - command:
        - storm
        - supervisor
        - -c 
        - storm.local.hostname=$(SUPERVISOR_IP)
        env:
        - name: SUPERVISOR_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: storm:2.4.0
        imagePullPolicy: IfNotPresent
        name: supervisor
        ports:
          - containerPort: 6700
            name: slot-0
          - containerPort: 6701
            name: slot-1
          - containerPort: 6702
            name: slot-2
          - containerPort: 6703
            name: slot-3
        resources:
          limits:
            cpu: 2  
            memory: 1024Mi  
          requests:
            cpu: 1  
            memory: 512Mi 
        volumeMounts:
        - name: storm-configmap
          mountPath: /conf
        - name: storm-logging-config
          mountPath: /log4j2
        - name: data
          mountPath: /data
        - name: data-log
          mountPath: /logs
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
      volumes:
      - name: storm-configmap
        configMap:
          name: my-release-storm-config
      - name: storm-logging-config
        configMap:
          name: my-release-storm-logging
      - name: data
        emptyDir: {}
      - name: data-log
        emptyDir: {}
---
# Source: storm/templates/ui-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-storm-ui
  labels:
    app: storm-ui
    chart: storm-1.2.0
    release: my-release
    heritage: Helm
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storm-ui
      release: my-release
  template:
    metadata:
      annotations:
        checksum/config: 0da9848c430f9608a172e10ff924bf99aa910165b4537438ef9860e3c845fd9d
      labels:
        app: storm-ui
        release: my-release
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
      initContainers:
      - name: init-my-release-storm-nimbus
        image: "storm:2.4.0"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "until storm list; do echo waiting for my-release-storm-nimbus; sleep 10; done"]
        volumeMounts:
          - mountPath: "/conf"
            name: storm-configmap
      containers:
      - name: ui
        image: "storm:2.4.0"
        imagePullPolicy: IfNotPresent
        command: ["storm", "ui"]
        ports:
        - containerPort: 8080
        resources:
          {}
        volumeMounts:
          - mountPath: "/conf"
            name: storm-configmap
          - mountPath: "/log4j2"
            name: storm-logging-config
          - mountPath: /logs
            name: logs
      volumes:
        - name: storm-configmap
          configMap:
            name: my-release-storm-config
        - name: storm-logging-config
          configMap:
            name: my-release-storm-logging
        - name: logs
          emptyDir: {}
---
# Source: storm/charts/zookeeper/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-zookeeper
  namespace: default
  labels:
    app.kubernetes.io/name: zookeeper
    helm.sh/chart: zookeeper-6.5.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: zookeeper
    role: zookeeper
spec:
  serviceName: my-release-zookeeper-headless
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: zookeeper
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: zookeeper
  template:
    metadata:
      name: my-release-zookeeper
      labels:
        app.kubernetes.io/name: zookeeper
        helm.sh/chart: zookeeper-6.5.4
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: zookeeper
    spec:
      
      serviceAccountName: default
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: zookeeper
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/component: zookeeper
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      containers:
        - name: zookeeper
          image: docker.io/bitnami/zookeeper:3.7.0-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - bash
            - -ec
            - |
                # Execute entrypoint as usual after obtaining ZOO_SERVER_ID
                # check ZOO_SERVER_ID in persistent volume via myid
                # if not present, set based on POD hostname
                if [[ -f "/bitnami/zookeeper/data/myid" ]]; then
                  export ZOO_SERVER_ID="$(cat /bitnami/zookeeper/data/myid)"
                else
                  HOSTNAME=`hostname -s`
                  if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
                    ORD=${BASH_REMATCH[2]}
                    export ZOO_SERVER_ID=$((ORD + 1 ))
                  else
                    echo "Failed to get index from hostname $HOST"
                    exit 1
                  fi
                fi
                exec /entrypoint.sh /run.sh
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          env:
            - name: ZOO_DATA_LOG_DIR
              value: ""
            - name: ZOO_PORT_NUMBER
              value: "2181"
            - name: ZOO_TICK_TIME
              value: "2000"
            - name: ZOO_INIT_LIMIT
              value: "10"
            - name: ZOO_SYNC_LIMIT
              value: "5"
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "60"
            - name: ZOO_4LW_COMMANDS_WHITELIST
              value: "srvr, mntr, ruok"
            - name: ZOO_LISTEN_ALLIPS_ENABLED
              value: "no"
            - name: ZOO_AUTOPURGE_INTERVAL
              value: "0"
            - name: ZOO_AUTOPURGE_RETAIN_COUNT
              value: "3"
            - name: ZOO_MAX_SESSION_TIMEOUT
              value: "40000"
            - name: ZOO_SERVERS
              value: my-release-zookeeper-0.my-release-zookeeper-headless.default.svc.cluster.local:2888:3888::1 
            - name: ZOO_ENABLE_AUTH
              value: "no"
            - name: ZOO_HEAP_SIZE
              value: "1024"
            - name: ZOO_LOG_LEVEL
              value: "ERROR"
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          ports:
            
            - name: client
              containerPort: 2181
            
            
            - name: follower
              containerPort: 2888
            - name: election
              containerPort: 3888
          livenessProbe:
            exec:
              command: ['/bin/bash', '-c', 'echo "ruok" | timeout 2 nc -w 2 localhost 2181 | grep imok']
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command: ['/bin/bash', '-c', 'echo "ruok" | timeout 2 nc -w 2 localhost 2181 | grep imok']
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: /bitnami/zookeeper
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: storm/templates/nimbus-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-storm-nimbus
  labels:
    app: storm-nimbus
    chart: storm-1.2.0
    release: my-release
    heritage: Helm
  namespace: default
spec:
  podManagementPolicy: "Parallel"
  serviceName: my-release-storm-nimbus
  replicas: 1
  selector:
    matchLabels:
      app: storm-nimbus
      release: my-release
  template:
    metadata:
      annotations:
        checksum/config: 0da9848c430f9608a172e10ff924bf99aa910165b4537438ef9860e3c845fd9d
      labels:
        app: storm-nimbus
        release: my-release
    spec:
      initContainers: 
      - name: init-zookeeper
        image: 'bitnami/zookeeper:3.7.0-debian-10-r0'
        imagePullPolicy: 'IfNotPresent'
        command: ['sh', '-c', 'until zkCli.sh -server my-release-zookeeper:2181 ls /; do echo waiting for [my-release-zookeeper]; sleep 10; done']
      containers:
      - name: nimbus
        image: "storm:2.4.0"
        imagePullPolicy: IfNotPresent
        command: ["storm", "nimbus", "-c", "storm.local.hostname=$(STORM_LOCAL_HOSTNAME).my-release-storm-nimbus"]
        ports:
        - containerPort: 6627
        resources:
          {}
        env:
        - name: STORM_DATA_DIR
          value: /data
        - name: STORM_LOG_DIR
          value: /logs
        - name: STORM_LOCAL_HOSTNAME
          valueFrom:
            fieldRef: {fieldPath: metadata.name}
        volumeMounts:
          - mountPath: /conf
            name: storm-configmap
          - mountPath: /log4j2
            name: storm-logging-config
          - name: data
            mountPath: /data
          - name: data-log
            mountPath: /logs
          - name: storm-metrics
            mountPath: /storm_rocks
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
      volumes:
        - name: storm-configmap
          configMap:
            name: my-release-storm-config
        - name: storm-logging-config
          configMap:
            name: my-release-storm-logging
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
        
    - metadata:
        name: data-log
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
        
    - metadata:
        name: storm-metrics
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "200Mi"
