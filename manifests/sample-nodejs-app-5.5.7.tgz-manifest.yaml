---
# Source: sample-nodejs-app/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vol-configs-my-release
  namespace: 
  labels:
    app: sample-nodejs
    part-of: sample-nodejs
data:
  null
---
# Source: sample-nodejs-app/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: sample-nodejs
  namespace: staging
  labels:
    app: sample-nodejs
    part-of: sample-nodejs
spec:
  type: NodePort
  selector:
    app: sample-nodejs
  ports:
    - name: sample-nodejs-http
      port: 80
      protocol: TCP
      targetPort: 3000
---
# Source: sample-nodejs-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-nodejs
  namespace: staging
  labels:
    app: sample-nodejs
    part-of: sample-nodejs
spec:
  selector:
    matchLabels:
      app: sample-nodejs
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: sample-nodejs
        part-of: sample-nodejs
    spec:
      tolerations:
        []
      affinity:
        {}
      containers:
      - name: sample-nodejs
        image: dendipradigta/sample-nodejs:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        resources:
          null
        securityContext:
          null
        volumeMounts:
          null
        env:
          null

      volumes:
        null
---
# Source: sample-nodejs-app/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: sample-nodejs
  namespace: staging
  labels:
    app: sample-nodejs
    part-of: sample-nodejs
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local;

spec:
  rules:
    - host: sample.dendi.com
      http:
        paths:
        - backend:
            serviceName: sample-nodejs
            servicePort: 80
          path: /
