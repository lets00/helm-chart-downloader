---
# Source: openshift-secured-pgadmin/charts/base/templates/service-account.yaml
# Create a proxy service account and ensure it will use the route "proxy"
apiVersion: v1
kind: ServiceAccount
metadata:
  name: proxy
  annotations:
    serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"proxy"}}'
---
# Source: openshift-secured-pgadmin/templates/use-anyuid-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: scc-use-anyuid-role
rules:
  - verbs:
      - use
    apiGroups:
      - security.openshift.io
    resources:
      - securitycontextconstraints
    resourceNames:
      - anyuid
---
# Source: openshift-secured-pgadmin/templates/use-anyuid-role-binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pgadmin-scc-anyuid-role-binding
subjects:
  - kind: ServiceAccount
    name: proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: scc-use-anyuid-role
---
# Source: openshift-secured-pgadmin/charts/base/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: proxy
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: proxy-tls
spec:
  ports:
    - name: proxy
      port: 443
      targetPort: 8443
  selector:
    app: proxy
---
# Source: openshift-secured-pgadmin/charts/base/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  labels:
    helm.sh/chart: base-0.5.0
    app.kubernetes.io/name: pgadmin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy
      app.kubernetes.io/name: pgadmin
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app: proxy
        app.kubernetes.io/name: pgadmin
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: proxy
       
      securityContext:
        fsGroup: 5050
      volumes:
        - name: proxy-tls
          secret:
            secretName: proxy-tls
        
        - emptyDir: {}
          name: pgadmin-data
      
      containers:
        - name: oauth-proxy
          image: "quay.io/openshift/origin-oauth-proxy:4.14"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8443
              name: public
          args:
            - --https-address=:8443
            - --provider=openshift
            - --openshift-service-account=proxy
            - --upstream=http://localhost:80
            - --tls-cert=/etc/tls/private/tls.crt
            - --tls-key=/etc/tls/private/tls.key
            - --cookie-secret=bA7kPuPzko-igWaLPhVDWVj_VhENVnVcHce6rYQwu_s=
          volumeMounts:
            - mountPath: /etc/tls/private
              name: proxy-tls
        
        - env:
          - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
            value: "False"
          - name: PGADMIN_DEFAULT_EMAIL
            value: pgadmin@pgadmin.org
          - name: PGADMIN_DEFAULT_PASSWORD
            value: secret
          - name: PGADMIN_CONFIG_SERVER_MODE
            value: "False"
          - name: PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED
            value: "False"
          image: docker.io/dpage/pgadmin4:7.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /misc/ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: pgadmin
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /misc/ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          resources: {}
          securityContext:
            runAsGroup: 5050
            runAsUser: 5050
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgadmin
            name: pgadmin-data
---
# Source: openshift-secured-pgadmin/charts/base/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: proxy
spec:
  host: changeme.org
  to:
    kind: Service
    name: proxy
  tls:
    termination: reencrypt
