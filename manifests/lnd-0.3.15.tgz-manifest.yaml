---
# Source: lnd/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-lnd
  labels:
    app: lnd
    chart: lnd-0.3.15
    release: my-release
    heritage: Helm
data:
  lnd.conf: |-
    bitcoin.active=1
    bitcoin.mainnet=0
    bitcoin.testnet=1
    debuglevel=info
    bitcoin.node=neutrino
    neutrino.addpeer=faucet.lightning.community
    neutrino.addpeer=lnd.bitrefill.com:18333
    rpclisten=0.0.0.0:10009
    tlsextradomain=nodes-lnd-internal.nodes
    tlsextraip=0.0.0.0
    protocol.wumbo-channels=1
---
# Source: lnd/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-lnd
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app: lnd
    chart: "lnd-0.3.15"
    release: "my-release"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
---
# Source: lnd/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-lnd-internal
  labels:
    app: lnd
    chart: lnd-0.3.15
    release: my-release
    heritage: Helm
spec:
  ports:
    - name: rpc
      port: 10009
      targetPort: rpc
  selector:
    app: lnd
    release: my-release
---
# Source: lnd/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-lnd-external
  labels:
    app: lnd
    chart: lnd-0.3.15
    release: my-release
    heritage: Helm
spec:
  type: LoadBalancer
  ports:
    - name: p2p
      port: 9735
      targetPort: p2p
  selector:
    app: lnd
    release: my-release
---
# Source: lnd/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-lnd
  labels:
    app: lnd
    chart: lnd-0.3.15
    release: my-release
    heritage: Helm
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: lnd
      release: my-release
  template:
    metadata:
      labels:
        app: lnd
        release: my-release
    spec:
      initContainers:
        - name: copy-lnd-config
          image: busybox
          command: ['sh', '-c', 'cp /configmap/lnd.conf /root/.lnd/lnd.conf']
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: config
              mountPath: /root/.lnd/
      terminationGracePeriodSeconds: 60
      containers:
        - name: my-release-lnd
          image: "thesisrobot/lnd:v0.16.4-beta-c"
          command: ["lnd"]
          imagePullPolicy: "IfNotPresent"
          resources:
            {}
          ports:
            - name: rpc
              containerPort: 10009
            - name: p2p
              containerPort: 9735
          volumeMounts:
            - name: data
              mountPath: /root/
            - name: config
              mountPath: /root/.lnd/lnd.conf
              subPath: lnd.conf
          lifecycle:
            preStop:
              exec:
                # Make sure we safely quit lnd so we don't corrupt
                # anything
                command: ["/bin/lncli", "-n", "testnet", "stop"]
        - name: loop
          image: thesisrobot/loop:v0.11.1-beta
          command: ["/bin/sh", "-c", "sleep 5 && loopd --network=testnet"]
          volumeMounts:
            - name: data
              mountPath: /root/
          resources:
            requests:
              cpu: "10m"
        - name: pool
          image: thesisrobot/pool:v0.3.3-alpha
          command: ["/bin/sh", "-c", "sleep 5 && poold --network=testnet"]
          volumeMounts:
            - name: data
              mountPath: /root/
          resources:
            requests:
              cpu: "10m"
      volumes:
        - name: config
          emptyDir: {}
        - name: configmap
          configMap:
            name: my-release-lnd
        - name: data
          persistentVolumeClaim:
            claimName: my-release-lnd
