---
# Source: pg-operator/templates/role-binding.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-pg-operator
  namespace: default
---
# Source: pg-operator/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pg-operator
  namespace: default
  labels:
    helm.sh/chart: pg-operator-2.3.5
    app.kubernetes.io/name: pg-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.1"
    app.kubernetes.io/managed-by: Helm
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - persistentvolumeclaims
  - secrets
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints/restricted
  - pods/exec
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pgv2.percona.com
  resources:
  - perconapgbackups
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - pgv2.percona.com
  resources:
  - perconapgbackups/finalizers
  - perconapgclusters/finalizers
  verbs:
  - update
- apiGroups:
  - pgv2.percona.com
  resources:
  - perconapgbackups/status
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - pgv2.percona.com
  resources:
  - perconapgclusters
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pgv2.percona.com
  resources:
  - perconapgclusters/status
  - perconapgrestores/status
  verbs:
  - patch
  - update
- apiGroups:
  - pgv2.percona.com
  resources:
  - perconapgrestores
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - postgres-operator.crunchydata.com
  resources:
  - pgupgrades
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - postgres-operator.crunchydata.com
  resources:
  - pgupgrades/finalizers
  - postgresclusters/finalizers
  verbs:
  - update
- apiGroups:
  - postgres-operator.crunchydata.com
  resources:
  - pgupgrades/status
  - postgresclusters/status
  verbs:
  - patch
- apiGroups:
  - postgres-operator.crunchydata.com
  resources:
  - postgresclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - get
  - list
  - patch
  - watch
---
# Source: pg-operator/templates/role-binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pg-operator
  namespace: default
  labels:
    helm.sh/chart: pg-operator-2.3.5
    app.kubernetes.io/name: pg-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.1"
    app.kubernetes.io/managed-by: Helm
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: default
subjects:
- kind: ServiceAccount
  name: my-release-pg-operator
roleRef:
  kind: Role
  name: my-release-pg-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: pg-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-pg-operator
  namespace: default
  labels:
    helm.sh/chart: pg-operator-2.3.5
    app.kubernetes.io/name: pg-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.1"
    app.kubernetes.io/managed-by: Helm
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: default
    pgv2.percona.com/control-plane: postgres-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      pgv2.percona.com/control-plane: postgres-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: pg-operator
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/part-of: pg-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: pg-operator
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/part-of: pg-operator
        pgv2.percona.com/control-plane: postgres-operator
    spec:
      serviceAccountName: my-release-pg-operator
      terminationGracePeriodSeconds: 600
      containers:
        - name: percona-postgresql-operator
          image: percona/percona-postgresql-operator:2.3.1
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          env:
            - name: PGO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOG_STRUCTURED
              value: "false"
            - name: LOG_LEVEL
              value: "INFO"
            - name: DISABLE_TELEMETRY
              value: "false"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: metrics
              scheme: HTTP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 20Mi
