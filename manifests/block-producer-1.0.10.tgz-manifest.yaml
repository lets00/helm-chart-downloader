---
# Source: block-producer/templates/block-producer.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-1
spec:
  type: ClusterIP
  # We want all pods to have their addresses published for the sake of the
  # other testnet pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  selector:
    app: test-1
  ports:
  - name: tcp-p2p
    port: 10909
    targetPort: external-port
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-2
spec:
  type: ClusterIP
  # We want all pods to have their addresses published for the sake of the
  # other testnet pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  selector:
    app: test-2
  ports:
  - name: tcp-p2p
    port: 10909
    targetPort: external-port
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-3
spec:
  type: ClusterIP
  # We want all pods to have their addresses published for the sake of the
  # other testnet pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  selector:
    app: test-3
  ports:
  - name: tcp-p2p
    port: 10909
    targetPort: external-port
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-4
spec:
  type: ClusterIP
  # We want all pods to have their addresses published for the sake of the
  # other testnet pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  selector:
    app: test-4
  ports:
  - name: tcp-p2p
    port: 10909
    targetPort: external-port
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-1
  labels:
    app: test-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-1
  template:
    metadata:
      labels:
        app: test-1
        testnet: testnet
        role: block-producer
        class: undefined
        version: 1.2.0b
        syncStatus: INIT
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "10001"
        prometheus.io/path: '/metrics'
    spec:
      initContainers:
      - name: fix-perms
        image: busybox
        command:
        - sh
        - -c
        - for dir in keys echo-keys faucet-keys; do [ -d /$dir ] && /bin/cp /$dir/* /wallet-keys; done; /bin/chmod 0700 /wallet-keys
        volumeMounts:
        - name: private-keys
          mountPath: "/keys/"
          readOnly: true
        - name: wallet-keys
          mountPath: /wallet-keys
        securityContext:
          runAsUser: 0
      - name: install-key
        image: "gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet"
        command:
        - bash
        - -c
        - for key in key echo-key faucet-key; do [ ! -f /root/wallet-keys/$key ] || mina accounts import -config-directory /root/.mina-config -privkey-path /root/wallet-keys/$key; done
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.mina-config
        env:
          - name: MINA_PRIVKEY_PASS
            value: ""
      - name: libp2p-perms
        image: "gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet"
        command:
        - bash
        - -c
        - mina libp2p generate-keypair --privkey-path /root/libp2p-keys/key && /bin/chmod -R 0700 /root/libp2p-keys/
        volumeMounts:
        - name: actual-libp2p
          mountPath: /root/libp2p-keys
        env:
          - name: MINA_LIBP2P_PASS
            value: ""
      containers:
      
      
      - name: mina
        resources:
          limits:
          requests:
            memory: 12.0Gi
            cpu: 6
        image: gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet
        
        args: [ "daemon",
          "-log-level", Debug,
          "-log-json","-libp2p-keypair", "/root/libp2p-keys/key",
          "-peer", "/dns4/seed-one.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWP7fTKbyiUcYJGajQDpCFo2rDexgTHFJTxCH8jvcL1eAH",
          "-peer", "/dns4/seed-two.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWL9ywbiXNfMBqnUKHSB1Q1BaHFNUzppu6JLMVn9TTPFSA","-config-directory", "/root/.mina-config",
          "-client-port", "$(DAEMON_CLIENT_PORT)",
          "-rest-port", "$(DAEMON_REST_PORT)","-external-port", "$(DAEMON_EXTERNAL_PORT)",
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          "-block-producer-key", "/root/wallet-keys/key","-generate-genesis-proof", "true",
          "-archive-address", archive-1:3086]
        env:
        - name: "RAYON_NUM_THREADS"
          value: "6"
        - name: DAEMON_REST_PORT
          value: "3085"
        - name: DAEMON_CLIENT_PORT
          value: "8301"
        - name: DAEMON_METRICS_PORT
          value: "10001"
        - name: DAEMON_EXTERNAL_PORT
          value: "10909"
        - name: GCLOUD_KEYFILE
          value: "/gcloud/keyfile.json"
        - name: NETWORK_NAME
          value: testnet
        - name: GCLOUD_BLOCK_UPLOAD_BUCKET
          value: "mina_network_block_data"
        - name: MINA_PRIVKEY_PASS
          value: ""
        - name: MINA_LIBP2P_PASS
          value: ""
        - name: MINA_CLIENT_TRUSTLIST
          value: "10.0.0.0/8"
        ports:
        - name: client-port
          protocol: TCP
          containerPort: 8301
        - name: graphql-port
          protocol: TCP
          containerPort: 3085
        - name: metrics-port
          protocol: TCP
          containerPort: 10001
        - name: external-port
          protocol: TCP
          containerPort: 10909
          hostPort:   
        
        livenessProbe:
          tcpSocket:
            port: external-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "/bin/bash",
              "-c",
              "source /healthcheck/utilities.sh && isDaemonSynced && updateSyncStatusLabel test-1 "
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.mina-config
        - name: actual-libp2p
          mountPath: /root/libp2p-keys      
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "cloud.google.com/gke-spot"
                  operator: In
                  values: ["true"]
      volumes:
      - name: config-dir
        emptyDir: {}
      - name: private-keys
        secret:
          secretName: 
          defaultMode: 256
          items:
          - key: key
            path: key
          - key: pub
            path: key.pub
      - name: wallet-keys
        emptyDir: {}
      - name: actual-libp2p
        emptyDir: {}
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-2
  labels:
    app: test-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-2
  template:
    metadata:
      labels:
        app: test-2
        testnet: testnet
        role: block-producer
        class: undefined
        version: 1.2.0b
        syncStatus: INIT
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "10001"
        prometheus.io/path: '/metrics'
    spec:
      initContainers:
      - name: fix-perms
        image: busybox
        command:
        - sh
        - -c
        - for dir in keys echo-keys faucet-keys; do [ -d /$dir ] && /bin/cp /$dir/* /wallet-keys; done; /bin/chmod 0700 /wallet-keys
        volumeMounts:
        - name: private-keys
          mountPath: "/keys/"
          readOnly: true
        - name: wallet-keys
          mountPath: /wallet-keys
        securityContext:
          runAsUser: 0
      - name: install-key
        image: "gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet"
        command:
        - bash
        - -c
        - for key in key echo-key faucet-key; do [ ! -f /root/wallet-keys/$key ] || mina accounts import -config-directory /root/.mina-config -privkey-path /root/wallet-keys/$key; done
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.mina-config
        env:
          - name: MINA_PRIVKEY_PASS
            value: ""
      - name: libp2p-perms
        image: "gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet"
        command:
        - bash
        - -c
        - mina libp2p generate-keypair --privkey-path /root/libp2p-keys/key && /bin/chmod -R 0700 /root/libp2p-keys/
        volumeMounts:
        - name: actual-libp2p
          mountPath: /root/libp2p-keys
        env:
          - name: MINA_LIBP2P_PASS
            value: ""
      containers:
      - name: user-agent
        resources:
          requests:
            memory: 512m
            cpu: 0.1
        image: 
        command: ["bash"]
        args: ["-c", "python3 agent.py"]
        env:
          - name: CODA_PUBLIC_KEY
            valueFrom:
              secretKeyRef:
                name: 
                key: pub
          - name: MINA_PRIVKEY_PASS
            value: ""
          - name: PYTHONUNBUFFERED
            value: "1"
        ports:
        - name: metrics-port
          containerPort: 8000        
        livenessProbe:
          tcpSocket:
            port: metrics-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "/bin/bash",
              "-c",
              "source /healthcheck/utilities.sh && isDaemonSynced && hasSentUserCommandsGreaterThan 0"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
      
      - name: mina
        resources:
          limits:
          requests:
            memory: 12.0Gi
            cpu: 6
        image: gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet
        
        args: [ "daemon",
          "-log-level", Debug,
          "-log-json","-libp2p-keypair", "/root/libp2p-keys/key",
          "-peer", "/dns4/seed-one.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWP7fTKbyiUcYJGajQDpCFo2rDexgTHFJTxCH8jvcL1eAH",
          "-peer", "/dns4/seed-two.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWL9ywbiXNfMBqnUKHSB1Q1BaHFNUzppu6JLMVn9TTPFSA","-config-directory", "/root/.mina-config",
          "-client-port", "$(DAEMON_CLIENT_PORT)",
          "-rest-port", "$(DAEMON_REST_PORT)","-external-port", "$(DAEMON_EXTERNAL_PORT)",
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          "-block-producer-key", "/root/wallet-keys/key","-generate-genesis-proof", "true",]
        env:
        - name: "RAYON_NUM_THREADS"
          value: "6"
        - name: DAEMON_REST_PORT
          value: "3085"
        - name: DAEMON_CLIENT_PORT
          value: "8301"
        - name: DAEMON_METRICS_PORT
          value: "10001"
        - name: DAEMON_EXTERNAL_PORT
          value: "10909"
        - name: GCLOUD_KEYFILE
          value: "/gcloud/keyfile.json"
        - name: NETWORK_NAME
          value: testnet
        - name: GCLOUD_BLOCK_UPLOAD_BUCKET
          value: "mina_network_block_data"
        - name: MINA_PRIVKEY_PASS
          value: ""
        - name: MINA_LIBP2P_PASS
          value: ""
        - name: MINA_CLIENT_TRUSTLIST
          value: "10.0.0.0/8"
        ports:
        - name: client-port
          protocol: TCP
          containerPort: 8301
        - name: graphql-port
          protocol: TCP
          containerPort: 3085
        - name: metrics-port
          protocol: TCP
          containerPort: 10001
        - name: external-port
          protocol: TCP
          containerPort: 10909
          hostPort:   
        
        livenessProbe:
          tcpSocket:
            port: external-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "/bin/bash",
              "-c",
              "source /healthcheck/utilities.sh && isDaemonSynced && updateSyncStatusLabel test-2 "
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.mina-config
        - name: actual-libp2p
          mountPath: /root/libp2p-keys      
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "cloud.google.com/gke-spot"
                  operator: In
                  values: ["true"]
      volumes:
      - name: config-dir
        emptyDir: {}
      - name: private-keys
        secret:
          secretName: 
          defaultMode: 256
          items:
          - key: key
            path: key
          - key: pub
            path: key.pub
      - name: wallet-keys
        emptyDir: {}
      - name: actual-libp2p
        emptyDir: {}
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-3
  labels:
    app: test-3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-3
  template:
    metadata:
      labels:
        app: test-3
        testnet: testnet
        role: block-producer
        class: undefined
        version: 1.2.0b
        syncStatus: INIT
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "10001"
        prometheus.io/path: '/metrics'
    spec:
      initContainers:
      - name: fix-perms
        image: busybox
        command:
        - sh
        - -c
        - for dir in keys echo-keys faucet-keys; do [ -d /$dir ] && /bin/cp /$dir/* /wallet-keys; done; /bin/chmod 0700 /wallet-keys
        volumeMounts:
        - name: private-keys
          mountPath: "/keys/"
          readOnly: true
        - name: echo-service-key
          mountPath: "/echo-keys/"
          readOnly: true
        - name: faucet-service-key
          mountPath: "/faucet-keys/"
          readOnly: true
        - name: wallet-keys
          mountPath: /wallet-keys
        securityContext:
          runAsUser: 0
      - name: install-key
        image: "gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet"
        command:
        - bash
        - -c
        - for key in key echo-key faucet-key; do [ ! -f /root/wallet-keys/$key ] || mina accounts import -config-directory /root/.mina-config -privkey-path /root/wallet-keys/$key; done
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.mina-config
        env:
          - name: MINA_PRIVKEY_PASS
            value: ""
      - name: libp2p-perms
        image: "gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet"
        command:
        - bash
        - -c
        - /bin/cp /libp2p-keys/* /root/libp2p-keys && /bin/chmod -R 0700 /root/libp2p-keys/
        volumeMounts:
        - name: libp2p-keys
          mountPath: /libp2p-keys
        - name: actual-libp2p
          mountPath: /root/libp2p-keys
        env:
          - name: MINA_LIBP2P_PASS
            value: ""
      containers:
      
      - name: bots
        resources:
          requests:
            memory: 512m
            cpu: 0.1
        image: 
        env:
          - name: MINA_GRAPHQL_HOST
            value: "0.0.0.0"
          - name: MINA_GRAPHQL_PORT
            value: "3085"
          - name: ECHO_PUBLICKEY
            valueFrom:
              secretKeyRef:
                name: echo-service-key
                key: pub
          - name: ECHO_PASSWORD
            value: ""
          - name: FAUCET_PUBLICKEY
            valueFrom:
              secretKeyRef:
                name: faucet-service-key
                key: pub
          - name: FAUCET_PASSWORD
            value: ""
          - name: DISCORD_API_KEY
            valueFrom:
              secretKeyRef:
                name: o1-discord-api-key
                key: o1discord
          - name: FAUCET_AMOUNT
            value: "10000000000"
          - name: FEE_AMOUNT
            value: "100000000"
        ports:
        - name: graphql-port
          containerPort: 3085        
        livenessProbe:
          tcpSocket:
            port: graphql-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "/bin/bash",
              "-c",
              "source /healthcheck/utilities.sh && isDaemonSynced && peerCountGreaterThan 0 && ownsFunds"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
      - name: mina
        resources:
          limits:
          requests:
            memory: 12.0Gi
            cpu: 6
        image: gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet
        
        args: [ "daemon",
          "-log-level", Debug,
          "-log-json","-libp2p-keypair", "/root/libp2p-keys/key",
          "-peer", "/dns4/seed-one.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWP7fTKbyiUcYJGajQDpCFo2rDexgTHFJTxCH8jvcL1eAH",
          "-peer", "/dns4/seed-two.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWL9ywbiXNfMBqnUKHSB1Q1BaHFNUzppu6JLMVn9TTPFSA","-config-directory", "/root/.mina-config",
          "-client-port", "$(DAEMON_CLIENT_PORT)",
          "-rest-port", "$(DAEMON_REST_PORT)","-external-port", "$(DAEMON_EXTERNAL_PORT)",
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          "-block-producer-key", "/root/wallet-keys/key","-generate-genesis-proof", "true",]
        env:
        - name: "RAYON_NUM_THREADS"
          value: "6"
        - name: DAEMON_REST_PORT
          value: "3085"
        - name: DAEMON_CLIENT_PORT
          value: "8301"
        - name: DAEMON_METRICS_PORT
          value: "10001"
        - name: DAEMON_EXTERNAL_PORT
          value: "10909"
        - name: GCLOUD_KEYFILE
          value: "/gcloud/keyfile.json"
        - name: NETWORK_NAME
          value: testnet
        - name: GCLOUD_BLOCK_UPLOAD_BUCKET
          value: "mina_network_block_data"
        - name: MINA_PRIVKEY_PASS
          value: ""
        - name: MINA_LIBP2P_PASS
          value: ""
        - name: MINA_CLIENT_TRUSTLIST
          value: "10.0.0.0/8"
        ports:
        - name: client-port
          protocol: TCP
          containerPort: 8301
        - name: graphql-port
          protocol: TCP
          containerPort: 3085
        - name: metrics-port
          protocol: TCP
          containerPort: 10001
        - name: external-port
          protocol: TCP
          containerPort: 10909
          hostPort:   
        
        livenessProbe:
          tcpSocket:
            port: external-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "/bin/bash",
              "-c",
              "source /healthcheck/utilities.sh && isDaemonSynced && updateSyncStatusLabel test-3 "
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.mina-config
        - name: actual-libp2p
          mountPath: /root/libp2p-keys      
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "cloud.google.com/gke-spot"
                  operator: In
                  values: ["true"]
      volumes:
      - name: config-dir
        emptyDir: {}
      - name: private-keys
        secret:
          secretName: 
          defaultMode: 256
          items:
          - key: key
            path: key
          - key: pub
            path: key.pub
      - name: libp2p-keys
        secret:
          secretName: libp2pYolo
          defaultMode: 0700
          items:
          - key: key
            path: key
          - key: pub
            path: key.pub
      
      - name: echo-service-key
        secret:
          secretName: echo-service-key
          defaultMode: 256
          items:
          - key: key
            path: echo-key
          - key: pub
            path: echo-key.pub
      - name: faucet-service-key
        secret:
          secretName: faucet-service-key
          defaultMode: 256
          items:
          - key: key
            path: faucet-key
          - key: pub
            path: faucet-key.pub
      - name: wallet-keys
        emptyDir: {}
      - name: actual-libp2p
        emptyDir: {}
---
# Source: block-producer/templates/block-producer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-4
  labels:
    app: test-4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-4
  template:
    metadata:
      labels:
        app: test-4
        testnet: testnet
        role: block-producer
        class: undefined
        version: 1.2.0b
        syncStatus: INIT
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "10001"
        prometheus.io/path: '/metrics'
    spec:
      initContainers:
      - name: fix-perms
        image: busybox
        command:
        - sh
        - -c
        - for dir in keys echo-keys faucet-keys; do [ -d /$dir ] && /bin/cp /$dir/* /wallet-keys; done; /bin/chmod 0700 /wallet-keys
        volumeMounts:
        - name: private-keys
          mountPath: "/keys/"
          readOnly: true
        - name: echo-service-key
          mountPath: "/echo-keys/"
          readOnly: true
        - name: faucet-service-key
          mountPath: "/faucet-keys/"
          readOnly: true
        - name: wallet-keys
          mountPath: /wallet-keys
        securityContext:
          runAsUser: 0
      - name: install-key
        image: "gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet"
        command:
        - bash
        - -c
        - for key in key echo-key faucet-key; do [ ! -f /root/wallet-keys/$key ] || mina accounts import -config-directory /root/.mina-config -privkey-path /root/wallet-keys/$key; done
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.mina-config
        env:
          - name: MINA_PRIVKEY_PASS
            value: ""
      - name: libp2p-perms
        image: "gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet"
        command:
        - bash
        - -c
        - /bin/cp /libp2p-keys/* /root/libp2p-keys && /bin/chmod -R 0700 /root/libp2p-keys/
        volumeMounts:
        - name: libp2p-keys
          mountPath: /libp2p-keys
        - name: actual-libp2p
          mountPath: /root/libp2p-keys
        env:
          - name: MINA_LIBP2P_PASS
            value: ""
      containers:
      - name: user-agent
        resources:
          requests:
            memory: 512m
            cpu: 0.1
        image: 
        command: ["bash"]
        args: ["-c", "python3 agent.py"]
        env:
          - name: CODA_PUBLIC_KEY
            valueFrom:
              secretKeyRef:
                name: 
                key: pub
          - name: MINA_PRIVKEY_PASS
            value: ""
          - name: PYTHONUNBUFFERED
            value: "1"
        ports:
        - name: metrics-port
          containerPort: 8000        
        livenessProbe:
          tcpSocket:
            port: metrics-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "/bin/bash",
              "-c",
              "source /healthcheck/utilities.sh && isDaemonSynced && hasSentUserCommandsGreaterThan 0"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
      - name: bots
        resources:
          requests:
            memory: 512m
            cpu: 0.1
        image: 
        env:
          - name: MINA_GRAPHQL_HOST
            value: "0.0.0.0"
          - name: MINA_GRAPHQL_PORT
            value: "3085"
          - name: ECHO_PUBLICKEY
            valueFrom:
              secretKeyRef:
                name: echo-service-key
                key: pub
          - name: ECHO_PASSWORD
            value: ""
          - name: FAUCET_PUBLICKEY
            valueFrom:
              secretKeyRef:
                name: faucet-service-key
                key: pub
          - name: FAUCET_PASSWORD
            value: ""
          - name: DISCORD_API_KEY
            valueFrom:
              secretKeyRef:
                name: o1-discord-api-key
                key: o1discord
          - name: FAUCET_AMOUNT
            value: "10000000000"
          - name: FEE_AMOUNT
            value: "100000000"
        ports:
        - name: graphql-port
          containerPort: 3085        
        livenessProbe:
          tcpSocket:
            port: graphql-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "/bin/bash",
              "-c",
              "source /healthcheck/utilities.sh && isDaemonSynced && peerCountGreaterThan 0 && ownsFunds"
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
      - name: mina
        resources:
          limits:
          requests:
            memory: 12.0Gi
            cpu: 6
        image: gcr.io/o1labs-192920/mina-daemon:1.2.0beta8-5b35b27-devnet
        
        args: [ "daemon",
          "-log-level", Debug,
          "-log-json","-libp2p-keypair", "/root/libp2p-keys/key",
          "-peer", "/dns4/seed-one.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWP7fTKbyiUcYJGajQDpCFo2rDexgTHFJTxCH8jvcL1eAH",
          "-peer", "/dns4/seed-two.genesis-redux.o1test.net/tcp/10002/p2p/12D3KooWL9ywbiXNfMBqnUKHSB1Q1BaHFNUzppu6JLMVn9TTPFSA","-config-directory", "/root/.mina-config",
          "-client-port", "$(DAEMON_CLIENT_PORT)",
          "-rest-port", "$(DAEMON_REST_PORT)","-external-port", "$(DAEMON_EXTERNAL_PORT)",
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          "-block-producer-key", "/root/wallet-keys/key","-generate-genesis-proof", "true",]
        env:
        - name: "RAYON_NUM_THREADS"
          value: "6"
        - name: DAEMON_REST_PORT
          value: "3085"
        - name: DAEMON_CLIENT_PORT
          value: "8301"
        - name: DAEMON_METRICS_PORT
          value: "10001"
        - name: DAEMON_EXTERNAL_PORT
          value: "10909"
        - name: GCLOUD_KEYFILE
          value: "/gcloud/keyfile.json"
        - name: NETWORK_NAME
          value: testnet
        - name: GCLOUD_BLOCK_UPLOAD_BUCKET
          value: "mina_network_block_data"
        - name: MINA_PRIVKEY_PASS
          value: ""
        - name: MINA_LIBP2P_PASS
          value: ""
        - name: MINA_CLIENT_TRUSTLIST
          value: "10.0.0.0/8"
        ports:
        - name: client-port
          protocol: TCP
          containerPort: 8301
        - name: graphql-port
          protocol: TCP
          containerPort: 3085
        - name: metrics-port
          protocol: TCP
          containerPort: 10001
        - name: external-port
          protocol: TCP
          containerPort: 10909
          hostPort:   
        
        livenessProbe:
          tcpSocket:
            port: external-port  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        readinessProbe:
          exec:
            command: [
              "/bin/bash",
              "-c",
              "source /healthcheck/utilities.sh && isDaemonSynced && updateSyncStatusLabel test-4 "
            ]  
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 60
        imagePullPolicy: Always
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.mina-config
        - name: actual-libp2p
          mountPath: /root/libp2p-keys      
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "cloud.google.com/gke-spot"
                  operator: In
                  values: ["true"]
      volumes:
      - name: config-dir
        emptyDir: {}
      - name: private-keys
        secret:
          secretName: 
          defaultMode: 256
          items:
          - key: key
            path: key
          - key: pub
            path: key.pub
      - name: libp2p-keys
        secret:
          secretName: libp2pYolo
          defaultMode: 0700
          items:
          - key: key
            path: key
          - key: pub
            path: key.pub
      
      - name: echo-service-key
        secret:
          secretName: echo-service-key
          defaultMode: 256
          items:
          - key: key
            path: echo-key
          - key: pub
            path: echo-key.pub
      - name: faucet-service-key
        secret:
          secretName: faucet-service-key
          defaultMode: 256
          items:
          - key: key
            path: faucet-key
          - key: pub
            path: faucet-key.pub
      - name: wallet-keys
        emptyDir: {}
      - name: actual-libp2p
        emptyDir: {}
---
# Source: block-producer/templates/block-producer.yaml
---
---
# Source: block-producer/templates/block-producer.yaml
---
---
# Source: block-producer/templates/block-producer.yaml
---
---
# Source: block-producer/templates/block-producer.yaml
---
---
# Source: block-producer/templates/block-producer.yaml
---
