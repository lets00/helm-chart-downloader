---
# Source: prism/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-prism
  labels:
    helm.sh/chart: prism-0.3.1
    app.kubernetes.io/name: prism
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4fdcff7d3870c28e5f024b6947cb552d4b956ee2"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |-
    server:
      port: 8080
    debug: false
    cache:
      path: /data
      methods:
        - GET
        - HEAD
      restrictedHeaders:
        - Authorization
    checkScheme: false
    maven:
      remotes:
        - uri: https://repo1.maven.org/maven2
          name: central
        - uri: https://jitpack.io
          name: jitpack
    npm:
      remotes:
        - uri: https://registry.npmjs.org
          name: npmjs
---
# Source: prism/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-prism
  labels:
    helm.sh/chart: prism-0.3.1
    app.kubernetes.io/name: prism
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4fdcff7d3870c28e5f024b6947cb552d4b956ee2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: prism
    app.kubernetes.io/instance: my-release
---
# Source: prism/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-prism
  labels:
    helm.sh/chart: prism-0.3.1
    app.kubernetes.io/name: prism
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4fdcff7d3870c28e5f024b6947cb552d4b956ee2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    linkerd.io/inject: enabled
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prism
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prism
        app.kubernetes.io/instance: my-release
    spec:
      volumes:
        - name: conf
          configMap:
            name: my-release-prism
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      containers:
        - name: prism
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          image: "registry.gitlab.com/av1o/go-prism:4fdcff7d3870c28e5f024b6947cb552d4b956ee2"
          imagePullPolicy: IfNotPresent
          args:
            - -external-config=/etc/opt/prism/config.yaml
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: conf
              mountPath: /etc/opt/prism
              readOnly: true
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: 15
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
          resources:
            {}
