---
# Source: astral/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-astral
  namespace: "default"
  labels:
    helm.sh/chart: astral-0.1.0
    app.kubernetes.io/name: astral
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.0.9"
    app.kubernetes.io/managed-by: Helm
---
# Source: astral/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-astral
  namespace: "default"
  labels:
    helm.sh/chart: astral-0.1.0
    app.kubernetes.io/name: astral
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.0.9"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: astral
    app.kubernetes.io/instance: my-release
---
# Source: astral/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-astral
  namespace: "default"
  labels:
    helm.sh/chart: astral-0.1.0
    app.kubernetes.io/name: astral
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.0.9"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: astral
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: astral
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-astral
      securityContext:
        {}
      containers:
      - name: astral
        securityContext:
            {}
        image: "duck1123/astral"
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
          failureThreshold: 20
        readinessProbe:
          httpGet:
            path: /
            port: http
          failureThreshold: 20
        resources:
            null
        # volumeMounts:
        # - name: data
        #   mountPath: /data
        #   subPath: data
      # volumes:
      # - name: data
      #   persistentVolumeClaim:
      #     claimName: my-release-astral-data
---
# Source: astral/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-astral
  namespace: "default"
  labels:
    helm.sh/chart: astral-0.1.0
    app.kubernetes.io/name: astral
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.0.9"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
  - host: "astral.localhost"
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: my-release-astral
            port:
              name: http
