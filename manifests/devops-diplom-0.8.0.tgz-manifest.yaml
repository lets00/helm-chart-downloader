---
# Source: devops-diplom/templates/sf-diplom-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-secret
type: Opaque
data:
  password: cGFzc3dvcmQ=
---
# Source: devops-diplom/templates/sf-diplom-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-config
data:
  DB_NAME: tutorial-dev
  DB_USER: vinhle
---
# Source: devops-diplom/templates/db-deployment.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-my-release-volume
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  hostPath:
    path: "/mnt/disks"
---
# Source: devops-diplom/templates/db-deployment.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: db-my-release-volume
    component: default
    release: my-release
  name: db-my-release-volume
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
# Source: devops-diplom/templates/app-deployment.yaml
kind: Service
apiVersion: v1
metadata:
  name: app-my-release-service
  labels:
    app: app-my-release
    component: default
    release: my-release
spec:
  ports:
    - name: "app-port"
      port: 80
      targetPort: 3003
  selector:
    app: app-my-release
    component: default
    release: my-release
---
# Source: devops-diplom/templates/db-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: db-my-release
    component: default
    release: my-release
  name: db-my-release-service
spec:
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  selector:
    app: db-my-release
    component: default
    release: my-release
---
# Source: devops-diplom/templates/app-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app-my-release
    component: default
    release: my-release
  name: app-my-release-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-my-release
      component: default
      release: my-release
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: app-my-release
        component: default
        release: my-release
    spec:
      containers:
        - name: app-my-release
          image: alexeyr7/sf-test-app
          ports:
            - containerPort: 3003
          args:
            - sh
            - -c
            - python manage.py makemigrations myapp && python manage.py sqlmigrate myapp 0001 && python manage.py migrate && python manage.py runserver 0.0.0.0:3003
          env:
            - name: DB_HOST
              value: db-my-release-service
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: my-release-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: my-release-config
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                 name: my-release-secret
                 key: password
          resources: {}
      restartPolicy: Always
status: {}
---
# Source: devops-diplom/templates/db-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: db-my-release
    component: default
    release: my-release
  name: db-my-release-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-my-release
      component: default
      release: my-release
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: db-my-release
        component: default
        release: my-release
    spec:
      containers:
        - name: db-my-release
          image: postgres:13-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: my-release-config
                  key: DB_NAME
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: my-release-config
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                 name: my-release-secret
                 key: password
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-my-release-volume
      restartPolicy: Always
      volumes:
        - name: db-my-release-volume
          persistentVolumeClaim:
            claimName: db-my-release-volume
status: {}
---
# Source: devops-diplom/templates/app-deployment.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-my-release-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app-my-release-service
            port:
              number: 80
