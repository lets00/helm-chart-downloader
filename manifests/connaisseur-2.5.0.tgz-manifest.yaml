---
# Source: connaisseur/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: connaisseur-serviceaccount
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: connaisseur/templates/redis.yaml
apiVersion: v1
kind: Secret
metadata:
  name: connaisseur-redis-secret
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
    REDIS_PASSWORD: MjZmNmVlYzQtNmJhOC00Yjk2LThkNGYtZDc3N2JkNzAzZTRj
---
# Source: connaisseur/templates/redis.yaml
apiVersion: v1
kind: Secret
metadata:
  name: connaisseur-redis-tls
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQxVENDQXIyZ0F3SUJBZ0lRUmY5Z2JHcUVXMDlnVlNYcVQ0NE04REFOQmdrcWhraUc5dzBCQVFzRkFEQXcKTVM0d0xBWURWUVFERXlWamIyNXVZV2x6YzJWMWNpMXlaV1JwY3kxelpYSjJhV05sTG1SbFptRjFiSFF1YzNaagpNQ0FYRFRJME1EWXhOVEl6TkRJME5sb1lEekl4TWpRd05USXlNak0wTWpRMldqQXdNUzR3TEFZRFZRUURFeVZqCmIyNXVZV2x6YzJWMWNpMXlaV1JwY3kxelpYSjJhV05sTG1SbFptRjFiSFF1YzNaak1JSUJJakFOQmdrcWhraUcKOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTRNb3V4eEgwZ0d0MGlqQlpYTE5hWHBwQU54NndLNENVNUR3SApPS3dqNmZiTVlPMzh1MC9YMUJFb1FOU1JHZFNFamJxRnJaampBQ21Fc2dBRVNvbm5DcDBZTmNLYU45YW5jRGtrCjZqZldzUFpTcDZGY0xVbDdBd2U1NUFOUGc0YUdUZVJVbzYvMjV2WEF2Rkl0dWhKMUNPdWxwY0wxSWZOQUxlSE8KZ25oM2hpVWZ6N1BVakRjbSt4N2pFMTdJUUQyMk1yZWw2Q3k2UmM1TXlySlduOHJCTHh3VTloYmRlSjI5TEFGUQo3ZkdoSEJQS0t1SkplMTRFUjhyOFNBWFpOVzlxdjFvbk9RWXdMbUFxMU51dnlyS3BKQU91Ymt6TXJYaVhEd3FECjZSUWYreFRVWktuL3NtOFI2REJ4Rk03ZEQrRjlLMjE0K0JDOE5HZzJwSmxUMTBpVm5RSURBUUFCbzRIb01JSGwKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJdwpEQVlEVlIwVEFRSC9CQUl3QURDQnBRWURWUjBSQklHZE1JR2FnaGxqYjI1dVlXbHpjMlYxY2kxeVpXUnBjeTF6ClpYSjJhV05sZ2lGamIyNXVZV2x6YzJWMWNpMXlaV1JwY3kxelpYSjJhV05sTG1SbFptRjFiSFNDSldOdmJtNWgKYVhOelpYVnlMWEpsWkdsekxYTmxjblpwWTJVdVpHVm1ZWFZzZEM1emRtT0NNMk52Ym01aGFYTnpaWFZ5TFhKbApaR2x6TFhObGNuWnBZMlV1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiREFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQW56Umh4QWN0ZEFVanBlb3c0anplckYzZTdZYnBBQWZ2MlpJaW1xN3ExWmJxeXN6NVVHR2wKa1RybFc4SlBhQjBoMU5KNG51dnRLbHpXMGQrUkVDNFNJNEQ0ZFFLVm9uemNpYVZLY3pocHZFM0JXcU1oWWIzNgp3eTFEcnJqKzd3QTRnQ2VTRjRlNWp1Z3piTEdHRUlCeGI5aEQ3MHQxblQyaENycjZGVkpydGlxTlVxalFUejlRCmE2SmRIeCtNQlV4S1phSHVvcGY2eEVIZ0hqZ0pXNTVVbmZjU2Zhek5sSENWakdhSUZrVjdIRUtHYkp2NGFYTHEKMWNWdS9hejExUFZSek84cnB1YTdmWjhFNm1iT0xWTEcyQXZjdjNDVTkyRWJuNnIxYU5HNHBWRGFOVGd4L2x6aApZNVVhM2o3czVzZ1lLSWdSNUI5TEU0SklnWkVicDZ6RnBRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNE1vdXh4SDBnR3QwaWpCWlhMTmFYcHBBTng2d0s0Q1U1RHdIT0t3ajZmYk1ZTzM4CnUwL1gxQkVvUU5TUkdkU0VqYnFGclpqakFDbUVzZ0FFU29ubkNwMFlOY0thTjlhbmNEa2s2amZXc1BaU3A2RmMKTFVsN0F3ZTU1QU5QZzRhR1RlUlVvNi8yNXZYQXZGSXR1aEoxQ091bHBjTDFJZk5BTGVIT2duaDNoaVVmejdQVQpqRGNtK3g3akUxN0lRRDIyTXJlbDZDeTZSYzVNeXJKV244ckJMeHdVOWhiZGVKMjlMQUZRN2ZHaEhCUEtLdUpKCmUxNEVSOHI4U0FYWk5XOXF2MW9uT1FZd0xtQXExTnV2eXJLcEpBT3Via3pNclhpWER3cUQ2UlFmK3hUVVpLbi8Kc204UjZEQnhGTTdkRCtGOUsyMTQrQkM4TkdnMnBKbFQxMGlWblFJREFRQUJBb0lCQVFERW5iTzZwYWJScUt0LwpyM2lLVDhvTWt5ajF6VjdVUGh4OVlWQURydldlMENMRjZZTzBwc3FtRC9mQWRPMFJ4Y1BIWDgxTElUMzBSMXhzCmdQMC80VXo0Q0o1RGI1cUttck5Md24vYWFjcmNjQ2V0dmNLdFRlZE5xRFZkRGRRL3U2dS9kNmJjb2EzNUtCMVQKMnlGcDduajF1My9nOUJ5TGZJTzNYaG5PSHVhVXFrSDd1cmttVjRlV0N5Z0hZeTd5WVNGaVlGQTlzdkQvaU9kNApqakFVeTdhdit5V2RhR2NFei9HcXNpcHdVUWs3STVyKzlNSHQ3SS9rUkRSdFlzenNlQVBCeEhJcGI5bWJ5bFJvCmRUcGJEMWg3czMrRUR3QjlZSGg3YlEwUW5UYWI4ckRneEpOM3ZXZ2pJMi9Nb29sSS83dEVhN1Ywc3JmcERkRTAKZWJvY2QxeEJBb0dCQVB2SFJ6TlNjRFAvQmNNSzB1SkxLdVAxaXFlQVRaMTBBRHlVZG9JUUxPajIzd2FYRkhuMwpjUkt4TlYvUkdQRmdPbEVFZjdwS2VDTklFRVJnMmFGb2pGL2oyVUYzb2R5N1RhZ21NUFhoNWNESmxYTjRSejhFCk16UXU3OVVqa0xKbGlQemFvT2JrUW81ZHA0bGJPK3JwSHB2SGlFNThSckV3WmY5WlpHREgwejdOQW9HQkFPU1AKRDAwdmljakM2Y1hNQ1dsWG10UFV2dm8rVXdKUkQ5SE1iYnJNRTc5SzBtcU11em9QVkZJNHBlNkp4S1FWL0dWcAptMjNMMkdvN3BmQ1hQWnRjeFN4ZTVQdktjdUF3clgvWHlVaHFaeDBMNDNXMENRK21LdHJWd1JwaVJUd1IzTjR3Ci9mSEd1YXhZQmN5bHo1RVJucGY0UkQ3M2g3cjE2QS81ZU1zSk14SVJBb0dCQU1wWHE4ditHN2hkNG9hT0kwN0QKOUJOQjJRMm1Xam9JNk12RzBMclVQeE4ybTJSVGRKeFVsT1hkenJSVGVnVTZQWU93NXVtVFFadXhKWW1lZ0Nocwp1aXV5Rkg2OW96S2V3Tms2NEN3clFKYkFLc0NpMERjL3E5cnJRY2w4REtTaVh3WSt1Z0wxUE52blBtWndFT1pJCk5WWWlkRlFISWxUeVBYYUtvOVgzb2JpZEFvR0FmaVJlbzVEYkVJeFNqVElBOTd5NzNMR0wvWHlzUDVrUmpBNngKZU9qczlTU01ZUFh1MXlwaXRVWkNmaFpYQ3VCL2ZsRDgwV294dE4vYXc2QVZCa3Y3SG5QNUdPWXc1SDY1SXRlcgpaV1lrSnFuTERja2hQeHZNaHg1MkJ1TzVwbCtOY0t2Rlc4ejc2SnhrQndCMFFISmkveWlzTWJ4WGt0M3BCL2Y5CnJNRVZDS0VDZ1lFQXZjOHRrZ2JEalA4YzVzQ05YcFlmVy8wazg3RG9yZk0vTm96ZWhrdVhiTXBwbFo1TE9hQkoKeERLcHVyVWNrMEppZFUrNDFJL3NEYnpVUjFYNnRPVldYVjZMTGw0T2RGN0VML1J3N25DZGtBdjRjb01USTJlVApVczBuSi9TeFd3Mml6b2hBaHJSNGZwaGdIT3M0ais5OHJKVlVTQXB0SU9ML01PbUF4MTU0U1hjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: connaisseur/templates/webhook+certificate.yaml
apiVersion: v1
kind: Secret
metadata:
  name: connaisseur-tls
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsakNDQW42Z0F3SUJBZ0lRZDlIV0FJbHV3eTRPOCtGNk80TXM1ekFOQmdrcWhraUc5dzBCQVFzRkFEQW0KTVNRd0lnWURWUVFERXh0amIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkQzV6ZG1Nd0lCY05NalF3TmpFMQpNak0wTWpRMVdoZ1BNakV5TkRBMU1qSXlNelF5TkRWYU1DWXhKREFpQmdOVkJBTVRHMk52Ym01aGFYTnpaWFZ5CkxYTjJZeTVrWldaaGRXeDBMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUpvK21QY3BIS3JmbnZ3OFRsMldvZUMwTFIyb0J2TXZvYmlma2M4Yy9STzMvODZRZzhPZjRYYlhCTHdkd3dWWApyRno3ZGxaWUNxeVhSYWo0K2I3dGozR3AyUTUvWDRTL3I3L2c0TjNqNkRudE1QRTZmWm1zQVgvWDRheUxCWXdiCkcwS2hwaTdKdWRnNm10MnVTQzdVajlNU2dmWXlBSnFxTmdJU2kvUVFlTzlmM3BhWHZsczNHSURCcUx0TVF1akUKdWFSTDlLK1lhb3h5cDZnbkF4QkYvaHgvTC9DTmpEdEVQNW4xcFN6cTlOVldFcjR1WUUxT0ZDakhyRUY2dW14bgo2RjY2S29UbnN2dko0cXo5WDYvQ29kMXFCWldtYkhBT1IzY2EyL1JRZm9DZFJpYVBXa2l5V1RNSUdrMkFibU9wCnUwT2g2NFgrWS93aVF1RnJnaDNseGxVQ0F3RUFBYU9CdlRDQnVqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdld1lEVlIwUgpCSFF3Y29JUFkyOXVibUZwYzNObGRYSXRjM1pqZ2hkamIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkSUliClkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFF1YzNaamdpbGpiMjV1WVdsemMyVjFjaTF6ZG1NdVpHVm0KWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFhVitSMHhSWgpjSGNmUWVhU0REN3JFdjhkUXV2aDFlNWxON2N5VXJDUnhCaU5HRnFUSm1EakVuRXorMFZpT0xvT0t0aGVLOEVxCmc1Mnd3d0hDRnhiVWRsR0dCL0k4ZDZVVUtjQTYvcUFmcit1WHp2VDVGcDZSbWhoakIrdk9oMHZYU2g1M0dEc3AKaWtiSG5LOUtvdFY1djh2TTFTeGNQR1BOdkR1ZE9mcklJWStlMTJMN2FjcWsxa3JQUTA3L29VRE1XMWcwQTVobQpHdGQ2Zm5xN2xsRE9aK0xFQmVJQ1dRT05LM1VOaU4ySWFzTGdwVUpCSEZubHFodTRpZmVvL3dMU216QURqNllMCnJiV0h1NlFQRFZjeks5UmFrUVhhWUFIRFlFdDI1QjRKdk9FTjNoQmJIQ1JoTzJFTjZjSGJ1MkJuZ1BlMHFFRjIKZzNmT0o1Mnhsbk81Z1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbWo2WTl5a2NxdCtlL0R4T1haYWg0TFF0SGFnRzh5K2h1SitSenh6OUU3Zi96cENECnc1L2hkdGNFdkIzREJWZXNYUHQyVmxnS3JKZEZxUGo1dnUyUGNhblpEbjlmaEwrdnYrRGczZVBvT2UwdzhUcDkKbWF3QmY5ZmhySXNGakJzYlFxR21Mc201MkRxYTNhNUlMdFNQMHhLQjlqSUFtcW8yQWhLTDlCQjQ3MS9lbHBlKwpXemNZZ01Hb3UweEM2TVM1cEV2MHI1aHFqSEtucUNjREVFWCtISDh2OEkyTU8wUS9tZldsTE9yMDFWWVN2aTVnClRVNFVLTWVzUVhxNmJHZm9Ycm9xaE9leSs4bmlyUDFmcjhLaDNXb0ZsYVpzY0E1SGR4cmI5RkIrZ0oxR0pvOWEKU0xKWk13Z2FUWUJ1WTZtN1E2SHJoZjVqL0NKQzRXdUNIZVhHVlFJREFRQUJBb0lCQUdya0lJdUFRUzZsZy84WApKOU94dFFNTXVndElTM0N5UEtlK1pZU2JlVUwyQzEreVJLNElHVzZLK2V3SDBBUGV5ME13dk1SL2hQNHdZd1VECmJjZ0R4NW1rZEJpWTZyQUxTeGQxRjBDT1ZYdjNSU2lYT1QyS3R3dEtwMGswbXFhS2pteXhxNEhYS0dTUjBJcjUKNFdvYXdvVXEyVWV0UlQvcDN6MjJicWkzMWFkRXZJYXZIcUNBS0JzSGVZUzFoaC9iZ2RBSHJBd3Y0eHJ4R29BVgpiVVduU25Nd3RJMnIrM0toMktmZ2tnNGtlc09nRG56VFY4NldGenQxSUpFRXBPN1BBbXZoVjlaM0VMeFE3ZnlQClpTSmxLakQ1VGNSWFBUbU1ETy94YTJnQnhObWQ5YlIwY2dGczd6aE8xd2QwSDBzUkwzODdKV3d6RElCcE9CWTkKM1NHNGk2MENnWUVBeFVwTjBKbHRqRitrMDRFWjFIR2pSWWhtTGNneEtYUkN0TEZHNWd6Q2JCVDNPTk9rN1JnNwo5d0w1Y1Jtb2pwMDIxYm1ML1VxVEJTVHlxRUptckUvUUo3WUZIN1dhc2pIOVFNMVgvenRpYTRHT3JBbzFyRmZzCmMvTS9ZdU9SN1VNTnEveGw0a2cySnkxT0JlTVV3UmlJSjJrWUhreGlTSnU0VXp0RDk2SWhOdGNDZ1lFQXlDVUsKOFdmeUk1L3NQMXZnTXdOdDJzbjEzUkZyV2JqVXNHcTh3S21NdkN3SEQrSkhYNFlTaDRUYlBacFE5d1k2TkJjZQpMT2tTdmxXY3dCaXZPaFlaaExQWXQ5eWdXMWc2YnNObmVndlRVSy9WcHcvZU5KVWxYblA2RW9WZHBzZ1dwaWJLCldQdnVXZGdPOEExT3pySDdBNVkxQmMzSWxtVGZ2VXRRZThlZlFyTUNnWUVBaVRUVnpUOEc2dHNSZkc2S2tpNjkKeC92R1pBeVg5Q2FBeGIyTWV5MWdnVjVMV09BSUVVUUxZQXhYZ2dyQUtQNjVSZ1lXajM4dnBDSkFDRGkxd3h4Mgp2VWRmWk9BZHg5UHdOd01ZTWM4UThZZFd1OXNWM05nQS85cXB1SkpmeUV3YjFBSmlzTzViaXY5OUJhY1pwZmp6CnA4VDFHdzB3UlNMWEhEdFpWMzBQOEYwQ2dZQmIrTW5DaldXMEFUVnJHQ2s2eUFTZldkZGxzeStGbDI0RmM4Y3gKTWJpK2IreisyNWk0eUwrVER2WkFwTDA0QnVDUU4xOWllK2hsRnFwbGkvSloydlgzQ1Q0NW4yVUJGTllsT0I1QQo4MVl6NmRsZ1grWlllNEVrbWw3OFM5VHhZMWtsR1FZN1Jlb04xejltQ0hlQ2ZEOUJNckZDN1lHVHV0OGwrWW9PCmwza1VDUUtCZ1FDVGhhWXdjVmRkd3RPYk9rY1dMNnh2Ry9XM2ZYMHA5V0lWeVdRTW05M0I3aU02dHFNcCtEUDYKV0cwTkhmNTZrVEE2TUIyMUxTNnFoRjF6d2RkdUcvcldNS2wwem1xZ1htZDdqbVdnNmNDNDdFKzAxeFFLZHB2eApaRlBYS1hzbHZ0cTM1Ymp0cWlMdy9nRDluVlN3bzVYUVo1d0dOTlQrN3BoNExvUVdxaGNOZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: connaisseur/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: connaisseur-app-config
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    validators:
    -
      approve: true
      name: allow
      type: static
    -
      approve: false
      name: deny
      type: static
    -
      name: dockerhub
      trustRoots:
      - key: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEOXYta5TgdCwXTCnLU09W5T4M4r9f
          QQrqJuADP6U7g5r9ICgPSmZuRHP/1AYUfOQW3baveKsT969EfELKj1lfCA==
          -----END PUBLIC KEY-----
        name: default
      - key: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEsx28WV7BsQfnHF1kZmpdCTTLJaWe
          d0CA+JOi8H4REuBaWSZ5zPDe468WuOJ6f71E7WFg3CVEVYHuoZt2UYbN/Q==
          -----END PUBLIC KEY-----
        name: sse
      type: notaryv1
    policy:
    -
      pattern: '*:*'
      validator: deny
    -
      pattern: docker.io/library/*:*
      validator: dockerhub
    -
      pattern: docker.io/securesystemsengineering/*:*
      validator: dockerhub
      with:
        trustRoot: sse
    -
      pattern: registry.k8s.io/*:*
      validator: allow
---
# Source: connaisseur/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: connaisseur-alert-config
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
      {}
---
# Source: connaisseur/templates/env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: connaisseur-env
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
data:
  AUTOMATIC_CHILD_APPROVAL: "true"
  AUTOMATIC_UNCHANGED_APPROVAL: "false"
  DETECTION_MODE: "false"
  RESOURCE_VALIDATION_MODE: "all"
  CACHE_EXPIRY_SECONDS: "30"
  CACHE_ERRORS: "true"
  LOG_LEVEL: "info"
---
# Source: connaisseur/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: connaisseur-cluster-role
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods", "replicationcontrollers"]
  verbs: ["get"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get"]
---
# Source: connaisseur/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: connaisseur-cluster-role-binding
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: connaisseur-serviceaccount
  namespace: default
roleRef:
  kind: ClusterRole
  name: connaisseur-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: connaisseur/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: connaisseur-role
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
# Source: connaisseur/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: connaisseur-role-binding
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: connaisseur-serviceaccount
  namespace: default
roleRef:
  kind: Role
  name: connaisseur-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: connaisseur/templates/redis.yaml
apiVersion: v1
kind: Service
metadata:
  name: connaisseur-redis-service
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: redis
---
# Source: connaisseur/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: connaisseur-svc
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 5000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
---
# Source: connaisseur/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connaisseur
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/config: 37f9a231a4619c6d680749a1ac39313f663e72ccc960069a206a48958e27a72d
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: connaisseur
      app.kubernetes.io/instance: connaisseur
  template:
    metadata:
      labels:
        app.kubernetes.io/name: connaisseur
        app.kubernetes.io/instance: connaisseur
      annotations:
        checksum/config: 37f9a231a4619c6d680749a1ac39313f663e72ccc960069a206a48958e27a72d
    spec:
      serviceAccountName: connaisseur-serviceaccount
      containers:
        - name: connaisseur
          image: docker.io/securesystemsengineering/connaisseur:v3.5.0
          imagePullPolicy: Always
          ports:
            - name: https
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /ready
              port: https
              scheme: HTTPS
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 20001
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: certs
              mountPath: /app/certs
              readOnly: true
            - name: app-config
              mountPath: /app/config
              readOnly: true
            - name: redis-certs
              mountPath: /app/redis-certs/tls.crt
              readOnly: true
              subPath: tls.crt
            - name: connaisseur-alert-config
              mountPath: /app/alerts/config.yaml
              readOnly: true
              subPath: config.yaml
            
          envFrom:
          - configMapRef:
              name: connaisseur-env
          - secretRef:
              name: connaisseur-redis-secret
          env:
          - name: REDIS_HOST
            value: connaisseur-redis-service
          
      volumes:
        - name: certs
          secret:
            secretName: connaisseur-tls
        - name: redis-certs
          secret:
            secretName: connaisseur-redis-tls
        - name: app-config
          configMap:
            name: connaisseur-app-config
        - name: connaisseur-alert-config
          configMap:
            name: connaisseur-alert-config
        
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - connaisseur
              topologyKey: kubernetes.io/hostname
            weight: 100
      tolerations:
        []
      nodeSelector:
        {}
      securityContext:
        {}
---
# Source: connaisseur/templates/redis.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: connaisseur-redis
  namespace: default
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/config: 37f9a231a4619c6d680749a1ac39313f663e72ccc960069a206a48958e27a72d
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: connaisseur
      app.kubernetes.io/instance: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: connaisseur
        app.kubernetes.io/instance: redis
      annotations:
        checksum/config: 37f9a231a4619c6d680749a1ac39313f663e72ccc960069a206a48958e27a72d
    spec:
      automountServiceAccountToken: false
      containers:
      - name: redis
        image: redis:7
        imagePullPolicy: Always
        args:
          - --requirepass
          - $(REDIS_PASSWORD)
          - --tls-cert-file
          - /cfg/certs/tls.crt
          - --tls-key-file
          - /cfg/certs/tls.key
          - --tls-auth-clients
          - "no"
          - --tls-port
          - "6379"
          - --port
          - "6380"
          - --loglevel
          - "notice"
          - --rename-command
          - FLUSHALL
          - ""
          - --rename-command
          - FLUSHDB
          - ""
        ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
        livenessProbe:
          exec:
            command:
              - redis-cli
              - -p
              - "6380"
              - ping
        readinessProbe:
          exec:
            command:
              - redis-cli
              - -p
              - "6380"
              - ping
        volumeMounts:
          - name: certs
            mountPath: /cfg/certs
            readOnly: true
        envFrom:
          - secretRef:
              name: connaisseur-redis-secret
        resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
        securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 20001
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
      securityContext:
        {}
      volumes:
        - name: certs
          secret:
            secretName: connaisseur-redis-tls
---
# Source: connaisseur/templates/webhook+certificate.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: connaisseur-webhook
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded, hook-failed
webhooks:
  - name: connaisseur-svc.default.svc
    failurePolicy: Ignore
    reinvocationPolicy: Never
    clientConfig:
      service:
        name: connaisseur-svc
        namespace: default
        path: /mutate
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsakNDQW42Z0F3SUJBZ0lRZDlIV0FJbHV3eTRPOCtGNk80TXM1ekFOQmdrcWhraUc5dzBCQVFzRkFEQW0KTVNRd0lnWURWUVFERXh0amIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkQzV6ZG1Nd0lCY05NalF3TmpFMQpNak0wTWpRMVdoZ1BNakV5TkRBMU1qSXlNelF5TkRWYU1DWXhKREFpQmdOVkJBTVRHMk52Ym01aGFYTnpaWFZ5CkxYTjJZeTVrWldaaGRXeDBMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUpvK21QY3BIS3JmbnZ3OFRsMldvZUMwTFIyb0J2TXZvYmlma2M4Yy9STzMvODZRZzhPZjRYYlhCTHdkd3dWWApyRno3ZGxaWUNxeVhSYWo0K2I3dGozR3AyUTUvWDRTL3I3L2c0TjNqNkRudE1QRTZmWm1zQVgvWDRheUxCWXdiCkcwS2hwaTdKdWRnNm10MnVTQzdVajlNU2dmWXlBSnFxTmdJU2kvUVFlTzlmM3BhWHZsczNHSURCcUx0TVF1akUKdWFSTDlLK1lhb3h5cDZnbkF4QkYvaHgvTC9DTmpEdEVQNW4xcFN6cTlOVldFcjR1WUUxT0ZDakhyRUY2dW14bgo2RjY2S29UbnN2dko0cXo5WDYvQ29kMXFCWldtYkhBT1IzY2EyL1JRZm9DZFJpYVBXa2l5V1RNSUdrMkFibU9wCnUwT2g2NFgrWS93aVF1RnJnaDNseGxVQ0F3RUFBYU9CdlRDQnVqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdld1lEVlIwUgpCSFF3Y29JUFkyOXVibUZwYzNObGRYSXRjM1pqZ2hkamIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkSUliClkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFF1YzNaamdpbGpiMjV1WVdsemMyVjFjaTF6ZG1NdVpHVm0KWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFhVitSMHhSWgpjSGNmUWVhU0REN3JFdjhkUXV2aDFlNWxON2N5VXJDUnhCaU5HRnFUSm1EakVuRXorMFZpT0xvT0t0aGVLOEVxCmc1Mnd3d0hDRnhiVWRsR0dCL0k4ZDZVVUtjQTYvcUFmcit1WHp2VDVGcDZSbWhoakIrdk9oMHZYU2g1M0dEc3AKaWtiSG5LOUtvdFY1djh2TTFTeGNQR1BOdkR1ZE9mcklJWStlMTJMN2FjcWsxa3JQUTA3L29VRE1XMWcwQTVobQpHdGQ2Zm5xN2xsRE9aK0xFQmVJQ1dRT05LM1VOaU4ySWFzTGdwVUpCSEZubHFodTRpZmVvL3dMU216QURqNllMCnJiV0h1NlFQRFZjeks5UmFrUVhhWUFIRFlFdDI1QjRKdk9FTjNoQmJIQ1JoTzJFTjZjSGJ1MkJuZ1BlMHFFRjIKZzNmT0o1Mnhsbk81Z1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules: []
    sideEffects: None
    admissionReviewVersions: ["v1"]
---
# Source: connaisseur/templates/webhook+certificate.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: connaisseur-webhook
  labels:
    helm.sh/chart: connaisseur-2.5.0
    app.kubernetes.io/name: connaisseur
    app.kubernetes.io/instance: connaisseur
    app.kubernetes.io/version: "3.5.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install, post-upgrade, post-rollback
webhooks:
  - name: connaisseur-svc.default.svc
    failurePolicy: Fail
    reinvocationPolicy: Never
    clientConfig:
      service:
        name: connaisseur-svc
        namespace: default
        path: /mutate
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsakNDQW42Z0F3SUJBZ0lRZDlIV0FJbHV3eTRPOCtGNk80TXM1ekFOQmdrcWhraUc5dzBCQVFzRkFEQW0KTVNRd0lnWURWUVFERXh0amIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkQzV6ZG1Nd0lCY05NalF3TmpFMQpNak0wTWpRMVdoZ1BNakV5TkRBMU1qSXlNelF5TkRWYU1DWXhKREFpQmdOVkJBTVRHMk52Ym01aGFYTnpaWFZ5CkxYTjJZeTVrWldaaGRXeDBMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUpvK21QY3BIS3JmbnZ3OFRsMldvZUMwTFIyb0J2TXZvYmlma2M4Yy9STzMvODZRZzhPZjRYYlhCTHdkd3dWWApyRno3ZGxaWUNxeVhSYWo0K2I3dGozR3AyUTUvWDRTL3I3L2c0TjNqNkRudE1QRTZmWm1zQVgvWDRheUxCWXdiCkcwS2hwaTdKdWRnNm10MnVTQzdVajlNU2dmWXlBSnFxTmdJU2kvUVFlTzlmM3BhWHZsczNHSURCcUx0TVF1akUKdWFSTDlLK1lhb3h5cDZnbkF4QkYvaHgvTC9DTmpEdEVQNW4xcFN6cTlOVldFcjR1WUUxT0ZDakhyRUY2dW14bgo2RjY2S29UbnN2dko0cXo5WDYvQ29kMXFCWldtYkhBT1IzY2EyL1JRZm9DZFJpYVBXa2l5V1RNSUdrMkFibU9wCnUwT2g2NFgrWS93aVF1RnJnaDNseGxVQ0F3RUFBYU9CdlRDQnVqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdld1lEVlIwUgpCSFF3Y29JUFkyOXVibUZwYzNObGRYSXRjM1pqZ2hkamIyNXVZV2x6YzJWMWNpMXpkbU11WkdWbVlYVnNkSUliClkyOXVibUZwYzNObGRYSXRjM1pqTG1SbFptRjFiSFF1YzNaamdpbGpiMjV1WVdsemMyVjFjaTF6ZG1NdVpHVm0KWVhWc2RDNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFhVitSMHhSWgpjSGNmUWVhU0REN3JFdjhkUXV2aDFlNWxON2N5VXJDUnhCaU5HRnFUSm1EakVuRXorMFZpT0xvT0t0aGVLOEVxCmc1Mnd3d0hDRnhiVWRsR0dCL0k4ZDZVVUtjQTYvcUFmcit1WHp2VDVGcDZSbWhoakIrdk9oMHZYU2g1M0dEc3AKaWtiSG5LOUtvdFY1djh2TTFTeGNQR1BOdkR1ZE9mcklJWStlMTJMN2FjcWsxa3JQUTA3L29VRE1XMWcwQTVobQpHdGQ2Zm5xN2xsRE9aK0xFQmVJQ1dRT05LM1VOaU4ySWFzTGdwVUpCSEZubHFodTRpZmVvL3dMU216QURqNllMCnJiV0h1NlFQRFZjeks5UmFrUVhhWUFIRFlFdDI1QjRKdk9FTjNoQmJIQ1JoTzJFTjZjSGJ1MkJuZ1BlMHFFRjIKZzNmT0o1Mnhsbk81Z1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods", "pods/ephemeralcontainers", "replicationcontrollers"]
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["batch"]
        apiVersions: ["v1"]
        resources: ["jobs", "cronjobs"]
    sideEffects: None
    timeoutSeconds: 30
    admissionReviewVersions: ["v1"]
    namespaceSelector:
      matchExpressions:
      - key: securesystemsengineering.connaisseur/webhook
        operator: NotIn
        values:
          - ignore
