---
# Source: hivemq-platform-operator/templates/service-account.yml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: hivemq-platform-operator-0.2.6
    app.kubernetes.io/name: "hivemq-platform-operator"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "1.3.1"
    app.kubernetes.io/managed-by: Helm
  name: hivemq-platform-operator-my-release
---
# Source: hivemq-platform-operator/templates/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "hivemq-platform-operator-role-my-release"
  labels:
    helm.sh/chart: hivemq-platform-operator-0.2.6
    app.kubernetes.io/name: "hivemq-platform-operator"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "1.3.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - hivemq.com
    resources:
      - hivemq-platforms
      - hivemq-platforms/status
      - hivemq-platforms/finalizers
    verbs:
      - get
      - list
      - watch
      - patch
      - update
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - services
      - events
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - list
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
      - watch
      - get
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
      - clusterroles
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
---
# Source: hivemq-platform-operator/templates/rbac.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "hivemq-platform-operator-pod-resource-role-my-release"
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - patch
      - update
---
# Source: hivemq-platform-operator/templates/bindings.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "hivemq-platform-operator-role-binding-my-release"
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: "hivemq-platform-operator-role-my-release"
subjects:
  - kind: ServiceAccount
    name: hivemq-platform-operator-my-release
    namespace: default
---
# Source: hivemq-platform-operator/templates/bindings.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "hivemq-platform-operator-view-my-release"
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: view
subjects:
  - kind: ServiceAccount
    name: hivemq-platform-operator-my-release
---
# Source: hivemq-platform-operator/templates/service.yml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: hivemq-platform-operator-0.2.6
    app.kubernetes.io/name: "hivemq-platform-operator"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "1.3.1"
    app.kubernetes.io/managed-by: Helm
  name: "hivemq-platform-operator-my-release"
spec:
  ports:
    - name: http-my-release
      port: 8080
      protocol: TCP
      targetPort: http-my-release
    - name: https-my-release
      port: 8443
      protocol: TCP
      targetPort: https-my-releas
  selector:
    app.kubernetes.io/name: "hivemq-platform-operator"
    app.kubernetes.io/instance: "my-release"
  type: ClusterIP
---
# Source: hivemq-platform-operator/templates/deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: hivemq-platform-operator-0.2.6
    app.kubernetes.io/name: "hivemq-platform-operator"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "1.3.1"
    app.kubernetes.io/managed-by: Helm
  name: hivemq-my-release
spec:
  # The Operator cannot have more than one replica
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "hivemq-platform-operator"
      app.kubernetes.io/instance: "my-release"
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: http
      labels:
        app.kubernetes.io/name: "hivemq-platform-operator"
        app.kubernetes.io/instance: "my-release"
    spec:
      containers:
        - env:
            - name: JAVA_OPTS
              value: "-XX:+UnlockExperimentalVMOptions -XX:InitialRAMPercentage=75 -XX:MaxRAMPercentage=75"
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: hivemq.platform.operator.release.name
              value: "my-release"
            - name: hivemq.platform.operator.init.image
              value: "docker.io/hivemq/hivemq-platform-operator-init:1.3.1"
            - name: hivemq.platform.operator.image.pull.secret
              value: ""
            - name: hivemq.platform.operator.log.level
              value: "INFO"
            # additional option to show the configuration details in the log
            - name: hivemq.platform.operator.log.configuration
              value: "false"
            # additional options for fine-grained logging
            - name: hivemq.platform.operator.quarkus.log.level
              value: "INFO"
            - name: hivemq.platform.operator.sdk.log.level
              value: "INFO"
            - name: hivemq.platform.operator.network.log.level
              value: "WARN"
            - name: quarkus.http.port
              value: "8080"
            - name: quarkus.http.ssl-port
              value: "8443"
          image: "docker.io/hivemq/hivemq-platform-operator:1.3.1"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: hivemq-platform-operator
          ports:
            - name: http-my-release
              containerPort: 8080
              protocol: TCP
            - name: https-my-releas
              containerPort: 8443
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: "512m"
              memory: "512M"
            requests:
              cpu: "512m"
              memory: "512M"
      serviceAccountName: hivemq-platform-operator-my-release
