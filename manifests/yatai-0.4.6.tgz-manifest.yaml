---
# Source: yatai/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-yatai
  namespace: default
  labels:
    helm.sh/chart: yatai-0.4.6
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.6"
    app.kubernetes.io/managed-by: Helm
---
# Source: yatai/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.13.11
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  namespace: default
type: Opaque
data:
  postgresql-password: "THhhTTZ0YmQ5aw=="
---
# Source: yatai/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-yatai
  labels:
    helm.sh/chart: yatai-0.4.6
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.6"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  initialization_token: "aDi25IqP5z46BpYq"
  k8s_robot_token: "RO5gJ5y0oVHQuRzg"
  session_secret_key: "rtkc4iBIhZWm57j4"  # the cookie secret, must modify and persist it when deployed to the production environment

  config.yaml: |
    in_cluster: true

    server:  # the server config section
      enable_https: false  # if the yatai is deployed as an https server, set it to ture
      port: 7777  # the server port
      migration_dir: /app/db/migrations  # the migrations sql files directory
---
# Source: yatai/templates/configmap-network.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: network
  labels:
    helm.sh/chart: yatai-0.4.6
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.6"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: yatai/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-yatai
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
# Source: yatai/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-yatai
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-yatai
subjects:
  - kind: ServiceAccount
    name: my-release-yatai
    namespace: default
---
# Source: yatai/charts/postgresql/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.13.11
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: default
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: my-release
---
# Source: yatai/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.13.11
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
  namespace: default
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: my-release
    role: primary
---
# Source: yatai/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-yatai
  labels:
    helm.sh/chart: yatai-0.4.6
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.6"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      nodePort: 
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: my-release
---
# Source: yatai/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-yatai
  labels:
    helm.sh/chart: yatai-0.4.6
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: yatai
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: yatai
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-yatai
      securityContext:
        {}
      containers:
        - name: yatai
          securityContext:
            {}
          image: "quay.io/bentoml/yatai:0.4.6"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
          args:
            - exec /app/api-server serve -c /conf/config.yaml
          ports:
            - name: http
              containerPort: 7777
              protocol: TCP
          env:
            - name: PG_HOST
              value: "my-release-postgresql"
            - name: PG_DATABASE
              value: "yatai"
            - name: PG_PORT
              value: "5432"
            - name: PG_SSLMODE
              value: "disable"
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
            - name: PG_USER
              value: "postgres"
            - name: SESSION_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: my-release-yatai
                  key: session_secret_key
            - name: YATAI_INITIALIZATION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: my-release-yatai
                  key: initialization_token
            - name: DOCKER_IMAGE_BUILDER_PRIVILEGED
              value: "false"
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            httpGet:
              path: /
              port: http
          readinessProbe:
            failureThreshold: 60
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            httpGet:
              path: /
              port: http
          resources:
            {}
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /conf
              name: config
              readOnly: true
            - mountPath: /etc/localtime
              name: host-timezone
              readOnly: true
      volumes:
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-timezone
        - name: config
          secret:
            secretName: my-release-yatai
---
# Source: yatai/charts/postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.13.11
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
  namespace: default
spec:
  serviceName: my-release-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: my-release
      role: primary
  template:
    metadata:
      name: my-release-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.13.11
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/component: primary
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      automountServiceAccountToken: false
      containers:
        - name: my-release-postgresql
          image: docker.io/bitnami/postgresql:11.14.0-debian-10-r17
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: "yatai"
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -d "dbname=yatai" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -d "dbname=yatai" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: 
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: yatai/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-yatai-test-connection"
  labels:
    helm.sh/chart: yatai-0.4.6
    app.kubernetes.io/name: yatai
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.6"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-yatai:80']
  restartPolicy: Never
