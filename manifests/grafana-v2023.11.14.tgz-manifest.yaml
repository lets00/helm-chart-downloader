---
# Source: grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-v2023.11.14
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.07.10"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: my-release
---
# Source: grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-v2023.11.14
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.07.10"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: my-release
    spec:
      
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: grafana
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 472
            runAsNonRoot: true
            runAsUser: 472
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/appscode/grafana:v2023.07.10"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3005
              protocol: TCP
          startupProbe:
            httpGet:
              path: /
              port: http
            # wait for cert and nats to be ready
            initialDelaySeconds: 60
            failureThreshold: 18
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          env:
            - name: GF_PATHS_CONFIG
              value: /conf/defaults.ini
            - name: PLATFORM_APISERVER_DOMAIN
              value: http://my-release-platform-api.default.svc
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: data
      volumes:
        - name: data
          emptyDir: {}
