---
# Source: kubegems-installer/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubegems-installer
  namespace: "default"
  labels:
    app.kubernetes.io/name: kubegems-installer
    helm.sh/chart: kubegems-installer-1.24.5
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: installer
---
# Source: kubegems-installer/templates/repositories.yaml
apiVersion: v1
kind: Secret
metadata:
  name: plugin-repository-kubegems
  namespace: "default"
  labels:
    app.kubernetes.io/name: kubegems-installer
    helm.sh/chart: kubegems-installer-1.24.5
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    plugins.kubegems.io/is-plugin-repo: "true"
data:
  address: aHR0cHM6Ly9jaGFydHMua3ViZWdlbXMuaW8va3ViZWdlbXM=
  priority: PG5pbD4=
---
# Source: kubegems-installer/templates/aggregate-clusterroles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-kubegems-installer-view
  labels:
    app.kubernetes.io/name: kubegems-installer
    helm.sh/chart: kubegems-installer-1.24.5
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: installer
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"    
rules:
- apiGroups: ["plugins.kubegems.io"]
  resources: ["plugins"]
  verbs: ["get", "list", "watch"]
---
# Source: kubegems-installer/templates/aggregate-clusterroles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-kubegems-installer-edit
  labels:
    app.kubernetes.io/name: kubegems-installer
    helm.sh/chart: kubegems-installer-1.24.5
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: installer
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-admin: "true"    
rules:
- apiGroups: ["plugins.kubegems.io"]
  resources: ["plugins"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: kubegems-installer/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-kubegems-installer
  labels:
    app.kubernetes.io/name: kubegems-installer
    helm.sh/chart: kubegems-installer-1.24.5
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: installer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: my-release-kubegems-installer
    namespace: default
---
# Source: kubegems-installer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubegems-installer
  namespace: "default"
  labels:
    app.kubernetes.io/name: kubegems-installer
    helm.sh/chart: kubegems-installer-1.24.5
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: installer
  annotations:
    prometheus.io/port: '9100'
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    - name: metrics
      port: 9100
      targetPort: metrics
      protocol: TCP
  selector:
    app.kubernetes.io/name: kubegems-installer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: installer
---
# Source: kubegems-installer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubegems-installer
  namespace: "default"
  labels:
    app.kubernetes.io/name: kubegems-installer
    helm.sh/chart: kubegems-installer-1.24.5
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: installer
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: kubegems-installer
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: installer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubegems-installer
        helm.sh/chart: kubegems-installer-1.24.5
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: installer
    spec:
      serviceAccountName: my-release-kubegems-installer
      
      containers:
        - name: installer
          image: docker.io/kubegems/kubegems:v1.24.5
          imagePullPolicy: IfNotPresent
          args:
            - installer
            - --enableleaderelection
            - --metricsaddr=:9100
          env:
            - name: LOG_LEVEL
              value: debug
          resources:
            limits: {}
            requests: {}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 9100
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /healthz
              port: http
