---
# Source: keycloak-client-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-keycloak-client-operator-controller-manager
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: keycloak-client-operator
    app.kubernetes.io/part-of: keycloak-client-operator
    helm.sh/chart: keycloak-client-operator-0.3.3
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: keycloak-client-operator/templates/keycloakclient-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: keycloakclients.keycloak-client.leni.tech
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  labels:
    helm.sh/chart: keycloak-client-operator-0.3.3
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.3"
    app.kubernetes.io/managed-by: Helm
spec:
  group: keycloak-client.leni.tech
  names:
    kind: KeycloakClient
    listKind: KeycloakClientList
    plural: keycloakclients
    singular: keycloakclient
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KeycloakClient is the Schema for the keycloakclients API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeycloakClientSpec defines the desired state of KeycloakClient
            properties:
              adminUrl:
                type: string
              authorizationServicesEnabled:
                type: boolean
              baseUrl:
                type: string
              clientAuthenticatorType:
                description: Credentials
                type: string
              description:
                type: string
              directAccessGrantsEnabled:
                type: boolean
              fullScopeAllowed:
                description: Client Scopes
                type: boolean
              implicitFlowEnabled:
                type: boolean
              name:
                description: General Settings
                type: string
              postLogoutRedirectUris:
                items:
                  type: string
                type: array
              protocolMappers:
                description: Protocol mappers
                items:
                  properties:
                    config:
                      additionalProperties:
                        type: string
                      type: object
                    name:
                      type: string
                    protocol:
                      type: string
                    protocolMapper:
                      type: string
                  required:
                  - config
                  - name
                  - protocol
                  - protocolMapper
                  type: object
                type: array
              publicClient:
                description: Capability config
                type: boolean
              redirectUris:
                items:
                  type: string
                type: array
              roles:
                description: Client roles
                items:
                  type: string
                type: array
              rootUrl:
                description: Access settings
                properties:
                  ingressRef:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                required:
                - ingressRef
                type: object
              serviceAccountsClientsRoles:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
              serviceAccountsEnabled:
                type: boolean
              serviceAccountsRealmRoles:
                description: Service accounts roles
                items:
                  type: string
                type: array
              standardFlowEnabled:
                type: boolean
              useRefreshTokens:
                description: Advanced
                type: boolean
              webOrigins:
                items:
                  type: string
                type: array
            type: object
          status:
            description: KeycloakClientStatus defines the observed state of KeycloakClient
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details
                        about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers of
                        specific condition types may define expected values and meanings
                        for this field, and whether the values are considered a guaranteed
                        API. The value should be a CamelCase string. This field may
                        not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: keycloak-client-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-keycloak-client-operator-manager-role
  labels:
    helm.sh/chart: keycloak-client-operator-0.3.3
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.3"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - keycloak-client.leni.tech
  resources:
  - keycloakclients
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - keycloak-client.leni.tech
  resources:
  - keycloakclients/finalizers
  verbs:
  - update
- apiGroups:
  - keycloak-client.leni.tech
  resources:
  - keycloakclients/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
# Source: keycloak-client-operator/templates/metrics-reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-keycloak-client-operator-metrics-reader
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: keycloak-client-operator
    app.kubernetes.io/part-of: keycloak-client-operator
    helm.sh/chart: keycloak-client-operator-0.3.3
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.3"
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: keycloak-client-operator/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-keycloak-client-operator-proxy-role
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: keycloak-client-operator
    app.kubernetes.io/part-of: keycloak-client-operator
    helm.sh/chart: keycloak-client-operator-0.3.3
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.3"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: keycloak-client-operator/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-keycloak-client-operator-manager-rolebinding
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: keycloak-client-operator
    app.kubernetes.io/part-of: keycloak-client-operator
    helm.sh/chart: keycloak-client-operator-0.3.3
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-release-keycloak-client-operator-manager-role'
subjects:
- kind: ServiceAccount
  name: 'my-release-keycloak-client-operator-controller-manager'
  namespace: 'default'
---
# Source: keycloak-client-operator/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-keycloak-client-operator-proxy-rolebinding
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: keycloak-client-operator
    app.kubernetes.io/part-of: keycloak-client-operator
    helm.sh/chart: keycloak-client-operator-0.3.3
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-release-keycloak-client-operator-proxy-role'
subjects:
- kind: ServiceAccount
  name: 'my-release-keycloak-client-operator-controller-manager'
  namespace: 'default'
---
# Source: keycloak-client-operator/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-keycloak-client-operator-leader-election-role
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: keycloak-client-operator
    app.kubernetes.io/part-of: keycloak-client-operator
    helm.sh/chart: keycloak-client-operator-0.3.3
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.3"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: keycloak-client-operator/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-keycloak-client-operator-leader-election-rolebinding
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: keycloak-client-operator
    app.kubernetes.io/part-of: keycloak-client-operator
    helm.sh/chart: keycloak-client-operator-0.3.3
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'my-release-keycloak-client-operator-leader-election-role'
subjects:
- kind: ServiceAccount
  name: 'my-release-keycloak-client-operator-controller-manager'
  namespace: 'default'
---
# Source: keycloak-client-operator/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-keycloak-client-operator-controller-manager-metrics-service
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: keycloak-client-operator
    app.kubernetes.io/part-of: keycloak-client-operator
    control-plane: controller-manager
    helm.sh/chart: keycloak-client-operator-0.3.3
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    control-plane: controller-manager
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
---
# Source: keycloak-client-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-keycloak-client-operator-controller-manager
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: keycloak-client-operator
    app.kubernetes.io/part-of: keycloak-client-operator
    control-plane: controller-manager
    helm.sh/chart: keycloak-client-operator-0.3.3
    app.kubernetes.io/name: keycloak-client-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: keycloak-client-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: keycloak-client-operator
        app.kubernetes.io/instance: my-release
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.16.0@sha256:771a9a173e033a3ad8b46f5c00a7036eaa88c8d8d1fbd89217325168998113ea
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: registry.gitlab.com/lenitech/k8s-operator/keycloak-client-operator:v0.3.3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: my-release-keycloak-client-operator-controller-manager
      terminationGracePeriodSeconds: 10
