---
# Source: kronic/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kronic
  labels:
    helm.sh/chart: kronic-0.1.7
    app.kubernetes.io/name: kronic
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.4"
    app.kubernetes.io/managed-by: Helm
---
# Source: kronic/templates/basic-auth.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: my-release-kronic
  labels:
    helm.sh/chart: kronic-0.1.7
    app.kubernetes.io/name: kronic
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.4"
    app.kubernetes.io/managed-by: Helm
data:
  password: "ClVJT0FuaThWVll4cGJ4TzM="
---
# Source: kronic/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: kronic-0.1.7
    app.kubernetes.io/name: kronic
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.4"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kronic
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - events
      - pods/log
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
      - cronjobs
      - cronjobs/status
    verbs:
      - "*"
---
# Source: kronic/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: kronic-0.1.7
    app.kubernetes.io/name: kronic
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.4"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kronic
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kronic
subjects:
  - kind: ServiceAccount
    name: my-release-kronic
    namespace: "default"
---
# Source: kronic/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kronic
  labels:
    helm.sh/chart: kronic-0.1.7
    app.kubernetes.io/name: kronic
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kronic
    app.kubernetes.io/instance: my-release
---
# Source: kronic/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kronic
  labels:
    helm.sh/chart: kronic-0.1.7
    app.kubernetes.io/name: kronic
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kronic
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kronic
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-kronic
      securityContext:
        {}
      containers:
        - name: kronic
          securityContext:
            {}
          image: "ghcr.io/mshade/kronic:v0.1.4"
          imagePullPolicy: IfNotPresent
          env:
            - name: KRONIC_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KRONIC_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-kronic
                  key: password
            - name: KRONIC_ADMIN_USERNAME
              value: "kronic"
            - name: KRONIC_ALLOW_NAMESPACES
              value: ""
            - name: KRONIC_NAMESPACE_ONLY
              value: ""
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 10m
              memory: 256Mi
---
# Source: kronic/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-kronic-test-connection"
  labels:
    helm.sh/chart: kronic-0.1.7
    app.kubernetes.io/name: kronic
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-kronic:80/healthz']
  restartPolicy: Never
