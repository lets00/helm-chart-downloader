---
# Source: eck-fleet-server/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fleet-server
  namespace: "default"
  labels:
    helm.sh/chart: eck-fleet-server-0.11.0
    app.kubernetes.io/name: eck-fleet-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: eck-fleet-server/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fleet-server
  labels:
    helm.sh/chart: eck-fleet-server-0.11.0
    app.kubernetes.io/name: eck-fleet-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - namespaces
    - nodes
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - apps
    resources:
    - replicasets
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - get
    - create
    - update
---
# Source: eck-fleet-server/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fleet-server
  labels:
    helm.sh/chart: eck-fleet-server-0.11.0
    app.kubernetes.io/name: eck-fleet-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: fleet-server
    namespace: "default"
roleRef:
  kind: ClusterRole
  name: fleet-server
  apiGroup: rbac.authorization.k8s.io
---
# Source: eck-fleet-server/templates/fleet-server.yaml
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: my-release-eck-fleet-server
  labels:
    helm.sh/chart: eck-fleet-server-0.11.0
    app.kubernetes.io/name: eck-fleet-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    eck.k8s.elastic.co/license: basic
spec:
  version: 8.14.0
  mode: fleet
  fleetServerEnabled: true
  deployment:
    podTemplate:
      spec:
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
        serviceAccountName: fleet-server
    replicas: 1
  elasticsearchRefs:
  - name: eck-elasticsearch
  kibanaRef:
    name: eck-kibana
  policyID: eck-fleet-server
