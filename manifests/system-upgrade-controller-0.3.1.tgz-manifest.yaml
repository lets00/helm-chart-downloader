---
# Source: system-upgrade-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: system-upgrade
  labels:
    helm.sh/chart: system-upgrade-controller-0.3.1
    app.kubernetes.io/name: system-upgrade-controller
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: system-upgrade-controller/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-system-upgrade-controller-env
  labels:
    helm.sh/chart: system-upgrade-controller-0.3.1
    app.kubernetes.io/name: system-upgrade-controller
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.1"
    app.kubernetes.io/managed-by: Helm
data:
  
  SYSTEM_UPGRADE_CONTROLLER_DEBUG: "false"
  SYSTEM_UPGRADE_CONTROLLER_THREADS: "2"
  SYSTEM_UPGRADE_JOB_ACTIVE_DEADLINE_SECONDS: "900"
  SYSTEM_UPGRADE_JOB_BACKOFF_LIMIT: "99"
  SYSTEM_UPGRADE_JOB_IMAGE_PULL_POLICY: Always
  SYSTEM_UPGRADE_JOB_KUBECTL_IMAGE: rancher/kubectl:v1.28.3
  SYSTEM_UPGRADE_JOB_PRIVILEGED: "true"
  SYSTEM_UPGRADE_JOB_TTL_SECONDS_AFTER_FINISH: "900"
  SYSTEM_UPGRADE_PLAN_POLLING_INTERVAL: 15m
---
# Source: system-upgrade-controller/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system-upgrade
  labels:
    helm.sh/chart: system-upgrade-controller-0.3.1
    app.kubernetes.io/name: system-upgrade-controller
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: system-upgrade
  namespace: default
---
# Source: system-upgrade-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-system-upgrade-controller
  labels:
    helm.sh/chart: system-upgrade-controller-0.3.1
    app.kubernetes.io/name: system-upgrade-controller
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      upgrade.cattle.io/controller: system-upgrade-controller
      app.kubernetes.io/name: system-upgrade-controller
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: e791334e5a2de50485e5edebf24876ed0b8d5d070c5eb187811c6c85db198df5
      labels:
        upgrade.cattle.io/controller: system-upgrade-controller
        app.kubernetes.io/name: system-upgrade-controller
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: system-upgrade
      securityContext:
        {}
      containers:
        - name: system-upgrade-controller
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
          image: "rancher/system-upgrade-controller:v0.13.1"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: my-release-system-upgrade-controller-env
          env:
            - name: SYSTEM_UPGRADE_CONTROLLER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['upgrade.cattle.io/controller']
            - name: SYSTEM_UPGRADE_CONTROLLER_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: etc-ssl
              mountPath: /etc/ssl
              readOnly: true
            - name: etc-pki
              mountPath: /etc/pki
              readOnly: true
            - name: etc-ca-certificates
              mountPath: /etc/ca-certificates
              readOnly: true
            - name: tmp
              mountPath: /tmp
          resources:
            {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/controlplane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/etcd
          operator: Exists
      volumes:
        - name: etc-ssl
          hostPath:
            path: /etc/ssl
            type: Directory
        - name: etc-pki
          hostPath:
            path: /etc/pki
            type: DirectoryOrCreate
        - name: etc-ca-certificates
          hostPath:
            path: /etc/ca-certificates
            type: DirectoryOrCreate
        - name: tmp
          emptyDir: {}
