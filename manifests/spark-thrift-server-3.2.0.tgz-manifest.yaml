---
# Source: spark-thrift-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-spark-thrift-server
  labels:
    helm.sh/chart: spark-thrift-server-3.2.0
    app.kubernetes.io/name: spark-thrift-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
---
# Source: spark-thrift-server/templates/discovery-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: discoverable-my-release-spark-thrift-server
  annotations:
    onyxia/discovery: "spark-thrift-server"
type: Opaque
data:
  thrift-service: "bXktcmVsZWFzZS1zcGFyay10aHJpZnQtc2VydmVy"
  thrift-port: "MTAwMDA="
---
# Source: spark-thrift-server/templates/configmap-coresite.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-spark-thrift-server-configmapcoresite
  labels:
    helm.sh/chart: spark-thrift-server-3.2.0
    app.kubernetes.io/name: spark-thrift-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
data:
  core-site.xml: |
    <?xml version="1.0"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?> 
    <configuration>     
    <property>
        <name>fs.s3a.connection.ssl.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>fs.s3a.endpoint</name>
        <value></value>
    </property>
    <property>
        <name>fs.s3a.path.style.access</name>
        <value>true</value>
    </property>
    <property>
        <name>fs.s3a.aws.credentials.provider</name>
        <value>org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider</value>
    </property>
    <property>
        <name>trino.s3.credentials-provider</name>
        <value>org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider</value>
    </property>
    <property>
        <name>fs.s3a.access.key</name>
        <value></value>
    </property>
    <property>
        <name>fs.s3a.secret.key</name>
        <value></value>
    </property>
    </configuration>
---
# Source: spark-thrift-server/templates/configmap-hive.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-spark-thrift-server-configmaphive
  labels:
    helm.sh/chart: spark-thrift-server-3.2.0
    app.kubernetes.io/name: spark-thrift-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
data:
  hive-site.xml: |
    <?xml version="1.0"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration>
    </configuration>
---
# Source: spark-thrift-server/templates/configmap-s3.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-spark-thrift-server-configmaps3
  labels:
    helm.sh/chart: spark-thrift-server-3.2.0
    app.kubernetes.io/name: spark-thrift-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
data:
  AWS_ACCESS_KEY_ID: ""
  AWS_S3_ENDPOINT: ""
  S3_ENDPOINT: "https:///"
  AWS_DEFAULT_REGION: ""
  AWS_SECRET_ACCESS_KEY: ""
  AWS_SESSION_TOKEN: ""
---
# Source: spark-thrift-server/templates/configmap-sparkconf.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-spark-thrift-server-configmapsparkconf
  labels:
    helm.sh/chart: spark-thrift-server-3.2.0
    app.kubernetes.io/name: spark-thrift-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
data:
  spark-defaults.conf: |
    spark.dynamicAllocation.enabled true
    spark.dynamicAllocation.executorAllocationRatio 1
    spark.dynamicAllocation.initialExecutors 1
    spark.dynamicAllocation.maxExecutors 10
    spark.dynamicAllocation.minExecutors 1
    spark.dynamicAllocation.shuffleTracking.enabled true
    spark.kubernetes.authenticate.driver.serviceAccountName my-release-spark-thrift-server
    spark.kubernetes.container.image inseefrlab/jupyter-datascience:py3.9.7-spark3.2.0
    spark.kubernetes.driver.pod.name my-release-spark-thrift-server-0
    spark.kubernetes.namespace default
    spark.master k8s://https://kubernetes.default.svc:443
---
# Source: spark-thrift-server/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-spark-thrift-server
  labels:
    helm.sh/chart: spark-thrift-server-3.2.0
    app.kubernetes.io/name: spark-thrift-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
- kind: ServiceAccount
  name: my-release-spark-thrift-server
  namespace: default
---
# Source: spark-thrift-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-spark-thrift-server
  labels:
    helm.sh/chart: spark-thrift-server-3.2.0
    app.kubernetes.io/name: spark-thrift-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 10000
      targetPort: thrift
      protocol: TCP
      name: thrift
    - port: 4040
      targetPort: sparkui
      protocol: TCP
      name: sparkui
  selector:
    app.kubernetes.io/name: spark-thrift-server
    app.kubernetes.io/instance: my-release
---
# Source: spark-thrift-server/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-spark-thrift-server
  labels:
    helm.sh/chart: spark-thrift-server-3.2.0
    app.kubernetes.io/name: spark-thrift-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: my-release-spark-thrift-server
  selector:
    matchLabels:
      app.kubernetes.io/name: spark-thrift-server
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spark-thrift-server
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-spark-thrift-server
      securityContext:
        {}
      subdomain: my-release-spark-thrift-server
      hostname: thrift
      containers:
        - name: spark-thrift-server
          securityContext:
            {}
          image: inseefrlab/jupyter-datascience:py3.9.7-spark3.2.0
          command: ["/bin/sh","-c"]
          args: ["/data/onyxia-init.sh $SPARK_HOME/sbin/start-thriftserver.sh"]
          imagePullPolicy: IfNotPresent
          env:
            - name: SPARK_NO_DAEMONIZE
              value: "true"
          envFrom:
            - configMapRef:
                name: my-release-spark-thrift-server-configmaps3
          ports:
            - name: thrift
              containerPort: 10000
              protocol: TCP
            - name: sparkui
              containerPort: 4040
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 10000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 10000
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {}         
          volumeMounts:
            - mountPath: /data
              name: my-release-spark-thrift-server-data
            - name: config-sparkconf
              mountPath: /opt/spark/conf/spark-defaults.conf
              subPath: spark-defaults.conf
            - mountPath: /opt/hadoop/etc/hadoop/core-site.xml
              subPath: core-site.xml
              name: config-coresite
            - name: hive-config
              mountPath: /opt/hive/conf/hive-site.xml
              subPath: hive-site.xml
      initContainers:
        - name: standard-init
          image: "busybox"
          command: ["/bin/sh","-c"]
          args: ["wget -O /data/onyxia-init.sh https://git.lab.sspcloud.fr/innovation/plateforme-onyxia/services-ressources/-/raw/master/onyxia-init.sh && chmod +x /data/onyxia-init.sh"]
          volumeMounts:
          - mountPath: /data
            name: my-release-spark-thrift-server-data   
      volumes:
        - name: my-release-spark-thrift-server-data
          emptyDir: {}
        - name: config-coresite
          configMap:
            name: my-release-spark-thrift-server-configmapcoresite
        - name: config-sparkconf
          configMap:
            name: my-release-spark-thrift-server-configmapsparkconf
        - name: hive-config
          configMap:
            name: my-release-spark-thrift-server-configmaphive
---
# Source: spark-thrift-server/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-spark-thrift-server-ui
  labels:
    helm.sh/chart: spark-thrift-server-3.2.0
    app.kubernetes.io/name: spark-thrift-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
spec:
  tls:
    - hosts:
        - "chart-example.local"
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-spark-thrift-server
                port: 
                  number: 4040
