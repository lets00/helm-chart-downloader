---
# Source: pi-hole-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-pi-hole-exporter
  labels:
    app: pi-hole-exporter
    app.kubernetes.io/instance: pi-hole-exporter-0.1.3
    app.kubernetes.io/name: pi-hole-exporter
    app.kubernetes.io/version: "0.1.3"
    appRevision: pi-hole-exporter___1
    chart: pi-hole-exporter-0.1.3
    release: my-release
    releaseRevision: "1"
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9617
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: pi-hole-exporter
    app.kubernetes.io/instance: my-release
---
# Source: pi-hole-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-pi-hole-exporter
  labels:
    app: pi-hole-exporter
    app.kubernetes.io/instance: pi-hole-exporter-0.1.3
    app.kubernetes.io/name: pi-hole-exporter
    app.kubernetes.io/version: "0.1.3"
    appRevision: pi-hole-exporter___1
    chart: pi-hole-exporter-0.1.3
    release: my-release
    releaseRevision: "1"
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pi-hole-exporter
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9617"
      labels:
        app: pi-hole-exporter
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: pi-hole-exporter
        app.kubernetes.io/version: "0.1.3"
        appRevision: pi-hole-exporter___1
        chart: pi-hole-exporter-0.1.3
        helm.sh/chart: pi-hole-exporter-0.1.3
        release: my-release
        releaseRevision: "1"
        heritage: Helm
    spec:
      containers:
        - name: pi-hole-exporter
          image: "ekofr/pihole-exporter:0.0.10"
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              containerPort: 9617
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
          startupProbe:
            failureThreshold: 120
            periodSeconds: 1
            httpGet:
              path: /metrics
              port: metrics
          resources:
            limits:
              cpu: 30m
              memory: 64Mi
            requests:
              cpu: 30m
              memory: 64Mi
          envFrom:
            - secretRef:
                name: "pi-hole"
          env:
            - name: INTERVAL
              value: "30s"
            - name: PORT
              value: "9617"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - pi-hole-exporter___1
            topologyKey: "kubernetes.io/hostname"
---
# Source: pi-hole-exporter/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-pi-hole-exporter-test-connection"
  labels:
    app: pi-hole-exporter
    app.kubernetes.io/instance: pi-hole-exporter-0.1.3
    app.kubernetes.io/name: pi-hole-exporter
    app.kubernetes.io/version: "0.1.3"
    appRevision: pi-hole-exporter___1
    chart: pi-hole-exporter-0.1.3
    release: my-release
    releaseRevision: "1"
    heritage: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['my-release-pi-hole-exporter:9617/metrics']
  restartPolicy: Never
