---
# Source: opa-kube-mgmt/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-opa-kube-mgmt
  labels:
    app: my-release-opa-kube-mgmt
    chart: opa-kube-mgmt-8.5.7
    release: "my-release"
    heritage: "Helm"
---
# Source: opa-kube-mgmt/templates/webhookconfiguration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-opa-kube-mgmt-cert
  labels:
    app: my-release-opa-kube-mgmt
    chart: "opa-kube-mgmt-8.5.7"
    release: "my-release"
    heritage: "Helm"
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lRRnFac2JKV1VNRTJneXdFaVRKakJWakFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCdmNHRXRZV1J0YVhOemFXOXVMV05oTUI0WERUSTBNRFl4TlRJek5ERXpNMW9YRFRNMApNRFl4TXpJek5ERXpNMW93THpFdE1Dc0dBMVVFQXhNa2JYa3RjbVZzWldGelpTMXZjR0V0YTNWaVpTMXRaMjEwCkxtUmxabUYxYkhRdWMzWmpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXQ5VGEKUVdzS1pwVml4YTQ2clNmbXI4MkNOYmw0c2NCcktselFjSkR0OGZQd1ZZVHoxUlMzdjhwSGE5VFZRV3NlQ1ZDNwpuTUNBOUc3STZ2RGxIZXFkL0ZFN24ySThwVUcxQnQxWWRvWTJ2M3ZUTVk0V2Q4WVh4ZW1Gc3E3NWdnRkdmZ1RFCkkvdjV0T05qZzFFMHlDcjRkYmd5Nk1hY2k1clFGbFVQRmMrVld1MkpVREEvdUYvZXBkS1FrSTJjelNSSll3NmIKak9vWURxTXVQVU9xWmNNcUovYXp1QnQ1aU44TDRBYU0wNVZVNlZ6YTRhNSt1NEp6N21oZG10NC9IdVpRQVdzYQpsRGhNYWFrK0VRTnN3eUhPbDhSUEhWeUhkd01MT2JCS1daTVhpd1RiMWx6ZjBHNnAza04xS0xScFZIKzdvUGE0Cms4WUxLSEhGOCtTSCsrQ2l3UUlEQVFBQm80R1NNSUdQTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBVwpnQlQ4aDY3S0J0c2g2cndwdHRpVmd5RFJIQ0xSZmpBdkJnTlZIUkVFS0RBbWdpUnRlUzF5Wld4bFlYTmxMVzl3CllTMXJkV0psTFcxbmJYUXVaR1ZtWVhWc2RDNXpkbU13RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpPYjN2b3AKbzNVa1BmT2xWZWwwMDFOWFlWZ2JxQjZKQTJDRGQ2MWcwVTJsWFU5SThxU0V4aHJzZXV4UERkeitDZlJ6cmFmNgp4YkZYa29waXhuRHNLMDkzZmpmSWl5bmJIbUNQV2R0L3FWdDFUZVFKc3JnbmZSMVpKUXo0Y21peWd5R1FxYkIyCjA1bHF1RXhKRlgwL1NUUmQvZkhkYzRvblJGeUlSdXZHUVpieHV1OG10MDNWNGlCUEdBaUMzV3FDa2tVVTZNRWcKSC9sSDJxYjRJeW1BeXZVL3B2MEdzb0o3TnRDVmk1WXBIZHpaWGpNNG41ZmpyTHNuS2VoQmZ4bTdUUUFFUTRLUAowc0Uzek53NXFaQkhvVlpURGFVTU1UMlhKWGV3cU50bkkwUGllY1hDRFFwVmxFditsTERRd2JRSW43QWFzMFBWCkkrZ2VFTkRaNlhwVWVyRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdDlUYVFXc0tacFZpeGE0NnJTZm1yODJDTmJsNHNjQnJLbHpRY0pEdDhmUHdWWVR6CjFSUzN2OHBIYTlUVlFXc2VDVkM3bk1DQTlHN0k2dkRsSGVxZC9GRTduMkk4cFVHMUJ0MVlkb1kydjN2VE1ZNFcKZDhZWHhlbUZzcTc1Z2dGR2ZnVEVJL3Y1dE9OamcxRTB5Q3I0ZGJneTZNYWNpNXJRRmxVUEZjK1ZXdTJKVURBLwp1Ri9lcGRLUWtJMmN6U1JKWXc2YmpPb1lEcU11UFVPcVpjTXFKL2F6dUJ0NWlOOEw0QWFNMDVWVTZWemE0YTUrCnU0Sno3bWhkbXQ0L0h1WlFBV3NhbERoTWFhaytFUU5zd3lIT2w4UlBIVnlIZHdNTE9iQktXWk1YaXdUYjFsemYKMEc2cDNrTjFLTFJwVkgrN29QYTRrOFlMS0hIRjgrU0grK0Npd1FJREFRQUJBb0lCQUZLTHJZVjZmeTBaSDBVTQp1eVJOcW5SK24xMW9ieDNCL1YwRVdFUnpqNlQ1bUkyT0tiOGdrbkg0YnFHbzdDbDM1QURpMDV2TGhSdzlNdExzCllMVlNTS2FvQTFIS1Z0a043QytzN0xBc0RDRm5oS25YMTVib3lId0NKQnJjSHdXVmRRWFpOZ25DZDVvV0VQVkMKWGFVVVJvVDF0VVo1Q0lwWGRlRFJTUGpPUVk2V0hyNDNPUnJpUU02YWI2aDdBalZXMDl5UHBGL0JvOWoyLzlpSgpkaysxeGNweTJxNjhVSmdIQlEyTGVhL3dFZXZaUWp0RkhoWjR3REw4eCtKb2lVS1Y1d0VtTkhQVGtWemI1bXduCjIxY1ZtaGY3Mi9YTXgzTjlzUTJPVnR5U295UWVhdno4WlVLcGJtSXBxM2cyTUNmM2NPS2JmTG9NSW5CUWtKNGkKanBVbzZoRUNnWUVBOUlMWU0zdTF4SEpQbnZVQzRXaGhETEhudXVuY0JJMVViRzFQN0QwcWNLclhFdlhxT2FXdgpaNGZGUEpEZ0VYTnQ2N2VWczhQQTAxUU53eC81R3pHUEZjV1ZiS3djMTVpemVGU0JlVlp4OGt6ZDNlc1JJWGRiCndubDQ0V3plOWdRTWo0QWZGUlBpS0Q5SHlEMVd1WHVXMXZvTzJ1L2RiWGdkcTJYWjNkZW5HZU1DZ1lFQXdIZ2MKQjN4OHc4c1h5T2VlaXZRVTVRdFFqbEFkNEp3S3B4ZW9MSmZwS1dTd3lsT3Z2ZUkzRkQ4T3dxMXpCMi9aM1RSbgpBUlNVQlRQblZOdlYxU2VoOVFmNkdQNVhuQkExcW1LMlNpVzZaTWxlbUpKdWYxejM4RHYrY2FJZS9wRTRyaFlVCjJmTnZUWCs4TVNGK3oyeU9XREc5M3pGWm9iaW5WRjBXK2ZmQ1Fnc0NnWUFCbU1rb3JPb20ra2dpMVo3TE1nOVEKTWVrOWcwRjRsaU96QVpQQUN6WTN2aVhoYmRHMXhxczZsZHhuNU5wUnd0czQ2dDREYW9mYjJYU3RqWXZtN1kvdApxSGl0V1FKbk5nd1dBUmRIWDVVbTYvR1cvVzRETmZCWGVNdWRUVVMzZnBkR2FLUExVM0hxcVY4aW82UHBXakZGCi9pUVNzZlpVUExDVTZmbGVSWVpGMlFLQmdGMVZvWm9MeDJFWFNzaDFjYy9HZjU5MjlqQ2RMMi90bThqZDB3TVYKQTgrNzhYT2NVNXdNYUZOY0pPZEpQMy82d0xiaG81WEZpZVpmL2kyTGtjMlZNNWZrcjJhUmFLRFl4MzJCOHc1UAo3MnpTcmhuazRNcklwYitOQ0YzSWxha3plVDRLblQvNEtpQjE4aWdOS3phaFdRSHgxVGEzOHRSVy9HWVA0b1dECm5XTnpBb0dCQUk3VTFyS2dZbVhBbHZUV0w4R2c4bWdUZHpnVWRLdVlEM2U4S2U1WWxQTVJZOExkb0VTN0s0ckEKOTRLVzAxTDZBbGlmZzFqMVZqdG8wZlZ1MkI5OUxUZDE1NmsveFY1bXgvWFVmYnhQSXBtV29tYVZFQmZwZ1hrRApWMWhYbllkTjY1cS8wV0k3MXdCdXRSSHlYYk9YeEV2TVhLeFJSU2VMVG1CQU5ZUGhOMWcxCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: opa-kube-mgmt/templates/rbac-mgmt.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: opa-kube-mgmt
    chart: opa-kube-mgmt-8.5.7
    release: my-release
    component: mgmt
  name: my-release-opa-kube-mgmt-mgmt
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "update", "patch"]
---
# Source: opa-kube-mgmt/templates/rbac-mgmt.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: opa-kube-mgmt
    chart: opa-kube-mgmt-8.5.7
    release: my-release
    component: mgmt
  name: my-release-opa-kube-mgmt-mgmt
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-opa-kube-mgmt-mgmt
subjects:
  - kind: ServiceAccount
    name: my-release-opa-kube-mgmt
    namespace: default
---
# Source: opa-kube-mgmt/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: my-release-opa-kube-mgmt
  labels:
    app: my-release-opa-kube-mgmt
    chart: "opa-kube-mgmt-8.5.7"
    release: "my-release"
    heritage: "Helm"
spec:
  selector:
    app: my-release-opa-kube-mgmt
  ports:
  - name: opa
    port: 8181
    targetPort: opa
---
# Source: opa-kube-mgmt/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-opa-kube-mgmt
  labels:
    app: my-release-opa-kube-mgmt
    chart: "opa-kube-mgmt-8.5.7"
    release: "my-release"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-release-opa-kube-mgmt
  template:
    metadata:
      annotations:
      labels:
        app: my-release-opa-kube-mgmt
      name: my-release-opa-kube-mgmt
    spec:
      initContainers:
        - name: initpolicy
          image: openpolicyagent/kube-mgmt:8.5.7
          imagePullPolicy: IfNotPresent
          resources:
            {}
          command:
          - /bin/sh
          - -c
          - |
            tr -dc 'A-F0-9' < /dev/urandom | dd bs=1 count=32 2>/dev/null > /bootstrap/mgmt-token
            TOKEN=`cat /bootstrap/mgmt-token`
            cat > /bootstrap/authz.rego <<EOF
            package system.authz
            default allow = false
            # Allow anonymous access to the default policy decision.
            allow { input.path = [""]; input.method = "POST" }
            allow { input.path = [""]; input.method = "GET" }
            # This is only used for health check in liveness and readiness probe
            allow { input.path = ["health"]; input.method = "GET" }
            allow { input.identity == "$TOKEN" }
            EOF
          volumeMounts:
            - name: bootstrap
              mountPath: /bootstrap
      containers:
        - name: opa
          ports:
          - name: opa
            containerPort: 8181
          image: "openpolicyagent/opa:0.53.1"
          imagePullPolicy: IfNotPresent
          env:
          resources:
            {}
          args:
            - "run"
            - "--server"
            - "--tls-cert-file=/certs/tls.crt"
            - "--tls-private-key-file=/certs/tls.key"
            - "--addr=0.0.0.0:8181"
            - "--log-level=info"
            - "--log-format=json"
            - "--authentication=token"
            - "--authorization=basic"
            - "--ignore=.*"
            - "/bootstrap"
          volumeMounts:
            - name: certs
              readOnly: true
              mountPath: /certs
            - name: bootstrap
              readOnly: true
              mountPath: /bootstrap
          readinessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: opa
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: opa
            initialDelaySeconds: 10
            periodSeconds: 15
        - name: mgmt
          image: openpolicyagent/kube-mgmt:8.5.7
          imagePullPolicy: IfNotPresent
          startupProbe:

            failureThreshold: 5
            httpGet:
              path: /health
              port: 8181
              scheme: HTTPS
            initialDelaySeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
          env:
          resources:
            
            {}
          args:
            - --opa-auth-token-file=/bootstrap/mgmt-token
            - --opa-url=https://127.0.0.1:8181/v1
            - --opa-allow-insecure
            - "--namespaces=default"
            - "--enable-data=true"
            - "--enable-policies=true"

            - "--replicate-path=kubernetes"
            - "--replicate-ignore-namespaces="
          volumeMounts:
            - name: bootstrap
              readOnly: true
              mountPath: /bootstrap
      serviceAccountName: my-release-opa-kube-mgmt
      volumes:
        - name: certs
          secret:
            secretName: my-release-opa-kube-mgmt-cert
        - name: bootstrap
          emptyDir: {}
      affinity:
        {}
      nodeSelector:
        {}
      tolerations:
        []
