---
# Source: CassLightweight/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cassandra-custom-chart
  namespace: default
type: Opaque
data:
  cassandra-username: "Y2Fzcy10ZXN0LXVzZXI="
  cassandra-password: "Y2Fzc2FuZHJh"
---
# Source: CassLightweight/templates/tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-cert-crt
  labels:
    app.kubernetes.io/name: CassLightweight
    helm.sh/chart: CassLightweight-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: release-service
type: kubernetes.io/tls
data:
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lSQU5pSkN6TlA5SUswNFlMdldFZ0V6RzB3RFFZSktvWklodmNOQVFFTEJRQXcKRnpFVk1CTUdBMVVFQXhNTVkyRnpjMkZ1WkhKaExXTmhNQjRYRFRJME1EWXhOakF3TkRBeU1Gb1hEVEkxTURZeApOakF3TkRBeU1Gb3dGekVWTUJNR0ExVUVBeE1NWTJGemMyRnVaSEpoTFdOaE1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZOTVlaSWY1RFVWV0hqQTRuK1RmOU5UeFVlZlFvTWZDb05CejVKRnIKcU1xdW1aU2REMWgvRXpCc0pIK3huajlPNGdmak5PRDQ0TWZWYXJmVkp3d29yWjdraFBadStNbzRPWlQvK1UyWgpMS3RoUVliTDVLOCsyYmJKRWU2YkJXN2hrbC9BRnY1azdBeStKTWF1b0pEdUJYcGljTXBoYlN4NnppZ25wV1ZFCklSZThvSlpFeWVoMWp1QjRDb3hLa0VXaFhsc2Ixb0lWdnBodXFrakdEenVnUHVrTUlYT3E2Z0l4dGJHY2hhb0gKaEpxVitlek1rVktqajJ2bWFWMExPQjE1QmJmYTR4ZGVoUUlQeHFhZWZWRXo5ZHdPU3JkeU03c2ljUVFDUmJzWAo5U3BqclNJM0NubmV6dVJZUXZQMEw0cGpEQnYwU1JSUVhaOWJ2LzJ5NWRwTy9RSURBUUFCbzJFd1h6QU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZON1grMTF3RmkxRkVXWGNqVm82bnpSN2tZc2pNQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFCdWRpSFdaVlFMWkYzOFVwcm90cUpRUi9yMVdaWURNLzdOZUM0cUxyeHh1TWdtCm1rR253WGFxQmtBWk5BcUJ5MkluMzY4QlFZU0diL0NiUnVJU3FZMkNRdmJ1NGk3a2k1RVNxZTlpVnptUEJXWlQKRFlnV0xjK205S0hJZmszZUR2bVdtaGdZVzNWREVTcHh1bFJaaFU3YzVWOWpNOGJaaXJ6RTd5OHgrVVFwM2p5bAozTUZ1RTFHSGs1TXlXYnJzSEdRL3h3ZDdhZ09Pb3RuSXVFUzc1OStsZzVpNW8zOFcxKzhVK1NTTmRXZHZiNndKCjVObnBydlZjVFNUeE1VajNqYTZNWkxaNHRrcm11cEVncW1FZlNwOS9XRUh3VUM2cUJNY09vWDVGVlJ5N3dSN3gKZTBPcUpBQ3lWVnV3UG1MWnVmT1J5MFNBM2Y3RzhmaVRZTjJ1a2x1ZAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVDakNDQXZLZ0F3SUJBZ0lRUDJTV3lsQTAvZ1BTZ1JaUE5UUndoREFOQmdrcWhraUc5dzBCQVFzRkFEQVgKTVJVd0V3WURWUVFERXd4allYTnpZVzVrY21FdFkyRXdIaGNOTWpRd05qRTJNREEwTURJd1doY05NalV3TmpFMgpNREEwTURJd1dqQWFNUmd3RmdZRFZRUURFdzlEWVhOelRHbG5hSFIzWldsbmFIUXdnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3pSWmFGcUx3T0RkTGlUcVpiT29iVGlpNDlBaGs1MVpZcU5OOUUKWjJsTlBBSFI2S2pabFR0R2QzaEF2MWdtaVI4S2o4UG1MRXhPOGw4YjRvY1RKMzhFMzRXY0lzMzRxYS9iVXd5bQp2eDdoL081WDVkWTNuZkJob0dKMmkrcXpoN0VDL3EvS1NYSGNWMmtxK0dqVko5VGZmKzd6emYyNDZrMDhXYkdRCnVWenp6ZXkxYWlJU1RxZWptUitYTFQvZkh0TFV4dlpURTJVMURUSjRnSGNxbThmLzBCa2RZYjc5RlZ0MHl1ek0KSVFlV2o5c29KOEFmTUN3R0F0a2h3NnV3MGx4Z1d4NjJmSzdpWTFVQ200OU1LRitleHdzRzM4M2Z4ZlNtZkpQNwpMcHFTTDFacDE0M0I5UThFMXcyTWs1Mmo4QkI5cFNSMEY0YktmR2tIdFlYNkUwRk5BZ01CQUFHamdnRk5NSUlCClNUQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVM3RmN1hYQVdMVVVSWmR5TldqcWZOSHVSaXlNdwpnZWdHQTFVZEVRU0I0RENCM1lJb0tpNURZWE56VEdsbmFIUjNaV2xuYUhRdVpHVm1ZWFZzZEM1emRtTXVKU0Z6CktEeHVhV3crS1lJbVEyRnpjMHhwWjJoMGQyVnBaMmgwTG1SbFptRjFiSFF1YzNaakxpVWhjeWc4Ym1sc1BpbUMKTVNvdVEyRnpjMHhwWjJoMGQyVnBaMmgwTFdobFlXUnNaWE56TG1SbFptRjFiSFF1YzNaakxpVWhjeWc4Ym1scwpQaW1DTDBOaGMzTk1hV2RvZEhkbGFXZG9kQzFvWldGa2JHVnpjeTVrWldaaGRXeDBMbk4yWXk0bElYTW9QRzVwCmJENHBnZ2xzYjJOaGJHaHZjM1NDQ1RFeU55NHdMakF1TVlJUFEyRnpjMHhwWjJoMGQyVnBaMmgwTUEwR0NTcUcKU0liM0RRRUJDd1VBQTRJQkFRQ1RIS2JlWWZEeXdWVWc0MzBtNm1DUWcvOEw3bG92ZmZEQTVVaU5pRmZSaDhRLwpQRnVuVk9XOFRwZk4zSTBmMjh2UW8wZEpwOWRWTEpORHFEeXhrR1Q5Z254cjZYeGxYRkhWazNIclNZUVEyTGF0CnZkaVR6RTZ2ZHJwcDNFQzdtLzR4V080eFozRysrdWFMM1pTUWN1RUF3eWRFN3NSSEU5Nm96aXNsSzJNanhxcXAKWTJDWG93aExuQVFvNnIvQmdhRlgxSlFjVE5YaVhiczNvNGovZldWandDTEhnMzQ5ZnRCa2ZINnA2N3VSOFdzaQp3bEh5MTgzMXY2cklacnl0bGhCUkEwcjJ0MzAvcHJtd0dyZnZKTEh3ejNESmltUWFWUjdoTDFkTXJEMjVaQTNqCk1PbzAxZjZmeFJxVXpKYnVWWHEzQWl0Tis3WllrcngxYWsySE1id1cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBczBXV2hhaThEZzNTNGs2bVd6cUcwNG91UFFJWk9kV1dLalRmUkdkcFRUd0IwZWlvCjJaVTdSbmQ0UUw5WUpva2ZDby9ENWl4TVR2SmZHK0tIRXlkL0JOK0ZuQ0xOK0ttdjIxTU1wcjhlNGZ6dVYrWFcKTjUzd1lhQmlkb3ZxczRleEF2NnZ5a2x4M0ZkcEt2aG8xU2ZVMzMvdTg4Mzl1T3BOUEZteGtMbGM4ODNzdFdvaQpFazZubzVrZmx5MC8zeDdTMU1iMlV4TmxOUTB5ZUlCM0twdkgvOUFaSFdHKy9SVmJkTXJzekNFSGxvL2JLQ2ZBCkh6QXNCZ0xaSWNPcnNOSmNZRnNldG55dTRtTlZBcHVQVENoZm5zY0xCdC9OMzhYMHBueVQreTZha2k5V2FkZU4Kd2ZVUEJOY05qSk9kby9BUWZhVWtkQmVHeW54cEI3V0YraE5CVFFJREFRQUJBb0lCQUhlR1N3QmNhdDEzN0FXRQo2TGRrZ3lZaE9Bam5FRWlXRmlPWDB0QTVubVNuUUpOaWFzbC9ET0ZEb0VLVEVNUElvcENaSDhTai9sQ1ltajd1ClBwN1BzNGxkT2lqS3I4Yzk0NGo0aXpQVnMxSjdIN0l0QkRGYXRUMXlBSlFIWDNsSlhBU2lLRFJYMlhsT01razcKRERJcDkyejRVQ252U2wzeW9ZSStUdnd1Q2tKbUNJQzJ1QlRIQUg0aVRnZk1BUGMzZkw2ckxTYVFVYXlCVWtBTgowVzU2L2ZHanByNVhjMFhaQnNsUEhWZWFBZ21yUzhjaDJPQjFaMFdZWkwzNksxVUpQLzJOTEdFQ1BSY0Z3QS9PCktlWFV3ZVZyOXFSM0cyQnB0cmhSVG5iY3ZOSk80NTZITTVscW9xVVhnaFhHYjY1MGxya255VHVaVlI4ckRtSzcKQnQxODV1VUNnWUVBeTA0WDgvNEZvTVI5UnlTaEhiT1l1aWxBaWJVSzN1bE5QNE51WFRBS2JETDJLR2tidDJpWApIa3VFSE4yZUhSWktibGY0OUxyVUhIUjJwWGlaa3BXam5tTHhRUXBwRlc5Z25TZTFDTVRDZkN0U3U2ZnloYUd6CmYyTURQV0JsSzJjc3dGZmhRcFF0QzBjNHZqVGZUUzByWW9HSWpIbVk5Y0tDVDdrMEFSb0NuUThDZ1lFQTRielIKTFNtUVhLZTZEaThIeStMaVF1TTRJT0JZb3VmSmZwVDJjSFBzcEZpUUFBSGxSSjEvRDdCdGgzakc0VkQ5SC9wOQp5Rjk2UTdTNXozOG16RG5UbDBPeDFmTC8zMDFZYWcySzVzejJJN0tONngvVVFwMXZaclJMN3hXcGd2UHdheVB0Ckd6aVNZNEtZbERrSHo2aXpnYWNlL05YYkpobHc0M1d4WjhRSU0rTUNnWUFpNGpKdjloMG5HYS9aUGlxNit1N3cKdWxWTmk1Zmk2YXNNZzlPeS82UTZMb0JZTExqSnZwTjNha092NUVMV0FOWWltc3VueWtyTTJ4cmtoNDNxUGV6RwpKM24zeS81OTVBOXl4N1pqVzhkM0lNUGdXUS9lNkFEeGtaNmpzRitMay9kMHhWOXNXaHBrZmdMNWQvNzhzZ3hvCnFZc3hkMGZNbTJSYW80K054TlcvOXdLQmdRQ2pma2ZaOStLUTJRSU9SODNUdzQyd2VEVXN5cEFuM015NUcxYXAKOTZ3TEZBR25uN2ZYekdJOGtNR2pmcnc4Y0pZRVZUNUlvNjQvMzJNOGY1RXdGU25Fd3NqSWRta1A2RXNDOUxBSApuYWNnRDdCdC9PMlZHY1dYa3puei9iSjZJQWVlOGJSSEpPQVJwb0t2eCtaNlptc3Nta2Y5UXo2b0I0RVZuU1pTClMwN05sUUtCZ1FDMFdZczhZTWlXL0NWWk9IMEpIc2xFWUZtZ09jRFJSSkY0aGtoOUxKQkhGZUFmYnJPT1RUNGwKK2tGQlNSSG1NeWVXZmY0K29LTGV4UDFOaFpDQnBHdWY1SktCWmpISXZWTk8zTmdWakxaUkQ2L0ZjR0dxb3RpUwpwQ05nYzNOcDNpRGg2TnZrMDVpWGppSFRtRVZsZmpNSmxuc1docEx6WE5lYkpEVTF0VkZaTnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
---
# Source: CassLightweight/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: cassandra-custom-chart-headless
  namespace: default
  labels:
    app.kubernetes.io/name: CassLightweight
    helm.sh/chart: CassLightweight-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: release-service
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: intra
      port: 7000
      targetPort: intra
    - name: tls
      port: 7001
      targetPort: tls
    - name: jmx
      port: 7199
      targetPort: jmx
    - name: cql
      port: 9042
      targetPort: cql
    - name: metrics
      port: 8080
      targetPort: metrics
  selector:
    app.kubernetes.io/name: CassLightweight
    app.kubernetes.io/instance: release-name
---
# Source: CassLightweight/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: cassandra-custom-chart
  labels: 
    app: cassandra-chart
  
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: cql
    port: 9042
    nodePort:             
  - name: cass-metrics
    port: 8080
    nodePort:
---
# Source: CassLightweight/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra-pods
  namespace: default
spec:
  serviceName: cassandra-custom-chart
  replicas: 1
  
  selector:
    matchLabels:
      app: cassandra
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      terminationGracePeriodSeconds: 1800
      volumes:
        - name: cass-persistent
          persistentVolumeClaim:
            claimName: cass-pvc-claim
          retainPolicy:

      containers:
        - name: cassandra
          image: 
            gcr.io/google-samples/cassandra:v13
          imagePullPolicy: 
            IfNotPresent
          ports:
            - containerPort: 8080
              name: metrics
            - containerPort: 7000
              name: intra-node
            - containerPort: 7001
              name: tls-intra-node
            - containerPort: 7199
              name: jmx
            - containerPort: 9042
              name: cql
          resources:
            limits:
              cpu: "500m"
              memory: 1Gi
            requests:
              cpu: "500m"
              memory: 1Gi
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - nodetool drain
          env:
            - name: MAX_HEAP_SIZE
              value: 512M
            - name: HEAP_NEWSIZE
              value: 100M
            - name: CASSANDRA_EXPORTER_CONFIG_listenPort
              value: "8080"
            - name: CASSANDRA_CLIENT_ENCRYPTION
              value: "true"
            - name: CASSANDRA_CQL_PORT_NUMBER
              value: "9042"
            - name: CASSANDRA_JMX_PORT_NUMBER
              value: "5555"
            - name: CASSANDRA_BROADCAST_ADDRESS
              value: 10.1.3.26
            - name: CASSANDRA_RPC_ADDRESS
              value: 0.0.0.0
            - name: CASSANDRA_SEED_PROVIDER
              value: "org.apache.cassandra.locator.SimpleSeedProvider"
            - name: CASSANDRA_CLUSTER_NAME
              value: test-cluster
            - name: CASSANDRA_DC
              value: cass-dc
            - name: CASSANDRA_RACK
              value: rack-1
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - /ready-probe.sh
            initialDelaySeconds: 15
            timeoutSeconds: 5
            
        - name: metrics
          image: bitnami/cassandra-exporter
          imagePullPolicy: "IfNotPresent"
          command:
            null
          args:
            null
