---
# Source: ingress/charts/controller/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-controller
  namespace: default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
---
# Source: ingress/charts/gateway/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-controller-validation-webhook-ca-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRV0txUm9ocGNUaC9qS25hVS80VUxUVEFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREEyTVRVeU16UTNNVEphRncwegpOREEyTVRNeU16UTNNVEphTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVCR0M1MSt0VSt3MHJPdzRrUml6NHNGNE51bjEKclAxV3ljRWhCUHdGcW9CaWh3SFk3Zy9Cd3pZSGdCOU11bTNnenJOMEpqZE9QcDhFQ2Rqd0RxYTA5ZHBGN0toOApRSVUyRzBGdmlTTjRrUjBiQmQ2T3Y1OXpPMmYyZTRvaVRydmhjSWxNNGZGQWdFRStXcFI5WE5QSTRDQlBodlhBCko0ek9sOWo4aHNLYTNUejJaOXBnNDlydzNOWm1PSUNzRTNuZU5SbTZKMTRSRjQ3cTZ4Qk82djlWT3dUS3ljV0cKOVh2cmtvWGlRY1dYNzlsMXRDU0E1MHh6dXNGYXBEcTVLT0xvQTUvcVJkQzVUVlpONWNHZ3NyTnFuUlNvWEpQUQpza3B0MmRGTG4reDREdGZaQnlRSUQzSTNwdUlWTVRRU0Jmd0tWeEw3SXliKzAxU3h4MGFDRnVYMlNRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPaHdMR1VJVGQ0VGxpb2lBNTNWa1JtUgpmMmpnTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDbWlWUmVtUVZWSC9DT052dVM4aGJQR0NjNG9uUDErdDFPCk5rSk5NczdlNHowbmFxa3V3d3ZHRmVnRFppbEd5WGIwbER1emJ2VU51bFJMcnBMcnFTeFVHQzdvamtRZ284d0cKUTZGZnJITXFNY3d3eHpFU0ZpLy9DV2RMNlBWVlNTajZvRkw0cW5jaWxLUEtFMm5iOEl4amJTTGl4ODRCVnVragpRK2NaWmszSHhJZElJT2hPOXhuUlorM3ZrbVVoOURpZUFhMmhlZDE2NXFha1FMVmZwT2FObUhKTHdyZEczZHcvCjk2WG51TllqRlhPTW1xbkxDeUVwUjJkNHAxTzVWeHUwa0JORmpyQWZwdUxyMTdpQnB0N2hEWTNsdElOWFVIeloKclloRnM0Uk5BSEI4RDd5UGdDN2JscWl5cVNGVjh0TlQ3djRqUit1Qk11L0orMmgvSlU1RAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdUJHQzUxK3RVK3cwck93NGtSaXo0c0Y0TnVuMXJQMVd5Y0VoQlB3RnFvQmlod0hZCjdnL0J3ellIZ0I5TXVtM2d6ck4wSmpkT1BwOEVDZGp3RHFhMDlkcEY3S2g4UUlVMkcwRnZpU040a1IwYkJkNk8KdjU5ek8yZjJlNG9pVHJ2aGNJbE00ZkZBZ0VFK1dwUjlYTlBJNENCUGh2WEFKNHpPbDlqOGhzS2EzVHoyWjlwZwo0OXJ3M05abU9JQ3NFM25lTlJtNkoxNFJGNDdxNnhCTzZ2OVZPd1RLeWNXRzlYdnJrb1hpUWNXWDc5bDF0Q1NBCjUweHp1c0ZhcERxNUtPTG9BNS9xUmRDNVRWWk41Y0dnc3JOcW5SU29YSlBRc2twdDJkRkxuK3g0RHRmWkJ5UUkKRDNJM3B1SVZNVFFTQmZ3S1Z4TDdJeWIrMDFTeHgwYUNGdVgyU1FJREFRQUJBb0lCQUE5S1JSbDdOU2EzaEZpbwo5cm4yMTFxS3Y3V3dFWnhoSHdoN1pvYkhlS0VGTVNvTjJUdE5TOGN2Z2NmKzBaemE2OFcvMm5JaVBmbXRzK1F0CmhTTnliYTNPaCtoMHhuMkZrMDBJVG4rUjFyNFhNTnQzOVZ1dG55RGNMZmx0TEJSbVB2L2VKK2pNNVpMQjJMQWwKalpSY2MxOUt6OUJpTWFnWFprSHU0R3RCVnlQeGZHVlBGdmV5S0hWaEdzWCtodmNncGhSY1R3N21qOCtIM01rYgpPK09wR1FGbDVPb1BBMlhGYTIza2xsc2dEQTRDd1ZCdFZXaCs0Z29zanhDZWhpc0EraHpxd3Avbkg0ekFpOE5kCkhHSjdrWjRxd2prUHFsb3dkWnNmMWJCejcxaFlJVmRlOHJULzR4R2UramJ5M3RhbkFLeU5lWmJyRlFMZ3ZPTzIKU2NaOWl4RUNnWUVBMW1hdzZGcHVMS0VmeDRoR3FGbUJrU1RxVkZRREp3NVlSd0ZoYzFtYlBXWVpMMHB4VnNKbApIdEt1L2FzeEk5cnpxWTFUanprcElRZkRTRE5BYkE0cTBuUkZaUjZKNVNnQVB2TnNHckJ4WmtZdW1qK3d0WGFmClVGRzNxYUo3NGxDa2xkK05zL3ZsVk9kSlZGZm81cmp5ZFpKOEwxbnprVEgzcytQTVZ3YzlrQ01DZ1lFQTI4Z3gKVzZDQ0E2VEpPL3JYQjhscGVva0U2a2gyb0FQMlM5Wi9DTU5nM1RkWXlIUnNNanRUcjlDVVMzMmpXZ2NJMExSVQpKa0xvdEtYa1BwYTE1Qk1NSEc0MUhFSVhwR0FFbHBHY2NxZG93cHlxT05HL1pVR09LSFg1bmpicnpFY28xblZCCjlwZzVqampTc2VZSWY2OVRXTWt3dnlvNk0vc0ExYzJDTDdvYkVLTUNnWUJabFFpLzNPRUI1c1MzZ3pvNnAwTmEKMlBqTUNWcFQzRXVJUjR4blBQNS9OZ1M1M0xua2pVN2hCUmkyeHV1K1ZvTE95azBxbjdDT3E0YXR5VFJXc2NpMApySDQrVlBjNjkyNjYzc3pCamcyanRSbE51K1RpdlZDdHA2Yzh5clpHaG5sdVliejhnZmg5ZERJUWVyYkdpR3BPCk04bU5vMkVBdnNjSHM5dXlWVVVrendLQmdDemZ1aHd3TUh1WCtMSnphOVllTEpnbFE4aW1GUHBrOUxQVlRzaTIKUTUvSFBpeG5nUFBjb3lDaG9MV3RLRjRvVTRkeFdrRVpwalBFTDA4TUxJVXQwbW8zb2tacnhESCtuTkUxVjlFZApGMG1zL1NCdXl2cGNvUzducjVpN00vZllpNkVGL2ZyZ1o5Zi9DQjNranRXck1ZUk9SOUt3UjRQM2V0c3NnNmxGCkFXT3JBb0dBVGh2TEJKcjdjYVpiQXRJMzFWcHpzT1ZqOE1YUDhKdStTZy93Qml5R2VzbzNDN1FrQXRhMEZlZk0KV29ERlVZdHdZaTBXR0xmMXFnSU1teHprbmRrUnpwYndKUXRmM2ZLdmNKblY1S0lITUdzb1A1aWpJKzJXRmZPZQpMNzZscnJQSkMzQ3k0bnBweG9uRmU3bE5zc0lFYVgrT0FZNU1VOFZIZDdFditOZGlLbU09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-controller-validation-webhook-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpRENDQW5DZ0F3SUJBZ0lRR2UyMEFLSWFnLzBwMzJLTmVLdDBzVEFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREEyTVRVeU16UTNNVE5hRncwegpOREEyTVRNeU16UTNNVE5hTUQ4eFBUQTdCZ05WQkFNVE5HMTVMWEpsYkdWaGMyVXRZMjl1ZEhKdmJHeGxjaTEyCllXeHBaR0YwYVc5dUxYZGxZbWh2YjJzdVpHVm1ZWFZzZEM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRG1MTDkxSVdkN2tQSnFhVit4ZEpQbEg4a2syRVZsaExoTjYxMDVYK2FuUm10RAprTmdtano4WVhySG1uY0ZDQlFTR3pNNHR5bktTNHM2MDVZRjk0ZjUvUmF4UHRWYVpCWkd0TFdubkJId3luM2w1Cm5EUExGVFU2Y0VhU0QrNTBKdGphSmFVYkQwTmhUQm5qNXdRcGlzWXBlbXVSeXhpVVl3WFpKenRqMTlUUTUvdzEKcld6OGlnZzFlZm5sQVVzNG5JVWgvTy9XRlhVVzhrK2lXbG9kZTM3NzRLd2xvNFBETmd1UzFrYVpQcXZPbVBFbAovQTkreE5FbnNENXplLzJ5TWFxYnFnMmd5MHNzdysxbnMzOWhZS0NibUppM1E5VnU1YXJPazI3Sm52TnRpUlZ6CnZrSHB6N2szcVQxczZEQ2FNMUVyOFBzcWNNQjhrbXJRRjNpdmZzaW5BZ01CQUFHamdhSXdnWjh3RGdZRFZSMFAKQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQgpBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGT2h3TEdVSVRkNFRsaW9pQTUzVmtSbVJmMmpnTUQ4R0ExVWRFUVE0Ck1EYUNORzE1TFhKbGJHVmhjMlV0WTI5dWRISnZiR3hsY2kxMllXeHBaR0YwYVc5dUxYZGxZbWh2YjJzdVpHVm0KWVhWc2RDNXpkbU13RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUVzajNZV0dqUmdvU3BEMkk5bG9zclp4bUtpRApPeFBPYTgzSW5CY3BvUzZQaUJWSWExc1FOM3JySUlScitEUXhXeDdtRnlPNGtDSkx1MHNrNnlSZVB5SWtWRHIyCll2VWkxWklYeUI0THFxb0VEU3FMWTRtQWQvb3BwU25ocWtWRnQyU2lqWU9ZbERmOUxES2hpcXJ4WkhEUTdGWUoKNXkxZ2M3THFtZkpjSnVDQ002U0VRWCt4MXRSTjA1NStMTXJiSTh2UFJNWEM2UHpGUnNmUURKZGdiTGJBSGJEbwpYSEN5VDRwN0k1c2d2NGJXaGxXZ1ZlRDdiRSt0SFZMRzh2U0hvRDg2N3dIWVRsUnNuaS9vWWhaR29pOVROOXY2Cml0c3JhVERKa0F6b24rZjQwV3FyUE1HTzdvVzR2WVdUc1psdjBzRDAyRWR5VFY0QlNKdFJxOWVBbFA0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNWl5L2RTRm5lNUR5YW1sZnNYU1Q1Ui9KSk5oRlpZUzRUZXRkT1YvbXAwWnJRNURZCkpvOC9HRjZ4NXAzQlFnVUVoc3pPTGNweWt1TE90T1dCZmVIK2YwV3NUN1ZXbVFXUnJTMXA1d1I4TXA5NWVad3oKeXhVMU9uQkdrZy91ZENiWTJpV2xHdzlEWVV3WjQrY0VLWXJHS1hwcmtjc1lsR01GMlNjN1k5ZlUwT2Y4TmExcwovSW9JTlhuNTVRRkxPSnlGSWZ6djFoVjFGdkpQb2xwYUhYdCsrK0NzSmFPRHd6WUxrdFpHbVQ2cnpwanhKZndQCmZzVFJKN0ErYzN2OXNqR3FtNm9Ob010TExNUHRaN04vWVdDZ201aVl0MFBWYnVXcXpwTnV5Wjd6YllrVmM3NUIKNmMrNU42azliT2d3bWpOUksvRDdLbkRBZkpKcTBCZDRyMzdJcHdJREFRQUJBb0lCQUg2Vm1XMkhRMnYzV1BvZwpuVm53Yk8yVFA0R2Qxdnh2c3hSWEhsdlJXLzRlZ2hzVWEyczVXRS9FdEQzS0FHQ1lkZGJVaDRjelVUTnF2SmRMCnFKMWNUaVFjWXhrcTkwY01nd01rZUp0dUlnZU5JTGM2cWxsRGZwUjI3cmloUGxodWpNL2I2Q01yajdqUXEyUmsKeGlzNmdLU0xDT0dUT2g5UkhnUkF5UzZ0b2dLSXB4ZWozem94VWhYQmJLMkl4NlJzMjJkWEV4WFVxV2QwV1VwYwpRaXJkVlBSMW85UUkzaXFmb2RxWld6WklOMXIrZWxPN2o2QjBhbythenJiUURTMFdBb05hMkpVSXBVUmo1MHk1CkkrcUhINTd5eWdKWEIyUXlpMkk0TmY3SnRMbmJwY2lzakdZR0prRFBOWmM4NGN4MVlhbE1SandFZEcydDN1ZEIKaGkyci9aRUNnWUVBLzVIS1dYamhJYy9vS0RZYnk5TzBxTmhDeXkrZTZBS2tSVEd4NEpZcmZidDBaRUFMOGFMbAplVTZIUk84ZmlhNE0rZHlrTFNyNmMwU2V0VHlSVFhDSGtEMkhpQjlWRFYrRkxXR3hVWjliOVN0bVNtWHNpRm96CkhMSGR5cmdjbGl0dVJabU54by9sTzdBN1BVelpZL0Y4eTRxeVh3LzJ4ZDIrcnlqYktXZ1daK1VDZ1lFQTVwQUIKcDZMWitvRWFoL283bmoyQ2lHYjVJTVFEUEMxa3pxRVdueDk1Q0RiQ1I2RVdaYnk0YVVncCtVV0ZjZWxqTEJLOAowZHpqajNOSjZudTVOZGFkMFdYV3Y3L3Qrb3Q2bGlRSlA2VW93RC9BbU54b0xlZXFnT1U5Um1BREE1d0dHa1grCllwWXphNUQzS3RwR3UrTUljZk5CRmJycEFkWC83RE0rVVJNV1Rac0NnWUJXSElkenNqa1pMWFpwNWlGamdrZkQKQkdzdER6U1p0Qm9wZmw4UzcwWmtMUDlBc0J2V0pTN3d1cmIxVVNUdFBRbitQb3ZLOUVwREFJSUJTeEVpYUtJawp4YmFlOVAreGE5Znh2Sk1FajQ5cWdsOEsvbUMrYUxZRUd5SkNKZHJyOW1KSGJUL0tBYjRaYUgzdFg3RjM3V3hCCklOQ05HMUhveFpoMGFHMi8rK1JneVFLQmdDTG8zUWRIMWg5aTJ1U0owK3NTdnlmdUIzeVprUy9VWTdZUmwvNUIKNHE2R3RBWHFjeHkyWldtemZuOTZza2pjSUtMMHQxaERUTVZVbkhWL2hEeU5vVm1xUk1qRnc3K3l6TDNjK1BXRgpDVldLa1p2VGk0YWYxQ1l1RDRnUFU0V0JZejhwSitvL2VjdW9xSFA1bHNvdUJ3SlI1YUhucWc0WUcrYmtuMlBoCk12aFBBb0dCQU9hb2o1NFFGQ05CZ2FsOElobEYxYTR6KytDTTcvMDdzMXo2Z25SWEh2ZTZrb2ZZVnJuNnpqWjUKdnVWSU1MeGVSdzNNb3h0MHFhWWhxUHRMcGErT3IwNlB2RmJlQkdDbThuTE1nQnNnVm1mN2ZEdmFPZGlnbDhmVQpXMHNaQ29NV3liTTZrRzFUeU9pcGErTkIxYVVtMTJiNml2OHRzNE9UZnNDNFZDTG5FbUQwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
  name: my-release-controller
rules:

- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update

- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-controller
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-controller
subjects:
  - kind: ServiceAccount
    name: my-release-controller
    namespace: default
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-controller
  namespace: default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-controller
  namespace: default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-controller
subjects:
  - kind: ServiceAccount
    name: my-release-controller
    namespace: default
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-controller-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    app.kubernetes.io/component: app
---
# Source: ingress/charts/gateway/templates/service-kong-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-gateway-admin
  namespace: default
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
spec:
  type: ClusterIP
  ports:
  - name: kong-admin-tls
    port: 8444
    targetPort: 8444
    protocol: TCP
  clusterIP: None
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "my-release"
---
# Source: ingress/charts/gateway/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-gateway-manager
  namespace: default
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
spec:
  type: NodePort
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "my-release"
---
# Source: ingress/charts/gateway/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-gateway-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "my-release"
---
# Source: ingress/charts/controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-controller
  namespace:  default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "my-release"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: my-release-controller-token
        kuma.io/gateway: "enabled"
        traffic.kuma.io/exclude-outbound-ports: "8444"
        traffic.sidecar.istio.io/excludeOutboundPorts: "8444"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: controller
        helm.sh/chart: controller-2.39.0
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "3.6"
        app.kubernetes.io/component: app
        app: my-release-controller
        version: "3.6"
    spec:
      serviceAccountName: my-release-controller
      automountServiceAccountToken: false
      
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_SVC
          value: "default/my-release-gateway-admin"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/my-release-gateway-proxy"
        
        image: kong/kubernetes-ingress-controller:3.2
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: my-release-controller-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
       
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: my-release-controller-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: my-release-controller-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: my-release-controller-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: my-release-controller-validation-webhook-keypair
---
# Source: ingress/charts/gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-gateway
  namespace:  default
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "my-release"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: my-release-gateway-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: gateway
        helm.sh/chart: gateway-2.39.0
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "3.6"
        app.kubernetes.io/component: app
        app: my-release-gateway
        version: "3.6"
    spec:
      serviceAccountName: my-release-gateway
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROLE
          value: "traditional"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        
        volumeMounts:
        - name: my-release-gateway-prefix-dir
          mountPath: /kong_prefix/
        - name: my-release-gateway-tmp
          mountPath: /tmp
      containers:
      - name: "proxy"
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROLE
          value: "traditional"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: admin-tls
          containerPort: 8444
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: my-release-gateway-prefix-dir
            mountPath: /kong_prefix/
          - name: my-release-gateway-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: my-release-gateway-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: my-release-gateway-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: my-release-gateway-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: my-release-controller-validations
  namespace: default
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRV0txUm9ocGNUaC9qS25hVS80VUxUVEFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREEyTVRVeU16UTNNVEphRncwegpOREEyTVRNeU16UTNNVEphTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVCR0M1MSt0VSt3MHJPdzRrUml6NHNGNE51bjEKclAxV3ljRWhCUHdGcW9CaWh3SFk3Zy9Cd3pZSGdCOU11bTNnenJOMEpqZE9QcDhFQ2Rqd0RxYTA5ZHBGN0toOApRSVUyRzBGdmlTTjRrUjBiQmQ2T3Y1OXpPMmYyZTRvaVRydmhjSWxNNGZGQWdFRStXcFI5WE5QSTRDQlBodlhBCko0ek9sOWo4aHNLYTNUejJaOXBnNDlydzNOWm1PSUNzRTNuZU5SbTZKMTRSRjQ3cTZ4Qk82djlWT3dUS3ljV0cKOVh2cmtvWGlRY1dYNzlsMXRDU0E1MHh6dXNGYXBEcTVLT0xvQTUvcVJkQzVUVlpONWNHZ3NyTnFuUlNvWEpQUQpza3B0MmRGTG4reDREdGZaQnlRSUQzSTNwdUlWTVRRU0Jmd0tWeEw3SXliKzAxU3h4MGFDRnVYMlNRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPaHdMR1VJVGQ0VGxpb2lBNTNWa1JtUgpmMmpnTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDbWlWUmVtUVZWSC9DT052dVM4aGJQR0NjNG9uUDErdDFPCk5rSk5NczdlNHowbmFxa3V3d3ZHRmVnRFppbEd5WGIwbER1emJ2VU51bFJMcnBMcnFTeFVHQzdvamtRZ284d0cKUTZGZnJITXFNY3d3eHpFU0ZpLy9DV2RMNlBWVlNTajZvRkw0cW5jaWxLUEtFMm5iOEl4amJTTGl4ODRCVnVragpRK2NaWmszSHhJZElJT2hPOXhuUlorM3ZrbVVoOURpZUFhMmhlZDE2NXFha1FMVmZwT2FObUhKTHdyZEczZHcvCjk2WG51TllqRlhPTW1xbkxDeUVwUjJkNHAxTzVWeHUwa0JORmpyQWZwdUxyMTdpQnB0N2hEWTNsdElOWFVIeloKclloRnM0Uk5BSEI4RDd5UGdDN2JscWl5cVNGVjh0TlQ3djRqUit1Qk11L0orMmgvSlU1RAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: my-release-controller-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRV0txUm9ocGNUaC9qS25hVS80VUxUVEFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREEyTVRVeU16UTNNVEphRncwegpOREEyTVRNeU16UTNNVEphTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVCR0M1MSt0VSt3MHJPdzRrUml6NHNGNE51bjEKclAxV3ljRWhCUHdGcW9CaWh3SFk3Zy9Cd3pZSGdCOU11bTNnenJOMEpqZE9QcDhFQ2Rqd0RxYTA5ZHBGN0toOApRSVUyRzBGdmlTTjRrUjBiQmQ2T3Y1OXpPMmYyZTRvaVRydmhjSWxNNGZGQWdFRStXcFI5WE5QSTRDQlBodlhBCko0ek9sOWo4aHNLYTNUejJaOXBnNDlydzNOWm1PSUNzRTNuZU5SbTZKMTRSRjQ3cTZ4Qk82djlWT3dUS3ljV0cKOVh2cmtvWGlRY1dYNzlsMXRDU0E1MHh6dXNGYXBEcTVLT0xvQTUvcVJkQzVUVlpONWNHZ3NyTnFuUlNvWEpQUQpza3B0MmRGTG4reDREdGZaQnlRSUQzSTNwdUlWTVRRU0Jmd0tWeEw3SXliKzAxU3h4MGFDRnVYMlNRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPaHdMR1VJVGQ0VGxpb2lBNTNWa1JtUgpmMmpnTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDbWlWUmVtUVZWSC9DT052dVM4aGJQR0NjNG9uUDErdDFPCk5rSk5NczdlNHowbmFxa3V3d3ZHRmVnRFppbEd5WGIwbER1emJ2VU51bFJMcnBMcnFTeFVHQzdvamtRZ284d0cKUTZGZnJITXFNY3d3eHpFU0ZpLy9DV2RMNlBWVlNTajZvRkw0cW5jaWxLUEtFMm5iOEl4amJTTGl4ODRCVnVragpRK2NaWmszSHhJZElJT2hPOXhuUlorM3ZrbVVoOURpZUFhMmhlZDE2NXFha1FMVmZwT2FObUhKTHdyZEczZHcvCjk2WG51TllqRlhPTW1xbkxDeUVwUjJkNHAxTzVWeHUwa0JORmpyQWZwdUxyMTdpQnB0N2hEWTNsdElOWFVIeloKclloRnM0Uk5BSEI4RDd5UGdDN2JscWl5cVNGVjh0TlQ3djRqUit1Qk11L0orMmgvSlU1RAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: my-release-controller-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJekNDQWd1Z0F3SUJBZ0lRV0txUm9ocGNUaC9qS25hVS80VUxUVEFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREEyTVRVeU16UTNNVEphRncwegpOREEyTVRNeU16UTNNVEphTUJ3eEdqQVlCZ05WQkFNVEVXdHZibWN0WVdSdGFYTnphVzl1TFdOaE1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVCR0M1MSt0VSt3MHJPdzRrUml6NHNGNE51bjEKclAxV3ljRWhCUHdGcW9CaWh3SFk3Zy9Cd3pZSGdCOU11bTNnenJOMEpqZE9QcDhFQ2Rqd0RxYTA5ZHBGN0toOApRSVUyRzBGdmlTTjRrUjBiQmQ2T3Y1OXpPMmYyZTRvaVRydmhjSWxNNGZGQWdFRStXcFI5WE5QSTRDQlBodlhBCko0ek9sOWo4aHNLYTNUejJaOXBnNDlydzNOWm1PSUNzRTNuZU5SbTZKMTRSRjQ3cTZ4Qk82djlWT3dUS3ljV0cKOVh2cmtvWGlRY1dYNzlsMXRDU0E1MHh6dXNGYXBEcTVLT0xvQTUvcVJkQzVUVlpONWNHZ3NyTnFuUlNvWEpQUQpza3B0MmRGTG4reDREdGZaQnlRSUQzSTNwdUlWTVRRU0Jmd0tWeEw3SXliKzAxU3h4MGFDRnVYMlNRSURBUUFCCm8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUYKQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPaHdMR1VJVGQ0VGxpb2lBNTNWa1JtUgpmMmpnTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDbWlWUmVtUVZWSC9DT052dVM4aGJQR0NjNG9uUDErdDFPCk5rSk5NczdlNHowbmFxa3V3d3ZHRmVnRFppbEd5WGIwbER1emJ2VU51bFJMcnBMcnFTeFVHQzdvamtRZ284d0cKUTZGZnJITXFNY3d3eHpFU0ZpLy9DV2RMNlBWVlNTajZvRkw0cW5jaWxLUEtFMm5iOEl4amJTTGl4ODRCVnVragpRK2NaWmszSHhJZElJT2hPOXhuUlorM3ZrbVVoOURpZUFhMmhlZDE2NXFha1FMVmZwT2FObUhKTHdyZEczZHcvCjk2WG51TllqRlhPTW1xbkxDeUVwUjJkNHAxTzVWeHUwa0JORmpyQWZwdUxyMTdpQnB0N2hEWTNsdElOWFVIeloKclloRnM0Uk5BSEI4RDd5UGdDN2JscWl5cVNGVjh0TlQ3djRqUit1Qk11L0orMmgvSlU1RAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: my-release-controller-validation-webhook
      namespace: default
