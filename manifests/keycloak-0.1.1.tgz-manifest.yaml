---
# Source: keycloak/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-keycloak-headless
  labels:
    helm.sh/chart: keycloak-0.1.1
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "23.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8080
      targetPort: http
      protocol: "TCP"
  selector:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: my-release
---
# Source: keycloak/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-keycloak
  labels:
    helm.sh/chart: keycloak-0.1.1
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "23.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
      protocol: "TCP"
  selector:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: my-release
---
# Source: keycloak/templates/controller.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-keycloak
  labels:
    helm.sh/chart: keycloak-0.1.1
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "23.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: my-release-keycloak-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: default
      containers:
        - name: keycloak
          image: "quay.io/keycloak/keycloak:23.0.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: "TCP"
          env:
            - name: "TZ"
              value: "UTC"
            - name: KC_METRICS_ENABLED
              value: 'true'
            - name: KC_HEALTH_ENABLED
              value: 'true'
          args: []
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
          resources: {}
