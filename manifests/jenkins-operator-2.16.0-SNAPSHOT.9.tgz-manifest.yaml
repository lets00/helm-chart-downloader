---
# Source: jenkins-operator/templates/jenkins-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: edp-jenkins-operator
  labels:
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
---
# Source: jenkins-operator/templates/jenkins/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: jenkins
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
  name: jenkins
---
# Source: jenkins-operator/templates/jenkins/persistent_volume_claim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-data
  labels:
    app: jenkins
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

  volumeMode: Filesystem
---
# Source: jenkins-operator/templates/jenkins-operator/role_kubernetes.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
  name: edp-jenkins-operator-
rules:
- apiGroups:
    - '*'
  resources:
    - keycloaks
    - gerrits
    - nexuses
    - keycloaks/status
    - keycloakclients
    - keycloakclients/finalizers
    - keycloakclients/status
    - keycloakrealms
    - keycloakrealms/status
    - jenkins
    - jenkins/finalizers
    - jenkins/status
    - jenkinses
    - jenkinses/finalizers
    - jenkinses/status
    - jenkinsserviceaccounts
    - jenkinsserviceaccounts/finalizers
    - jenkinsserviceaccounts/status
    - jenkinsscripts
    - jenkinsscripts/finalizers
    - jenkinsscripts/status
    - jenkinsjobs
    - jenkinsjobs/finalizers
    - jenkinsjobs/status
    - jenkinsfolders
    - jenkinsfolders/finalizers
    - jenkinsfolders/status
    - edpcomponents
    - stages
    - stages/finalizers
    - stages/status
    - cdpipelines
    - cdpipelines/finalizers
    - cdpipelines/status
    - projectrequests
    - codebases
    - codebases/finalizers
    - codebasebranches
    - codebaseimagestreams
    - gitservers
    - jirafixversions
    - adminconsoles
    - cdstagejenkinsdeployments
    - cdstagejenkinsdeployments/finalizers
    - cdstagejenkinsdeployments/status
    - cdstagedeployments
    - cdstagedeployments/finalizers
    - cdstagedeployments/status
    - jenkinsjobbuildruns
    - jenkinsjobbuildruns/status
    - jenkinsauthorizationroles
    - jenkinsauthorizationroles/status
    - jenkinsauthorizationroles/finalizers
    - jenkinsauthorizationrolemappings
    - jenkinsauthorizationrolemappings/status
    - jenkinsauthorizationrolemappings/finalizers
    - jenkinsagents
    - jenkinsagents/status
    - jenkinsagents/finalizers
    - jenkinssharedlibraries
    - jenkinssharedlibraries/status
    - jenkinssharedlibraries/finalizers
    - events
  verbs:
    - '*'
- apiGroups:
    - coordination.k8s.io
  resources:
    - leases
  verbs:
    - create
    - get
    - list
    - update
---
# Source: jenkins-operator/templates/jenkins/jenkins_resources_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
  name: jenkins-resources-role
rules:
  - apiGroups: ["*"] # "" indicates the core API group
    resources: ["codebases", "codebasebranches", "codebasebranches/status", "codebaseimagestreams", "cdpipelines", "nexuses", "stages",
                "gitservers", "adminconsoles", "jenkinses", "jenkins", "edpcomponents", "keycloakrealms",
                "jirafixversions", "codebases/finalizers", "jiraissuemetadatas", "jiraissuemetadatas/finalizers",
                "jiraissuemetadatas/status"]
    verbs: ["get", "create", "update", "patch", "list", "delete"]
  - apiGroups: ["build.openshift.io"] # "" indicates the core API group
    resources: ["buildconfigs", "builds"]
    verbs: ["list"]
  - apiGroups: ["image.openshift.io"] # "" indicates the core API group
    resources: ["imagestreams"]
    verbs: ["list"]
---
# Source: jenkins-operator/templates/jenkins-operator/rolebinding_admin_kubernetes.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
  name: edp-jenkins-operator--admin
roleRef:
  name: admin
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
subjects:
  - kind: ServiceAccount
    name: edp-jenkins-operator
    namespace:
---
# Source: jenkins-operator/templates/jenkins-operator/rolebinding_kubernetes.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
  name: edp-jenkins-operator-
roleRef:
  kind: Role
  name: edp-jenkins-operator-
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: "edp-jenkins-operator"
    namespace:
---
# Source: jenkins-operator/templates/jenkins/rolebinding_edit.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
  name: edp-jenkins-edit-permissions
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
  - kind: ServiceAccount
    name: jenkins
---
# Source: jenkins-operator/templates/jenkins/rolebinding_resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
  name: edp-jenkins-resources-permissions
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins-resources-role
subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace:
---
# Source: jenkins-operator/templates/jenkins/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jenkins
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
  name: jenkins
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: jnlp
      port: 50000
      protocol: TCP
      targetPort: 50000
  selector:
    app: jenkins
  sessionAffinity: None
  type: ClusterIP
---
# Source: jenkins-operator/templates/jenkins-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
  name: jenkins-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: jenkins-operator
  template:
    metadata:
      labels:
        name: jenkins-operator
    spec:
      serviceAccountName: "edp-jenkins-operator"
      securityContext:
        runAsNonRoot: true
      containers:
        - name: jenkins-operator
          image: "epamedp/jenkins-operator:2.16.0-SNAPSHOT.9"
          imagePullPolicy: "IfNotPresent"
          command:
            - jenkins-operator
          securityContext:
            allowPrivilegeEscalation: false
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "jenkins-operator"
            - name: PLATFORM_TYPE
              value: kubernetes
          resources:
            limits:
              memory: 192Mi
            requests:
              cpu: 50m
              memory: 64Mi
---
# Source: jenkins-operator/templates/jenkins/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: jenkins
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
  name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      volumes:
        - name: jenkins-jenkins-data
          persistentVolumeClaim:
            claimName: jenkins-data
      initContainers:
        - name: grant-permissions
          image: busybox:1.35.0
          imagePullPolicy: "IfNotPresent"
          command:
            - sh
            - '-c'
            - >-
              JENKINS_HOME="/var/lib/jenkins"; mkdir -p $JENKINS_HOME/.ssh; if [
              -d /tmp/ssh ];then chmod 777 -R $JENKINS_HOME/.ssh; cat
              /tmp/ssh/id_rsa > $JENKINS_HOME/.ssh/id_rsa;chmod 400
              $JENKINS_HOME/.ssh/id_rsa; if [ -e $JENKINS_HOME/.ssh/config ];
              then chmod 400 -fR $JENKINS_HOME/.ssh/config; fi; fi
          resources: {}
          volumeMounts:
            - name: jenkins-jenkins-data
              mountPath: /var/lib/jenkins
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            runAsUser: 999
            runAsGroup: 998
      containers:
        - name: edp-jenkins
          image: epamedp/edp-jenkins:2.14.0-SNAPSHOT
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: CI_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: OPENSHIFT_ENABLE_OAUTH
              value: 'false'
            - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
              value: 'true'
            - name: KUBERNETES_TRUST_CERTIFICATES
              value: 'true'
            - name: JNLP_SERVICE_NAME
              value: jenkins-jnlp
            - name: JENKINS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jenkins-admin-password
                  key: password
            - name: JENKINS_UI_URL
              value: https://jenkins-.%!s(<nil>)
            - name: JENKINS_OPTS
              value: '--requestHeaderSize=32768'
            - name: PLATFORM_TYPE
              value: kubernetes
            - name: JENKINS_JAVA_OPTIONS
              value: 
          resources:
            limits:
              memory: 5Gi
            requests:
              cpu: 1000m
              memory: 1500Mi
          volumeMounts:
            - name: jenkins-jenkins-data
              mountPath: /var/lib/jenkins
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            runAsUser: 999
            runAsGroup: 998
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: jenkins
      serviceAccount: jenkins
      securityContext:
        runAsNonRoot: true
        fsGroup: 0
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
# Source: jenkins-operator/templates/jenkins/ingress.yaml
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: jenkins
  labels:
    app: jenkins
    helm.sh/chart: jenkins-operator-2.16.0-SNAPSHOT.9
    app.kubernetes.io/name: jenkins-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.16.0-SNAPSHOT.9"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: jenkins-.%!s(<nil>)
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jenkins
                port: 
                  number: 8080
---
# Source: jenkins-operator/templates/edp-configuration/jenkins.yaml
apiVersion: v2.edp.epam.com/v1
kind: Jenkins
metadata:
  name: jenkins
spec:
  edpSpec:
    dnsWildcard: 
  sharedLibraries:
    - name: edp-library-stages
      url: https://github.com/epam/edp-library-stages.git
      tag: master
    - name: edp-library-pipelines
      url: https://github.com/epam/edp-library-pipelines.git
      tag: master
  keycloakSpec:
    enabled: true
    realm: "-main"
