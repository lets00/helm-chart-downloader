---
# Source: kangal/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kangal
  labels:
    app: kangal
    chart: kangal-2.3.0
    release: my-release
    heritage: Helm
data:
  AWS_ACCESS_KEY_ID: bXktYWNjZXNzLWtleS1pZA==
  AWS_SECRET_ACCESS_KEY: bXktc2VjcmV0LWFjY2Vzcy1rZXk=
---
# Source: kangal/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-kangal
  labels:
    app: kangal
    chart: kangal-2.3.0
    release: my-release
    heritage: Helm
data:
  AWS_BUCKET_NAME: my-bucket
  AWS_DEFAULT_REGION: us-east-1
  AWS_ENDPOINT_URL: s3.us-east-1.amazonaws.com
  AWS_USE_HTTPS: "false"
  GHZ_IMAGE_NAME: hellofresh/kangal-ghz
  GHZ_IMAGE_TAG: latest
  JMETER_MASTER_IMAGE_NAME: hellofresh/kangal-jmeter-master
  JMETER_MASTER_IMAGE_TAG: latest
  JMETER_WORKER_IMAGE_NAME: hellofresh/kangal-jmeter-worker
  JMETER_WORKER_IMAGE_TAG: latest
  LOCUST_IMAGE_NAME: locustio/locust
  LOCUST_IMAGE_TAG: 1.3.0
---
# Source: kangal/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system-controller-kangal-controller-default
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
rules:

  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - get
      - list
      - watch

  - apiGroups:
      - kangal.hellofresh.com
    resources:
      - loadtests
    verbs:
      - update
      - create
      - get
      - watch
      - list
      - delete

  - apiGroups:
      - kangal.hellofresh.com
      - extensions
    resources:
      - loadtests/status
    verbs:
      - update

  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - create
      - update
      - watch

  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update

  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - create
      - list
      - watch

  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get

  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - create

  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - list
      - delete

  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - create
      - delete

  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - create
      - list
      - watch
---
# Source: kangal/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system-controller-kangal-controller-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system-controller-kangal-controller-default
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:default:default
---
# Source: kangal/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system-controller-kangal-proxy-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system-controller-kangal-controller-default
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:serviceaccount:default:default
---
# Source: kangal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kangal-controller
  labels:
    app: kangal-controller
    chart: kangal-2.3.0
    release: my-release
    heritage: Helm
spec:
  type: 
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: kangal-controller
    release: my-release
---
# Source: kangal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kangal-openapi-ui
  labels:
    app: kangal-openapi-ui
    chart: kangal-2.3.0
    release: my-release
    heritage: Helm
spec:
  type: 
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: kangal-openapi-ui
    release: my-release
---
# Source: kangal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kangal-proxy
  labels:
    app: kangal-proxy
    chart: kangal-2.3.0
    release: my-release
    heritage: Helm
spec:
  type: 
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: kangal-proxy
    release: my-release
---
# Source: kangal/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kangal-controller
  labels:
    app: kangal-controller
    chart: kangal-2.3.0
    release: my-release
    heritage: Helm
    version: ""
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kangal-controller
      release: my-release
  template:
    metadata:
      labels:
        app: kangal-controller
        release: my-release
        environment: dev
        version: ""
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      containers:
        - name:  kangal-controller
          image: "hellofresh/kangal:latest"
          imagePullPolicy: Always
          args:
            - controller
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: KANGAL_PROXY_URL
            value: "https://kangal-proxy.example.com"
          envFrom:
            - configMapRef:
                name: my-release-kangal
            - secretRef:
                name: my-release-kangal
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
---
# Source: kangal/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kangal-openapi-ui
  labels:
    app: kangal-openapi-ui
    chart: kangal-2.3.0
    release: my-release
    heritage: Helm
    version: ""
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kangal-openapi-ui
      release: my-release
  template:
    metadata:
      labels:
        app: kangal-openapi-ui
        release: my-release
        environment: dev
        version: ""
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      containers:
        - name:  kangal-openapi-ui
          image: "swaggerapi/swagger-ui:latest"
          imagePullPolicy: Always
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: OPEN_API_SERVER_URL
            value: "https://kangal-openapi-ui.example.com"
          - name: PORT
            value: "8080"
          - name: URL
            value: "https://kangal-proxy.example.com/openapi"
          - name: VALIDATOR_URL
            value: "null"
          envFrom:
            - configMapRef:
                name: my-release-kangal
            - secretRef:
                name: my-release-kangal
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            null
---
# Source: kangal/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kangal-proxy
  labels:
    app: kangal-proxy
    chart: kangal-2.3.0
    release: my-release
    heritage: Helm
    version: ""
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kangal-proxy
      release: my-release
  template:
    metadata:
      labels:
        app: kangal-proxy
        release: my-release
        environment: dev
        version: ""
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      containers:
        - name:  kangal-proxy
          image: "hellofresh/kangal:latest"
          imagePullPolicy: Always
          args:
            - proxy
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: OPEN_API_SERVER_DESCRIPTION
            value: "Kangal proxy default value"
          - name: OPEN_API_SERVER_URL
            value: "https://kangal-proxy.example.com"
          - name: OPEN_API_UI_URL
            value: "https://kangal-openapi-ui.example.com"
          envFrom:
            - configMapRef:
                name: my-release-kangal
            - secretRef:
                name: my-release-kangal
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /status
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 4
          resources:
            {}
---
# Source: kangal/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-kangal-openapi-ui
  labels:
    app: kangal-openapi-ui
    chart: kangal-2.3.0
    release: my-release
    heritage: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:

    - host: kangal-openapi-ui.example.com
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-release-kangal-openapi-ui
                port:
                  name: http
---
# Source: kangal/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-kangal-proxy
  labels:
    app: kangal-proxy
    chart: kangal-2.3.0
    release: my-release
    heritage: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:

    - host: kangal-proxy.example.com
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-release-kangal-proxy
                port:
                  name: http
