---
# Source: kubernetes-policy-controller/templates/webhookconfiguration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kubernetes-policy-controller-cert
  namespace: default
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:

  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSRENDQWl5Z0F3SUJBZ0lSQUpCeThWMGhNT2ZMMitnQlV1RkVDS2d3RFFZSktvWklodmNOQVFFTEJRQXcKR3pFWk1CY0dBMVVFQXhNUWIzQmhMV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREEyTVRZd01ETXhNVEZhRncwegpOREEyTVRRd01ETXhNVEZhTUQ0eFBEQTZCZ05WQkFNVE0yMTVMWEpsYkdWaGMyVXRhM1ZpWlhKdVpYUmxjeTF3CmIyeHBZM2t0WTI5dWRISnZiR3hsY2k1a1pXWmhkV3gwTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFORnh4dFAwZ3FjUzVucGVkcFA1enJNTk1GM05haG5Ia0hiQUV2dmZWSUFRdmdZbApVcVZHc3Q4TTFESXFnNmhjTXFLT3I5TFg0ZlJDMGZGbEttTUMwN2hxd1pmZmw3THhMdnUrWDJnaUN4RDEvMVA5CkhBaUFaMGpLYlY1UW9HVmFJTjZNRjJQZHErc2p3KzBSc01iU0w3S3NRd1pwWDg3QncrUE9vb2xoZEhhTmdqSWgKTFR3M09HMHFXTDVGR2hybmZkZUhEaFNENVd0WXlKRnU1R1J1NXdMUTFQdUdZWkZNV0JPZnFMM2g0UE1hWlBOKwp5RGVrMC8zQU1kaVJpbTVWLzBMZjdYaGFlZnJhejl1ZEs0TjdlNGhDMUpLQStua1RzbFBra2R5dThZWTdqT0dJCmdoR1ZHdUsraVdCbmYvL1h6MUpRdzhmTXpsR3F3bmMrcnJTWmhLMENBd0VBQWFOZ01GNHdEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUI4R0ExVWRJd1FZTUJhQUZFVEE3a0FxVzZUL3ozRjZmaDBTdkhMYml5QmZNQTBHQ1NxR1NJYjNEUUVCCkN3VUFBNElCQVFBVzhHaHZ3NW0wSU5xN1lRRk5DN2EwbkJCWkFOcDhQNnB2bHN6WlVXQk5KYUJveDV4M09qb2EKdGlSanZqZ0R5K1BPdFdTd0grM1lRM002REFPc0ZkdWlEQWxML3M5NnV5RDNmSS9IOXVIc3dLMnUyc2lyTXRVVQpPMVZDdHlKanMrTklWMURlL3EzZ2RsNm96T3l5Z2ljcWNqcGJjMHkrbG0zMHl6cnVJZytQdHZtNjBHUFo1aGI2CkZLN3dPOWsyUW0zVWxDS0pEaHRHckIzaDV4Zm16NXk0aDM2azMrYVVidHd6VXM0T2cyZk8weW1aVzJBWHRNNzMKTG5xTmppRDE2SFEyS3J1MFFhMzNkV1psWVUwZGtSUjVZVXg5R0RRSGg0QytiSFRRM3ZaS0oyKzJEaElnTWxzTwphb29JeDdyUkRYNTFSc09hc1owcnUvbTdEdUxJcFViaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMFhIRzAvU0NweExtZWw1Mmsvbk9zdzB3WGMxcUdjZVFkc0FTKzk5VWdCQytCaVZTCnBVYXkzd3pVTWlxRHFGd3lvbzZ2MHRmaDlFTFI4V1VxWXdMVHVHckJsOStYc3ZFdSs3NWZhQ0lMRVBYL1UvMGMKQ0lCblNNcHRYbENnWlZvZzNvd1hZOTJyNnlQRDdSR3d4dEl2c3F4REJtbGZ6c0hENDg2aWlXRjBkbzJDTWlFdApQRGM0YlNwWXZrVWFHdWQ5MTRjT0ZJUGxhMWpJa1c3a1pHN25BdERVKzRaaGtVeFlFNStvdmVIZzh4cGs4MzdJCk42VFQvY0F4MkpHS2JsWC9RdC90ZUZwNSt0clAyNTByZzN0N2lFTFVrb0Q2ZVJPeVUrU1IzSzd4aGp1TTRZaUMKRVpVYTRyNkpZR2QvLzlmUFVsRER4OHpPVWFyQ2R6NnV0Sm1FclFJREFRQUJBb0lCQVFERjEvY2Njc1VVTTJ0Wgp2bSsrbW1QaGlSemVEdE1oNVB5VzRCdE9wNGozckZrRUR5K0Joa1lqSXNnelZ5dWsxdXJSMlgxRzZyeTdjbjlFCnl1NStOc1p1VnhIbWQ4U2h1T2hMejJucVFQWTVJRmIvTElIVm1nMTJtaGt6MVcrZUxjUU0xVUtuQ0ZlRXQvVTAKdE5oTEIzTWRFVklDOVhrV0lyejdMVThsL05QNXd6eloyVkpxLzFFWUM5UkdVMHRKbUhRUUFBVzJIdDBCOWEycQpLQm9TNTFDaU5wckRlTW1PSjdrT0FZZHdzdXBmV1hzRWROTHIwdkJ4UU0vNXBpdUtDTUsydGFKTEl0Q1phZWpqCmxVbHFPcDB6TXJlNktubEtjQkd4eUFmSEwxWnpDdURyYy95QUpQbGtUUGNOcW1Ha3R2bURYS01TNmwxOGRvNzcKRi9RV0NwbzFBb0dCQU5IWVozRFREdVlWcnJ4U1pwVkJhTGdHWU9tTHd6NHBpVzRtS3V4alFJRytNdk1sZ0ljNwpKeXdHVkVYbEVQTzV5YmVhTlV0ajh4QW5QZFN6bk41cjV2Ny9EYmY2UlN1T3BiSVRuT1UwN1l0RXdxUFhldzVtCm9YSTFlTGFrZFRUd2Iyd2Z1OC93MS9zbGlJeVo1MndCWGRsaUhPaFpBbWp6dGtiYXNVSThwOHBMQW9HQkFQK0MKek5QSEZRcjFNbWhqRm5kVSs1QXBFbTkwcm8rb2M3S0FETmRMZldPRlVkd3YzZWtZYSttbE15NUZSeGxXWlF6SQpNTXBZOWhESkhDb3B6Q21SR2lPSFBJYWRSMndlK2NsdjNLaHB4Yjd5bUYrZTF6WjVPLzNTeDkzOE51citTZzNtCkkvTVFIUGZldzBEN3hkSmE1WGUwYUF6Z0lKZmhMckJIZ2VrVWFSSG5Bb0dBTmptTWFVd3dzbVh4OURuNnhpRFQKMVpIWVl5RTVmNHV1TnFkb09oTmZyT2NnTlZLQWh2RlRLdjRyc3JBQmxHbHk1WjNVbmJtaktvNXBYTmhZOWVTKwpHVENCTkFSWThXdDRCNjhud05iUGQwaDZYMm9rSTFHRDhJWSt2anQ3Q2dZRFZOWlNhdVphZVV4Mm41WjVoYUJJCnh3NmlWNndBZ214UHNybDZTcHB2NVVjQ2dZRUFtRS9GZi96dUMxRXRFbEwzQW4yelZEVlhtdjhvUzlTejIxVS8KMGx0YXpLZWRxNjhSRHJHVEtuMWk3Qk02RmQyTmNUZ285WVpnY0pNaDZmUnVrdHkvZ3l4THBVYytXekovM2xlRApaeFZlWHJ4SW5yK1dOUS9COWtYZkJQSWpYcVBsU3pIRWZsRTlvM2kwVmhsL3pDeUpHM2w4aVNoVjVaUERmQ3UwClFsZjdaa01DZ1lCdlpsYmtIRDVNNjdLa3hoWGFvSFlTVTRNTHI2WHFZSFRhb3BCL2JOM0c2U3VKMXhKak14eEoKZ2Nyc0dVQXB1aDRwZ24xcU5yR1lVZ09ySUVzcUZncUxoZ3RUZWFMQ1dZTmhJMzF0RXhVYTdkNWhZZktFVXV5YwpqMFdUdkJRUFlDTUFOaG9TKzd4VzEySllLTVRScHl3M281ZG1ZUlNSUG51a3p3a2V3TmFTbnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubernetes-policy-controller/templates/matches-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-kubernetes-matches
  namespace: default
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  matches.rego: |-
    package k8s
    import data.kubernetes

    matches[[kind, namespace, name, resource]] {
      resource := kubernetes[kind][namespace][name].object
    }

    matches[[kind, namespace, name, resource]] {
        resource := kubernetes[kind][namespace][name]
    }
---
# Source: kubernetes-policy-controller/templates/policymatches-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-kubernetes-policymatches
  namespace: default
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  matches.rego: |-
    package k8s
    import data.kubernetes.policies

    # Matches provides an abstraction to find policies that match the (name). 
    policymatches[[name, policy]] {
        policy := policies[name]
    }
---
# Source: kubernetes-policy-controller/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-opa-viewer
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  name: view
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  name: system:serviceaccounts:default
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubernetes-policy-controller/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: my-release-configmap-modifier
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["update", "patch"]
---
# Source: kubernetes-policy-controller/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: my-release-configmap-modifier
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  name: my-release-configmap-modifier
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  name: system:serviceaccounts:default
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubernetes-policy-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubernetes-policy-controller
  namespace: default
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:  
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
  selector:
    app.kubernetes.io/name: kubernetes-policy-controller
    app.kubernetes.io/instance: my-release
---
# Source: kubernetes-policy-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubernetes-policy-controller
  namespace: default
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-policy-controller
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-policy-controller
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/config: fe36b8915e16b3792c0ad196c383ffdc7a69904f556b20763599496baf63e3c7
    spec:
      containers:
        # WARNING: OPA is NOT running with an authorization policy configured. This
        # means that clients can read and write policies in OPA. If you are
        # deploying OPA in an insecure environment, be sure to configure
        # authentication and authorization on the daemon. See the Security page for
        # details: https://www.openpolicyagent.org/docs/security.html.
        - name: opa
          image: "openpolicyagent/opa:0.10.1"
          imagePullPolicy: IfNotPresent
          args:
            - "run"
            - "--server"
            - "--addr=http://127.0.0.1:8181"
        - name: kube-mgmt
          image: "openpolicyagent/kube-mgmt:0.6"
          imagePullPolicy: IfNotPresent
          args:
            - "--replicate-cluster=v1/namespaces"
            - "--replicate=extensions/v1beta1/ingresses"
            - "--replicate=v1/pods"
        - name: kubernetes-policy-controller          
          image: "nikhilbh/kubernetes-policy-controller:1.2"
          imagePullPolicy: IfNotPresent
          args:
            - "--addr=0.0.0.0:443"
            - "--addr=http://127.0.0.1:7925"
          volumeMounts:
            - readOnly: true
              mountPath: /certs
              name: opa-server
          resources:
            {}
      volumes:
        - name: opa-server
          secret:
            secretName: my-release-kubernetes-policy-controller-cert
---
# Source: kubernetes-policy-controller/templates/webhookconfiguration.yaml
# this file contains 2 resources because both need the generated cert
# please don't split the resources
kind: MutatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1beta1
metadata:
  name: my-release-kubernetes-policy-controller  
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: mutating.webhook.kubernetes-policy-controller
    failurePolicy: Ignore
    namespaceSelector:
      matchLabels:
        opa-mutation: enabled
    rules:
      - apiGroups:
        - '*'
        apiVersions:
        - '*'
        operations:
        - CREATE
        - UPDATE
        resources:
        - '*'
    clientConfig:

      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRYlVvcEMybHFCYmZJWGpFSTIxRkk0akFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCdmNHRXRZV1J0YVhOemFXOXVMV05oTUI0WERUSTBNRFl4TmpBd016RXhNRm9YRFRNMApNRFl4TkRBd016RXhNRm93R3pFWk1CY0dBMVVFQXhNUWIzQmhMV0ZrYldsemMybHZiaTFqWVRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxXOWJSRSttWUsvUTd5TzRST1JjQnBmRUUxY0NCL3IKWnNNYkkrWU9rSXU2UWRaaWpJY1VEM0F0ZGVqRGRkOWo4VFR1NGpkMVJIcnFvWGVtM2NrYjVoRGF3L0ZuTks3TQo3eWpOWTY2enBGWVE0SFdxS3VvRk0vQjVVVHkxVnNRSEpYTTY4NlJYTE0vUVBBUFpZbjFQa291cU13cUxobXg0CjJWdUx2ZUZ2NFZhK2dsc284NTRTTTlXQmc5dm5rRXBGc2JHMkd6UDE0enkrSmlpTlBSL3NGMHExWWFRNTJpcE8KYnY0QUFKZkp2NXVKUHRqdU9QZk9tZE5ES09XcmRjYW9pbTBUSTZGMzZGL0dLenRMU3NTek9XNnMyZGM3K1h0NworbkMxUmxWdFdBNmxJUXVvd0ovMklDbENjOXRGVjJHQVdJZDBhc09JZlcxYm9lNXl5WmY3MEhjQ0F3RUFBYU5oCk1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLa01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSRXdPNUFLbHVrLzg5eGVuNGRFcnh5MjRzZwpYekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZG1WSFhQMnFEdUpzTi9Jbi9FaUs3OWM1OFpwVGhacnZzNmpyCmVKbDAxaCtzVzlzYXFSaUczU3lkSW9hL3kyUTNVQnNiZjdFMUJOWExnbS8vVmJQb3d5Zm9kSjdqd1hlVkI4WE0Kdk43a2JtamlKQkRqM3lhQjJkMFJjZVF6bnlERGNqVWFWbEphbXJhZVFlaFZvN3VRZWVFdEpKb0YrTjFYZ09jTgpnTllQV1UrcWEvOXEvYkIzZDNra1MvdWcrZnlMTVRMRW9UMFpkRVZvdHM4YnNHV1lUSzEyNjhxczgxWldGOWxFCk1qbG1pcUtBL0lZVm5FSVFKQmRKdXUzRzZQY0ppd2xjZjdUVEFOUk9LYWtBTU1nUVJ0ZTd6QWJNOGwyMS9tUWgKRjBKSkhoT1Z5Nm9FOU5PVHJlTXBKNnRVdlRSb09KSG9kaXI4Y3R1Zldmb095U3NHYnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==

      service:
        name: my-release-kubernetes-policy-controller
        namespace: default
        path: "/v1/admit"
