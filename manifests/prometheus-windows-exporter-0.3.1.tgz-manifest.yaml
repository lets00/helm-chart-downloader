---
# Source: prometheus-windows-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-prometheus-windows-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-windows-exporter-0.3.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-windows-exporter
    app.kubernetes.io/name: prometheus-windows-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.25.1"
---
# Source: prometheus-windows-exporter/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-prometheus-windows-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-windows-exporter-0.3.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-windows-exporter
    app.kubernetes.io/name: prometheus-windows-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.25.1"
data:
  config.yml: |
    collectors:
      enabled: '[defaults],memory,container'
---
# Source: prometheus-windows-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-prometheus-windows-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-windows-exporter-0.3.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-windows-exporter
    app.kubernetes.io/name: prometheus-windows-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.25.1"
  annotations:
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - port: 9182
      targetPort: metrics
      protocol: TCP
      appProtocol: http
      name: metrics
  selector:
    app.kubernetes.io/name: prometheus-windows-exporter
    app.kubernetes.io/instance: my-release
---
# Source: prometheus-windows-exporter/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-release-prometheus-windows-exporter
  namespace: default
  labels:
    helm.sh/chart: prometheus-windows-exporter-0.3.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: prometheus-windows-exporter
    app.kubernetes.io/name: prometheus-windows-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.25.1"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-windows-exporter
      app.kubernetes.io/instance: my-release
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        helm.sh/chart: prometheus-windows-exporter-0.3.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: metrics
        app.kubernetes.io/part-of: prometheus-windows-exporter
        app.kubernetes.io/name: prometheus-windows-exporter
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.25.1"
    spec:
      automountServiceAccountToken: false
      securityContext:
        windowsOptions:
          hostProcess: true
          runAsUserName: NT AUTHORITY\system
      initContainers:
        - name: configure-firewall
          image: ghcr.io/prometheus-community/windows-exporter:0.25.1
          command: [ "powershell" ]
          args: [ "New-NetFirewallRule", "-DisplayName", "'windows-exporter'", "-Direction", "inbound", "-Profile", "Any", "-Action", "Allow", "-LocalPort", "9182", "-Protocol", "TCP" ]
      serviceAccountName: my-release-prometheus-windows-exporter
      containers:
        - name: windows-exporter
          image: ghcr.io/prometheus-community/windows-exporter:0.25.1
          imagePullPolicy: IfNotPresent
          args:
            - --config.file=%CONTAINER_SANDBOX_MOUNT_POINT%/config.yml
            - --collector.textfile.directories=%CONTAINER_SANDBOX_MOUNT_POINT%
            - --web.listen-address=:9182
          env:
          ports:
            - name: metrics
              containerPort: 9182
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              path: /
              port: 9182
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              path: /
              port: 9182
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: config
              mountPath: /config.yml
              subPath: config.yml
      hostNetwork: true
      hostPID: true
      nodeSelector:
        kubernetes.io/os: windows
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        - name: config
          configMap:
            name: my-release-prometheus-windows-exporter
