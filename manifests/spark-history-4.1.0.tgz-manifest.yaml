---
# Source: spark-history/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-spark-history
  labels:
    helm.sh/chart: spark-history-4.1.0
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: spark-history/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-spark-history
  labels:
    helm.sh/chart: spark-history-4.1.0
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: my-release-spark-history
  namespace: default
---
# Source: spark-history/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-spark-history
  labels:
    helm.sh/chart: spark-history-4.1.0
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: my-release
---
# Source: spark-history/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-spark-history
  labels:
    helm.sh/chart: spark-history-4.1.0
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spark-history
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spark-history
        app.kubernetes.io/instance: my-release
    spec:
      volumes:
        - name: home
          emptyDir: {}
        - name: my-release-spark-history-data
          emptyDir: {}
        - name: config-coresite
          configMap:
            name: default
      serviceAccountName: my-release-spark-history
      securityContext:
        {}
      containers:
        - name: spark-history
          securityContext:
            {}
          image: "inseefrlab/jupyter-datascience:py3.9.7-spark3.2.0"
          command: ["/bin/sh","-c"]
          args: ["/data/onyxia-init.sh /opt/spark/bin/spark-class org.apache.spark.deploy.history.HistoryServer"]
          imagePullPolicy: IfNotPresent        
          env:
            - name: SPARK_HISTORY_OPTS
              value: "-Dspark.history.fs.logDirectory=file://tmp/spark-logs/ -Dcom.amazonaws.sdk.disableCertChecking=false"
          envFrom:
          ports:
            - name: http
              containerPort: 18080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - mountPath: /data
              name: my-release-spark-history-data
            - mountPath: /home/jovyan/work
              name: home
            - mountPath: /opt/hadoop/etc/hadoop/core-site.xml
              subPath: core-site.xml
              name: config-coresite
      initContainers:
        - name: standard-init
          image: "busybox"
          command: ["/bin/sh","-c"]
          args: ["wget -O /data/onyxia-init.sh https://git.lab.sspcloud.fr/innovation/plateforme-onyxia/services-ressources/-/raw/master/onyxia-init.sh && chmod +x /data/onyxia-init.sh"]
          volumeMounts:
          - mountPath: /data
            name: my-release-spark-history-data
---
# Source: spark-history/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-spark-history
  labels:
    helm.sh/chart: spark-history-4.1.0
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
spec:
  tls:
    - hosts:
        - "chart-example.local"
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-spark-history
                port: 
                  number: 80
---
# Source: spark-history/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-spark-history-test-connection"
  labels:
    helm.sh/chart: spark-history-4.1.0
    app.kubernetes.io/name: spark-history
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-spark-history:80']
  restartPolicy: Never
