---
# Source: botkube/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-botkube-sa
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: botkube/templates/communicationsecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-botkube-communication-secret
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    botkube.io/config-watch: "true"
stringData:
  comm_config.yaml: |
    # Communication settings
    communications:
      default-group:
        discord:
          botID: DISCORD_BOT_ID
          channels:
            default:
              bindings:
                executors:
                - k8s-default-tools
                sources:
                - k8s-err-events
                - k8s-recommendation-events
              id: DISCORD_CHANNEL_ID
              notification:
                disabled: false
          enabled: false
          token: DISCORD_TOKEN
        elasticsearch:
          awsSigning:
            awsRegion: us-east-1
            enabled: false
            roleArn: ""
          enabled: false
          indices:
            default:
              bindings:
                sources:
                - k8s-err-events
                - k8s-recommendation-events
              name: botkube
              replicas: 0
              shards: 1
              type: botkube-event
          password: ELASTICSEARCH_PASSWORD
          server: ELASTICSEARCH_ADDRESS
          skipTLSVerify: false
          username: ELASTICSEARCH_USERNAME
        mattermost:
          botName: Botkube
          channels:
            default:
              bindings:
                executors:
                - k8s-default-tools
                sources:
                - k8s-err-events
                - k8s-recommendation-events
              name: MATTERMOST_CHANNEL
              notification:
                disabled: false
          enabled: false
          team: MATTERMOST_TEAM
          token: MATTERMOST_TOKEN
          url: MATTERMOST_SERVER_URL
        slack:
          channels:
            default:
              bindings:
                executors:
                - k8s-default-tools
                sources:
                - k8s-err-events
                - k8s-recommendation-events
              name: SLACK_CHANNEL
              notification:
                disabled: false
          enabled: false
          token: ""
        socketSlack:
          appToken: ""
          botToken: ""
          channels:
            default:
              bindings:
                executors:
                - k8s-default-tools
                sources:
                - k8s-all-events
              name: SLACK_CHANNEL
            kubeslice:
              bindings:
                executors:
                - k8s-default-tools
                sources:
                - k8s-controller-events
                - k8s-worker-events
              name: SLACK_CHANNEL
          enabled: false
        teams:
          appID: APPLICATION_ID
          appPassword: APPLICATION_PASSWORD
          bindings:
            executors:
            - k8s-default-tools
            sources:
            - k8s-err-events
            - k8s-recommendation-events
          botName: Botkube
          enabled: false
          messagePath: /bots/teams
          port: 3978
        webhook:
          bindings:
            sources:
            - k8s-err-events
            - k8s-recommendation-events
          enabled: false
          url: WEBHOOK_URL
---
# Source: botkube/templates/global-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-botkube-global-config
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    botkube.io/config-watch: "true"
data:
  global_config.yaml: |
    executors:
      k8s-default-tools:
        botkube/helm:
          config:
            defaultNamespace: default
            helmCacheDir: /tmp/helm/.cache
            helmConfigDir: /tmp/helm/
            helmDriver: secret
          context:
            defaultNamespace: default
            rbac:
              group:
                prefix: ""
                static:
                  values:
                  - botkube-plugins-default
                type: Static
          enabled: false
        botkube/kubectl:
          config:
            defaultNamespace: default
          context:
            defaultNamespace: default
            rbac:
              group:
                prefix: ""
                static:
                  values:
                  - botkube-plugins-default
                type: Static
          enabled: false

    aliases:
      k:
        command: kubectl
        displayName: Kubectl alias
      kc:
        command: kubectl
        displayName: Kubectl alias

    actions:
      describe-created-resource:
        bindings:
          executors:
          - k8s-default-tools
          sources:
          - k8s-create-events
        command: kubectl describe {{ .Event.TypeMeta.Kind | lower }}{{ if .Event.Namespace
          }} -n {{ .Event.Namespace }}{{ end }} {{ .Event.Name }}
        displayName: Describe created resource
        enabled: false
      show-logs-on-error:
        bindings:
          executors:
          - k8s-default-tools
          sources:
          - k8s-err-with-logs-events
        command: kubectl logs {{ .Event.TypeMeta.Kind | lower }}/{{ .Event.Name }} -n {{
          .Event.Namespace }}
        displayName: Show logs on error
        enabled: false

    settings:
      clusterName: not-configured
      healthPort: 2114
      lifecycleServer:
        enabled: true
        port: 2113
      log:
        disableColors: false
        level: info
      persistentConfig:
        runtime:
          configMap:
            annotations: {}
            name: botkube-runtime-config
          fileName: _runtime_state.yaml
        startup:
          configMap:
            annotations: {}
            name: botkube-startup-config
          fileName: _startup_state.yaml
      systemConfigMap:
        name: botkube-system
      upgradeNotifier: true

    sources:
      k8s-all-events:
        botkube/kubernetes:
          config:
            annotations: {}
            event:
              message:
                exclude: []
                include: []
              reason:
                exclude: []
                include: []
              types:
              - create
              - delete
              - error
            filters:
              nodeEventsChecker: true
              objectAnnotationChecker: true
            labels: {}
            namespaces:
              include:
              - .*
            resources:
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: v1/pods
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: v1/services
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: networking.k8s.io/v1/ingresses
            - type: v1/nodes
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: v1/namespaces
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: v1/persistentvolumes
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: v1/persistentvolumeclaims
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: v1/configmaps
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: rbac.authorization.k8s.io/v1/roles
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: rbac.authorization.k8s.io/v1/rolebindings
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: rbac.authorization.k8s.io/v1/clusterrolebindings
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: rbac.authorization.k8s.io/v1/clusterroles
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: apps/v1/daemonsets
              updateSetting:
                fields:
                - spec.template.spec.containers[*].image
                - status.numberReady
                includeDiff: true
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: batch/v1/jobs
              updateSetting:
                fields:
                - spec.template.spec.containers[*].image
                - status.conditions[*].type
                includeDiff: true
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: apps/v1/deployments
              updateSetting:
                fields:
                - spec.template.spec.containers[*].image
                - status.availableReplicas
                includeDiff: true
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: apps/v1/statefulsets
              updateSetting:
                fields:
                - spec.template.spec.containers[*].image
                - status.readyReplicas
                includeDiff: true
          context:
            defaultNamespace: default
            rbac:
              group:
                prefix: ""
                static:
                  values:
                  - botkube-plugins-default
                type: Static
          enabled: true
        displayName: Kubernetes Info
      k8s-controller-events:
        botkube/kubernetes:
          config:
            annotations: {}
            event:
              message:
                exclude: []
                include: []
              reason:
                exclude: []
                include: []
              types:
              - create
              - delete
              - error
            filters:
              nodeEventsChecker: true
              objectAnnotationChecker: true
            labels: {}
            namespaces:
              include:
              - .*
            resources:
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: controller.kubeslice.io/v1alpha1/projects
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: controller.kubeslice.io/v1alpha1/clusters
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: controller.kubeslice.io/v1alpha1/serviceexportconfigs
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: controller.kubeslice.io/v1alpha1/sliceconfigs
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: controller.kubeslice.io/v1alpha1/sliceqosconfigs
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: worker.kubeslice.io/v1alpha1/workerserviceimports
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: worker.kubeslice.io/v1alpha1/workersliceconfigs
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: worker.kubeslice.io/v1alpha1/workerslicegwrecyclers
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: worker.kubeslice.io/v1alpha1/workerslicegateways
          context:
            defaultNamespace: default
            rbac:
              group:
                prefix: ""
                static:
                  values:
                  - botkube-plugins-default
                type: Static
          enabled: false
        displayName: Kubernetes Info
      k8s-create-events:
        botkube/kubernetes:
          config:
            event:
              types:
              - create
            namespaces:
              include:
              - .*
            resources:
            - type: v1/pods
            - type: v1/services
            - type: networking.k8s.io/v1/ingresses
            - type: v1/nodes
            - type: v1/namespaces
            - type: v1/configmaps
            - type: apps/v1/deployments
            - type: apps/v1/statefulsets
            - type: apps/v1/daemonsets
            - type: batch/v1/jobs
          context:
            defaultNamespace: default
            rbac:
              group:
                prefix: ""
                static:
                  values:
                  - botkube-plugins-default
                type: Static
          enabled: true
        displayName: Kubernetes Resource Created Events
      k8s-err-events:
        botkube/kubernetes:
          config:
            event:
              types:
              - error
            namespaces:
              include:
              - .*
            resources:
            - type: v1/pods
            - type: v1/services
            - type: networking.k8s.io/v1/ingresses
            - type: v1/nodes
            - type: v1/namespaces
            - type: v1/persistentvolumes
            - type: v1/persistentvolumeclaims
            - type: v1/configmaps
            - type: rbac.authorization.k8s.io/v1/roles
            - type: rbac.authorization.k8s.io/v1/rolebindings
            - type: rbac.authorization.k8s.io/v1/clusterrolebindings
            - type: rbac.authorization.k8s.io/v1/clusterroles
            - type: apps/v1/deployments
            - type: apps/v1/statefulsets
            - type: apps/v1/daemonsets
            - type: batch/v1/jobs
          context:
            defaultNamespace: default
            rbac:
              group:
                prefix: ""
                static:
                  values:
                  - botkube-plugins-default
                type: Static
          enabled: true
        displayName: Kubernetes Errors
      k8s-err-with-logs-events:
        botkube/kubernetes:
          config:
            event:
              types:
              - error
            namespaces:
              include:
              - .*
            resources:
            - type: v1/pods
            - type: apps/v1/deployments
            - type: apps/v1/statefulsets
            - type: apps/v1/daemonsets
            - type: batch/v1/jobs
          context:
            defaultNamespace: default
            rbac:
              group:
                prefix: ""
                static:
                  values:
                  - botkube-plugins-default
                type: Static
          enabled: true
        displayName: Kubernetes Errors for resources with logs
      k8s-recommendation-events:
        botkube/kubernetes:
          config:
            namespaces:
              include:
              - .*
            recommendations:
              ingress:
                backendServiceValid: true
                tlsSecretValid: true
              pod:
                labelsSet: true
                noLatestImageTag: true
          context:
            defaultNamespace: default
            rbac:
              group:
                prefix: ""
                static:
                  values:
                  - botkube-plugins-default
                type: Static
          enabled: true
        displayName: Kubernetes Recommendations
      k8s-worker-events:
        botkube/kubernetes:
          config:
            annotations: {}
            event:
              message:
                exclude: []
                include: []
              reason:
                exclude: []
                include: []
              types:
              - create
              - delete
              - error
            filters:
              nodeEventsChecker: true
              objectAnnotationChecker: true
            labels: {}
            namespaces:
              include:
              - .*
            resources:
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: networking.kubeslice.io/v1beta1/serviceexports
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: networking.kubeslice.io/v1beta1/serviceimports
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: networking.kubeslice.io/v1beta1/slicegateways
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: networking.kubeslice.io/v1beta1/slices
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: networkservicemesh.io/v1/networkserviceendpoints
            - annotations: {}
              event:
                message:
                  exclude: []
                  include: []
                reason:
                  exclude: []
                  include: []
                types:
                - create
                - delete
                - error
              labels: {}
              name:
                exclude: []
                include: []
              namespaces:
                exclude: []
                include:
                - ^kubeslice.*
              type: networkservicemesh.io/v1/networkservices
          context:
            defaultNamespace: default
            rbac:
              group:
                prefix: ""
                static:
                  values:
                  - botkube-plugins-default
                type: Static
          enabled: false
        displayName: Kubernetes Info
      prometheus:
        botkube/prometheus:
          config:
            alertStates:
            - firing
            - pending
            - inactive
            ignoreOldAlerts: true
            log:
              level: info
            url: http://localhost:9090
          enabled: false

    configWatcher:
      enabled: true
      image:
        pullPolicy: IfNotPresent
        registry: ghcr.io
        repository: kubeshop/k8s-sidecar
        tag: ignore-initial-events
      initialSyncTimeout: 0
      tmpDir: /tmp/watched-cfg/

    plugins:
      cacheDir: /tmp
      repositories:
        botkube:
          url: https://github.com/kubeshop/botkube/releases/download/v1.0.0/plugins-index.yaml

    analytics:
      disable: false
---
# Source: botkube/templates/persistent-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: botkube-runtime-config
  annotations:
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    botkube.io/config-watch: "true"
data:
  # This file has a special prefix to load it as the last config file during Botkube startup.
  _runtime_state.yaml: |
    actions:
      describe-created-resource:
        enabled: false
      show-logs-on-error:
        enabled: false
    communications:
      default-group:
        discord:
          channels:
            default:
              bindings:
                sources:
                - k8s-err-events
                - k8s-recommendation-events
        mattermost:
          channels:
            default:
              bindings:
                sources:
                - k8s-err-events
                - k8s-recommendation-events
        slack:
          channels:
            default:
              bindings:
                sources:
                - k8s-err-events
                - k8s-recommendation-events
        socketSlack:
          channels:
            default:
              bindings:
                sources:
                - k8s-all-events
            kubeslice:
              bindings:
                sources:
                - k8s-controller-events
                - k8s-worker-events
        teams:
          bindings:
            sources:
              - k8s-err-events
              - k8s-recommendation-events
---
# Source: botkube/templates/persistent-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: botkube-startup-config
  annotations:
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    botkube.io/config-watch: "false" # Explicitly don't watch this ConfigMap
data:
  # This file has a special prefix to load it as the last config file during Botkube startup.
  _startup_state.yaml: |
    communications:
      default-group:
        discord:
          channels:
            default:
              notification:
                disabled: false
        mattermost:
          channels:
            default:
              notification:
                disabled: false
        slack:
          channels:
            default:
              notification:
                disabled: false
        socketSlack:
          channels:
            default:
              notification:
                disabled: false
            kubeslice:
              notification:
                disabled: false
---
# Source: botkube/templates/system-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: botkube-system
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    botkube.io/config-watch: "false" # Explicitly don't watch this ConfigMap
---
# Source: botkube/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-botkube-clusterrole
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - get
    - watch
    - list
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get"]
  - apiGroups:
    - ""
    resources:
    - users
    - groups
    - serviceaccounts
    verbs:
    - impersonate
---
# Source: botkube/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: botkube-plugins-default
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - get
    - watch
    - list
---
# Source: botkube/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-botkube-clusterrolebinding
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-botkube-clusterrole
subjects:
- kind: ServiceAccount
  name: my-release-botkube-sa
  namespace: default
---
# Source: botkube/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: botkube-plugins-default
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: botkube-plugins-default
subjects:
- kind: Group
  name: botkube-plugins-default
  apiGroup: rbac.authorization.k8s.io
---
# Source: botkube/templates/systemroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-botkube-system
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["update", "create"]
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "watch", "list"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get"]

  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["patch"]
---
# Source: botkube/templates/systemroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-botkube-system
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-botkube-system
subjects:
- kind: ServiceAccount
  name: my-release-botkube-sa
  namespace: default
---
# Source: botkube/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-botkube
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app: botkube
spec:
  type: ClusterIP
  ports:
  - name: "lifecycle"
    port: 2113
    targetPort: 2113
  selector:
    app: botkube
---
# Source: botkube/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-botkube
  labels:
    app.kubernetes.io/name: botkube
    helm.sh/chart: botkube-v1.0.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    component: controller
    app: botkube
  annotations:
spec:
  replicas: 1
  strategy:
    type: Recreate # RollingUpdate doesn't work with SocketSlack integration as it requires a single connection to Slack API.
  selector:
    matchLabels:
      component: controller
      app: botkube
  template:
    metadata:
      labels:
        component: controller
        app: botkube
      annotations:
        checksum/config: 7f0d5d08056ec8f59b0c36108846e9fc64745e64a6a4fa1eb3f87dd42a970c40
    spec:
      serviceAccountName: my-release-botkube-sa
      containers:
        - name: botkube
          image: "ghcr.io/kubeshop/botkube:v1.0.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
          
          readinessProbe:
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 5
            initialDelaySeconds: 1
            timeoutSeconds: 1
            httpGet:
              path: /healthz
              port: 2114
          livenessProbe:
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
            initialDelaySeconds: 1
            timeoutSeconds: 1
            httpGet:
              path: /healthz
              port: 2114
          volumeMounts:
            - name: cache-volume
              mountPath: /tmp
            - name: config-volume
              mountPath: "/config"
            - name: startup-config
              mountPath: "/startup-config"
            - name: cfg-watcher-tmp
              mountPath: /tmp/watched-cfg/
            - name: cache
              mountPath: "/.kube/cache"
          env:
            - name: BOTKUBE_CONFIG_PATHS
              value: "/config/global_config.yaml,/config/comm_config.yaml,/config/_runtime_state.yaml,/startup-config/_startup_state.yaml"
            - name: BOTKUBE_SETTINGS_METRICS__PORT
              value: "2112"
            - name: BOTKUBE_SETTINGS_SYSTEM__CONFIG__MAP_NAMESPACE
              value: "default"
            - name: BOTKUBE_SETTINGS_PERSISTENT__CONFIG_RUNTIME_CONFIG__MAP_NAMESPACE
              value: "default"
            - name: BOTKUBE_SETTINGS_PERSISTENT__CONFIG_STARTUP_CONFIG__MAP_NAMESPACE
              value: "default"
            - name: BOTKUBE_CONFIG__WATCHER_DEPLOYMENT_NAMESPACE
              value: "default"
            - name: BOTKUBE_CONFIG__WATCHER_DEPLOYMENT_NAME
              value: "my-release-botkube"
            - name: CONFIG_PROVIDER_ENDPOINT
              value: https://api.botkube.io/graphql
            
            - name: LOG_LEVEL_SOURCE_BOTKUBE_KUBERNETES
              value: debug
        - name: cfg-watcher
          image: "ghcr.io/kubeshop/k8s-sidecar:ignore-initial-events"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: FOLDER
              value: /tmp/watched-cfg/
            - name: RESOURCE
              value: "both"
            - name: LOG_LEVEL
              value: "DEBUG"
            - name: NAMESPACE
              value: "default"
            - name: LABEL
              value: "botkube.io/config-watch"
            - name: LABEL_VALUE
              value: "true"
            - name: REQ_URL
              value: "http://my-release-botkube:2113/reload"
            - name: REQ_IGNORE_INITIAL_EVENT
              value: "true"
            - name: REQ_METHOD
              value: "POST"
            - name: IGNORE_ALREADY_PROCESSED
              value: "true"
          volumeMounts:
            - name: cfg-watcher-tmp
              mountPath: /tmp/watched-cfg/
      volumes:
        - name: cache-volume
          emptyDir: {}
        - name: cfg-watcher-tmp
          emptyDir: {}
        - name: config-volume
          projected:
            sources:
            - configMap:
                name: my-release-botkube-global-config
            - secret:
                name: my-release-botkube-communication-secret
            - configMap:
                name: botkube-runtime-config
        # Startup ConfigMap need to be mounted separately to avoid triggering Config Watcher.
        # When using `projected.sources`, each file is removed and added when any ConfigMap/Secret changes.
        - name: startup-config
          configMap:
            name: botkube-startup-config
        
        - name: cache
          emptyDir: {}
      securityContext:
        runAsUser: 101
        runAsGroup: 101
