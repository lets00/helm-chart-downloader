---
# Source: docker-registry-gc/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-docker-registry-gc
  labels:
    helm.sh/chart: docker-registry-gc-0.1.9
    app.kubernetes.io/name: docker-registry-gc
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.8"
    app.kubernetes.io/managed-by: Helm
---
# Source: docker-registry-gc/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-docker-registry-gc-secret
  labels:
    helm.sh/chart: docker-registry-gc-0.1.9
    app.kubernetes.io/name: docker-registry-gc
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.8"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
---
# Source: docker-registry-gc/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-docker-registry-gc
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get","list","patch","update","watch"]
- apiGroups: ["apps"]
  resources: ["deployments/status"]
  verbs: ["get","list","watch"]
---
# Source: docker-registry-gc/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-docker-registry-gc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-docker-registry-gc
subjects:
- kind: ServiceAccount
  name: my-release-docker-registry-gc
---
# Source: docker-registry-gc/templates/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: my-release-docker-registry-gc
  labels:
    helm.sh/chart: docker-registry-gc-0.1.9
    app.kubernetes.io/name: docker-registry-gc
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.8"
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "0 4 * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: docker-registry-gc
        app.kubernetes.io/instance: my-release
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: docker-registry-gc
            app.kubernetes.io/instance: my-release
        spec:
          serviceAccountName: my-release-docker-registry-gc
          restartPolicy: OnFailure
          containers:
            - name: docker-registry-gc
              image: "gmelillo/registry:0.1.8"
              imagePullPolicy: Always
              volumeMounts:
              - name: my-release-docker-registry-gc-config
                mountPath: /etc/docker/registry
              env:
              envFrom:
              - secretRef:
                  name: my-release-docker-registry-gc-secret
              resources:
                {}
          volumes:
            - configMap:
                defaultMode: 420
                name: registry-config
              name: my-release-docker-registry-gc-config
