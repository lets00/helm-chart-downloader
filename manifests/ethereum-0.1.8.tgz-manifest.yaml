---
# Source: ethereum/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-ethereum
  labels:
    helm.sh/chart: ethereum-0.1.8
    app.kubernetes.io/name: ethereum
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.13.14"
    app.kubernetes.io/managed-by: Helm
---
# Source: ethereum/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-ethereum-jwt
type: Opaque
data:
  jwt.hex: ZWNiMjJiYzI0ZTdkNDA2MWY3ZWQ2OTBjY2Q1ODQ2ZDdkNzNmNWQyYjk3MzMyNjdlMTJmNTY3OTAzOThkOTA4YQ==
---
# Source: ethereum/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-ethereum
  labels:
    helm.sh/chart: ethereum-0.1.8
    app.kubernetes.io/name: ethereum
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.13.14"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8551
      targetPort: 8551
      protocol: TCP
      name: auth
    - port: 8545
      targetPort: 8545
      protocol: TCP
      name: http
    - port: 6060
      targetPort: 6060
      protocol: 
      name: metrics
    - port: 8546
      targetPort: 8546
      protocol: TCP
      name: ws
  selector:
    app.kubernetes.io/name: ethereum
    app.kubernetes.io/instance: my-release
---
# Source: ethereum/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-ethereum
  labels:
    helm.sh/chart: ethereum-0.1.8
    app.kubernetes.io/name: ethereum
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.13.14"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ethereum
      app.kubernetes.io/instance: my-release
  serviceName: my-release-ethereum
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ethereum
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-ethereum
      securityContext:
        {}
      containers:
        - name: ethereum
          securityContext:
            {}
          image: "ethereum/client-go:v1.13.14"
          resources:
            {}
          command:
            - geth
          args:
            - --sepolia
            - --datadir=/ethereum-data/data
            - --http
            - --http.port=8545
            - --http.addr=0.0.0.0
            - --http.vhosts=*
            - --allow-insecure-unlock
            - --http.api=eth,net,engine,admin,web3
            - --authrpc.addr=0.0.0.0
            - --authrpc.vhosts=*
            - --authrpc.jwtsecret=/data/jwt.hex
          ports:
            - name: auth
              containerPort: 8551
              protocol: TCP
            - name: http
              containerPort: 8545
              protocol: TCP
            - name: metrics
              containerPort: 6060
              protocol: 
            - name: ws
              containerPort: 8546
              protocol: TCP

          
          volumeMounts:
            - name: storage
              mountPath: /ethereum-data
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      volumes:
        - name: jwt
          secret:
            secretName: my-release-ethereum-jwt
        - name: storage
          emptyDir: {}
---
# Source: ethereum/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-ethereum-test-connection"
  labels:
    helm.sh/chart: ethereum-0.1.8
    app.kubernetes.io/name: ethereum
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.13.14"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
        - --location
        - --request
        - POST
        - 'my-release-ethereum:8545/'
        - --header
        - 'Content-Type: application/json'
        - --data-raw
        - '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}'
  restartPolicy: Never
