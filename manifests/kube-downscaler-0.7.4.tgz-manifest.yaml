---
# Source: kube-downscaler/templates/serviceaccount.yaml
# You need to use that account for your dd-agent DaemonSet
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: kube-downscaler
    helm.sh/chart: kube-downscaler-0.7.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "23.2.0-6-gc9b88e8"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kube-downscaler
---
# Source: kube-downscaler/templates/clusterrole.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kube-downscaler
    helm.sh/chart: kube-downscaler-0.7.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "23.2.0-6-gc9b88e8"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kube-downscaler
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - watch
  - list
  - update
  - patch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - watch
  - list
  - update
  - patch
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - get
  - watch
  - list
  - update
  - patch
- apiGroups:
  - zalando.org
  resources:
  - stacks
  verbs:
  - get
  - watch
  - list
  - update
  - patch
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - get
  - watch
  - list
  - update
  - patch
- apiGroups:
  - keda.sh
  resources:
  - scaledobjects
  verbs:
  - get
  - watch
  - list
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - create
  - watch
  - list
  - update
  - patch
---
# Source: kube-downscaler/templates/clusterrolebinding.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: kube-downscaler
    helm.sh/chart: kube-downscaler-0.7.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "23.2.0-6-gc9b88e8"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kube-downscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "my-release-kube-downscaler"
subjects:
- kind: ServiceAccount
  name: "my-release-kube-downscaler"
  namespace: default
---
# Source: kube-downscaler/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kube-downscaler
  labels:
    app.kubernetes.io/name: kube-downscaler
    helm.sh/chart: kube-downscaler-0.7.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "23.2.0-6-gc9b88e8"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-downscaler
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-downscaler
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-kube-downscaler
      containers:
      - name: my-release-kube-downscaler
        image: "hjacobs/kube-downscaler:23.2.0-6-gc9b88e8"
        securityContext:
          {}
        args:
        - --interval=60
        - --enable-events
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 50m
            memory: 200Mi
          requests:
            cpu: 50m
            memory: 200Mi
