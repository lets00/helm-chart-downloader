---
# Source: gemini/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-gemini-controller
  labels:
    app: gemini
    app.kubernetes.io/name: gemini
    helm.sh/chart: gemini-2.1.3
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: gemini/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-gemini-controller
  labels:
    app: gemini
    app.kubernetes.io/name: gemini
    helm.sh/chart: gemini-2.1.3
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - gemini.fairwinds.com
    resources:
      - snapshotgroups
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - snapshot.storage.k8s.io
      - ''
    resources:
      - volumesnapshots
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - create
      - update
      - delete
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - create
      - delete
---
# Source: gemini/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-gemini-controller
  labels:
    app: gemini
    app.kubernetes.io/name: gemini
    helm.sh/chart: gemini-2.1.3
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-gemini-controller
subjects:
  - kind: ServiceAccount
    name: my-release-gemini-controller
    namespace: default
---
# Source: gemini/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-gemini-controller
  labels:
    app: gemini
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gemini
  template:
    metadata:
      labels:
        app: gemini
    spec:
      serviceAccountName: my-release-gemini-controller
      containers:
      - command:
        - gemini
        - -v
        - "5"
        image: "quay.io/fairwinds/gemini:2.0"
        imagePullPolicy: 'Always'
        name: gemini-controller
        resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 25m
              memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
