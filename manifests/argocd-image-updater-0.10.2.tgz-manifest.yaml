---
# Source: argocd-image-updater/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-argocd-image-updater
  namespace: "default"
  labels:
    helm.sh/chart: argocd-image-updater-0.10.2
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: argocd-image-updater/templates/configmap-sshconfig.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: argocd-image-updater-0.10.2
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.1"
    app.kubernetes.io/managed-by: Helm
  name: argocd-image-updater-ssh-config
  namespace: "default"
---
# Source: argocd-image-updater/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: argocd-image-updater-0.10.2
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.1"
    app.kubernetes.io/managed-by: Helm
  name: argocd-image-updater-config
  namespace: "default"
data:
  log.level: "info"
  kube.events: "false"
---
# Source: argocd-image-updater/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: argocd-image-updater-0.10.2
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-argocd-image-updater
  namespace: "default"
rules:
  - apiGroups:
      - ''
    resources:
      - secrets
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - applications
    verbs:
      - get
      - list
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
# Source: argocd-image-updater/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: argocd-image-updater-0.10.2
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-argocd-image-updater
  namespace: "default"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-argocd-image-updater
subjects:
- kind: ServiceAccount
  name: my-release-argocd-image-updater
  namespace: "default"
---
# Source: argocd-image-updater/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-argocd-image-updater
  namespace: "default"
  labels:
    helm.sh/chart: argocd-image-updater-0.10.2
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-image-updater
      app.kubernetes.io/instance: my-release
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: 449a854e7c7435da8451227f29ba207548becf4e59e793dfef21b696023223ef
      labels:
        app.kubernetes.io/name: argocd-image-updater
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-argocd-image-updater
      securityContext:
        {}
      containers:
        - name: argocd-image-updater
          args:
            - run
          env:
          - name: APPLICATIONS_API
            valueFrom:
              configMapKeyRef:
                key: applications_api
                name: argocd-image-updater-config
                optional: true
          - name: ARGOCD_GRPC_WEB
            valueFrom:
              configMapKeyRef:
                key: argocd.grpc_web
                name: argocd-image-updater-config
                optional: true
          - name: ARGOCD_SERVER
            valueFrom:
              configMapKeyRef:
                key: argocd.server_addr
                name: argocd-image-updater-config
                optional: true
          - name: ARGOCD_INSECURE
            valueFrom:
              configMapKeyRef:
                key: argocd.insecure
                name: argocd-image-updater-config
                optional: true
          - name: ARGOCD_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: argocd.plaintext
                name: argocd-image-updater-config
                optional: true
          - name: ARGOCD_TOKEN
            valueFrom:
              secretKeyRef:
                key: argocd.token
                name: argocd-image-updater-secret
                optional: true
          - name: IMAGE_UPDATER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: log.level
                name: argocd-image-updater-config
                optional: true
          - name: GIT_COMMIT_USER
            valueFrom:
              configMapKeyRef:
                key: git.user
                name: argocd-image-updater-config
                optional: true
          - name: GIT_COMMIT_EMAIL
            valueFrom:
              configMapKeyRef:
                key: git.email
                name: argocd-image-updater-config
                optional: true
          - name: IMAGE_UPDATER_KUBE_EVENTS
            valueFrom:
              configMapKeyRef:
                key: kube.events
                name: argocd-image-updater-config
                optional: true
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: "quay.io/argoprojlabs/argocd-image-updater:v0.13.1"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
            
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 30
          resources:
            {}
          volumeMounts:
          - mountPath: /app/config
            name: image-updater-conf
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/.ssh
            name: ssh-config
          - mountPath: /tmp
            name: tmp
      volumes:
      - configMap:
          items:
          - key: registries.conf
            path: registries.conf
          - key: git.commit-message-template
            path: commit.template
          name: argocd-image-updater-config
          optional: true
        name: image-updater-conf
      - configMap:
          name: argocd-ssh-known-hosts-cm
          optional: true
        name: ssh-known-hosts
      - configMap:
          name: argocd-image-updater-ssh-config
          optional: true
        name: ssh-config
      - emptyDir: {}
        name: tmp
