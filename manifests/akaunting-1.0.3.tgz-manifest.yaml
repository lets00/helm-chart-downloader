---
# Source: akaunting/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.1.2
    helm.sh/chart: mariadb-14.0.3
automountServiceAccountToken: false
---
# Source: akaunting/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.1.2
    helm.sh/chart: mariadb-14.0.3
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    datadir=/bitnami/mariadb/data
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    slow_query_log=0
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: akaunting/charts/mariadb/templates/primary/initialization-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mariadb-init-scripts
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.1.2
    helm.sh/chart: mariadb-14.0.3
    app.kubernetes.io/component: primary
data:
  custom-initdb.sql: GRANT ALL PRIVILEGES ON *.* TO 'akaunting'@'%' WITH GRANT OPTION;
---
# Source: akaunting/templates/common.yaml
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-data
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: my-release
    app.kubernetes.io/version: 3.0.15
    helm.sh/chart: akaunting-1.0.3
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
---
# Source: akaunting/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.1.2
    helm.sh/chart: mariadb-14.0.3
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/component: primary
---
# Source: akaunting/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: my-release
    app.kubernetes.io/service: my-release
    app.kubernetes.io/version: 3.0.15
    helm.sh/chart: akaunting-1.0.3
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: my-release
---
# Source: akaunting/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: my-release
    app.kubernetes.io/version: 3.0.15
    helm.sh/chart: akaunting-1.0.3
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/name: my-release
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels: 
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: my-release
    spec: 
      enableServiceLinks: true
      serviceAccountName: default
      automountServiceAccountToken: true
      hostIPC: false
      hostNetwork: false
      hostPID: false
      dnsPolicy: ClusterFirst
      initContainers: 
        - command:
          - sh
          - -c
          - if [ ! -d /pvc/* ]; then cp -R /var/www/html/* /pvc ; fi
          image: akaunting/akaunting:3.0.15
          imagePullPolicy: IfNotPresent
          name: copyfiles
          volumeMounts:
          - mountPath: /var/www/html
            name: data
      containers: 
        - env:
          - name: ADMIN_EMAIL
            value: me@company.com
          - name: ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: akaunting-secrets
          - name: APP_URL
            value: http://localhost
          - name: COMPANY_EMAIL
            value: my@company.com
          - name: COMPANY_NAME
            value: My Company
          - name: DB_HOST
            value: akaunting-mariadb
          - name: DB_NAME
            value: akaunting
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mariadb-password
                name: mariadb-secrets
          - name: DB_PORT
            value: "3306"
          - name: DB_PREFIX
            value: asd_
          - name: DB_USERNAME
            value: akaunting
          - name: LOCALE
            value: en-US
          - name: TZ
            value: UTC
          image: akaunting/akaunting:3.0.15
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          name: main
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          volumeMounts:
          - mountPath: /var/www/html
            name: data
      volumes: 
        - name: data
          persistentVolumeClaim:
            claimName: my-release-data
---
# Source: akaunting/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/version: 11.1.2
    helm.sh/chart: mariadb-14.0.3
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/component: primary
  serviceName: my-release-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 1acec9620dccad0a54643c3229936706c3a53be765176b66f1826dd375f13285
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb
        app.kubernetes.io/version: 11.1.2
        helm.sh/chart: mariadb-14.0.3
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: my-release-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:11.1.2-debian-11-r1
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-secrets
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "akaunting"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-secrets
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "akaunting"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: my-release-mariadb
        - name: custom-init-scripts
          configMap:
            name: my-release-mariadb-init-scripts
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/instance: my-release
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: akaunting/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mariadb-secrets
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    app: akaunting
type: Opaque
data:
  mariadb-root-password: "cGxlYXNlQ2hhbmdlTWU="
  mariadb-replication-password: "cGxlYXNlQ2hhbmdlTWU="
  mariadb-password: "cGxlYXNlQ2hhbmdlTWU="
---
# Source: akaunting/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: akaunting-secrets
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    app: akaunting
type: Opaque
data:
  admin-password: "cGxlYXNlQ2hhbmdlTWU="
