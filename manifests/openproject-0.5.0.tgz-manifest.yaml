---
# Source: openproject/templates/PersistentVolumeClaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: openproject-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: "5G"
---
# Source: openproject/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: openproject-svc
  labels:
    helm.sh/chart: openproject-0.5.0
    app-name:  openproject
    component: "project-management-server"
    managed-by: chynten
    created-by: chynten
    version: "12.0.2"
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app-name:  openproject
---
# Source: openproject/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openproject-deployment
  labels:
    helm.sh/chart: openproject-0.5.0
    app-name:  openproject
    component: "project-management-server"
    managed-by: chynten
    created-by: chynten
    version: "12.0.2"
spec:
  replicas: 1
  revisionHistoryLimit: 
  selector:
    matchLabels:
      app-name:  openproject
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app-name:  openproject
    spec:
      restartPolicy: Always
      initContainers:
        - name: openproject-seeder
          image: "openproject/community:12.0.2"
          imagePullPolicy: IfNotPresent
          command: ['./docker/prod/seeder']
          env:
            - name: OPENPROJECT_RAILS__RELATIVE__URL__ROOT
              value: ""
            - name: DATABASE_URL
              value: postgres://user:password@postgres-svc/openproject?pool=20&encoding=unicode&reconnect=true
            - name: RAILS_MIN_THREADS
              value: "4"
            - name: RAILS_MAX_THREADS
              value: "16"
            - name: USE_PUMA
              value: "true"
            - name: IMAP_ENABLED
              value: "false"
          volumeMounts:
            - name: data
              mountPath: /var/openproject/assets
              subPath: openproject
      containers:
        - name: openproject
          image: "openproject/community:12.0.2"
          imagePullPolicy: IfNotPresent
          command: [ './docker/prod/proxy' ]
          ports:
          - containerPort: 8080
          env:
            - name: OPENPROJECT_RAILS__RELATIVE__URL__ROOT
              value: ""
            - name: DATABASE_URL
              value: postgres://user:password@postgres-svc/openproject?pool=20&encoding=unicode&reconnect=true
            - name: RAILS_MIN_THREADS
              value: "4"
            - name: RAILS_MAX_THREADS
              value: "16"
            - name: USE_PUMA
              value: "true"
            - name: IMAP_ENABLED
              value: "false"
          volumeMounts:
            - name: data
              mountPath: /var/openproject/assets
              subPath: openproject
        #- name: openproject-memcached
        #  image: "openproject/community:12.0.2"
        #  imagePullPolicy: IfNotPresent
        - name: openproject-web
          image: "openproject/community:12.0.2"
          imagePullPolicy: IfNotPresent
          command: ['./docker/prod/web']
          env:
            - name: OPENPROJECT_RAILS__RELATIVE__URL__ROOT
              value: ""
            - name: DATABASE_URL
              value: postgres://user:password@postgres-svc/openproject?pool=20&encoding=unicode&reconnect=true
            - name: RAILS_MIN_THREADS
              value: "4"
            - name: RAILS_MAX_THREADS
              value: "16"
            - name: USE_PUMA
              value: "true"
            - name: IMAP_ENABLED
              value: "false"
          volumeMounts:
          - name: data
            mountPath: /var/openproject/assets
            subPath: openproject
        - name: openproject-worker
          image: "openproject/community:12.0.2"
          imagePullPolicy: IfNotPresent
          command: ['./docker/prod/worker']
          env:
            - name: OPENPROJECT_RAILS__RELATIVE__URL__ROOT
              value: ""
            - name: DATABASE_URL
              value: postgres://user:password@postgres-svc/openproject?pool=20&encoding=unicode&reconnect=true
            - name: RAILS_MIN_THREADS
              value: "4"
            - name: RAILS_MAX_THREADS
              value: "16"
            - name: USE_PUMA
              value: "true"
            - name: IMAP_ENABLED
              value: "false"
          volumeMounts:
            - name: data
              mountPath: /var/openproject/assets
              subPath: openproject
        - name: openproject-cron
          image: "openproject/community:12.0.2"
          imagePullPolicy: IfNotPresent
          command: ['./docker/prod/cron']
          env:
            - name: OPENPROJECT_RAILS__RELATIVE__URL__ROOT
              value: ""
            - name: DATABASE_URL
              value: postgres://user:password@postgres-svc/openproject?pool=20&encoding=unicode&reconnect=true
            - name: RAILS_MIN_THREADS
              value: "4"
            - name: RAILS_MAX_THREADS
              value: "16"
            - name: USE_PUMA
              value: "true"
            - name: IMAP_ENABLED
              value: "false"
          volumeMounts:
            - name: data
              mountPath: /var/openproject/assets
              subPath: openproject
      securityContext:
        null
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: openproject-pvc
---
# Source: openproject/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: openproject-ingress
  labels:
    helm.sh/chart: openproject-0.5.0
    app-name:  openproject
    component: "project-management-server"
    managed-by: chynten
    created-by: chynten
    version: "12.0.2"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.org/client-max-body-size: 50m
spec:
  tls:
    - hosts:
        - "pm.example.com"
      secretName: openproject-letsencrypt-certificate
  rules:
    - host: "pm.example.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: openproject-svc
                port:
                  number: 8080
