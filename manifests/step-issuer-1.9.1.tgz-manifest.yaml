---
# Source: step-issuer/templates/rbac/clusterRole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "my-release-step-issuer-manager-role"
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificaterequests"]
  verbs: ["get", "list", "update", "watch"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificaterequests/status"]
  verbs: ["get", "patch", "update"]
- apiGroups: ["certmanager.step.sm"]
  resources: ["stepissuers"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["certmanager.step.sm"]
  resources: ["stepclusterissuers"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["certmanager.step.sm"]
  resources: ["stepissuers/status"]
  verbs: ["get", "patch", "update"]
- apiGroups: ["certmanager.step.sm"]
  resources: ["stepclusterissuers/status"]
  verbs: ["get", "patch", "update"]
- apiGroups: ["cert-manager.io"]
  resources: ["signers"]
  verbs: ["approve"]
  resourceNames:
    - stepissuers.certmanager.step.sm/*
    - stepclusterissuers.certmanager.step.sm/*
- apiGroups: [ "coordination.k8s.io" ]
  resources: [ "leases" ]
  verbs: [ "create", "get", "list", "update" ]
---
# Source: step-issuer/templates/rbac/clusterRole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "my-release-step-issuer-proxy-role"
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
---
# Source: step-issuer/templates/rbac/clusterRole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "my-release-step-issuer-approver-role"
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - signers
  verbs:
  - approve
  resourceNames:
  - stepissuers.certmanager.step.sm/*
  - stepclusterissuers.certmanager.step.sm/*
---
# Source: step-issuer/templates/rbac/clusterRoleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "my-release-step-issuer-manager-rolebinding"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "my-release-step-issuer-manager-role"
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: step-issuer/templates/rbac/clusterRoleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "my-release-step-issuer-proxy-rolebinding"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "my-release-step-issuer-proxy-role"
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: step-issuer/templates/rbac/clusterRoleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "my-release-step-issuer-approver-rolebinding"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "my-release-step-issuer-approver-role"
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
# Source: step-issuer/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "my-release-step-issuer-leader-election-role"
  namespace: default
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get" ,"list" ,"watch" ,"create" ,"update" ,"patch" ,"delete"]
- apiGroups: [""]
  resources: ["configmaps/status"]
  verbs: ["get", "update", "patch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "create", "update"]
---
# Source: step-issuer/templates/rbac/roleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "my-release-step-issuer-leader-election-rolebinding"
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "my-release-step-issuer-leader-election-role"
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: step-issuer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-step-issuer"
  namespace: default
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scheme: "https"
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager
    helm.sh/chart: step-issuer-1.9.1
    app.kubernetes.io/name: step-issuer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.9.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/name: step-issuer
    app.kubernetes.io/instance: my-release
    control-plane: controller-manager
---
# Source: step-issuer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-step-issuer"
  namespace: default
  labels:
    control-plane: controller-manager
    helm.sh/chart: step-issuer-1.9.1
    app.kubernetes.io/name: step-issuer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.9.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: step-issuer
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        control-plane: controller-manager
        helm.sh/chart: step-issuer-1.9.1
        app.kubernetes.io/name: step-issuer
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.9.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
      - image: "gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0"
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        args: ["--secure-listen-address=0.0.0.0:8443", "--upstream=http://127.0.0.1:8080/", "--logtostderr=true", "--v=10"]
        ports:
        - containerPort: 8443
          name: https
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
      - image: "cr.step.sm/smallstep/step-issuer:0.9.1"
        imagePullPolicy: IfNotPresent
        name: manager
        args: [
          "--metrics-addr=127.0.0.1:8080",
          "--enable-leader-election",
        ]
        command: ["/manager"]
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
      volumes:
      terminationGracePeriodSeconds: 10
      securityContext:
        {}
