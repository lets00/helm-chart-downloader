---
# Source: api-mapper/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-api-mapper
  labels:
    helm.sh/chart: api-mapper-1.2.0
    app.kubernetes.io/name: api-mapper
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: api-mapper/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-api-mapper
  labels:
    helm.sh/chart: api-mapper-1.2.0
    app.kubernetes.io/name: api-mapper
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "create", "update", "patch"]
---
# Source: api-mapper/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-api-mapper
  labels:
    helm.sh/chart: api-mapper-1.2.0
    app.kubernetes.io/name: api-mapper
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-api-mapper
subjects:
  - kind: ServiceAccount
    name: my-release-api-mapper
    namespace: default
---
# Source: api-mapper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-api-mapper
  labels:
    helm.sh/chart: api-mapper-1.2.0
    app.kubernetes.io/name: api-mapper
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: api-mapper
    app.kubernetes.io/instance: my-release
---
# Source: api-mapper/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-api-mapper
  labels:
    helm.sh/chart: api-mapper-1.2.0
    app.kubernetes.io/name: api-mapper
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api-mapper
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api-mapper
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-api-mapper
      securityContext:
        {}
      containers:
        - name: api-mapper
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: "glenndehaan/api-mapper:latest"
          imagePullPolicy: Always
          env:
            - name: KUBERNETES_DEPLOYMENT
              value: "my-release"
            - name: KUBERNETES_NAMESPACE
              value: "default"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
          readinessProbe:
            httpGet:
              path: /_health
              port: http
          resources:
            limits:
              memory: 150Mi
            requests:
              memory: 150Mi
