---
# Source: operator/charts/minio/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-minio
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.13
    helm.sh/chart: minio-13.4.6
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: minio
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    # Allow inbound connections
    - ports:
        - port: 9001
        - port: 9000
---
# Source: operator/charts/minio/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-minio
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.13
    helm.sh/chart: minio-13.4.6
automountServiceAccountToken: false
secrets:
  - name: my-release-minio
---
# Source: operator/templates/rbac/serviceaccount.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: ServiceAccount
metadata:
  name: securecodebox-operator
  annotations: 
        {}
  labels: 
        {}
---
# Source: operator/charts/minio/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-minio
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.13
    helm.sh/chart: minio-13.4.6
type: Opaque
data:
  root-user: "YWRtaW4="
  root-password: "cGFzc3dvcmQ="
---
# Source: operator/charts/minio/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-minio
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.13
    helm.sh/chart: minio-13.4.6
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: operator/templates/rbac/auth_proxy_client_clusterrole.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metrics-reader
rules:
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
# Source: operator/templates/rbac/auth_proxy_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: proxy-role
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources:
      - tokenreviews
    verbs: ["create"]
  - apiGroups: ["authorization.k8s.io"]
    resources:
      - subjectaccessreviews
    verbs: ["create"]
---
# Source: operator/templates/rbac/cascadingrule_editor_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to edit cascadingrules.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cascadingrule-editor-role
rules:
  - apiGroups:
      - cascading.securecodebox.io
    resources:
      - cascadingrules
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cascading.securecodebox.io
    resources:
      - cascadingrules/status
    verbs:
      - get
---
# Source: operator/templates/rbac/cascadingrule_viewer_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to view cascadingrules.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cascadingrule-viewer-role
rules:
  - apiGroups:
      - cascading.securecodebox.io
    resources:
      - cascadingrules
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cascading.securecodebox.io
    resources:
      - cascadingrules/status
    verbs:
      - get
---
# Source: operator/templates/rbac/parsedefinition_editor_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to edit parsedefinitions.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: parsedefinition-editor-role
rules:
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - parsedefinitions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - parsedefinitions/status
    verbs:
      - get
---
# Source: operator/templates/rbac/parsedefinition_viewer_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to view parsedefinitions.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: parsedefinition-viewer-role
rules:
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - parsedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - parsedefinitions/status
    verbs:
      - get
---
# Source: operator/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - execution.securecodebox.io
  resources:
  - parsedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - execution.securecodebox.io
  resources:
  - scancompletionhooks
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - execution.securecodebox.io
  resources:
  - scans
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - execution.securecodebox.io
  resources:
  - scans/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - execution.securecodebox.io
  resources:
  - scantypes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - execution.securecodebox.io
  resources:
  - scheduledscans
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - execution.securecodebox.io
  resources:
  - scheduledscans/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - execution.securecodebox.io/status
  resources:
  - scheduledscans
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - get
  - list
  - update
  - watch
---
# Source: operator/templates/rbac/scan_editor_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to edit scans.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scan-editor-role
rules:
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scans
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scans/status
    verbs:
      - get
---
# Source: operator/templates/rbac/scan_viewer_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to view scans.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scan-viewer-role
rules:
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scans
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scans/status
    verbs:
      - get
---
# Source: operator/templates/rbac/scancompletionhook_editor_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to edit scancompletionhooks.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scancompletionhook-editor-role
rules:
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scancompletionhooks
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scancompletionhooks/status
    verbs:
      - get
---
# Source: operator/templates/rbac/scancompletionhook_viewer_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to view scancompletionhooks.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scancompletionhook-viewer-role
rules:
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scancompletionhooks
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scancompletionhooks/status
    verbs:
      - get
---
# Source: operator/templates/rbac/scantype_editor_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to edit scantypes.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scantype-editor-role
rules:
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scantypes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scantypes/status
    verbs:
      - get
---
# Source: operator/templates/rbac/scantype_viewer_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to view scantypes.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scantype-viewer-role
rules:
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scantypes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scantypes/status
    verbs:
      - get
---
# Source: operator/templates/rbac/scheduledscan_editor_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to edit scheduledscans.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scheduledscan-editor-role
rules:
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scheduledscans
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scheduledscans/status
    verbs:
      - get
---
# Source: operator/templates/rbac/scheduledscan_viewer_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions for end users to view scheduledscans.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scheduledscan-viewer-role
rules:
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scheduledscans
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - execution.securecodebox.io
    resources:
      - scheduledscans/status
    verbs:
      - get
---
# Source: operator/templates/rbac/auth_proxy_role_binding.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: proxy-role
subjects:
  - kind: ServiceAccount
    name: securecodebox-operator
    namespace: default
---
# Source: operator/templates/rbac/role_binding.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
  - kind: ServiceAccount
    name: securecodebox-operator
    namespace: default
---
# Source: operator/templates/rbac/leader_election_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: operator/templates/rbac/leader_election_role_binding.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
  - kind: ServiceAccount
    name: securecodebox-operator
    namespace: default
---
# Source: operator/charts/minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-minio
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.13
    helm.sh/chart: minio-13.4.6
spec:
  type: ClusterIP
  ports:
    - name: minio-api
      port: 9000
      targetPort: minio-api
      nodePort: null
    - name: minio-console
      port: 9001
      targetPort: minio-console
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: minio
---
# Source: operator/templates/rbac/auth_proxy_service.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: controller-manager-metrics-service
  namespace: default
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    control-plane: controller-manager
---
# Source: operator/charts/minio/templates/standalone/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-minio
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.2.13
    helm.sh/chart: minio-13.4.6
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: minio
        app.kubernetes.io/version: 2024.2.13
        helm.sh/chart: minio-13.4.6
      annotations:
        checksum/credentials-secret: 851b2b33775f66e62fd4a2ace0137a1f1ace68ba4a2a8371fe65fcaaa870f425
    spec:
      
      serviceAccountName: my-release-minio
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: minio
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: []
        sysctls: []
      containers:
        - name: minio
          image: docker.io/bitnami/minio:2024.2.13-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MINIO_SCHEME
              value: "http"
            - name: MINIO_FORCE_NEW_KEYS
              value: "no"
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: my-release-minio
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-minio
                  key: root-password
            - name: MINIO_DEFAULT_BUCKETS
              value: securecodebox
            - name: MINIO_BROWSER
              value: "on"
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
            - name: MINIO_CONSOLE_PORT_NUMBER
              value: "9001"
          envFrom:
          ports:
            - name: minio-api
              containerPort: 9000
              protocol: TCP
            - name: minio-console
              containerPort: 9001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: minio-api
              scheme: "HTTP"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: minio-api
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests:
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/minio/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: my-release-minio
---
# Source: operator/templates/manager/manager.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: securecodebox-controller-manager
  namespace: default
  labels:
    control-plane: securecodebox-controller-manager
spec:
  selector:
    matchLabels:
      control-plane: securecodebox-controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: securecodebox-controller-manager
    spec:
      serviceAccountName: securecodebox-operator
      securityContext:
        
        {}
      containers:
        - command:
            - /manager
          args:
          - --leader-elect
          image: "docker.io/securecodebox/operator:4.5.0"
          imagePullPolicy: IfNotPresent
          name: manager
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: TELEMETRY_ENABLED
              value: "true"
            - name: VERSION
              value: "4.5.0"
            # TODO: integrate with cert manager and auto gen a cert for minio
            - name: S3_USE_SSL
              value: "false"
            - name: S3_ENDPOINT
              value: "my-release-minio.default.svc.cluster.local"
            - name: S3_PORT
              value: '9000'
            - name:  MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "my-release-minio"
                  key: root-user
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "my-release-minio"
                  key: root-password
            - name: S3_BUCKET
              value: securecodebox
            - name: LURKER_IMAGE
              value: "docker.io/securecodebox/lurker:4.5.0"
            - name: LURKER_PULL_POLICY
              value: IfNotPresent
            - name: URL_EXPIRATION_SCAN
              value: "12h"
            - name: URL_EXPIRATION_PARSER
              value: "1h"
            - name: URL_EXPIRATION_HOOK
              value: "1h"
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      terminationGracePeriodSeconds: 10
---
# Source: operator/templates/rbac/role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0
