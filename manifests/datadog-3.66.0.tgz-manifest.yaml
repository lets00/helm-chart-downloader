---
# Source: datadog/templates/cluster-agent-rbac.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  labels:
    app: "my-release-datadog"
    chart: "datadog-3.66.0"
    heritage: "Helm"
    release: "my-release"
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
  name: my-release-datadog-cluster-agent
  namespace: default
---
# Source: datadog/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: my-release-datadog
  namespace: default
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7" # end range $role := .Values.datadog.secretBackend.roles
---
# Source: datadog/templates/secret-api-key.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-datadog
  namespace: default
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
type: Opaque
data:
  api-key: "TUlTU0lORw=="
---
# Source: datadog/templates/secret-cluster-agent-token.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-datadog-cluster-agent
  namespace: default
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
type: Opaque
data:
  token: "N0g5VTlDdkFQRnFPdDRxTk9IclRWaTlSY1RXSTJGQko="
---
# Source: datadog/templates/cluster-agent-confd-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-datadog-cluster-agent-confd
  namespace: default
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
  annotations:
    checksum/confd-config: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
data:
  kubernetes_state_core.yaml.default: |-
    init_config:
    instances:
      - collectors:
        - secrets
        - configmaps
        - nodes
        - pods
        - services
        - resourcequotas
        - replicationcontrollers
        - limitranges
        - persistentvolumeclaims
        - persistentvolumes
        - namespaces
        - endpoints
        - daemonsets
        - deployments
        - replicasets
        - statefulsets
        - cronjobs
        - jobs
        - horizontalpodautoscalers
        - poddisruptionbudgets
        - storageclasses
        - volumeattachments
        - ingresses
        labels_as_tags:
          {}
        annotations_as_tags:
          {}
---
# Source: datadog/templates/install_info-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-datadog-installinfo
  namespace: default
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
  annotations:
    checksum/install_info: 4b7ec9616456fc79cafc6e8f64bda4671d2b86f7e48196ab808e5edc4d2e42b8
data:
  install_info: |
    ---
    install_method:
      tool: helm
      tool_version: Helm
      installer_version: datadog-3.66.0
---
# Source: datadog/templates/kpi-telemetry-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-datadog-kpi-telemetry-configmap
  namespace: default
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
data:
  install_type: k8s_manual
  install_id: "071b90e1-52b6-4d50-af3f-86339334a6e7"
  install_time: "1718494206"
---
# Source: datadog/templates/cluster-agent-rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
  name: my-release-datadog-cluster-agent
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  - nodes
  - namespaces
  - componentstatuses
  - limitranges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
- apiGroups: ["quota.openshift.io"]
  resources:
  - clusterresourcequotas
  verbs:
  - get
  - list
- apiGroups:
  - "autoscaling"
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  - my-release-datadogtoken  # Kubernetes event collection state
  - datadogtoken  # Kept for backward compatibility with agent <7.37.0
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  - my-release-datadog-leader-election  # Leader election token
  - datadog-leader-election  # Kept for backward compatibility with agent <7.37.0
  verbs:
  - get
  - update
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  resourceNames:
  - my-release-datadog-leader-election  # Leader election token
  verbs:
  - get
  - update
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - leases
  verbs:
  - create
- apiGroups:  # To create the leader election token and hpa events
  - ""
  resources:
  - configmaps
  - events
  verbs:
  - create
- nonResourceURLs:
  - "/version"
  - "/healthz"
  verbs:
  - get
- apiGroups:  # to get the kube-system namespace UID and generate a cluster ID
  - ""
  resources:
  - namespaces
  resourceNames:
  - "kube-system"
  verbs:
  - get
- apiGroups:  # To create the cluster-id configmap
  - ""
  resources:
  - configmaps
  resourceNames:
  - "datadog-cluster-id"
  verbs:
  - create
  - get
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  - persistentvolumeclaims
  - serviceaccounts
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - "apps"
  resources:
  - deployments
  - replicasets
  - daemonsets
  - statefulsets
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - "batch"
  resources:
  - cronjobs
  - jobs
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - networkpolicies
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
  - roles
  - rolebindings
  - clusterroles
  - clusterrolebindings
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - "storage.k8s.io"
  resources:
  - storageclasses
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - list
  - get
  - watch
- apiGroups:
    - apiextensions.k8s.io
  resources:
    - customresourcedefinitions
  verbs:
    - list
    - get
    - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  resourceNames:
    - "datadog-webhook"
  verbs: ["get", "list", "watch", "update"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs: ["create"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get"]
- apiGroups: ["apps"]
  resources: ["statefulsets", "replicasets", "deployments", "daemonsets"]
  verbs: ["get"]
- apiGroups:
  - "security.openshift.io"
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - my-release-datadog-cluster-agent
  - hostnetwork
---
# Source: datadog/templates/kube-state-metrics-core-rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
  name: my-release-datadog-ksm-core
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  - nodes
  - pods
  - services
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  - events
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  - volumeattachments
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - list
  - watch
- apiGroups:
    - apiextensions.k8s.io
  resources:
    - customresourcedefinitions
  verbs:
    - list
    - watch
---
# Source: datadog/templates/rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRole
metadata:
  name: my-release-datadog
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
rules:
- nonResourceURLs:
  - "/metrics"
  - "/metrics/slis"
  verbs:
  - get
- apiGroups:  # Kubelet connectivity
  - ""
  resources:
  - nodes/metrics
  - nodes/spec
  - nodes/proxy
  - nodes/stats
  verbs:
  - get
- apiGroups:  # leader election check
  - ""
  resources:
  - endpoints
  verbs:
  - get
- apiGroups:
  - "security.openshift.io"
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - my-release-datadog
  - hostaccess
  - privileged
- apiGroups:  # leader election check
  - "coordination.k8s.io"
  resources:
  - leases
  verbs:
  - get
---
# Source: datadog/templates/cluster-agent-rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
  name: my-release-datadog-cluster-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-datadog-cluster-agent
subjects:
  - kind: ServiceAccount
    name: my-release-datadog-cluster-agent
    namespace: default
---
# Source: datadog/templates/kube-state-metrics-core-rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
  name: my-release-datadog-ksm-core
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-datadog-ksm-core
subjects:
  - kind: ServiceAccount
    name: my-release-datadog-cluster-agent
    namespace: default
---
# Source: datadog/templates/rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRoleBinding
metadata:
  name: my-release-datadog
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-datadog
subjects:
  - kind: ServiceAccount
    name: my-release-datadog
    namespace: default
---
# Source: datadog/templates/cluster-agent-rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: Role
metadata:
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
  name: my-release-datadog-cluster-agent-main
  namespace: default
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "update", "create"]
---
# Source: datadog/templates/dca-helm-values-rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: Role
metadata:
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
  name: my-release-datadog-dca-flare
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
---
# Source: datadog/templates/cluster-agent-rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
  name: "my-release-datadog-cluster-agent-main"
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-datadog-cluster-agent-main
subjects:
  - kind: ServiceAccount
    name: my-release-datadog-cluster-agent
    namespace: default
---
# Source: datadog/templates/dca-helm-values-rbac.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
  name: my-release-datadog-dca-flare
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-datadog-dca-flare
subjects:
  - kind: ServiceAccount
    name: my-release-datadog-cluster-agent
    namespace: default
---
# Source: datadog/templates/agent-services.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-datadog-cluster-agent
  namespace: default
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
spec:
  type: ClusterIP
  selector:
    app: my-release-datadog-cluster-agent
  ports:
  - port: 5005
    name: agentport
    protocol: TCP
---
# Source: datadog/templates/agent-services.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-datadog-cluster-agent-admission-controller
  namespace: default
  labels:
    app: "my-release-datadog"
    chart: "datadog-3.66.0"
    release: "my-release"
    heritage: "Helm"
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
spec:
  selector:
    app: my-release-datadog-cluster-agent
  ports:
  - port: 443
    targetPort: 8000
    name: datadog-webhook
    protocol: TCP
---
# Source: datadog/templates/agent-services.yaml
apiVersion: v1
kind: Service

metadata:
  name: my-release-datadog
  namespace: default
  labels:
    app: "my-release-datadog"
    chart: "datadog-3.66.0"
    release: "my-release"
    heritage: "Helm"
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
spec:
  selector:
    app: my-release-datadog
  ports:
    - protocol: UDP
      port: 8125
      targetPort: 8125
      name: dogstatsdport
    - protocol: TCP
      port: 8126
      targetPort: 8126
      name: traceport
  internalTrafficPolicy: Local
---
# Source: datadog/templates/cluster-agent-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-datadog-cluster-agent
  namespace: default
  labels:
    helm.sh/chart: 'datadog-3.66.0'
    app.kubernetes.io/name: "my-release-datadog"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "7"
    app.kubernetes.io/component: cluster-agent
    
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: my-release-datadog-cluster-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-release-datadog"
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: cluster-agent
        admission.datadoghq.com/enabled: "false"
        app: my-release-datadog-cluster-agent
        
      name: my-release-datadog-cluster-agent
      annotations:
        checksum/clusteragent_token: c4434afc99aae859dcbf75266c45c36e5af2434700f4eec48ffa08f2c1ef75c0
        checksum/clusteragent-configmap: 221286f928dddca57731547158d13cb22bf7d0723be0c116354d42ce29d4324d
        checksum/api_key: 49998773c4a6a5eeb593826620aa0ff98b33bc4ac1b7cabe1a77bf230d705c3f
        checksum/application_key: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/install_info: 4b7ec9616456fc79cafc6e8f64bda4671d2b86f7e48196ab808e5edc4d2e42b8
    spec:
      serviceAccountName: my-release-datadog-cluster-agent
      automountServiceAccountToken: true
      initContainers:
      - name: init-volume
        image: "gcr.io/datadoghq/cluster-agent:7.54.0"
        imagePullPolicy: IfNotPresent
        command:
          - cp
          - -r
        args:
          - /etc/datadog-agent
          - /opt
        volumeMounts:
          - name: config
            mountPath: /opt/datadog-agent
      containers:
      - name: cluster-agent
        image: "gcr.io/datadoghq/cluster-agent:7.54.0"
        imagePullPolicy: IfNotPresent
        resources:
          {}
        ports:
        - containerPort: 5005
          name: agentport
          protocol: TCP
        - containerPort: 5000
          name: agentmetrics
          protocol: TCP
        - containerPort: 8000
          name: datadog-webhook
          protocol: TCP
        env:
          - name: DD_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: DD_HEALTH_PORT
            value: "5556"
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: "my-release-datadog"
                key: api-key
                optional: true
          - name: DD_LANGUAGE_DETECTION_ENABLED
            value: "false"
          - name: DD_LANGUAGE_DETECTION_REPORTING_ENABLED
            value: "false"
          - name: KUBERNETES
            value: "yes"
          - name: DD_ADMISSION_CONTROLLER_ENABLED
            value: "true"
          - name: DD_ADMISSION_CONTROLLER_WEBHOOK_NAME
            value: "datadog-webhook"
          - name: DD_ADMISSION_CONTROLLER_MUTATE_UNLABELLED
            value: "false"
          - name: DD_ADMISSION_CONTROLLER_SERVICE_NAME
            value: my-release-datadog-cluster-agent-admission-controller
          - name: DD_ADMISSION_CONTROLLER_INJECT_CONFIG_MODE
            value: socket
          - name: DD_ADMISSION_CONTROLLER_INJECT_CONFIG_LOCAL_SERVICE_NAME
            value: my-release-datadog
          - name: DD_ADMISSION_CONTROLLER_FAILURE_POLICY
            value: "Ignore"
          - name: DD_ADMISSION_CONTROLLER_PORT
            value: "8000"
          
          
          - name: DD_REMOTE_CONFIGURATION_ENABLED
            value: "false"
          - name: DD_CLUSTER_CHECKS_ENABLED
            value: "true"
          - name: DD_EXTRA_CONFIG_PROVIDERS
            value: "kube_endpoints kube_services"
          - name: DD_EXTRA_LISTENERS
            value: "kube_endpoints kube_services"
          - name: DD_LOG_LEVEL
            value: "INFO"
          - name: DD_LEADER_ELECTION
            value: "true"
          - name: DD_LEADER_ELECTION_DEFAULT_RESOURCE
            value: "configmap"
          - name: DD_LEADER_LEASE_NAME
            value: my-release-datadog-leader-election
          - name: DD_CLUSTER_AGENT_TOKEN_NAME
            value: my-release-datadogtoken
          - name: DD_COLLECT_KUBERNETES_EVENTS
            value: "true"
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: my-release-datadog-cluster-agent
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: my-release-datadog-cluster-agent
                key: token
          - name: DD_CLUSTER_AGENT_COLLECT_KUBERNETES_TAGS
            value: "false"
          - name: DD_KUBE_RESOURCES_NAMESPACE
            value: default
          - name: CHART_RELEASE_NAME
            value: "my-release"
          - name: AGENT_DAEMONSET
            value: my-release-datadog
          - name: CLUSTER_AGENT_DEPLOYMENT
            value: my-release-datadog-cluster-agent
          - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
            value: "true"
          - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
            value: "true"
          - name: DD_CLUSTER_AGENT_LANGUAGE_DETECTION_PATCHER_ENABLED
            value: "false"
          - name: DD_INSTRUMENTATION_INSTALL_TIME
            valueFrom:
              configMapKeyRef:
                name: my-release-datadog-kpi-telemetry-configmap
                key: install_time
          - name: DD_INSTRUMENTATION_INSTALL_ID
            valueFrom:
              configMapKeyRef:
                name: my-release-datadog-kpi-telemetry-configmap
                key: install_id
          - name: DD_INSTRUMENTATION_INSTALL_TYPE
            valueFrom:
              configMapKeyRef:
                name: my-release-datadog-kpi-telemetry-configmap
                key: install_type
                              
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /live
            port: 5556
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /ready
            port: 5556
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: datadogrun
            mountPath: /opt/datadog-agent/run
            readOnly: false
          - name: varlog
            mountPath: /var/log/datadog
            readOnly: false
          - name: tmpdir
            mountPath: /tmp
            readOnly: false
          - name: installinfo
            subPath: install_info
            mountPath: /etc/datadog-agent/install_info
            readOnly: true
          - name: confd
            mountPath: /conf.d
            readOnly: true
          - name: config
            mountPath: /etc/datadog-agent
      volumes:
        - name: datadogrun
          emptyDir: {}
        - name: varlog
          emptyDir: {}
        - name: tmpdir
          emptyDir: {}
        - name: installinfo
          configMap:
            name: my-release-datadog-installinfo
        - name: confd
          configMap:
            name: my-release-datadog-cluster-agent-confd
            items:
            - key: kubernetes_state_core.yaml.default
              path: kubernetes_state_core.yaml.default
        - name: config
          emptyDir: {}
      affinity:
        # Prefer scheduling the cluster agents on different nodes
        # to guarantee that the standby instance can immediately take the lead from a leader running of a faulty node.
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: my-release-datadog-cluster-agent
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
