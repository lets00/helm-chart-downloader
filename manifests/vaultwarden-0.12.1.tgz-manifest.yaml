---
# Source: vaultwarden/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-vaultwarden
  labels:
    app.kubernetes.io/service: my-release-vaultwarden
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/version: 1.30.5-alpine
    helm.sh/chart: vaultwarden-0.12.1
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: vaultwarden
---
# Source: vaultwarden/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-vaultwarden
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/version: 1.30.5-alpine
    helm.sh/chart: vaultwarden-0.12.1
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vaultwarden
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vaultwarden
        app.kubernetes.io/instance: my-release
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsUser: 65534
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: my-release-vaultwarden
          image: ghcr.io/dani-garcia/vaultwarden:1.30.5-alpine
          imagePullPolicy: IfNotPresent
          env:
            - name: ADMIN_TOKEN
              value: ""
            - name: ROCKET_PORT
              value: "8080"
            - name: WEBSOCKET_ENABLED
              value: "false"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
