---
# Source: bee-localchain/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-bee-localchain
  labels:
    helm.sh/chart: bee-localchain-0.1.1
    app.kubernetes.io/name: bee-localchain
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: bee-localchain/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-bee-localchain
  labels:
    helm.sh/chart: bee-localchain-0.1.1
    app.kubernetes.io/name: bee-localchain
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8545
      targetPort: rpc
      protocol: TCP
      name: rpc
  selector:
    app.kubernetes.io/name: bee-localchain
    app.kubernetes.io/instance: my-release
---
# Source: bee-localchain/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-bee-localchain
  labels:
    helm.sh/chart: bee-localchain-0.1.1
    app.kubernetes.io/name: bee-localchain
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: bee-localchain
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bee-localchain
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-bee-localchain
      securityContext:
        {}
      containers:
        - name: bee-localchain
          securityContext:
            {}
          image: "ethersphere/bee-localchain:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: rpc
              containerPort: 8545
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: rpc
          readinessProbe:
            httpGet:
              path: /
              port: rpc
          resources:
            {}
