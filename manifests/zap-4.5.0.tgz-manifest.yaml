---
# Source: zap/templates/cascading-rules.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# We only want to import the default cascading rules if they are enabled
---
# Source: zap/templates/zap-parse-definition.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: "execution.securecodebox.io/v1"
kind: ParseDefinition
metadata:
  name: "zap-xml"
spec:
  image: "docker.io/securecodebox/parser-zap:4.5.0"
  imagePullPolicy: IfNotPresent
  ttlSecondsAfterFinished: 
  env:
    []
  scopeLimiterAliases:
    {}
  affinity:
    {}
  tolerations:
    []
---
# Source: zap/templates/zap-scan-type.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: "execution.securecodebox.io/v1"
kind: ScanType
metadata:
  name: "zap-baseline-scan"
spec:
  extractResults:
    type: zap-xml
    location: "/home/securecodebox/zap-results.xml"
  jobTemplate:
    spec:
      suspend: false
      backoffLimit: 3
      template:
        spec:
          restartPolicy: Never
          affinity:
            {}
          tolerations:
            []
          securityContext:
            {}
          containers:
            - name: zap-baseline-scan
              image: "softwaresecurityproject/zap-stable:2.14.0"
              imagePullPolicy: IfNotPresent
              command:
                - "zap-baseline.py"
                # Force Zap to always return a zero exit code. k8s would otherwise try to restart zap.
                - "-I"
                - "-x"
                # ZAP Baseline Script doesn't allow absolute paths...
                # Hacky workaround: specify a relative path to the `/zap/wrk` base dir.
                - "../../home/securecodebox/zap-results.xml"
              resources:
                {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - all
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: false
              env:
                []
              envFrom:
                []
              volumeMounts:
                - mountPath: /zap/wrk
                  name: zap-workdir
          volumes:
            - emptyDir: {}
              name: zap-workdir
---
# Source: zap/templates/zap-scan-type.yaml
apiVersion: "execution.securecodebox.io/v1"
kind: ScanType
metadata:
  name: "zap-api-scan"
spec:
  extractResults:
    type: zap-xml
    location: "/home/securecodebox/zap-results.xml"
  jobTemplate:
    spec:
      suspend: false
      template:
        spec:
          restartPolicy: Never
          affinity:
            {}
          tolerations:
            []
          securityContext:
            {}
          containers:
            - name: zap-api-scan
              image: "softwaresecurityproject/zap-stable:2.14.0"
              command:
                - "zap-api-scan.py"
                # Force Zap to always return a zero exit code. k8s would otherwise try to restart zap.
                - "-I"
                - "-x"
                # ZAP Baseline Script doesn't allow absolute paths...
                # Hacky workaround: specify a relative path to the `/zap/wrk` base dir.
                - "../../home/securecodebox/zap-results.xml"
              resources:
                {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - all
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: false
              env:
                []
              envFrom:
                []
              volumeMounts:
                - mountPath: /zap/wrk
                  name: zap-workdir
          volumes:
            - emptyDir: {}
              name: zap-workdir
---
# Source: zap/templates/zap-scan-type.yaml
apiVersion: "execution.securecodebox.io/v1"
kind: ScanType
metadata:
  name: "zap-full-scan"
spec:
  extractResults:
    type: zap-xml
    location: "/home/securecodebox/zap-results.xml"
  jobTemplate:
    spec:
      suspend: false
      template:
        spec:
          restartPolicy: Never
          affinity:
            {}
          tolerations:
            []
          securityContext:
            {}
          containers:
            - name: zap-full-scan
              image: "softwaresecurityproject/zap-stable:2.14.0"
              imagePullPolicy: IfNotPresent
              command:
                - "zap-full-scan.py"
                # Force Zap to always return a zero exit code. k8s would otherwise try to restart zap.
                - "-I"
                - "-x"
                # ZAP Baseline Script doesn't allow absolute paths...
                # Hacky workaround: specify a relative path to the `/zap/wrk` base dir.
                - "../../home/securecodebox/zap-results.xml"
              resources:
                {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - all
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: false
              env:
                []
              envFrom:
                []
              volumeMounts:
                - mountPath: /zap/wrk
                  name: zap-workdir
          volumes:
            - emptyDir: {}
              name: zap-workdir
---
# Source: zap/templates/zap-scan-type.yaml
apiVersion: "execution.securecodebox.io/v1"
kind: ScanType
metadata:
  name: "zap-automation-scan"
spec:
  extractResults:
    type: zap-xml
    location: "/home/securecodebox/zap-results.xml"
  jobTemplate:
    spec:
      suspend: false
      template:
        spec:
          restartPolicy: Never
          affinity:
            {}
          tolerations:
            []
          containers:
            - name: zap-automation-scan
              image: "softwaresecurityproject/zap-stable:2.14.0"
              imagePullPolicy: IfNotPresent
              command:
                - "zap.sh"
                - "-cmd"
              resources:
                {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - all
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: false
              env:
                []
              envFrom:
                []
              volumeMounts:
                - mountPath: /zap/wrk
                  name: zap-workdir
          volumes:
            - emptyDir: {}
              name: zap-workdir
