---
# Source: edp-argocd-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-edp-argocd-operator
  labels:
    helm.sh/chart: edp-argocd-operator-0.3.0-SNAPSHOT.2
    app.kubernetes.io/name: edp-argocd-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.0-SNAPSHOT.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: edp-argocd-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-edp-argocd-operator-role
  labels:
    helm.sh/chart: edp-argocd-operator-0.3.0-SNAPSHOT.2
    app.kubernetes.io/name: edp-argocd-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.0-SNAPSHOT.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/finalizers
  verbs:
  - update
- apiGroups:
  - v1.edp.epam.com
  resources:
  - argoapplications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - v1.edp.epam.com
  resources:
  - argoapplications/finalizers
  verbs:
  - update
- apiGroups:
  - v1.edp.epam.com
  resources:
  - argoapplications/status
  verbs:
  - get
  - patch
  - update
# permissions to do leader election.
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: edp-argocd-operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-edp-argocd-operator-rolebinding
  labels:
    helm.sh/chart: edp-argocd-operator-0.3.0-SNAPSHOT.2
    app.kubernetes.io/name: edp-argocd-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.0-SNAPSHOT.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-edp-argocd-operator-role
subjects:
- kind: ServiceAccount
  name: my-release-edp-argocd-operator
---
# Source: edp-argocd-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-edp-argocd-operator
  labels:
    helm.sh/chart: edp-argocd-operator-0.3.0-SNAPSHOT.2
    app.kubernetes.io/name: edp-argocd-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.0-SNAPSHOT.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: edp-argocd-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: edp-argocd-operator
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-edp-argocd-operator
      securityContext:
        runAsNonRoot: true
      containers:
        - command:
          - /manager
          args:
          - --leader-elect
          name: edp-argocd-operator
          securityContext:
            allowPrivilegeEscalation: false
          image: "epamedp/edp-argocd-operator:0.3.0-SNAPSHOT.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ARGOCD_URL
              valueFrom:
                secretKeyRef:
                  name: argocd-access
                  key: url
                  optional: false
            - name: ARGOCD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: argocd-access
                  key: auth-token
                  optional: false
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
