
---
# Source: kubedb-crd-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-crd-manager
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.1.0
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "0"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
automountServiceAccountToken:
---
# Source: kubedb-crd-manager/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-crd-manager
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.1.0
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "1"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
---
# Source: kubedb-crd-manager/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-crd-manager
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.1.0
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "2"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-crd-manager
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-crd-manager
  namespace: default
---
# Source: kubedb-crd-manager/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-kubedb-crd-manager
  namespace: default
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.1.0
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "3"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  ttlSecondsAfterFinished: 300
  template:
    metadata:
    spec:
      
      securityContext:
        {}
      serviceAccountName: my-release-kubedb-crd-manager
      initContainers:
        - name: kubedb-crd-manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/kubedb/kubedb-crd-manager:v0.1.0"
          imagePullPolicy: IfNotPresent
          args:
            - run
            - --v=3
            - --remove-unused-crds=false
            - --feature-gates=ClickHouse=false
            - --feature-gates=Druid=false
            - --feature-gates=Elasticsearch=false
            - --feature-gates=FerretDB=false
            - --feature-gates=Kafka=false
            - --feature-gates=MSSQLServer=false
            - --feature-gates=MariaDB=false
            - --feature-gates=Memcached=false
            - --feature-gates=MongoDB=false
            - --feature-gates=MySQL=false
            - --feature-gates=PerconaXtraDB=false
            - --feature-gates=PgBouncer=false
            - --feature-gates=Pgpool=false
            - --feature-gates=Postgres=false
            - --feature-gates=ProxySQL=false
            - --feature-gates=RabbitMQ=false
            - --feature-gates=Redis=false
            - --feature-gates=Singlestore=false
            - --feature-gates=Solr=false
            - --feature-gates=ZooKeeper=false
          resources:
            {}
      containers:
        - name: verifier
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/kubedb/kubedb-crd-manager:v0.1.0"
          imagePullPolicy: IfNotPresent
          args:
            - verify
            - --v=3
            - --feature-gates=ClickHouse=false
            - --feature-gates=Druid=false
            - --feature-gates=Elasticsearch=false
            - --feature-gates=FerretDB=false
            - --feature-gates=Kafka=false
            - --feature-gates=MSSQLServer=false
            - --feature-gates=MariaDB=false
            - --feature-gates=Memcached=false
            - --feature-gates=MongoDB=false
            - --feature-gates=MySQL=false
            - --feature-gates=PerconaXtraDB=false
            - --feature-gates=PgBouncer=false
            - --feature-gates=Pgpool=false
            - --feature-gates=Postgres=false
            - --feature-gates=ProxySQL=false
            - --feature-gates=RabbitMQ=false
            - --feature-gates=Redis=false
            - --feature-gates=Singlestore=false
            - --feature-gates=Solr=false
            - --feature-gates=ZooKeeper=false
          resources:
            {}
      restartPolicy: Never
