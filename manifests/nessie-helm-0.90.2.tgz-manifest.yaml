---
# Source: nessie/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-nessie
  labels:
    helm.sh/chart: nessie-0.90.2
    app.kubernetes.io/name: nessie
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.90.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: nessie/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nessie
  labels:
    helm.sh/chart: nessie-0.90.2
    app.kubernetes.io/name: nessie
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.90.2"
    app.kubernetes.io/managed-by: Helm
data:
  application.properties: |-
    nessie.version.store.persist.cache-invalidations.service-names=my-release-nessie-mgmt
    nessie.version.store.persist.cache-invalidations.valid-tokens=d95e48d4a5cd92d6a5a0c426a380a3903cfb306b
    nessie.version.store.type=IN_MEMORY
    quarkus.log.console.level=INFO
    quarkus.log.file.level=INFO
    quarkus.log.level=INFO
    quarkus.oidc.tenant-enabled=false
    quarkus.otel.sdk.disabled=true
---
# Source: nessie/templates/management-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-nessie-mgmt"
  labels:
    helm.sh/chart: nessie-0.90.2
    app.kubernetes.io/name: nessie
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.90.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: nessie
    app.kubernetes.io/instance: my-release
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      name: nessie-mgmt
  publishNotReadyAddresses: true
  clusterIP: None
---
# Source: nessie/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-nessie
  labels:
    helm.sh/chart: nessie-0.90.2
    app.kubernetes.io/name: nessie
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.90.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 19120
      targetPort: 19120
      protocol: TCP
      name: nessie-server
  sessionAffinity: None
  selector:
    app.kubernetes.io/name: nessie
    app.kubernetes.io/instance: my-release
---
# Source: nessie/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-nessie
  labels:
    helm.sh/chart: nessie-0.90.2
    app.kubernetes.io/name: nessie
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.90.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nessie
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        projectnessie.org/config-checksum: f9b1acae02bdc67f30b164666263e620eb2a73c1c65911b9ea80cbc467461506
      labels:
        app.kubernetes.io/name: nessie
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-nessie
      securityContext:
        {}
      containers:
        - name: nessie
          securityContext:
            {}
          image: "ghcr.io/projectnessie/nessie:0.90.2"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nessie-config
              mountPath: /deployments/config/application.properties
              subPath: application.properties
          env:
          ports:
            - name: nessie-server
              containerPort: 19120
              protocol: TCP
            - name: nessie-mgmt
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 45
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            {}
      volumes:
        - name: nessie-config
          configMap:
            name: my-release-nessie
---
# Source: nessie/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-nessie-test-connection"
  labels:
    helm.sh/chart: nessie-0.90.2
    app.kubernetes.io/name: nessie
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.90.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-nessie:19120']
  initContainers:
    - name: sleep
      image: busybox
      command: [ 'sleep', '10' ]
  restartPolicy: Never
