---
# Source: kubed/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubed
  namespace: default
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubed/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kubed-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lSQU5KMkE5OHU1YzRnbk8xc0srbWZzK1l3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qRTJNREF6TURVd1doY05NelF3TmpFME1EQXpNRFV3V2pBYgpNUmt3RndZRFZRUURFeEJ0ZVMxeVpXeGxZWE5sTFd0MVltVmtNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFvbGNrQTdqRWk1RkRZNUtNVnVDRExBWXZSeS91aGhqbVBGcjJnaXZaYlVidHIvMVUKZnU1WmQ5VXhoZWIyb2pRV2Ywc1ptdUplUERpZ21heE9BRVZwMlBFalpXbWVCaDlQV2UwRnBwQTZPMXFNVWlHegpHdnpNOGlSR1IvNjM0NmQ3OWx0ZVAzYmR6TXVXVE5qY0M1MHhJL1NKZkYwMWV2MEFxUlBRUkdrc0N5T0NuWVorCjVkeG5xb3dJNTNJcjBFQkdtTE1tSS9CdTlFMUM0SXQyWmtZb0lteHBxWkxyaU5ROENlbGlHNVo0L2UvRW9XZWEKRjhQWEFaOGZUK1hWeG0vS3hReFc0YXJnUjY2TWxhM21jU1lhck01MzJHTm9mbE9ZTlQwRm8rakl0Qm5xN0RxZgphYXlaL1g3clYzclZwT2J4am9DcW1aVk4vdkpsUll4dzdoRmt4d0lEQVFBQm80R2tNSUdoTUE0R0ExVWREd0VCCi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC8KQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlF5UHRTdG1UT3VyeHE3WTR3d2dpcVUrWXRGc0RCQkJnTlZIUkVFT2pBNApnaGh0ZVMxeVpXeGxZWE5sTFd0MVltVmtMbVJsWm1GMWJIU0NIRzE1TFhKbGJHVmhjMlV0YTNWaVpXUXVaR1ZtCllYVnNkQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGWWxRSTJTcmFHTnltTmlWUjdpeUlDYm1UbU4KZU1VLzF4M0ZFRS91dGw1eHBhaVIxd0V1dkV6Q01pM0pPSzIxVUZORTRjaUMwdzFsRjFON1R3VC8rTzBoWEI4WQprWlk4Rk9oQkZuempRMVZKcDhlMTF6ZGl0ZVkwQjJ2KzQvZnU5aGd1ZmJ1bHZ3dUVXTHpmK3ByQXRaeGlJdW9yCmJneVl0eHRzVDEyRmtKRmpuKzMyTUtIcVJNRzdjclNiZUFUa2pHNElBSk1Cb3ZwMDNSSE1NU1VVcW85d3lFY1QKWk9GZ21UVExXR0FyK0FpZlI2R2tQSVY2ajAxSlp5bVFmejdCbnF4NDZlcmpUS3duckQ3c1gyVTVkUEpzcmc3dwpjbG9xN3A2V0VvZGVOcFJFQ3FrYWowSWlMN1p1byt3M2dkS0N0TkcydGJ1U3JSRzBxcGlhcEZFVC85dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb2xja0E3akVpNUZEWTVLTVZ1Q0RMQVl2UnkvdWhoam1QRnIyZ2l2WmJVYnRyLzFVCmZ1NVpkOVV4aGViMm9qUVdmMHNabXVKZVBEaWdtYXhPQUVWcDJQRWpaV21lQmg5UFdlMEZwcEE2TzFxTVVpR3oKR3Z6TThpUkdSLzYzNDZkNzlsdGVQM2Jkek11V1ROamNDNTB4SS9TSmZGMDFldjBBcVJQUVJHa3NDeU9DbllaKwo1ZHhucW93STUzSXIwRUJHbUxNbUkvQnU5RTFDNEl0MlprWW9JbXhwcVpMcmlOUThDZWxpRzVaNC9lL0VvV2VhCkY4UFhBWjhmVCtYVnhtL0t4UXhXNGFyZ1I2Nk1sYTNtY1NZYXJNNTMyR05vZmxPWU5UMEZvK2pJdEJucTdEcWYKYWF5Wi9YN3JWM3JWcE9ieGpvQ3FtWlZOL3ZKbFJZeHc3aEZreHdJREFRQUJBb0lCQUVqU09nK0pWSEVlNmxIQwpMVDNUWEVQbFNsUHVobHFVMU1LQ00wM1ZDYVZoU2NIR0s1NzhvQm1IQXI0RUN1SmI1ek9XcHBlNXIzZm9GdktZClBpMFU5aFFncHpZWW1KQTZmMGZoY01WMHNRcHE1Y0w1NXZQV0xzRDMwS2IrOWRJakVSSkRqaFY5NXFTMU5taW0KWnA2M0ZwSUFZYVB0MDgybHJDUXNCU0tLNHZ6amEvcUE5NDFsOWJwdXlDKzFmaTNTNUR6ZU43R2hHNC9TdjE0MgphS0phSjMxN0NrcmQ1YTBVWVh1U1BJN0NQdm4vb0xNdnJ6aEJPaHpmTGVKVXZxU3BZMzFTMmpoYiswTW9QNXRqClAyQzIxY1hkcmMyMnNkZFhPbVhOUWdQdzErcDBGSityT1lGUXNQd08zSno0ZklPY0M3cVQrbkowRG4yWExQVDQKM0hTaXFWRUNnWUVBMGtKNmw5L2JlN0FpKzM5OU9zSmNybVlxZW1GazJaZUcwTFQ1MUF1Q09QRjhDSFRGUnJuKwpEVm9GUVFTSlBmd3dibXUxa0MxY3VlbWFFYTUxcnNnbytFYXJFUkJFOWZZQ1luRVU2WXFpSUMzeUg5TnNaQzdlCloxVko2Ym9Ga0VVVSs2T0NVQlNyMGQxU2VzY2tIYW5CeGV3NS9hMWpLY3UxWnp1TUU2QmordDBDZ1lFQXhhZ0EKRHhoSEF4R05UckhvbURQNEJldldkc2dHUENxTFY3VHFJcjFpMjZ1OFV5YjVKUVJrREtnRmYxcmhibUhoR2NCTwpxSnkwbUV0NUpJbUF1VmlxaTduRUhRVFBEMVg2ZzJMd292K2xLMkJubHIyQWllUlcwY1lPQ1RjMU14TmJyTmY0CkdGTy9WRWpLRmJqKzhoMkZFY3pnNTJ0emgrU3RTWE1nZkIzeWlmTUNnWUJ2V0lrM2VITHc4M3Z6RjdhbnNWb0gKZVU4eGMvWkdUTG8yT0VDOURFTXdDS0lZa0U0UWdGcUxrNHFJdmZBNEJSOVl1bTF5SnJPZU9KbEFsOVQyZEVWTwpCWTUrQU5Ha04xMVg2RzZjcHEvb3Zxd2tNb0NLSlUvZUJRcVpYY3VvZFEwQm5idGEwVGVVY2RKRjlzT25lY2lHCkdlMHo2K2hCc0FFbTVCL3dITllWZVFLQmdEbS9FbjFXZjNDekVSQzd3NU9zSXpzL29zSERRS2NWV3U1OTZhWEsKcFBZKzMxOS8xR3h2TXZmTG93ZUpPckZ3SVQ3UHcydFpsUjJsZHpnb2dCWW1oSFVjQ2VMY2c4NGNOWHRyVFppaApqZFQxYm01STRTUG9OVUZHVnRWMGJyT0VaVlZESjdXYnlodEt4TmZCMjZKSzQ1VEd3Yko2M3g4RnZXYm5Ic2VFClRGYm5Bb0dCQUsyZzZWT3Ivcjl6UWlPVXRpZ3dENE5CNzFLcERUeVM3d3FFeWR1MEd4K1NyS3RNaHVzOGlIc2oKWVprY3lWak1KNWc2eUVtMDA0OCtlUTFvY1VMbkhuMlUrd0UwaEwvNkFEelNVZ2hXSnp5ZzR2WG4wNEFQRXowOQpBTkF2QjVtdjMzellQWE41NE1laHB2OVUyNXJ6ZU4yemlTWjhCNnZFRXhvNjZPSm91UCtaCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kubed/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kubed
  namespace: default
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: kubed/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: ["get", "create", "patch", "delete", "list", "watch"]
- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list"]
- apiGroups: [""]
  resources:
  - events
  verbs: ["create"]
---
# Source: kubed/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubed-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-kubed
  namespace: default
---
# Source: kubed/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubed
subjects:
- kind: ServiceAccount
  name: my-release-kubed
  namespace: default
---
# Source: kubed/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-kubed-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubed
  namespace: default
---
# Source: kubed/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubed
  namespace: default
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
---
# Source: kubed/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubed
  namespace: default
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubed
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubed
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: a640b9431d99d852404771a09507d9b074829c586bbeb95d5fc6b25c17d7898c
    spec:
      serviceAccountName: my-release-kubed
      containers:
      - name: kubed
        securityContext:
          {}
        image: appscode/kubed:v0.13.2
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        - --cluster-name=unicorn
        ports:
        - containerPort: 8443
        resources:
          {}
        volumeMounts:
        - name: config
          mountPath: /srv/kubed
        - name: scratch
          mountPath: /tmp
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: config
        secret:
          secretName: my-release-kubed
      - name: scratch
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-kubed-apiserver-cert
      securityContext:
        fsGroup: 65535
