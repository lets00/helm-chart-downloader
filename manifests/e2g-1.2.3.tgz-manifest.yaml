---
# Source: e2g/templates/bundle.yaml
kind: Service
apiVersion: v1
metadata:
  name: my-release-e2g
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: e2g
    app.kubernetes.io/version: "5.4"
spec:
  type: ClusterIP
  ports:
    - name: icap
      port: 1344
      protocol: TCP
      targetPort: icap
      nodePort: null
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    
    app.kubernetes.io/name: e2g
    app.kubernetes.io/instance: my-release
---
# Source: e2g/templates/bundle.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: my-release-e2g
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: e2g
    app.kubernetes.io/version: "5.4"
spec:
  strategy: 
    type: RollingUpdate
  replicas: 3
  selector:
    matchLabels:
      
      app.kubernetes.io/name: e2g
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: e2g
    spec:
      terminationGracePeriodSeconds: 0
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: default
      containers:
        -
          name: e2g
          image: docker.io/bedag/e2g:5.4
          imagePullPolicy: 
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 65534
            runAsUser: 65534
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: "TZ"
              value: "Europe/Zurich"
          livenessProbe: 
            initialDelaySeconds: 15
            periodSeconds: 1
            tcpSocket:
              port: 1344
          readinessProbe: 
            initialDelaySeconds: 5
            periodSeconds: 1
            tcpSocket:
              port: 1344
          ports:
            - containerPort: 1344
              name: icap
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
