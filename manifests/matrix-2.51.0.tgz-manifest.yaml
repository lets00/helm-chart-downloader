---
# Source: matrix/charts/postgresql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.4.4
automountServiceAccountToken: false
---
# Source: matrix/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.4.4
type: Opaque
data:
  postgres-password: "aG40QlN5cEhvdw=="
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
# Source: matrix/templates/coturn/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-matrix-coturn-config
  labels:

    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    component: coturn
data:
  turnserver.conf: |
    use-auth-secret
    static-auth-secret=HpByk8Hrblrc5gSYm1SIJXyHLOSyIaS0it4abeaC7wInz7ctonNchWuyM4vxypUF
    realm=turn.example.com

    min-port=49152
    max-port=49172

    log-file=stdout
    pidfile=/var/tmp/turnserver.pid
    userdb=/var/tmp/turnserver.db

    no-cli

    no-tls
    no-dtls

    prod
    no-tcp-relay
---
# Source: matrix/templates/postgresql/initdb-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-matrix-postgresql-initdb
  labels:
  
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
data:
  matrix.sql: |
    CREATE USER matrix
      LOGIN
      ENCRYPTED PASSWORD 'matrix';

    CREATE DATABASE matrix
      ENCODING 'UTF8'
      LC_COLLATE='C'
      LC_CTYPE='C'
      template=template0
      OWNER matrix;
---
# Source: matrix/templates/riot/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-matrix-riot-config
  labels:

    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    
    component: element
data:
  config.json: |
    {
      "default_server_config": {
        "m.homeserver": {
          "base_url": "https://matrix.chart-example.local"
        }
      },
      "brand": "Element",
      "branding": {
      },
      "integrations_ui_url": "https://scalar.vector.im/",
      "integrations_rest_url": "https://scalar.vector.im/api",
      "integrations_widgets_urls": ["https://scalar.vector.im/_matrix/integrations/v1","https://scalar.vector.im/api","https://scalar-staging.vector.im/_matrix/integrations/v1","https://scalar-staging.vector.im/api","https://scalar-staging.riot.im/scalar/api"], 
      "showLabsSettings": true,
      "features": {
        "feature_new_spinner": "labs",
        "feature_pinning": "labs",
        "feature_custom_status": "labs",
        "feature_custom_tags": "labs",
        "feature_state_counters": "labs",
        "feature_many_integration_managers": "labs",
        "feature_mjolnir": "labs",
        "feature_dm_verification": "labs",
        "feature_bridge_state": "labs",
        "feature_presence_in_room_list": "labs",
        "feature_custom_themes": "labs"
      },
      "roomDirectory": {
        "servers": ["matrix.org"]
      },
      "permalinkPrefix": "https://matrix.to"
    }
  nginx.conf: |
    worker_processes  auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/pid/nginx.pid;

    events {
      worker_connections  1024;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
      '$status $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;

      sendfile        on;
      #tcp_nopush     on;

      keepalive_timeout  65;

      #gzip  on;

      include /etc/nginx/conf.d/*.conf;
    }
  default.conf: |
    server {
      listen       8080;
      server_name  localhost;

      #charset koi8-r;
      #access_log  /var/log/nginx/host.access.log  main;

      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }

      #error_page  404              /404.html;

      # redirect server error pages to the static page /50x.html
      #
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }

      # proxy the PHP scripts to Apache listening on 127.0.0.1:80
      #
      #location ~ \.php$ {
      #    proxy_pass   http://127.0.0.1;
      #}

      # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
      #
      #location ~ \.php$ {
      #    root           html;
      #    fastcgi_pass   127.0.0.1:9000;
      #    fastcgi_index  index.php;
      #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
      #    include        fastcgi_params;
      #}

      # deny access to .htaccess files, if Apache's document root
      # concurs with nginx's one
      #
      #location ~ /\.ht {
      #    deny  all;
      #}
    }
---
# Source: matrix/templates/synapse/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-matrix-synapse-config
  labels:

    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"

    component: synapse
data:
  homeserver.yaml: |
    
    
    ## Server ##
    
    # The domain name of the server, with optional explicit port.
    # This is used by remote servers to connect to this server,
    # e.g. matrix.org, localhost:8080, etc.
    # This is also the last part of your UserID.
    #
    server_name: example.com
    
    # When running as a daemon, the file to store the pid in
    #
    pid_file: /data/homeserver.pid
    
    # The public-facing base URL that clients use to access this HS
    # (not including _matrix/...). This is the same URL a user would
    # enter into the 'custom HS URL' field on their client. If you
    # use synapse with a reverse proxy, this should be the URL to reach
    # synapse via the proxy.
    #
    public_baseurl: "https://matrix.chart-example.local"
    # Set the soft limit on the number of file descriptors synapse can use
    # Zero is used to indicate synapse should set the soft limit to the
    # hard limit.
    #
    #soft_file_limit: 0
    
    # Presence tracking allows users to see the state (e.g online/offline)
    # of other local and remote users. Set the enabled sub-option to false
    # to disable presence tracking on this homeserver.
    #
    # Defaults to true.
    presence:
      enabled: true
    
    # Whether to require authentication to retrieve profile data (avatars,
    # display names) of other users through the client API. Defaults to
    # 'false'. Note that profile data is also available via the federation
    # API, so this setting is of limited value if federation is enabled on
    # the server.
    #
    #require_auth_for_profile_requests: true
    
    # Uncomment to require a user to share a room with another user in order
    # to retrieve their profile information. Only checked on Client-Server
    # requests. Profile requests from other servers should be checked by the
    # requesting server. Defaults to 'false'.
    #
    #limit_profile_requests_to_users_who_share_rooms: true
    
    # If set to 'true', removes the need for authentication to access the server's
    # public rooms directory through the client API, meaning that anyone can
    # query the room directory. Defaults to 'false'.
    #
    #allow_public_rooms_without_auth: true
    
    # If set to 'true', allows any other homeserver to fetch the server's public
    # rooms directory via federation. Defaults to 'false'.
    #
    allow_public_rooms_over_federation: true
    
    # Whether room invites to users on this server should be blocked
    # (except those sent by local server admins). The default is False.
    #
    block_non_admin_invites: false
    
    # Room searching
    #
    # If disabled, new messages will not be indexed for searching and users
    # will receive errors when searching for messages. Defaults to enabled.
    #
    enable_search: true
    
    # Restrict federation to the following whitelist of domains.
    # N.B. we recommend also firewalling your federation listener to limit
    # inbound federation traffic as early as possible, rather than relying
    # purely on this application-layer restriction.  If not specified, the
    # default is to whitelist everything.
    
    # This option prevents outgoing requests from being sent to the specified
    # blacklisted IP address CIDR ranges. If this option is not specified
    # then it defaults to private IP address ranges (see the example below).
    
    # The blacklist applies to the outbound requests for federation, identity
    # servers, push servers, and for checking key validity for third-party
    # invite events. 0.0.0.0 and :: are always blacklisted, whether or not
    # they are explicitly listed here, since they correspond
    # to unroutable addresses.
    #
    ip_range_blacklist:
        - 127.0.0.0/8
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
        - 100.64.0.0/10
        - 192.0.0.0/24
        - 169.254.0.0/16
        - 192.88.99.0/24
        - 198.18.0.0/15
        - 192.0.2.0/24
        - 198.51.100.0/24
        - 203.0.113.0/24
        - 224.0.0.0/4
        - ::1/128
        - fe80::/10
        - fc00::/7
        - 2001:db8::/32
        - ff00::/8
        - fec0::/10
    
    # List of ports that Synapse should listen on, their purpose and their
    # configuration.
    #
    # Sub-options for each listener include:
    #
    # * `port`: the TCP port to bind to.
    # * `bind_addresses`: a list of local addresses to listen on. The default is
    #      'all local interfaces'.
    # * `type`: the type of listener. Normally `http`, but other valid options are:
    #
    #             * `manhole`: (see the docs [here](../../manhole.md)),
    #
    #             * `metrics`: (see the docs [here](../../metrics-howto.md)),
    # * `tls`: set to true to enable TLS for this listener. Will use the TLS key/cert specified in tls_private_key_path / tls_certificate_path.
    # * `x_forwarded`: Only valid for an 'http' listener. Set to true to use the X-Forwarded-For header as the client IP. Useful when Synapse is
    #      behind a [reverse-proxy](../../reverse_proxy.md).
    # * `request_id_header`: The header extracted from each incoming request that is
    #                          used as the basis for the request ID. The request ID is used in
    # [logs](../administration/request_log.md#request-log-format) and tracing to
    #                          correlate and match up requests. When unset, Synapse will automatically
    #                          generate sequential request IDs. This option is useful when Synapse is behind
    #                          a [reverse-proxy](../../reverse_proxy.md).
    #
    #                          _Added in Synapse 1.68.0._
    #
    # * `resources`: Only valid for an 'http' listener. A list of resources to host
    #         on this port. Sub-options for each resource are:
    #
    #      * `names`: a list of names of HTTP resources. See below for a list of valid resource names.
    #
    #      * `compress`: set to true to enable gzip compression on HTTP bodies for this resource. This is currently only supported with the
    #           `client`, `consent`, `metrics` and `federation` resources.
    #
    # * `additional_resources`: Only valid for an 'http' listener. A map of
    #      additional endpoints which should be loaded via dynamic modules.
    #
    # Valid resource names are:
    # * `client`: the client-server API (/_matrix/client), and the synapse admin API (/_synapse/admin). Also implies `media` and `static`.
    # * `consent`: user consent forms (/_matrix/consent). See [here](../../consent_tracking.md) for more.
    # * `federation`: the server-server API (/_matrix/federation). Also implies `media`, `keys`, `openid`
    # * `keys`: the key discovery API (/_matrix/key).
    # * `media`: the media API (/_matrix/media).
    # * `metrics`: the metrics interface. See [here](../../metrics-howto.md).
    # * `openid`: OpenID authentication. See [here](../../openid.md).
    # * `replication`: the HTTP replication API (/_synapse/replication). See [here](../../workers.md).
    # * `static`: static resources under synapse/static (/_matrix/static). (Mostly useful for 'fallback authentication'.)
    listeners:
      # TLS-enabled listener: for when matrix traffic is sent directly to synapse.
      #
      # Disabled by default. To enable it, uncomment the following. (Note that you
      # will also need to give Synapse a TLS key and certificate: see the TLS section
      # below.)
      #
      #- port: 8448
      #  type: http
      #  tls: true
      #  resources:
      #    - names: [client, federation]
    
      # Unsecure HTTP listener: for when matrix traffic passes through a reverse proxy
      # that unwraps TLS.
      #
      # If you plan to use a reverse proxy, please see
      # https://github.com/matrix-org/synapse/blob/master/docs/reverse_proxy.md.
      #
      - port: 8008
        tls: false
        type: http
        x_forwarded: true
        bind_addresses: ['0.0.0.0']
    
        resources:
          - names: [client, federation]
            compress: false
    
        # example additional_resources:
        #
        #additional_resources:
        #  "/_matrix/my/custom/endpoint":
        #    module: my_module.CustomRequestHandler
        #    config: {}
      - type: metrics
        port: 9092
        bind_addresses: ['0.0.0.0']
    
        resources:
          - names: [metrics]
      # Turn on the twisted ssh manhole service on localhost on the given
      # port.
      #
      #- port: 9000
      #  bind_addresses: ['::1', '127.0.0.1']
      #  type: manhole
    
    # Forward extremities can build up in a room due to networking delays between
    # homeservers. Once this happens in a large room, calculation of the state of
    # that room can become quite expensive. To mitigate this, once the number of
    # forward extremities reaches a given threshold, Synapse will send an
    # org.matrix.dummy_event event, which will reduce the forward extremities
    # in the room.
    #
    # This setting defines the threshold (i.e. number of forward extremities in the
    # room) at which dummy events are sent. The default value is 10.
    #
    #dummy_events_threshold: 5
    
    
    ## Homeserver blocking ##
    
    # How to reach the server admin, used in ResourceLimitError
    #
    admin_contact: 'mailto:admin@example.com'
    
    # Global blocking
    #
    hs_disabled: false
    hs_disabled_message: 
    
    # How long to keep redacted events in unredacted form in the database. After
    # this period redacted events get replaced with their redacted form in the DB.
    #
    # Defaults to `7d`. Set to `null` to disable.
    #
    redaction_retention_period: 7d
    
    
    ## Database ##
    
    database:
        # The database engine name
        name: "psycopg2"
        # Arguments to pass to the engine
        args:
            user: "matrix"
            password: "matrix"
            database: "matrix"
            host: "my-release-matrix-postgresql"
            port: "5432"
            sslmode: 
            cp_min: 5
            cp_max: 10
    
    ## Logging ##
    
    # A yaml python logging config file as described by
    # https://docs.python.org/3.7/library/logging.config.html#configuration-dictionary-schema
    #
    log_config: "/data/example.com.log.config"
    
    
    ## Media Store ##
    
    # Enable the media store service in the Synapse master. Uncomment the
    # following if you are using a separate media store worker.
    #
    #enable_media_repo: false
    
    # Directory where uploaded images and attachments are stored.
    #
    media_store_path: "/data/media_store"
    
    # Media storage providers allow media to be stored in different
    # locations.
    #
    #media_storage_providers:
    #  - module: file_system
    #    # Whether to write new local files.
    #    store_local: false
    #    # Whether to write new remote media
    #    store_remote: false
    #    # Whether to block upload requests waiting for write to this
    #    # provider to complete
    #    store_synchronous: false
    #    config:
    #       directory: /mnt/some/other/directory
    
    # Directory where in-progress uploads are stored.
    #
    uploads_path: "/data/uploads"
    
    # The largest allowed upload size in bytes
    
    max_upload_size: 10M
    
    # Maximum number of pixels that will be thumbnailed
    
    max_image_pixels: 32M
    
    # Is the preview URL API enabled?
    #
    # 'false' by default: uncomment the following to enable it (and specify a
    # url_preview_ip_range_blacklist blacklist).
    #
    url_preview_enabled: false
    
    # List of IP address CIDR ranges that the URL preview spider is denied
    # from accessing.  There are no defaults: you must explicitly
    # specify a list for URL previewing to work.  You should specify any
    # internal services in your network that you do not want synapse to try
    # to connect to, otherwise anyone in any Matrix room could cause your
    # synapse to issue arbitrary GET requests to your internal services,
    # causing serious security issues.
    #
    # (0.0.0.0 and :: are always blacklisted, whether or not they are explicitly
    # listed here, since they correspond to unroutable addresses.)
    #
    # This must be specified if url_preview_enabled is set. It is recommended that
    # you uncomment the following list as a starting point.
    url_preview_ip_range_blacklist:
        - 127.0.0.0/8
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
        - 100.64.0.0/10
        - 169.254.0.0/16
        - ::1/128
        - fe80::/64
        - fc00::/7
    
    # List of IP address CIDR ranges that the URL preview spider is allowed
    # to access even if they are specified in url_preview_ip_range_blacklist.
    # This is useful for specifying exceptions to wide-ranging blacklisted
    # target IP ranges - e.g. for enabling URL previews for a specific private
    # website only visible in your network.
    
    # Optional list of URL matches that the URL preview spider is
    # denied from accessing.  You should use url_preview_ip_range_blacklist
    # in preference to this, otherwise someone could define a public DNS
    # entry that points to a private IP address and circumvent the blacklist.
    # This is more useful if you know there is an entire shape of URL that
    # you know that will never want synapse to try to spider.
    #
    # Each list entry is a dictionary of url component attributes as returned
    # by urlparse.urlsplit as applied to the absolute form of the URL.  See
    # https://docs.python.org/2/library/urlparse.html#urlparse.urlsplit
    # The values of the dictionary are treated as an filename match pattern
    # applied to that component of URLs, unless they start with a ^ in which
    # case they are treated as a regular expression match.  If all the
    # specified component matches for a given list item succeed, the URL is
    # blacklisted.
    
    # The largest allowed URL preview spidering size in bytes
    
    max_spider_size: 10M
    
    # The API endpoint to use for verifying m.login.recaptcha responses.
    #
    #recaptcha_siteverify_api: "https://www.recaptcha.net/recaptcha/api/siteverify"## TURN ##
    
    # The public URIs of the TURN server to give to clients
    
    # Let the user specify coturn URIs explicitly
    
    # Default to using the matrix hostname as
    turn_uris:
      - "turn:matrix.chart-example.local?transport=udp"
    # The shared secret used to compute passwords for the TURN server
    
    turn_shared_secret: Q5sjlqZ0tmXmkJHvAzQljrlBWBuZCefcIb6hiPY6wMCJTQRnIK9VgJmO4dGbiqvn
    
    # How long generated TURN credentials last
    
    turn_user_lifetime: 1h
    
    # Whether guests should be allowed to use the TURN server.
    # This defaults to True, otherwise VoIP will be unreliable for guests.
    # However, it does introduce a slight security risk as it allows users to
    # connect to arbitrary endpoints without having first signed up for a
    # valid account (e.g. by passing a CAPTCHA).
    
    turn_allow_guests: true
    
    ## Registration ##
    #
    # Registration can be rate-limited using the parameters in the "Ratelimiting"
    # section of this file.
    
    # Enable registration for new users.
    #
    enable_registration: false
    
    
    # Enable registration without email or captcha verification. Note: this option is *not* recommended,
    # as registration without verification is a known vector for spam and abuse. Defaults to `false`. Has no effect
    # unless [`enable_registration`](#enable_registration) is also enabled.
    # Important: If there are no 3PID requirement defined this is required to set to true, server start will fail otherwise.
    # TODO: values
    enable_registration_without_verification: false
    
    # The user must provide all of the below types of 3PID when registering.
    # Examples: email, msisdn
    
    # Enable 3PIDs lookup requests to identity servers from this server. Defaults to true.
    enable_3pid_lookup: true
    
    # If set, allows registration of standard or admin accounts by anyone who
    # has the shared secret, even if registration is otherwise disabled.
    #
    
    # Allows users to register as guests without a password/email/etc, and
    # participate in rooms hosted on this server which have been made
    # accessible to anonymous users.
    
    allow_guest_access: false
    
    # Users who register on this homeserver will automatically be joined
    # to these rooms
    
    ## Metrics ###
    
    # Enable collection and rendering of performance metrics
    #
    enable_metrics: true
    
    
    # Whether or not to report anonymized homeserver usage statistics.
    report_stats: false
    
    ## API Configuration ##
    
    # A list of application service config files to use
    #
    
    
    # a secret which is used to sign access tokens. If none is specified,
    # the registration_shared_secret is used, if one is given; otherwise,
    # a secret key is derived from the signing key.
    #
    
    ## Signing Keys ##
    
    # Path to the signing key to sign messages with
    #
    signing_key_path: "/data/keys/example.com.signing.key"
    
    
    # The trusted servers to download signing keys from.
    #
    # When we need to fetch a signing key, each server is tried in parallel.
    #
    # Normally, the connection to the key server is validated via TLS certificates.
    # Additional security can be provided by configuring a `verify key`, which
    # will make synapse check that the response is signed by that key.
    #
    # This setting supercedes an older setting named `perspectives`. The old format
    # is still supported for backwards-compatibility, but it is deprecated.
    #
    # 'trusted_key_servers' defaults to matrix.org, but using it will generate a
    # warning on start-up. To suppress this warning, set
    # 'suppress_key_server_warning' to true.
    #
    # Options for each entry in the list include:
    #
    #    server_name: the name of the server. required.
    #
    #    verify_keys: an optional map from key id to base64-encoded public key.
    #       If specified, we will check that the response is signed by at least
    #       one of the given keys.
    #
    #    accept_keys_insecurely: a boolean. Normally, if `verify_keys` is unset,
    #       and federation_verify_certificates is not `true`, synapse will refuse
    #       to start, because this would allow anyone who can spoof DNS responses
    #       to masquerade as the trusted key server. If you know what you are doing
    #       and are sure that your network environment provides a secure connection
    #       to the key server, you can set this to `true` to override this
    #       behaviour.
    #
    # An example configuration might look like:
    #
    #trusted_key_servers:
    #  - server_name: "my_trusted_server.example.com"
    #    verify_keys:
    #      "ed25519:auto": "abcdefghijklmnopqrstuvwxyzabcdefghijklmopqr"
    #  - server_name: "my_other_trusted_server.example.com"
    #
    
    # Uncomment the following to disable the warning that is emitted when the
    # trusted_key_servers include 'matrix.org'. See above.
    #
    suppress_key_server_warning: 
    
    
    # List of OpenID Connect (OIDC) / OAuth 2.0 identity providers, for registration
    # and login.
    # for information on how to configure these options.
    # See https://github.com/matrix-org/synapse/blob/develop/docs/usage/configuration/config_documentation.md#oidc_providers
    #
    # Example:
    # oidc_providers:
    #   - idp_id: my_idp
    #     idp_name: "My OpenID provider"
    #     idp_icon: "mxc://example.com/mediaid"
    #     discover: false
    #     issuer: "https://accounts.example.com/"
    #     client_id: "provided-by-your-issuer"
    #     client_secret: "provided-by-your-issuer"
    #     client_auth_method: client_secret_post
    #     scopes: ["openid", "profile"]
    #     authorization_endpoint: "https://accounts.example.com/oauth2/auth"
    #     token_endpoint: "https://accounts.example.com/oauth2/token"
    #     userinfo_endpoint: "https://accounts.example.com/userinfo"
    #     jwks_uri: "https://accounts.example.com/.well-known/jwks.json"
    #     skip_verification: true
    oidc_providers: 
      []
    
    
    # Configuration for sending emails from Synapse.
    #
    email:
      enable_notifs: true
      notif_from: Matrix <matrix@example.com>
      smtp_host: my-release-matrix-exim-relay
      smtp_port: 25
    
      # Custom URL for client links within the email notifications. By default
      # links will be based on "https://matrix.to".
      #
      # (This setting used to be called riot_base_url; the old name is still
      # supported for backwards-compatibility but is now deprecated.)
      client_base_url: element.chart-example.local
    
      # Configure the time that a validation email will expire after sending.
      # Defaults to 1h.
      #
      #validation_token_lifetime: 15m
    
    
  example.com.log.config: |
    version: 1

    formatters:
      precise:
        format: '%(asctime)s - %(name)s - %(lineno)d - %(levelname)s - %(request)s - %(message)s'

    filters:
      context:
        (): synapse.util.logcontext.LoggingContextFilter
        request: ""

    handlers:
      console:
        class: logging.StreamHandler
        formatter: precise
        filters: [context]

    loggers:
      synapse:
        level: WARNING

      synapse.storage.SQL:
        # beware: increasing this to DEBUG will make synapse log sensitive
        # information such as access tokens.
        level: WARNING


    root:
      level: WARNING
      handlers: [console]
---
# Source: matrix/templates/synapse/media-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-matrix-media-store
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    component: synapse
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: matrix/templates/synapse/signing-key-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-matrix-signing-key
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    component: synapse
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi
---
# Source: matrix/charts/postgresql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql-hl
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.4.4
    app.kubernetes.io/component: primary
  annotations:
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
---
# Source: matrix/charts/postgresql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.4.4
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
---
# Source: matrix/templates/coturn/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-matrix-coturn
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    component: coturn
spec:
  type: ClusterIP
  ports:
    - port: 3478
      targetPort: turn-3478
      protocol: UDP
      name: turn-3478
    - port: 49152
      targetPort: 49152
      protocol: UDP
      name: turn-49152
    - port: 49153
      targetPort: 49153
      protocol: UDP
      name: turn-49153
    - port: 49154
      targetPort: 49154
      protocol: UDP
      name: turn-49154
    - port: 49155
      targetPort: 49155
      protocol: UDP
      name: turn-49155
    - port: 49156
      targetPort: 49156
      protocol: UDP
      name: turn-49156
    - port: 49157
      targetPort: 49157
      protocol: UDP
      name: turn-49157
    - port: 49158
      targetPort: 49158
      protocol: UDP
      name: turn-49158
    - port: 49159
      targetPort: 49159
      protocol: UDP
      name: turn-49159
    - port: 49160
      targetPort: 49160
      protocol: UDP
      name: turn-49160
    - port: 49161
      targetPort: 49161
      protocol: UDP
      name: turn-49161
    - port: 49162
      targetPort: 49162
      protocol: UDP
      name: turn-49162
    - port: 49163
      targetPort: 49163
      protocol: UDP
      name: turn-49163
    - port: 49164
      targetPort: 49164
      protocol: UDP
      name: turn-49164
    - port: 49165
      targetPort: 49165
      protocol: UDP
      name: turn-49165
    - port: 49166
      targetPort: 49166
      protocol: UDP
      name: turn-49166
    - port: 49167
      targetPort: 49167
      protocol: UDP
      name: turn-49167
    - port: 49168
      targetPort: 49168
      protocol: UDP
      name: turn-49168
    - port: 49169
      targetPort: 49169
      protocol: UDP
      name: turn-49169
    - port: 49170
      targetPort: 49170
      protocol: UDP
      name: turn-49170
    - port: 49171
      targetPort: 49171
      protocol: UDP
      name: turn-49171
    - port: 49172
      targetPort: 49172
      protocol: UDP
      name: turn-49172
  selector:
    app.kubernetes.io/name: matrix-coturn
    app.kubernetes.io/instance: my-release
---
# Source: matrix/templates/exim/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-matrix-exim-relay
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    component: mail
spec:
  type: ClusterIP
  ports:
    - port: 25
      targetPort: smtp
      protocol: TCP
      name: smtp
  selector:
    app.kubernetes.io/name: matrix-exim-relay
    app.kubernetes.io/instance: my-release
---
# Source: matrix/templates/riot/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-matrix-riot
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    
    component: element
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: matrix-riot
    app.kubernetes.io/instance: my-release
---
# Source: matrix/templates/synapse/federation-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-matrix-synapse-federation
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    component: synapse
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: matrix-synapse
    app.kubernetes.io/instance: my-release
---
# Source: matrix/templates/synapse/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-matrix-synapse
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    component: synapse
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/_synapse/metrics"
    prometheus.io/port: "9092"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 9092
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: matrix-synapse
    app.kubernetes.io/instance: my-release
---
# Source: matrix/templates/coturn/deployment.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-release-matrix-coturn
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    component: coturn
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: matrix-coturn
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        # re-roll deployment on config change
        checksum/coturn-config: 070287dba105c553b360fc228797cfbf36008a4361bbe1a80823f8300865756b
      labels:
        app.kubernetes.io/name: matrix-coturn
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      hostNetwork: true
      containers:
        - name: "coturn"
          image: "instrumentisto/coturn:4.5"
          imagePullPolicy: IfNotPresent
          args: ["-c", "/turnserver.conf"]
          ports:
            - name: turn-3478
              containerPort: 3478
              protocol: UDP
            - name: turn-49152
              containerPort: 49152
              hostPort: 49152
              protocol: UDP
            - name: turn-49153
              containerPort: 49153
              hostPort: 49153
              protocol: UDP
            - name: turn-49154
              containerPort: 49154
              hostPort: 49154
              protocol: UDP
            - name: turn-49155
              containerPort: 49155
              hostPort: 49155
              protocol: UDP
            - name: turn-49156
              containerPort: 49156
              hostPort: 49156
              protocol: UDP
            - name: turn-49157
              containerPort: 49157
              hostPort: 49157
              protocol: UDP
            - name: turn-49158
              containerPort: 49158
              hostPort: 49158
              protocol: UDP
            - name: turn-49159
              containerPort: 49159
              hostPort: 49159
              protocol: UDP
            - name: turn-49160
              containerPort: 49160
              hostPort: 49160
              protocol: UDP
            - name: turn-49161
              containerPort: 49161
              hostPort: 49161
              protocol: UDP
            - name: turn-49162
              containerPort: 49162
              hostPort: 49162
              protocol: UDP
            - name: turn-49163
              containerPort: 49163
              hostPort: 49163
              protocol: UDP
            - name: turn-49164
              containerPort: 49164
              hostPort: 49164
              protocol: UDP
            - name: turn-49165
              containerPort: 49165
              hostPort: 49165
              protocol: UDP
            - name: turn-49166
              containerPort: 49166
              hostPort: 49166
              protocol: UDP
            - name: turn-49167
              containerPort: 49167
              hostPort: 49167
              protocol: UDP
            - name: turn-49168
              containerPort: 49168
              hostPort: 49168
              protocol: UDP
            - name: turn-49169
              containerPort: 49169
              hostPort: 49169
              protocol: UDP
            - name: turn-49170
              containerPort: 49170
              hostPort: 49170
              protocol: UDP
            - name: turn-49171
              containerPort: 49171
              hostPort: 49171
              protocol: UDP
            - name: turn-49172
              containerPort: 49172
              hostPort: 49172
              protocol: UDP
          volumeMounts:
            - name: coturn-config
              mountPath: /turnserver.conf
              subPath: turnserver.conf
              readOnly: true
            - name: var-tmp
              mountPath: /var/tmp
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      volumes:
        - name: coturn-config
          configMap:
            name: my-release-matrix-coturn-config
        - name: var-tmp
          emptyDir: {}
---
# Source: matrix/templates/exim/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-matrix-exim-relay
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    component: mail
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: matrix-exim-relay
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: matrix-exim-relay
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        runAsUser: 100
        runAsGroup: 101
      containers:
        - name: "exim-relay"
          image: "devture/exim-relay:4.95-r0-4"
          imagePullPolicy: IfNotPresent
          ports:
            - name: smtp
              containerPort: 8025
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: smtp
          startupProbe:
            tcpSocket:
              port: smtp
          livenessProbe:
            tcpSocket:
              port: smtp
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
---
# Source: matrix/templates/riot/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-matrix-riot
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    
    component: element
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: matrix-riot
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        # re-roll deployment on config change
        checksum/riot-config: df37cd0fd0c7a66a473ca85908ab60be7197f4836b27249f49eb3665d310ae75
      labels:
        app.kubernetes.io/name: matrix-riot
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: "riot"
          image: "vectorim/riot-web:v1.7.33"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /app/config.json
              name: riot-config
              subPath: config.json
              readOnly: true
            - mountPath: /etc/nginx/nginx.conf
              name: riot-config
              subPath: nginx.conf
              readOnly: true
            - mountPath: /etc/nginx/conf.d/default.conf
              name: riot-config
              subPath: default.conf
              readOnly: true
            - mountPath: /var/cache/nginx
              name: ephemeral
              subPath: cache
            - mountPath: /var/run/pid
              name: ephemeral
              subPath: pid
          readinessProbe:
            httpGet:
              path: /
              port: http
          startupProbe:
            httpGet:
              path: /
              port: http
          livenessProbe:
            httpGet:
              path: /
              port: http
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      volumes:
        - name: riot-config
          configMap:
            name: my-release-matrix-riot-config
        # ephemeral cache, PID file, and any other temporary files nginx needs access to
        - name: ephemeral
          emptyDir: {}
---
# Source: matrix/templates/synapse/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-matrix-synapse
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
    component: synapse
spec:
  revisionHistoryLimit: 5
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: matrix-synapse
      app.kubernetes.io/instance: my-release
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        # re-roll deployment on homeserver.yaml change
        checksum/synapse-config: 5f1c099707c1e2249722b5a7dd912130b266775d8d2010dc76430aec4b3f5775
      labels:
        app.kubernetes.io/name: matrix-synapse
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      # generate signing key only on fresh install
      initContainers:
        - name: generate-signing-key
          image: "matrixdotorg/synapse:v1.108.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: SYNAPSE_SERVER_NAME
              value: example.com
            - name: SYNAPSE_REPORT_STATS
              value: "no"
          command: ["python"]
          args:
            - "-m"
            - "synapse.app.homeserver"
            - "--config-path"
            - "/data/homeserver.yaml"
            - "--keys-directory"
            - "/data/keys"
            - "--generate-keys"
          volumeMounts:
            - name: synapse-config
              mountPath: /data
            - name: signing-key
              mountPath: /data/keys 
      containers:
        - name: "synapse"
          image: "matrixdotorg/synapse:v1.108.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8008
              protocol: TCP
            - name: metrics
              containerPort: 9092
              protocol: TCP
          volumeMounts:
            - name: synapse-config
              mountPath: /data
            - name: signing-key
              mountPath: /data/keys
            - name: media-store
              mountPath: /data/media_store
            - name: uploads
              mountPath: /data/uploads
            - name: tmp
              mountPath: /tmp
          readinessProbe:
            httpGet:
              path: /_matrix/static/
              port: http
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /_matrix/static/
              port: http
            failureThreshold: 6
            periodSeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /_matrix/static/
              port: http
            periodSeconds: 10
            timeoutSeconds: 5
          securityContext:
            runAsGroup: 1000
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: true
      volumes:
        - name: synapse-config
          configMap:
            name: my-release-matrix-synapse-config
        - name: signing-key
          persistentVolumeClaim:
            claimName: my-release-matrix-signing-key
        - name: media-store
          persistentVolumeClaim:
            claimName: my-release-matrix-media-store
        # Ephemeral in-progress uploads
        - name: uploads
          emptyDir: {}
        - name: tmp
          emptyDir: {}
---
# Source: matrix/charts/postgresql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.4.4
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  serviceName: my-release-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: my-release-postgresql
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 16.1.0
        helm.sh/chart: postgresql-13.4.4
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: my-release-postgresql
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      hostNetwork: false
      hostIPC: false
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:16.1.0-debian-11-r25
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            # Authentication
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgres-password
            # Replication
            # Initdb
            # Standby
            # LDAP
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            # TLS
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Audit
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            # Others
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d/
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
      volumes:
        - name: custom-init-scripts
          configMap:
            name: my-release-postgresql-initdb
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: matrix/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-matrix
  labels:
    helm.sh/chart: matrix-2.51.0
    app.kubernetes.io/version: "v1.108.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: "matrix"
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_intercept_errors off;
spec:
  rules:
    - host: matrix.chart-example.local
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: "my-release-matrix-synapse"
                port:
                  number: 80
    - host: element.chart-example.local
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: "my-release-matrix-riot"
                port:
                  number: 80
    - host: matrix-fed.chart-example.local
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: "my-release-matrix-synapse-federation"
                port:
                  number: 80
