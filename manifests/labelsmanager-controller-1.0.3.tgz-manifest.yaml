---
# Source: labelsmanager-controller/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-labelsmanager-controller
  labels:
    helm.sh/chart: labelsmanager-controller-1.0.3
    app.kubernetes.io/name: labelsmanager-controller
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
# permissions to do leader election.
---
# Source: labelsmanager-controller/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  name: labels.labels.deliveryhero.com
  labels:
    helm.sh/chart: labelsmanager-controller-1.0.3
    app.kubernetes.io/name: labelsmanager-controller
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: labels.deliveryhero.com
  names:
    kind: Labels
    listKind: LabelsList
    plural: labels
    singular: labels
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Number of deployments managed by controller
      jsonPath: .status.managedPods
      name: updated pods
      type: integer
    - jsonPath: .status.labels
      name: Labels
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Labels is the Schema for the labels API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LabelsSpec defines the desired state of Labels
            properties:
              labels:
                additionalProperties:
                  type: string
                type: object
              priority:
                type: integer
            type: object
          status:
            description: LabelsStatus defines the observed state of Labels
            properties:
              labels:
                type: string
              managedPods:
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: labelsmanager-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-labelsmanager-controller
  labels:
    helm.sh/chart: labelsmanager-controller-1.0.3
    app.kubernetes.io/name: labelsmanager-controller
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - labels.deliveryhero.com
  resources:
  - labels
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - labels.deliveryhero.com
  resources:
  - labels/status
  verbs:
  - get
  - patch
  - update
---
# Source: labelsmanager-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-labelsmanager-controller
  labels:
    helm.sh/chart: labelsmanager-controller-1.0.3
    app.kubernetes.io/name: labelsmanager-controller
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-labelsmanager-controller
subjects:
- kind: ServiceAccount
  name: my-release-labelsmanager-controller
  namespace: default
---
# Source: labelsmanager-controller/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-release-labelsmanager-controller
  labels:
    helm.sh/chart: labelsmanager-controller-1.0.3
    app.kubernetes.io/name: labelsmanager-controller
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: labelsmanager-controller
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        helm.sh/chart: labelsmanager-controller-1.0.3
        app.kubernetes.io/name: labelsmanager-controller
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: my-release-labelsmanager-controller
      securityContext:
        {}
      containers:
        - name: labelsmanager-controller
          command:
          - /manager
          args:
          - --enable-leader-election=false
          - --production=true
          - --metrics-addr=0
          securityContext:
            {}
          image: "thomasnyambati/labelsmanager-controller:1.0.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OVERWRITE
              value: "false"

          resources:
            {}
