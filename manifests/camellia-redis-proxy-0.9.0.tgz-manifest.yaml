---
# Source: camellia-redis-proxy/templates/application-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: camellia-redis-proxy-application-config-template
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
data:
  application.yml: |-
    ## This is application.yml configuration file for camellia-redis-proxy
    
    ## Default dynamic configuration example for multi-tenant proxy configuration
    ## refer: https://github.com/netease-im/camellia/blob/master/docs/redis-proxy/other/multi-telant2.md
    ## you need to provide a properties file (default is camellia-redis-proxy.properties) for dynamic configuration.
    server:
      port: 6380
    spring:
      application:
        name: camellia-redis-proxy-server
    
    camellia-redis-proxy:
      console-port: 16379
      monitor-enable: false
      monitor-interval-seconds: 60
      plugins:
        - monitorPlugin
        - bigKeyPlugin
        - hotKeyPlugin
      client-auth-provider-class-name: com.netease.nim.camellia.redis.proxy.auth.MultiTenantClientAuthProvider
      transpond:
        type: custom
        custom:
          proxy-route-conf-updater-class-name: com.netease.nim.camellia.redis.proxy.route.MultiTenantProxyRouteConfUpdater
    #
    #  the mapping camellia-redis-proxy.properties file content, that is an array where each item represents a route, supporting multiple sets of routes:
    #  multi.tenant.route.config=[{"name":"route1", "password": "passwd1", "route": "redis://passxx@127.0.0.1:16379"},{"name":"route2", "password": "passwd2", "route": "redis-cluster://@127.0.0.1:6380,127.0.0.1:6381,127.0.0.1:6382"},{"name":"route3", "password": "passwd3", "route": {"type": "simple","operation": {"read": "redis://passwd123@127.0.0.1:6379","type": "rw_separate","write": "redis-sentinel://passwd2@127.0.0.1:6379,127.0.0.1:6378/master"}}}]
    
    
    ## dynamic configuration for a single-tenant proxy with a local redis backend with json-file format
    ## refer: https://github.com/netease-im/camellia/blob/master/docs/redis-proxy/other/dynamic-conf.md
    ##
    #server:
    #  port: 6380
    #spring:
    #  application:
    #    name: camellia-redis-proxy-server
    #
    #camellia-redis-proxy:
    #  console-port: 16379                           # console port, default 16379, if setting -16379, proxy will choose a random port, if setting 0, will disable console
    #  password: pass123                             # password of proxy, priority less than custom client-auth-provider-class-name
    #  monitor-enable: false                         # monitor enable/disable configure
    #  monitor-interval-seconds: 60                  # monitor data refresh interval seconds
    #  plugins:                                      # plugin list
    #    - monitorPlugin
    #    - bigKeyPlugin
    #    - hotKeyPlugin
    #  proxy-dynamic-conf-loader-class-name: com.netease.nim.camellia.redis.proxy.conf.FileBasedProxyDynamicConfLoader
    #  config:
    #    "dynamic.conf.file.path": "camellia-redis-proxy.properties"
    #  transpond:
    #    type: local                                 # local、remote、custom, local type does not support multi-tenant.
    #    local:
    #      type: complex                             # simple、complexze
    #      dynamic: true                             # dynamic load conf
    #      check-interval-millis: 3000               # dynamic conf check interval seconds
    #      json-file: "resource-table.json"          # backend redis resources json file
    
    ## Another configuration for camellia-redis-proxy under a multi-tenant mode.
    ## refer: https://github.com/netease-im/camellia/blob/master/docs/redis-proxy/other/multi-telant.md
    ## you need to provide a properties file (default is camellia-redis-proxy.properties) for dynamic configuration.
    #
    # server:
    #   port: 6380
    # spring:
    #   application:
    #     name: camellia-redis-proxy-server
    #
    # camellia-redis-proxy:
    #   console-port: 16379
    #   monitor-enable: false
    #   monitor-interval-seconds: 60
    #   plugins:
    #     - monitorPlugin
    #     - bigKeyPlugin
    #     - hotKeyPlugin
    #   client-auth-provider-class-name: com.netease.nim.camellia.redis.proxy.auth.DynamicConfClientAuthProvider
    #   transpond:
    #     type: custom
    #     custom:
    #       proxy-route-conf-updater-class-name: com.netease.nim.camellia.redis.proxy.route.DynamicConfProxyRouteConfUpdater
    #
    #  the mapping camellia-redis-proxy.properties file content:
    #
    #  ## provided for DynamicConfProxyRouteConfUpdater
    #  1.default.route.conf=redis://@127.0.0.1:6379
    #  2.default.route.conf=redis-cluster://@127.0.0.1:6380,127.0.0.1:6381,127.0.0.1:6382
    #  3.default.route.conf={"type": "simple","operation": {"read": "redis://passwd123@127.0.0.1:6379","type": "rw_separate","write": "redis-sentinel://passwd2@127.0.0.1:6379,127.0.0.1:6378/master"}}
    #
    #  ## provided for DynamicConfClientAuthProvider
    #  password123.auth.conf=1|default
    #  password456.auth.conf=2|default
    #  password789.auth.conf=3|default
---
# Source: camellia-redis-proxy/templates/backend-resource-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: camellia-redis-proxy-backend-resource-template
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
data:
  resource-table.json: |-
    ## This is dynamic configuration file for camellia-redis-proxy backend redis resources with json format
    
    ## the supported backend redis resources can be referred here: https://github.com/netease-im/camellia/blob/master/docs/redis-proxy/auth/redis-resources.md
    ## and the example of backend resource configuration can be referred here: https://github.com/netease-im/camellia/blob/master/docs/redis-proxy/auth/complex.md
    
    ## for example:
    ## {
    #    "type": "simple",
    #    "operation": {
    #        "read": "redis://passwd123@127.0.0.1:6379",
    #        "type": "rw_separate",
    #        "write": "redis-sentinel://passwd2@127.0.0.1:6379,127.0.0.1:6378/master"
    #    }
    # }
    
    ## config a redis backend resource, replace it with your own redis resource
    redis://passwd@127.0.0.1:6379
---
# Source: camellia-redis-proxy/templates/metrics-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: camellia-redis-proxy-metrics-config
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
data:
  metrics-config.yaml: |-
    extensions:
      memory_ballast:
        size_mib: 32

    receivers:
      apecloudredis:
        endpoint: ${env:ENDPOINT}
        username: ${env:REDIS_USER}
        password: ${env:REDIS_PASSWORD}
        password_file: ""
        lua_script: ""
        tls:
          insecure: true
          insecure_skip_verify: true
        collection_interval: 15s

    processors:
      memory_limiter:
        limit_mib: 128
        spike_limit_mib: 32
        check_interval: 10s

    exporters:
      prometheus:
        endpoint: 0.0.0.0:9121
        send_timestamps: false
        metric_expiration: 20s
        enable_open_metrics: false
        resource_to_telemetry_conversion:
          enabled: true

    service:
      telemetry:
        logs:
          level: info
      pipelines:
        metrics:
          receivers: [ apecloudredis ]
          processors: [ memory_limiter ]
          exporters: [ prometheus ]
      extensions: [ ]
---
# Source: camellia-redis-proxy/templates/properties-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: camellia-redis-proxy-properties-config-template
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
data:
  camellia-redis-proxy.properties: |-
    ## This is dynamic configuration file for camellia redis proxy
    ## when camellia-redis-proxy.proxy-dynamic-conf-loader-class-name defined in application.yaml is com.netease.nim.camellia.redis.proxy.conf.FileBasedProxyDynamicConfLoader then this file will be loaded
    ## the default configuration file name is camellia-redis-proxy.properties
    
    ## Configuration for multi-tenant proxies
    
    #  ## provided for DynamicConfProxyRouteConfUpdater
    #  1.default.route.conf=redis://@127.0.0.1:6379
    #  2.default.route.conf=redis-cluster://@127.0.0.1:6380,127.0.0.1:6381,127.0.0.1:6382
    #  3.default.route.conf={"type": "simple","operation": {"read": "redis://passwd123@127.0.0.1:6379","type": "rw_separate","write": "redis-sentinel://passwd2@127.0.0.1:6379,127.0.0.1:6378/master"}}
    #
    #  ## provided for DynamicConfClientAuthProvider
    #  password123.auth.conf=1|default
    #  password456.auth.conf=2|default
    #  password789.auth.conf=3|default
    
    
    ## Another Configuration for multi-tenant proxies
    #  ## This is an array where each item represents a route, supporting multiple sets of routes.
    #  multi.tenant.route.config=[{"name":"route1", "password": "passwd1", "route": "redis://passxx@127.0.0.1:16379"},{"name":"route2", "password": "passwd2", "route": "redis-cluster://@127.0.0.1:6380,127.0.0.1:6381,127.0.0.1:6382"},{"name":"route3", "password": "passwd3", "route": {"type": "simple","operation": {"read": "redis://passwd123@127.0.0.1:6379","type": "rw_separate","write": "redis-sentinel://passwd2@127.0.0.1:6379,127.0.0.1:6378/master"}}}]
---
# Source: camellia-redis-proxy/templates/properties-json-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: camellia-redis-proxy-properties-json-config-template
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
data:
  camellia-redis-proxy.json: |-
    ## This is dynamic configuration file for camellia redis proxy with json format
    ## when camellia-redis-proxy.proxy-dynamic-conf-loader-class-name defined in application.yaml is JsonFileBasedProxyDynamicConfLoader then this file will be loaded
    ## the default configuration file name is camellia-redis-proxy.json
    
    ## all your custom configuration should be put in this file with json format.
    ## refer:
    ## {
    #  "k1": "v1",
    #  "k2": "v2",
    #  "k3": {
    #    "k": "v"
    #  }
    # }
---
# Source: camellia-redis-proxy/templates/scripts.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: camellia-redis-proxy-scripts-template
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
data:
  
  camellia-redis-proxy-start.sh: |-
    #!/bin/sh
    set -ex
    
    java -XX:+UseG1GC -Xms4096m -Xmx4096m -Dio.netty.tryReflectionSetAccessible=true \
    -Dspring.config.location="${CAMELLIA_REDIS_PROXY_APPLICATION_CONFIG}" \
    -Ddynamic.conf.file.path="${CAMELLIA_REDIS_PROXY_PROPERTIES_CONFIG}" \
    --add-opens java.base/java.lang=ALL-UNNAMED \
    --add-opens java.base/java.io=ALL-UNNAMED \
    --add-opens java.base/java.math=ALL-UNNAMED \
    --add-opens java.base/java.net=ALL-UNNAMED \
    --add-opens java.base/java.nio=ALL-UNNAMED \
    --add-opens java.base/java.security=ALL-UNNAMED \
    --add-opens java.base/java.text=ALL-UNNAMED \
    --add-opens java.base/java.time=ALL-UNNAMED \
    --add-opens java.base/java.util=ALL-UNNAMED \
    --add-opens java.base/jdk.internal.access=ALL-UNNAMED \
    --add-opens java.base/jdk.internal.misc=ALL-UNNAMED \
    --add-opens java.base/sun.net.util=ALL-UNNAMED \
    -server org.springframework.boot.loader.launch.JarLauncher
---
# Source: camellia-redis-proxy/templates/clusterdefinition.yaml
apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: camellia-redis-proxy
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
spec:
  type: redis
  componentDefs:
    - name: camellia-redis-proxy
      workloadType: Stateful
      characterType: redis
      service:
        ports:
          - name: camellia-redis-proxy
            targetPort: camellia-redis-proxy
            port: 6380
      configSpecs:
        - name: application-config
          templateRef: camellia-redis-proxy-application-config-template
          constraintRef: camellia-redis-proxy-application-config-constraints
          namespace: default
          volumeName: application-config
        - name: properties-config
          templateRef: camellia-redis-proxy-properties-config-template
          namespace: default
          volumeName: properties-config
        - name: properties-json-config
          templateRef: camellia-redis-proxy-properties-json-config-template
          constraintRef: camellia-redis-proxy-properties-json-constraints
          namespace: default
          volumeName: properties-json-config
        - name: backend-resource-config
          templateRef: camellia-redis-proxy-backend-resource-template
          namespace: default
          volumeName: backend-resource-config
        - name: metrics-config
          templateRef: camellia-redis-proxy-metrics-config
          namespace: default
          volumeName: camellia-redis-proxy-metrics-config
          defaultMode: 0444
      scriptSpecs:
        - name: camellia-redis-proxy-scripts
          templateRef: camellia-redis-proxy-scripts-template
          namespace: default
          volumeName: scripts
          defaultMode: 0555
      podSpec:
        containers:
          - name: camellia-redis-proxy
            image: docker.io/apecloud/camellia-redis-proxy:1.2.26
            imagePullPolicy: IfNotPresent
            ports:
              - name: redis-proxy
                containerPort: 6380
            env:
              - name: CAMELLIA_REDIS_PROXY_APPLICATION_CONFIG
                value: "/opt/camellia-redis-proxy/application/application.yml"
              - name: CAMELLIA_REDIS_PROXY_PROPERTIES_CONFIG
                value: "/opt/camellia-redis-proxy/properties/camellia-redis-proxy.properties"
              - name: CAMELLIA_REDIS_PROXY_PROPERTIES_JSON_CONFIG
                value: "/opt/camellia-redis-proxy/properties-json/camellia-redis-proxy.json"
              - name: CAMELLIA_REDIS_PROXY_BACKEND_RESOURCE_CONFIG
                value: "/opt/camellia-redis-proxy/backend-resource/resource-table.json"
            volumeMounts:
              - name: data
                mountPath: /data
              - name: application-config
                mountPath: /opt/camellia-redis-proxy/application
              - name: properties-config
                mountPath: /opt/camellia-redis-proxy/properties
              - name: properties-json-config
                mountPath: /opt/camellia-redis-proxy/properties-json
              - name: backend-resource-config
                mountPath: /opt/camellia-redis-proxy/backend-resource
              - name: scripts
                mountPath: /scripts
            command:
              - sh
              - -c
            args:
              - /scripts/camellia-redis-proxy-start.sh
---
# Source: camellia-redis-proxy/templates/clusterversion.yaml
apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterVersion
metadata:
  name: camellia-redis-proxy-1.2.26
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterDefinitionRef: camellia-redis-proxy
  componentVersions:
  - componentDefRef: camellia-redis-proxy
    versionsContext:
      containers:
      - name: camellia-redis-proxy
        image: docker.io/apecloud/camellia-redis-proxy:1.2.26
        imagePullPolicy: IfNotPresent
---
# Source: camellia-redis-proxy/templates/componentdefinition-camellia-redis-proxy.yaml
apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: camellia-redis-proxy
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
spec:
  provider: kubeblocks
  description: A Camellia Redis Proxy component definition for kubeBlocks
  serviceKind: camellia-redis-proxy
  serviceVersion: 1.2.26
  services:
    - name: proxy
      serviceName: proxy
      spec:
        ports:
          - name: redis-proxy
            targetPort: redis-proxy
            port: 6380
          - name: console-port
            targetPort: console-port
            port: 16379
  updateStrategy: BestEffortParallel
  monitor:
    builtIn: false
    exporterConfig:
      scrapePort: 9121
      scrapePath: "/metrics"
  configs:
    - name: application-config
      templateRef: camellia-redis-proxy-application-config-template
      constraintRef: camellia-redis-proxy-application-config-constraints
      namespace: default
      volumeName: application-config
    - name: properties-config
      templateRef: camellia-redis-proxy-properties-config-template
      constraintRef: camellia-redis-proxy-properties-constraints
      namespace: default
      volumeName: properties-config
    - name: properties-json-config
      templateRef: camellia-redis-proxy-properties-json-config-template
      constraintRef: camellia-redis-proxy-properties-json-constraints
      namespace: default
      volumeName: properties-json-config
    - name: backend-resource-config
      templateRef: camellia-redis-proxy-backend-resource-template
      namespace: default
      volumeName: backend-resource-config
    - name: metrics-config
      templateRef: camellia-redis-proxy-metrics-config
      namespace: default
      volumeName: metrics-config
      defaultMode: 0444
  scripts:
    - name: camellia-redis-proxy-scripts
      templateRef: camellia-redis-proxy-scripts-template
      namespace: default
      volumeName: scripts
      defaultMode: 0555
  runtime:
    containers:
      - name: camellia-redis-proxy
        image: docker.io/apecloud/camellia-redis-proxy:1.2.26
        imagePullPolicy: IfNotPresent
        ports:
          - name: redis-proxy
            containerPort: 6380
          - name: console-port
            containerPort: 16379
        env:
          - name: CAMELLIA_REDIS_PROXY_APPLICATION_CONFIG
            value: "/opt/camellia-redis-proxy/application/application.yml"
          - name: CAMELLIA_REDIS_PROXY_PROPERTIES_CONFIG
            value: "/opt/camellia-redis-proxy/properties/camellia-redis-proxy.properties"
          - name: CAMELLIA_REDIS_PROXY_PROPERTIES_JSON_CONFIG
            value: "/opt/camellia-redis-proxy/properties-json/camellia-redis-proxy.json"
          - name: CAMELLIA_REDIS_PROXY_BACKEND_RESOURCE_CONFIG
            value: "/opt/camellia-redis-proxy/backend-resource/resource-table.json"
        volumeMounts:
          - name: data
            mountPath: /data
          - name: application-config
            mountPath: /opt/camellia-redis-proxy/application
          - name: properties-config
            mountPath: /opt/camellia-redis-proxy/properties
          - name: properties-json-config
            mountPath: /opt/camellia-redis-proxy/properties-json
          - name: backend-resource-config
            mountPath: /opt/camellia-redis-proxy/backend-resource
          - name: scripts
            mountPath: /scripts
        command:
          - sh
          - -c
        args:
          - /scripts/camellia-redis-proxy-start.sh
---
# Source: camellia-redis-proxy/templates/application-configconstraint.yaml
apiVersion: apps.kubeblocks.io/v1beta1
kind: ConfigConstraint
metadata:
  name: camellia-redis-proxy-application-config-constraints
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
spec:
  reloadAction:
    autoTrigger:
      processName: camellia-redis-proxy-application

  fileFormatConfig:
    format: yaml
---
# Source: camellia-redis-proxy/templates/properties-configconstraint.yaml
apiVersion: apps.kubeblocks.io/v1beta1
kind: ConfigConstraint
metadata:
  name: camellia-redis-proxy-properties-constraints
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
spec:
  reloadAction:
    autoTrigger:
      processName: camellia-redis-proxy-properties

  fileFormatConfig:
    format: props-plus
---
# Source: camellia-redis-proxy/templates/properties-json-configconstraint.yaml
apiVersion: apps.kubeblocks.io/v1beta1
kind: ConfigConstraint
metadata:
  name: camellia-redis-proxy-properties-json-constraints
  labels:
    helm.sh/chart: camellia-redis-proxy-0.9.0
    app.kubernetes.io/name: camellia-redis-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.26"
    app.kubernetes.io/managed-by: Helm
spec:
  reloadAction:
    autoTrigger:
      processName: camellia-redis-proxy-properties-json

  fileFormatConfig:
    format: json
