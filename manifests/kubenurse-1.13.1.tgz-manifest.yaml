---
# Source: kubenurse/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name:
    my-release-kubenurse
  labels:
    helm.sh/chart: kubenurse-1.13.1
    app.kubernetes.io/name: kubenurse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.13.1"
    app.kubernetes.io/managed-by: Helm
  namespace: default
---
# Source: kubenurse/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubenurse
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - get
  - watch
---
# Source: kubenurse/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubenurse
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubenurse
subjects:
- kind: ServiceAccount
  name: my-release-kubenurse
  namespace: default
---
# Source: kubenurse/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-kubenurse
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
---
# Source: kubenurse/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-kubenurse
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-kubenurse
subjects:
- kind: ServiceAccount
  name: my-release-kubenurse
  namespace: default
---
# Source: kubenurse/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubenurse
  labels:
    helm.sh/chart: kubenurse-1.13.1
    app.kubernetes.io/name: kubenurse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.13.1"
    app.kubernetes.io/managed-by: Helm
  namespace: default
spec:
  ports:
  - name: 8080-8080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: kubenurse
    app.kubernetes.io/instance: my-release
---
# Source: kubenurse/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    helm.sh/chart: kubenurse-1.13.1
    app.kubernetes.io/name: kubenurse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.13.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kubenurse
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kubenurse
      app.kubernetes.io/instance: my-release
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 34%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubenurse
        app.kubernetes.io/instance: my-release
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
        prometheus.io/scheme: "http"
        prometheus.io/scrape: "true"
    spec:
      securityContext:
      serviceAccountName: my-release-kubenurse
      containers:
      - name: "kubenurse"
        securityContext:
        resources:
        imagePullPolicy: IfNotPresent
        env:
        - name: KUBENURSE_INGRESS_URL
          value: https://dummy-kubenurse.example.com
        - name: KUBENURSE_SERVICE_URL
          value: http://my-release-kubenurse.default.svc.cluster.local:8080
        - name: KUBENURSE_INSECURE
          value: "true"
        - name: KUBENURSE_ALLOW_UNSCHEDULABLE
          value: "false"
        - name: KUBENURSE_NAMESPACE
          value: default
        - name: KUBENURSE_NEIGHBOUR_FILTER
          value: app.kubernetes.io/name=kubenurse
        - name: KUBENURSE_NEIGHBOUR_LIMIT
          value: "10"
        - name: KUBENURSE_CHECK_API_SERVER_DIRECT
          value: "true"
        - name: KUBENURSE_CHECK_API_SERVER_DNS
          value: "true"
        - name: KUBENURSE_CHECK_ME_INGRESS
          value: "true"
        - name: KUBENURSE_CHECK_ME_SERVICE
          value: "true"
        - name: KUBENURSE_CHECK_NEIGHBOURHOOD
          value: "true"
        - name: KUBENURSE_CHECK_INTERVAL
          value: 5s
        - name: KUBENURSE_REUSE_CONNECTIONS
          value: "false"
        - name: KUBENURSE_SHUTDOWN_DURATION
          value: 5s
        - name: KUBENURSE_USE_TLS
          value: "false"
        image: "postfinance/kubenurse:v1.13.1"
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          failureThreshold: 6
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          failureThreshold: 60
          periodSeconds: 2
        volumeMounts:
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
      dnsConfig:
      volumes:
---
# Source: kubenurse/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    helm.sh/chart: kubenurse-1.13.1
    app.kubernetes.io/name: kubenurse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.13.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kubenurse
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: dummy-kubenurse.example.com
    http:
      paths:
      - backend:
          service:
            name: my-release-kubenurse
            port:
              number: 8080
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - dummy-kubenurse.example.com
