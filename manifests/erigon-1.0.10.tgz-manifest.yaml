---
# Source: erigon/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-erigon
  labels:
    helm.sh/chart: erigon-1.0.10
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  namespace: default
---
# Source: erigon/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-erigon-env
  labels:
    helm.sh/chart: erigon-1.0.10
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: erigon/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-erigon-jwt
type: Opaque
data:
  jwt.hex: ZWNiMjJiYzI0ZTdkNDA2MWY3ZWQ2OTBjY2Q1ODQ2ZDdkNzNmNWQyYjk3MzMyNjdlMTJmNTY3OTAzOThkOTA4YQ==
---
# Source: erigon/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: default-my-release-erigon
  labels:
    helm.sh/chart: erigon-1.0.10
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
---
# Source: erigon/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-my-release-erigon
  labels:
    helm.sh/chart: erigon-1.0.10
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-my-release-erigon
subjects:
  - kind: ServiceAccount
    name: my-release-erigon
    namespace: default
---
# Source: erigon/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-erigon
  labels:
    helm.sh/chart: erigon-1.0.10
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
---
# Source: erigon/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-erigon
  labels:
    helm.sh/chart: erigon-1.0.10
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-erigon
subjects:
  - kind: ServiceAccount
    name: my-release-erigon
---
# Source: erigon/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-erigon-headless
  labels:
    helm.sh/chart: erigon-1.0.10
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 30303
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: 30303
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: 8545
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    - port: 8551
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc     
    - port: 6060
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
---
# Source: erigon/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-erigon
  labels:
    helm.sh/chart: erigon-1.0.10
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 30303
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: 30303
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: 8545
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    - port: 8551
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc    
    - port: 6060
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
---
# Source: erigon/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-erigon
  labels:
    helm.sh/chart: erigon-1.0.10
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: erigon
      app.kubernetes.io/instance: my-release
  serviceName: my-release-erigon-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: erigon
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/secrets: 6e3d4c56bdf7e93e287b930e72a24f1d3581dad6f300b135c846d08b10f35bce
    spec:
      shareProcessNamespace: true
      serviceAccountName: my-release-erigon
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
        - name: init-chown-data
          image: "busybox:1.34.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "10001:10001", "/data"]
          resources:
      
            {}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      containers:
        - name: erigon
          image: "thorax/erigon:devel"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -ac
            - >
              exec erigon
              --datadir=/data
              --nat=extip:$(POD_IP)
              --port=30303
              --http=false
              --private.api.addr=127.0.0.1:9090
              --authrpc.jwtsecret=/data/jwt.hex
              --authrpc.addr=0.0.0.0
              --authrpc.port=8551
              --authrpc.vhosts=*
              --ws
              --metrics
              --metrics.addr=0.0.0.0
              --metrics.port=6060
            
          securityContext:
            {}
          volumeMounts:
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
            - name: p2p-tcp
              containerPort: 30303
              protocol: TCP
            - name: p2p-udp
              containerPort: 30303
              protocol: UDP
            - name: http-rpc
              containerPort: 8545
              protocol: TCP
            - name: auth-rpc
              containerPort: 8551
              protocol: TCP
            - name: metrics
              containerPort: 6060
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            tcpSocket:
              port: metrics
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: metrics
          resources:
            {}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
        - name: erigon-rpcd
          image: "thorax/erigon:devel"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -ac
            - >
              while ! nc -z 127.0.0.1 9090; do sleep 1; done;
              exec rpcdaemon
              --datadir=/data
              --private.api.addr=127.0.0.1:9090
              --txpool.api.addr=127.0.0.1:9090
              --http.addr=0.0.0.0
              --http.port=8545
              --http.vhosts=*
              --ws
              --metrics
              --metrics.addr=0.0.0.0
              --metrics.port=6061
            
          volumeMounts:
            - name: storage
              mountPath: "/data"
          ports:
            - name: http-rpc
              containerPort: 8545
              protocol: TCP
            - name: metrics-rpcd
              containerPort: 6061
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            tcpSocket:
              port: http-rpc
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            tcpSocket:
              port: http-rpc
          resources:
            {}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      topologySpreadConstraints:
        []
      terminationGracePeriodSeconds: 300
      volumes:
        - name: jwt
          secret:
            secretName: my-release-erigon-jwt
        - name: storage
          emptyDir: {}
---
# Source: erigon/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-erigon-test-connection"
  labels:
    helm.sh/chart: erigon-1.0.10
    app.kubernetes.io/name: erigon
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
        - --location
        - --request
        - POST
        - 'my-release-erigon:8545/'
        - --header
        - 'Content-Type: application/json'
        - --data-raw
        - '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":83}'
  restartPolicy: Never
