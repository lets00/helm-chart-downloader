---
# Source: adminui/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adminui
  namespace: default
  labels:
    helm.sh/chart: adminui-0.15.1
    app.kubernetes.io/component: adminui
    app.kubernetes.io/part-of: adminui
    
    app.kubernetes.io/name: adminui
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: adminui/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: adminui
data:
  sqream-admin-config.json: null
---
# Source: adminui/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: adminui-role
  namespace: default
rules:
- apiGroups: ["*"]
  resources: ["pods"]
  verbs: ["list"]
---
# Source: adminui/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: adminui-rb
  namespace: 
subjects:
  - kind: ServiceAccount
    name: adminui
    namespace: default
roleRef:
  kind: Role
  name: adminui-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: adminui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: adminui
  namespace: default
  labels:
    helm.sh/chart: adminui-0.15.1
    app.kubernetes.io/component: adminui
    app.kubernetes.io/part-of: adminui
    
    app.kubernetes.io/name: adminui
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8085
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: adminui
    app.kubernetes.io/instance: my-release
---
# Source: adminui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminui
  namespace: default
  labels:
    helm.sh/chart: adminui-0.15.1
    app.kubernetes.io/component: adminui
    app.kubernetes.io/part-of: adminui
    
    app.kubernetes.io/name: adminui
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: adminui
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: adminui
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: adminui
      securityContext:
        {}
      volumes:
        - name: data-volume
          emptyDir: {}
      containers:
        - name: adminui
          securityContext:
            {}
          image: "us.gcr.io/blue-qa-10-sandbox/sqream-studio-v2:x86_64-ui-cloud-native-8daba95-28-06-2023"
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: 'adminui-local-secret'
            - secretRef:
                name: 'adminui-global-secret'
          env:
            - name: APP_VERSION
              value: ""
            - name: BLUE_CUSTOMER_SCRIPTS
              value: ""
            - name: CLUSTER_CONTROL_HOST
              value: "http://clustercontrol.sqream:8080"
            - name: DB_HOST
              value: ""
            - name: FLOW_MANAGER_HOST
              value: "http://flows.blue-operation:8080"
            - name: GOOGLE_CLOUD_STORAGE_CLIENT_EMAIL
              value: ""
            - name: GOOGLE_CLOUD_STORAGE_CLIENT_ID
              value: ""
            - name: GOOGLE_CLOUD_STORAGE_PRIVATE_KEY
              value: ""
            - name: GOOGLE_CLOUD_STORAGE_PROJECT_ID
              value: ""
            - name: HOTJAR_ID
              value: ""
            - name: MONITORING_BASE_URL
              value: "http://monitor.sqream:8080"
            - name: SQREAM_ADMIN_UI_PORT
              value: "8085"
            - name: SQREAM_K8S_PICKER
              value: ""
            - name: SQREAM_PICKER_PORT
              value: "443"
            - name: BILLING_REPORT_URL
              value: https://lookerstudio.google.com/embed/reporting/52cde60d-54e9-4824-a525-2e21bf0b31ea/page/bNMJD?params={"clusterid":"blalbal"}
          args: 
          ports:
            - name: http
              containerPort: 8085
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 3
            tcpSocket:
              port: 8085
          resources:
            {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node_pool
                operator: In
                values:
                - ui
      tolerations:
        - effect: NoSchedule
          key: dedicated
          operator: Equal
          value: uiGroup
---
# Source: adminui/templates/secrets.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: adminui-local-secret
  labels:
    helm.sh/chart: adminui-0.15.1
    app.kubernetes.io/component: adminui
    app.kubernetes.io/part-of: adminui
    
    app.kubernetes.io/name: adminui
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: local-secrets
    kind: ClusterSecretStore
  target:
    name: adminui-local-secret
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        annotations:
          {}
        labels:
          helm.sh/chart: adminui-0.15.1
          app.kubernetes.io/component: adminui
          app.kubernetes.io/part-of: adminui
          
          app.kubernetes.io/name: adminui
          app.kubernetes.io/instance: my-release
          app.kubernetes.io/version: "1.16.0"
          app.kubernetes.io/managed-by: Helm
      data:
        AUTH0_AUDIENCE: '{{ .AUTH0_AUDIENCE }}'
        AUTH0_CLIENTID: '{{ .CLIENT_ID }}'
        AUTH0_DOMAIN: '{{ .AUTH0_DOMAIN }}'
        AUTH0_ORGANIZATION: '{{ .AUTH0_ORGANIZATION }}'
        REDIS_HOST: '{{ .REDIS_IP_ADDRESS }}'
        REDIS_PORT: '{{ .REDIS_PORT }}'
  dataFrom:
    - extract:
        key: auth0-ui-client
    - extract:
        key: redis-managed-instance
---
# Source: adminui/templates/secrets.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: adminui-global-secret
  labels:
    helm.sh/chart: adminui-0.15.1
    app.kubernetes.io/component: adminui
    app.kubernetes.io/part-of: adminui
    
    app.kubernetes.io/name: adminui
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: global-secrets
    kind: ClusterSecretStore
  target:
    name:  adminui-global-secret
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: adminui-slack
---
# Source: adminui/templates/mapping.yaml
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: adminui-mapping
spec:
  hostname: "*"
  timeout_ms: 0
  retry_policy:
    num_retries: 10
    retry_on: 5xx
  allow_upgrade:
    - websocket
  prefix: "/"
  rewrite: "/"
  service: adminui.default:8085
---
# Source: adminui/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "adminui-test-connection"
  labels:
    helm.sh/chart: adminui-0.15.1
    app.kubernetes.io/component: adminui
    app.kubernetes.io/part-of: adminui
    
    app.kubernetes.io/name: adminui
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['adminui:8085']
  restartPolicy: Never
