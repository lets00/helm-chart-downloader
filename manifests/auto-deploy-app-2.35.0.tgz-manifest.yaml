---
# Source: auto-deploy-app/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-auto-deploy
  labels:
    app: my-release
    chart: "auto-deploy-app-2.35.0"
    release: my-release
    heritage: Helm
    app.kubernetes.io/name: my-release
    helm.sh/chart: "auto-deploy-app-2.35.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
rules:
  # TODO: narrow api groups
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
# Source: auto-deploy-app/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-auto-deploy
  labels:
    app: my-release
    chart: "auto-deploy-app-2.35.0"
    release: my-release
    heritage: Helm
    app.kubernetes.io/name: my-release
    helm.sh/chart: "auto-deploy-app-2.35.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-auto-deploy
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
# Source: auto-deploy-app/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-auto-deploy
  annotations:
  labels:
    track: "stable"
    app: my-release
    chart: "auto-deploy-app-2.35.0"
    release: my-release
    heritage: Helm
    app.kubernetes.io/name: my-release
    helm.sh/chart: "auto-deploy-app-2.35.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: web
  selector:
    app: my-release
    tier: "web"
    track: "stable"
---
# Source: auto-deploy-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release
  annotations:
    
    
  labels:
    track: "stable"
    tier: "web"
    app: my-release
    chart: "auto-deploy-app-2.35.0"
    release: my-release
    heritage: Helm
    app.kubernetes.io/name: my-release
    helm.sh/chart: "auto-deploy-app-2.35.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
spec:
  selector:
    matchLabels:
      app: my-release
      track: "stable"
      tier: "web"
      release: my-release
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/application-secrets: ""
        
        
      labels:
        track: "stable"
        tier: "web"
        app: my-release
        chart: "auto-deploy-app-2.35.0"
        release: my-release
        heritage: Helm
        app.kubernetes.io/name: my-release
        helm.sh/chart: "auto-deploy-app-2.35.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-release
    spec:
      imagePullSecrets:
          - name: gitlab-registry
      terminationGracePeriodSeconds: 
      containers:
      - name: auto-deploy-app
        image: gitlab.example.com/group/project:stable
        imagePullPolicy: IfNotPresent
        env:
        - name: GITLAB_ENVIRONMENT_NAME
          value: 
        - name: GITLAB_ENVIRONMENT_URL
          value: 
        ports:
        - name: "web"
          containerPort: 5000
        livenessProbe:
          httpGet:
            path: /
            scheme: HTTP
            port: 5000
          initialDelaySeconds: 15
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /
            scheme: HTTP
            port: 5000
          initialDelaySeconds: 5
          timeoutSeconds: 3
        resources:
            requests: {}
---
# Source: auto-deploy-app/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: my-release-auto-deploy
  labels:
    app: my-release
    chart: "auto-deploy-app-2.35.0"
    release: my-release
    heritage: Helm
    app.kubernetes.io/name: my-release
    helm.sh/chart: "auto-deploy-app-2.35.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
spec:

  tls:
  - hosts:
    - "my.host.com"
    secretName: my-release-auto-deploy-tls
  rules:
  - host: "my.host.com"
    http:
      &httpRule
      paths:
      - path: "/"
        backend:
          serviceName: my-release-auto-deploy
          servicePort: 5000
