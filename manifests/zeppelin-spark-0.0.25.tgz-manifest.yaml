---
# Source: zeppelin-spark/charts/spark/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spark
  namespace: default
  labels:
    spark-version: 2.2.0
---
# Source: zeppelin-spark/charts/zeppelin/templates/zeppelin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-zeppelin-password
  labels:
    app: my-release-zeppelin
    chart: "zeppelin-0.0.18"
    release: "my-release"
    heritage: "Helm"
type: Opaque
data:
  username: "YWRtaW4="
  password: "emVwcGVsaW4="
---
# Source: zeppelin-spark/charts/zeppelin/templates/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: my-release-zeppelin-config
data:
  log4j.properties: |-
    log4j.rootLogger = INFO, stdout,

    log4j.appender.stdout = org.apache.log4j.ConsoleAppender
    log4j.appender.stdout.Threshold = DEBUG
    log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
    log4j.appender.stdout.layout.ConversionPattern=%5p [%d] ({%t} %F[%M]:%L) - %m%n

    log4j.logger.org.apache.zeppelin.interpreter = DEBUG

  log4j_k8s_cluster.properties: |-
    log4j.rootLogger = INFO, stdout

    log4j.appender.stdout = org.apache.log4j.ConsoleAppender
    log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
    log4j.appender.stdout.layout.ConversionPattern=%5p XXX [%d] ({%t} %F[%M]:%L) - %m%n

  shiro.ini.template: |-
    [users]
    ADMIN_USER_NAME = ADMIN_PASSWORD, admin

    [main]
    sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
    cookie = org.apache.shiro.web.servlet.SimpleCookie
    cookie.name = JSESSIONID
    cookie.httpOnly = true
    sessionManager.sessionIdCookie = $cookie
    securityManager.sessionManager = $sessionManager
    securityManager.sessionManager.globalSessionTimeout = 86400000
    shiro.loginUrl = /api/login
    passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
    iniRealm.credentialsMatcher = $passwordMatcher

    [roles]
    admin = *

    [urls]
    /api/version = anon
    /api/interpreter/setting/restart/** = authc
    /api/interpreter/** = authc, roles[admin]
    /api/configurations/** = authc, roles[admin]
    /api/credential/** = authc, roles[admin]
    #/** = anon
    /** = authc
---
# Source: zeppelin-spark/charts/zeppelin/templates/interpreter-settings-config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: my-release-zeppelin-interpreter-config
data:
  interpreter.json: |-
    {
      "interpreterSettings": {
        "2CYM9BXZH": {
          "id": "2CYM9BXZH",
          "name": "sh",
          "group": "sh",
          "properties": {
            "zeppelin.shell.principal": {
              "name": "zeppelin.shell.principal",
              "value": "",
              "type": "string"
            },
            "shell.working.directory.user.home": {
              "name": "shell.working.directory.user.home",
              "value": false,
              "type": "checkbox"
            },
            "zeppelin.shell.auth.type": {
              "name": "zeppelin.shell.auth.type",
              "value": "",
              "type": "string"
            },
            "zeppelin.shell.keytab.location": {
              "name": "zeppelin.shell.keytab.location",
              "value": "",
              "type": "string"
            },
            "shell.command.timeout.millisecs": {
              "name": "shell.command.timeout.millisecs",
              "value": "60000",
              "type": "number"
            }
          },
          "status": "READY",
          "interpreterGroup": [
            {
              "name": "sh",
              "class": "org.apache.zeppelin.shell.ShellInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "sh",
                "editOnDblClick": false
              }
            }
          ],
          "dependencies": [],
          "option": {
            "remote": true,
            "port": -1,
            "isExistingProcess": false,
            "setPermission": false,
            "owners": [],
            "isUserImpersonate": false
          }
        },
        "2CXX5TW2H": {
          "id": "2CXX5TW2H",
          "name": "spark",
          "group": "spark",
          "properties": {
            "spark.executor.memory": {
              "name": "spark.executor.memory",
              "value": "",
              "type": "string"
            },
            "zeppelin.spark.concurrentSQL": {
              "name": "zeppelin.spark.concurrentSQL",
              "value": false,
              "type": "checkbox"
            },
            "zeppelin.R.knitr": {
              "name": "zeppelin.R.knitr",
              "value": true,
              "type": "checkbox"
            },
            "zeppelin.R.cmd": {
              "name": "zeppelin.R.cmd",
              "value": "R",
              "type": "string"
            },
            "spark.app.name": {
              "name": "spark.app.name",
              "value": "zri",
              "type": "string"
            },
            "zeppelin.R.image.width": {
              "name": "zeppelin.R.image.width",
              "value": "100%",
              "type": "number"
            },
            "spark.submit.deployMode": {
              "name": "spark.submit.deployMode",
              "value": "cluster",
              "type": "string"
            },
            "spark.executor.instances": {
              "name": "spark.executor.instances",
              "value": "2",
              "type": "number"
            },
            "zeppelin.spark.importImplicit": {
              "name": "zeppelin.spark.importImplicit",
              "value": true,
              "type": "checkbox"
            },
            "zeppelin.dep.additionalRemoteRepository": {
              "name": "zeppelin.dep.additionalRemoteRepository",
              "value": "spark-packages,http://dl.bintray.com/spark-packages/maven,false;",
              "type": "textarea"
            },
            "zeppelin.spark.maxResult": {
              "name": "zeppelin.spark.maxResult",
              "value": "1000",
              "type": "number"
            },
            "master": {
              "name": "master",
              "value": "k8s://https://kubernetes:443",
              "type": "string"
            },
            "zeppelin.pyspark.python": {
              "name": "zeppelin.pyspark.python",
              "value": "python",
              "type": "string"
            },
            "args": {
              "name": "args",
              "value": "",
              "type": "string"
            },
            "zeppelin.dep.localrepo": {
              "name": "zeppelin.dep.localrepo",
              "value": "local-repo",
              "type": "string"
            },
            "zeppelin.spark.sql.stacktrace": {
              "name": "zeppelin.spark.sql.stacktrace",
              "value": false,
              "type": "checkbox"
            },
            "zeppelin.spark.useHiveContext": {
              "name": "zeppelin.spark.useHiveContext",
              "value": true,
              "type": "checkbox"
            },
            "zeppelin.spark.unSupportedVersionCheck": {
              "name": "zeppelin.spark.unSupportedVersionCheck",
              "value": true,
              "type": "checkbox"
            },
            "zeppelin.R.render.options": {
              "name": "zeppelin.R.render.options",
              "value": "out.format \u003d \u0027html\u0027, comment \u003d NA, echo \u003d FALSE, results \u003d \u0027asis\u0027, message \u003d F, warning \u003d F",
              "type": "textarea"
            },
            "zeppelin.spark.printREPLOutput": {
              "name": "zeppelin.spark.printREPLOutput",
              "value": true,
              "type": "checkbox"
            },
            "spark.cores.max": {
              "name": "spark.cores.max",
              "value": "",
              "type": "number"
            }
          },
          "status": "READY",
          "interpreterGroup": [
            {
              "name": "spark",
              "class": "org.apache.zeppelin.spark.SparkInterpreter",
              "defaultInterpreter": true,
              "editor": {
                "language": "scala"
              }
            },
            {
              "name": "sql",
              "class": "org.apache.zeppelin.spark.SparkSqlInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "sql"
              }
            },
            {
              "name": "dep",
              "class": "org.apache.zeppelin.spark.DepInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "scala"
              }
            },
            {
              "name": "pyspark",
              "class": "org.apache.zeppelin.spark.PySparkInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "python"
              }
            },
            {
              "name": "r",
              "class": "org.apache.zeppelin.spark.SparkRInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "r"
              }
            },
            {
              "name": "ipyspark",
              "class": "org.apache.zeppelin.spark.IPySparkInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "python",
                "editOnDblClick": false
              }
            }
          ],
          "dependencies": [],
          "option": {
            "remote": true,
            "port": -1,
            "perNote": "isolated",
            "perUser": "",
            "isExistingProcess": false,
            "setPermission": false,
            "owners": [],
            "isUserImpersonate": false
          }
        },
        "2CYVXG82Y": {
          "id": "2CYVXG82Y",
          "name": "angular",
          "group": "angular",
          "properties": {},
          "status": "READY",
          "interpreterGroup": [
            {
              "name": "angular",
              "class": "org.apache.zeppelin.angular.AngularInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "editOnDblClick": true
              }
            }
          ],
          "dependencies": [],
          "option": {
            "remote": true,
            "port": -1,
            "isExistingProcess": false,
            "setPermission": false,
            "owners": [],
            "isUserImpersonate": false
          }
        },
        "2D1B3T53H": {
          "id": "2D1B3T53H",
          "name": "groovy",
          "group": "groovy",
          "properties": {
            "GROOVY_CLASSES": {
              "name": "GROOVY_CLASSES",
              "value": "",
              "type": "textarea"
            }
          },
          "status": "READY",
          "interpreterGroup": [
            {
              "name": "groovy",
              "class": "org.apache.zeppelin.groovy.GroovyInterpreter",
              "defaultInterpreter": false
            }
          ],
          "dependencies": [],
          "option": {
            "remote": true,
            "port": -1,
            "isExistingProcess": false,
            "setPermission": false,
            "owners": [],
            "isUserImpersonate": false
          }
        },
        "2D245VY96": {
          "id": "2D245VY96",
          "name": "file",
          "group": "file",
          "properties": {
            "hdfs.url": {
              "name": "hdfs.url",
              "value": "http://localhost:50070/webhdfs/v1/",
              "type": "url"
            },
            "hdfs.user": {
              "name": "hdfs.user",
              "value": "hdfs",
              "type": "string"
            },
            "hdfs.maxlength": {
              "name": "hdfs.maxlength",
              "value": "1000",
              "type": "number"
            }
          },
          "status": "READY",
          "interpreterGroup": [
            {
              "name": "hdfs",
              "class": "org.apache.zeppelin.file.HDFSFileInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "editOnDblClick": false
              }
            }
          ],
          "dependencies": [],
          "option": {
            "remote": true,
            "port": -1,
            "isExistingProcess": false,
            "setPermission": false,
            "owners": [],
            "isUserImpersonate": false
          }
        },
        "2D1KRUTHV": {
          "id": "2D1KRUTHV",
          "name": "jdbc",
          "group": "jdbc",
          "properties": {
            "default.url": {
              "name": "default.url",
              "value": "jdbc:postgresql://localhost:5432/",
              "type": "string"
            },
            "default.driver": {
              "name": "default.driver",
              "value": "org.postgresql.Driver",
              "type": "string"
            },
            "zeppelin.jdbc.principal": {
              "name": "zeppelin.jdbc.principal",
              "value": "",
              "type": "string"
            },
            "default.completer.ttlInSeconds": {
              "name": "default.completer.ttlInSeconds",
              "value": "120",
              "type": "number"
            },
            "default.password": {
              "name": "default.password",
              "value": "",
              "type": "password"
            },
            "default.completer.schemaFilters": {
              "name": "default.completer.schemaFilters",
              "value": "",
              "type": "textarea"
            },
            "default.splitQueries": {
              "name": "default.splitQueries",
              "value": false,
              "type": "checkbox"
            },
            "default.user": {
              "name": "default.user",
              "value": "gpadmin",
              "type": "string"
            },
            "zeppelin.jdbc.concurrent.max_connection": {
              "name": "zeppelin.jdbc.concurrent.max_connection",
              "value": "10",
              "type": "number"
            },
            "common.max_count": {
              "name": "common.max_count",
              "value": "1000",
              "type": "number"
            },
            "default.precode": {
              "name": "default.precode",
              "value": "",
              "type": "textarea"
            },
            "zeppelin.jdbc.auth.type": {
              "name": "zeppelin.jdbc.auth.type",
              "value": "",
              "type": "string"
            },
            "zeppelin.jdbc.concurrent.use": {
              "name": "zeppelin.jdbc.concurrent.use",
              "value": true,
              "type": "checkbox"
            },
            "zeppelin.jdbc.keytab.location": {
              "name": "zeppelin.jdbc.keytab.location",
              "value": "",
              "type": "string"
            }
          },
          "status": "READY",
          "interpreterGroup": [
            {
              "name": "sql",
              "class": "org.apache.zeppelin.jdbc.JDBCInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "sql",
                "editOnDblClick": false
              }
            }
          ],
          "dependencies": [],
          "option": {
            "remote": true,
            "port": -1,
            "isExistingProcess": false,
            "setPermission": false,
            "owners": [],
            "isUserImpersonate": false
          }
        },
        "2D2A8488A": {
          "id": "2D2A8488A",
          "name": "md",
          "group": "md",
          "properties": {
            "markdown.parser.type": {
              "name": "markdown.parser.type",
              "value": "pegdown",
              "type": "string"
            }
          },
          "status": "READY",
          "interpreterGroup": [
            {
              "name": "md",
              "class": "org.apache.zeppelin.markdown.Markdown",
              "defaultInterpreter": false,
              "editor": {
                "language": "markdown",
                "editOnDblClick": true
              }
            }
          ],
          "dependencies": [],
          "option": {
            "remote": true,
            "port": -1,
            "isExistingProcess": false,
            "setPermission": false,
            "owners": [],
            "isUserImpersonate": false
          }
        },
        "2CXW23SU3": {
          "id": "2CXW23SU3",
          "name": "python",
          "group": "python",
          "properties": {
            "zeppelin.python": {
              "name": "zeppelin.python",
              "value": "python",
              "type": "string"
            },
            "zeppelin.ipython.launch.timeout": {
              "name": "zeppelin.ipython.launch.timeout",
              "value": "30000",
              "type": "number"
            },
            "zeppelin.python.useIPython": {
              "name": "zeppelin.python.useIPython",
              "value": true,
              "type": "checkbox"
            },
            "zeppelin.python.maxResult": {
              "name": "zeppelin.python.maxResult",
              "value": "1000",
              "type": "number"
            }
          },
          "status": "READY",
          "interpreterGroup": [
            {
              "name": "python",
              "class": "org.apache.zeppelin.python.PythonInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "python",
                "editOnDblClick": false
              }
            },
            {
              "name": "ipython",
              "class": "org.apache.zeppelin.python.IPythonInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "python",
                "editOnDblClick": false,
                "completionKey": "TAB"
              }
            },
            {
              "name": "sql",
              "class": "org.apache.zeppelin.python.PythonInterpreterPandasSql",
              "defaultInterpreter": false,
              "editor": {
                "language": "sql",
                "editOnDblClick": false,
                "completionKey": "TAB"
              }
            },
            {
              "name": "conda",
              "class": "org.apache.zeppelin.python.PythonCondaInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "sh",
                "editOnDblClick": false
              }
            },
            {
              "name": "docker",
              "class": "org.apache.zeppelin.python.PythonDockerInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "sh",
                "editOnDblClick": false
              }
            }
          ],
          "dependencies": [],
          "option": {
            "remote": true,
            "port": -1,
            "isExistingProcess": false,
            "setPermission": false,
            "owners": [],
            "isUserImpersonate": false
          }
        }
      },
      "interpreterBindings": {
        "2CYJ77JJ3": [
          "2CXX5TW2H",
          "2D2A8488A",
          "2CYVXG82Y",
          "2CYM9BXZH",
          "2D245VY96",
          "2CXW23SU3",
          "2D1KRUTHV",
          "2D1B3T53H"
        ]
      },
      "interpreterRepositories": [
        {
          "id": "central",
          "type": "default",
          "url": "http://repo1.maven.org/maven2/",
          "releasePolicy": {
            "enabled": true,
            "updatePolicy": "daily",
            "checksumPolicy": "warn"
          },
          "snapshotPolicy": {
            "enabled": true,
            "updatePolicy": "daily",
            "checksumPolicy": "warn"
          },
          "mirroredRepositories": [],
          "repositoryManager": false
        },
        {
          "id": "local",
          "type": "default",
          "url": "file:///root/.m2/repository",
          "releasePolicy": {
            "enabled": true,
            "updatePolicy": "daily",
            "checksumPolicy": "warn"
          },
          "snapshotPolicy": {
            "enabled": true,
            "updatePolicy": "daily",
            "checksumPolicy": "warn"
          },
          "mirroredRepositories": [],
          "repositoryManager": false
        }
      ]
    }
---
# Source: zeppelin-spark/charts/zeppelin/templates/spark-configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: my-release-zeppelin-spark-config
data:
  spark-defaults.conf: |-
    spark.kubernetes.namespace=default
    spark.driver.cores=1
    spark.kubernetes.driver.limit.cores=1
    spark.executor.cores=1
    spark.driver.memory=1G
    spark.executor.memory=1G
    spark.kubernetes.container.image=banzaicloud/zeppelin-spark:v0.9.0-k8s-1.0.76
    spark.metrics.conf=/opt/spark/conf/monitoring/metrics.properties
    spark.local.dir=/tmp/spark-local
    spark.kubernetes.authenticate.driver.serviceAccountName=spark
    spark.kubernetes.driver.secrets.spark-my-release=/opt/spark/conf/monitoring
    spark.kubernetes.executor.secrets.spark-my-release=/opt/spark/conf/monitoring
    spark.kubernetes.driver.label.app=my-release-zeppelin-driver
    spark.kubernetes.executor.label.app=my-release-zeppelin-executor
---
# Source: zeppelin-spark/charts/zeppelin/templates/zeppelin-site-config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: my-release-zeppelin-site-config
data:
  zeppelin-site.xml: |-
    <?xml version="1.0"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <!--
       Licensed to the Apache Software Foundation (ASF) under one or more
       contributor license agreements.  See the NOTICE file distributed with
       this work for additional information regarding copyright ownership.
       The ASF licenses this file to You under the Apache License, Version 2.0
       (the "License"); you may not use this file except in compliance with
       the License.  You may obtain a copy of the License at

           http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
    -->

    <configuration>

    <property>
      <name>zeppelin.server.addr</name>
      <value>0.0.0.0</value>
      <description>Server address</description>
    </property>

    <property>
      <name>zeppelin.server.rpc.hostName</name>
      <value>my-release-zeppelin</value>
      <description>RPC server address</description>
    </property>

    <property>
      <name>zeppelin.server.rpc.portRange</name>
      <value>38853:38853</value>
      <description>RPC Server address port</description>
    </property>


    <property>
      <name>zeppelin.server.port</name>
      <value>8080</value>
      <description>Server port.</description>
    </property>

    <property>
      <name>zeppelin.server.ssl.port</name>
      <value>8443</value>
      <description>Server ssl port. (used when ssl property is set to true)</description>
    </property>

    <property>
      <name>zeppelin.server.context.path</name>
      <value></value>
      <description>Context Path of the Web Application</description>
    </property>

    <property>
      <name>zeppelin.war.tempdir</name>
      <value>webapps</value>
      <description>Location of jetty temporary directory</description>
    </property>

    <property>
      <name>zeppelin.notebook.dir</name>
      <value>notebook</value>
      <description>path or URI for notebook persist</description>
    </property>

    <property>
      <name>zeppelin.notebook.homescreen</name>
      <value></value>
      <description>id of notebook to be displayed in homescreen. ex) 2A94M5J1Z Empty value displays default home screen</description>
    </property>

    <property>
      <name>zeppelin.notebook.homescreen.hide</name>
      <value>false</value>
      <description>hide homescreen notebook from list when this value set to true</description>
    </property>
    <property>
      <name>zeppelin.notebook.storage</name>
      <value>org.apache.zeppelin.notebook.repo.GitNotebookRepo</value>
      <description>versioned notebook persistence layer implementation</description>
    </property>

    <property>
      <name>zeppelin.notebook.one.way.sync</name>
      <value>false</value>
      <description>If there are multiple notebook storages, should we treat the first one as the only source of truth?</description>
    </property>

    <property>
      <name>zeppelin.interpreter.dir</name>
      <value>interpreter</value>
      <description>Interpreter implementation base directory</description>
    </property>

    <property>
      <name>zeppelin.interpreter.localRepo</name>
      <value>local-repo</value>
      <description>Local repository for interpreter's additional dependency loading</description>
    </property>

    <property>
      <name>zeppelin.interpreter.dep.mvnRepo</name>
      <value>http://repo1.maven.org/maven2/</value>
      <description>Remote principal repository for interpreter's additional dependency loading</description>
    </property>

    <property>
      <name>zeppelin.dep.localrepo</name>
      <value>local-repo</value>
      <description>Local repository for dependency loader</description>
    </property>

    <property>
      <name>zeppelin.helium.node.installer.url</name>
      <value>https://nodejs.org/dist/</value>
      <description>Remote Node installer url for Helium dependency loader</description>
    </property>

    <property>
      <name>zeppelin.helium.npm.installer.url</name>
      <value>http://registry.npmjs.org/</value>
      <description>Remote Npm installer url for Helium dependency loader</description>
    </property>

    <property>
      <name>zeppelin.helium.yarnpkg.installer.url</name>
      <value>https://github.com/yarnpkg/yarn/releases/download/</value>
      <description>Remote Yarn package installer url for Helium dependency loader</description>
    </property>

    <property>
      <name>zeppelin.interpreters</name>
      <value>org.apache.zeppelin.spark.SparkInterpreter,org.apache.zeppelin.spark.PySparkInterpreter,org.apache.zeppelin.rinterpreter.RRepl,org.apache.zeppelin.rinterpreter.KnitR,org.apache.zeppelin.spark.SparkRInterpreter,org.apache.zeppelin.spark.SparkSqlInterpreter,org.apache.zeppelin.spark.DepInterpreter,org.apache.zeppelin.markdown.Markdown,org.apache.zeppelin.angular.AngularInterpreter,org.apache.zeppelin.shell.ShellInterpreter,org.apache.zeppelin.file.HDFSFileInterpreter,org.apache.zeppelin.flink.FlinkInterpreter,,org.apache.zeppelin.python.PythonInterpreter,org.apache.zeppelin.python.PythonInterpreterPandasSql,org.apache.zeppelin.python.PythonCondaInterpreter,org.apache.zeppelin.python.PythonDockerInterpreter,org.apache.zeppelin.lens.LensInterpreter,org.apache.zeppelin.ignite.IgniteInterpreter,org.apache.zeppelin.ignite.IgniteSqlInterpreter,org.apache.zeppelin.cassandra.CassandraInterpreter,org.apache.zeppelin.geode.GeodeOqlInterpreter,org.apache.zeppelin.jdbc.JDBCInterpreter,org.apache.zeppelin.kylin.KylinInterpreter,org.apache.zeppelin.elasticsearch.ElasticsearchInterpreter,org.apache.zeppelin.scalding.ScaldingInterpreter,org.apache.zeppelin.alluxio.AlluxioInterpreter,org.apache.zeppelin.hbase.HbaseInterpreter,org.apache.zeppelin.livy.LivySparkInterpreter,org.apache.zeppelin.livy.LivyPySparkInterpreter,org.apache.zeppelin.livy.LivyPySpark3Interpreter,org.apache.zeppelin.livy.LivySparkRInterpreter,org.apache.zeppelin.livy.LivySparkSQLInterpreter,org.apache.zeppelin.bigquery.BigQueryInterpreter,org.apache.zeppelin.beam.BeamInterpreter,org.apache.zeppelin.pig.PigInterpreter,org.apache.zeppelin.pig.PigQueryInterpreter,org.apache.zeppelin.scio.ScioInterpreter,org.apache.zeppelin.groovy.GroovyInterpreter</value>
      <description>Comma separated interpreter configurations. First interpreter become a default</description>
    </property>

    <property>
      <name>zeppelin.interpreter.group.order</name>
      <value>spark,md,angular,sh,livy,alluxio,file,psql,flink,python,ignite,lens,cassandra,geode,kylin,elasticsearch,scalding,jdbc,hbase,bigquery,beam,groovy</value>
      <description></description>
    </property>

    <property>
      <name>zeppelin.interpreter.connect.timeout</name>
      <value>120000</value>
      <description>Interpreter process connect timeout in msec.</description>
    </property>

    <property>
      <name>zeppelin.interpreter.output.limit</name>
      <value>102400</value>
      <description>Output message from interpreter exceeding the limit will be truncated</description>
    </property>

    <property>
      <name>zeppelin.ssl</name>
      <value>false</value>
      <description>Should SSL be used by the servers?</description>
    </property>

    <property>
      <name>zeppelin.ssl.client.auth</name>
      <value>false</value>
      <description>Should client authentication be used for SSL connections?</description>
    </property>

    <property>
      <name>zeppelin.ssl.keystore.path</name>
      <value>keystore</value>
      <description>Path to keystore relative to Zeppelin configuration directory</description>
    </property>

    <property>
      <name>zeppelin.ssl.keystore.type</name>
      <value>JKS</value>
      <description>The format of the given keystore (e.g. JKS or PKCS12)</description>
    </property>

    <property>
      <name>zeppelin.ssl.keystore.password</name>
      <value>change me</value>
      <description>Keystore password. Can be obfuscated by the Jetty Password tool</description>
    </property>

    <!--
    <property>
      <name>zeppelin.ssl.key.manager.password</name>
      <value>change me</value>
      <description>Key Manager password. Defaults to keystore password. Can be obfuscated.</description>
    </property>
    -->

    <property>
      <name>zeppelin.ssl.truststore.path</name>
      <value>truststore</value>
      <description>Path to truststore relative to Zeppelin configuration directory. Defaults to the keystore path</description>
    </property>

    <property>
      <name>zeppelin.ssl.truststore.type</name>
      <value>JKS</value>
      <description>The format of the given truststore (e.g. JKS or PKCS12). Defaults to the same type as the keystore type</description>
    </property>

    <!--
    <property>
      <name>zeppelin.ssl.truststore.password</name>
      <value>change me</value>
      <description>Truststore password. Can be obfuscated by the Jetty Password tool. Defaults to the keystore password</description>
    </property>
    -->

    <property>
      <name>zeppelin.server.allowed.origins</name>
      <value>*</value>
      <description>Allowed sources for REST and WebSocket requests (i.e. http://onehost:8080,http://otherhost.com). If you leave * you are vulnerable to https://issues.apache.org/jira/browse/ZEPPELIN-173</description>
    </property>

    <property>
      <name>zeppelin.anonymous.allowed</name>
      <value>true</value>
      <description>Anonymous user allowed by default</description>
    </property>

    <property>
      <name>zeppelin.notebook.default.owner.username</name>
      <value></value>
      <description>Set owner role by default</description>
    </property>

    <property>
      <name>zeppelin.notebook.public</name>
      <value>true</value>
      <description>Make notebook public by default when created, private otherwise</description>
    </property>

    <property>
      <name>zeppelin.websocket.max.text.message.size</name>
      <value>1024000</value>
      <description>Size in characters of the maximum text message to be received by websocket. Defaults to 1024000</description>
    </property>

    <property>
      <name>zeppelin.server.default.dir.allowed</name>
      <value>false</value>
      <description>Enable directory listings on server.</description>
    </property>

    <property>
      <name>zeppelin.interpreter.lifecyclemanager.class</name>
      <value>org.apache.zeppelin.interpreter.lifecycle.TimeoutLifecycleManager</value>
      <description>LifecycleManager class for managing the lifecycle of interpreters, by default interpreter will
      be closed after timeout</description>
    </property>

    <property>
      <name>zeppelin.interpreter.lifecyclemanager.timeout.checkinterval</name>
      <value>60000</value>
      <description>Milliseconds of the interval to checking whether interpreter is time out</description>
    </property>

    <property>
      <name>zeppelin.interpreter.lifecyclemanager.timeout.threshold</name>
      <value>3600000</value>
      <description>Milliseconds of the interpreter timeout threshold, by default it is 1 hour</description>
    </property>

    <!--
    <property>
        <name>zeppelin.server.jetty.name</name>
        <value>Jetty(7.6.0.v20120127)</value>
        <description>Hardcoding Application Server name to Prevent Fingerprinting</description>
    </property>
    -->

    <!--
    <property>
        <name>zeppelin.server.jetty.request.header.size</name>
        <value>8192</value>
        <description>Http Request Header Size Limit (to prevent HTTP 413)</description>
    </property>
    -->

    <!--
    <property>
      <name>zeppelin.server.xframe.options</name>
      <value>SAMEORIGIN</value>
      <description>The X-Frame-Options HTTP response header can be used to indicate whether or not a browser should be allowed to render a page in a frame/iframe/object.</description>
    </property>
    -->

    <!--
    <property>
      <name>zeppelin.server.strict.transport</name>
      <value>max-age=631138519</value>
      <description>The HTTP Strict-Transport-Security response header is a security feature that lets a web site tell browsers that it should only be communicated with using HTTPS, instead of using HTTP. Enable this when Zeppelin is running on HTTPS. Value is in Seconds, the default value is equivalent to 20 years.</description>
    </property>
    -->
    <!--

    <property>
      <name>zeppelin.server.xxss.protection</name>
      <value>1</value>
      <description>The HTTP X-XSS-Protection response header is a feature of Internet Explorer, Chrome and Safari that stops pages from loading when they detect reflected cross-site scripting (XSS) attacks. When value is set to 1 and a cross-site scripting attack is detected, the browser will sanitize the page (remove the unsafe parts).</description>
    </property>
    -->

    <!--
    <property>
      <name>zeppelin.interpreter.callback.portRange</name>
      <value>10000:10010</value>
    </property>
    -->

    <!--
    <property>
      <name>zeppelin.recovery.storage.class</name>
      <value>org.apache.zeppelin.interpreter.recovery.FileSystemRecoveryStorage</value>
      <description>ReoveryStorage implementation</description>
    </property>
    -->

    <!--
    <property>
      <name>zeppelin.recovery.dir</name>
      <value>recovery</value>
      <description>Location where recovery metadata is stored</description>
    </property>
    -->


    </configuration>
---
# Source: zeppelin-spark/charts/spark/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: spark-edit
subjects:
  - kind: ServiceAccount
    name: spark
    namespace: default
roleRef:
  kind: ClusterRole
  name: edit
  apiGroup: rbac.authorization.k8s.io
---
# Source: zeppelin-spark/charts/zeppelin/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: spark-rbac
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# Source: zeppelin-spark/charts/zeppelin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: my-release-zeppelin
    chart: zeppelin-0.0.18
    heritage: Helm
    release: my-release
  name: my-release-zeppelin
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: rpc
      port: 38853
      protocol: TCP
      targetPort: 38853     
  selector:
    app: my-release-zeppelin
  type: ClusterIP
---
# Source: zeppelin-spark/charts/zeppelin/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: my-release-zeppelin
  labels:
    app: my-release-zeppelin
    chart: "zeppelin-0.0.18"
    release: "my-release"
    heritage: "Helm"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: my-release-zeppelin
        chart: "zeppelin-0.0.18"
        release: "my-release"
        heritage: "Helm"
    spec:
      tolerations:
        []
      volumes:
        - name: config-init-volume
          configMap:
            name: my-release-zeppelin-config
            items:
            - key: log4j.properties
              path: log4j.properties
            - key: log4j_k8s_cluster.properties
              path: log4j_k8s_cluster.properties
            - key: shiro.ini.template
              path: shiro.ini.template
        - name: zeppelin-site-config-volume
          configMap:
            name: my-release-zeppelin-site-config
            items:
            - key: zeppelin-site.xml
              path: zeppelin-site.xml
        - name: interpreter-config-volume
          configMap:
            name: my-release-zeppelin-interpreter-config
            items:
            - key: interpreter.json
              path: interpreter.json
        - name: spark-config-init-volume
          configMap:
            name: my-release-zeppelin-spark-config
            items:
            - key: spark-defaults.conf
              path: spark-defaults.conf
        - name: config-volume
          emptyDir: {}
        - name: spark-config-volume
          emptyDir: {}
      initContainers:
      - name: zeppelin-init-config
        image: "banzaicloud/zeppelin-server:v0.9.0-k8s-1.0.76"
        imagePullPolicy: IfNotPresent
        env:
          - name: ZEPPELIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-release-zeppelin-password
                key: password
          - name: ADMIN_USER_NAME
            valueFrom:
              secretKeyRef:
                name: my-release-zeppelin-password
                key: username
        command:
          - '/bin/sh'
          - '-c'
          - >
            cp conf/* prepared_conf;
            export ADMIN_PASSWORD=$(java -jar /opt/zeppelin/bin/shiro-tools-hasher-1.3.2-cli.jar -gs -i 500000 -f shiro1 -a SHA-256 $ZEPPELIN_PASSWORD);
            sed 's|ADMIN_USER_NAME|'$ADMIN_USER_NAME'|g;s|ADMIN_PASSWORD|'$ADMIN_PASSWORD'|g' /opt/zeppelin/prepared_conf/shiro.ini.template > /opt/zeppelin/prepared_conf/shiro.ini;
            envsubst < /opt/spark/prepared_conf/spark-defaults.conf > /opt/spark/conf/spark-defaults.conf;
        volumeMounts:
          - name: config-init-volume
            mountPath: /opt/zeppelin/conf/log4j.properties
            subPath: log4j.properties
          - name: config-init-volume
            mountPath: /opt/zeppelin/conf/log4j_k8s_cluster.properties
            subPath: log4j_k8s_cluster.properties
          - name: config-init-volume
            mountPath: /opt/zeppelin/conf/shiro.ini.template
            subPath: shiro.ini.template
          - name: spark-config-volume
            mountPath: /opt/spark/conf
          - name: zeppelin-site-config-volume
            mountPath: /opt/zeppelin/conf/zeppelin-site.xml
            subPath: zeppelin-site.xml
          - name: interpreter-config-volume
            mountPath: /opt/zeppelin/conf/interpreter.json
            subPath: interpreter.json
          - name: config-volume
            mountPath: /opt/zeppelin/prepared_conf
          - name: spark-config-init-volume
            mountPath: /opt/spark/prepared_conf
      containers:
      - name: zeppelin
        image: "banzaicloud/zeppelin-server:v0.9.0-k8s-1.0.76"
        imagePullPolicy: IfNotPresent
        env:
          - name: ZEPPELIN_MEM
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -Xms1024M
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /zeppelin
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /zeppelin
            port: 8080
          initialDelaySeconds: 20
          timeoutSeconds: 1
        volumeMounts:
          - name: config-volume
            mountPath: /opt/zeppelin/conf
          - name: spark-config-volume
            mountPath: /opt/spark/conf
        resources:
          limits:
            cpu: 2
            memory: 2048Mi
          requests:
            cpu: 500m
            memory: 1024Mi
