---
# Source: redpanda-operator/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-redpanda-operator
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
---
# Source: redpanda-operator/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-redpanda-operator-config
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
data:
  controller_manager_config.yaml: |
    map[apiVersion:controller-runtime.sigs.k8s.io/v1alpha1 health:map[healthProbeBindAddress::8081] kind:ControllerManagerConfig leaderElection:map[leaderElect:true resourceName:aa9fc693.vectorized.io] metrics:map[bindAddress:127.0.0.1:8080] webhook:map[port:9443]]
---
# Source: redpanda-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-redpanda-operator
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  - clusterissuers
  - issuers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/finalizers
  verbs:
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - clusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - consoles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - consoles/finalizers
  verbs:
  - update
- apiGroups:
  - redpanda.vectorized.io
  resources:
  - consoles/status
  verbs:
  - get
  - patch
  - update
---
# Source: redpanda-operator/templates/clusterrole_metrics.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-redpanda-operator-metrics-reader
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: redpanda-operator/templates/clusterrole_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-redpanda-operator-proxy-role
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: redpanda-operator/templates/clusterrole_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-redpanda-operator
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-redpanda-operator
subjects:
- kind: ServiceAccount
  name: my-release-redpanda-operator
  namespace: default
---
# Source: redpanda-operator/templates/clusterrole_proxy_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-redpanda-operator-proxy-role
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-redpanda-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: my-release-redpanda-operator
  namespace: default
---
# Source: redpanda-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-redpanda-operator-election-role
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: redpanda-operator/templates/role_binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-redpanda-operator-election-rolebinding
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: my-release-redpanda-operator
  namespace: default
roleRef:
  kind: Role
  name: my-release-redpanda-operator-election-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: redpanda-operator/templates/service_metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: redpanda-operator-metrics-service
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/name: redpanda-operator
    app.kubernetes.io/instance: my-release
---
# Source: redpanda-operator/templates/service_webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: redpanda-operator-webhook-service
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/name: redpanda-operator
    app.kubernetes.io/instance: my-release
---
# Source: redpanda-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-redpanda-operator
  labels:
    
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redpanda-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redpanda-operator
        app.kubernetes.io/instance: my-release
      annotations:
    spec:
      serviceAccountName: my-release-redpanda-operator
      containers:
      - name: kube-rbac-proxy
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        ports:
        - containerPort: 8443
          name: https
      - name: manager
        image: "vectorized/redpanda-operator:v23.2.6"
        imagePullPolicy: IfNotPresent
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --webhook-enabled=true
        command:
        - /manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        resources:
            {}
      securityContext:
        runAsUser: 65532
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
# Source: redpanda-operator/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: redpanda-serving-cert
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
spec:
  dnsNames:
    - redpanda-operator-webhook-service.default.svc
    - redpanda-operator-webhook-service.default.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: my-release-redpanda-operator-selfsigned-issuer
  secretName: webhook-server-cert
  privateKey:
    rotationPolicy: Never
---
# Source: redpanda-operator/templates/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: my-release-redpanda-operator-selfsigned-issuer
  labels:
    app.kubernetes.io/name: redpanda-operator
    helm.sh/chart: redpanda-operator-v23.2.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.2.6"
    app.kubernetes.io/managed-by: Helm
spec:
  selfSigned: {}
---
# Source: redpanda-operator/templates/mutating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  name: my-release-redpanda-operator-mutating-webhook-configuration
webhooks:
  - admissionReviewVersions:
    - v1
    - v1beta1
    clientConfig:
      service:
        name: redpanda-operator-webhook-service
        namespace: default
        path: /mutate-redpanda-vectorized-io-v1alpha1-cluster
    failurePolicy: Fail
    name: mcluster.kb.io
    rules:
    - apiGroups:
      - redpanda.vectorized.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - clusters
    sideEffects: None
---
# Source: redpanda-operator/templates/validating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/redpanda-serving-cert
  name: my-release-redpanda-operator-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
    - v1
    - v1beta1
    clientConfig:
      service:
        name: redpanda-operator-webhook-service
        namespace: default
        path: /validate-redpanda-vectorized-io-v1alpha1-cluster
    failurePolicy: Fail
    name: mcluster.kb.io
    rules:
    - apiGroups:
      - redpanda.vectorized.io
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - clusters
    sideEffects: None
---
# Source: redpanda-operator/templates/test/create-topic-with-client-auth.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rpk-config
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "1"
data:
  redpanda.yaml: |
    redpanda:
    rpk:
      tls:
        key_file: /etc/tls/certs/tls.key
        cert_file: /etc/tls/certs/tls.crt
        truststore_file: /etc/tls/certs/ca.crt
---
# Source: redpanda-operator/templates/test/create-topic-with-client-auth.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: create-test-topic-tls
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "2"
spec:
  template:
    spec:
      volumes:
        - name: tlscert
          secret:
            defaultMode: 420
            secretName: cluster-tls-user-client
        - name: rpkconfig
          configMap:
            name: rpk-config
      containers:
        - name: rpk
          image: vectorized/redpanda:latest
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /bin/bash
            - -c
          args:
            - rpk topic create test --brokers cluster-tls-0.cluster-tls.$POD_NAMESPACE.svc.cluster.local:9092 -v
          volumeMounts:
            - mountPath: /etc/tls/certs
              name: tlscert
            - mountPath: /etc/redpanda
              name: rpkconfig
      restartPolicy: Never
  backoffLimit: 6
  parallelism: 1
  completions: 1
---
# Source: redpanda-operator/templates/test/three_node_cluster.yaml
apiVersion: redpanda.vectorized.io/v1alpha1
kind: Cluster
metadata:
  name: cluster-tls
  annotations:
    "helm.sh/hook": test
spec:
  image: "vectorized/redpanda"
  version: "latest"
  replicas: 3
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 1
      memory: 1.2Gi
  configuration:
    rpcServer:
      port: 33145
    kafkaApi:
      - port: 9092
        tls:
          enabled: true
          requireClientAuth: true
    adminApi:
    - port: 9644
    pandaproxyApi:
    - port: 8082
    developerMode: true
