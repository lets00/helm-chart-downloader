---
# Source: jmeter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-jmeter
  namespace: "default"
  labels:
    helm.sh/chart: jmeter-0.1.2
    app.kubernetes.io/name: jmeter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "5.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: jmeter/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-jmeter
  namespace: "default"
  labels:
    helm.sh/chart: jmeter-0.1.2
    app.kubernetes.io/name: jmeter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "5.5"
    app.kubernetes.io/managed-by: Helm
data:
  JVM_ARGS: -Xmn256m -Xms512m -Xmx1g -XX:MaxMetaspaceSize=256m
---
# Source: jmeter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-jmeter
  namespace: "default"
  labels:
    helm.sh/chart: jmeter-0.1.2
    app.kubernetes.io/name: jmeter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "5.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: server-port
      port: 1099
      targetPort: 1099
    - name: local-port
      port: 50000
      targetPort: 50000
  selector:
    app.kubernetes.io/name: jmeter
    app.kubernetes.io/instance: my-release
---
# Source: jmeter/templates/deployment.yaml
# Worker Node
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-jmeter-worker
  namespace: "default"
  labels:
    helm.sh/chart: jmeter-0.1.2
    app.kubernetes.io/name: jmeter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "5.5"
    app.kubernetes.io/managed-by: Helm
    jmeterMode: worker
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: jmeter
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jmeter
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-jmeter
      securityContext:
        {}
      containers:
        - name: jmeter-worker
          securityContext:
            {}
          image: "liukunup/jmeter:5.5"
          imagePullPolicy: IfNotPresent
          args: ["jmeter-server"]
          ports:
            - name: server-port
              containerPort: 1099
            - name: local-port
              containerPort: 50000
          env:
            - name: JVM_ARGS
              valueFrom:
                configMapKeyRef:
                  name: my-release-jmeter
                  key: JVM_ARGS
          livenessProbe:
            exec:
              command:
              - date
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 1099
            initialDelaySeconds: 5
          resources:
            {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: jmeterMode
                  operator: In
                  values:
                  - worker
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: jmeter/templates/deployment.yaml
# Controller Node
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-jmeter-controller
  namespace: "default"
  labels:
    helm.sh/chart: jmeter-0.1.2
    app.kubernetes.io/name: jmeter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "5.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jmeter
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jmeter
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-jmeter
      securityContext:
        {}
      containers:
        - name: jmeter-controller
          securityContext:
            {}
          image: "liukunup/jmeter:5.5"
          imagePullPolicy: IfNotPresent
          args: ["keepalive"]
          env:
            - name: JVM_ARGS
              valueFrom:
                configMapKeyRef:
                  name: my-release-jmeter
                  key: JVM_ARGS
          livenessProbe:
            exec:
              command:
              - date
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: 1099
            initialDelaySeconds: 5
          resources:
            {}
---
# Source: jmeter/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-jmeter-test-connection"
  labels:
    helm.sh/chart: jmeter-0.1.2
    app.kubernetes.io/name: jmeter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "5.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: fake
      image: busybox
      command: ['date']
  restartPolicy: Never
