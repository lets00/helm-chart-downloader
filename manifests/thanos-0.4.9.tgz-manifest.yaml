---
# Source: thanos/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-thanos
  labels:
    app: thanos
    chart: thanos-0.4.9
    release: "my-release"
    heritage: "Helm"
type: Opaque
data:
  object-store.yaml:
---
# Source: thanos/templates/bucket-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-thanos-bucket
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: bucket

spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: thanos
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: bucket
---
# Source: thanos/templates/compact-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-thanos-compact
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: compact

spec:
  ports:
  - port: 10902
    protocol: TCP
    targetPort: http
    name: http
  selector:
    app.kubernetes.io/name: thanos
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: compact
---
# Source: thanos/templates/query-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-thanos-query-grpc
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: query

spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 10901
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: thanos
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: query
---
# Source: thanos/templates/query-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-thanos-query-http
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: query

spec:
  type: ClusterIP
  ports:
    - port: 10902
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: thanos
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: query
---
# Source: thanos/templates/sidecar-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-thanos-sidecar-grpc
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: sidecar

spec:
  type: ClusterIP
  externalIPs:
    []
  clusterIP: None
  ports:
    - port: 10901
      protocol: TCP
      targetPort: grpc
      name: grpc
  selector:
    
    app: prometheus
---
# Source: thanos/templates/sidecar-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-thanos-sidecar-http
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: sidecar

spec:
  type: ClusterIP
  ports:
    - port: 10902
      targetPort: http
      protocol: TCP
      name: http
  selector:
    
    app: prometheus
---
# Source: thanos/templates/store-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-thanos-store-grpc
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: store

spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 10901
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: thanos
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: store
---
# Source: thanos/templates/store-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-thanos-store-http
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: store

spec:
  type: ClusterIP
  ports:
    - port: 10902
      targetPort: 
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: thanos
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: store
---
# Source: thanos/templates/bucket-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-thanos-bucket
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: bucket

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: bucket

  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: bucket

    spec:
      containers:
      - name: thanos-bucket
        image: "quay.io/thanos/thanos:v0.17.1"
        imagePullPolicy: IfNotPresent
        args:
          - "tools"
          - "bucket"
          - "web"
          - "--log.level=info"
          - "--log.format=logfmt"
          - "--http-address=0.0.0.0:8080"
          - "--objstore.config-file=/etc/config/object-store.yaml"
          - "--refresh=30m"
          - "--timeout=5m"
          
        ports:
          - name: http
            containerPort: 8080
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
            readOnly: true
        resources: 
          {}
      volumes:
      - name: config-volume
        secret:
          secretName: my-release-thanos
---
# Source: thanos/templates/compact-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-thanos-compact
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: compact

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: compact

  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: compact

    spec:
      containers:
      - name: thanos-compact
        image: "quay.io/thanos/thanos:v0.17.1"
        imagePullPolicy: IfNotPresent
        args:
        - "compact"
        - "--log.level=info"
        - "--log.format=logfmt"
        - "--http-address=0.0.0.0:10902"
        - "--objstore.config-file=/etc/config/object-store.yaml"
        - "--data-dir=/var/thanos/compact"
        - "--consistency-delay=30m"
        - "--retention.resolution-raw=30d"
        - "--retention.resolution-5m=120d"
        - "--retention.resolution-1h=1y"
        - "--block-sync-concurrency=20"
        - "--compact.concurrency=1"
        - "--wait"

        ports:
        - name: http
          containerPort: 10902
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
        - name: data-volume
          mountPath: /var/thanos/compact
        resources: 
          {}
      volumes:
      - name: data-volume
        emptyDir: {}
      - name: config-volume
        secret:
          secretName: my-release-thanos
---
# Source: thanos/templates/query-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-thanos-query
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: query

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: query

  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: query

    spec:
      containers:
      - name: thanos-query
        image: "quay.io/thanos/thanos:v0.17.1"
        imagePullPolicy: IfNotPresent
        args:
        - "query"
        - "--log.level=info"
        - "--log.format=logfmt"
        - "--grpc-address=0.0.0.0:10901"
        - "--http-address=0.0.0.0:10902"
        - "--query.auto-downsampling"
        - "--store.sd-dns-resolver=miekgdns"
        - "--store=dnssrv+_grpc._tcp.my-release-thanos-store-grpc.default.svc.cluster.local"
        - "--store=dnssrv+_grpc._tcp.my-release-thanos-sidecar-grpc.default.svc.cluster.local"
        - "--store.sd-interval=5m"
        ports:
        - name: http
          containerPort: 10902
        - name: grpc
          containerPort: 10901
        resources:
          
          {}
        volumeMounts:
        livenessProbe:
        
          httpGet:
            path: /-/healthy
            port: http
        readinessProbe:
        
          httpGet:
            path: /-/ready
            port: http
      volumes:
---
# Source: thanos/templates/store-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-thanos-store-0
  labels:
    app.kubernetes.io/name: thanos
    helm.sh/chart: thanos-0.4.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.28.1
    app.kubernetes.io/component: store
    app.kubernetes.io/partition: "0"

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: store
      app.kubernetes.io/partition: "0"

  template:
    metadata:
      labels:

        app.kubernetes.io/name: thanos
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: store
        app.kubernetes.io/partition: "0"
    spec:
      containers:
      - name: thanos-store
        image: "quay.io/thanos/thanos:v0.17.1"
        imagePullPolicy: IfNotPresent
        args:
        - "store"
        - "--data-dir=/var/thanos/store"
        - "--log.level=info"
        - "--log.format=logfmt"
        - "--http-address=0.0.0.0:10902"
        - "--grpc-address=0.0.0.0:10901"
        - "--objstore.config-file=/etc/config/object-store.yaml"
        - "--index-cache-size=250MB"
        - "--chunk-pool-size=2GB"
        - "--store.grpc.series-max-concurrency=20"
        - "--sync-block-duration=3m"
        - "--block-sync-concurrency=20"
        ports:
        - name: http
          containerPort: 10902
        - name: grpc
          containerPort: 10901
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
        - name: data
          mountPath: /var/thanos/store
        resources:
          
          {}
      volumes:
      - name: data
        emptyDir: {}
      - name: config-volume
        secret:
          secretName: my-release-thanos
