---
# Source: gotenberg/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-gotenberg
  labels:
    
    helm.sh/chart: gotenberg-5.3.0
    app.kubernetes.io/name: gotenberg
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.5.0"
    app.kubernetes.io/managed-by: Helm
    app: gotenberg
    release: my-release
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: gotenberg
    app.kubernetes.io/instance: my-release
---
# Source: gotenberg/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-gotenberg
  labels:
    
    helm.sh/chart: gotenberg-5.3.0
    app.kubernetes.io/name: gotenberg
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.5.0"
    app.kubernetes.io/managed-by: Helm
    app: gotenberg
    chart: gotenberg-5.3.0
    heritage: Helm
  annotations:
spec:
  imagePullSecrets:
        - name: ""
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gotenberg
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gotenberg
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: gotenberg
          image: "gotenberg/gotenberg:7.5.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: "LOG_FORMAT"
              value: "TEXT"
            - name: "LOG_LEVEL"
              value: "DEBUG"
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 60
          resources:
            {}
---
# Source: gotenberg/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-gotenberg
  labels:
    
    helm.sh/chart: gotenberg-5.3.0
    app.kubernetes.io/name: gotenberg
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.5.0"
    app.kubernetes.io/managed-by: Helm
    app: gotenberg
    chart: gotenberg-5.3.0
    release: my-release
    heritage: Helm
  annotations:
spec:
  rules:
    - host: "gotenberg.local"
      http:
        paths:
           - path: /
             pathType: Prefix
             backend:
               service:
                 name: my-release-gotenberg
                 port:
                   number: 3000
