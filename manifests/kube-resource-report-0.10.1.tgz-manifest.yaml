---
# Source: kube-resource-report/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: kube-resource-report-0.10.1
    app.kubernetes.io/name: kube-resource-report
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kube-resource-report
---
# Source: kube-resource-report/templates/configmap-nginx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nginx
  labels:
    helm.sh/chart: kube-resource-report-0.10.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  default.conf: |-
    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
  nginx.conf: |-
    worker_processes  auto;

    error_log  /var/log/nginx/error.log warn;
    pid        /tmp/nginx.pid;


    events {
         worker_connections  1024;
    }


    http {
         include       /etc/nginx/mime.types;
         default_type  application/octet-stream;

         log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                           '$status $body_bytes_sent "$http_referer" '
                           '"$http_user_agent" "$http_x_forwarded_for"';

         access_log  /var/log/nginx/access.log  main;

         sendfile        on;
         #tcp_nopush     on;

         keepalive_timeout  65;

         #gzip  on;

         include /etc/nginx/conf.d/*.conf;

         client_body_temp_path /tmp/client_temp;
         proxy_temp_path       /tmp/proxy_temp_path;
         fastcgi_temp_path     /tmp/fastcgi_temp;
         uwsgi_temp_path       /tmp/uwsgi_temp;
         scgi_temp_path        /tmp/scgi_temp;
    }
---
# Source: kube-resource-report/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: kube-resource-report-0.10.1
    app.kubernetes.io/name: kube-resource-report
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kube-resource-report-clusterrole
rules:
- apiGroups: [""]
  resources: ["nodes", "pods", "namespaces", "services"]
  verbs:
    - get
    - list
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs:
    - list
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs:
    - get
    - list
- apiGroups: [""]
  resources: ["services/proxy"]
  resourceNames: ["heapster"]
  verbs:
    - get
# allow reading VPAs to get resource recommendations
- apiGroups: ["autoscaling.k8s.io"]
  resources: ["verticalpodautoscalers"]
  verbs:
    - get
    - list
# allow reading Deployments and StatefulSets to get matching Pods for VPAs
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "replicasets", "daemonsets"]
  verbs:
    - get
    - list
---
# Source: kube-resource-report/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: kube-resource-report-0.10.1
    app.kubernetes.io/name: kube-resource-report
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kube-resource-report-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kube-resource-report-clusterrole
subjects:
- kind: ServiceAccount
  name: my-release-kube-resource-report
  namespace: default
---
# Source: kube-resource-report/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kube-resource-report
  labels:
    helm.sh/chart: kube-resource-report-0.10.1
    app.kubernetes.io/name: kube-resource-report
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kube-resource-report
    app.kubernetes.io/instance: my-release
---
# Source: kube-resource-report/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kube-resource-report
  labels:
    helm.sh/chart: kube-resource-report-0.10.1
    app.kubernetes.io/name: kube-resource-report
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-resource-report
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-resource-report
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-kube-resource-report
      containers:
      - name: kube-resource-report
        image: "hjacobs/kube-resource-report:22.11.0"
        imagePullPolicy: IfNotPresent
        # environment variables
        args:
        - --update-interval-minutes=1
        - /output
        volumeMounts:
        - mountPath: /output
          name: report-data
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 5m
            memory: 50Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
      - name: nginx
        image: "nginx:alpine"
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-config
          readOnly: true
          subPath: nginx.conf
        - mountPath: /etc/nginx/conf.d/default.conf
          name: nginx-config
          readOnly: true
          subPath: default.conf
        - mountPath: /tmp
          name: nginx-tmp
        - mountPath: /usr/share/nginx/html
          name: report-data
          readOnly: true
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 8080
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 5m
            memory: 20Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
      volumes:
        - name: nginx-config
          configMap:
            name: my-release-nginx
        - name: nginx-tmp
          emptyDir: {}
        - name: report-data
          emptyDir:
            sizeLimit: 500Mi
