---
# Source: graylog/templates/secureconfig.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-graylog
  labels:
    helm.sh/chart: graylog-0.8.2
    app.kubernetes.io/name: graylog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.0.3"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  GRAYLOG_MONGODB_URI: bW9uZ29kYjovLyUhcyg8bmlsPik6JSFzKDxuaWw+KUAlIXMoPG5pbD4pL2dyYXlsb2c=
  GRAYLOG_PASSWORD_SECRET: c29tZXBhc3N3b3JkcGVwcGVy
  GRAYLOG_ROOT_USERNAME: YWRtaW4=
  GRAYLOG_ROOT_PASSWORD_SHA2: OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==
---
# Source: graylog/templates/scripts.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-graylog-scripts
  labels:
    helm.sh/chart: graylog-0.8.2
    app.kubernetes.io/name: graylog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.0.3"
    app.kubernetes.io/managed-by: Helm
data:
  init.sh: |
    #!/bin/bash
    echo "Initializing Graylog..."
    if [ ! -f /data/config/graylog.conf ]; then
      echo "No Graylog configuration found - Initializing directory structure"
      mkdir -p /data/config
      mkdir -p /data/journal
      mkdir -p /data/log
      mkdir -p /data/plugin
      mkdir -p /data/contentpacks
      echo "Copy configuration"
      cp /usr/share/graylog/data/config/* /data/config
    else
      echo "Graylog configuration already exists."
    fi
    echo "Setting permissions on configuration folder"
    chmod u+rw /data/config/*
    echo "Finished."
---
# Source: graylog/templates/service-internal.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-graylog-internal
  labels:
    helm.sh/chart: graylog-0.8.2
    app.kubernetes.io/name: graylog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: graylog
    app.kubernetes.io/instance: my-release
---
# Source: graylog/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-graylog
  labels:
    helm.sh/chart: graylog-0.8.2
    app.kubernetes.io/name: graylog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: graylog
    app.kubernetes.io/instance: my-release
---
# Source: graylog/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-graylog
  labels:
    helm.sh/chart: graylog-0.8.2
    app.kubernetes.io/name: graylog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: graylog
      app.kubernetes.io/instance: my-release
  serviceName: my-release-graylog-internal
  podManagementPolicy: OrderedReady      
  replicas: 1
  updateStrategy: 
    type: RollingUpdate    
  template:
    metadata:
      annotations:
        checksum/secureconfig: 0f4cc9b7132c84921c7802b37c45889375e95b2e3a7d07d17e4f050081aa9f5b
        checksum/geopipsecrets: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/name: graylog
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1100
      initContainers:
        - name: graylog-init
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1100
            runAsNonRoot: true
            runAsUser: 1100
          image: "docker.io/graylog/graylog:6.0.3"
          imagePullPolicy: IfNotPresent
          command: [ "/scripts/init.sh" ]
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: graylog-volume
              mountPath: /data
      containers:
        - name: graylog
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1100
            runAsNonRoot: true
            runAsUser: 1100
          image: "docker.io/graylog/graylog:6.0.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          envFrom:
            - secretRef:
                name: my-release-graylog
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            
            - name: GRAYLOG_ELASTICSEARCH_HOSTS
              value: "http://127.0.0.1:9200"
            - name: GRAYLOG_HTTP_EXTERNAL_URI
              value: "http://127.0.0.1:9000/"
            - name: GRAYLOG_ROOT_TIMEZONE
              value: "UTC"
            - name: GRAYLOG_ELASTICSEARCH_INDEX_PREFIX
              value: "graylog"
            - name: GRAYLOG_MESSAGE_JOURNAL_MAX_AGE
              value: "12h"
            - name: GRAYLOG_MESSAGE_JOURNAL_MAX_SIZE
              value: "5gb"
          startupProbe:
            httpGet:
              path: /api/system/lbstatus
              port: http
              httpHeaders:
                - name: Host
                  value: localhost:9000
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
            successThreshold: 1
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/system/lbstatus
              port: http
              httpHeaders:
                - name: Host
                  value: localhost:9000
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/system/lbstatus
              port: http
              httpHeaders:
                - name: Host
                  value: localhost:9000
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
          volumeMounts:
            - mountPath: /etc/graylog/server
              name: geocity
            - mountPath: /tmp
              name: tmp
            - mountPath: /usr/share/graylog/plugins-merged
              name: plugins-merged
            - mountPath: /usr/share/graylog/data
              name: graylog-volume
      volumes:
        - name: tmp
          emptyDir: {}
        - name: geocity
          emptyDir: {}
        - name: plugins-merged
          emptyDir: {}
        - name: scripts
          configMap:
            name: my-release-graylog-scripts
            defaultMode: 0555
        - name: graylog-volume
          emptyDir: {}
---
# Source: graylog/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-graylog-test-connection"
  labels:
    helm.sh/chart: graylog-0.8.2
    app.kubernetes.io/name: graylog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.0.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-graylog:80']
  restartPolicy: Never
