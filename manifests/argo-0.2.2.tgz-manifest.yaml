---
# Source: argo/templates/ui-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-ui
  namspace: default
---
# Source: argo/templates/workflow-controller-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo
  namespace: default
---
# Source: argo/templates/workflow-controller-config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-workflow-controller-configmap
  labels:
    chart: argo-0.2.2
    release: my-release
    heritage: Helm
    namespace: default
data:
  config: |
    artifactRepository:
    executorImage: "argoproj/argoexec:v2.1.1"
---
# Source: argo/templates/ui-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-ui-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - get
  - list
  - watch
---
# Source: argo/templates/workflow-controller-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-workflow-controller-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - get
  - list
  - watch
  - update
  - patch
---
# Source: argo/templates/ui-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-ui-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-ui-cluster-role
subjects:
- kind: ServiceAccount
  name: argo-ui
  namespace: default
---
# Source: argo/templates/workflow-controller-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-workflow-controller-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-workflow-controller-cluster-role
subjects:
  - kind: ServiceAccount
    name: argo
    namespace: default
---
# Source: argo/templates/ui-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-ui
  labels:
    chart: argo-0.2.2
    release: my-release
    heritage: Helm
    namspace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8001
  selector:
    app: my-release-ui
  sessionAffinity: None
  type: ClusterIP
---
# Source: argo/templates/ui-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: my-release-ui
  labels:
    chart: argo-0.2.2
    release: my-release
    heritage: Helm
    namspace: default
spec:
  template:
    metadata:
      labels:
        app: my-release-ui
        release: my-release
    spec:
      serviceAccountName: "argo-ui"
      containers:
        - name: ui
          image: "argoproj/argoui:v2.1.1"
          env:
          - name: IN_CLUSTER
            value: "true"
---
# Source: argo/templates/workflow-controller-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: my-release-workflow-controller
  labels:
    app: my-release-workflow-controller
    chart: argo-0.2.2
    release: my-release
    namespace: default
    heritage: Helm
spec:
  template:
    metadata:
      labels:
        app: my-release-workflow-controller
        release: my-release
    spec:
      serviceAccountName: "argo"
      containers:
        - name: controller
          image: "argoproj/workflow-controller:v2.1.1"
          command: [ "workflow-controller" ]
          args:
          - "--configmap"
          - "my-release-workflow-controller-configmap"
          - "--loglevel"
          - "info"
          - "--gloglevel"
          - "0"
          env:
          - name: ARGO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
---
# Source: argo/templates/apply-workflow-crd-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-apply-workflow-crd
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 100
  template:
    spec:
      serviceAccountName: ""
      containers:
      - name: kubectl-apply
        image: lachlanevenson/k8s-kubectl
        command: ["/bin/sh"]
        args: ["-c", 'echo ''
{
  "apiVersion": "apiextensions.k8s.io/v1beta1",
  "kind": "CustomResourceDefinition",
  "metadata": {
    "name": "workflows.argoproj.io"
  },
  "spec": {
    "group": "argoproj.io",
    "names": {
      "kind": "Workflow",
      "plural": "workflows",
      "shortNames": ["wf"]
    },
    "scope": "Namespaced",
    "version": "v1alpha1"
  }
}'' | kubectl apply -f -']
      restartPolicy: Never
