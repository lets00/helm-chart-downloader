---
# Source: passbolt/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-passbolt
  labels:
    helm.sh/chart: passbolt-1.1.17
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.4.0-ce-non-root"
    app.kubernetes.io/managed-by: Helm
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: passbolt
      app.kubernetes.io/instance: my-release
---
# Source: passbolt/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: passbolt-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
automountServiceAccountToken: false
---
# Source: passbolt/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-passbolt
  labels:
    helm.sh/chart: passbolt-1.1.17
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.4.0-ce-non-root"
    app.kubernetes.io/managed-by: Helm
---
# Source: passbolt/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: passbolt-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: "RTVaNTBSdE1Lbg=="
  mariadb-password: "cGFzc2JvbHQ="
---
# Source: passbolt/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: passbolt-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    slow_query_log=0
    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: passbolt/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: passbolt-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: primary
---
# Source: passbolt/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-passbolt
  labels:
    helm.sh/chart: passbolt-1.1.17
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.4.0-ce-non-root"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-release
---
# Source: passbolt/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-passbolt
  labels:
    helm.sh/chart: passbolt-1.1.17
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.4.0-ce-non-root"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: passbolt
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: passbolt
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-passbolt
      securityContext:
        {}
      containers:
        - name: passbolt
          securityContext:
            {}
          image: "passbolt/passbolt:3.4.0-ce-non-root"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: DATASOURCES_DEFAULT_HOST
              value: passbolt-mariadb
            - name: DATASOURCES_DEFAULT_DATABASE
              value: passbolt
            - name: DATASOURCES_DEFAULT_USERNAME
              value: passbolt
            - name: DATASOURCES_DEFAULT_PASSWORD
              value: passbolt
            - name: EMAIL_TRANSPORT_DEFAULT_HOST
              value: "smtp.example.com"
            - name: EMAIL_TRANSPORT_DEFAULT_PORT
              value: "25"
            - name: EMAIL_DEFAULT_FROM
              value: "noreply@example.com"
            - name: EMAIL_TRANSPORT_DEFAULT_TIMEOUT
              value: "30"
            - name: "PASSBOLT_EMAIL_SEND_PASSWORD_CREATE"
              value: "false"
            - name: "PASSBOLT_EMAIL_SEND_PASSWORD_UPDATE"
              value: "false"
            - name: "PASSBOLT_EMAIL_SHOW_SECRET"
              value: "false"
            - name: "PASSBOLT_EMAIL_SHOW_URI"
              value: "false"
            - name: "PASSBOLT_EMAIL_SHOW_USERNAME"
              value: "false"
            - name: APP_FULL_BASE_URL
              value: https://passbolt:80
          volumeMounts:
          livenessProbe:
            httpGet:
              path: /healthcheck/status.json
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthcheck/status.json
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 10
          resources:
            {}
      volumes:
        - name: data
          emptyDir: {}
---
# Source: passbolt/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: passbolt-mariadb
  namespace: "default"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-12.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels: 
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: primary
  serviceName: passbolt-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: f948416037a197f6552abdccd02df8437bad0f42981b3f4eb8bbf5e31383fd4a
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-12.2.4
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: passbolt-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.11.3-debian-11-r5
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passbolt-mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "passbolt"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passbolt-mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "passbolt"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: passbolt-mariadb
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: my-release
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: passbolt/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-passbolt-test-connection"
  labels:
    helm.sh/chart: passbolt-1.1.17
    app.kubernetes.io/name: passbolt
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.4.0-ce-non-root"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-passbolt:80/healthcheck/status.json']
  restartPolicy: Never
