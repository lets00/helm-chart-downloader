---
# Source: knawd-deployer/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: knawd-deployer-daemonset
  labels:
  
    helm.sh/chart: knawd-deployer-v1.3.0
    app.kubernetes.io/name: knawd-deployer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      name: knawd-deployer-ds
  template:
    metadata:
      labels:
        name: knawd-deployer-ds
    spec:
      restartPolicy: Always
      hostPID: true
      volumes:
        - name: node-root
          hostPath:
            path: /
        - name: entrypoint
          configMap:
            name: entrypoint
            defaultMode: 0744
      serviceAccountName: "knawd-deployer-sa"
      containers:
        - image: quay.io/knawd/deployer:v1.2.0
          imagePullPolicy: Always
          name: deploy
          env:
            - name: VENDOR
              value: rhel8
            - name: LIB_LOCATION
              value: "/usr/lib64"
            - name: LOG_LEVEL
              value: info
            - name: OCI_LOCATION
              value: "/usr/local/sbin"
            - name: OCI_TYPE
              value: crun-wasmedge
            - name: NODE_ROOT
              value: "/mnt/node-root"
            - name: IS_MICROK8S
              value: "false"
            - name: AUTO_RESTART
              value: "true"
            - name: CONFIG_LOCATION
              value: "/etc/crio"
            - name: LOOP
              value: "true"
            - name: PATCH_KNATIVE
              value: "true"
          securityContext:
            privileged: true
          volumeMounts:
            - name: node-root
              mountPath: /mnt/node-root/
          command: ["/app/manager"]
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: knawd-deployer/templates/runtimeclass.yaml
apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: crun
  labels:
  
    helm.sh/chart: knawd-deployer-v1.3.0
    app.kubernetes.io/name: knawd-deployer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
handler: crun
---
# Source: knawd-deployer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "knawd-deployer-sa"
  labels:
  
    helm.sh/chart: knawd-deployer-v1.3.0
    app.kubernetes.io/name: knawd-deployer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/description: "Service Account for RBAC definitions"
    helm.sh/hook: pre-install
---
# Source: knawd-deployer/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knawd-cluster-role
  labels:
  
    helm.sh/chart: knawd-deployer-v1.3.0
    app.kubernetes.io/name: knawd-deployer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/description: "ClusterRole for Knative Patch"
    "helm.sh/hook": pre-install
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
rules:
  - apiGroups: [""]
    resources:
      - configmaps
    verbs:
      - delete
      - get
      - list
      - patch
      - update
---
# Source: knawd-deployer/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name:  knawd-cluster-role-binding
  labels:
  
    helm.sh/chart: knawd-deployer-v1.3.0
    app.kubernetes.io/name: knawd-deployer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/description: "ClusterRoleBinding for Knative Patch"
    "helm.sh/hook": pre-install
subjects:
  - kind: ServiceAccount
    name: "knawd-deployer-sa"
    namespace: default 
roleRef:
  kind: ClusterRole
  name: knawd-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: knawd-deployer/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "knawd-deployer-role"
  labels:
  
    helm.sh/chart: knawd-deployer-v1.3.0
    app.kubernetes.io/name: knawd-deployer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/description: "Role for configuring node"
    "helm.sh/hook": pre-install
rules:
  - apiGroups: ["security.openshift.io"]
    resources: ["securitycontextconstraints"]
    resourceNames: ["knawd-deployer-scc"]
    verbs: ["use"]
---
# Source: knawd-deployer/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "knawd-deployer-role"
  labels:
  
    helm.sh/chart: knawd-deployer-v1.3.0
    app.kubernetes.io/name: knawd-deployer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/description: "RoleBinding for configuring node"
    "helm.sh/hook": pre-install
subjects:
  - kind: ServiceAccount
    name: "knawd-deployer-sa"
roleRef:
  kind: Role
  name: "knawd-deployer-role"
  apiGroup: rbac.authorization.k8s.io
---
# Source: knawd-deployer/templates/removedaemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: knawd-deployer-remove-daemonset
  labels:
  
    helm.sh/chart: knawd-deployer-v1.3.0
    app.kubernetes.io/name: knawd-deployer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  selector:
    matchLabels:
      name:  knawd-deployer-remove-ds
  template:
    metadata:
      labels:
        name: knawd-deployer-remove-ds
    spec:
      restartPolicy: Always
      hostPID: true
      volumes:
        - name: node-root
          hostPath:
            path: /
        - name: entrypoint
          configMap:
            name: entrypoint
            defaultMode: 0744
      serviceAccountName: "knawd-deployer-sa"
      containers:
        - image: quay.io/knawd/deployer:v1.2.0
          imagePullPolicy: Always
          name: deployer-remove
          env:
            - name: VENDOR
              value: rhel8
            - name: LIB_LOCATION
              value: "/usr/lib64"
            - name: LOG_LEVEL
              value: info
            - name: OCI_LOCATION
              value: "/usr/local/sbin"
            - name: OCI_TYPE
              value: crun-wasmedge
            - name: NODE_ROOT
              value: "/mnt/node-root"
            - name: IS_MICROK8S
              value: "false"
            - name: AUTO_RESTART
              value: "true"
            - name: CONFIG_LOCATION
              value: "/etc/crio"
            - name: LOOP
              value: "true"
            - name: PATCH_KNATIVE
              value: "true"
          securityContext:
            privileged: true
          volumeMounts:
            - name: node-root
              mountPath: /mnt/node-root/
          command: ["/app/manager"]
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: knawd-deployer/templates/tests/test-deployment.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-knawd-deployer-test-deployment"
  labels:
    helm.sh/chart: knawd-deployer-v1.3.0
    app.kubernetes.io/name: knawd-deployer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
    "module.wasm.image/variant": compat-smart
spec:
  runtimeClassName: "crun"
  containers:
    - name: example-wasi
      image: docker.io/wasmedge/example-wasi:latest
      command: ['/wasi_example_main.wasm']
      args: ['50000000']
  restartPolicy: Never
---
# Source: knawd-deployer/templates/scc.yaml
kind: SecurityContextConstraints
apiVersion: security.openshift.io/v1
metadata:
  labels:
  
    helm.sh/chart: knawd-deployer-v1.3.0
    app.kubernetes.io/name: knawd-deployer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/description: "allows pod to run as root, privileged and run nsenter"
    "helm.sh/hook": pre-install
  name: "knawd-deployer-scc"
allowPrivilegedContainer: true
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: false
allowHostPID: true
allowHostPorts: false
readOnlyRootFilesystem: false
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
fsGroup:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
