---
# Source: hive-metastore/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: hive-metastore-0.1.0
    app: hive-metastore
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/managed-by: Helm
  name: hive-metastore
automountServiceAccountToken:
---
# Source: hive-metastore/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hive-metastore-conf-templates
  labels:
    helm.sh/chart: hive-metastore-0.1.0
    app: hive-metastore
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  core-site.xml.tpl: "<configuration>\n  {{- if index .Env  \"HIVE_WAREHOUSE_S3LOCATION\"
    \ }}\n  <property>\n    <name>fs.defaultFS</name>\n    <value>{{ .Env.HIVE_WAREHOUSE_S3LOCATION
    }}</value>\n  </property>\n  {{- end }}\n  <property>\n    <name>fs.s3a.impl</name>\n
    \   <value>org.apache.hadoop.fs.s3a.S3AFileSystem</value>\n  </property>   \n  <property>\n
    \   <name>fs.s3.impl</name>\n    <value>org.apache.hadoop.fs.s3a.S3AFileSystem</value>\n
    \ </property>\n  <property>\n    <name>fs.s3n.impl</name>\n    <value>org.apache.hadoop.fs.s3a.S3AFileSystem</value>\n
    \ </property>\n  <property>\n      <name>fs.s3a.aws.credentials.provider</name>\n
    \     <value>com.amazonaws.auth.DefaultAWSCredentialsProviderChain</value>\n  </property>\n</configuration>\n"
  metastore-site.xml.tpl: "<configuration>\n      {{- $metastore_uris :=  regexp.Replace
    \"(.*)\" \"thrift://$1:9083\" .Env.HOSTNAME  }}\n      {{- if index .Env \"HIVE_METASTORE_URIS\"
    \ }}\n      {{-   $metastore_uris :=  .Env.HIVE_METASTORE_URIS  }}\n      {{- end
    }}\n      {{- if eq .Env.HIVE_DB_EXTERNAL \"true\" }}\n        <property>\n          <name>javax.jdo.option.ConnectionURL</name>\n
    \         <value>{{ .Env.HIVE_DB_JDBC_URL }}</value>\n        </property>\n        <property>\n
    \         <name>javax.jdo.option.ConnectionDriverName</name>\n          <value>{{
    .Env.HIVE_DB_DRIVER}}</value>\n        </property>\n        <property>\n          <name>javax.jdo.option.ConnectionUserName</name>\n
    \         <value>{{ .Env.HIVE_DB_USER }}</value>\n        </property>\n        <property>\n
    \         <name> javax.jdo.option.ConnectionPassword</name>\n          <value>{{
    .Env.HIVE_DB_PASS }}</value>\n        </property>\n      {{- end }}\n        <property>\n
    \         <name>metastore.expression.proxy</name>\n          <value>org.apache.hadoop.hive.metastore.DefaultPartitionExpressionProxy</value>\n
    \       </property>\n        <property>\n          <name>metastore.task.threads.always</name>\n
    \         <value>org.apache.hadoop.hive.metastore.events.EventCleanerTask,org.apache.hadoop.hive.metastore.MaterializationsCacheCleanerTask</value>\n
    \       </property>\n        <property>\n          <name>hive.metastore.uris</name>\n
    \         <value>{{ $metastore_uris }}</value>\n        </property>\n        {{-
    if not (index .Env  \"\")  }}\n        <property>\n          <name>hive.metastore.warehouse.dir</name>\n
    \         <value>file:///tmp/</value>\n        </property>\n        {{- else }}\n
    \        <property>\n          <name>hive.metastore.warehouse.dir</name>\n          <value>{{
    .Env.HIVE_WAREHOUSE_DIR }}</value>\n        </property>  \n      {{- end }}\n     {{-
    if (index .Env \"HIVE_CONF_PARAMS\")  }}\n        {{- $conf_list := .Env.HIVE_CONF_PARAMS
    | strings.Split \";\" }}\n        {{- range $parameter := $conf_list}}\n            {{-
    $key := regexp.Replace \"(.*):.*\" \"$1\" $parameter }}\n            {{- $value
    := regexp.Replace \".*:(.*)\" \"$1\" $parameter }}\n        <property>\n          <name>{{
    $key }}</name>\n          <value>{{ $value }}</value>\n        </property>\n       {{-
    end }}\n     {{- end }}\n\n</configuration>"
---
# Source: hive-metastore/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: hive-metastore-0.1.0
    app: hive-metastore
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/managed-by: Helm
  name: hive-metastore
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/exec
      - configmaps
      - services
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - batch
      - extensions
    resources:
      - jobs
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete  
  - apiGroups:
      - ""
    resources:
      - events
      - pods/log
      - serviceaccounts
      - secrets
      - endpoints
    resourceNames:
      - cluster-autoscaler
    verbs:
      - list
      - get
      - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - create
    - delete
---
# Source: hive-metastore/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: hive-metastore-0.1.0
    app: hive-metastore
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/managed-by: Helm
  name: hive-metastore
subjects:
  - kind: ServiceAccount
    name: hive-metastore
roleRef:
  kind: Role
  name:  hive-metastore  
  apiGroup: rbac.authorization.k8s.io
---
# Source: hive-metastore/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hive-metastore
  labels:
    helm.sh/chart: hive-metastore-0.1.0
    app: hive-metastore
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/managed-by: Helm

spec:
  type: ClusterIP
  ports:
    - name: thrift
      port: 9083
      targetPort: 9083
      protocol: TCP
  selector:
    app: hive-metastore
---
# Source: hive-metastore/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hive-metastore
  labels:
    helm.sh/chart: hive-metastore-0.1.0
    app: hive-metastore
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: hive-metastore
  template:
    metadata:
      labels:
        helm.sh/chart: hive-metastore-0.1.0
        app: hive-metastore
        app.kubernetes.io/version: "3.0.0"
        app.kubernetes.io/managed-by: Helm
        app: hive-metastore
    spec:
      serviceAccountName: hive-metastore
      containers:
        - name: hive-metastore
          image: "ghcr.io/melodyyangaws/hive-metastore:3.0.0"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1
              memory: 1000Mi
            requests:
              cpu: 400m
              memory: 512Mi
          command: ["/opt/hive-metastore/bin/entrypoint.sh"]
          env:
            - name: HIVE_CONF_PARAMS
              value: "hive.metastore.schema.verification:false;datanucleus.autoCreateSchema:false"
            - name: HIVE_DB_DRIVER
              value: "com.mysql.cj.jdbc.Driver"
            - name: HIVE_DB_EXTERNAL
              value: "true"
            - name: HIVE_DB_JDBC_URL
              value: "map[RDS_JDBC_URL:<nil>]"
            - name: HIVE_DB_PASS
              value: "map[RDS_PASSWORD:<nil>]"
            - name: HIVE_DB_USER
              value: "map[RDS_USERNAME:<nil>]"
            - name: HIVE_WAREHOUSE_DIR
              value: "map[S3BUCKET:<nil>]"
            - name: HIVE_WAREHOUSE_S3LOCATION
              value: "map[S3BUCKET:<nil>]"
            
          ports:
            - name: tcp
              containerPort: 9083
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9083
          readinessProbe:
            tcpSocket:
              port: 9083
          volumeMounts:
            - name: hive-conf-templates
              mountPath: /opt/hive-metastore/conf/templates
      volumes:
        - name: hive-conf-templates
          configMap:
            name: hive-metastore-conf-templates
---
# Source: hive-metastore/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hive-metastore
  labels:
    helm.sh/chart: hive-metastore-0.1.0
    app: hive-metastore
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hive-metastore
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
---
# Source: hive-metastore/templates/init-schema-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: hive-metastore-init-schema
  labels:
    helm.sh/chart: hive-metastore-0.1.0
    app: hive-metastore
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  ttlSecondsAfterFinished: 30
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: hive-metastore
      containers:
        - name: hive-metastore
          image: "ghcr.io/melodyyangaws/hive-metastore:3.0.0"
          imagePullPolicy: IfNotPresent
          resources:
            {}
          command: ["/opt/hive-metastore/bin/schema-tool.sh"]
          args:
            - -dbType
            - postgres
            - -initSchema
            - -ifNotExists
          env:
            - name: HIVE_CONF_PARAMS
              value: "hive.metastore.schema.verification:false;datanucleus.autoCreateSchema:false"
            - name: HIVE_DB_DRIVER
              value: "com.mysql.cj.jdbc.Driver"
            - name: HIVE_DB_EXTERNAL
              value: "true"
            - name: HIVE_DB_JDBC_URL
              value: "map[RDS_JDBC_URL:<nil>]"
            - name: HIVE_DB_PASS
              value: "map[RDS_PASSWORD:<nil>]"
            - name: HIVE_DB_USER
              value: "map[RDS_USERNAME:<nil>]"
            - name: HIVE_WAREHOUSE_DIR
              value: "map[S3BUCKET:<nil>]"
            - name: HIVE_WAREHOUSE_S3LOCATION
              value: "map[S3BUCKET:<nil>]"
            
          volumeMounts:
            - name: hive-conf-templates
              mountPath: /opt/hive-metastore/conf/templates
      volumes:
        - name: hive-conf-templates
          configMap:
            name: hive-metastore-conf-templates
