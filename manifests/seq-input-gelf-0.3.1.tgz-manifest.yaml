---
# Source: seq-input-gelf/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-seq-input-gelf
  labels:
    helm.sh/chart: seq-input-gelf-0.3.1
    app.kubernetes.io/name: seq-input-gelf
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.0.441-x64"
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: seq-api-key
---
# Source: seq-input-gelf/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-seq-input-gelf
  labels:
    helm.sh/chart: seq-input-gelf-0.3.1
    app.kubernetes.io/name: seq-input-gelf
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.0.441-x64"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 12201
      targetPort: gelf
      protocol: TCP
      name: gelf
  selector:
    app.kubernetes.io/name: seq-input-gelf
    app.kubernetes.io/instance: my-release
---
# Source: seq-input-gelf/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-seq-input-gelf
  labels:
    helm.sh/chart: seq-input-gelf-0.3.1
    app.kubernetes.io/name: seq-input-gelf
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.0.441-x64"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: seq-input-gelf
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: seq-input-gelf
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-seq-input-gelf
      securityContext:
        fsGroup: 2000
        runAsUser: 1000
        runAsGroup: 3000
        runAsNonRoot: true
      containers:
        - name: seq-input-gelf
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          image: "datalust/seq-input-gelf:3.0.441-x64"
          imagePullPolicy: IfNotPresent
          ports:
            - name: gelf
              containerPort: 12201
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: gelf
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: gelf
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {}
          env:
            - name: SEQ_ADDRESS
              value: http://seq:5341
            - name: SEQ_API_KEY
              valueFrom:
                secretKeyRef:
                  name: seq-api-key
                  key: api-key
            - name: GELF_ADDRESS
              value: tcp://0.0.0.0:12201
            - name: GELF_ENABLE_DIAGNOSTICS
              value: "true"
            - name: RUST_BACKTRACE
              value: "0"
          volumeMounts:
            # mount an empty dir to /tmp to prevent errors as readOnlyRootFilesystem is true
            - mountPath: /tmp
              name: tmp
      volumes:
        - name: tmp
          emptyDir: {}
---
# Source: seq-input-gelf/templates/tests/test.job.yaml
kind: Job
apiVersion: batch/v1
metadata:
  name: my-release-seq-input-gelf-test
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 60
  ttlSecondsAfterFinished: 600 #automatically deleted 10 minutes after completion
  template:
    metadata:
    spec:
      securityContext:
        fsGroup: 2000
        runAsUser: 1000
        runAsGroup: 3000
        runAsNonRoot: true
      containers:
      - name: tcp-connection-is-alive
        image: alpine
        command: ["/bin/sh"]
        args: ["-c", "nc -z my-release-seq-input-gelf.default.svc.cluster.local 12201"]
        securityContext:
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      restartPolicy: Never
