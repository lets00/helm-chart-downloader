---
# Source: vault-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-vault-operator
  namespace: default
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: vault-operator/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-vault-operator-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjakNDQWxxZ0F3SUJBZ0lRZEE5a3lvS0tZNXBabWNQMVFDdzk4akFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1UWXdNREF3TWpsYUZ3MHpOREEyTVRRd01EQXdNamxhTUNReApJakFnQmdOVkJBTVRHVzE1TFhKbGJHVmhjMlV0ZG1GMWJIUXRiM0JsY21GMGIzSXdnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3UxYWg3RksrcWU1d2VobTBGVVg0b0VhK2RxUFduUmYzb0xTMFEKcG9lWXZDekZxUy9TenE5STEvcU5jbytVOTEyNVZUMU1tUjJVODdPTmErc1UxNHVDZ1J3SWM3cksydFRZK3NvaQpNZG1YQnBrbVkzZnVPZzF2SnlDdUh0eHEwUkw0a2xxaHM4dU5lbnBYQUI3KytRYTZjQVZyenQycG45UFB5aGlMCjZXMXUwcjVwKzFVMzVQUmZrRE8yL1R3NUVOeUJSVlFjRExJdnRRMjJqT1RRUGdNVWZieGVkK0RTSXA4Rk0rZ0gKQk1pMUtDNDQ5UXlxSEovRWpiOVRqYlNnUmM5NjZVbUJQZEtUU2Q5ejBMUDI4WHVhdGtEL1M5TVNDYVVLbG01awpoODlTWjljV29rVVhFblpRNFk5SDlBOVZ6bm4yekF4NVh3Nmp2bFFjdHQybUlXazFBZ01CQUFHamdiWXdnYk13CkRnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU0KQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRGo4UkpwSjVyN0ZiVHJPK2hNNUdyUmtiK0x4TUZNRwpBMVVkRVFSTU1FcUNJVzE1TFhKbGJHVmhjMlV0ZG1GMWJIUXRiM0JsY21GMGIzSXVaR1ZtWVhWc2RJSWxiWGt0CmNtVnNaV0Z6WlMxMllYVnNkQzF2Y0dWeVlYUnZjaTVrWldaaGRXeDBMbk4yWXpBTkJna3Foa2lHOXcwQkFRc0YKQUFPQ0FRRUF6VkNacGpwZ3hlTGs4U096Z2tlWkwrQi91K1gveVlRT3ozbWZwUk9OSE93Mnc0V2NPQTB5RjRYeApveTV6V0NoQkpHYnBzOTVWbjdvVFVuQnhPMHQ4TVZTaVMzb2k5NkFERFVid25TeU1LWUhuOEVSUlpySWtNUnRaCitYS3A5TGZ5UjVBelVNZjBzb1RoL3hFRGlwTlJ5YjloNERmNTdRNU1RSXdYK25saXlqNUJqS0lmUHRvbE9rUzQKOW1DZUlIQ0ZLY0hsMDg0d1RxR1BkL0ZvQzBXRHZwK0JsMDY3Y2o5YW5vZmNPNGdCb1hFUzZvSjlYMk5TWkJ4Ygpzek1UdCsxYU1QTkV3SDRhL01jZHZ5b3FKVEFtTUF0T3AxdDhBVGtuNlhlNTY3UlcxWnFuSWNkRE9pTkFERXV5CkVCRW96ZzRLbVRRNUhkSlVOTVBJdmEvYWs2bHRDQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcnRXb2V4U3ZxbnVjSG9adEJWRitLQkd2bmFqMXAwWDk2QzB0RUthSG1Md3N4YWt2CjBzNnZTTmY2alhLUGxQZGR1VlU5VEprZGxQT3pqV3ZyRk5lTGdvRWNDSE82eXRyVTJQcktJakhabHdhWkptTjMKN2pvTmJ5Y2dyaDdjYXRFUytKSmFvYlBMalhwNlZ3QWUvdmtHdW5BRmE4N2RxWi9UejhvWWkrbHRidEsrYWZ0VgpOK1QwWDVBenR2MDhPUkRjZ1VWVUhBeXlMN1VOdG96azBENERGSDI4WG5mZzBpS2ZCVFBvQndUSXRTZ3VPUFVNCnFoeWZ4STIvVTQyMG9FWFBldWxKZ1QzU2swbmZjOUN6OXZGN21yWkEvMHZURWdtbENwWnVaSWZQVW1mWEZxSkYKRnhKMlVPR1BSL1FQVmM1NTlzd01lVjhPbzc1VUhMYmRwaUZwTlFJREFRQUJBb0lCQUUwTWwrMTJGbHlaa1JuYQp3QjBCNXdrZGtqbDNCcHVyT3RTaFpDVGNYeEd1akVTbjVRMlFUS3RiazIzV3VQUTdkN0Ivb2o0cGxHSGFiSnk4Cm5LTll3b0RIQ1dXb0t2L1BKTkppNDhYaUZqUjZrZS9iRWpXSW0vY0tWVnFtK3hpUC96NVFzV1JsNmlUMWZ3anMKWXJ5WFhxRzNVSXhNWkYrbXNoLzJ2bzZhVnNIcG40T0RKejJZUWFPT3VOZ1JkR3Q2VnFmQlFQSHJRYVRsUk9wRApySTB4cTBhOHRNTURqWGlYN3dLUGliaFZtTGVxZ3ptbStueFQyQ0ljTlFsZmt6NnhudXdBWmFOYVB6bTk5NVpyCkNwTGpHRlcydkpraHBNdHJZQTRKVjM4NFlRWWxlSjgyTjdSa1haVk5yZmljZ1cvc0tuL3ZaQ3U1UGh1VlVhLzAKK1U1WE1vRUNnWUVBMzVRVW01cCszenNSZEI1L2hsanRneEFEMkhpS1R3d3lFUnNpL09UZUgvcjdsSG5HUHkzMwo4aDZQVTY3Q3RnOTZMOWVPbDBGQjNWNHQ5bXVnczM2d2NhZ2hmTzhFVFFXRk02NTZaWmRtdW55N2xkc3hvc2VDCjB4RStQWHg3SVRTOEdyZEFDUFZhQ0locVBPMzRIaXh4Sm1XU2FHbTQwK1R2NXJxS3RpcWxCVkVDZ1lFQXlEQU8KY2YxcUQyK2V4ekdVMXhzZ3VYejA1UklBZDd5TEc0Y1RRKzhtQldGeUs1VkYwODdwbWhzS09iQStxTzJXbzQvaApJVjdmQW9VY084emk0R3dEUXU4MEVCMUw0YzZJZ3F6d1ZIUk51ZVVadVZkOTJpbVdlbU43cy9XY3JVY3ZEWW8wCm1NQmhFYU8weWViZ1pMUlFqeHpHaE5EVU56RkxXNm1nR09xbVBLVUNnWUVBcEloUUJoYlRDU3BwOUw5QTc3aGYKeVpTdWo4NWRVa0RTVTM1WjZDdnhQeTJ2bUp0cEJqT3BCUGZ5V0E0QzRvSlBWQWZZdW56ZW9LN2ZPam9JUUMrYQpYM253Y3dWZWIrUUJHNEJxT0hzTHNXOTdpSk9QV3BCaU9UdTJSdjlsaVpGS1lJcTh5QnJ1ejlxNysrelFMRHhlClpIaFpIeGUyV2RGZnJyZFd2eXB3MkpFQ2dZRUFwOVNpUjY3TlhHT1lHaWZYUVAvZFQ2VVRLM2tNSzFaR3lhMVUKMlgrRndMMFJtcmhxOGtobVVHeWJCZ0pjaGdPcVp6WVk2SUZCTmp1aWtBQVZ0VkRZNnlUZjRTS3VtNEVyc1dLTApta0puWjVKTEhyZmJLeXZ5bkdrTExMU2R4aWdIcXJKVHBqeWpKTWE2cXdxRTFlaldJU1ZleWJyS0wvdUQwalZECm82QVYvb0VDZ1lCTnhQakFOZ0VnaWRGeHVXUU0vZTRyaGtuK0tuTTR1dlZWUEx0QjZ0U3p0RVVRNk9zSlI4Um4KTnpNbHpWUHFLRXpvQTI2QnNlS2NpS1EzVy80Vk03QXdyekpaRmpLaFhiSlpORk03RFhjQ0lSb1NyZlJ2TWdTTQpQVVk1L0pkZlFtcmFrZHUrSStON0FsWjdNOFZHWlB4WnRKclIwd2d0V0tZb2JHTVpISjZhanc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: vault-operator/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-vault-operator
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["create", "patch"]
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["delete", "get", "patch"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["delete", "list", "watch", "patch"]
- apiGroups:
  - kubevault.com
  - catalog.kubevault.com
  - policy.kubevault.com
  - engine.kubevault.com
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - deployments
  verbs: ["create","get", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - services
  - serviceaccounts
  verbs: ["create", "get", "patch"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["list"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs: ["get", "create", "list"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs: ["get", "update", "create", "patch"]
---
# Source: vault-operator/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-vault-operator-apiserver-auth-delegator
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-vault-operator
  namespace: default
---
# Source: vault-operator/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-vault-operator
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-vault-operator
subjects:
- kind: ServiceAccount
  name: my-release-vault-operator
  namespace: default
---
# Source: vault-operator/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-vault-operator-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-vault-operator
  namespace: default
---
# Source: vault-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-vault-operator
  namespace: default
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
---
# Source: vault-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-vault-operator
  namespace: default
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vault-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault-operator
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: 3a3169d0d637abdbb942c34c426183d3839bf3e643d2dccdfcc924f944043f57
    spec:
      serviceAccountName: my-release-vault-operator
      containers:
      - name: operator
        securityContext:
          {}
        image: kubevault/vault-operator:v0.3.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        - --cluster-name=
        ports:
        - containerPort: 8443
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-vault-operator-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
---
# Source: vault-operator/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.mutators.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: my-release-vault-operator
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRQnBjRXk1L2FMTkVNS1RwaDVWbXBnekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1UWXdNREF3TWpsYUZ3MHpOREEyTVRRd01EQXdNamxhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1MVFsCjlrdEQ3K3JsbkViQmRqVHBQUDhxVTRtTHJsK0RlSXBnalJGMmIweUdkbksxdFpsai9VV3ZudGhxc1pJeDNPU0kKdFk4S0ZVY2RkYktCcjQ2RURkVUc4WVhETVd5U1FzZEZaTXhyM2VkRE56U24zblMyL21OVFQ0d3V1OWVEa3ljWApFalFBWWNKalkxZVFWYzR6S0hmci9nZCt1cFM0cXNsV09LSlI0SUhBNlpvK1lYVWxIWFh6NzhoM1hvNVZFYm5qClNubERyOXJKM2NNZ09DQVNvOTJnQTBONm5TWmZhTkk5QldxUXZNbDRBT0xFZmVUaFFuVXVwd3p5M3QvY00rSzQKdHJiRkpHa2dWb2ROdGdMYVlUcEY0Y1lQK2tnbklQckM4MHkzdW5XVlMxRlViZVBxZExsVTk3ekdiSE1kUEUraApGS0hTNWlKenJsbEpuU1dpcVFJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkRqOFJKcEo1cjdGYlRyTytoTTVHclJrYitMeE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0pOdm9IV1RMegpLdGUyTGpOQ3JER1RzdWRDYzAvRUdMUmFIVlVsZjBhY2pYMVBNeUdaODFMRWcxR0NZbVAyR1JLVUlhRS9qV01jCjJSY1ZBT2dlVnNOWGxDcGJYVC9MZGg1bGZwMDg0YWdiT2VzSVFhb2cvMmlMczNOOEl5VS9uamxrdmNRQWVzanQKOUJFS0RUclluYjBvZVI0bGRsSWt3cGJnWDlROXlyMnhLMjE4V25xTjJMTHFkMUtLQWNSOHZsSzFkTkMraURvbgpxV2I3b3VVeHAzeklCR2ZPMFVaelFNVzc0aFl0dXByR3ZFcXJqQjg0QWV4V3BRSHg5T3RJQlpQMDRwQWJCQXgwCjBmNW5YTE93UjdER3F6b3F2elNubVFrdEhVTU5wOStMQkg2YUJEek1Db1VaY0p1MGRpcFdFeDJSVWdEVVRPZ3kKYmtaNzN1dFQ0SE5NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: vault-operator/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.validators.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: my-release-vault-operator
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRQnBjRXk1L2FMTkVNS1RwaDVWbXBnekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1UWXdNREF3TWpsYUZ3MHpOREEyTVRRd01EQXdNamxhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1MVFsCjlrdEQ3K3JsbkViQmRqVHBQUDhxVTRtTHJsK0RlSXBnalJGMmIweUdkbksxdFpsai9VV3ZudGhxc1pJeDNPU0kKdFk4S0ZVY2RkYktCcjQ2RURkVUc4WVhETVd5U1FzZEZaTXhyM2VkRE56U24zblMyL21OVFQ0d3V1OWVEa3ljWApFalFBWWNKalkxZVFWYzR6S0hmci9nZCt1cFM0cXNsV09LSlI0SUhBNlpvK1lYVWxIWFh6NzhoM1hvNVZFYm5qClNubERyOXJKM2NNZ09DQVNvOTJnQTBONm5TWmZhTkk5QldxUXZNbDRBT0xFZmVUaFFuVXVwd3p5M3QvY00rSzQKdHJiRkpHa2dWb2ROdGdMYVlUcEY0Y1lQK2tnbklQckM4MHkzdW5XVlMxRlViZVBxZExsVTk3ekdiSE1kUEUraApGS0hTNWlKenJsbEpuU1dpcVFJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkRqOFJKcEo1cjdGYlRyTytoTTVHclJrYitMeE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0pOdm9IV1RMegpLdGUyTGpOQ3JER1RzdWRDYzAvRUdMUmFIVlVsZjBhY2pYMVBNeUdaODFMRWcxR0NZbVAyR1JLVUlhRS9qV01jCjJSY1ZBT2dlVnNOWGxDcGJYVC9MZGg1bGZwMDg0YWdiT2VzSVFhb2cvMmlMczNOOEl5VS9uamxrdmNRQWVzanQKOUJFS0RUclluYjBvZVI0bGRsSWt3cGJnWDlROXlyMnhLMjE4V25xTjJMTHFkMUtLQWNSOHZsSzFkTkMraURvbgpxV2I3b3VVeHAzeklCR2ZPMFVaelFNVzc0aFl0dXByR3ZFcXJqQjg0QWV4V3BRSHg5T3RJQlpQMDRwQWJCQXgwCjBmNW5YTE93UjdER3F6b3F2elNubVFrdEhVTU5wOStMQkg2YUJEek1Db1VaY0p1MGRpcFdFeDJSVWdEVVRPZ3kKYmtaNzN1dFQ0SE5NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: vault-operator/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.validators.engine.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.engine.kubevault.com
  version: v1alpha1
  service:
    namespace: default
    name: my-release-vault-operator
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRQnBjRXk1L2FMTkVNS1RwaDVWbXBnekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1UWXdNREF3TWpsYUZ3MHpOREEyTVRRd01EQXdNamxhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1MVFsCjlrdEQ3K3JsbkViQmRqVHBQUDhxVTRtTHJsK0RlSXBnalJGMmIweUdkbksxdFpsai9VV3ZudGhxc1pJeDNPU0kKdFk4S0ZVY2RkYktCcjQ2RURkVUc4WVhETVd5U1FzZEZaTXhyM2VkRE56U24zblMyL21OVFQ0d3V1OWVEa3ljWApFalFBWWNKalkxZVFWYzR6S0hmci9nZCt1cFM0cXNsV09LSlI0SUhBNlpvK1lYVWxIWFh6NzhoM1hvNVZFYm5qClNubERyOXJKM2NNZ09DQVNvOTJnQTBONm5TWmZhTkk5QldxUXZNbDRBT0xFZmVUaFFuVXVwd3p5M3QvY00rSzQKdHJiRkpHa2dWb2ROdGdMYVlUcEY0Y1lQK2tnbklQckM4MHkzdW5XVlMxRlViZVBxZExsVTk3ekdiSE1kUEUraApGS0hTNWlKenJsbEpuU1dpcVFJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkRqOFJKcEo1cjdGYlRyTytoTTVHclJrYitMeE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0pOdm9IV1RMegpLdGUyTGpOQ3JER1RzdWRDYzAvRUdMUmFIVlVsZjBhY2pYMVBNeUdaODFMRWcxR0NZbVAyR1JLVUlhRS9qV01jCjJSY1ZBT2dlVnNOWGxDcGJYVC9MZGg1bGZwMDg0YWdiT2VzSVFhb2cvMmlMczNOOEl5VS9uamxrdmNRQWVzanQKOUJFS0RUclluYjBvZVI0bGRsSWt3cGJnWDlROXlyMnhLMjE4V25xTjJMTHFkMUtLQWNSOHZsSzFkTkMraURvbgpxV2I3b3VVeHAzeklCR2ZPMFVaelFNVzc0aFl0dXByR3ZFcXJqQjg0QWV4V3BRSHg5T3RJQlpQMDRwQWJCQXgwCjBmNW5YTE93UjdER3F6b3F2elNubVFrdEhVTU5wOStMQkg2YUJEek1Db1VaY0p1MGRpcFdFeDJSVWdEVVRPZ3kKYmtaNzN1dFQ0SE5NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: vault-operator/templates/appcatalog-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: vault-operator/templates/appcatalog-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: vault-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubevault:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubevault.com
  - catalog.kubevault.com
  - policy.kubevault.com
  - appcatalog.appscode.com
  - engine.kubevault.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: vault-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubevault:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubevault.com
  resources:
  - vaultservers
  verbs: ["*"]
- apiGroups:
  - policy.kubevault.com
  resources:
  - vaultpolicies
  - vaultpolicybindings
  verbs: ["*"]
- apiGroups:
  - engine.kubevault.com
  resources:
  - secretengines
  - databaseaccessrequests
  - mongodbroles
  - mysqlroles
  - postgresroles
  - awsroles
  - awsaccesskeyrequests
  - gcproles
  - gcpaccesskeyrequests
  - azureroles
  - azureaccesskeyrequests
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["*"]
- apiGroups:
  - catalog.kubevault.com
  resources:
  - vaultserverversions
  verbs: ["get", "list", "watch"]
---
# Source: vault-operator/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubevault:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubevault.com
  resources:
  - vaultservers
  verbs: ["get", "list", "watch"]
- apiGroups:
  - policy.kubevault.com
  resources:
  - vaultpolicies
  - vaultpolicybindings
  verbs: ["get", "list", "watch"]
- apiGroups:
  - engine.kubevault.com
  resources:
  - secretengines
  - databaseaccessrequests
  - mongodbroles
  - mysqlroles
  - postgresroles
  - awsroles
  - awsaccesskeyrequests
  - gcproles
  - gcpaccesskeyrequests
  - azureroles
  - azureaccesskeyrequests
  verbs: ["get", "list", "watch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["get", "list", "watch"]
- apiGroups:
  - catalog.kubevault.com
  resources:
  - vaultserverversions
  verbs: ["get", "list", "watch"]
---
# Source: vault-operator/templates/cleaner.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-vault-operator-cleaner
  namespace: default
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      serviceAccountName: my-release-vault-operator
      containers:
      - name: kubectl
        image: appscode/kubectl:v1.16
        command:
          - sh
          - -c
          - "sleep 2; \
          kubectl delete validatingwebhookconfigurations validators.kubevault.com || true; \
          kubectl delete validatingwebhookconfigurations validators.engine.kubevault.com || true; \
          kubectl delete mutatingwebhookconfiguration mutators.kubevault.com || true; \
          kubectl delete apiservice v1alpha1.mutators.kubevault.com || true; \
          kubectl delete apiservice v1alpha1.validators.engine.kubevault.com || true; \
          kubectl delete apiservice v1alpha1.validators.kubevault.com || true;"
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
---
# Source: vault-operator/templates/mutating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: vaultpolicybindings.mutators.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubevault.com/v1alpha1/vaultpolicybindingmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - policy.kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultpolicybindings
  failurePolicy: Fail
  sideEffects: None
- name: vaultservers.mutators.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubevault.com/v1alpha1/vaultservermutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultservers
  failurePolicy: Fail
  sideEffects: None
---
# Source: vault-operator/templates/validating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: vaultservers.validators.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubevault.com/v1alpha1/vaultservervalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultservers
  failurePolicy: Fail
  sideEffects: None
---
# Source: vault-operator/templates/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.engine.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: databaseaccessrequests.validators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.engine.kubevault.com/v1alpha1/databaseaccessrequestvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
      - CREATE
      - UPDATE
    apiGroups:
      - engine.kubevault.com
    apiVersions:
      - "*"
    resources:
      - databaseaccessrequests
  failurePolicy: Fail
  sideEffects: None
- name: awsaccesskeyrequests.validators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.engine.kubevault.com/v1alpha1/awsaccesskeyrequestvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - engine.kubevault.com
    apiVersions:
    - "*"
    resources:
    - awsaccesskeyrequests
  failurePolicy: Fail
  sideEffects: None
- name: gcpaccesskeyrequests.validators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.engine.kubevault.com/v1alpha1/gcpaccesskeyrequestvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - engine.kubevault.com
    apiVersions:
    - "*"
    resources:
    - gcpaccesskeyrequests
  failurePolicy: Fail
  sideEffects: None
- name: azureaccesskeyrequests.validators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.engine.kubevault.com/v1alpha1/azureaccesskeyrequestvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - engine.kubevault.com
    apiVersions:
    - "*"
    resources:
    - azureaccesskeyrequests
  failurePolicy: Fail
  sideEffects: None
