---
# Source: sidecar-injector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: sidecar-injector/templates/deployment.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: my-release-sidecar-injector-webhook-tls
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuekNDQW9lZ0F3SUJBZ0lSQU9WRXVoNXltTUd3Sk42K08vaURYYmd3RFFZSktvWklodmNOQVFFTEJRQXcKRlRFVE1CRUdBMVVFQXhNS1pHVm1ZWFZzZEMxallUQWVGdzB5TkRBMk1UWXdNREl3TURkYUZ3MHlOVEEyTVRZdwpNREl3TURkYU1ESXhNREF1QmdOVkJBTVRKMjE1TFhKbGJHVmhjMlV0YzJsa1pXTmhjaTFwYm1wbFkzUnZjaTVrClpXWmhkV3gwTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9LS2Y1YzcKTkFhbUl1WlM3YTRsOVNpK0dWRDdvTWovTXRKWitKZWRtTFhhdUZkclc5b0FBM3ZxdS9ZT3BPUGZUTXZOdktQRApRUmRHMHF1WTB3LzdvTlpSUWFyUG5oVzFITHpIRUY4SzN0UDBOV21xWWhBM05sMndWS1h0cjhycUEyTHBJTWpnCnRMeUdZSEVCb2tVM0JQSjhydm9oZllhZStpeWtJZ05jekMwU3VVWVJ3VmEyT1AyZ1hOM1V6U1AwWFp0NE1VQW4KVUhVdnJJUFNnenpYWDlVakxjZUM1R1pGTHhtQ3RLbWVtbWV4MHJ0K1ROZ0oyK0dBeG0xdUZiV3Zhb1ZwckNMdApsa0xsbkJQd2tGUWpJMXo2dFZuMFkxS1FVNDlWZHJPUndEb3M1dFIwZzNUTzFZeTlpOGd5ZnUwNGQrenJQTDF5ClB0RWR0ekNBRHloZ2pnOENBd0VBQWFPQnpEQ0J5VEFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXcKRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVQoxanQwam9rYit0REhsQmZGRXZyVkFKTHRlSmd3YVFZRFZSMFJCR0l3WUlJMWJYa3RjbVZzWldGelpTMXphV1JsClkyRnlMV2x1YW1WamRHOXlMbVJsWm1GMWJIUXVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXeUNKMjE1TFhKbGJHVmgKYzJVdGMybGtaV05oY2kxcGJtcGxZM1J2Y2k1a1pXWmhkV3gwTG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBR0kxLzNWbFc3aGthN3lwUTBIYzVoc29hZmJGcVNZakJRTmhpV2pidkJMaC9iNjlUWkxEQllaWTNudWFSCmJ1M0dJVHorTFBhajNtZkVBem1lVHNFVTZmVUNJdDVjejJYcXFRS2RzL3VhNVNkYWhYOFZnSWwxK04yRm1rVjYKNU9NUzhTT2xkTkI1WFZDdkxBSUNOTzRoZVl6Uk5CK2JQMmZTNHZ5RFhsUmE4RU1YM1c3NU4wSmYvVm1pNkdOeQprU081U2V1SmxCUEpXdFdFM0xwT2pzQmltTDh2Z3VXNTNVZnZ0VG9nWmRucFhRK2ZIV2dDbjBpRk1CSlUzOVRzCmZWVFUrRXZpelhZbCtOL0I1SHNvNFlvVDg4WDlkUWRIb1VpUXhHcTdBUlo0NVgrTVN2NXZTYWRJWVg1bUQ3WXIKNW5Cd08yTlc0cXdzOU9nQjdNRldoZTlYbkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNG9wL2x6czBCcVlpNWxMdHJpWDFLTDRaVVB1Z3lQOHkwbG40bDUyWXRkcTRWMnRiCjJnQURlK3E3OWc2azQ5OU15ODI4bzhOQkYwYlNxNWpURC91ZzFsRkJxcytlRmJVY3ZNY1FYd3JlMC9RMWFhcGkKRURjMlhiQlVwZTJ2eXVvRFl1a2d5T0MwdklaZ2NRR2lSVGNFOG55dStpRjlocDc2TEtRaUExek1MUks1UmhIQgpWclk0L2FCYzNkVE5JL1JkbTNneFFDZFFkUytzZzlLRFBOZGYxU010eDRMa1prVXZHWUswcVo2YVo3SFN1MzVNCjJBbmI0WURHYlc0VnRhOXFoV21zSXUyV1F1V2NFL0NRVkNNalhQcTFXZlJqVXBCVGoxVjJzNUhBT2l6bTFIU0QKZE03VmpMMkx5REorN1RoMzdPczh2WEkrMFIyM01JQVBLR0NPRHdJREFRQUJBb0lCQUJyNnZabElMcmovL2pZSgorRTUrTE1WT1pudHpqRUdEeXd5c05HUHlHK2JFaHFHNm9uVEMvYWM3WEdsQWN6akVOa1FyVzJUeGN3WVBwRFZWCmZRVnhSVVZnNWY0dXZiZitHczhNc2hGdm5Qd0hJSGxXRmxteUNhSjh4b2dBVjZoRjJHTm1Pa1pTSkpRek9MY2MKcDdPd2lzRktRaGg5OXBJYXl0YVlNWWpPKzIzK2pIMFJkS2NheWtBY2F3ang4NzZyclovaHFkaW5STmNldm9oOApQQlpySjJaSE4yMzdvSE1CczM4UUo1MHZLZHQwYWhVYzdnWTQrVzJ0RzRmRkZBcUg4R1puZVdiSVNwUXZuRGMvCkNvVU1xdUJXanlZc0IwY1ZHaEM3K2tkeTJ5alAvUFNEejQzK1BUU282am04bDd2UHUyU211dGdHdFdoZHNRYy8KaFhaSi9aa0NnWUVBOVhHMFVIaEE2emJIblBZbS9WR0lOcUtVWGV2VUI1cTM4aFhvUE13ZVNjWWM0L2R2d1YvKwpEK1NMSW5VTVMrREY5WVNNaGJFeUh6am1sN2J4TVNKdGpwc2hrMWVMNndXNEFTZkhFT2F2c2h0UjZ2ZHl1N0tRCk9MSzExcXJkNlhjWVJpNjhPRGR2SEtuTTF2UExsV2dadlE4T2Y1UHJjV2lJR01paWVDN1RId3NDZ1lFQTdFaXMKZnk4WS9wRzQ3ZWtueFQxM1U4SUtMVklmdllxTWlOUTViekJNQUVRQ0llT25lWWRmSmIzaU1rbmRuTzRxUy9ZUgpFR3U0d0x5NVBKKzBmb1FhdzZwQzJ2V0JraW9kalpQc1RUVmo5cWJkUVBhNHRkczVUV2xFTGdKTlduWjlLc2hECjg2dnFPbGx3MjVQTEFEUTRvb1JRek5ESkxKOTh6emFka3h4V2Y0MENnWUVBOUw1cTlRclVnVGRnbUkyRGwzbmoKZjhkaWRyMGY4bTAvR3pEcElTYlExUE90LzB2T3JsN1A4bjBNbUZGcTc0YTFIdnNMUEl6UzAvdGpSTWx4ZkhNKwpGOE50R1lWa3lmZ3I0VXNPM3pXSTRPc0pKbW1VaU1HbnVrSEp2TU1wQVJKMnJCVVNMbVJvY1lhSDhaZXMyOUN3ClNhdG40Nk5XVlFITkpCbDhtS2JvY3IwQ2dZQS9VL2NQbTNMcWYrbjlzZGpiNzI1MC8zTzAwK2IzNlJOamRPWHoKM0JEeW5VZXBCNWdTWldybDlhK1RaT0xGdGJ1V1lsd09kNkNyMzZrU0M0Zlh4Tlpiak4yZ1M5NnZheVJDbHR2bAprYUs2TDl6ckZYVktJSGlLTytWdkkyVFNFeUhXL3BmZnpqclg2ckxwMXdHNGkwYUdvRW43cXhYUUpPclJxc1N1CjhoQm8zUUtCZ0F4MVdmdGxEcXFBK3YrT21zMEpOcVRBc1ZHQXVGVGQvWVVEVklOeGdKMXhKanFRVzB2VWFxcE4Kak1OTnVXcHhQZ1lISlZqQ3hiQUd0dEdQVWxnZ3Y1UDZyU0VURW94b3lQTXZ3VXBQMkFvdEhlMSt0cjF0eE0vRQpQenpJRTBGQUR5SkxCS0JDWGljODQzQittSUJhT1p6Yy9DdWFDeXg3byt0RHpnaGpVRW03Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lRWTFaRVg5ZkNoelgwVnBYeFV3Ums1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwa1pXWmhkV3gwTFdOaE1CNFhEVEkwTURZeE5qQXdNakF3TjFvWERUTTBNRFl4TkRBdwpNakF3TjFvd0ZURVRNQkVHQTFVRUF4TUtaR1ZtWVhWc2RDMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBS2JBbDBaN0Y0akxPVFNhWGNXK0ZkZHpsZTJhYU1JeEEwQm5sQ3d4UVVoZk1paWEKRzlXalJhOHpId3dZSjhUYlM5Kzl6Vmd3WXVUVElhTDZ6OEZGT1E1UFBxdXQwUmtQZ2xaZ1VKUzB2MFBQRDRxZApqcEFlb2ppd1Y4K3ArdHRnUWZnYXEyMUJNME15ekxHUlFRcEp1V3JMN2szbGNFOGtkMkQ4VVJpd1M0bU1MV0lCClFLMzdTZUY2bE8vRjNodEpGdmNiTzdVYVgzU0k2d0l6Ylg2a1V1eTNOSDJHNXlyckRXWmZyREtPZm55dUJ3aDIKVTdKM2FOcXNRY1cvTk5IZEtraVNLUjBocWRUdXh0WTNLdE1WRDZaT3MvTlA3MU1kc0JXdjlvb3doWElBTllBbApHVTlmeVhseDBHbnl4M3V3Y1kzUnI0WEZVL2dlZmF1V3JmazdUTVVDQXdFQUFhTmhNRjh3RGdZRFZSMFBBUUgvCkJBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEUKQlRBREFRSC9NQjBHQTFVZERnUVdCQlRXTzNTT2lSdjYwTWVVRjhVUyt0VUFrdTE0bURBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFsTmREYzhDUFgwWkJaZUs3ckhXZmNFa0k4TDlQQ3g1RVJUU0FSSnBVeFI5MUJIUUVabWw5ClQvTW80MTFUT0dGY3djc1lPQTM4S25kN3dPZWZxcDVxTklLejhGdjMxbjhseEg3SXVraC9lSEt3WE1CMk1lajQKVmZPYjhqckdNaTN2WjRUblZSMk5aZUlQTGRDZ3UycFpzd2pnWGlvbXdNNmdmbDJpK28rNDQyU3Jva244eWlDRQpjSkVsd2YzMTNxdWgwMjJ4YnNIZEwwbjVBbW4yVmtXeHlMR09xcTJ4Vk0zMlYxZ1FzKzE0aVA1RmZ6emowQWV4Cko2SDdoT1ZuajFobFJKNzdoTzF1L214eEdDdkRUUm52TnpVS0t3MVFPVHRTTE02QXhRdnZMOEZwaWhjRXJTc2IKMUtQOXUvcEdYZERHdXl6SFkyR2NPRjR6YW9DQmVzZUgvUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: sidecar-injector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
data:
  sidecarconfig.yaml: |-
    
    initContainers:
    - name: proxy-init
      image: impartsecurity/k8s-sidecar-init:0.24.0
      imagePullPolicy: IfNotPresent
      args: [
        "--incoming-proxy-port",
        "14143",
        "--proxy-uid",
        "2103",
        "--inbound-ports-to-ignore",
        "7946",
        "--outbound-ports-to-ignore",
        "7946",
        "--mode",
        "proxy"
        ]
      securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  add:
                  - NET_ADMIN
                  - NET_RAW
                  drop:
                  - ALL
                runAsUser: 0
    containers:
    - name: impart-inspector
      image: impartsecurity/inspector:0.24.1
      imagePullPolicy: IfNotPresent
      securityContext:
                runAsUser: 2103
      env:
      - name: INSPECTOR_STATSD_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: INSPECTOR_SIDECAR_HTTP_LISTEN_ADDR
        value: ":14143"
      - name: INSPECTOR_TCP_LISTEN_ADDR
        value: ":20210"
      - name: INSPECTOR_MODE
        value: "sidecar_proxy"
      - name: INSPECTOR_SIDECAR_CONTAINER_BACKEND_SCHEME
        value: ""
      - name: INSPECTOR_GOSSIP_PEER_ADDR
        value: my-release-controlnode.default.svc.cluster.local:7946
      - name: INSPECTOR_LOG_LEVEL
        value: 2
      - name: INSPECTOR_LOG_FORMAT
        value: text-basic
      - name: INSPECTOR_GOSSIP_ENABLED
        value: true
      - name: INSPECTOR_RULE_WORKERS_POOL
        value: 40
      - name: INSPECTOR_SIGTERM_DELAY_SECONDS
        value: 20
      - name: INSPECTOR_IMPART_API_URL
        value: https://api.impartsecurity.net/v0
      - name: INSPECTOR_TLS_CERT
        value: "/etc/tls-secret/tls.crt"
      - name: INSPECTOR_TLS_KEY
        value: "/etc/tls-secret/tls.key"
      - name: INSPECTOR_AUTH0_TENANT_DOMAIN
        value: 
      - name: INSPECTOR_JWT_AUDIENCE
        value: 
      - name: INSPECTOR_API_CLIENT_ID
        value: 
      - name: INSPECTOR_UNIX_SOCKET_PATH
        value: /tmp/impart/inspector.sock
      - name: INSPECTOR_UNIX_SOCKET_PERMISSIONS
        value: 438
      - name: INSPECTOR_CLUSTER_GROUP
        value: 
      resources:
        limits:
          cpu: 1.2
          memory: 2Gi
        requests:
          cpu: 200m
          memory: 512Mi
      volumeMounts:
    volumes:
---
# Source: sidecar-injector/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-sidecar-injector
  labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: my-release
rules:
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations"]
  verbs: ["create", "get", "delete", "list", "patch", "update", "watch"]
---
# Source: sidecar-injector/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-sidecar-injector
  labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: my-release
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-sidecar-injector
subjects:
- kind: ServiceAccount
  name:  my-release-sidecar-injector
  namespace: default
---
# Source: sidecar-injector/templates/controlnode.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-controlnode
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: "controlnode"
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 7946
      targetPort: 7946
  selector:
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: "controlnode"
---
# Source: sidecar-injector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 8443
  selector:
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
---
# Source: sidecar-injector/templates/controlnode.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-controlnode
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: "controlnode"
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sidecar-injector
      app.kubernetes.io/instance: "controlnode"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: "controlnode"
    spec:
      serviceAccountName: my-release-sidecar-injector
      securityContext:
        {}
      containers:
        - name:  controlnode
          securityContext:
            {}
          image: "impartsecurity/control-node:0.24.0"
          imagePullPolicy: IfNotPresent
          args:
          - --gossip_port=7946
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONTROL-NODE_LOG_LEVEL
            value: "2"
          - name: CONTROL-NODE_LOG_FORMAT
            value: "text-basic"
          resources:
            {}
          volumeMounts: []
      volumes: []
---
# Source: sidecar-injector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  priorityClassName: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sidecar-injector
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/webhook-tls-config: e915ef182145cc53edab00d0d3824d7fd36b7966205c147ab7d1b249972daf94
        checksum/webhook-tls-config-c: d2c22fd63793249bd6ba562e1a45382b4c8bcfae7f33b27f7cb581012834d4d5
        checksum/webhook-tls-config-k: dd2f5abcc7b04a17f265e877c055ee5e8258d7bfd5853071fa1505404c1f1207
        checksum/values: bb824ff1b0e675ef3038e44f339d43f83b32204b909b4ad2c2024d902826e51b
        checksum/webhook-sidecar-config: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-sidecar-injector
      securityContext:
        {}
      containers:
        - name: sidecar-injector
          securityContext:
            {}
          image: "impartsecurity/k8s-webhook-injector:0.24.0"
          imagePullPolicy: IfNotPresent
          args:
          - --sidecar-config-file=/etc/webhook/config/sidecarconfig.yaml
          - --tls-cert-file=/etc/webhook/certs/tls.crt
          - --tls-private-key-file=/etc/webhook/certs/tls.key
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: WEBHOOK-INJECTOR_LOG_LEVEL
            value: "2"
          - name: WEBHOOK-INJECTOR_LOG_FORMAT
            value: "text-basic"
          resources:
            {}
          volumeMounts:
          - mountPath: /etc/webhook/config
            name: webhook-config
          - name: certs
            mountPath: /etc/webhook/certs
            readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: my-release-sidecar-injector-webhook-tls
      - configMap:
          name: my-release-sidecar-injector
        name: webhook-config
---
# Source: sidecar-injector/templates/deployment.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: my-release-sidecar-injector
webhooks:
  - name: my-release-sidecar-injector.impart.security
    admissionReviewVersions: ["v1"]
    clientConfig:
      service:
        name: my-release-sidecar-injector
        namespace: default
        path: /inject
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lRWTFaRVg5ZkNoelgwVnBYeFV3Ums1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwa1pXWmhkV3gwTFdOaE1CNFhEVEkwTURZeE5qQXdNakF3TjFvWERUTTBNRFl4TkRBdwpNakF3TjFvd0ZURVRNQkVHQTFVRUF4TUtaR1ZtWVhWc2RDMWpZVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBS2JBbDBaN0Y0akxPVFNhWGNXK0ZkZHpsZTJhYU1JeEEwQm5sQ3d4UVVoZk1paWEKRzlXalJhOHpId3dZSjhUYlM5Kzl6Vmd3WXVUVElhTDZ6OEZGT1E1UFBxdXQwUmtQZ2xaZ1VKUzB2MFBQRDRxZApqcEFlb2ppd1Y4K3ArdHRnUWZnYXEyMUJNME15ekxHUlFRcEp1V3JMN2szbGNFOGtkMkQ4VVJpd1M0bU1MV0lCClFLMzdTZUY2bE8vRjNodEpGdmNiTzdVYVgzU0k2d0l6Ylg2a1V1eTNOSDJHNXlyckRXWmZyREtPZm55dUJ3aDIKVTdKM2FOcXNRY1cvTk5IZEtraVNLUjBocWRUdXh0WTNLdE1WRDZaT3MvTlA3MU1kc0JXdjlvb3doWElBTllBbApHVTlmeVhseDBHbnl4M3V3Y1kzUnI0WEZVL2dlZmF1V3JmazdUTVVDQXdFQUFhTmhNRjh3RGdZRFZSMFBBUUgvCkJBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEUKQlRBREFRSC9NQjBHQTFVZERnUVdCQlRXTzNTT2lSdjYwTWVVRjhVUyt0VUFrdTE0bURBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFsTmREYzhDUFgwWkJaZUs3ckhXZmNFa0k4TDlQQ3g1RVJUU0FSSnBVeFI5MUJIUUVabWw5ClQvTW80MTFUT0dGY3djc1lPQTM4S25kN3dPZWZxcDVxTklLejhGdjMxbjhseEg3SXVraC9lSEt3WE1CMk1lajQKVmZPYjhqckdNaTN2WjRUblZSMk5aZUlQTGRDZ3UycFpzd2pnWGlvbXdNNmdmbDJpK28rNDQyU3Jva244eWlDRQpjSkVsd2YzMTNxdWgwMjJ4YnNIZEwwbjVBbW4yVmtXeHlMR09xcTJ4Vk0zMlYxZ1FzKzE0aVA1RmZ6emowQWV4Cko2SDdoT1ZuajFobFJKNzdoTzF1L214eEdDdkRUUm52TnpVS0t3MVFPVHRTTE02QXhRdnZMOEZwaWhjRXJTc2IKMUtQOXUvcEdYZERHdXl6SFkyR2NPRjR6YW9DQmVzZUgvUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["v1"]
        resources:
          - pods
    failurePolicy: Fail
    sideEffects: None
    objectSelector:
      matchLabels:
        impart-inspector-injection: enabled
---
# Source: sidecar-injector/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-sidecar-injector-test-connection"
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: nc
      image: busybox
      command: ['sh', '-c']
      args:
        - "nc -zvw 5 my-release-sidecar-injector 443"
  restartPolicy: Never
