---
# Source: nsq/templates/nsqadmin-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-nsqadmin
  labels:
    helm.sh/chart: nsq-1.2.4
    helm.sh/release: my-release
    app.kubernetes.io/name: nsq
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 4171
    targetPort: http
  selector:
    app.kubernetes.io/component: nsqadmin
---
# Source: nsq/templates/nsqd-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-nsqd
  labels:
    helm.sh/chart: nsq-1.2.4
    helm.sh/release: my-release
    app.kubernetes.io/name: nsq
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 4151
    protocol: TCP
    targetPort: http
  - name: tcp
    port: 4150
    protocol: TCP
    targetPort: tcp
  selector:
    app.kubernetes.io/component: nsqd
---
# Source: nsq/templates/nsqlookupd-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-nsqlookupd
  labels:
    helm.sh/chart: nsq-1.2.4
    helm.sh/release: my-release
    app.kubernetes.io/name: nsq
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
  - port: 4160
    name: tcp
    targetPort: 4160
  - port: 4161
    name: http
    targetPort: 4161
  selector:
    app.kubernetes.io/component: nsqlookupd
---
# Source: nsq/templates/nsqadmin-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-nsqadmin
  labels:
    helm.sh/chart: nsq-1.2.4
    helm.sh/release: my-release
    app.kubernetes.io/name: nsq
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: nsqadmin
  priorityClassName: 
  template:
    metadata:
      labels:
        app.kubernetes.io/component: nsqadmin
    spec:
      securityContext:
        {}
      containers:
      - name: my-release-nsqadmin
        image: "nsqio/nsq:v1.2.1"
        imagePullPolicy: IfNotPresent
        command:
        - /nsqadmin
        args:
        - --lookupd-http-address=my-release-nsqlookupd-0.my-release-nsqlookupd:4161
        - --lookupd-http-address=my-release-nsqlookupd-1.my-release-nsqlookupd:4161
        - --lookupd-http-address=my-release-nsqlookupd-2.my-release-nsqlookupd:4161
        
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 4171
          name: http
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
            {}
      serviceAccountName:
---
# Source: nsq/templates/nsqd-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-nsqd
  labels:
    helm.sh/chart: nsq-1.2.4
    helm.sh/release: my-release
    app.kubernetes.io/name: nsq
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  podManagementPolicy: Parallel
  serviceName: "my-release-nsqd-headless"
  selector:
    matchLabels:
      app.kubernetes.io/component: nsqd
  priorityClassName: 
  template:
    metadata:
      labels:
        app.kubernetes.io/component: nsqd
    spec:
      securityContext:
        {}
      containers:
      - name: my-release-nsqd
        image: "nsqio/nsq:v1.2.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        command:
        - /nsqd
        args:
        - --broadcast-address=$(POD_IP)
        - --lookupd-tcp-address=my-release-nsqlookupd-0.my-release-nsqlookupd:4160
        - --lookupd-tcp-address=my-release-nsqlookupd-1.my-release-nsqlookupd:4160
        - --lookupd-tcp-address=my-release-nsqlookupd-2.my-release-nsqlookupd:4160
        - -data-path=/data
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 4150
          name: tcp
        - containerPort: 4151
          name: http
        readinessProbe:
          httpGet:
            path: /ping
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /ping
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 5
        resources:
            {}
        volumeMounts:
        - name: data
          mountPath: /data
      serviceAccountName: 
      terminationGracePeriodSeconds: 5
      volumes:
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "1Gi"
      storageClassName: ""
---
# Source: nsq/templates/nsqlookupd-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-nsqlookupd
  labels:
    helm.sh/chart: nsq-1.2.4
    helm.sh/release: my-release
    app.kubernetes.io/name: nsq
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  podManagementPolicy: Parallel
  serviceName: my-release-nsqlookupd
  selector:
    matchLabels:
      app.kubernetes.io/component: nsqlookupd
  priorityClassName: 
  template:
    metadata:
      labels:
        app.kubernetes.io/component: nsqlookupd
    spec:
      securityContext:
        {}
      containers:
      - name: my-release-nsqlookupd
        image: "nsqio/nsq:v1.2.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        command:
        - /nsqlookupd
        args:
        - --broadcast-address=$(POD_IP)
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 4160
          name: tcp
        - containerPort: 4161
          name: http
        readinessProbe:
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 5
        resources:
            {}
      serviceAccountName:
