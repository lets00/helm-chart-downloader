---
# Source: backup-repository-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
    name: my-release-backup-repository-server
    labels:
        helm.sh/chart: backup-repository-server-v4.1.0-rc1
        app.kubernetes.io/name: backup-repository-server
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "v4.1.0-rc1"
        app.kubernetes.io/managed-by: Helm
---
# Source: backup-repository-server/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
    name: backup-repository-secret-env
data:
    BR_DB_HOSTNAME: "cG9zdGdyZXNxbC5kYi5zdmMuY2x1c3Rlci5sb2NhbA=="
    BR_DB_NAME: "YmFja3VwLXJlcG9zaXRvcnk="
    BR_DB_PASSWORD: "cG9zdGdyZXM="
    BR_DB_PORT: "NTQzMg=="
    BR_DB_USERNAME: "cG9zdGdyZXM="
    BR_JWT_SECRET_KEY: "Y2hhbmdlbWUtaW1wb3J0YW50IQ=="



# changeme-important!
---
# Source: backup-repository-server/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: "CustomResourceDefinition"
metadata:
    name: "backupcollections.backups.riotkit.org"
    annotations:
        helm.sh/resource-policy: keep
        argocd.argoproj.io/sync-options: Prune=false
spec:
    group: "backups.riotkit.org"
    scope: "Namespaced"
    names:
        plural: "backupcollections"
        singular: "backupcollection"
        kind: "BackupCollection"
        shortNames:
            - "brcollections"
            - "brc"
        categories:
            - "backuprepository"
    versions:
        - name: v1alpha1
          served: true
          storage: true

          schema:
              openAPIV3Schema:
                  type: object
                  required: ["spec"]
                  properties:
                      spec:
                          type: object
                          required: ["description", "filenameTemplate", "maxBackupsCount", "maxOneVersionSize", "maxCollectionSize", "strategyName", "strategySpec"]
                          properties:
                              description:
                                  type: string
                              filenameTemplate:
                                  type: string
                              maxBackupsCount:
                                  type: integer
                              maxOneVersionSize:
                                  type: string
                                  pattern: '([0-9]+)(B|K|M|G|T)'
                              maxCollectionSize:
                                  type: string
                                  pattern: '([0-9]+)(B|K|M|G|T)'
                              windows:
                                  type: array
                                  items:
                                      type: object
                                      properties:
                                          from:
                                              type: string
                                          duration:
                                              type: string
                                              pattern: '([0-9]+)(m|h)'
                              strategyName:
                                  type: string
                                  enum: ["fifo", "fifo-plus-older"]
                              strategySpec:
                                  type: object
                                  properties:
                                      keepLastOlderNotMoreThan:
                                          type: string
                                      maxOlderCopies:
                                          type: integer
                              healthSecretRef:
                                  type: object
                                  required: ["name", "entry"]
                                  properties:
                                      name:
                                          type: string
                                      entry:
                                          type: string
                              accessControl:
                                  type: array
                                  items:
                                      type: object
                                      properties:
                                          userName:
                                              type: string
                                          roles:
                                              type: array
                                              items:
                                                  type: string
                                                  enum: ["collectionManager", "backupUploader", "backupDownloader", "uploadsAnytime"]


          additionalPrinterColumns:
            - name: "Strategy"
              type: string
              jsonPath: .spec.strategyName

            - name: "Filename template"
              type: string
              jsonPath: .spec.filenameTemplate

            - name: "Max backups count"
              type: string
              jsonPath: .spec.maxBackupsCount

            - name: "Max collection size"
              type: string
              jsonPath: .spec.maxCollectionSize
---
# Source: backup-repository-server/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: "CustomResourceDefinition"
metadata:
    name: "backupusers.backups.riotkit.org"
    annotations:
        helm.sh/resource-policy: keep
        argocd.argoproj.io/sync-options: Prune=false
spec:
    group: "backups.riotkit.org"
    scope: "Namespaced"
    names:
        plural: "backupusers"
        singular: "backupuser"
        kind: "BackupUser"
        shortNames:
            - "brusers"
            - "bru"
        categories:
            - "backuprepository"
    versions:
        - name: v1alpha1
          served: true
          storage: true

          schema:
              openAPIV3Schema:
                  type: object
                  required: ["spec"]
                  properties:
                      spec:
                          type: object
                          required: ["email", "roles"]
                          properties:
                              email:
                                  type: string
                              deactivated:
                                  type: boolean
                              organization:
                                  type: string
                              about:
                                  type: string
                              password:
                                  type: string
                              passwordFromRef:
                                  type: object
                                  required: ["name", "entry"]
                                  properties:
                                      name:
                                          type: string
                                      entry:
                                          type: string
                              accessKeys:
                                  type: array
                                  items:
                                      type: object
                                      properties:
                                          name:
                                              type: string
                                          objects:
                                              type: array
                                              items:
                                                  type: object
                                                  required: ["name", "type"]
                                                  properties:
                                                      name:
                                                          type: string
                                                      type:
                                                          type: string
                                                      roles:
                                                          type: array
                                                          items:
                                                              type: string
                                          password:
                                              type: string
                                          passwordFromRef:
                                              type: object
                                              required: ["name", "entry"]
                                              properties:
                                                  name:
                                                      type: string
                                                  entry:
                                                      type: string

                              restrictByIP:
                                  type: array
                                  items:
                                      type: string
                              roles:
                                  type: array
                                  items:
                                      type: string
                                      enum: ["collectionManager", "usersManager", "systemAdmin", "backupUploader", "backupDownloader", "uploadsAnytime"]


          additionalPrinterColumns:
              - name: Email
                type: string
                jsonPath: .spec.email

              - name: Organization
                type: string
                jsonPath: .spec.organization

              - name: Is deactivated
                type: boolean
                jsonPath: .spec.deactivated
---
# Source: backup-repository-server/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
    name: my-release-backup-repository-server-instance-admin
rules:
    - apiGroups:
          - "backups.riotkit.org"
      resources:
          - backupcollections
          - backupusers
      verbs: ["*"]
    - apiGroups: ["*"]
      resources:
          - secrets
      verbs:
          - get
          - list
---
# Source: backup-repository-server/templates/role.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
    name: my-release-backup-repository-server-instance-admin
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: my-release-backup-repository-server-instance-admin
subjects:
    - kind: ServiceAccount
      name: my-release-backup-repository-server
---
# Source: backup-repository-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
    name: my-release-backup-repository-server
    labels:
        helm.sh/chart: backup-repository-server-v4.1.0-rc1
        app.kubernetes.io/name: backup-repository-server
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "v4.1.0-rc1"
        app.kubernetes.io/managed-by: Helm
spec:
    type: ClusterIP
    ports:
        - port: 8080
          targetPort: http
          protocol: TCP
          name: http
    selector:
        app.kubernetes.io/name: backup-repository-server
        app.kubernetes.io/instance: my-release
---
# Source: backup-repository-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
    name: my-release-backup-repository-server
    labels:
        helm.sh/chart: backup-repository-server-v4.1.0-rc1
        app.kubernetes.io/name: backup-repository-server
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "v4.1.0-rc1"
        app.kubernetes.io/managed-by: Helm
spec:
    replicas: 1
    selector:
        matchLabels:
          app.kubernetes.io/name: backup-repository-server
          app.kubernetes.io/instance: my-release
    template:
        metadata:
            labels:
                app.kubernetes.io/name: backup-repository-server
                app.kubernetes.io/instance: my-release
        spec:
            # todo: implement termination procedure, so the pending upload would block from termination
            #       and terminating container will block from taking new uploads
            terminationGracePeriodSeconds: 300
            serviceAccountName: my-release-backup-repository-server
            containers:
                - name: backup-repository-server
                  securityContext:
                    capabilities:
                      drop:
                      - ALL
                    readOnlyRootFilesystem: true
                    runAsNonRoot: true
                  image: "ghcr.io/riotkit-org/backup-repository:v4.1.0-rc1"
                  imagePullPolicy: Always

                  args:
                      - "--health-check-key=changeme"
                      - "--provider=kubernetes"
                      - "--namespace=default"
                  env:
                      - name: BR_LOG_LEVEL
                        value: "info"

                  envFrom:
                      - secretRef:
                            name: backup-repository-secret-env
                            optional: false

                  ports:
                      - name: http
                        containerPort: 8080
                        protocol: TCP
                  livenessProbe:
                      failureThreshold: 1
                      httpGet:
                          path: /health
                          port: http
                          httpHeaders:
                              - name: Authorization
                                value: "changeme"
                  readinessProbe:
                      httpGet:
                          path: /ready
                          port: http
                          httpHeaders:
                              - name: Authorization
                                value: "changeme"
                  resources:
                    limits:
                      cpu: 2
                      memory: 1Gi
                    requests:
                      cpu: 50m
                      memory: 128Mi
---
# Source: backup-repository-server/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-backup-repository-server-test-connection"
  labels:
    helm.sh/chart: backup-repository-server-v4.1.0-rc1
    app.kubernetes.io/name: backup-repository-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v4.1.0-rc1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-backup-repository-server:8080']
  restartPolicy: Never
