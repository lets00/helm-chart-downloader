---
# Source: kibana/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.14.1
    helm.sh/chart: kibana-11.2.6
    app.kubernetes.io/component: server
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: kibana
      app.kubernetes.io/component: server
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 5601
---
# Source: kibana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.14.1
    helm.sh/chart: kibana-11.2.6
automountServiceAccountToken: false
---
# Source: kibana/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.14.1
    helm.sh/chart: kibana-11.2.6
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kibana
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kibana
    app.kubernetes.io/version: 8.14.1
    helm.sh/chart: kibana-11.2.6
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 5601
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: kibana
