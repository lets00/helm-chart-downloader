---
# Source: nginx-static/templates/nginx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nginx-static-config
  labels:
    helm.sh/chart: nginx-static-0.1.4
    app.kubernetes.io/name: nginx-static
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.23.0"
    app.kubernetes.io/managed-by: Helm
data:
  default.conf: |
    server {
      listen       80;
      listen  [::]:80;
      server_name  localhost;

      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }

      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }

      # block git and htaccess files
      location ~ /\.(git|ht) {
          deny all;
      }
    }
---
# Source: nginx-static/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-nginx-static
  labels:
    helm.sh/chart: nginx-static-0.1.4
    app.kubernetes.io/name: nginx-static
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.23.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: nginx-static
    app.kubernetes.io/instance: my-release
---
# Source: nginx-static/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-nginx-static
  labels:
    helm.sh/chart: nginx-static-0.1.4
    app.kubernetes.io/name: nginx-static
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.23.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-static
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: nginx
      labels:
        app.kubernetes.io/name: nginx-static
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      initContainers:
      containers:
        - name: nginx
          securityContext:
            {}
          image: "nginx:1.23.0@sha256:3536d368b898eef291fb1f6d184a95f8bc1a6f863c48457395aab859fda354d1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 3
            successThreshold: 1
            periodSeconds: 10
            timeoutSeconds: 1
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
          resources:
            {}
      volumes:
        - name: nginx-conf
          configMap:
            name: my-release-nginx-static-config
---
# Source: nginx-static/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-nginx-static-test-connection"
  labels:
    helm.sh/chart: nginx-static-0.1.4
    app.kubernetes.io/name: nginx-static
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.23.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-nginx-static:80']
  restartPolicy: Never
