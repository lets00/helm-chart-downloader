---
# Source: acceleration/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-acceleration
  labels:
    helm.sh/chart: acceleration-0.1.0
    app.kubernetes.io/name: acceleration
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.13"
    app.kubernetes.io/managed-by: Helm
---
# Source: acceleration/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-acceleration
  labels:
    helm.sh/chart: acceleration-0.1.0
    app.kubernetes.io/name: acceleration
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.13"
    app.kubernetes.io/managed-by: Helm
stringData:
  config.yaml: |-
    converter:
      driver:
        config:
          with_referrer: true
          work_dir: /tmp
        type: nydus
      harbor_annotation: true
      platforms: null
      rules:
      - tag_suffix: -nydus
      - cache_tag: nydus-cache
      worker: 5
    metric:
      enabled: true
    provider:
      cache_size: 200
      cache_version: v1
      gcpolicy:
        threshold: 1000MB
      source:
        harbor.company.com:
          insecure: false
          webhook:
            auth_header: header
        localhost: null
      work_dir: /tmp
    server:
      host: 0.0.0.0
      name: API
      port: 2077
---
# Source: acceleration/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-acceleration
  labels:
    helm.sh/chart: acceleration-0.1.0
    app.kubernetes.io/name: acceleration
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.13"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: acceleration
    app.kubernetes.io/instance: my-release
---
# Source: acceleration/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-acceleration
  labels:
    helm.sh/chart: acceleration-0.1.0
    app.kubernetes.io/name: acceleration
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.13"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: acceleration
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: acceleration
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-acceleration
      securityContext:
        {}
      containers:
        - name: acceleration
          securityContext:
            {}
          image: "goharbor/harbor-acceld:0.2.13"
          imagePullPolicy: IfNotPresent
          args:
            - /etc/acceleration/acceleration.yaml
          ports:
            - name: http
              containerPort: 2077
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /etc/acceleration/acceleration.yaml
              subPath: config.yaml
              readOnly: true
            - name: work-dir
              mountPath: "/tmp"
      volumes:
        - name: work-dir
          emptyDir:
            sizeLimit: 500Mi
        - name: config
          secret:
            secretName: my-release-acceleration
            items:
              - key: config.yaml
                path: config.yaml
