---
# Source: celestia-node/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-celestia-node
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: celestia-node
    app.kubernetes.io/version: 0.13.2
    helm.sh/chart: celestia-node-0.1.6
    app.kubernetes.io/component: crypto
automountServiceAccountToken: true
---
# Source: celestia-node/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-celestia-node
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: celestia-node
    app.kubernetes.io/version: 0.13.2
    helm.sh/chart: celestia-node-0.1.6
    app.kubernetes.io/component: crypto
data:
  config.toml: |
    [Node]
    StartupTimeout = "20s"
    ShutdownTimeout = "20s"

    [Core]
    IP = ""
    RPCPort = "26657"
    GRPCPort = "9090"

    [State]
    KeyringAccName = ""
    KeyringBackend = "test"

    [P2P]
    ListenAddresses = ["/ip4/0.0.0.0/udp/2121/quic-v1/webtransport", "/ip6/::/udp/2121/quic-v1/webtransport", "/ip4/0.0.0.0/udp/2121/quic-v1", "/ip6/::/udp/2121/quic-v1", "/ip4/0.0.0.0/tcp/2121", "/ip6/::/tcp/2121"]
    AnnounceAddresses = []
    NoAnnounceAddresses = ["/ip4/127.0.0.1/udp/2121/quic-v1/webtransport", "/ip4/0.0.0.0/udp/2121/quic-v1/webtransport", "/ip6/::/udp/2121/quic-v1/webtransport", "/ip4/0.0.0.0/udp/2121/quic-v1", "/ip4/127.0.0.1/udp/2121/quic-v1", "/ip6/::/udp/2121/quic-v1", "/ip4/0.0.0.0/tcp/2121", "/ip4/127.0.0.1/tcp/2121", "/ip6/::/tcp/2121"]
    MutualPeers = []
    PeerExchange = false
    RoutingTableRefreshPeriod = "1m0s"
    [P2P.ConnManager]
    Low = 50
    High = 100
    GracePeriod = "1m0s"

    [RPC]
    Address = "0.0.0.0"
    Port = "26658"

    [Gateway]
    Address = "0.0.0.0"
    Port = "26659"
    Enabled = false

    [Share]
    UseShareExchange = true
    [Share.EDSStoreParams]
    GCInterval = "0s"
    RecentBlocksCacheSize = 10
    BlockstoreCacheSize = 128
    [Share.ShrExEDSParams]
    ServerReadTimeout = "5s"
    ServerWriteTimeout = "1m0s"
    HandleRequestTimeout = "1m0s"
    ConcurrencyLimit = 10
    BufferSize = 32768
    [Share.ShrExNDParams]
    ServerReadTimeout = "5s"
    ServerWriteTimeout = "1m0s"
    HandleRequestTimeout = "1m0s"
    ConcurrencyLimit = 10
    [Share.PeerManagerParams]
    PoolValidationTimeout = "2m0s"
    PeerCooldown = "3s"
    GcInterval = "30s"
    EnableBlackListing = false
    [Share.LightAvailability]
    SampleAmount = 16
    [Share.Discovery]
    PeersLimit = 5
    AdvertiseInterval = "1h0m0s"

    [Header]
    TrustedHash = ""
    TrustedPeers = []
    [Header.Store]
    StoreCacheSize = 512
    IndexCacheSize = 2048
    WriteBatchSize = 512
    [Header.Syncer]
    TrustingPeriod = "336h0m0s"
    [Header.Server]
    WriteDeadline = "8s"
    ReadDeadline = "1m0s"
    RangeRequestTimeout = "10s"
    [Header.Client]
    MaxHeadersPerRangeRequest = 64
    RangeRequestTimeout = "8s"

    [DASer]
    SamplingRange = 100
    ConcurrencyLimit = 16
    BackgroundStoreInterval = "10m0s"
    SampleFrom = 1
    SampleTimeout = "2m40s"
---
# Source: celestia-node/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-celestia-node-init
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: celestia-node
    app.kubernetes.io/version: 0.13.2
    helm.sh/chart: celestia-node-0.1.6
    app.kubernetes.io/component: crypto
data:
  init-key: |
    #!/bin/sh
    set -e
    set -x
    celestia light init --node.config=/etc/config.toml --p2p.network=mocha
    (find /home/celestia/.celestia-*/keys -type f | xargs chmod 0600) || exit 0
---
# Source: celestia-node/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-celestia-node
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: celestia-node
    app.kubernetes.io/version: 0.13.2
    helm.sh/chart: celestia-node-0.1.6
    app.kubernetes.io/component: crypto
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "100Gi"
---
# Source: celestia-node/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-celestia-node
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: celestia-node
    app.kubernetes.io/version: 0.13.2
    helm.sh/chart: celestia-node-0.1.6
    app.kubernetes.io/component: crypto
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-celestia-node
subjects:
  - kind: ServiceAccount
    name: my-release-celestia-node
    namespace: "default"
---
# Source: celestia-node/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-celestia-node
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: celestia-node
    app.kubernetes.io/version: 0.13.2
    helm.sh/chart: celestia-node-0.1.6
    app.kubernetes.io/component: crypto
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    
    - name: p2p
      port: 2121
      targetPort: 2121
    - name: rpc
      port: 26658
      targetPort: 26658
      nodePort: null
    - name: p2pudp
      port: 2121
      targetPort: 2121
      protocol: UDP
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: celestia-node
    app.kubernetes.io/component: crypto
---
# Source: celestia-node/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-celestia-node
  namespace: "default"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: celestia-node
    app.kubernetes.io/version: 0.13.2
    helm.sh/chart: celestia-node-0.1.6
    app.kubernetes.io/component: crypto
spec:
  replicas: 1
  podManagementPolicy: "OrderedReady"
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: celestia-node
      app.kubernetes.io/component: crypto
  serviceName: my-release-celestia-node
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: celestia-node
        app.kubernetes.io/version: 0.13.2
        helm.sh/chart: celestia-node-0.1.6
        app.kubernetes.io/component: crypto
    spec:
      hostNetwork: false
      serviceAccountName: my-release-celestia-node
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: celestia-node
                    app.kubernetes.io/component: crypto
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 10001
      initContainers:
        - name: init-key
          image: ghcr.io/celestiaorg/celestia-node:v0.13.2
          imagePullPolicy: "IfNotPresent"
          command:
            - bash
            - "/usr/bin/init-key"
          securityContext:
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 10001
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: celestia-config-init
              mountPath: /usr/bin/init-key
              subPath: init-key
            - name: celestia-config
              mountPath: /etc/config.toml
              subPath: config.toml
            - name: celestia-data
              mountPath: /home/celestia
      containers:
        - name: celestia
          image: ghcr.io/celestiaorg/celestia-node:v0.13.2
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 10001
          command:
            - sleep
          args:
            - infinity
          env:
            - name: NODE_TYPE
              value: light
            - name: P2P_NETWORK
              value: mocha
          envFrom:
          resources:
            limits: {}
            requests: {}
          ports:
            - name: p2pudp
              containerPort: 2121
              protocol: UDP
            - name: "p2p"
              containerPort: 2121
              protocol: TCP
            - name: "rpc"
              containerPort: 26658
              protocol: TCP
          volumeMounts:
            - name: celestia-data
              mountPath: /home/celestia
            - name: celestia-config
              mountPath: /etc/config.toml
              subPath: config.toml
      volumes:
        - name: celestia-data
          persistentVolumeClaim:
            claimName: my-release-celestia-node
        - name: celestia-config
          configMap:
            name: my-release-celestia-node
        - name: celestia-config-init
          configMap:
            name: my-release-celestia-node-init
