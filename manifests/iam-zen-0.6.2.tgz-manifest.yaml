---
# Source: iam-zen/charts/elasticsearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: "elasticsearch-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "elasticsearch-master"
---
# Source: iam-zen/charts/microservice/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-iam-zen
  labels: 
    
    app.kubernetes.io/version: "0.6.1"
    helm.sh/chart: microservice-0.6.0
    
    
    app.kubernetes.io/name: iam-zen
    app.kubernetes.io/instance: iam-zen-v1
    
    app.cryptexlabs.com/apiVersion: v1
    
    app.kubernetes.io/managed-by: Helm
---
# Source: iam-zen/charts/microservice/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-iam-zen-traefik-configurator
  labels: 
    
    app.kubernetes.io/version: "0.6.1"
    helm.sh/chart: microservice-0.6.0
    
    
    app.kubernetes.io/name: iam-zen
    app.kubernetes.io/instance: iam-zen-v1
    
    app.cryptexlabs.com/apiVersion: v1
    
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: iam-zen/charts/microservice/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-iam-zen-traefik-configurator
subjects:
  - kind: ServiceAccount
    name: my-release-iam-zen-traefik-configurator
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: ""
---
# Source: iam-zen/charts/elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    release: "my-release"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: iam-zen/charts/elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "elasticsearch-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: iam-zen/charts/microservice/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-iam-zen-dashboard
  labels: 
    
    app.kubernetes.io/version: "0.6.1"
    helm.sh/chart: microservice-0.6.0
    
    
    app.kubernetes.io/name: iam-zen
    app.kubernetes.io/instance: iam-zen-v1
    
    app.cryptexlabs.com/apiVersion: v1
    
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector: 
    app.kubernetes.io/name: iam-zen
    app.kubernetes.io/instance: iam-zen-v1
    
    app.cryptexlabs.com/apiVersion: v1
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: http
  ports:
    - port: 80
      name: "http"
      targetPort: "http"
      protocol: TCP
---
# Source: iam-zen/charts/microservice/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-iam-zen-rest
  labels: 
    
    app.kubernetes.io/version: "0.6.1"
    helm.sh/chart: microservice-0.6.0
    
    
    app.kubernetes.io/name: iam-zen
    app.kubernetes.io/instance: iam-zen-v1
    
    app.cryptexlabs.com/apiVersion: v1
    
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector: 
    app.kubernetes.io/name: iam-zen
    app.kubernetes.io/instance: iam-zen-v1
    
    app.cryptexlabs.com/apiVersion: v1
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: http
  ports:
    - port: 80
      name: "http"
      targetPort: "http"
      protocol: TCP
---
# Source: iam-zen/charts/microservice/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-iam-zen-http
  labels: 
    
    app.kubernetes.io/version: "0.6.1"
    helm.sh/chart: microservice-0.6.0
    
    
    app.kubernetes.io/name: iam-zen
    app.kubernetes.io/instance: iam-zen-v1
    
    app.cryptexlabs.com/apiVersion: v1
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: http
spec:
  selector:
    matchLabels: 
      app.kubernetes.io/name: iam-zen
      app.kubernetes.io/instance: iam-zen-v1
      
      app.cryptexlabs.com/apiVersion: v1
      
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/component: http
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels: 
        
        app.kubernetes.io/version: "0.6.1"
        helm.sh/chart: microservice-0.6.0
        
        
        app.kubernetes.io/name: iam-zen
        app.kubernetes.io/instance: iam-zen-v1
        
        app.cryptexlabs.com/apiVersion: v1
        
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: http
    spec:
    
      
      
      
      
      
      
      containers:
      
        
        
        
        - name: microservice
          
          image: "docker.io/cryptexlabs/iam-zen:0.6.1"
          command:
            - yarn
            - start:prod
          imagePullPolicy: IfNotPresent
          
          
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 150m
              memory: 512Mi
          
          
          ports:
            - name: "http"
              containerPort: 80
          
            
            
            
            
            
            
            
            
            
        
          
          
          startupProbe:
                    failureThreshold: 10
                    httpGet:
                      path: /healthz
                      port: http
                    initialDelaySeconds: 10
                    periodSeconds: 3
          readinessProbe:
                    failureThreshold: 3
                    httpGet:
                      path: /healthz
                      port: http
                    initialDelaySeconds: 10
                    periodSeconds: 10
          livenessProbe:
                    failureThreshold: 1
                    httpGet:
                      path: /healthz
                      port: http
                    initialDelaySeconds: 10
                    periodSeconds: 10
          
          
        
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: APP_VERSION
              value: "0.6.1"
            - name: API_VERSION
              value: "v1"
            - name: APP_PREFIX
              value: "iam/api"
            - name: AUTHENTICATION_SERVICE_TYPE
              value: "authf"
            - name: AUTHF_ADMIN_PASSWORD
              value: "password"
            - name: AUTHF_ADMIN_USERNAME
              value: "admin"
            - name: AUTHF_REDIRECT_URL
              value: "http://some-domain.com:3002"
            - name: AUTHF_URL
              value: "http://authf-rest.authf.svc.cluster.local:80"
            - name: AUTOLOAD_IAM_ZEN_SERVER_CONFIG
              value: "false"
            - name: DATABASE_TYPE
              value: "elasticsearch"
            - name: DOCS_PATH
              value: "/iam-zen"
            - name: DOCS_PREFIX
              value: "docs"
            - name: ELASTICSEARCH_URL
              value: "http://elasticsearch-master:9200"
            - name: HTTP_PORT
              value: "80"
            - name: IAM_ZEN_SERVER_CONFIG_PATH
              value: "/var/app/config/config/server-config.yaml"
            - name: JWT_ALGORITHM
              value: "RS256"
            - name: JWT_PRIVATE_KEY_PATH
              value: "/var/app/config/secrets/jwt-rs256.key"
            - name: JWT_PUBLIC_KEY_PATH
              value: "/var/app/config/secrets/jwt-rs256.pub"
            - name: LOG_LEVELS
              value: "info,error"
            - name: UI_PREFIX
              value: "/iam"
            
          volumeMounts:
            
            
            - name: server-configs
              mountPath: /var/app/config/config
        
      
      volumes:
      
        
        
        
        
        - name: server-configs
          configMap:
            name: my-release-iam-zen-server-configs
---
# Source: iam-zen/charts/microservice/templates/hpa.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: my-release-iam-zen-http
  labels: 
    
    app.kubernetes.io/version: "0.6.1"
    helm.sh/chart: microservice-0.6.0
    
    
    app.kubernetes.io/name: iam-zen
    app.kubernetes.io/instance: iam-zen-v1
    
    app.cryptexlabs.com/apiVersion: v1
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: http
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: my-release-iam-zen-http
  maxReplicas: 20
  minReplicas: 1 
  metrics: 
    - resource:
        name: cpu
        target:
          averageUtilization: 50
          type: Utilization
      type: Resource
---
# Source: iam-zen/charts/elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "7"
spec:
  serviceName: elasticsearch-master-headless
  selector:
    matchLabels:
      app: "elasticsearch-master"
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-master
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
  template:
    metadata:
      name: "elasticsearch-master"
      labels:
        release: "my-release"
        chart: "elasticsearch"
        app: "elasticsearch-master"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "elasticsearch-master"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
      enableServiceLinks: true
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.14.0"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          {}

      containers:
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.14.0"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=1s" )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Elasticsearch Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                  local path="${1}"
                  local args="${2}"
                  set -- -XGET -s

                  if [ "$args" != "" ]; then
                    set -- "$@" $args
                  fi

                  if [ -n "${ELASTIC_USERNAME}" ] && [ -n "${ELASTIC_PASSWORD}" ]; then
                    set -- "$@" -u "${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"
                  fi

                  curl --output /dev/null -k "$@" "http://127.0.0.1:9200${path}"
                }

                if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  HTTP_CODE=$(http "/" "-w %{http_code}")
                  RC=$?
                  if [[ ${RC} -ne 0 ]]; then
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} http://127.0.0.1:9200/ failed with RC ${RC}"
                    exit ${RC}
                  fi
                  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
                  if [[ ${HTTP_CODE} == "200" ]]; then
                    exit 0
                  elif [[ ${HTTP_CODE} == "503" && "7" == "6" ]]; then
                    exit 0
                  else
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} http://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
                    exit 1
                  fi

                else
                  echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" "--fail" ; then
                    touch ${START_FILE}
                    exit 0
                  else
                    echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                    exit 1
                  fi
                fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,"
          - name: discovery.seed_hosts
            value: "elasticsearch-master-headless"
          - name: cluster.name
            value: "elasticsearch"
          - name: network.host
            value: "0.0.0.0"
          - name: node.data
            value: "true"
          - name: node.ingest
            value: "true"
          - name: node.master
            value: "true"
          - name: node.ml
            value: "true"
          - name: node.remote_cluster_client
            value: "true"
        volumeMounts:
          - name: "elasticsearch-master"
            mountPath: /usr/share/elasticsearch/data
---
# Source: iam-zen/charts/microservice/templates/service.yaml
---
---
# Source: iam-zen/templates/server-config.configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-iam-zen-server-configs
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
data:
  server-config.yaml: | 
    apps:
    - authentications:
      - data:
          apiKey: daf7cb4d-a463-43a2-b5ee-1ecf65bb26e6
          secret: 12d2d44b1e904fd583c43a5b5f9df3357a8b7992
        type: api
      description: Automatic widgetinator
      id: 1a2ec631-208d-4157-a741-3be6334cae6b
      name: Widget
      roles:
      - db1c7afb-0e59-496f-90e4-07c96757dd8c
    groups:
    - id: 613b6c12-d9c1-47cf-b401-0b5b03ef33d0
      name: default
      policies:
      - ac5c44eb-501d-4b53-bcca-9aac58b438de
    - id: cf24881f-0983-40e2-a6d1-2e560863e89e
      name: admin
      policies:
      - ec570e6e-caaf-43f6-ac6b-cea8b7949124
    newUser:
      groups:
      - 613b6c12-d9c1-47cf-b401-0b5b03ef33d0
    permissions:
    - description: User can change their authentication details and username
      id: ec7d1b2f-a23c-4b8a-86fc-1a9276c4ff88
      name: Self managed user
      value: iam-zen:::user:self:update
    - description: User can delete themselves
      id: ae37255e-199b-4137-bece-023266d904d6
      name: Self deleting users
      value: iam-zen:::user:self:delete
    - description: Admin user can do anything
      id: 7da13f60-8536-4795-ade3-373aea49d1f7
      name: IAM Zen Admin user
      value: iam-zen:any:any:any
    policies:
    - description: The default policy for all users
      id: ac5c44eb-501d-4b53-bcca-9aac58b438de
      name: default
      permissions:
      - ec7d1b2f-a23c-4b8a-86fc-1a9276c4ff88
      - ae37255e-199b-4137-bece-023266d904d6
    - description: Administration policy
      id: ec570e6e-caaf-43f6-ac6b-cea8b7949124
      name: admin
      permissions:
      - 7da13f60-8536-4795-ade3-373aea49d1f7
    roles:
    - description: Role for widget app
      id: db1c7afb-0e59-496f-90e4-07c96757dd8c
      name: Widget Role
      policies:
      - ec570e6e-caaf-43f6-ac6b-cea8b7949124
    token:
      expirationPolicy:
        access:
          length: 900
        refresh:
          length: 2592000
    users:
    - authentication:
        data:
          password: password
          username: admin
        type: basic
      groups:
      - cf24881f-0983-40e2-a6d1-2e560863e89e
      id: 278c6ec0-777c-43ad-83db-18b7cdfe2314
      username: admin
---
# Source: iam-zen/charts/elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-qensv-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  containers:
  - name: "my-release-qmhni-test"
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.14.0"
    imagePullPolicy: "IfNotPresent"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail 'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
  restartPolicy: Never
---
# Source: iam-zen/charts/microservice/templates/pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: my-release-iam-zen-config-loader
  labels: 
    
    app.kubernetes.io/version: "0.6.1"
    helm.sh/chart: microservice-0.6.0
    
    
    app.kubernetes.io/name: iam-zen
    app.kubernetes.io/instance: iam-zen-v1
    
    app.cryptexlabs.com/apiVersion: v1
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: config-loader
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  
  
  
  
  
  
  
  restartPolicy: Never
  
  containers:
  
    
    
    
    - name: microservice
      
      image: "docker.io/cryptexlabs/iam-zen:0.6.1"
      command:
        - yarn
        - start:load-config
      imagePullPolicy: IfNotPresent
      
      
      
        
        
        
        
        
        
        
        
        
    
      
    
      env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: APP_VERSION
          value: "0.6.1"
        - name: API_VERSION
          value: "v1"
        - name: APP_PREFIX
          value: "iam/api"
        - name: AUTHENTICATION_SERVICE_TYPE
          value: "authf"
        - name: AUTHF_ADMIN_PASSWORD
          value: "password"
        - name: AUTHF_ADMIN_USERNAME
          value: "admin"
        - name: AUTHF_REDIRECT_URL
          value: "http://some-domain.com:3002"
        - name: AUTHF_URL
          value: "http://authf-rest.authf.svc.cluster.local:80"
        - name: AUTOLOAD_IAM_ZEN_SERVER_CONFIG
          value: "false"
        - name: DATABASE_TYPE
          value: "elasticsearch"
        - name: DOCS_PATH
          value: "/iam-zen"
        - name: DOCS_PREFIX
          value: "docs"
        - name: ELASTICSEARCH_URL
          value: "http://elasticsearch-master:9200"
        - name: HTTP_PORT
          value: "80"
        - name: IAM_ZEN_SERVER_CONFIG_PATH
          value: "/var/app/config/config/server-config.yaml"
        - name: JWT_ALGORITHM
          value: "RS256"
        - name: JWT_PRIVATE_KEY_PATH
          value: "/var/app/config/secrets/jwt-rs256.key"
        - name: JWT_PUBLIC_KEY_PATH
          value: "/var/app/config/secrets/jwt-rs256.pub"
        - name: LOG_LEVELS
          value: "info,error"
        - name: UI_PREFIX
          value: "/iam"
        
        - name: IAM_ZEN_SERVER_CONFIG_HOT_RELOAD
          value: "false"
      volumeMounts:
        
        
        - name: server-configs
          mountPath: /var/app/config/config
    
  
  volumes:
  
    
    
    
    
    - name: server-configs
      configMap:
        name: my-release-iam-zen-server-configs
