---
# Source: gitlab-runner-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-runner-operator-controller-manager
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: gitlab-runner-operator/templates/cm-controller-manager-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-runner-operator-manager-config
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: e47991d1.k8s.alekc.dev
---
# Source: gitlab-runner-operator/templates/rbac/auth_proxy_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitlab-runner-operator-proxy-role
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: gitlab-runner-operator/templates/rbac/manager_cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitlab-runner-operator-manager-role
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - serviceaccounts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - gitlab.k8s.alekc.dev
    resources:
      - runners
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - gitlab.k8s.alekc.dev
    resources:
      - runners/finalizers
    verbs:
      - update
  - apiGroups:
      - gitlab.k8s.alekc.dev
    resources:
      - runners/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
      - roles
    verbs:
      - '*'
---
# Source: gitlab-runner-operator/templates/rbac/metric_reader_cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitlab-runner-operator-metrics-reader
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: gitlab-runner-operator/templates/rbac/runner_editor_role.yaml
# permissions for end users to edit runners.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: runner-editor-role
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - gitlab.k8s.alekc.dev
  resources:
  - runners
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gitlab.k8s.alekc.dev
  resources:
  - runners/status
  verbs:
  - get
---
# Source: gitlab-runner-operator/templates/rbac/runner_viewer_role.yaml
# permissions for end users to view runners.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: runner-viewer-role
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - gitlab.k8s.alekc.dev
  resources:
  - runners
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gitlab.k8s.alekc.dev
  resources:
  - runners/status
  verbs:
  - get
---
# Source: gitlab-runner-operator/templates/rbac/auth_proxy_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab-runner-operator-proxy-rolebinding
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitlab-runner-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: gitlab-runner-operator-controller-manager
  namespace: default
---
# Source: gitlab-runner-operator/templates/rbac/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab-runner-operator-manager-rolebinding
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitlab-runner-operator-manager-role
subjects:
- kind: ServiceAccount
  name: gitlab-runner-operator-controller-manager
  namespace: default
---
# Source: gitlab-runner-operator/templates/rbac/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitlab-runner-operator-leader-election-role
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: gitlab-runner-operator/templates/rbac/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-runner-operator-leader-election-rolebinding
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitlab-runner-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: gitlab-runner-operator-controller-manager
  namespace: default
---
# Source: gitlab-runner-operator/templates/svc-metric-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-runner-operator-controller-manager-metrics-service
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
      app.kubernetes.io/name: gitlab-runner-operator
      app.kubernetes.io/instance: my-release
---
# Source: gitlab-runner-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-runner-operator
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gitlab-runner-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gitlab-runner-operator
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: gitlab-runner-operator-controller-manager
      securityContext:
        runAsNonRoot: true
      volumes:
        - name: gitlab-runner-webhook-cert
          secret:
            secretName: gitlab-runner-operator-webhook-tls
            optional: false
      containers:
        - name: operator
          args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          securityContext:
            allowPrivilegeEscalation: false
          image: "ghcr.io/alekc/gitlab-runner-operator:v1.3.0"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs/
              name: gitlab-runner-webhook-cert
              readOnly: true
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
      terminationGracePeriodSeconds: 10
---
# Source: gitlab-runner-operator/templates/webhooks/patch-job/job-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name:  gitlab-runner-operator-patch
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-10"
  labels:
    app: gitlab-runner-operator-patch
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: gitlab-runner-operator/templates/webhooks/patch-job/job-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name:  gitlab-runner-operator-patch
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-9"
  labels:
    app: gitlab-runner-operator-mutation
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - update
      - create
  - apiGroups: ['policy']
    resources: ['podsecuritypolicies']
    verbs:     ['use']
    resourceNames:
      - gitlab-runner-operator
---
# Source: gitlab-runner-operator/templates/webhooks/patch-job/job-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name:  gitlab-runner-operator-patch
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-5"
  labels:
    app: gitlab-runner-operator-patch
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitlab-runner-operator-patch
subjects:
  - kind: ServiceAccount
    name: gitlab-runner-operator-patch
    namespace: default
---
# Source: gitlab-runner-operator/templates/webhooks/svc-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: gitlab-runner-operator
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
spec:
  ports:
    - port: 443
      targetPort: 9443
  selector:
      app.kubernetes.io/name: gitlab-runner-operator
      app.kubernetes.io/instance: my-release
---
# Source: gitlab-runner-operator/templates/webhooks/patch-job/job-create-secret.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name:  gitlab-runner-operator-create-secret
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade

  labels:
    app: gitlab-runner-operator-patch
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  template:
    metadata:
      name:  gitlab-runner-operator-ca-patch
      labels:
        app: gitlab-runner-operator-ca-patch
        helm.sh/chart: gitlab-runner-operator-1.6.0
        app.kubernetes.io/name: gitlab-runner-operator
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "v1.3.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: create
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1
          imagePullPolicy: IfNotPresent
          args:
            - create
            - --host=gitlab-runner-operator,gitlab-runner-operator.default.svc
            - --namespace=default
            - --cert-name=tls.crt
            - --key-name=tls.key
            - --secret-name=gitlab-runner-operator-webhook-tls
          resources:
            requests:
              cpu: "0.3"
              memory: 64Mi
      restartPolicy: OnFailure
      serviceAccountName: gitlab-runner-operator-patch
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
---
# Source: gitlab-runner-operator/templates/webhooks/patch-job/job-patch.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name:  gitlab-runner-operator-patch
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade

  labels:
    app: gitlab-runner-operator-patch
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  template:
    metadata:
      name:  gitlab-runner-operator-ca-patch
      labels:
        app: gitlab-runner-operator-ca-patch
        helm.sh/chart: gitlab-runner-operator-1.6.0
        app.kubernetes.io/name: gitlab-runner-operator
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "v1.3.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: patch
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1
          imagePullPolicy: IfNotPresent
          args:
            - patch
            - --log-level=debug
            - --webhook-name=gitlab-runner-operator
            - --namespace=default
            - --secret-name=gitlab-runner-operator-webhook-tls
            - --patch-mutating=true
            - --patch-validating=true
            - --patch-failure-policy=Fail
          resources:
            requests:
              cpu: "0.3"
              memory: 64Mi
      restartPolicy: OnFailure
      serviceAccountName: gitlab-runner-operator-patch
      securityContext:
        runAsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
---
# Source: gitlab-runner-operator/templates/webhooks/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name:  gitlab-runner-operator
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: gitlab-runner-operator
        namespace: default
        path: /mutate-gitlab-k8s-alekc-dev-v1beta1-runner
    failurePolicy: Fail
    name: mrunner.kb.io
    rules:
      - apiGroups:
          - gitlab.k8s.alekc.dev
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - runners
    sideEffects: None
---
# Source: gitlab-runner-operator/templates/webhooks/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: gitlab-runner-operator
  labels:
    helm.sh/chart: gitlab-runner-operator-1.6.0
    app.kubernetes.io/name: gitlab-runner-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      service:
        name: gitlab-runner-operator
        namespace: default
        path: /validate-gitlab-k8s-alekc-dev-v1beta1-runner
    failurePolicy: Fail
    name: vrunner.kb.io
    rules:
      - apiGroups:
          - gitlab.k8s.alekc.dev
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - runners
    sideEffects: None
