---
# Source: jaeger/templates/agent-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-jaeger-agent
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: agent
---
# Source: jaeger/templates/cassandra-schema-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-jaeger-cassandra-schema
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cassandra-schema
---
# Source: jaeger/templates/collector-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-jaeger-collector
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: collector
---
# Source: jaeger/templates/query-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-jaeger-query
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query
---
# Source: jaeger/templates/cassandra-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-jaeger-cassandra
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  password: "cGFzc3dvcmQ="
---
# Source: jaeger/charts/cassandra/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-cassandra
  labels:
    app: cassandra
    chart: cassandra-0.15.0
    release: my-release
    heritage: Helm
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: intra
    port: 7000
    targetPort: 7000
  - name: tls
    port: 7001
    targetPort: 7001
  - name: jmx
    port: 7199
    targetPort: 7199
  - name: cql
    port: 9042
    targetPort: 9042
  - name: thrift
    port: 9160
    targetPort: 9160
  selector:
    app: cassandra
    release: my-release
---
# Source: jaeger/templates/agent-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-jaeger-agent
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: agent
spec:
  ports:
  - name: zipkin-compact
    port: 5775
    protocol: UDP
    targetPort: zipkin-compact
  - name: jaeger-compact
    port: 6831
    protocol: UDP
    targetPort: jaeger-compact
  - name: jaeger-binary
    port: 6832
    protocol: UDP
    targetPort: jaeger-binary
  - name: http
    port: 5778
    protocol: TCP
    targetPort: http
  - name: admin
    port: 14271
    protocol: TCP
    targetPort: admin
  type: ClusterIP
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: agent
---
# Source: jaeger/templates/collector-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-jaeger-collector
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: collector
spec:
  ports:
  - name: grpc
    port: 14250
    protocol: TCP
    targetPort: grpc
  - name: tchannel
    port: 14267
    protocol: TCP
    targetPort: tchannel
  - name: http
    port: 14268
    protocol: TCP
    targetPort: http
  - name: admin
    port: 14269
    targetPort: admin
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: collector
  type: ClusterIP
---
# Source: jaeger/templates/query-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-jaeger-query
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query
spec:
  ports:
  - name: query
    port: 80
    protocol: TCP
    targetPort: query
  - name: admin
    port: 16687
    protocol: TCP
    targetPort: admin
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: query
  type: ClusterIP
---
# Source: jaeger/templates/agent-ds.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-release-jaeger-agent
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: agent
    spec:    
      securityContext:
        {}
      dnsPolicy: ClusterFirst
      serviceAccountName: my-release-jaeger-agent
      containers:
      - name: my-release-jaeger-agent
        securityContext:
          {}
        image: jaegertracing/jaeger-agent:1.17.1
        imagePullPolicy: IfNotPresent
        args:
        env:
        - name: REPORTER_GRPC_HOST_PORT
          value: my-release-jaeger-collector:14250
        ports:
        - name: zipkin-compact
          containerPort: 5775
          protocol: UDP
        - name: jaeger-compact
          containerPort: 6831
          protocol: UDP
        - name: jaeger-binary
          containerPort: 6832
          protocol: UDP
        - name: http
          containerPort: 5778
          protocol: TCP
        - name: admin
          containerPort: 14271
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: admin
        readinessProbe:
          httpGet:
            path: /
            port: admin
        resources:
          {}
        volumeMounts:
      volumes:
---
# Source: jaeger/templates/collector-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-jaeger-collector
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: collector
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config-env: 75a11da44c802486bc6f65640aa48a730f0f684c5c07a42ba3cd1735eb3fb070
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: collector
    spec:    
      securityContext:
        {}
      serviceAccountName: my-release-jaeger-collector
      containers:
      - name: my-release-jaeger-collector
        securityContext:
          {}
        image: jaegertracing/jaeger-collector:1.17.1
        imagePullPolicy: IfNotPresent
        args:
          
        env:
          - name: SPAN_STORAGE_TYPE
            value: cassandra
          - name: CASSANDRA_SERVERS
            value: my-release-cassandra
          - name: CASSANDRA_PORT
            value: "9042"
          
          - name: CASSANDRA_KEYSPACE
            value: jaeger_v1_test
          - name: CASSANDRA_USERNAME
            value: user
          - name: CASSANDRA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-release-jaeger-cassandra
                key: password
        ports:
        - containerPort: 14250
          name: grpc
          protocol: TCP
        - containerPort: 14267
          name: tchannel
          protocol: TCP
        - containerPort: 14268
          name: http
          protocol: TCP
        - containerPort: 14269
          name: admin
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: admin
        livenessProbe:
          httpGet:
            path: /
            port: admin
        resources:
          {}
        volumeMounts:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
---
# Source: jaeger/templates/query-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-jaeger-query
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: query
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: query
    spec:    
      securityContext:
        {}
      serviceAccountName: my-release-jaeger-query
      containers:
      - name: my-release-jaeger-query
        securityContext:
          {}
        image: jaegertracing/jaeger-query:1.17.1
        imagePullPolicy: IfNotPresent
        args:
          
        env:
          - name: SPAN_STORAGE_TYPE
            value: cassandra
          - name: CASSANDRA_SERVERS
            value: my-release-cassandra
          - name: CASSANDRA_PORT
            value: "9042"
          
          - name: CASSANDRA_KEYSPACE
            value: jaeger_v1_test
          - name: CASSANDRA_USERNAME
            value: user
          - name: CASSANDRA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-release-jaeger-cassandra
                key: password
          - name: JAEGER_AGENT_PORT
            value: "6831"
        ports:
        - name: query
          containerPort: 16686
          protocol: TCP
        - name: admin
          containerPort: 16687
          protocol: TCP
        resources:
          {}
        volumeMounts:
        livenessProbe:
          httpGet:
            path: /
            port: admin
        readinessProbe:
          httpGet:
            path: /
            port: admin
      - name: my-release-jaeger-agent-sidecar
        securityContext:
          {}
        image: jaegertracing/jaeger-agent:1.17.1
        imagePullPolicy: IfNotPresent
        args:
        env:
        - name: REPORTER_GRPC_HOST_PORT
          value: my-release-jaeger-collector:14250
        ports:
        - name: admin
          containerPort: 14271
          protocol: TCP
        volumeMounts:
        livenessProbe:
          httpGet:
            path: /
            port: admin
        readinessProbe:
          httpGet:
            path: /
            port: admin
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
---
# Source: jaeger/charts/cassandra/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-cassandra
  labels:
    app: cassandra
    chart: cassandra-0.15.0
    release: my-release
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: cassandra
      release: my-release
  serviceName: my-release-cassandra
  replicas: 3
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app: cassandra
        release: my-release
    spec:
      hostNetwork: false
      initContainers:
      - name: config-copier
        image: cassandra:3.11.6
        command: [ 'sh', '-c', 'cp -r /etc/cassandra/* /cassandra-configs/']
        volumeMounts:
        - name: cassandra-configs
          mountPath: /cassandra-configs/
      containers:
      - name: my-release-cassandra
        image: "cassandra:3.11.6"
        imagePullPolicy: "IfNotPresent"
        command: [ '/bin/sh', '-c', 'docker-entrypoint.sh cassandra -R -f']
#
        resources:
          {}
        env:
        - name: CASSANDRA_SEEDS
          value: "my-release-cassandra-0.my-release-cassandra.default.svc."
        - name: MAX_HEAP_SIZE
          value: "2048M"
        - name: HEAP_NEWSIZE
          value: "512M"
        - name: CASSANDRA_ENDPOINT_SNITCH
          value: "GossipingPropertyFileSnitch"
        - name: CASSANDRA_CLUSTER_NAME
          value: "jaeger"
        - name: CASSANDRA_DC
          value: "dc1"
        - name: CASSANDRA_RACK
          value: "rack1"
        - name: CASSANDRA_START_RPC
          value: "false"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        livenessProbe:
          exec:
            command: [ "/bin/sh", "-c", "nodetool status" ]
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command: [ "/bin/sh", "-c", "nodetool status | grep -E \"^UN\\s+${POD_IP}\"" ]
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        ports:
        - name: intra
          containerPort: 7000
        - name: tls
          containerPort: 7001
        - name: jmx
          containerPort: 7199
        - name: cql
          containerPort: 9042
        - name: thrift
          containerPort: 9160
        volumeMounts:
        - name: data
          mountPath: /var/lib/cassandra
        - name: cassandra-configs
          mountPath: /etc/cassandra
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "exec nodetool decommission"]
      terminationGracePeriodSeconds: 30
      volumes:
      - name: cassandra-configs
        emptyDir: {}
      - name: data
        emptyDir: {}
---
# Source: jaeger/templates/cassandra-schema-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-jaeger-cassandra-schema
  labels:
    helm.sh/chart: jaeger-0.27.2006
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: cassandra-schema
spec:
  activeDeadlineSeconds: 300
  template:
    metadata:
      name: my-release-jaeger-cassandra-schema
    spec:    
      serviceAccountName: my-release-jaeger-cassandra-schema
      containers:
      - name: my-release-jaeger-cassandra-schema
        image: jaegertracing/jaeger-cassandra-schema:1.17.1
        imagePullPolicy: IfNotPresent
        env:
        
        - name: "MODE"
          value: "prod"
        
        - name: CASSANDRA_SERVERS
          value: my-release-cassandra
        - name: CASSANDRA_PORT
          value: "9042"
        
        - name: CASSANDRA_KEYSPACE
          value: jaeger_v1_test
        - name: CASSANDRA_USERNAME
          value: user
        - name: CASSANDRA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-release-jaeger-cassandra
              key: password
        - name: CQLSH_HOST
          value: my-release-cassandra
        
        - name: DATACENTER
          value: "dc1"
        - name: KEYSPACE
          value: jaeger_v1_test
        resources:
          {}
        volumeMounts:
      restartPolicy: OnFailure
      volumes:
