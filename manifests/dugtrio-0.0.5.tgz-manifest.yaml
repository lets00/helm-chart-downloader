---
# Source: dugtrio/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-dugtrio
  labels:
    helm.sh/chart: dugtrio-0.0.5
    app.kubernetes.io/name: dugtrio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  namespace: default
---
# Source: dugtrio/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-dugtrio
  labels:
    helm.sh/chart: dugtrio-0.0.5
    app.kubernetes.io/name: dugtrio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  dugtrio-config.yaml: |
    logging:
      #outputLevel: "debug"
      #filePath: "dugtrio.log"
      #fileLevel: "warn"
    
    # HTTP Server configuration
    server:
      host: "0.0.0.0"
      port: "8080"
    
    # Beacon Node Endpoints
    endpoints:
      - url: "http://beacon-node:5052"
        name: "default-endpoint"
        headers:
          "X-Test": "test"
          "Y-Test": "test2"
    
    # Pool configuration
    pool:
      schedulerMode: "rr"
      followDistance: 10
      maxHeadDistance: 2
    
    # Proxy configuration
    proxy:
      # number of proxies in front of dugtrio
      proxyCount: 1
    
      # proxy call timeout
      callTimeout: 55s
    
      # proxy session timeout
      sessionTimeout: 10m
    
      # reuse the same endpoint when possible
      stickyEndpoint: true
    
      # call rate limit (calls per second)
      callRateLimit: 100
    
      # call rate burst limit
      callRateBurst: 1000
    
    # Frontend configuration
    frontend:
      # Enable or disable to web frontend
      enabled: true
      minify: true
      siteName: "Dugtrio"
    
    metrics:
      enabled: true
---
# Source: dugtrio/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-dugtrio-headless
  labels:
    helm.sh/chart: dugtrio-0.0.5
    app.kubernetes.io/name: dugtrio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: dugtrio
    app.kubernetes.io/instance: my-release
---
# Source: dugtrio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-dugtrio
  labels:
    helm.sh/chart: dugtrio-0.0.5
    app.kubernetes.io/name: dugtrio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: dugtrio
    app.kubernetes.io/instance: my-release
---
# Source: dugtrio/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-dugtrio
  labels:
    helm.sh/chart: dugtrio-0.0.5
    app.kubernetes.io/name: dugtrio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dugtrio
      app.kubernetes.io/instance: my-release
  serviceName: my-release-dugtrio-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dugtrio
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/config: 84a0e844e30b72ba79f322db67715fa97ae9fee90ac0e5daa3e424fb7a2d1e27
    spec:
      serviceAccountName: my-release-dugtrio
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers:
      containers:
        - name: dugtrio
          image: "ethpandaops/dugtrio:1.0.0"
          imagePullPolicy: IfNotPresent
          args:
            - -config=dugtrio-config.yaml
          securityContext:
            {}
          volumeMounts:
            - name: config
              mountPath: "/app/dugtrio-config.yaml"
              subPath: dugtrio-config.yaml
              readOnly: true
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
          env:
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      topologySpreadConstraints:
        []
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: my-release-dugtrio
---
# Source: dugtrio/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-dugtrio-test-connection"
  labels:
    helm.sh/chart: dugtrio-0.0.5
    app.kubernetes.io/name: dugtrio
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - 'my-release-dugtrio:8080/'
  restartPolicy: Never
