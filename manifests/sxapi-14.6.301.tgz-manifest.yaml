---
# Source: sxapi/templates/cm-app.yaml
kind: ConfigMap
apiVersion: v1
immutable: false
metadata:
  name: 'default-sxapi-app-0.0.1'
  labels:
    app.kubernetes.io/name: "default-sxapi-0.0.1-app-cm"
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "localhost"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "sxapi"
    app.startx.fr/app: "default-sxapi"
    app.startx.fr/version: "0.0.1"
    helm.sh/chart: "sxapi"
    app.kubernetes.io/component: "sxapi"
    app.kubernetes.io/part-of: "default-sxapi"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "0.0.1"
    app.startx.fr/component: "sxapi"
    app.kubernetes.io/component: "sxapi"
    app.kubernetes.io/part-of: "localhost"
    app.kubernetes.io/instance: "myscope-myenv-default-sxapi-0.0.1"
  annotations:
    openshift.io/generated-by: startx-helm-sxapi
data:
  SX_ID: myscope-myenv-default-sxapi-0.0.1
  SX_TYPE: app
  SX_COMPONENT: sxapi
  SX_NAME: 'myscope - myenv - sxapi - default-sxapi'
  SX_SUMMARY: 'Application default-sxapi part of the sxapi component in the myenv environment, under the myscope scope and running under the localhost cluster'
  SX_VERSION: 0.0.1
---
# Source: sxapi/templates/cm-lib.yaml
kind: ConfigMap
apiVersion: v1
immutable: false
metadata:
  name: 'default-sxapi-lib-0.0.1'
  labels:
    app.kubernetes.io/name: "default-sxapi-0.0.1-lib-cm"
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "localhost"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "sxapi"
    app.startx.fr/app: "default-sxapi"
    app.startx.fr/version: "0.0.1"
    helm.sh/chart: "sxapi"
    app.kubernetes.io/component: "sxapi"
    app.kubernetes.io/part-of: "default-sxapi"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "0.0.1"
    app.startx.fr/component: "sxapi"
    app.kubernetes.io/component: "sxapi"
    app.kubernetes.io/part-of: "localhost"
    app.kubernetes.io/instance: "myscope-myenv-default-sxapi-0.0.1"
  annotations:
    openshift.io/generated-by: startx-helm-sxapi
data:
  sxapi.yml: |-
    name: default
    description: Description of the default sxapi helm chart instance (defined in values.yaml)
    version: "0.0.1"
    debug: false
    resources:
      serviceinfo-sample:
        _class: serviceinfo
    log:
      filters:
        level: '0,1,2,3,4'
        type: debug,info,error,warn
    server:
      port: '8077'
      endpoints:
      - path: "/"
        desc: Display welcome message (HTML)
        body: |-
            <html>
            <head><title>Example application (default values)</title></head>
            <body>
              <h1>SXAPI is live ! (helm chart's managed by default values.yaml)</h1>
              <p>
                This example is deployed using the default values file of the 
                <a href="https://helm-repository.readthedocs.io/en/latest/charts/sxapi.html" target="_blank">sxapi chart</a>
                available in the <a href="https://helm-repository.readthedocs.io" target="_blank">startx helm repository</a>. 
              </p>
              <p>
                You could check the following endpoints :</p>
              <ul>
                <li><a href="./health">Health status (used by readiness probe)</a></li>
                <li><a href="./info">Information about the application</a></li>
                <li><a href="./ping">Return a simple pong</a></li>
              </ul>
            </body>
            </html>
      - path: "/health"
        resource: serviceinfo-sample
        endpoint: health
      - path: "/info"
        resource: serviceinfo-sample
        endpoint: info
      - path: "/ping"
        desc: Ping the application. Return a sample message in json
        code: '200'
        body: pong
---
# Source: sxapi/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: default-sxapi
  labels:
    app.kubernetes.io/name: "default-sxapi-0.0.1-service"
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "localhost"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "sxapi"
    app.startx.fr/app: "default-sxapi"
    app.startx.fr/version: "0.0.1"
    helm.sh/chart: "sxapi"
    app.kubernetes.io/component: "sxapi"
    app.kubernetes.io/part-of: "default-sxapi"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "0.0.1"
    app.startx.fr/component: "sxapi"
    app.kubernetes.io/component: "sxapi"
    app.kubernetes.io/part-of: "localhost"
    app.kubernetes.io/instance: "myscope-myenv-default-sxapi-0.0.1"
    app: default-sxapi
  annotations:
    openshift.io/generated-by: startx-helm-sxapi
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8077
  selector:
    app: default-sxapi
  type: ClusterIP
  sessionAffinity: None
---
# Source: sxapi/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: default-sxapi
  labels:
    app.kubernetes.io/name: "default-sxapi-0.0.1-deployment"
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "localhost"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "sxapi"
    app.startx.fr/app: "default-sxapi"
    app.startx.fr/version: "0.0.1"
    helm.sh/chart: "sxapi"
    app.kubernetes.io/component: "sxapi"
    app.kubernetes.io/part-of: "default-sxapi"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "0.0.1"
    app.startx.fr/component: "sxapi"
    app.kubernetes.io/component: "sxapi"
    app.kubernetes.io/part-of: "localhost"
    app.kubernetes.io/instance: "myscope-myenv-default-sxapi-0.0.1"
    kube-monkey/enabled: enabled
    kube-monkey/identifier: "default-sxapi"
  annotations:
    openshift.io/generated-by: startx-helm-sxapi
    checksum/config: 5486eff6710fea8e33eac1cc90b580abc37db93d42ebf40ea8655ecd555c5045
    argocd.argoproj.io/sync-wave: "30"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: default-sxapi
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "default-sxapi-0.0.1-pod"
        app.startx.fr/scope: "myscope"
        app.startx.fr/cluster: "localhost"
        app.startx.fr/environment: "myenv"
        app.startx.fr/component: "sxapi"
        app.startx.fr/app: "default-sxapi"
        app.startx.fr/version: "0.0.1"
        helm.sh/chart: "sxapi"
        app.kubernetes.io/component: "sxapi"
        app.kubernetes.io/part-of: "default-sxapi"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "0.0.1"
        app.startx.fr/component: "sxapi"
        app.kubernetes.io/component: "sxapi"
        app.kubernetes.io/part-of: "localhost"
        app.kubernetes.io/instance: "myscope-myenv-default-sxapi-0.0.1"
        app: default-sxapi
        kube-monkey/enabled: enabled
        kube-monkey/identifier: "default-sxapi"
      annotations:
        openshift.io/generated-by: startx-helm-sxapi
    spec: 
      containers:
        - name: sxapi
          image: "quay.io/startx/sxapi:0.3.63"
          env:
            - name: SX_DEBUG
              value: "false"
            - name: SX_VERBOSE
              value: "true"
          envFrom:
            - configMapRef:
                name: 'default-sxapi-app-0.0.1'
          command: [ "npm" , "run", "prod:start" ]
          ports:
          - containerPort: 8077
            name: http
            protocol: TCP
          livenessProbe:
            initialDelaySeconds: 2
            tcpSocket:
              port: 8077
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            initialDelaySeconds: 4
            tcpSocket:
              port: 8077
            timeoutSeconds: 2
            periodSeconds: 7
            successThreshold: 1
            failureThreshold: 3
          # resources:
          #   limits:
          #     cpu: 200m
          #     memory: 64Mi
          #   requests:
          #     cpu: 50m
          #     memory: 32Mi
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
          volumeMounts:
            - name: "sxapi-deploy-log"
              mountPath: "/var/log/httpd"
            - name: sxapi-deploy-conf
              mountPath: "/conf"
      volumes:
        - name: "sxapi-deploy-log"
          emptyDir:
            medium: ""
        - name: sxapi-deploy-conf
          configMap:
            name: 'default-sxapi-lib-0.0.1'
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
