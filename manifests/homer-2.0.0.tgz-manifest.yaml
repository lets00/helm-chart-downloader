---
# Source: homer/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-homer-config
  labels:
    helm.sh/chart: homer-2.0.0
    app.kubernetes.io/name: homer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.10.1"
    app.kubernetes.io/managed-by: Helm
data:
  config.yml: |
    title: Dashboard
    services: {}
---
# Source: homer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-homer
  labels:
    helm.sh/chart: homer-2.0.0
    app.kubernetes.io/name: homer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.10.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: "http"
      port: 8080
      targetPort: "http"
      protocol: "TCP"
  selector:
    app.kubernetes.io/name: homer
    app.kubernetes.io/instance: my-release
---
# Source: homer/templates/controller.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-homer
  labels:
    helm.sh/chart: homer-2.0.0
    app.kubernetes.io/name: homer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v23.10.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: homer
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        config/checksum: 935661b83322ee6185196ca3c4e5ba39b07a9a641ab4bcf54a857ce3afec73f8
      labels:
        app.kubernetes.io/name: homer
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: default
      containers:
        - name: homer
          image: "b4bz/homer:v23.10.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: "http"
              containerPort: 8080
              protocol: "TCP"
          env:
            - name: "TZ"
              value: "UTC"
          volumeMounts:
            - name: config-volume
              mountPath: /www/assets
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {}
      volumes:
        - name: config-volume
          configMap:
            name: my-release-homer-config
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
