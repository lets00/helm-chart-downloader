---
# Source: hasura/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-hasura
  labels:
    helm.sh/chart: hasura-3.0.0
    app.kubernetes.io/name: hasura
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.34.0-ce"
    app.kubernetes.io/managed-by: Helm
---
# Source: hasura/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-hasura
  labels:
    helm.sh/chart: hasura-3.0.0
    app.kubernetes.io/name: hasura
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.34.0-ce"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  HASURA_GRAPHQL_DATABASE_URL: "!ChangeMe!"
  HASURA_GRAPHQL_ADMIN_SECRET: "!ChangeMe!"
---
# Source: hasura/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-hasura
  labels:
    helm.sh/chart: hasura-3.0.0
    app.kubernetes.io/name: hasura
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.34.0-ce"
    app.kubernetes.io/managed-by: Helm
data:
  HASURA_GRAPHQL_SERVER_HOST: "*"
  HASURA_GRAPHQL_SERVER_PORT: "8080"
  HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"
  HASURA_GRAPHQL_DEV_MODE: "false"
  HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
  HASURA_GRAPHQL_ENABLED_APIS: "graphql,metadata"
  HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
  HASURA_GRAPHQL_LOG_LEVEL: "info"
  HASURA_GRAPHQL_ENABLED_LOG_TYPES: "http-log, webhook-log, websocket-log, query-log"
  HASURA_GRAPHQL_EVENTS_HTTP_POOL_SIZE: "100"
  HASURA_GRAPHQL_EVENTS_FETCH_BATCH_SIZE: "100"
  HASURA_GRAPHQL_PG_STRIPES: "1"
  HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES: "false"
  HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL: "1000"
  HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_BATCH_SIZE: "100"
  HASURA_GRAPHQL_ENABLE_ALLOWLIST: "false"
  HASURA_GRAPHQL_INFER_FUNCTION_PERMISSIONS: "true"
  HASURA_GRAPHQL_SCHEMA_SYNC_POLL_INTERVAL: "1000"
  HASURA_GRAPHQL_GRACEFUL_SHUTDOWN_TIMEOUT: "60"
  HASURA_GRAPHQL_ENABLE_MAINTENANCE_MODE: "false"
  HASURA_GRAPHQL_CONNECTION_COMPRESSION: "false"
  HASURA_GRAPHQL_WEBSOCKET_KEEPALIVE: "5"
  HASURA_GRAPHQL_WEBSOCKET_CONNECTION_INIT_TIMEOUT: "3"
  HASURA_GRAPHQL_WS_READ_COOKIE: "false"
  HASURA_GRAPHQL_METADATA_DATABASE_EXTENSIONS_SCHEMA: "public"
  HASURA_GRAPHQL_DEFAULT_NAMING_CONVENTION: "hasura-default"
  HASURA_GRAPHQL_ENABLE_LOG_COMPRESSION: "false"
  HASURA_GRAPHQL_ENABLE_METADATA_QUERY_LOGGING: "false"
  HASURA_GRAPHQL_AUTH_HOOK_SEND_REQUEST_BODY: "true"
  HASURA_GRAPHQL_ENABLE_TRIGGERS_ERROR_LOG_LEVEL: "true"
  HASURA_GRAPHQL_CLOSE_WEBSOCKETS_ON_METADATA_CHANGE: "true"
  HASURA_GRAPHQL_ENABLE_APOLLO_FEDERATION: "false"
  HASURA_GRAPHQL_STREAMING_QUERIES_MULTIPLEXED_REFETCH_INTERVAL: "1000"
  HASURA_GRAPHQL_DISABLE_CORS: 'true'
---
# Source: hasura/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-hasura
  labels:
    helm.sh/chart: hasura-3.0.0
    app.kubernetes.io/name: hasura
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.34.0-ce"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hasura
    app.kubernetes.io/instance: my-release
---
# Source: hasura/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-hasura
  labels:
    helm.sh/chart: hasura-3.0.0
    app.kubernetes.io/name: hasura
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.34.0-ce"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hasura
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/configmap: 3281e08ddcceed03e98665e03e09095f5dca0bcdc67caf41aa8c525eae5a3185
        checksum/secret: 703c3de82ca419e787350a58e76fcd303591972a75c1f20a2c30169ff53f668f
      labels:
        app.kubernetes.io/name: hasura
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-hasura
      securityContext:
        {}
      containers:
        - name: hasura
          securityContext:
            {}
          image: "hasura/graphql-engine:v2.34.0-ce"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: my-release-hasura
            - secretRef:
                name: my-release-hasura
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {}
---
# Source: hasura/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-hasura-test-connection"
  labels:
    helm.sh/chart: hasura-3.0.0
    app.kubernetes.io/name: hasura
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.34.0-ce"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-hasura:80/healthz']
  restartPolicy: Never
