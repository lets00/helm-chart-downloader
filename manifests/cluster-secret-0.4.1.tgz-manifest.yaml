---
# Source: cluster-secret/templates/deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-cluster-secret-account
  labels:
    helm.sh/chart: cluster-secret-0.4.1
    app.kubernetes.io/name: cluster-secret
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.0.10"
    app.kubernetes.io/managed-by: Helm
---
# Source: cluster-secret/templates/role-cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cluster-secret-role-cluster
  labels:
    helm.sh/chart: cluster-secret-0.4.1
    app.kubernetes.io/name: cluster-secret
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.0.10"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - clustersecret.io
  resources:
  - clusterkopfpeerings
  verbs:
  - list
  - watch
  - patch
  - get
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - get
  - patch
  - watch
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - clustersecret.io
  resources:
  - clustersecrets
  verbs:
  - watch
  - list
  - get
  - patch
  - update
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces
  - namespaces/status
  verbs:
  - watch
  - list
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - watch
  - list
  - get
  - patch
  - update
  - create
  - delete
---
# Source: cluster-secret/templates/rolebinding-cluster-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-cluster-secret-rolebinding-cluster
  labels:
    helm.sh/chart: cluster-secret-0.4.1
    app.kubernetes.io/name: cluster-secret
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.0.10"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-release-cluster-secret-role-cluster'
subjects:
- kind: ServiceAccount
  name: 'my-release-cluster-secret-account'
  namespace: 'default'
---
# Source: cluster-secret/templates/role-namespaced-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-cluster-secret-role-namespaced
  labels:
    helm.sh/chart: cluster-secret-0.4.1
    app.kubernetes.io/name: cluster-secret
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.0.10"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - clustersecret.io
  resources:
  - kopfpeerings
  verbs:
  - list
  - watch
  - patch
  - get
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch
---
# Source: cluster-secret/templates/rolebinding-namespaced-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-cluster-secret-rolebinding-namespaced
  labels:
    helm.sh/chart: cluster-secret-0.4.1
    app.kubernetes.io/name: cluster-secret
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.0.10"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'my-release-cluster-secret-role-namespaced'
subjects:
- kind: ServiceAccount
  name: 'my-release-cluster-secret-account'
  namespace: 'default'
---
# Source: cluster-secret/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-cluster-secret-clustersecret
  labels:
    app: clustersecret
    helm.sh/chart: cluster-secret-0.4.1
    app.kubernetes.io/name: cluster-secret
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.0.10"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: clustersecret
      app.kubernetes.io/name: cluster-secret
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app: clustersecret
        app.kubernetes.io/name: cluster-secret
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        runAsUser: 100 # 100 is set by the container and can NOT be changed here - this would result in a getpwuid() error
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        - name: CLUSTER_SECRET_VERSION
          value: "0.0.10"
        - name: REPLACE_EXISTING
          value: "false"
        image: quay.io/clustersecret/clustersecret:0.0.10
        name: clustersecret
        securityContext:
          runAsUser: 100 # 100 is set by the container and can NOT be changed here - this would result in a getpwuid() error
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          periodSeconds: 120
        resources: {}
      serviceAccountName: my-release-cluster-secret-account
