---
# Source: capi-ops-manager/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-capi-ops-manager
  namespace: default
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: capi-ops-manager/templates/webhook/cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-capi-ops-manager-webhook-cert
  namespace: default
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRRnQyVHZZTXNwOVNLSnZ1RWNkUXpLREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1UWXdNRFEzTWpCYUZ3MHpOREEyTVRRd01EUTNNakJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3cW9SCnZpdHU2RzZyWDRnaHpET01ERzVMZ1o3NHhNcTl0N21GdzVXWDh0UmMwSUgrYXJVWnA2ak5xYVptL1NsYWtPTVoKNkJkVTBDWXU1YVZlQ3I5dTNvdi8vZ2NYU2tjeU5rb0JQbCt3S0JBU0NBWFFMVzdrcHpSb0dsN2ZvaEg0SHlSZwptZDBJeFBKMTFrcjloNkVtSG1kR2NodW5KQjNKN05DRDRuNlVkZTdlVWpLYkhqaFZaOHlHUlo5cEFLZHYrdGI4ClN1RkRPTHByL0pYSVRVdVlMbmNxVkJUVDVUZmtlSnArakhBZ2N1VW9OUGNyM2JJWW9KWHBEUFJ5bEE3c1R6NmsKSER4Z0VVaXZnTWJtRTFRTGxOMUZISEtTcGpzZ3cwVDRQTmdSNlZIVGpxOHkrTU4xUE1EUU5EZ0dSSFYyRTZGegptNWxBeFdEVGp1d3RVcytoTlFJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRk4rNjBWR0trZ0JSY291TlpURVMvZWk0a2dMbE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3lOazF4Wk5WUwpkUWpXdCtTQ2xpaXhobUI5Q2MvV3BuMTRiZ0thZ2x3d3NpVVZnREw2dnN1ekRMamthaGNqK3J4ZElLVXpVa3l2CkxkeWd4aVBzQ3dTSXNVSkVGWmd4RFMybDV1V0pCTlRmR3dJOWZxbWxKRkl2elJzcU41S1ZKVmliTkN4Ty9iRnIKN0ZZdU1uWENrRFhkNUpGaVRaMGxBNHJ2bE1jUE1RZ0lIcU1tRTFUNHRLVEhEeTZHcVBYZ01EOGhuRGJwWDRIdgpQWUlwNlBDN0tsd0RXYXdBcmxmcDE4cEtPZTgwY200dUxsc2pYSEorN21MSFNPbURLWmVkUXhHNjVJR0h4dllMCmd3Z3pVQmhhVXhMNUhYb1N3TkhCM29rbzFvT08xQlcxNGUyNnhpMW5JOHpTOGUvUmI4aWdVeG5pLzVsU1Q5VVEKYWpkaEwvcDBNUTBQCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURrRENDQW5pZ0F3SUJBZ0lRSEVreGNNeXJOajNRc2RrREZSNHB2VEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1UWXdNRFEzTWpCYUZ3MHpOREEyTVRRd01EUTNNakJhTUM0eApMREFxQmdOVkJBTVRJMjE1TFhKbGJHVmhjMlV0WTJGd2FTMXZjSE10YldGdVlXZGxjaTEzWldKb2IyOXJNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6dUg4VDNmY092T2Q5dVpndnVtNXNQcU0KTThKS3RCajFteHFIWExzMVJabS9ZSmE1TlM1a0NuTm50aGhxb09hSVZyamlZMUV5QXRhR3dYK2trcldsZ3dEQgorblFScGVTQVJzMmpYaktHM2tlanUwbStJZmRrbnlueHpBNHhnMVYyY3hIbjR6RWgwNVpiNHNzclR5Tzk2WlgzCmJRMzNvdE9pZGNhTktsUXcyS0tyZVYydG5UaFpZVmhCQzBObnFLdUEySmpHUGxwdGlyUFBuMXVvTlRTbkVZdFoKSzdUN0tBdmdtU3NPdGVFbnFpVnRQV3VyL2FQMHZoTGNXcGtpSWFjckhuQS9jaVhlRjROZmZxWVdCOVFleUlWTQpzSXhqUzBrcUQrU1FPTlRwTTJBMG56QmJLdVVaRzBoNkdhWG02QXZRajdQSUVpQXpDclFsZk9Ceit6bXBSUUlECkFRQUJvNEhLTUlISE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlRmdXRGUmlwSUFVWEtMaldVeApFdjNvdUpJQzVUQm5CZ05WSFJFRVlEQmVnaXR0ZVMxeVpXeGxZWE5sTFdOaGNHa3RiM0J6TFcxaGJtRm5aWEl0CmQyVmlhRzl2YXk1a1pXWmhkV3gwZ2k5dGVTMXlaV3hsWVhObExXTmhjR2t0YjNCekxXMWhibUZuWlhJdGQyVmkKYUc5dmF5NWtaV1poZFd4MExuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbWo4d0praG5PdVo2ZFdDcgpXYi94S3FIVnI0eUFncjNNd0plVW1YdmJ0UC9pRHV5SjVRcHQxbnhYV2RwOHdEd0dwdkdLVjVCSzFPMGlER0ZVCmtBS2VONmN3bDhsV0pPZHFUa3hQN2traW9ZTnU3QzEyUWVMYXJoQlZzc3hlYXlxbkIxSGYrd1hnNUlvWkFUa0cKOVZadnQ5ODhwYjFjUFJUSTBybHNqTGJPdXhaOERQMFFJMGNOdU1kYnRsSkdxL2FSMlo1cXIzWE5oSmt3eGRVbAp3TVlkbW5VUXJYa2orMmR1bTAvaEovbDFEME1TTnBEcENPSU9LenYyWlhnVlM4czJteEJSOWpPUkZheTR2U2pICndrKzhadUFmaUErQXlYc09PbjBLUCtnVUViR3FYK3RJSUVXc0tlSlp0NjJKV3pkS2ZvNGNSWnVDSmkzbmlacUUKMXZYT3ZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBenVIOFQzZmNPdk9kOXVaZ3Z1bTVzUHFNTThKS3RCajFteHFIWExzMVJabS9ZSmE1Ck5TNWtDbk5udGhocW9PYUlWcmppWTFFeUF0YUd3WCtra3JXbGd3REIrblFScGVTQVJzMmpYaktHM2tlanUwbSsKSWZka255bnh6QTR4ZzFWMmN4SG40ekVoMDVaYjRzc3JUeU85NlpYM2JRMzNvdE9pZGNhTktsUXcyS0tyZVYydApuVGhaWVZoQkMwTm5xS3VBMkpqR1BscHRpclBQbjF1b05UU25FWXRaSzdUN0tBdmdtU3NPdGVFbnFpVnRQV3VyCi9hUDB2aExjV3BraUlhY3JIbkEvY2lYZUY0TmZmcVlXQjlRZXlJVk1zSXhqUzBrcUQrU1FPTlRwTTJBMG56QmIKS3VVWkcwaDZHYVhtNkF2UWo3UElFaUF6Q3JRbGZPQnorem1wUlFJREFRQUJBb0lCQVFDMUFQMWFuZmkrVDBVbQpycHQ0alU5YzYyamRKQ0Z0L3VSc0JzTGx2Qms0d3ZLdzFFNUluRVVFNjhHU2pUeEZlRTFTNnNHUHVZdHk5alRDCmVTWUpBZ3BFV3RaY2hVNm5nUXRHWjBhRzlOZ1JCRWJaWndTRi9VZzVCVjY3ZExPWFA1KzV2N0hOa2NBUnVseTgKU1p1anl4YXVsdm42blJ6TGhqUityTy8zVjkvQXVNWERuTGNISHZ4SG1ZbFByWlpHYkhuTkpWUVpSV2hPVm9vMApVaFhBWGY4YmxyRmpxUTBNdkZhM3VkREpEdWJEajZsZWlpQzVLMWdYL1RyMVJTKzdtTldaQzFwMU5CZ0M4TGVsCkYvR3g0R2tWWlpBU2pCWDFJODhGODhCMnY4TDJhQUFjL1FJQzNmcm12T2JRa0YzUXc3K2NUajB2QVQ5L05IYWcKYUQwUGt1ZWxBb0dCQU5JU3lRVWwxTGMvUjZNa1c3SE92YngvcXJZdzRjellzcGVOc0FTM0pTSVV1MmI4RW9oVwpGV0JHN3lvMGdFMUpNZVBxNEpWdlBYa0lZazhZaEdITlJLWTFMdThMcVF0REVLTXU0eStoQ2Z4anE0ZVJCN1VQCkRHVHBhamViVkdCYTBkOEZyblplYy9vTG5mNmd3U1pUM1A0dkkvRGtiQnVvMHd2WjhyWE5CbmtqQW9HQkFQd2MKb1ZFcERuRHFsVTJKY0FhcGIwRkVKcGZrWTdRajMxMk04OFlwdnhHQmtObnlIa2xZSTFhRXA5WlVvbjk1MG5aZwp2MmlSQ01Bc2pSN1FMOElTWXE3NlZTMzc4S3dHK0w2aVVLUVh6TkovMit0OTlwdWhSMHJwdkswTWgxT2M0K2JxCmVtdDlUampWSW9zOEpGVCtNL2pycFdjWng3bUlhTnpjQVhUeFdkNTNBb0dCQUlqc0xaSHBZb2c5K3BkZkwxVHAKaDhuQS9LZmJuSkZEL01QRFdpTDRySDlXTy8rWDlReGY3M2JkUlMyaElxODlNZ040S0FHK2k3YkR2REFKcnQrQQpSMnA5NTZWdldETTY5ekVsY25hczVERlpWWWY3QTZjRHMvUmlIeFUzYlB1UXRwSkN4Yi9wT0hhVjg5anZObldnCjI3M2hRKy9UTXBPa3FrcGpPRXMrNHlVNUFvR0JBTi9SY3cyZ2kyZUhld0VaRU5GNVBvSU14TTU0UG1QQXJSNWEKY2xqczJ1bnB3dlVhVS9UOVFISWcxdmdhcnlESXdDWEVBbW9NeUY0RHIwMDV1Z3hyVWh6UnRTbGJ6L0NKUisvRwpIaDF2MjdETlBpcTA2MmlESjgzRDhITVkrbE1xcDlGclBUK01RUk9IZEdGMEJUVkhjRkIrczVyeWNqT3VmSm9HCjMydzRrSFpGQW9HQkFKYXhZdk9IcTZWWjhocnM4UTlzTTcxRlV1SnNNNWJZOE9tNlpwUHJ4OUFGTEVTNjBIaXAKQzF0WE9PRTY1ZDJvWktkUGI5MFUvdWZscWkyMS9lY3J5UEV5eENBdDNUK2JncU1mTS84cHVLSnR6SG9USjZySwo0TjU1REFGaUtPVUNNejdRdld3ZS92SDBNZFFPT3d6eGNPb0htc1V5T0VwUDAvbWdFTUI0enh4bgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: capi-ops-manager/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-capi-ops-manager-auth-proxy
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: capi-ops-manager/templates/rbac/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-capi-ops-manager
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs: ["get", "create", "patch", "update"]
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["*"]
  - apiGroups:
      - catalog.klusters.dev
      - ops.klusters.dev
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - ""
    resources:
      - events
    verbs: ["create", "patch"]
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs: ["get", "list", "watch"]
  - nonResourceURLs:
    - '*'
    verbs: ["get"]
---
# Source: capi-ops-manager/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-capi-ops-manager-auth-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-capi-ops-manager-auth-proxy
subjects:
  - kind: ServiceAccount
    name: my-release-capi-ops-manager
    namespace: default
---
# Source: capi-ops-manager/templates/rbac/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-capi-ops-manager
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-capi-ops-manager
subjects:
- kind: ServiceAccount
  name: my-release-capi-ops-manager
  namespace: default
---
# Source: capi-ops-manager/templates/webhook/monitoring/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-capi-ops-manager
  namespace: default
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
---
# Source: capi-ops-manager/templates/webhook/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-capi-ops-manager-webhook
  namespace: default
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: capi-ops-manager/templates/operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-capi-ops-manager-operator
  namespace: default
  labels:
    app.kubernetes.io/component: operator
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: capi-ops-manager
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: capi-ops-manager
        app.kubernetes.io/instance: my-release
      annotations:
    spec:
      
      serviceAccountName: my-release-capi-ops-manager
      containers:
      - name: operator
        image: "ghcr.io/appscode/capi-ops-manager:v0.0.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
          - operator
        resources:
          requests:
            cpu: 100m
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: capi-ops-manager/templates/webhook/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-capi-ops-manager-webhook-server
  namespace: default
  labels:
    app.kubernetes.io/component: webhook-server
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook-server
      app.kubernetes.io/name: capi-ops-manager
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webhook-server
        app.kubernetes.io/name: capi-ops-manager
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: 0fa79d49c24d8ba5b474acd19c8604810843968826ae533efefbd21a644914ab
    spec:
      
      serviceAccountName: my-release-capi-ops-manager
      containers:
      - name: webhook-server
        image: "ghcr.io/appscode/capi-ops-manager:v0.0.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
          - webhook
          - --webhook-name=my-release-capi-ops-manager
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: serving-cert
          mountPath: /var/serving-cert
          readOnly: true
      - name: kube-rbac-proxy
        image: "ghcr.io/appscode/kube-rbac-proxy:v0.11.0"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 100m
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-capi-ops-manager-webhook-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: capi-ops-manager/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-release-capi-ops-manager:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - catalog.klusters.dev
  - ops.klusters.dev
  resources:
  - "*"
  verbs: ["*"]
---
# Source: capi-ops-manager/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-release-capi-ops-manager:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - catalog.klusters.dev
  - ops.klusters.dev
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
