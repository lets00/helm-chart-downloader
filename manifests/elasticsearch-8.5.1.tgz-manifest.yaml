---
# Source: elasticsearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "elasticsearch-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "elasticsearch-master"
---
# Source: elasticsearch/templates/secret-cert.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: elasticsearch-master-certs
  labels:
    app: elasticsearch-master
    chart: "elasticsearch"
    heritage: Helm
    release: my-release
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURoekNDQW0rZ0F3SUJBZ0lRY3N4c0R0RG4rQVFSVUt5VHhhN09uakFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCbGJHRnpkR2xqYzJWaGNtTm9MV05oTUI0WERUSTBNRFl4TlRJek1qa3pOMW9YRFRJMQpNRFl4TlRJek1qa3pOMW93SHpFZE1Cc0dBMVVFQXhNVVpXeGhjM1JwWTNObFlYSmphQzF0WVhOMFpYSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREpyNmY4VitpWHBmR0hlNGRXYjgwQVZKRXUKVStJUi94OExuTldRNHBlbnM0Q2tLeTk2b3U2MlpnUDlQZkNkb2xYOVVzOUdkVDRLUU5KcXBtbTVtV2x5MlpqWQpIRWc4eTJsQW44dUYxYXdUOHZDc0hWSW52enVGcmpncnJNRUFsbmpHY2V6S2F5WG81UVprK21POStxNnhZSGR4Citmb3JFS1ZlN04wUFpPeHNwNjRjQ1RwSkV6S2p3MDc4MHpiYU5Ldys4Zm8zdzdia2xhd2xzQUpFQVhDN05ocnEKNGg1alNxanAyaEVYNU5ra3FlK3lGM1ZveW1rNjArUlM3VDJER0tYRE5rNm1tbHBRQkhrbGhWd1NsZWpseElIMgpoaXROeXNRWHBhakxWTEdXRWdyZXBXaWw1bGdidTlIbDNLNUtPdjlUMENjNHRobUI0QTRBVmdPSURwZ2pBZ01CCkFBR2pnY0l3Z2I4d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGUDR2d3Rqd3h5bjVBVm9OZU5OQgptU1BNNzhiVE1GOEdBMVVkRVFSWU1GYUNGR1ZzWVhOMGFXTnpaV0Z5WTJndGJXRnpkR1Z5Z2h4bGJHRnpkR2xqCmMyVmhjbU5vTFcxaGMzUmxjaTVrWldaaGRXeDBnaUJsYkdGemRHbGpjMlZoY21Ob0xXMWhjM1JsY2k1a1pXWmgKZFd4MExuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZm04Sm9XQjRRRWYzS2d0Z2lkcmY5K3NxL2txegpnV243UHZWZXZqU2ZZb0dTdFZwZG9zcmtjTXAwYldpUFJuMzVNOUdkSmQ2dVdrSzcyRXpRUlluaCtiMGNORVUwCkJSZU5QY1lxQzFpbHlmUnNTUERjeEpXVFRKY3c3OUhNeE5YOHpxS2NQYllZRVZKRTRTWmN3OW1sZU9JVUtxVisKUnZ3bXpGemlRSVFyOEpQK3h0SStuNXh0dlpvTDd3MzViSjlGWUR4TFFVcDZDZGZsVW5rcWFLVFhHZ1ZtakltUwpUQXdGZWg1b2pyU1VJdlNhUWVIRmRSSFFESGxCZDZFZWdza1NML3hKRlI4bXFoZG1nSnN3NkRtMUxvNkQva0s0CjRtSERhK2xCK21ZeUtrblE0QnJmcTA1c3RxVEJ3c3hmZklKMDNicXZ5M096a1ZzZ3NZNWJ3NEJTREE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeWErbi9GZm9sNlh4aDN1SFZtL05BRlNSTGxQaUVmOGZDNXpWa09LWHA3T0FwQ3N2CmVxTHV0bVlEL1Qzd25hSlYvVkxQUm5VK0NrRFNhcVpwdVpscGN0bVkyQnhJUE10cFFKL0xoZFdzRS9Md3JCMVMKSjc4N2hhNDRLNnpCQUpaNHhuSHN5bXNsNk9VR1pQcGp2ZnF1c1dCM2NmbjZLeENsWHV6ZEQyVHNiS2V1SEFrNgpTUk15bzhOTy9OTTIyalNzUHZINk44TzI1SldzSmJBQ1JBRnd1ellhNnVJZVkwcW82ZG9SRitUWkpLbnZzaGQxCmFNcHBPdFBrVXUwOWd4aWx3elpPcHBwYVVBUjVKWVZjRXBYbzVjU0I5b1lyVGNyRUY2V295MVN4bGhJSzNxVm8KcGVaWUc3dlI1ZHl1U2pyL1U5QW5PTFlaZ2VBT0FGWURpQTZZSXdJREFRQUJBb0lCQUVQZXJxTUdXaWtlR0tkRQo5SWdyMjBxdktxUHlhbk12N1J5VlRIRVRMNEdwc0RLT3JjMlJJcytTaU9raGZPVXZDY3pUbnhqUXYyM24zbWN4ClZRYTJEM3dzcVhpZ0c5Y0poSVBRd2tacFh4emZkZ29WVzk0d1JqRjRMVUxWUWFXVy9WR2FhTnE5TCthdG0zZEQKbzJqOUFPaUQwKzR3OXZTakIyTm9SZ08yTExGcktwOGN2RFFSZWJBcS94anlHQ1NvQkNHMFBJcnR1YklRSkFLVApjaGpFK3U5dXdwd0JzUitkc3lUMi9kSG9YR01XZHI0WHZqcmNoSm04eFpEZmdkczFNMnQ1WXNTYVM4dUFWaWZOClJGNTl3MkJicmZkRERUdnJBcFp1QlQ1TnFsVGw0eVlrLzZORVlzMUEvTjNuOG0yT0wvQWNydS9RR1diUnViVGIKdWJRUGRkRUNnWUVBMHpVOXZhU2QyUnBWQ3R6QVQ5bXU2SldvVDlDNWZqTEM3YVZpVU1rNUhDNXNNZlZuM0JpYgpPU1R0TXNNbGJHWld5a2hPL21Pa1NvYU5RejRPZ2FURG5GL3pmU2M1TWJoQ3cwWWZoVkZ4NHFlWDVDS1lydGduCm16S2ZQZ2d5aWQwZE9VeGY3cDQ3Smd3VXVlVmtLNjBTNHVLcmlPVzN5T3FjUzRYdTR6bTgrRGNDZ1lFQTlIVjIKakdXR05RdTdsVVBWNFBVTlZjalBlbkxPcElMUU1JZFNLb1lsVUJDRXRCQ0ZPaFRXbzZBZ2NkdE4yWlhUbjhEegoyZlZtWXlvYVkxcmdVOGkwdjNZQ2plcXJtMW0rODZYc0hlUHFseFdnbVQ1UVNWK21NZlNNb1l3eHhhRWlhZStZCjB0K2ZEWXdGbW9pWk1iQ0k0VlRLRm8yQ0hxU2xwNFNUOHdPMmtYVUNnWUFDTmZaMWU3bWpRaUZOd2MzSmlDL0sKZzNhRmoxdkJ0R3BSN244KzlUeEJ6VUtZcTBieENOam5Ham5aWkMyS0d2QWhvZXdod1kxQXNuUGNGbFEwaXpMNAoraEFrYVRxeUNJbTZYWXVLNjdWVGVBbWcrN081Y00zSlZCaFNuK2RYaGhiK09JeHdoUHQ5aEhiYkUwbWZJMnFsCk1WWTJVcUUvMnlUVHJZMDRsNndndFFLQmdCL3pzbmtMVkExZTZUZkxWQXRCUEdyNEFsWm81eVdOaTVTc08wc2YKbVlUcmc4emRVK3lSaUxSK1czOUdRTml0d3FsZzJQNm1HcW5mZU85L2swNmdMeS9QUnVveHdCaGdGSnRZRnBLWgpsYklGdTZZTUJRWnlJQkRyZSs0cG10L1AvZVdHMFp6T2FjV2xoWjM3T0xyTDdqZzFrdXg3dG9RMjFRZ2VSaEEvCmJmOTVBb0dBZUtnQXh0Qk5CaFlaNWVLdU1ra0o4b2lhMDFwYmhUNzRrM3VabnpLOEJDUHNFT1p4RzZYNEtpVXYKajRuUzhPYjYvU0RCSGttRU4yVVlLWTNibnVJS1ZkZk5lblI3VFlLekZZcTJSOG1Jc0hQRkozSXlMYXNRMFZMbApGM2oyUGpzTWNZZG5wWlk3ams4S21ZallSLzlTUXZVSEg1Lzdxa2lKWVMxMDdlRHZoaWc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRU1BlUEtTR1c1Nlc5VnBYOFNuK21FekFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCbGJHRnpkR2xqYzJWaGNtTm9MV05oTUI0WERUSTBNRFl4TlRJek1qa3pObG9YRFRJMQpNRFl4TlRJek1qa3pObG93R3pFWk1CY0dBMVVFQXhNUVpXeGhjM1JwWTNObFlYSmphQzFqWVRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1DaW1SNnRsWDRQekxiRFR4VG9kQy9kUVVGK0Nmd0kKTGhXRkFJZlpVYnNNTUNzYzEyRkEwRVhJVHNHc2draWk5NllQQ1VvbWRGNjY3eVpqR2RUSGoyMjFlZmZXNVJQVgplWncwSXJsV0ZZUS9RS3hONWszeEZiRnlkUTBRM1hZbytJNk11cGNMUGZlbWtma2JjcFJEQjVBUkZTWjdkaTltCkZyRFEwTG53VHN4STBvdUs4NFNtN1hheDhkMkJCL0VEK0ZFS0hPUWdDRDBuaEJqSDhZdUlSSU1ZcWhQVnh5eTQKOGlWMmVqZlVxejVFSXVSTmp1NGo0bUdIanpxZzVLZWtCSTBkaVltbzQ2TXlaQ0ZuUk5kcHlyYUxLd2xjRGVldwpoaU1uN2JremloVDI3WHAvUnNrUXk4SGtocDhjNnAwL2NMR1ViYndFZVBRZzR6SUVuTmVVYVUwQ0F3RUFBYU5oCk1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLa01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUK0w4TFk4TWNwK1FGYURYalRRWmtqek8vRwowekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQ3FsbWtCZ0x3TFVMaVkxLzFwdkxGYTBJOTVCRkxNZVByY0ZzCmFNd2dRQ2kyTm05NFAzRzhpRDZZbFFUQW51KzMwYXlPTHpNaDFsOFpsZzZUMEEwdE03dlZTTFRkR0JwcFNrUmUKL3VBY3BLd1R3N2Z4Z0Q5RWcvUnVDYTh1aU5aTjhvRlR4aXEwcmc1NkM3R09KcC9JOVJIVHhLUDFBOVVHUHRCagpNNndkeFdMYitTT1BFblNtMHlBWlNUQ0laemh3RHhQQ3daTUNvbFM4eUYvWkxhaWM1bmQ2dDBhQ0k3cEp3WDlGCld1RitDZlYyNGFIZzBscEpSVXpJWUhnOVBBNW1KSCtjNGZUZ3RkWW12am5taFlhTXBqUmFaNmJzRitDdDd3M08KNVR0NmErbFFyN0pHaEdIUlk5cnRGR3ZCa1h6ZDVaZXZNbU1WeUJxMGFadVlWRklhaEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: elasticsearch/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-master-credentials
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "elasticsearch"
    app: "elasticsearch-master"
type: Opaque
data:
  username: ZWxhc3RpYw==
  password: "bVgwT2NsWFpNcHkyWEY0UQ=="
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    release: "my-release"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  publishNotReadyAddresses: false
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "elasticsearch-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "8"
spec:
  serviceName: elasticsearch-master-headless
  selector:
    matchLabels:
      app: "elasticsearch-master"
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-master
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
  template:
    metadata:
      name: "elasticsearch-master"
      labels:
        release: "my-release"
        chart: "elasticsearch"
        app: "elasticsearch-master"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "elasticsearch-master"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
        - name: elasticsearch-certs
          secret:
           secretName: elasticsearch-master-certs
      enableServiceLinks: true
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          {}

      containers:
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          exec:
            command:
              - bash
              - -c
              - |
                set -e

                # Exit if ELASTIC_PASSWORD in unset
                if [ -z "${ELASTIC_PASSWORD}" ]; then
                  echo "ELASTIC_PASSWORD variable is missing, exiting"
                  exit 1
                fi

                # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=1s" )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Elasticsearch Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                  local path="${1}"
                  local args="${2}"
                  set -- -XGET -s

                  if [ "$args" != "" ]; then
                    set -- "$@" $args
                  fi

                  set -- "$@" -u "elastic:${ELASTIC_PASSWORD}"

                  curl --output /dev/null -k "$@" "https://127.0.0.1:9200${path}"
                }

                if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  HTTP_CODE=$(http "/" "-w %{http_code}")
                  RC=$?
                  if [[ ${RC} -ne 0 ]]; then
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with RC ${RC}"
                    exit ${RC}
                  fi
                  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
                  if [[ ${HTTP_CODE} == "200" ]]; then
                    exit 0
                  elif [[ ${HTTP_CODE} == "503" && "8" == "6" ]]; then
                    exit 0
                  else
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
                    exit 1
                  fi

                else
                  echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" "--fail" ; then
                    touch ${START_FILE}
                    exit 0
                  else
                    echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                    exit 1
                  fi
                fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,"
          - name: node.roles
            value: "master,data,data_content,data_hot,data_warm,data_cold,ingest,ml,remote_cluster_client,transform,"
          - name: discovery.seed_hosts
            value: "elasticsearch-master-headless"
          - name: cluster.name
            value: "elasticsearch"
          - name: network.host
            value: "0.0.0.0"
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-master-credentials
                key: password
          - name: xpack.security.enabled
            value: "true"
          - name: xpack.security.transport.ssl.enabled
            value: "true"
          - name: xpack.security.http.ssl.enabled
            value: "true"
          - name: xpack.security.transport.ssl.verification_mode
            value: "certificate"
          - name: xpack.security.transport.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.transport.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.transport.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
          - name: xpack.security.http.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.http.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.http.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
        volumeMounts:
          - name: "elasticsearch-master"
            mountPath: /usr/share/elasticsearch/data
          - name: elasticsearch-certs
            mountPath: /usr/share/elasticsearch/config/certs
            readOnly: true
---
# Source: elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-abihk-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  containers:
  - name: "my-release-fjgch-test"
    env:
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elasticsearch-master-credentials
            key: password
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
    imagePullPolicy: "IfNotPresent"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail --cacert /usr/share/elasticsearch/config/certs/tls.crt -u "elastic:${ELASTIC_PASSWORD}" https://'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
    volumeMounts:
      - name: elasticsearch-certs
        mountPath: /usr/share/elasticsearch/config/certs
        readOnly: true
  restartPolicy: Never
  volumes:
    - name: elasticsearch-certs
      secret:
        secretName: elasticsearch-master-certs
