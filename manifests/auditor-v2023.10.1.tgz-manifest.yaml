---
# Source: auditor/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-auditor
  namespace: default
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: auditor/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-auditor-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lRRVRRTk1SV2FaUFQ0a2V2dFFZMjJyekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1UWXdNRFEwTVRsYUZ3MHpOREEyTVRRd01EUTBNVGxhTUIweApHekFaQmdOVkJBTVRFbTE1TFhKbGJHVmhjMlV0WVhWa2FYUnZjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBTTYzbnVKaUFiQUpKTnc1d1lCMVdXMGF5VDg3M0xja3ZBVC9tOGVNQWJxVmZXMSsKNTNOV0JjdE1pRDNOeE1GZnlXWEFyS1JaS05MY3V2MjQ3Z1hoMFpuUEJsZ0pVeWlTM1RzUmJKaUhPdDNUSGxFNwpCSEdRUmNmbjRVU3ZISzZqSlRySHBKVjlDOTVpQ0ZGb0dlT1J0UkV1cTBocFRTcktpd3Y1K2tsZjRlSENEc2hoCm92anp3TVdtWi9xVXhmUG9hWlhndTdvMmZQTE5hejZqTFVkS1NwYWRlMVg1UktZN1VjUDZLTXRUMUZZaysyOHcKS2hVcXVHN3ZhRmR5RkVsNmVHSEs1V05RZXVjcnJWT1hFYnY1djE4VUFQeDFvTHpWK05Ba0tqc1R3U0NDcmpnSgpFVUhLbTJhT2tBS3owTFZJMGtaMDd4MUc5QkNTSXhDcDFpa2YwQVVDQXdFQUFhT0JxRENCcFRBT0JnTlZIUThCCkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIKL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVZi9SbEtvUHNMSGxYYnphVElXYzl2REtraW00d1JRWURWUjBSQkQ0dwpQSUlhYlhrdGNtVnNaV0Z6WlMxaGRXUnBkRzl5TG1SbFptRjFiSFNDSG0xNUxYSmxiR1ZoYzJVdFlYVmthWFJ2CmNpNWtaV1poZFd4MExuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBdVBhamF3ZnJocWREK2tmYnN4MXcKUlZnVGVkellhS05FUlhmREtVZTlQUVNJOU5hdmlGYkc2STZOMXJJOUFBc09nVHQ3UUV2YjJ1UkF3Z1ZJSzViUgo2dkNHcnBZTlRZenNFSkh4NFp0SjhteUhUbWtnMXR4QVRkd0kzcnRGZGhRcDJ0ektSY1VlNUc1V2pzeXhndU8vCjlrWFlEYkd1N1FBdXFHVEVWOVQ2Ny9PdkdtQWd2bHc3M09MbjFRLy9lQkhmRk5DOGhudml2RjlNbDV2dUNvV0kKYUhlMHpRLzJMU1BqeXhuaExsZHdld2drOGlrUlNoSFhyL1NhZ1pINmxmVDN0VElUSmZhSXhoSGF1V1RCRVhSUQpBZkhhSkUraU54SzBrREw0Rlh3RWVPSXp5ckVLeHVnaG4wdUhMOFBxOXZaYTc0dGxqNWprVTQ4NThtblFCTENHCmN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBenJlZTRtSUJzQWtrM0RuQmdIVlpiUnJKUHp2Y3R5UzhCUCtieDR3QnVwVjliWDduCmMxWUZ5MHlJUGMzRXdWL0paY0NzcEZrbzB0eTYvYmp1QmVIUm1jOEdXQWxUS0pMZE94RnNtSWM2M2RNZVVUc0UKY1pCRngrZmhSSzhjcnFNbE9zZWtsWDBMM21JSVVXZ1o0NUcxRVM2clNHbE5Lc3FMQy9uNlNWL2g0Y0lPeUdHaQorUFBBeGFabitwVEY4K2hwbGVDN3VqWjg4czFyUHFNdFIwcEtscDE3VmZsRXBqdFJ3L29veTFQVVZpVDdiekFxCkZTcTRidTlvVjNJVVNYcDRZY3JsWTFCNjV5dXRVNWNSdS9tL1h4UUEvSFdndk5YNDBDUXFPeFBCSUlLdU9Ba1IKUWNxYlpvNlFBclBRdFVqU1JuVHZIVWIwRUpJakVLbldLUi9RQlFJREFRQUJBb0lCQUNlZmhyTDUranpWNDl6YQpyVDZFUDlucjhudE9iQ1ltd210cTIxOUtkT0pnMlNQdDJVdUFSNmdLU1dzZlVBR0k3TCsyU09GUHZjVjlUZEpvCmFpZHllNHl4NUJObjVpcTJ5L1VRaC9KTXFYbnZoN1ltUzluQXY3OXJzUUJMV0lJWS8zL2UyS3RXeHJtZnJOeDkKeWNpWEcwL3AxQ2NUR0JtRnJWVmtXeGRKYTdDcis1UkVvYmdRQ0lRbnBWRXIwdzZkMkhyZDZEbk93bktMM25hbwpiNno4bUxTTE9Nc1BEYzhHWTdNak5PUUVqTXFoNXF4VEwzK1RkbmVRRDVCeWNEZldNcTcyTkZtRURqZmNGaVlwCjFVUlZXbW5OOGZPQjRZUHRBN0NsMkFHODlBZ0ZuWURKcDFZczFoRWlkbUM1R3VmTGsvdk5KM050NzZQTmp1MW8KcHovYkxrRUNnWUVBMzhaNVZ1V1RJOEgxdW9oUjVXM2JNcVB2WWtiTXpXRURzbHVpQjhRWmJ6N3phMElLSkREdwo0Rk15dGFZWi9uT3RMcFNTYStUeG5vRDNCMGVNdmFZYWgrV3d3aHNTV3VNV095N1VXaWR4WTV3eEdzVktLYWl0CjNMUGtnN3U5THFET0dJL2FpQVdldVRZdmJDV2I3amEvczNweUFwaXBqOVZpTFpuclU1b3VBZGtDZ1lFQTdIeE0KaFYzNEk2SThIdkMxcFg5TzVOZ2ltbmNrZVV0UHJETkhjbThzVnNaU3hlU1RtNVlENnRPNGZiZXVKRkhEZGY2UgpSazNWbkVzQ2R0RUJwczJoMVkrYlpSeWZuNHlJNmFQM1dOc0g5TDRjUUNOeVNBeFNCRVlkenRzdjBQWHplODdyClBncFNNT1NYanhMSUs0T1VhaXU2ZU1EOVdyMXN5NkJvUU1QTWVBMENnWUJPTVJmdEdVTVUxNDE1cEhDWmJvMk4KWUdNaFFBUUlMOElPN0ozdGdNUXlieGkzZmRmMVZYU1ZyZnltSkdnbzFWcktUL2ZwNDVIYUJNNU1xTit3MVAybwpSc1pBelJ6WXpValRYVVd1U3VJQUlHKzRId0FQRm5YS0RNSG9sZzFBNGNlaUpZSUN6WlBzdTlaT1A4WUFzdmpCClNpUFViR3V6YXFobnJzVGY3WnZ0NFFLQmdEZ0lHM2xlRW5VZTgyL0JTTWkxcVZPL2dqTm5GMVZGNnRLNk02dUIKZTlmemxaa2QxM3Q5eDkvVDJscXZNcXVZVTkrWk9ZS1czbzN4bDl2ZkdhMFQrOHhHQW1PcXJJZDVITmQrNmhRNwprVjhEekYzR0NFWFo1WFR0eUJKRERNbE4vU3JRbEJ4WEJiSmY5eWtISWpadExyVVpOMDExTEpKYlgzTy94ZlBTCmNKZmhBb0dCQU5hSTY2VkFWUjJScDRTNGxEV1ZRRnBmWjhPc2ErUWRrV0ZPR1ZnZSt4d3NVUUNwN3grM3pROGMKeTdnazR4QWRuZkJwMk1RWHZRZ1BNK1h6clBQNWswOFBCaXpwc1lTSzJtQXJ4U2F4ZHNQSmd0MjFUaVh4VGpUNQp1WFdFRmRhOUxnbndJMlZwRWtiMEw3R2JTcGFseHJRVzV0MCtZeVZpUzFBczJ1UFdKM3E2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: auditor/templates/policy-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-auditor-policy
  namespace: default
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  "default.yaml": YXBpVmVyc2lvbjogYXVkaXRvci5rdWJlb3BzLnRvb2xzL3YxYWxwaGExCmtpbmQ6IEF1ZGl0UmVnaXN0cmF0aW9uCnJlc291cmNlczoKLSBncm91cDogYXBwcwogIHJlc291cmNlczoKICAtIGRlcGxveW1lbnRzCi0gZ3JvdXA6ICIiCiAgcmVzb3VyY2VzOgogIC0gcG9kcwogIC0gbmFtZXNwYWNlcwogIC0gc2VjcmV0cwotIGdyb3VwOiBhcHBjYXRhbG9nLmFwcHNjb2RlLmNvbQogIHJlc291cmNlczoKICAtIGFwcGJpbmRpbmdzCi0gZ3JvdXA6IGNhdGFsb2cua3ViZWRiLmNvbQogIHJlc291cmNlczoKICAtIGV0Y2R2ZXJzaW9ucwogIC0gbXlzcWx2ZXJzaW9ucwogIC0gcmVkaXN2ZXJzaW9ucwogIC0gbW9uZ29kYnZlcnNpb25zCiAgLSBwb3N0Z3Jlc3ZlcnNpb25zCiAgLSBtZW1jYWNoZWR2ZXJzaW9ucwogIC0gZWxhc3RpY3NlYXJjaHZlcnNpb25zCi0gZ3JvdXA6IGNsb3VkLmJ5dGVidWlsZGVycy5kZXYKICByZXNvdXJjZXM6CiAgLSBjcmVkZW50aWFscwogIC0gbWFjaGluZXR5cGVzCiAgLSBjbG91ZHByb3ZpZGVycwogIC0gY2x1c3RlcmluZm9zCiAgLSBjbHVzdGVydXNlcmF1dGhzCiAgLSBjbHVzdGVyYXV0aGluZm90ZW1wbGF0ZXMKLSBncm91cDoga3ViZWRiLmNvbQogIHJlc291cmNlczoKICAtIGV0Y2RzCiAgLSBteXNxbHMKICAtIHJlZGlzZXMKICAtIG1vbmdvZGJzCiAgLSBzbmFwc2hvdHMKICAtIG1lbWNhY2hlZHMKICAtIHBvc3RncmVzZXMKICAtIGVsYXN0aWNzZWFyY2hlcwogIC0gZG9ybWFudGRhdGFiYXNlcwotIGdyb3VwOiBrdWJlcGFjay5jb20KICByZXNvdXJjZXM6CiAgLSBwbGFucwogIC0gcHJvZHVjdHMKLSBncm91cDogbW9uaXRvcmluZy5hcHBzY29kZS5jb20KICByZXNvdXJjZXM6CiAgLSBpbmNpZGVudHMKICAtIHBvZGFsZXJ0cwogIC0gbm9kZWFsZXJ0cwogIC0gY2x1c3RlcmFsZXJ0cwogIC0gc2VhcmNobGlnaHRwbHVnaW5zCi0gZ3JvdXA6IHN0YXNoLmFwcHNjb2RlLmNvbQogIHJlc291cmNlczoKICAtIHRhc2tzCiAgLSByZXN0aWNzCiAgLSBmdW5jdGlvbnMKICAtIHJlY292ZXJpZXMKICAtIHJlcG9zaXRvcmllcwogIC0gYmFja3VwYmF0Y2hlcwogIC0gYmFja3Vwc2Vzc2lvbnMKICAtIHJlc3RvcmVzZXNzaW9ucwogIC0gYmFja3VwYmx1ZXByaW50cwogIC0gYmFja3VwY29uZmlndXJhdGlvbnMKLSBncm91cDogdm95YWdlci5hcHBzY29kZS5jb20KICByZXNvdXJjZXM6CiAgLSBpbmdyZXNzZXMKICAtIGNlcnRpZmljYXRlcw==
---
# Source: auditor/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-auditor
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: auditor/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-auditor-apiserver-auth-delegator
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-auditor
  namespace: default
---
# Source: auditor/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-auditor
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-auditor
subjects:
- kind: ServiceAccount
  name: my-release-auditor
  namespace: default
---
# Source: auditor/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-auditor-license-checker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-auditor
  namespace: default
---
# Source: auditor/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-auditor-license-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-auditor
  namespace: default
---
# Source: auditor/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-auditor-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-auditor
  namespace: default
---
# Source: auditor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-auditor
  namespace: default
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
---
# Source: auditor/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-auditor
  namespace: default
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: auditor
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auditor
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: 2927b5369bfff7eb85deb8c122a5266458f5b36b64f66c2bcbcce22caece098c
    spec:
      
      serviceAccountName: my-release-auditor
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        image: ghcr.io/appscode/auditor:v0.0.1
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --policy-file=/var/policy/default.yaml
        ports:
        - containerPort: 8443
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        - name: policy-file
          mountPath: /var/policy
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-auditor-apiserver-cert
      - name: policy-file
        secret:
          defaultMode: 420
          secretName: my-release-auditor-policy
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
---
# Source: auditor/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: auditor/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: auditor/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
