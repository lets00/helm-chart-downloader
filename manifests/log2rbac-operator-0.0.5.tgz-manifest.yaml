---
# Source: log2rbac-operator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: log2rbac
---
# Source: log2rbac-operator/templates/crds/rn.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: rbacnegotiations.kremser.dev
spec:
  group: kremser.dev
  names:
    kind: RbacNegotiation
    listKind: RbacNegotiationList
    plural: rbacnegotiations
    shortNames:
    - rn
    - rbacn
    singular: rbacnegotiation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.for.kind
      name: kind
      type: string
    - jsonPath: .spec.for.name
      name: name
      type: string
    - jsonPath: .spec.role.name
      name: role
      type: string
    - jsonPath: .spec.status.status
      name: status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: RbacNegotiation is the Schema for the rbacnegotiations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RbacNegotiationSpec defines the desired state of RbacNegotiation
            properties:
              for:
                description: ForSpec identifies the application of which the logs will be used for RBAC negotiation
                properties:
                  kind:
                    enum:
                    - Deployment
                    - deployment
                    - deploy
                    - ReplicaSet
                    - replicaset
                    - rs
                    - DaemonSet
                    - daemonset
                    - ds
                    - StatefulSet
                    - statefulset
                    - ss
                    - Service
                    - service
                    - svc
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                  podSelector:
                    additionalProperties:
                      type: string
                    description: this can override the real pod selector that's associated for the deployment,rs,ds,ss or svc
                    type: object
                required:
                - name
                type: object
              role:
                description: RoleSpec identifies the role that would be updated by the operator
                properties:
                  createIfNotExist:
                    type: boolean
                  isClusterRole:
                    type: boolean
                  name:
                    type: string
                required:
                - name
                type: object
              serviceAccountName:
                description: this can override the real service account that's specified in the deployment,rs,ds or ss
                type: string
            required:
            - for
            type: object
          status:
            description: RbacNegotiationStatus defines the observed state of RbacNegotiation
            type: object
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: log2rbac-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: log2rbac-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
# Source: log2rbac-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: log2rbac-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: log2rbac-role
subjects:
- kind: ServiceAccount
  name: log2rbac
  namespace: default
---
# Source: log2rbac-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: log2rbac
  name: log2rbac-metrics
spec:
  type: NodePort
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 30081
  selector:
    control-plane: log2rbac
---
# Source: log2rbac-operator/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    control-plane: log2rbac
  name: log2rbac
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: log2rbac
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: log2rbac
        id: log2rbac
    spec:
      containers:
      - image: jkremser/log2rbac:v0.0.5
        name: manager
        imagePullPolicy: Always
        command:
        - /log2rbac
        args:
        - --health-probe-bind-address=:8081
        - --zap-encoder=console
        - --leader-elect
        - --metrics-bind-address=127.0.0.1:8080
        env:
        - name: COLORS
          value: "true"
        - name: NO_BANNER
          value: "false"
        - name: SHOULD_RESTART_APP_PODS
          value: "true"
        - name: SYNC_INTERVAL_AFTER_NO_RBAC_ENTRY_MINUTES
          value: "5"
        - name: SYNC_INTERVAL_AFTER_NO_LOGS_SECONDS
          value: "30"
        - name: SYNC_INTERVAL_AFTER_POD_RESTART_SECONDS
          value: "20"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      securityContext:
        null
      serviceAccountName: log2rbac
      terminationGracePeriodSeconds: 10
