---
# Source: kadalu-operator/templates/operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kadalu-operator
  namespace: default
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: kadalu-operator/templates/operator/serviceaccount.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kadalu-csi-nodeplugin
  namespace: default
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: kadalu-operator/templates/operator/serviceaccount.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kadalu-csi-provisioner
  namespace: default
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: kadalu-operator/templates/operator/serviceaccount.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kadalu-server-sa
  namespace: default
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: kadalu-operator/templates/csi-nodeplugin/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kadalu-csi-nodeplugin
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
# Source: kadalu-operator/templates/operator/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kadalu-operator
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - storage.k8s.io
      - csi.storage.k8s.io
    resources:
      - csidrivers
      - storageclasses
    verbs:
      - create
      - delete
      - get
      - list
      - update
  - apiGroups:
      - kadalu-operator.storage
    resources:
      - kadalustorages
    verbs:
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
---
# Source: kadalu-operator/templates/operator/rbac.yaml
# CSI External Attacher
# https://github.com/kubernetes-csi/external-attacher/blob/master/deploy/kubernetes/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-csi-external-attacher
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
---
# Source: kadalu-operator/templates/operator/rbac.yaml
# CSI External Provisioner
# https://github.com/kubernetes-csi/external-provisioner/blob/master/deploy/kubernetes/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-csi-external-provisioner
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  # PUBLISH_UNPUBLISH_VOLUME capability
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch"]
---
# Source: kadalu-operator/templates/operator/rbac.yaml
# CSI External Resizer
# https://github.com/kubernetes-csi/external-resizer/blob/master/deploy/kubernetes/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-csi-external-resizer
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
---
# Source: kadalu-operator/templates/csi-nodeplugin/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-csi-nodeplugin
  namespace: default
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: kadalu-csi-nodeplugin
    namespace: default
roleRef:
  kind: ClusterRole
  name: kadalu-csi-nodeplugin
  apiGroup: rbac.authorization.k8s.io
---
# Source: kadalu-operator/templates/operator/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-operator
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: kadalu-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: kadalu-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: kadalu-operator/templates/operator/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-csi-external-attacher
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: kadalu-csi-provisioner
    namespace: default
roleRef:
  kind: ClusterRole
  name: kadalu-csi-external-attacher
  apiGroup: rbac.authorization.k8s.io
---
# Source: kadalu-operator/templates/operator/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-csi-external-provisioner
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: kadalu-csi-provisioner
    namespace: default
roleRef:
  kind: ClusterRole
  name: kadalu-csi-external-provisioner
  apiGroup: rbac.authorization.k8s.io
---
# Source: kadalu-operator/templates/operator/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-csi-external-resizer
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: kadalu-csi-provisioner
    namespace: default
roleRef:
  kind: ClusterRole
  name: kadalu-csi-external-resizer
  apiGroup: rbac.authorization.k8s.io
---
# Source: kadalu-operator/templates/operator/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kadalu-operator
  namespace: default
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources:
      - configmaps
      - persistentvolumes
      - pods
      - pods/exec
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
  - apiGroups:
      - ""
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - update
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - patch
---
# Source: kadalu-operator/templates/operator/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kadalu-operator
  namespace: default
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: kadalu-operator
    namespace: default
roleRef:
  kind: Role
  name: kadalu-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: kadalu-operator/templates/operator/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kadalu-operator
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kadalu-operator
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http-api
      port: 8050
      targetPort: http-api
      nodePort: null
  selector:
    app.kubernetes.io/name: kadalu-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: kadalu-operator
---
# Source: kadalu-operator/templates/csi-nodeplugin/daemonset.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kadalu-csi-nodeplugin
  namespace: default
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kadalu
    app.kubernetes.io/component: csi-driver
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kadalu-operator
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: csi-driver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kadalu-operator
        helm.sh/chart: kadalu-operator-1.2.4
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: kadalu
        app.kubernetes.io/component: csi-driver
      namespace: default
    spec:
      serviceAccountName: kadalu-csi-nodeplugin
      containers:
        - name: csi-node-driver-registrar
          image: docker.io/raspbernetes/csi-node-driver-registrar:2.0.1
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/kadalu /registration/kadalu-reg.sock"]
          env:
            - name: ADDRESS
              value: /plugin/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/kadalu/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: registration-dir
              mountPath: /registration
        - name: kadalu-nodeplugin
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: docker.io/kadalu/kadalu-csi:1.2.0
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://plugin/csi.sock
            - name: KADALU_VERSION
              value: "1.2.0"
            - name: K8S_DIST
              value: "kubernetes"
            - name: VERBOSE
              value: "no"
            - name: CSI_ROLE
              value: "nodeplugin"
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - name: glusterfsd-volfilesdir
              mountPath: "/var/lib/gluster"
            - name: gluster-dev
              mountPath: "/dev"
            - name: varlog
              mountPath: /var/log/gluster
            - name: csi-dir
              mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
              mountPropagation: "Bidirectional"
        - name: kadalu-logging
          image: docker.io/library/busybox
          command: ["/bin/sh"]
          args: ["-c", "while true; do logcnt=$(/bin/ls /var/log/gluster/ | wc -l); if [ ${logcnt} -gt 0 ]; then break; fi; sleep 5; done; tail -F /var/log/gluster/*.log"]
          volumeMounts:
            - name: varlog
              mountPath: "/var/log/gluster"
      volumes:
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/kadalu
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: glusterfsd-volfilesdir
          configMap:
            name: "kadalu-info"
        - name: gluster-dev
          hostPath:
            path: "/dev"
        - name: varlog
          emptyDir: {}
        - name: csi-dir
          hostPath:
            path: /var/lib/kubelet/plugins/kubernetes.io/csi/
            type: DirectoryOrCreate
---
# Source: kadalu-operator/templates/operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kadalu-operator
  namespace: default
  labels:
    app.kubernetes.io/name: kadalu-operator
    helm.sh/chart: kadalu-operator-1.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kadalu
    app.kubernetes.io/component: kadalu-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kadalu-operator
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: kadalu-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kadalu-operator
        helm.sh/chart: kadalu-operator-1.2.4
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: kadalu
        app.kubernetes.io/component: kadalu-operator
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8050"
    spec:
      serviceAccountName: kadalu-operator
      containers:
        - name: kadalu-operator
          securityContext:
            capabilities: {}
            privileged: true
          image: docker.io/kadalu/kadalu-operator:1.2.0
          imagePullPolicy: IfNotPresent
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "kadalu-operator"
            - name: IMAGES_HUB
              value: "docker.io"
            - name: DOCKER_USER
              value: "kadalu"
            - name: KADALU_VERSION
              value: "1.2.0"
            - name: KADALU_NAMESPACE
              value: "default"
            - name: KUBELET_DIR
              value: "/var/lib/kubelet"
            - name: K8S_DIST
              value: "kubernetes"
            - name: VERBOSE
              value: 
          ports:
            - containerPort: 8050
              name: http-api
              protocol: TCP
