---
# Source: alertmanager-discord/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-alertmanager-discord
  labels:
    helm.sh/chart: alertmanager-discord-0.3.1
    app.kubernetes.io/name: alertmanager-discord
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: alertmanager-discord/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-alertmanager-discord
  labels:
    helm.sh/chart: alertmanager-discord-0.3.1
    app.kubernetes.io/name: alertmanager-discord
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9094
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: alertmanager-discord
    app.kubernetes.io/instance: my-release
---
# Source: alertmanager-discord/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-alertmanager-discord
  labels:
    helm.sh/chart: alertmanager-discord-0.3.1
    app.kubernetes.io/name: alertmanager-discord
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: alertmanager-discord
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: alertmanager-discord
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-alertmanager-discord
      securityContext:
        fsGroup: 2000
      containers:
        - name: alertmanager-discord
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "speckle/alertmanager-discord:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 9094
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /liveness
              port: http
          readinessProbe:
            httpGet:
              path: /readiness
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          env:
            - name: CONFIGURATION_FILE_PATH
              value: /etc/alertmanager-discord/config.yaml
          volumeMounts:
            - name: alertmanager-discord-config
              mountPath: /etc/alertmanager-discord
              readOnly: true
      volumes:
        - name: alertmanager-discord-config
          secret:
            secretName: discord-config
            optional: false
---
# Source: alertmanager-discord/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: my-release-alertmanager-discord
  labels:
    helm.sh/chart: alertmanager-discord-0.3.1
    app.kubernetes.io/name: alertmanager-discord
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: alertmanager-discord
      app.kubernetes.io/instance: my-release
  endpoints:
  - port: http
---
# Source: alertmanager-discord/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-alertmanager-discord-test-connection"
  labels:
    helm.sh/chart: alertmanager-discord-0.3.1
    app.kubernetes.io/name: alertmanager-discord
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-alertmanager-discord:9094/readiness']
  restartPolicy: Never
