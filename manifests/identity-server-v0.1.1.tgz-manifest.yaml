---
# Source: identity-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-identity-server
  namespace: default
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: identity-server/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-identity-server-apiserver-cert
  namespace: default
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkakNDQWw2Z0F3SUJBZ0lSQU0wRVN2VjlmYWZSbWJQUW1CMTRiT2d3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qRTJNREV4TURRM1doY05NelF3TmpFME1ERXhNRFEzV2pBbApNU013SVFZRFZRUURFeHB0ZVMxeVpXeGxZWE5sTFdsa1pXNTBhWFI1TFhObGNuWmxjakNDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTkRhaWhFTVdEU1RuOVlGREN1OUhBaWN0QVV3azBoOXk4WmYKbXBwNlhRNk94L0V5VVJqQXROTU4vUS9GeURFUjl3bWlqVDlPNnBDc1NSMXRVeVF3MCtKa2pEa3ZlZC9PTS9qMgpqQ2NERldPbzZOK2NvWm01Q1V6Smg2RkhRNElIRlJKUWo4TlJER3phZmRHSTN6YWJzOW5IelhLTnh1dkpMbmtICnZMeUlzaVNidEVmcm1qV0NIemxzOW51WFc0NCswV0swR2ZFTlR3bE5ZYUROdTFrYVhMTmFXeGhOS2pzK1BjQ0wKVmdOZjFOKzI3ODZiZ0N3RjFMbmpGd0pUeFByVVVSTnlLTEtRYXBOVkM3akFnUThDT2hreVB1TWFFcXN5dnBCegpuQ1FwcmllT1VNdldtOGdONlp4Mis1V1lNWldYcjdLSndMYnNtYjNRdnhZS2ZHZXArTzhDQXdFQUFhT0J1RENCCnRUQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVOHErampiNytIS2NYbU4rdjJKV2xNSEs0YUxBdwpWUVlEVlIwUkJFNHdUSUlpYlhrdGNtVnNaV0Z6WlMxcFpHVnVkR2wwZVMxelpYSjJaWEl1WkdWbVlYVnNkSUltCmJYa3RjbVZzWldGelpTMXBaR1Z1ZEdsMGVTMXpaWEoyWlhJdVpHVm1ZWFZzZEM1emRtTXdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQU1yVFRDTWYyQUFpOFRQbE9YQ01rSXgrRVR0Qi9weHFncXd5UlZKK3NGOSs3YmIxS2plNworb0QzVVpLSFpaeGpzMGVubXdJbUNDQjM5RzJlMUlTSy9wOWZ5RmI0VWM5QWVzMHhraFdmaVM4aituT09oaVFuCm80R0R1SUp4R3BnMUEyajJDZ2c5N0Vnd3NpM1BSRUpsWTBiNG5mZGVNTDlmdVpGYm1GV3FkSjJMcGc1UmhqaGUKb2Y1NWpIaTRWMU8vRGF0bFk4MXgwN3YrdW5Ndng0c1RBMWlWdkdMeENPUHdQS2FheHh6bmhmbGkwU0xWalc5WQoyQ3NwWVNabHpkcDRhYVptWHBOZlFHUVhibmxuMUp0c1NYbmlUc0tHRjFDM3VmV0IyZWhCQkJvd3RRRTBUa3NBClFsRDV1d1FqWVA4NnNtUERvWFh5cFY4cG5rMENmSTFqNThJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBME5xS0VReFlOSk9mMWdVTUs3MGNDSnkwQlRDVFNIM0x4bCthbW5wZERvN0g4VEpSCkdNQzAwdzM5RDhYSU1SSDNDYUtOUDA3cWtLeEpIVzFUSkREVDRtU01PUzk1Mzg0eitQYU1Kd01WWTZqbzM1eWgKbWJrSlRNbUhvVWREZ2djVkVsQ1B3MUVNYk5wOTBZamZOcHV6MmNmTmNvM0c2OGt1ZVFlOHZJaXlKSnUwUit1YQpOWUlmT1d6MmU1ZGJqajdSWXJRWjhRMVBDVTFob00yN1dScGNzMXBiR0UwcU96NDl3SXRXQTEvVTM3YnZ6cHVBCkxBWFV1ZU1YQWxQRSt0UlJFM0lvc3BCcWsxVUx1TUNCRHdJNkdUSSs0eG9TcXpLK2tIT2NKQ211SjQ1UXk5YWIKeUEzcG5IYjdsWmd4bFpldnNvbkF0dXladmRDL0ZncDhaNm40N3dJREFRQUJBb0lCQVFERDZYeEI2YmFEKzBhZgoyRFJHZ3lwYzJjSDBiRkI4VzZSZS9TZGxhUXNKc04zVlgwRzdXbWxFNFlaVTJVNmsyUmxHckhpYXZraENWWnB3ClJERU5iZEFVT2dWZlR5MmZ4eW54akRTRUU5eG9rL1YrYk1zYUMveXhUd292TzA0VUZ0aXBTWERSNHFFcEt2dUQKSmtWY1VFb3hLNytJaVgzamgrQlVIL0huV01MaW1vcDNqaHBpYmtndjRvcVNNejNya3RzR25Ob3pJTVd0MkRrdwpHUWNDb2pwVE9JZXM5ZGQ5OWVvRGxEY0FiNFZaRVhWK0o2MGhWcmcvT3VXc3RxRzBJQ3hVTGNWS2RMcVpJV3hQCjFIcUNHM2hvTE5aTmlKbkZPVnlFa3NvbHNoWVFjVXRIQ2ovVmFpWmFYR2tYUXVLUDVaTktlRCtLT3NpYkVoRlMKbGpFNEdRWWhBb0dCQU9SMThVclQ0Z0NQMHg1ZXNnOUIzOXZWSFJwMHdDK1Q3SnF1WDNmRm5EaVk1dk5hRmVycQp6RG1NUWdCTDB4azd4c0s4Qzk1UDJlaDgrTksyOW9CMDhJMkE2TXM3WU8vK0hMRjBZMXlKZHI5TS9rcC9BMlVpClZOcmJLR2szMXdnUUpVMklSa1psWThyUG5EN0Z1bUpQZ3cwSWtRNDE4V2FCSVBLL05ibGlBQUlEQW9HQkFPb0gKaTBSZWNQUURCVUVkYTlHWGdjdHI4WUliN2IzNHJTKzN0TFd4cTM1cE9lQjdsUFVLdXZsSnFpYVRRcStDL3V4bApOVEF3Wi9zalJGdzNIL29TWWdWN2VZU3N5NjdUN3V4R3VjL2NTU2gyekQwSjNOa1Z1SjdvTjMvR3JXRkZiNWZvCnBPQk9MMWZkV1pVSllnSUlUTEIwcDVZZ2RpSUtGcXRzSXlabmc0K2xBb0dBRkI0YXFGY3VJSlNKcDdQNUJBVHQKL0lLd3RHS3hoYjhGNTcwUkpRL2VxTkUyRFJuU3NrUUl4Y3lIQjFXbCtpUGNaY3QvVkEwK0NBM3hMMFR6UWU2SwpQRHVzeERDdllaTEQzaEI4cTJwamJZY1BJV283MTAwRm9kd0ltL05SMlNEcTEvLzNDRDNuWXJXVGNhZWh1UVI5CmFzbGxWSllGY3R4T0ZYSW0vZk1XUXhjQ2dZRUF1MlY3RVM0R2lIMzZzUjliL0tLekhpNjdYcEg2bDBvUGM4eEkKZWMxaEk0SWpCQ3d4Sk42SXhhRkZERXFTOVhPUnFiMkpENk5UUC9nSGYwZnM1UlBmUmNDUGw3dStCYXBUQVFQSgpPamFNcGtncVZ4NFVxQWdLbzhRUzNOQThlVTFlaEdlWHpyME1qL0VCRUtSSXhKUGN4TmRFY3FSZnMvWWNIUHdrClVWWkdOTGtDZ1lFQXZ4U3JhQmxZcmxadDhYb001NHhKUFpwcUxaY3BPUHJFYmtPaVhrbm9PYzMyWnEvNFZxa3kKZGkyYzVPclJybnlueEphaCtRRDF4M2ZHcDlUOWdMVWYybVJpU1pkcUlvVXB4eXhzKzFZcEhaekwvMHZ3RTJRMwpvNm5aYmM2NG5XWjNEMlF2bnpFTmM1Z3lvQWMzZW5iaHlIcVFaRno3ZDl4QTZSN3BPL2U2bE1jPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: identity-server/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-identity-server
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - identity.kubeshield.io
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["list"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["get", "list", "watch"]
---
# Source: identity-server/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-identity-server-apiserver-auth-delegator
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-identity-server
  namespace: default
---
# Source: identity-server/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-identity-server
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-identity-server
subjects:
- kind: ServiceAccount
  name: my-release-identity-server
  namespace: default
---
# Source: identity-server/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-identity-server-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-identity-server
  namespace: default
---
# Source: identity-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-identity-server
  namespace: default
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
---
# Source: identity-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-identity-server
  namespace: default
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: identity-server
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: identity-server
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: 4b6cfb241852c7357c30bdc6be7686d4137ec5a427a833ad07af5e2d66a1ef3c
    spec:
      serviceAccountName: my-release-identity-server
      containers:
      - name: operator
        securityContext:
          {}
        image: kubeshield/identity-server:v0.1.1
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        ports:
        - containerPort: 8443
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-identity-server-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
---
# Source: identity-server/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.identity.kubeshield.io
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  group: identity.kubeshield.io
  version: v1alpha1
  service:
    namespace: default
    name: my-release-identity-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUxYcUVJVjJ6c2dOYnNnQnowc3pwL2d3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qRTJNREV4TURRM1doY05NelF3TmpFME1ERXhNRFEzV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmtzCnUzSkQ0TW5pNCsya3dLdEhYYjhGM1NNRHUwdjczUEIrNXdGRzFRNGx4SVBnZHlqeW9rRi9EbExXUDBTeUFhRlgKRXQ1b3A0WnY0Y01Rd3dJeDZWZDVNNTRJMm1QWWM2YVZHQ2Q2Vi82TWdlNGljOG9xdWY2ekRkdXVUUjY5L1BrWAptYWNBWjgwcmRadHR1Z2NqZ1orVWRjR1ZoWGEwMkJSRjVkNHNZUjBZbmhxNGhtRzFnWUZMVDFEQjZuUUdSRVBUCkw0WXlXVTRkUkJkTXdkbWgvUHBxSFdPc3AwSnpXaDNvR1VQZElVcU13aHRkSm5LU0lKVUk3cGFSSm9oSWlxYlAKZGFsc3lONjc1ckV4V05hOXVvb1RNQnh5S3JUaXNVUEFmbmIvcjVVeFdrcU9FZGp6N04ycTJILy96TGpBSWhobQpzd0RlaWcyMUQxaGJFOXYydmRrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJUeXI2T052djRjcHhlWTM2L1lsYVV3Y3Job3NEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFxMWxqVG1EQgpPdE9DWG9xOGZNbUN5N3RROHdyZ2VEbkNCVWt4K1NaSUY4dHVaK2EwK2ZZOUdBY1hLWllGbUlXaG5NTS9OTThHCkk4OVVJTGNjeEZ1TFJ2cVpmMXFmVkxhd1dtLzY0aWFsRkk5ZGdGS2VscC94UTZwb0VYVmpMaitIdkhOblY0S3gKMUNYbVk3a3NxMG01aTJHZEsyc1FsamtldzAvbjE4cVZFdmdkWVVjbnR1SzFRblVwQ09rcGk4bGxweEIzVDZRcQoxdEFtWCtTbi85Qzl0Wjd6UW0zSlhLY0haY1BFZjI0TVl0MmtzSlVFYzd3UmQvT3hxYnRnU3IwVitQSWZZOFI5CnB6YitEd1JlMVhicVppaVIxYnFZY0d4S2ZnWnlCcWpBNkZDUVhidFB3YnI2TXdPMWVJZit3MHFwUEh5dk5mWDUKaStmNXpnVDhnQVloWVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: identity-server/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeshield:identity:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - identity.kubeshield.io
  resources:
  - whoamis
  verbs: ["create"]
