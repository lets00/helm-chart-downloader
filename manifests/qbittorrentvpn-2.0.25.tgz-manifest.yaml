---
# Source: qbittorrentvpn/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-qbittorrentvpn
  labels:
    helm.sh/chart: qbittorrentvpn-2.0.25
    app.kubernetes.io/name: qbittorrentvpn
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: qbittorrentvpn/templates/configmap-liveness.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: qbittorrent-health 
data:
  liveness.sh: |
    #!/bin/bash
    DIR=/data
    numFiles=`ls $DIR | wc -l`
    echo "Numero de ficheros encontrados en la carpeta" $numFiles
    if [[ "$(curl -sL -w '%{http_code}' http://localhost:8081 -o /dev/null)" = "200"  ]];
    #if [[ $numFiles -gt 1 ]];
    then
      echo "Liveness OK!"
      echo 0
    else
      echo "Liveness failed!" 1>&2
      exit 1
    fi
---
# Source: qbittorrentvpn/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-qbittorrentvpn
  labels:
    helm.sh/chart: qbittorrentvpn-2.0.25
    app.kubernetes.io/name: qbittorrentvpn
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8118
      targetPort: 8118
      protocol: TCP
      name: privoxy
    - port: 8081
      targetPort: 8081
      protocol: TCP
      name: bittorrent-ui
  selector:
    app.kubernetes.io/name: qbittorrentvpn
    app.kubernetes.io/instance: my-release
---
# Source: qbittorrentvpn/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-qbittorrentvpn
  labels:
    helm.sh/chart: qbittorrentvpn-2.0.25
    app.kubernetes.io/name: qbittorrentvpn
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: my-release-qbittorrentvpn
  selector:
    matchLabels:
      app.kubernetes.io/name: qbittorrentvpn
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: qbittorrentvpn
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-qbittorrentvpn
      securityContext:
        {}
      volumes:
        - name: data
          hostPath:
            path: /mnt/raw-data/plex-data/qbittorrentvpn-data-downloaded
            type: Directory
        - name: downloads
          hostPath:
            path: /mnt/nvme-data/qbittorrentvpn-downloads
            type: Directory            
        - name: etc-localtime
          hostPath:
            path: /etc/localtime
        - name: scripts
          configMap:
            name: qbittorrent-scripts     
        - name: health-data
          configMap:
            name: qbittorrent-health  
            items:
              - key: liveness.sh
                path: liveness.sh
        - name: wireguard-data-airvpn
          configMap:
            name: wireguard-config-airvpn  
            items:
              - key: wg0.conf
                path: wg0.conf                
        - name: health
          emptyDir: {}                                                         
      initContainers:           
        - name: qbittorrent-scripts-config
          image: "busybox"
          command:
            - cp
          args:
            - -v
            - /in/liveness.sh
            - /out/liveness.sh
          volumeMounts:
          - name: health-data
            mountPath: /in
          - name: health
            mountPath: /out  
        - name: create-wireguard-config
          image: "busybox"
          command:
            - mkdir
          args:
            - -p
            - /out/wireguard
          volumeMounts:
          - name: my-release-qbittorrentvpn-config-volume
            mountPath: /out                  
        - name: import-wireguard-config-for-qbittorrent
          image: "busybox"
          command:
            - cp
          args:
            - -v
            - /in/wg0.conf
            - /out/wireguard/wg0.conf
          volumeMounts:
          - name: wireguard-data-airvpn
            mountPath: /in
          - name: my-release-qbittorrentvpn-config-volume
            mountPath: /out                
        - name: permission-fix-for-health
          image: busybox
          command: ['sh', '-c']
          args: ['chmod -R 777 /out']
          volumeMounts:
          - name: health
            mountPath: /out                                                                                                    
      containers:
        - name: qbittorrentvpn
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_TIME
              - SYS_ADMIN
            privileged: true
          image: "binhex/arch-qbittorrentvpn:4.5.2-1-03"
          imagePullPolicy: Always
          env:
            - name: VPN_ENABLED
              value: "yes"
            - name: VPN_PROV
              value: "airvpn"
            - name: VPN_CLIENT
              value: "wireguard"
            - name: ENABLE_PRIVOXY
              value: "yes"
            - name: LAN_NETWORK
              value: "10.42.0.0/16"
            - name: NAME_SERVERS
              value: "1.1.1.1,1.0.0.1"
            - name: DEBUG
              value: "true"
            - name: WEBUI_PORT
              value: "8081"
            - name: UMASK
              value: "0"
            - name: PUID
              value: "0"
            - name: PGID
              value: "0" 
          volumeMounts:
            - mountPath: /config
              name: my-release-qbittorrentvpn-config-volume  
            - mountPath: /scripts
              name: scripts                 
            - mountPath: /data
              name: data
              mountPropagation: Bidirectional
            - mountPath: /downloads
              name: downloads         
              mountPropagation: Bidirectional     
            - mountPath: /etc/localtime
              name: etc-localtime   
            - mountPath: /health
              name: health                  
          # livenessProbe:
          #   exec:
          #     command:
          #       - bin/bash
          #       - -c
          #       - /health/liveness.sh
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 20
          #   periodSeconds: 10
          #   successThreshold: 1
          #   failureThreshold: 3                 
          # readinessProbe:
          #   exec:
          #     command:
          #       - bin/bash
          #       - -c
          #       - /health/liveness.sh
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 20
          #   periodSeconds: 10
          #   successThreshold: 1
          #   failureThreshold: 3                        
          ports:
            - name: privoxy
              containerPort: 8181
              protocol: TCP
            - name: bittorrent-ui
              containerPort: 8081
              protocol: TCP     
          resources:
            {}
  volumeClaimTemplates:
    - metadata:
        name: my-release-qbittorrentvpn-config-volume  
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
# Source: qbittorrentvpn/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-qbittorrentvpn-test-connection"
  labels:
    helm.sh/chart: qbittorrentvpn-2.0.25
    app.kubernetes.io/name: qbittorrentvpn
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-qbittorrentvpn:8081']
  restartPolicy: Never
