---
# Source: enterprise-steam/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-enterprise-steam
  labels:
    helm.sh/chart: enterprise-steam-1.8.12
    app.kubernetes.io/name: enterprise-steam
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.8.12"
    app.kubernetes.io/managed-by: Helm
---
# Source: enterprise-steam/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-enterprise-steam
  labels:
    helm.sh/chart: enterprise-steam-1.8.12
    app.kubernetes.io/name: enterprise-steam
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.8.12"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 64Gi
---
# Source: enterprise-steam/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-enterprise-steam
  namespace: default
  labels:
    helm.sh/chart: enterprise-steam-1.8.12
    app.kubernetes.io/name: enterprise-steam
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.8.12"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["", "apps", "storage.k8s.io"]
    resources: ["namespaces", "pods", "pods/log", "deployments", "secrets", "services", "persistentvolumeclaims", "persistentvolumes", "events", "configmaps", "storageclasses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: enterprise-steam/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-enterprise-steam
  namespace: default
  labels:
    helm.sh/chart: enterprise-steam-1.8.12
    app.kubernetes.io/name: enterprise-steam
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.8.12"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: my-release-enterprise-steam
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-enterprise-steam
---
# Source: enterprise-steam/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-enterprise-steam
  labels:
    helm.sh/chart: enterprise-steam-1.8.12
    app.kubernetes.io/name: enterprise-steam
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.8.12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9555
      targetPort: 9555
      name: steam
      protocol: TCP
  selector:
    app.kubernetes.io/name: enterprise-steam
    app.kubernetes.io/instance: my-release
---
# Source: enterprise-steam/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-enterprise-steam
  labels:
    helm.sh/chart: enterprise-steam-1.8.12
    app.kubernetes.io/name: enterprise-steam
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.8.12"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: enterprise-steam
      app.kubernetes.io/instance: my-release
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: enterprise-steam
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-enterprise-steam
      securityContext:
        fsGroup: 955
        runAsGroup: 955
        runAsUser: 955
      containers:
        - name: enterprise-steam
          image: "h2oai/enterprise-steam:1.8.12"
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 2
              memory: 8Gi
            requests:
              cpu: 2
              memory: 8Gi
          env:
            - name: STEAM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STEAM_STRICT_LAUNCH
              value: "false"
          ports:
            - name: steam
              containerPort: 9555
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/h2oai/steam/data
              name: enterprise-steam-data
          securityContext:
              allowPrivilegeEscalation: false
      volumes:
        - name: enterprise-steam-data
          persistentVolumeClaim:
            claimName: my-release-enterprise-steam
---
# Source: enterprise-steam/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: my-release-enterprise-steam
  labels:
    helm.sh/chart: enterprise-steam-1.8.12
    app.kubernetes.io/name: enterprise-steam
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.8.12"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "enterprise-steam.cluster.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: my-release-enterprise-steam
              servicePort: 9555
