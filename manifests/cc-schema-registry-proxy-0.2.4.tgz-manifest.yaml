---
# Source: cc-schema-registry-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-cc-schema-registry-proxy
  labels:
    app.kubernetes.io/name: cc-schema-registry-proxy
    helm.sh/chart: cc-schema-registry-proxy-0.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ExternalName
  externalName: schema-registry-domain
  selector:
    app.kubernetes.io/name: cc-schema-registry-proxy
    app.kubernetes.io/instance: my-release
---
# Source: cc-schema-registry-proxy/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-cc-schema-registry-proxy
  labels:
    helm.sh/chart: cc-schema-registry-proxy-0.2.4
    app.kubernetes.io/name: cc-schema-registry-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/preserve-host: "false"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: https
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      limit_except GET {
        deny all;
      }
      more_set_input_headers "Authorization: Basic c3JBcGlLZXk6c3JBcGlTZWNyZXQ=";
    nginx.ingress.kubernetes.io/upstream-vhost: schema-registry-domain
spec:
  tls:
    - hosts:
        - "localhost"
      secretName: radar-base-tls
  rules:
    - host: "localhost"
      http:
        paths:
          - path: "/schema/?(.*)"
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-release-cc-schema-registry-proxy
                port:
                  number: 443
---
# Source: cc-schema-registry-proxy/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cc-schema-registry-proxy-test-connection"
  labels:
    app.kubernetes.io/name: cc-schema-registry-proxy
    helm.sh/chart: cc-schema-registry-proxy-0.2.4
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['my-release-cc-schema-registry-proxy:443']
  restartPolicy: Never
