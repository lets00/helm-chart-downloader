---
# Source: coderstudio-strapi-dev/templates/db-claim0-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: db-claim0
  name: db-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: coderstudio-strapi-dev/templates/strapi-claim0-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: strapi-claim0
  name: strapi-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: coderstudio-strapi-dev/templates/strapi-claim1-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: strapi-claim1
  name: strapi-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: coderstudio-strapi-dev/templates/adminer-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.expose: "true"
    kompose.service.type: nodeport
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: adminer
  name: adminer
spec:
  ports:
    - name: "9092"
      port: 9092
      targetPort: 8080
  selector:
    io.kompose.service: adminer
  type: NodePort
---
# Source: coderstudio-strapi-dev/templates/strapi-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.expose: "true"
    kompose.service.type: nodeport
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: strapi
  name: strapi
spec:
  ports:
    - name: "1339"
      port: 1339
      targetPort: 1337
  selector:
    io.kompose.service: strapi
  type: NodePort
---
# Source: coderstudio-strapi-dev/templates/adminer-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.expose: "true"
    kompose.service.type: nodeport
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: adminer
  name: adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: adminer
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c
        kompose.service.expose: "true"
        kompose.service.type: nodeport
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/strapi-dev-default: "true"
        io.kompose.service: adminer
    spec:
      containers:
        - env:
            - name: ADMINER_DEFAULT_SERVER
              value: db
          image: adminer
          name: adminer
          ports:
            - containerPort: 8080
              hostPort: 9092
              protocol: TCP
      restartPolicy: Always
---
# Source: coderstudio-strapi-dev/templates/db-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/strapi-dev-default: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: strapi
            - name: POSTGRES_PASSWORD
              value: strapi
            - name: POSTGRES_USER
              value: strapi
          image: postgres:alpine
          name: db
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-claim0
      restartPolicy: Always
      volumes:
        - name: db-claim0
          persistentVolumeClaim:
            claimName: db-claim0
---
# Source: coderstudio-strapi-dev/templates/strapi-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.expose: "true"
    kompose.service.type: nodeport
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: strapi
  name: strapi
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: strapi
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c
        kompose.service.expose: "true"
        kompose.service.type: nodeport
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/strapi-dev-default: "true"
        io.kompose.service: strapi
    spec:
      containers:
        - env:
            - name: ADMIN_JWT_SECRET
              value: Churc975EvecMwbrF1V0yQ==
            - name: API_TOKEN_SALT
              value: JlnrvFNv6SoGVve8G1OiYg==
            - name: APP_KEYS
              value: cbEBsGziVvhsG19NgUMS8Q==,cldVfLJCaic8YKBdPGlrrg==,bLK+E0g1OqXXZRehfruvmg==,BrDwbmyfZDIqNYNq4gjT8A==
            - name: DATABASE_CLIENT
              value: postgres
            - name: DATABASE_HOST
              value: db
            - name: DATABASE_NAME
              value: strapi
            - name: DATABASE_PASSWORD
              value: strapi
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_USERNAME
              value: strapi
            - name: HOST
              value: 0.0.0.0
            - name: PORT
              value: "1337"
            - name: TRANSFER_TOKEN_SALT
              value: HrV+i4amf6B//dMPXFFiKA==
          image: rcdelacruz/my-strapi-app:js-amd64
          name: strapi
          ports:
            - containerPort: 1337
              hostPort: 1339
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/app/src
              name: strapi-claim0
            - mountPath: /opt/app/public/uploads
              name: strapi-claim1
      restartPolicy: Always
      volumes:
        - name: strapi-claim0
          persistentVolumeClaim:
            claimName: strapi-claim0
        - name: strapi-claim1
          persistentVolumeClaim:
            claimName: strapi-claim1
---
# Source: coderstudio-strapi-dev/templates/adminer-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.expose: "true"
    kompose.service.type: nodeport
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: adminer
  name: adminer
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: adminer
                port:
                  number: 9092
            path: /
            pathType: Prefix
---
# Source: coderstudio-strapi-dev/templates/strapi-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.service.expose: "true"
    kompose.service.type: nodeport
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: strapi
  name: strapi
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: strapi
                port:
                  number: 1339
            path: /
            pathType: Prefix
