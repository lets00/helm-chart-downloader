---
# Source: dolibarr/templates/persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-dolibarr
  labels:
    helm.sh/chart: dolibarr-0.0.1
    app.kubernetes.io/name: dolibarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 13.0.0
    "app.kubernetes.io/component": "dolibarr"
    "app.kubernetes.io/part-of": "dolibarr"
spec:
  accessModes: [ "ReadWriteMany" ]
  storageClassName: "nfs-over-scw-bssd"
  resources:
    requests:
      storage: "50Gi"
---
# Source: dolibarr/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-dolibarr
  labels:
    helm.sh/chart: dolibarr-0.0.1
    app.kubernetes.io/name: dolibarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 13.0.0
    "app.kubernetes.io/component": "dolibarr"
    "app.kubernetes.io/part-of": "dolibarr"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 443
    targetPort: https
    protocol: TCP
    name: https
  selector:
    app.kubernetes.io/name: dolibarr
    app.kubernetes.io/instance: my-release
---
# Source: dolibarr/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-dolibarr
  labels:
    helm.sh/chart: dolibarr-0.0.1
    app.kubernetes.io/name: dolibarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 13.0.0
    "app.kubernetes.io/component": "dolibarr"
    "app.kubernetes.io/part-of": "dolibarr"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: dolibarr
      app.kubernetes.io/instance: my-release
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        helm.sh/chart: dolibarr-0.0.1
        app.kubernetes.io/name: dolibarr
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: 13.0.0
        "app.kubernetes.io/component": "dolibarr"
        "app.kubernetes.io/part-of": "dolibarr"
    spec:
      containers:
      - name: dolibarr
        image: "monogramm/docker-dolibarr:13.0-alpine"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        env:
        - name: DOLI_AUTO_CONFIGURE
          value: ''
        #readinessProbe:
        #  exec:
        #    command:
        #    - ls
        #    - /export
        #  initialDelaySeconds: 5
        #  periodSeconds: 5
        livenessProbe:
          exec:
            command: [timeout, '10', ls, /var/www/]
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: www
          mountPath: /var/www
      volumes:
      - name: www
        #emptyDir: {}
        persistentVolumeClaim:
          claimName: my-release-dolibarr
---
# Source: dolibarr/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-dolibarr
  labels:
    helm.sh/chart: dolibarr-0.0.1
    app.kubernetes.io/name: dolibarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 13.0.0
    "app.kubernetes.io/component": "dolibarr"
    "app.kubernetes.io/part-of": "dolibarr"
spec:
  rules:
  - host: doli.tecservices.fr
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-release-dolibarr
            port:
              number: http
  tls:
  - hosts:
    - doli.tecservices.fr
    secretName: tls-doli.tecservices.fr
