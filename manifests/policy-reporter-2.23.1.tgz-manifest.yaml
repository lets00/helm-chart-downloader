---
# Source: policy-reporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-policy-reporter
  namespace: default
  labels:
    helm.sh/chart: policy-reporter-2.23.1
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.19.0"
    app.kubernetes.io/component: reporting
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: policy-reporter
---
# Source: policy-reporter/templates/config-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-policy-reporter-config
  namespace: default
  labels:
    helm.sh/chart: policy-reporter-2.23.1
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.19.0"
    app.kubernetes.io/component: reporting
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: policy-reporter
type: Opaque
data:
  config.yaml: bG9raToKICBob3N0OiAiIgogIGNlcnRpZmljYXRlOiAiIgogIHNraXBUTFM6IGZhbHNlCiAgcGF0aDogIiIKICBzZWNyZXRSZWY6ICIiCiAgbW91bnRlZFNlY3JldDogIiIKICBtaW5pbXVtUHJpb3JpdHk6ICIiCiAgc2tpcEV4aXN0aW5nT25TdGFydHVwOiB0cnVlCiAgdXNlcm5hbWU6ICIiCiAgcGFzc3dvcmQ6ICIiCgplbGFzdGljc2VhcmNoOgogIGhvc3Q6ICIiCiAgY2VydGlmaWNhdGU6ICIiCiAgc2tpcFRMUzogZmFsc2UKICB1c2VybmFtZTogIiIKICBwYXNzd29yZDogIiIKICBhcGlLZXk6ICIiCiAgc2VjcmV0UmVmOiAiIgogIG1vdW50ZWRTZWNyZXQ6ICIiCiAgaW5kZXg6ICJwb2xpY3ktcmVwb3J0ZXIiCiAgcm90YXRpb246ICJkYWlseSIKICBtaW5pbXVtUHJpb3JpdHk6ICIiCiAgc2tpcEV4aXN0aW5nT25TdGFydHVwOiB0cnVlCiAgdHlwZWxlc3NBcGk6IGZhbHNlCgpzbGFjazoKICB3ZWJob29rOiAiIgogIGNoYW5uZWw6ICIiCiAgc2VjcmV0UmVmOiAiIgogIG1vdW50ZWRTZWNyZXQ6ICIiCiAgbWluaW11bVByaW9yaXR5OiAiIgogIHNraXBFeGlzdGluZ09uU3RhcnR1cDogdHJ1ZQoKZGlzY29yZDoKICB3ZWJob29rOiAiIgogIHNlY3JldFJlZjogIiIKICBtb3VudGVkU2VjcmV0OiAiIgogIG1pbmltdW1Qcmlvcml0eTogIiIKICBza2lwRXhpc3RpbmdPblN0YXJ0dXA6IHRydWUKCnRlYW1zOgogIHdlYmhvb2s6ICIiCiAgY2VydGlmaWNhdGU6ICIiCiAgc2tpcFRMUzogZmFsc2UKICBzZWNyZXRSZWY6ICIiCiAgbW91bnRlZFNlY3JldDogIiIKICBtaW5pbXVtUHJpb3JpdHk6ICIiCiAgc2tpcEV4aXN0aW5nT25TdGFydHVwOiB0cnVlCgp3ZWJob29rOgogIGhvc3Q6ICIiCiAgY2VydGlmaWNhdGU6ICIiCiAgc2tpcFRMUzogZmFsc2UKICBzZWNyZXRSZWY6ICIiCiAgbW91bnRlZFNlY3JldDogIiIKICBtaW5pbXVtUHJpb3JpdHk6ICIiCiAgc2tpcEV4aXN0aW5nT25TdGFydHVwOiB0cnVlCgp0ZWxlZ3JhbToKICB0b2tlbjogIiIKICBjaGF0SUQ6ICIiCiAgaG9zdDogIiIKICBjZXJ0aWZpY2F0ZTogIiIKICBza2lwVExTOiBmYWxzZQogIHNlY3JldFJlZjogIiIKICBtb3VudGVkU2VjcmV0OiAiIgogIG1pbmltdW1Qcmlvcml0eTogIiIKICBza2lwRXhpc3RpbmdPblN0YXJ0dXA6IHRydWUKCmdvb2dsZUNoYXQ6CiAgd2ViaG9vazogIiIKICBjZXJ0aWZpY2F0ZTogIiIKICBza2lwVExTOiBmYWxzZQogIHNlY3JldFJlZjogIiIKICBtb3VudGVkU2VjcmV0OiAiIgogIG1pbmltdW1Qcmlvcml0eTogIiIKICBza2lwRXhpc3RpbmdPblN0YXJ0dXA6IHRydWUKCnVpOgogIGhvc3Q6IAogIGNlcnRpZmljYXRlOiAiIgogIHNraXBUTFM6IGZhbHNlCiAgbWluaW11bVByaW9yaXR5OiAid2FybmluZyIKICBza2lwRXhpc3RpbmdPblN0YXJ0dXA6IHRydWUKCnMzOgogIGFjY2Vzc0tleUlEOiAKICBzZWNyZXRBY2Nlc3NLZXk6ICAKICBzZWNyZXRSZWY6ICIiCiAgbW91bnRlZFNlY3JldDogCiAgcmVnaW9uOiAKICBlbmRwb2ludDogCiAgYnVja2V0OiAKICBidWNrZXRLZXlFbmFibGVkOiBmYWxzZQogIGttc0tleUlkOiAKICBzZXJ2ZXJTaWRlRW5jcnlwdGlvbjogCiAgcGF0aFN0eWxlOiBmYWxzZQogIHByZWZpeDogCiAgbWluaW11bVByaW9yaXR5OiAiIgogIHNraXBFeGlzdGluZ09uU3RhcnR1cDogdHJ1ZQoKa2luZXNpczoKICBhY2Nlc3NLZXlJRDogCiAgc2VjcmV0QWNjZXNzS2V5OiAgCiAgc2VjcmV0UmVmOiAiIgogIG1vdW50ZWRTZWNyZXQ6ICIiCiAgcmVnaW9uOiAKICBlbmRwb2ludDogCiAgc3RyZWFtTmFtZTogCiAgbWluaW11bVByaW9yaXR5OiAiIgogIHNraXBFeGlzdGluZ09uU3RhcnR1cDogdHJ1ZQoKc2VjdXJpdHlIdWI6CiAgYWNjb3VudElEOiAKICBhY2Nlc3NLZXlJRDogCiAgc2VjcmV0QWNjZXNzS2V5OiAgCiAgZGVsYXlJblNlY29uZHM6IDIKICBjbGVhbnVwOiBmYWxzZQogIHNlY3JldFJlZjogIiIKICBtb3VudGVkU2VjcmV0OiAiIgogIHByb2R1Y3ROYW1lOiAiIgogIHJlZ2lvbjogCiAgZW5kcG9pbnQ6IAogIG1pbmltdW1Qcmlvcml0eTogIiIKICBza2lwRXhpc3RpbmdPblN0YXJ0dXA6IHRydWUKCmdjczoKICBjcmVkZW50aWFsczogCiAgc2VjcmV0UmVmOiAiIgogIG1vdW50ZWRTZWNyZXQ6ICIiCiAgYnVja2V0OiAKICBwcmVmaXg6IAogIG1pbmltdW1Qcmlvcml0eTogIiIKICBza2lwRXhpc3RpbmdPblN0YXJ0dXA6IHRydWUKCndvcmtlcjogNQoKbWV0cmljczoKICBtb2RlOiBkZXRhaWxlZAoKcmVwb3J0RmlsdGVyOgogIG5hbWVzcGFjZXM6CiAgY2x1c3RlclJlcG9ydHM6CiAgICBkaXNhYmxlZDogZmFsc2UKCmxlYWRlckVsZWN0aW9uOgogIGVuYWJsZWQ6IGZhbHNlCiAgcmVsZWFzZU9uQ2FuY2VsOiB0cnVlCiAgbGVhc2VEdXJhdGlvbjogMTUKICByZW5ld0RlYWRsaW5lOiAxMAogIHJldHJ5UGVyaW9kOiAyCnJlZGlzOgogIGFkZHJlc3M6ICIiCiAgZGF0YWJhc2U6IDAKICBlbmFibGVkOiBmYWxzZQogIHBhc3N3b3JkOiAiIgogIHByZWZpeDogcG9saWN5LXJlcG9ydGVyCiAgdXNlcm5hbWU6ICIiCgoKbG9nZ2luZzoKICBlbmNvZGluZzogY29uc29sZQogIGxvZ0xldmVsOiAwCiAgZGV2ZWxvcG1lbnQ6IGZhbHNlCgphcGk6CiAgbG9nZ2luZzogZmFsc2UKICBiYXNpY0F1dGg6CiAgICB1c2VybmFtZTogCiAgICBwYXNzd29yZDogCiAgICBzZWNyZXRSZWY6IAoKZGF0YWJhc2U6CiAgdHlwZTogCiAgZGF0YWJhc2U6IAogIHVzZXJuYW1lOiAKICBwYXNzd29yZDogCiAgaG9zdDogCiAgZW5hYmxlU1NMOiBmYWxzZQogIGRzbjogCiAgc2VjcmV0UmVmOiAKICBtb3VudGVkU2VjcmV0OiAK
---
# Source: policy-reporter/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    helm.sh/chart: policy-reporter-2.23.1
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.19.0"
    app.kubernetes.io/component: reporting
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: policy-reporter
  name: my-release-policy-reporter
rules:
- apiGroups:
  - '*'
  resources:
  - policyreports
  - policyreports/status
  - clusterpolicyreports
  - clusterpolicyreports/status
  verbs:
  - get
  - list
  - watch
---
# Source: policy-reporter/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-policy-reporter
  labels:
    helm.sh/chart: policy-reporter-2.23.1
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.19.0"
    app.kubernetes.io/component: reporting
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: policy-reporter
roleRef:
  kind: ClusterRole
  name: my-release-policy-reporter
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: "ServiceAccount"
  name: my-release-policy-reporter
  namespace: default
---
# Source: policy-reporter/templates/secret-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: policy-reporter-2.23.1
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.19.0"
    app.kubernetes.io/component: reporting
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: policy-reporter
  name: my-release-policy-reporter-secret-reader
  namespace: default
rules:
- apiGroups: ['']
  resources:
  - secrets
  verbs:
  - get
---
# Source: policy-reporter/templates/secret-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-policy-reporter-secret-reader
  namespace: default
  labels:
    helm.sh/chart: policy-reporter-2.23.1
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.19.0"
    app.kubernetes.io/component: reporting
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: policy-reporter
roleRef:
  kind: Role
  name: my-release-policy-reporter-secret-reader
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: "ServiceAccount"
  name: my-release-policy-reporter
  namespace: default
---
# Source: policy-reporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-policy-reporter
  namespace: default
  labels:
    helm.sh/chart: policy-reporter-2.23.1
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.19.0"
    app.kubernetes.io/component: reporting
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: policy-reporter
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/instance: my-release
---
# Source: policy-reporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-policy-reporter
  namespace: default
  labels:
    helm.sh/chart: policy-reporter-2.23.1
    app.kubernetes.io/name: policy-reporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.19.0"
    app.kubernetes.io/component: reporting
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: policy-reporter
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: policy-reporter
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: policy-reporter
        app.kubernetes.io/instance: my-release
        helm.sh/chart: policy-reporter-2.23.1
        app.kubernetes.io/version: "2.19.0"
        app.kubernetes.io/part-of: policy-reporter
      annotations:
        checksum/secret: "6f1731e7b32076a28164949310a89e18789f6d4d1cac159f68408424db229260"
    spec:
      serviceAccountName: my-release-policy-reporter
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 1234
      containers:
        - name: policy-reporter
          image: "ghcr.io/kyverno/policy-reporter:2.19.0"
          imagePullPolicy: IfNotPresent
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1234
            seccompProfile:
              type: RuntimeDefault
          args:
            - --port=8080
            - --config=/app/config.yaml
            - --dbfile=/sqlite/database.db
            - --metrics-enabled=false
            - --rest-enabled=false
            - --profile=false
            - --lease-name=my-release-policy-reporter
            - --template-dir=/app/templates
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          resources:
            {}
          volumeMounts:
          - name: sqlite
            mountPath: /sqlite
          - name: config-file
            mountPath: /app/config.yaml
            subPath: config.yaml
            readOnly: true
          - name: tmp
            mountPath: /tmp
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      volumes:
      - name: sqlite
        emptyDir: {}
      - name: config-file
        secret:
          secretName: my-release-policy-reporter-config
          optional: true
      - name: tmp
        emptyDir: {}
