---
# Source: hcloud-csi-driver/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-hcloud-csi-driver
  namespace: default
  labels:
    app.kubernetes.io/name: hcloud-csi-driver
    helm.sh/chart: hcloud-csi-driver-1.3.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: hcloud-csi-driver/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: hcloud-volume
  labels:
    app.kubernetes.io/name: hcloud-csi-driver
    helm.sh/chart: hcloud-csi-driver-1.3.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
provisioner: csi.hetzner.cloud
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
reclaimPolicy: Retain
---
# Source: hcloud-csi-driver/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-hcloud-csi-driver
  labels:
    app.kubernetes.io/name: hcloud-csi-driver
    helm.sh/chart: hcloud-csi-driver-1.3.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - csi.storage.k8s.io
  resources:
  - csinodeinfos
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments/status
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - get
  - list
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
---
# Source: hcloud-csi-driver/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-hcloud-csi-driver
  labels:
    app.kubernetes.io/name: hcloud-csi-driver
    helm.sh/chart: hcloud-csi-driver-1.3.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  name: my-release-hcloud-csi-driver
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: my-release-hcloud-csi-driver
    namespace: default
---
# Source: hcloud-csi-driver/templates/daemonset-node.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: my-release-hcloud-csi-driver-node
  namespace: default
  labels:
    app.kubernetes.io/name: hcloud-csi-driver
    helm.sh/chart: hcloud-csi-driver-1.3.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    component: node
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: hcloud-csi-driver
      app.kubernetes.io/instance: my-release
      component: node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hcloud-csi-driver
        helm.sh/chart: hcloud-csi-driver-1.3.0
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        component: node
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: instance.hetzner.cloud/is-root-server
                operator: NotIn
                values:
                - "true"
      containers:
        - name: csi-node-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.4.0
          args:
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi.hetzner.cloud/socket
          volumeMounts:
            - name: plugin-dir
              mountPath: /run/csi
            - name: registration-dir
              mountPath: /registration
        - command:
          - /bin/hcloud-csi-driver-node
          name: hcloud-csi-driver
          env:
            - name: CSI_ENDPOINT
              value: unix:///run/csi/socket
            - name: METRICS_ENDPOINT
              value: 0.0.0.0:9189
            - name: ENABLE_METRICS
              value: "false"
          image: hetznercloud/hcloud-csi-driver:2.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          securityContext:
            privileged: true
          volumeMounts:
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
            - name: plugin-dir
              mountPath: /run/csi
            - name: device-dir
              mountPath: /dev
        - name: liveness-probe
          imagePullPolicy: Always
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.9.0
          volumeMounts:
            - mountPath: /run/csi
              name: plugin-dir
      tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
      volumes:
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.hetzner.cloud/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
---
# Source: hcloud-csi-driver/templates/deployment-controller.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-hcloud-csi-driver-controller
  namespace: default
  labels:
    app.kubernetes.io/name: hcloud-csi-driver
    helm.sh/chart: hcloud-csi-driver-1.3.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hcloud-csi-driver
      app.kubernetes.io/instance: my-release
      component: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hcloud-csi-driver
        helm.sh/chart: hcloud-csi-driver-1.3.0
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        component: controller
    spec:
      serviceAccount: my-release-hcloud-csi-driver
      containers:
        - name: csi-attacher
          image: k8s.gcr.io/sig-storage/csi-attacher:v4.1.0
          args:
          - --default-fstype=ext4
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
        - name: csi-resizer
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.7.0
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
        - name: csi-provisioner
          image: k8s.gcr.io/sig-storage/csi-provisioner:v3.4.0
          args:
            - --feature-gates=Topology=true
            - --default-fstype=ext4
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
        - name: hcloud-csi-driver
          image: hetznercloud/hcloud-csi-driver:2.2.0
          imagePullPolicy: IfNotPresent
          command:
          - /bin/hcloud-csi-driver-controller
          env:
            - name: CSI_ENDPOINT
              value: unix:///run/csi/socket
            - name: METRICS_ENDPOINT
              value: 0.0.0.0:9189
            - name: ENABLE_METRICS
              value: "false"
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: HCLOUD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "hcloud"
                  key: token
                  namespace: default
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
                path: /healthz
                port: healthz
            initialDelaySeconds: 10
            periodSeconds: 2
            timeoutSeconds: 3
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
        - name: liveness-probe
          imagePullPolicy: Always
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.9.0
          volumeMounts:
            - mountPath: /run/csi
              name: socket-dir
      volumes:
        - name: socket-dir
          emptyDir: {}
---
# Source: hcloud-csi-driver/templates/csidriver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.hetzner.cloud
  labels:
    app.kubernetes.io/name: hcloud-csi-driver
    helm.sh/chart: hcloud-csi-driver-1.3.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  attachRequired: true
  fsGroupPolicy: File
  podInfoOnMount: true
  volumeLifecycleModes:
  - Persistent
