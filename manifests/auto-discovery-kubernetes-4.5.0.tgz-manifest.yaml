---
# Source: auto-discovery-kubernetes/templates/rbac/service_account.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: ServiceAccount
metadata:
  name: auto-discovery
---
# Source: auto-discovery-kubernetes/templates/manager/config.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

kind: ConfigMap
apiVersion: v1
metadata:
  name: auto-discovery
data:
  auto-discovery.yaml: | 
    {
      "apiVersion": "config.securecodebox.io/v1",
      "cluster": {
        "name": "docker-desktop"
      },
      "containerAutoDiscovery": {
        "enabled": false,
        "passiveReconcileInterval": "1m",
        "scanConfigs": [
          {
            "annotations": {
              "defectdojo.securecodebox.io/engagement-name": "{{ .Target.Name }}",
              "defectdojo.securecodebox.io/engagement-version": "{{if (index .Target.Labels `app.kubernetes.io/version`) }}{{ index .Target.Labels `app.kubernetes.io/version` }}{{end}}",
              "defectdojo.securecodebox.io/product-name": "{{ .Cluster.Name }} | {{ .Namespace.Name }} | {{ .Target.Name }}",
              "defectdojo.securecodebox.io/product-tags": "cluster/{{ .Cluster.Name }},namespace/{{ .Namespace.Name }}"
            },
            "hookSelector": {},
            "labels": {},
            "name": "trivy",
            "parameters": [
              "{{ .ImageID }}"
            ],
            "repeatInterval": "168h",
            "scanType": "trivy-image-autodiscovery",
            "volumeMounts": [],
            "volumes": []
          }
        ]
      },
      "health": {
        "healthProbeBindAddress": ":8081"
      },
      "imagePullSecretConfig": {
        "mapImagePullSecretsToEnvironmentVariables": true,
        "passwordEnvironmentVariableName": "TRIVY_PASSWORD",
        "usernameEnvironmentVariableName": "TRIVY_USERNAME"
      },
      "kind": "AutoDiscoveryConfig",
      "leaderElection": {
        "leaderElect": true,
        "resourceName": "0e41a1f4.securecodebox.io"
      },
      "metrics": {
        "bindAddress": "127.0.0.1:8080"
      },
      "resourceInclusion": {
        "mode": "enabled-per-namespace"
      },
      "serviceAutoDiscovery": {
        "enabled": true,
        "passiveReconcileInterval": "1m",
        "scanConfigs": [
          {
            "annotations": {
              "defectdojo.securecodebox.io/engagement-name": "{{ .Target.Name }}",
              "defectdojo.securecodebox.io/engagement-version": "{{if (index .Target.Labels `app.kubernetes.io/version`) }}{{ index .Target.Labels `app.kubernetes.io/version` }}{{end}}",
              "defectdojo.securecodebox.io/product-name": "{{ .Cluster.Name }} | {{ .Namespace.Name }} | {{ .Target.Name }}",
              "defectdojo.securecodebox.io/product-tags": "cluster/{{ .Cluster.Name }},namespace/{{ .Namespace.Name }}"
            },
            "hookSelector": {},
            "labels": {},
            "name": "zap",
            "parameters": [
              "-t",
              "{{ .Host.Type }}://{{ .Service.Name }}.{{ .Service.Namespace }}.svc:{{ .Host.Port }}"
            ],
            "repeatInterval": "168h",
            "scanType": "zap-advanced-scan",
            "volumeMounts": [],
            "volumes": []
          }
        ]
      }
    }
---
# Source: auto-discovery-kubernetes/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: auto-discovery
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
- apiGroups:
  - execution.securecodebox.io
  resources:
  - scantypes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - execution.securecodebox.io
  resources:
  - scheduledscans
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - execution.securecodebox.io/status
  resources:
  - scheduledscans
  verbs:
  - get
  - patch
  - update
---
# Source: auto-discovery-kubernetes/templates/rbac/role_binding.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: auto-discovery
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: auto-discovery
subjects:
  - kind: ServiceAccount
    name: auto-discovery
    namespace: default
---
# Source: auto-discovery-kubernetes/templates/rbac/leader_election_role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: auto-discovery-leader-election-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: auto-discovery-kubernetes/templates/rbac/leader_election_role_binding.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: auto-discovery-leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: auto-discovery-leader-election-role
subjects:
  - kind: ServiceAccount
    name: auto-discovery
    namespace: default
---
# Source: auto-discovery-kubernetes/templates/manager/manager.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auto-discovery
  labels:
    control-plane: auto-discovery
spec:
  selector:
    matchLabels:
      control-plane: auto-discovery
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: auto-discovery
    spec:
      serviceAccountName: auto-discovery
      securityContext:
        
        {}
      containers:
        - command:
            - /manager
          args:
            - --config
            - /etc/securecodebox/auto-discovery.yaml
          image: "securecodebox/auto-discovery-kubernetes:4.5.0"
          imagePullPolicy: IfNotPresent
          name: auto-discovery
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: "/etc/securecodebox/auto-discovery.yaml"
              readOnly: true
              subPath: auto-discovery.yaml
      volumes:
        - name: config
          configMap:
            name: auto-discovery
      terminationGracePeriodSeconds: 10
---
# Source: auto-discovery-kubernetes/templates/rbac/role.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0
