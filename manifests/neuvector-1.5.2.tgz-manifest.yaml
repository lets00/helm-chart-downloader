---
# Source: neuvector/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: nvsecurityrules.neuvector.com
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
spec:
  group: neuvector.com
  names:
    kind: NvSecurityRule
    listKind: NvSecurityRuleList
    plural: nvsecurityrules
    singular: nvsecurityrule
  scope: Namespaced
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
---
# Source: neuvector/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: nvclustersecurityrules.neuvector.com
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
spec:
  group: neuvector.com
  names:
    kind: NvClusterSecurityRule
    listKind: NvClusterSecurityRuleList
    plural: nvclustersecurityrules
    singular: nvclustersecurityrule
  scope: Cluster
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
---
# Source: neuvector/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: neuvector-binding-app
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - pods
  - services
  - namespaces
  verbs:
  - get
  - list
  - watch
  - update
---
# Source: neuvector/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: neuvector-binding-rbac
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  - clusterrolebindings
  - clusterroles
  verbs:
  - get
  - list
  - watch
---
# Source: neuvector/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: neuvector-binding-admission
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
---
# Source: neuvector/templates/crd.yaml
# ClusterRole for NeuVector to operate CRD
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: neuvector-binding-customresourcedefinition
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - watch
  - create
  - get
---
# Source: neuvector/templates/crd.yaml
# ClusterRole for NeuVector to manager user-created CRD rules
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: neuvector-binding-nvsecurityrules
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
rules:
- apiGroups:
  - neuvector.com
  resources:
  - nvsecurityrules
  - nvclustersecurityrules
  verbs:
  - list
  - delete
---
# Source: neuvector/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: neuvector-binding-app
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: neuvector-binding-app
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: neuvector/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: neuvector-binding-rbac
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: neuvector-binding-rbac
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: neuvector/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: neuvector-binding-admission
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: neuvector-binding-admission
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: neuvector/templates/crd.yaml
# ClusterRoleBinding for NeuVector to operate CRD
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: neuvector-binding-customresourcedefinition
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: neuvector-binding-customresourcedefinition
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: neuvector/templates/crd.yaml
# ClusterRoleBinding for NeuVector to manager user-created CRD rules
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: neuvector-binding-nvsecurityrules
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: neuvector-binding-nvsecurityrules
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: neuvector/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: neuvector-admin
  namespace: default
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: neuvector/templates/admission-webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: neuvector-svc-admission-webhook
  namespace: default
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
spec:
  ports:
    - port: 443
      targetPort: 20443
      protocol: TCP
      name: admission-webhook
  type: ClusterIP
  selector:
    app: neuvector-controller-pod
---
# Source: neuvector/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: neuvector-svc-controller
  namespace: default
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
spec:
  clusterIP: None
  ports:
    - port: 18300
      protocol: "TCP"
      name: "cluster-tcp-18300"
    - port: 18301
      protocol: "TCP"
      name: "cluster-tcp-18301"
    - port: 18301
      protocol: "UDP"
      name: "cluster-udp-18301"
  selector:
    app: neuvector-controller-pod
---
# Source: neuvector/templates/crd.yaml
apiVersion: v1
kind: Service
metadata:
  name: neuvector-svc-crd-webhook
  namespace: default
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
spec:
  ports:
    - port: 443
      targetPort: 30443
      protocol: TCP
      name: crd-webhook
  type: ClusterIP
  selector:
    app: neuvector-controller-pod
---
# Source: neuvector/templates/manager-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: neuvector-service-webui
  namespace: default
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
spec:
  type: NodePort
  ports:
    - port: 8443
      name: manager
      protocol: TCP
  selector:
    app: neuvector-manager-pod
---
# Source: neuvector/templates/enforcer-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: neuvector-enforcer-pod
  namespace: default
  labels:
    chart: neuvector-1.5.2
    heritage: Helm
    release: my-release
spec:
  updateStrategy:
    type: RollingUpdate  
  selector:
    matchLabels:
      app: neuvector-enforcer-pod
  template:
    metadata:
      labels:
        app: neuvector-enforcer-pod
        release: my-release
    spec:
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      hostPID: true
      containers:
        - name: neuvector-enforcer-pod
          image: "docker.io/neuvector/enforcer:3.2.1"
          securityContext:
            privileged: true
          resources:
            {}
          env:
            - name: CLUSTER_JOIN_ADDR
              value: neuvector-svc-controller.default
            - name: CLUSTER_ADVERTISED_ADDR
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CLUSTER_BIND_ADDR
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: runtime-sock
              readOnly: true
            - mountPath: /host/proc
              name: proc-vol
              readOnly: true
            - mountPath: /host/cgroup
              name: cgroup-vol
              readOnly: true
            - mountPath: /lib/modules
              name: modules-vol
              readOnly: true
      terminationGracePeriodSeconds: 1200
      restartPolicy: Always
      volumes:
        - name: runtime-sock
          hostPath:
            path: /var/run/docker.sock
        - name: proc-vol
          hostPath:
            path: /proc
        - name: cgroup-vol
          hostPath:
            path: /sys/fs/cgroup
        - name: modules-vol
          hostPath:
            path: /lib/modules
---
# Source: neuvector/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neuvector-controller-pod
  namespace: default
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
spec:
  replicas: 3
  minReadySeconds: 60
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: neuvector-controller-pod
  template:
    metadata:
      labels:
        app: neuvector-controller-pod
        release: my-release
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - neuvector-controller-pod
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: neuvector-controller-pod
          image: "docker.io/neuvector/controller:3.2.1"
          securityContext:
            privileged: true
          resources:
            {}
          readinessProbe:
            exec:
              command:
                - cat
                - /tmp/ready
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: CLUSTER_JOIN_ADDR
              value: neuvector-svc-controller.default
            - name: CLUSTER_ADVERTISED_ADDR
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CLUSTER_BIND_ADDR
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - mountPath: /var/neuvector
              name: nv-share
              readOnly: false
            - mountPath: /var/run/docker.sock
              name: runtime-sock
              readOnly: true
            - mountPath: /host/proc
              name: proc-vol
              readOnly: true
            - mountPath: /host/cgroup
              name: cgroup-vol
              readOnly: true
            - mountPath: /etc/config
              name: config-volume
              readOnly: true              
      terminationGracePeriodSeconds: 300
      restartPolicy: Always
      volumes:
        - name: nv-share
          hostPath:
            path: /var/neuvector
        - name: runtime-sock
          hostPath:
            path: /var/run/docker.sock
        - name: proc-vol
          hostPath:
            path: /proc
        - name: cgroup-vol
          hostPath:
            path: /sys/fs/cgroup
        - name: config-volume
          configMap:
            name: neuvector-init
            optional: true
---
# Source: neuvector/templates/manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neuvector-manager-pod
  namespace: default
  labels:
    chart: neuvector-1.5.2
    release: my-release
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: neuvector-manager-pod
  template:
    metadata:
      labels:
        app: neuvector-manager-pod
        release: my-release
    spec:
      containers:
        - name: neuvector-manager-pod
          image: "docker.io/neuvector/manager:3.2.1"
          env:
            - name: CTRL_SERVER_IP
              value: neuvector-svc-controller.default
          resources:
            {}
      restartPolicy: Always
