---
# Source: pathling/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spark-service-account
---
# Source: pathling/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spark-role
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps"]
    verbs: ["create", "get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["watch"]
---
# Source: pathling/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spark-role-binding
subjects:
  - kind: ServiceAccount
    name: spark-service-account
roleRef:
  kind: Role
  name: spark-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: pathling/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: pathling-fhir
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: pathling-server
---
# Source: pathling/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: pathling-management
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: 8081
  selector:
    app: pathling-server
---
# Source: pathling/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: pathling-spark-ui
spec:
  type: ClusterIP
  ports:
    - port: 4040
      targetPort: 4040
  selector:
    app: pathling-server
---
# Source: pathling/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: pathling-driver
spec:
  type: ClusterIP
  ports:
    - name: driver
      port: 7077
      targetPort: 7077
    - name: block-manager
      port: 7078
      targetPort: 7078
  selector:
    app: pathling-server
  publishNotReadyAddresses: true
---
# Source: pathling/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: pathling-deployment
spec:
  selector:
    matchLabels:
      app: pathling-server
  template:
    metadata:
      labels:
        app: pathling-server
    spec:
      containers:
        - name: pathling-server
          image: "aehrc/pathling:latest"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
            - containerPort: 8081
            - containerPort: 4040
            - containerPort: 7077
            - containerPort: 7078
          resources:
            requests: {"cpu":2,"memory":"4G"}
            limits: {"memory":"4G"}
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8081
            periodSeconds: 5
            failureThreshold: 36
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8081
            periodSeconds: 5
            failureThreshold: 12
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8081
            periodSeconds: 5
            failureThreshold: 3
          volumeMounts: []
      volumes: []
      serviceAccountName: 
      imagePullSecrets: []
      tolerations: []
      affinity: null
  strategy:
    type: Recreate
