---
# Source: ethexporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-ethexporter
  labels:
    helm.sh/chart: ethexporter-0.1.5
    app.kubernetes.io/name: ethexporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9890
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: ethexporter
    app.kubernetes.io/instance: my-release
---
# Source: ethexporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ethexporter
  labels:
    helm.sh/chart: ethexporter-0.1.5
    app.kubernetes.io/name: ethexporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ethexporter
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ethexporter
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:      
        - name: ethexporter
          securityContext:
            {}
          image: "ethersphere/ethexporter:latest"
          imagePullPolicy: IfNotPresent
          env:
          - name: GETH
            value: "https://rpc.slock.it/mainnet"
          - name: INTERVAL
            value: "15"
          ports:
            - name: metrics
              containerPort: 9890
              protocol: TCP
          resources:
            {}
          command:
            - ethexporter
---
# Source: ethexporter/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-ethexporter-dummy-test"
  labels:

    helm.sh/chart: ethexporter-0.1.5
    app.kubernetes.io/name: ethexporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: dummy
      image: busybox
      command: ['echo']
      args:  ['dummy']
  restartPolicy: Never
