---
# Source: companion/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: companion
  namespace: default
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: companion
    helm.sh/chart: companion-0.1.7
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: companion
    app.kubernetes.io/instance: my-release
spec:
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: companion
  type: NodePort
  ports:
    - port: 3020
      targetPort: 3020
      protocol: TCP
      name: http
---
# Source: companion/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: companion
  namespace: default
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: companion
    helm.sh/chart: companion-0.1.7
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: companion
    app.kubernetes.io/instance: my-release
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: companion
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: companion
        helm.sh/chart: companion-0.1.7
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: companion
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      containers:
        - name: companion
          securityContext:
            {}
          image: "transloadit/companion:sha-e80a7f7"
          imagePullPolicy: IfNotPresent
          env:
            - name: COMPANION_SECRET
              value: CHANGE_ME
            - name: COMPANION_DOMAIN
              value: YOUR SERVER DOMAIN
            - name: COMPANION_DATADIR
              value: /
            - name: COMPANION_PROTOCOL
              value: http
            - name: COMPANION_PORT
              value: "3020"
            - name: COMPANION_SELF_ENDPOINT
              value: THIS SHOULD BE SAME AS YOUR DOMAIN + PATH
          ports:
            - name: http
              containerPort: 3020
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 3020
            initialDelaySeconds: 50
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          readinessProbe:
            httpGet:
              path: /
              port: 3020
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          resources:
            {}
          volumeMounts:
            - name: companion-data
              mountPath: /mnt/companion-data
      volumes:
        - name: companion-data
          emptyDir: {}
