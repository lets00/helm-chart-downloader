---
# Source: cert-manager-selfservice/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-cert-manager-selfservice
  labels:
    helm.sh/chart: cert-manager-selfservice-2.1.2
    app.kubernetes.io/name: cert-manager-selfservice
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/app: cert-manager-selfservice
    app.kubernetes.io/version: "v2.1.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/app: cert-manager-selfservice
    app.kubernetes.io/component: serviceaccount
---
# Source: cert-manager-selfservice/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-cert-manager-selfservice
rules:
  - apiGroups:
      - ""
      - "cert-manager.io"
    resources:
      - "secrets"
      - "certificates"
    verbs: ["*"]
---
# Source: cert-manager-selfservice/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-cert-manager-selfservice
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-cert-manager-selfservice
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: my-release-cert-manager-selfservice
    namespace: default
---
# Source: cert-manager-selfservice/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-cert-manager-selfservice
  labels:
    helm.sh/chart: cert-manager-selfservice-2.1.2
    app.kubernetes.io/name: cert-manager-selfservice
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/app: cert-manager-selfservice
    app.kubernetes.io/version: "v2.1.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/app: cert-manager-selfservice
    app.kubernetes.io/component: selfservice-service
spec:
  type: ClusterIP
  ports:
    - port: 5080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: cert-manager-selfservice
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/app: cert-manager-selfservice
---
# Source: cert-manager-selfservice/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-cert-manager-selfservice
  labels:
    helm.sh/chart: cert-manager-selfservice-2.1.2
    app.kubernetes.io/name: cert-manager-selfservice
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/app: cert-manager-selfservice
    app.kubernetes.io/version: "v2.1.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/app: cert-manager-selfservice
    app.kubernetes.io/component: selfservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager-selfservice
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/app: cert-manager-selfservice
  template:
    metadata:
      labels:
        helm.sh/chart: cert-manager-selfservice-2.1.2
        app.kubernetes.io/name: cert-manager-selfservice
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/app: cert-manager-selfservice
        app.kubernetes.io/version: "v2.1.1"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/app: cert-manager-selfservice
    spec:
      serviceAccountName: my-release-cert-manager-selfservice
      containers:
        - name: selfservice
          image: "ghcr.io/mario-f/cert-manager-selfservice:v2.1.1"
          imagePullPolicy: IfNotPresent
          args:
            - server
            - --port=5080
            - --manager-id=my-release
            - --issuer-kind=ClusterIssuer
            - --issuer-name=default-issuer
            - --cleanup-hours=72
          ports:
            - name: http
              containerPort: 5080
              protocol: TCP
          resources:
            limits: {}
            requests: {}
