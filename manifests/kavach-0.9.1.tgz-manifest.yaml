---
# Source: kavach/templates/server/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kavach-server-data
  namespace: default
  labels:
    helm.sh/chart: kavach-0.9.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kavach
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: server
    app.kubernetes.io/name: kavach-server
    app.kubernetes.io/version: ""
data:
  applications.json: |-
    [
        {
           "name":"Dega",
           "slug":"dega",
           "url":"https://dega.factly.in/",
           "is_default":true
        },
        {
           "name":"Dataful",
           "slug":"dataful",
           "url":"https://dataful.factly.in/",
           "is_default":true
        },
        {
           "name":"Resource Pool",
           "slug":"resource-pool",
           "url":"https://resource-pool.factly.in/",
           "is_default":true
        },
        {
           "name":"Sach",
           "slug":"sach",
           "url":"https://sach.factly.in/",
           "is_default":true
        }
    ]
---
# Source: kavach/templates/web/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kavach-web-config
  namespace: default
  labels:
    helm.sh/chart: kavach-0.9.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kavach
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: web
    app.kubernetes.io/name: kavach-web
    app.kubernetes.io/version: ""
data:
  config.js: |-
---
# Source: kavach/templates/server/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kavach-server
  namespace: default
  labels:
    helm.sh/chart: kavach-0.9.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kavach
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: server
    app.kubernetes.io/name: kavach-server
    app.kubernetes.io/version: ""
spec:
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: kavach-server
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
---
# Source: kavach/templates/web/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kavach-web
  namespace: default
  labels:
    helm.sh/chart: kavach-0.9.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kavach
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: web
    app.kubernetes.io/name: kavach-web
    app.kubernetes.io/version: ""
spec:
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: kavach-web
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
---
# Source: kavach/templates/server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kavach-server
  namespace: default
  labels:
    helm.sh/chart: kavach-0.9.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kavach
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: server
    app.kubernetes.io/name: kavach-server
    app.kubernetes.io/version: ""
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: kavach-server
  template:
    metadata:
      labels:
        helm.sh/chart: kavach-0.9.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: kavach
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: server
        app.kubernetes.io/name: kavach-server
        app.kubernetes.io/version: ""
    spec:
      securityContext:
        {}
      containers:
        - name: server
          securityContext:
            {}
          image: "factly/kavach-server:0.22.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            
          livenessProbe:
            httpGet:
              path: /health/alive
              port: 8000
            initialDelaySeconds: 50
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5             
          resources:
            {}
          volumeMounts:
            - name: kavach-server-data
              mountPath: ./app/data            
      volumes:
        - name: kavach-server-data
          configMap:
            name: kavach-server-data
---
# Source: kavach/templates/web/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kavach-web
  namespace: default
  labels:
    helm.sh/chart: kavach-0.9.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kavach
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: web
    app.kubernetes.io/name: kavach-web
    app.kubernetes.io/version: ""
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: kavach-web
  template:
    metadata:
      labels:
        helm.sh/chart: kavach-0.9.1
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: kavach
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: web
        app.kubernetes.io/name: kavach-web
        app.kubernetes.io/version: ""
    spec:
      securityContext:
        {}
      containers:
        - name: web
          securityContext:
            {}
          image: "factly/kavach-web:0.22.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - name: kavach-web-config
              mountPath: /usr/share/nginx/html/config.js
              subPath: config.js
      volumes:
        - name: kavach-web-config
          configMap:
            name: kavach-web-config
