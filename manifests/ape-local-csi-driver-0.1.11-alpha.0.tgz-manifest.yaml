---
# Source: ape-local-csi-driver/templates/poddisruptionbudget-controller.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: ape-local-csi-controller
  namespace: default
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: ape-local-csi-controller
      app.kubernetes.io/name: ape-local-csi-driver
      app.kubernetes.io/instance: my-release
  maxUnavailable: 1
---
# Source: ape-local-csi-driver/templates/serviceaccount-csi-controller.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ape-local-csi-controller-sa
  namespace: default
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
---
# Source: ape-local-csi-driver/templates/serviceaccount-csi-node.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ape-local-csi-node-sa
  namespace: default
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
---
# Source: ape-local-csi-driver/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ape-local-hostpath-sc
  annotations:
allowVolumeExpansion: true
provisioner: ape-local.csi.kubeblocks.io
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
parameters:
  workDir: "default"
---
# Source: ape-local-csi-driver/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ape-local-hostpath-quota-sc
  annotations:
allowVolumeExpansion: true
provisioner: ape-local.csi.kubeblocks.io
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
parameters:
  workDir: "default"
  enforceCapacityLimit: "true"
---
# Source: ape-local-csi-driver/templates/clusterrole-attacher.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-external-attacher-role
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get", "list", "watch", "update", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "csi.storage.k8s.io" ]
    resources: [ "csinodeinfos" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments" ]
    verbs: [ "get", "list", "watch", "update", "patch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments/status" ]
    verbs: [ "patch" ]
---
# Source: ape-local-csi-driver/templates/clusterrole-csi-controller.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-csi-controller-role
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["nodes", "persistentvolumes", "persistentvolumeclaims"]
    verbs: ["get"]
---
# Source: ape-local-csi-driver/templates/clusterrole-csi-node.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-csi-node-role
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get"]
---
# Source: ape-local-csi-driver/templates/clusterrole-provisioner.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-external-provisioner-role
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get", "list", "watch", "create", "delete" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims" ]
    verbs: [ "get", "list", "watch", "update" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "storageclasses" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list", "watch", "create", "update", "patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshots" ]
    verbs: [ "get", "list" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents" ]
    verbs: [ "get", "list" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "csinodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "get", "watch", "list", "delete", "update", "create" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments" ]
    verbs: [ "get", "list", "watch" ]
---
# Source: ape-local-csi-driver/templates/clusterrole-resizer.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-external-resizer-role
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
rules:
  # The following rule should be uncommented for plugins that require secrets
  # for provisioning.
  # - apiGroups: [""]
  #   resources: ["secrets"]
  #   verbs: ["get", "list", "watch"]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get", "list", "watch", "update", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims/status" ]
    verbs: [ "update", "patch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "storageclasses" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list", "watch", "create", "update", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "list", "watch" ]
---
# Source: ape-local-csi-driver/templates/clusterrole-snapshotter.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-external-snapshotter-role
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list", "watch", "create", "update", "patch" ]
  # Secret permission is optional.
  # Enable it if your driver needs secret.
  # For example, `csi.storage.k8s.io/snapshotter-secret-name` is set in VolumeSnapshotClass.
  # See https://kubernetes-csi.github.io/docs/secrets-and-credentials.html for more details.
  # - apiGroups: [ "" ]
  #   resources: [ "secrets" ]
  #   verbs: [ "get", "list" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotclasses" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents" ]
    verbs: [ "create", "get", "list", "watch", "update", "delete", "patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents/status" ]
    verbs: [ "update" ]
---
# Source: ape-local-csi-driver/templates/clusterrolebinding-attacher.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-csi-attacher-binding
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: ape-local-csi-controller-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: ape-local-external-attacher-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: ape-local-csi-driver/templates/clusterrolebinding-csi-controller.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-csi-controller-binding
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: ape-local-csi-controller-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: ape-local-csi-controller-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: ape-local-csi-driver/templates/clusterrolebinding-csi-node.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-csi-node-binding
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: ape-local-csi-node-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: ape-local-csi-node-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: ape-local-csi-driver/templates/clusterrolebinding-provisioner.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-csi-provisioner-binding
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: ape-local-csi-controller-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: ape-local-external-provisioner-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: ape-local-csi-driver/templates/clusterrolebinding-resizer.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-csi-resizer-binding
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: ape-local-csi-controller-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: ape-local-external-resizer-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: ape-local-csi-driver/templates/clusterrolebinding-snapshotter.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ape-local-csi-snapshotter-binding
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: ape-local-csi-controller-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: ape-local-external-snapshotter-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: ape-local-csi-driver/templates/node.yaml
# Node Service
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: ape-local-csi-node
  namespace: default
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: ape-local-csi-node
      app.kubernetes.io/name: ape-local-csi-driver
      app.kubernetes.io/instance: my-release
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ape-local-csi-node
        app.kubernetes.io/name: ape-local-csi-driver
        app.kubernetes.io/instance: my-release
        helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
        app.kubernetes.io/version: "0.1.11-alpha.0"
        app.kubernetes.io/component: csi-driver
        app.kubernetes.io/managed-by: Helm
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ape-local-csi-node-sa
      priorityClassName: system-node-critical
      tolerations:
        - operator: Exists
      securityContext:
        fsGroup: 0
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      containers:
        - name: ape-local-plugin
          image: apecloud/ape-local:0.1.11-alpha.0
          imagePullPolicy: IfNotPresent
          args:
            - node
            - --endpoint=$(CSI_ENDPOINT)
            - --nodeid=$(CSI_NODE_NAME)
            - --node-agent-port=14378
            - --hostpath-base=/var/lib/ape-local
            #
            - --logtostderr
            - --v=2
            #- node
          env:
            - name: CSI_ENDPOINT
              value: unix:/csi/csi.sock
            - name: CSI_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
          volumeMounts:
            - name: data-dir
              mountPath: /var/lib/ape-local
              mountPropagation: "Bidirectional"
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: plugin-dir
              mountPath: /csi
            - name: device-dir
              mountPath: /dev
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 5
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
        - name: node-driver-registrar
          image: registry.cn-hangzhou.aliyuncs.com/apecloud/csi-node-driver-registrar:v2.5.1
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --v=2
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/ape-local.csi.kubeblocks.io/csi.sock
          envFrom:
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
        - name: liveness-probe
          image: registry.cn-hangzhou.aliyuncs.com/apecloud/livenessprobe:v2.6.0
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=/csi/csi.sock
          envFrom:
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
      volumes:
        # make hostpathBase configurable
        - name: data-dir
          hostPath:
            path: /var/lib/ape-local
            type: DirectoryOrCreate
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/ape-local.csi.kubeblocks.io/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
---
# Source: ape-local-csi-driver/templates/controller.yaml
# Controller Service
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ape-local-csi-controller
  namespace: default
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ape-local-csi-controller
      app.kubernetes.io/name: ape-local-csi-driver
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app: ape-local-csi-controller
        app.kubernetes.io/name: ape-local-csi-driver
        app.kubernetes.io/instance: my-release
        helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
        app.kubernetes.io/version: "0.1.11-alpha.0"
        app.kubernetes.io/component: csi-driver
        app.kubernetes.io/managed-by: Helm
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: ape-local-csi-controller-sa
      priorityClassName: system-cluster-critical
      tolerations:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: ape-local-plugin
          image: apecloud/ape-local:0.1.11-alpha.0
          imagePullPolicy: IfNotPresent
          args:
            - controller
            - --endpoint=$(CSI_ENDPOINT)
            - --nodeid=$(CSI_NODE_NAME)
            - --node-agent-port=14378
            #
            #
            #
            #
            - --logtostderr
            - --v=2
            #
            #
            #- controller
            #
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: CSI_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 5
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
        - name: csi-provisioner
          image: registry.cn-hangzhou.aliyuncs.com/apecloud/csi-provisioner:v3.1.0
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --v=2
            - --feature-gates=Topology=true
            - --extra-create-metadata
            - --leader-election=true
            - --default-fstype=ext4
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          envFrom:
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
        - name: csi-attacher
          image: registry.cn-hangzhou.aliyuncs.com/apecloud/csi-attacher:v3.4.0
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --v=2
            - --leader-election=true
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          envFrom:
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
        # disable snapshot now, enable it after implement snapshot logic
        #
        - name: csi-resizer
          image: registry.cn-hangzhou.aliyuncs.com/apecloud/csi-resizer:v1.4.0
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --v=2
            - --handle-volume-inuse-error=false
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          envFrom:
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
        - name: liveness-probe
          image: registry.cn-hangzhou.aliyuncs.com/apecloud/livenessprobe:v2.6.0
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=/csi/csi.sock
          envFrom:
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
      volumes:
        - name: socket-dir
          emptyDir: {}
---
# Source: ape-local-csi-driver/templates/metrics.yaml
# TODO(#4): implement a metrics service
---
# Source: ape-local-csi-driver/templates/csidriver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: ape-local.csi.kubeblocks.io
  labels:
    app.kubernetes.io/name: ape-local-csi-driver
    app.kubernetes.io/instance: my-release
    helm.sh/chart: ape-local-csi-driver-0.1.11-alpha.0
    app.kubernetes.io/version: "0.1.11-alpha.0"
    app.kubernetes.io/component: csi-driver
    app.kubernetes.io/managed-by: Helm
spec:
  attachRequired: false
  podInfoOnMount: true
  fsGroupPolicy: File
