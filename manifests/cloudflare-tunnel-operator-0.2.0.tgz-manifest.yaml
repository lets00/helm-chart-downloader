---
# Source: cloudflare-tunnel-operator/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: default
---
# Source: cloudflare-tunnel-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudflare-tunnel-operator-controller-manager
  namespace: default
  labels:
    helm.sh/chart: cloudflare-tunnel-operator-0.2.0
    app.kubernetes.io/name: cloudflare-tunnel-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: cloudflare-tunnel-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cloudflare-tunnel-operator-controller-manager
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cloudflare-tunnel-operator.beezlabs.app
    resources:
      - cloudflaretunnels
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cloudflare-tunnel-operator.beezlabs.app
    resources:
      - cloudflaretunnels/finalizers
    verbs:
      - update
  - apiGroups:
      - cloudflare-tunnel-operator.beezlabs.app
    resources:
      - cloudflaretunnels/status
    verbs:
      - get
      - patch
      - update
---
# Source: cloudflare-tunnel-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cloudflare-tunnel-operator-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: cloudflare-tunnel-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cloudflare-tunnel-operator-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloudflare-tunnel-operator-controller-manager
subjects:
  - kind: ServiceAccount
    name: cloudflare-tunnel-operator-controller-manager
    namespace: default
---
# Source: cloudflare-tunnel-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cloudflare-tunnel-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloudflare-tunnel-operator-proxy-role
subjects:
  - kind: ServiceAccount
    name: cloudflare-tunnel-operator-controller-manager
    namespace: default
---
# Source: cloudflare-tunnel-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflare-tunnel-operator-controller-manager
  namespace: default
  labels:
    helm.sh/chart: cloudflare-tunnel-operator-0.2.0
    app.kubernetes.io/name: cloudflare-tunnel-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudflare-tunnel-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudflare-tunnel-operator
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: cloudflare-tunnel-operator-controller-manager
      securityContext:
        runAsNonRoot: true
      containers:
        - name: manager
          securityContext:
            allowPrivilegeEscalation: false
          command:
            - /manager
          image: "ghcr.io/beezlabs-org/cloudflare-tunnel-operator:v0.1.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: probe
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: probe
          readinessProbe:
            httpGet:
              path: /readyz
              port: probe
          resources:
            {}
