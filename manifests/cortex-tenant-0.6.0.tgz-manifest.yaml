---
# Source: cortex-tenant/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-cortex-tenant
  labels:
    helm.sh/chart: cortex-tenant-0.6.0
    app.kubernetes.io/name: cortex-tenant
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.13.0"
    app.kubernetes.io/managed-by: Helm
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cortex-tenant
      app.kubernetes.io/instance: my-release
---
# Source: cortex-tenant/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-cortex-tenant-configmap
  labels:
    helm.sh/chart: cortex-tenant-0.6.0
    app.kubernetes.io/name: cortex-tenant
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.13.0"
    app.kubernetes.io/managed-by: Helm
data:
  cortex-tenant.yml: |-
    listen: 0.0.0.0:8080
    listen_pprof: 0.0.0.0:7008
    target: http://cortex-distributor.cortex.svc:8080/api/v1/push
    enable_ipv6: false
    log_level: warn
    timeout: 10s
    timeout_shutdown: 10s
    concurrency: 1000
    metadata: false
    log_response_errors: true
    max_connection_duration: 0s
    tenant:
      label: tenant
      prefix: 
      prefix_prefer_source: false
      label_remove: false
      header: X-Scope-OrgID
      default: cortex-tenant-default
      accept_all: false
---
# Source: cortex-tenant/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: cortex-tenant-0.6.0
    app.kubernetes.io/name: cortex-tenant
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.13.0"
    app.kubernetes.io/managed-by: Helm
  name: my-release-cortex-tenant
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: cortex-tenant
    app.kubernetes.io/instance: my-release
---
# Source: cortex-tenant/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: cortex-tenant-0.6.0
    app.kubernetes.io/name: cortex-tenant
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.13.0"
    app.kubernetes.io/managed-by: Helm
  name: my-release-cortex-tenant
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: cortex-tenant
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: ef9c368b286cb6007a118e0bbaa07389c8103b1d03d6cb4fbb1452f627c6c7d1
      labels:
        app.kubernetes.io/name: cortex-tenant
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - image: "ghcr.io/blind-oracle/cortex-tenant:1.13.0"
          imagePullPolicy: IfNotPresent
          name: cortex-tenant
          securityContext:
            {}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - mountPath: /data/
              name: config-file
      securityContext:
        {}
      volumes:
        - configMap:
            name: my-release-cortex-tenant-configmap
          name: config-file
