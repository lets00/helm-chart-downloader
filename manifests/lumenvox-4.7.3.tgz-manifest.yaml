---
# Source: lumenvox/charts/lumenvox-common/templates/serviceaccounts/license.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: license
  namespace: lumenvox
---
# Source: lumenvox/templates/configmaps/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: lumenvox-configmap
  namespace: 'lumenvox'
data:
  GLOBAL_SETTINGS__ASPNETCORE_ENVIRONMENT: 'Production'
  GLOBAL_SETTINGS__ASPNETCORE_URLS: 'http://+:80'
  GLOBAL_SETTINGS__RABBIT_RETRYING_TIME_SECONDS: '60'
  SERILOG__DEFAULT_LOGGING_LEVEL: 'Warning'
  SERILOG__OVERRIDE_MICROSOFT_LOGGING_LEVEL: 'Warning'
  SERILOG__OVERRIDE_SYSTEM_LOGGING_LEVEL: 'Warning'
  SERILOG__OVERRIDE_GRPC_LOGGING_LEVEL: 'Warning'
  HTTPS_SETTINGS__CERTIFICATE: ''
  HTTPS_SETTINGS__CERTIFICATE_KEY: ''
  HTTPS_SETTINGS__CERTIFICATE_PASSWORD: ''
  HTTPS_SETTINGS__USE_SELF_SIGNED_CERTIFICATE: 'false'
  LOCAL_SETTINGS__ENABLE_ELASTICSEARCH: 'false'
  LOCAL_SETTINGS__ENABLE_AUDIT_LOG: 'false'
---
# Source: lumenvox/templates/configmaps/tz.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: timezone-configmap
  namespace: 'lumenvox'
data:
  TZ: UTC
---
# Source: lumenvox/templates/persistentvolumes/activePV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vb-active
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lang/vb-active
---
# Source: lumenvox/templates/persistentvolumes/asrPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: asr-grammar-cache
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/asr_grammar_cache
---
# Source: lumenvox/templates/persistentvolumes/asrdistpackagesPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: asr-dist-packages
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lang/DistPackageModels/asr/dist-packages/
---
# Source: lumenvox/templates/persistentvolumes/asrmodelsPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: asr-models
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lang/AsrModels
---
# Source: lumenvox/templates/persistentvolumes/backendmodelsPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: backendmodels
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lang/BackendModels
---
# Source: lumenvox/templates/persistentvolumes/backendsPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: backends
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lumenvox_backends
---
# Source: lumenvox/templates/persistentvolumes/cachePV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: europa-cache
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/europa_cache
---
# Source: lumenvox/templates/persistentvolumes/dictPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dict
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lang/Dict
---
# Source: lumenvox/templates/persistentvolumes/europamodelsPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: europamodels
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lang/EuropaAsrModels
---
# Source: lumenvox/templates/persistentvolumes/grammarlogsPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grammarlogs
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/grammar_logs
---
# Source: lumenvox/templates/persistentvolumes/itnbackendmodelsPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: itnbackendmodels
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lang/BackendModels
---
# Source: lumenvox/templates/persistentvolumes/itndistpackagesPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: itn-dist-packages
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lang/DistPackageModels/en/dist-packages/
---
# Source: lumenvox/templates/persistentvolumes/itnmodelsPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: itnmodels
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lang/ItnModels
---
# Source: lumenvox/templates/persistentvolumes/langPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: lang
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lang
---
# Source: lumenvox/templates/persistentvolumes/rootPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: root
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /data
---
# Source: lumenvox/templates/persistentvolumes/ttsPV.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tts1
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  hostPath:
    path: /data/lang/tts/tts1
---
# Source: lumenvox/templates/persistentvolumeclaims/activePVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vb-active-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: vb-active
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/asrPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: asr-grammar-cache-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: asr-grammar-cache
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/asrdistpackagesPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: asr-dist-packages-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: asr-dist-packages
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/asrmodelsPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: asr-models-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: asr-models
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/backendmodelsPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backendmodels-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: backendmodels
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/backendsPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backends-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: backends
  storageClassName: ""
  resources:
    requests:
      storage: 10Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/cachePVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: europa-cache-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: europa-cache
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/dictPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dict-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: dict
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/europamodelsPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: europamodels-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: europamodels
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/grammarlogsPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grammarlogs-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: grammarlogs
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/itnbackendmodelsPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: itnbackendmodels-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: itnbackendmodels
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/itndistpackagesPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: itn-dist-packages-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: itn-dist-packages
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/itnmodelsPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: itnmodels-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: itnmodels
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/langPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lang-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: lang
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/rootPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: root-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: root
  storageClassName: ""
  resources:
    requests:
      storage: 1Gi
---
# Source: lumenvox/templates/persistentvolumeclaims/ttsPVC.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tts1-claim
  namespace: lumenvox
spec:
  accessModes:
    - ReadWriteOnce
  volumeName: tts1
  storageClassName: ""
  resources:
    requests:
      storage: 6Gi
---
# Source: lumenvox/charts/lumenvox-common/templates/roles/list-deployments.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: list-deployments
  namespace: lumenvox
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - list
---
# Source: lumenvox/charts/lumenvox-common/templates/rolebindings/license-list-deployments.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: license-list-deployments
  namespace: lumenvox
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: list-deployments
subjects:
- kind: ServiceAccount
  name: license
  namespace: lumenvox
---
# Source: lumenvox/charts/lumenvox-common/templates/services/admin-portal.yaml
apiVersion: v1
kind: Service
metadata:
  name: admin-portal-service
  namespace: lumenvox
spec:
  selector:
    app: admin-portal
  ports:
    - name: portal
      port: 82
      targetPort: portal
    - name: http
      port: 90
      targetPort: http
---
# Source: lumenvox/charts/lumenvox-common/templates/services/archive.yaml
apiVersion: v1
kind: Service
metadata:
  name: archive-service
  namespace: lumenvox
spec:
  selector:
    app: archive
  ports:
    - name: http
      port: 90
      targetPort: http
---
# Source: lumenvox/charts/lumenvox-common/templates/services/audit.yaml
apiVersion: v1
kind: Service
metadata:
  name: audit-service
  namespace: lumenvox
spec:
  selector:
    app: audit
  ports:
    - name: grpc
      port: 80
      targetPort: grpc
    - name: http
      port: 90
      targetPort: http
---
# Source: lumenvox/charts/lumenvox-common/templates/services/binary-storage.yaml
apiVersion: v1
kind: Service
metadata:
  name: binary-storage-service
  namespace: lumenvox
spec:
  selector:
    app: binary-storage
  ports:
    - name: grpc
      port: 80
      targetPort: grpc
    - name: http
      port: 90
      targetPort: http
---
# Source: lumenvox/charts/lumenvox-common/templates/services/configuration.yaml
apiVersion: v1
kind: Service
metadata:
  name: configuration-service
  namespace: lumenvox
spec:
  selector:
    app: configuration
  ports:
    - name: grpc
      port: 80
      targetPort: grpc
    - name: http
      port: 90
      targetPort: http
---
# Source: lumenvox/charts/lumenvox-common/templates/services/deployment-portal.yaml
apiVersion: v1
kind: Service
metadata:
  name: deployment-portal-service
  namespace: lumenvox
spec:
  selector:
    app: deployment-portal
  ports:
    - name: portal
      port: 82
      targetPort: portal
    - name: http
      port: 90
      targetPort: http
---
# Source: lumenvox/charts/lumenvox-common/templates/services/deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: deployment-service
  namespace: lumenvox
spec:
  selector:
    app: deployment
  ports:
    - name: grpc
      port: 80
      targetPort: grpc
    - name: http
      port: 90
      targetPort: http
---
# Source: lumenvox/charts/lumenvox-common/templates/services/license.yaml
apiVersion: v1
kind: Service
metadata:
  name: license-service
  namespace: lumenvox
spec:
  selector:
    app: license
  ports:
    - name: grpc
      port: 80
      targetPort: grpc
    - name: http
      port: 90
      targetPort: http
---
# Source: lumenvox/charts/lumenvox-common/templates/services/management-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: management-api-service
  namespace: lumenvox
spec:
  selector:
    app: management-api
  ports:
    - name: rest
      port: 81
      targetPort: rest
---
# Source: lumenvox/charts/lumenvox-common/templates/services/reporting.yaml
apiVersion: v1
kind: Service
metadata:
  name: reporting-service
  namespace: lumenvox
spec:
  selector:
    app: reporting
  ports:
    - name: grpc
      port: 80
      targetPort: grpc
    - name: http
      port: 90
      targetPort: http
---
# Source: lumenvox/charts/lumenvox-common/templates/services/resource.yaml
apiVersion: v1
kind: Service
metadata:
  name: resource-service
  namespace: lumenvox
spec:
  selector:
    app: resource
  ports:
    - name: grpc
      port: 80
      targetPort: grpc
    - name: http
      port: 90
      targetPort: http
---
# Source: lumenvox/charts/lumenvox-common/templates/services/transaction.yaml
apiVersion: v1
kind: Service
metadata:
  name: transaction-service
  namespace: lumenvox
spec:
  selector:
    app: transaction
  ports:
    - name: grpc
      port: 80
      targetPort: grpc
    - name: http
      port: 90
      targetPort: http
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/admin-portal.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-portal
  namespace: lumenvox
  labels:
    app: admin-portal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-portal
  template:
    metadata:
      labels:
        app: admin-portal
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '5110'
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: admin-portal
          image: lumenvox/admin-portal:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: portal
              containerPort: 3001
            - name: http
              containerPort: 5110
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 5m
              memory: 30Mi
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: rabbitmq-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '3h'  
            - name: GLOBAL_SETTINGS__RABBITMQ_EASY_CONNECTION_STRING
              value: 'host=external-services-rabbitmq.lumenvox;port=5672;username=lvuser;password=$(rabbitmq-password);requestedHeartbeat=10'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '180000'
            - name: SERVICE_ADDRESSES__REPORTING_API
              value: 'http://reporting-api-service.lumenvox:8090'
            - name: SERVICE_ADDRESSES__MANAGEMENT_API
              value: 'http://management-api-service.lumenvox'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.lumenvox'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.lumenvox'
            - name: SERVICE_ADDRESSES__LUMENVOX_API
              value: 'http://lumenvox-api-service.lumenvox:8280'
            - name: SERVICE_ADDRESSES__ADMIN_PORTAL
              value: 'http://admin-portal-service.lumenvox'
            - name: SERVICE_EXTERNAL_ADDRESSES__REPORTING_API
              value: 'https://reporting-api.testmachine.com'
            - name: SERVICE_EXTERNAL_ADDRESSES__MANAGEMENT_API
              value: 'https://management-api.testmachine.com'
            - name: SERVICE_EXTERNAL_ADDRESSES__LUMENVOX_API
              value: 'https://lumenvox-api.testmachine.com'
            - name: SERVICE_EXTERNAL_ADDRESSES__DEPLOYMENT_PORTAL
              value: 'https://deployment-portal.testmachine.com'
            - name: SERVICE_EXTERNAL_ADDRESSES__ADMIN_PORTAL
              value: 'https://admin-portal.testmachine.com'
      initContainers:
        - name: wait-for-deployment-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://deployment-service.lumenvox:90/health", "Deployment Service"]
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/archive.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: archive
  namespace: lumenvox
  labels:
    app: archive
spec:
  replicas: 1
  selector:
    matchLabels:
      app: archive
  template:
    metadata:
      labels:
        app: archive
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '5110'
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: archive
          image: lumenvox/archive:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5110
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 5m
              memory: 30Mi
          envFrom:
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: rabbitmq-existing-secret
            - secretRef:
                name: postgres-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '3h' 
            - name: GLOBAL_SETTINGS__RABBITMQ_CONNECTION_STRING
              value: 'amqp://lvuser:$(rabbitmq-password)@external-services-rabbitmq.lumenvox:5672'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '180000'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.lumenvox'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.lumenvox'
            - name: SERVICE_ADDRESSES__LUMENVOX_API
              value: 'http://lumenvox-api-service.lumenvox:80'
            - name: SESSION_SETTINGS__API_EXCHANGE
              value: 'BroadcastExchange'
            - name: LOCAL_SETTINGS__ENV
              value: 'dev'
            - name: GOLANG_PROTOBUF_REGISTRATION_CONFLICT
              value: 'ignore'
      initContainers:
        - name: wait-for-deployment-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://deployment-service.lumenvox:90/health", "Deployment Service"]
        - name: wait-for-rabbitmq-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["nslookup2"]
          args: ["external-services-rabbitmq.lumenvox", "RabbitMQ Service"]
        - name: wait-for-rabbitmq-management-endpoint
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://external-services-rabbitmq.lumenvox:15672", "RabbitMQ Management Page"]
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/audit.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit
  namespace: lumenvox
  labels:
    app: audit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: audit
  template:
    metadata:
      labels:
        app: audit
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '90'
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: audit
          image: lumenvox/audit:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              containerPort: 80
            - name: http
              containerPort: 90
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 250m
              memory: 400Mi
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: rabbitmq-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '3h'   
            - name: GLOBAL_SETTINGS__RABBITMQ_EASY_CONNECTION_STRING
              value: 'host=external-services-rabbitmq.lumenvox;port=5672;username=lvuser;password=$(rabbitmq-password);requestedHeartbeat=10'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '180000'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.lumenvox'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.lumenvox'
            - name: DB_SETTINGS__DEPLOYMENT_RECONNECTION_TIMEOUT_SEC
              value: '30'
            - name: DB_MIGRATION__RUN_DATABASE_MIGRATIONS
              value: 'true'
            - name: DB_MIGRATION__EXIT_AFTER_DATABASE_MIGRATIONS
              value: 'false'
            - name: DB_MIGRATION__DB_COMMAND_TIMEOUT_SECONDS
              value: '100'
            - name: LOCAL_SETTINGS__SERVICE_START_DELAY_SECONDS
              value: '5'
      initContainers:
        - name: wait-for-deployment-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://deployment-service.lumenvox:90/health", "Deployment Service"]
        - name: wait-for-rabbitmq-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["nslookup2"]
          args: ["external-services-rabbitmq.lumenvox", "RabbitMQ Service"]
        - name: wait-for-rabbitmq-management-endpoint
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://external-services-rabbitmq.lumenvox:15672", "RabbitMQ Management Page"]
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/binary-storage.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: binary-storage
  namespace: lumenvox
  labels:
    app: binary-storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: binary-storage
  template:
    metadata:
      labels:
        app: binary-storage
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '90'
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: binary-storage
          image: lumenvox/storage:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              containerPort: 80
            - name: http
              containerPort: 90
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 350m
              memory: 300Mi
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: rabbitmq-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: GLOBAL_SETTINGS__RABBITMQ_CONNECTION_STRING
              value: 'amqp://lvuser:$(rabbitmq-password)@external-services-rabbitmq.lumenvox:5672'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '180000'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.lumenvox'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'deployment-service.lumenvox:80'
            - name: LICENSE_SETTINGS__CLUSTER_GUID
              value: 'GET-CLUSTER-GUID-FROM-LUMENVOX'
            - name: PORT__GRPC_API
              value: '80'
            - name: PORT__METRICS
              value: '90'
      initContainers:
        - name: wait-for-deployment-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://deployment-service.lumenvox:90/health", "Deployment Service"]
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/configuration.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: configuration
  namespace: lumenvox
  labels:
    app: configuration
spec:
  replicas: 1
  selector:
    matchLabels:
      app: configuration
  template:
    metadata:
      labels:
        app: configuration
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '90'
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: configuration
          image: lumenvox/configuration:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              containerPort: 80
            - name: http
              containerPort: 90
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 200Mi
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: rabbitmq-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '3h'   
            - name: GLOBAL_SETTINGS__RABBITMQ_EASY_CONNECTION_STRING
              value: 'host=external-services-rabbitmq.lumenvox;port=5672;username=lvuser;password=$(rabbitmq-password);requestedHeartbeat=10'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '180000'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.lumenvox'
            - name: DB_SETTINGS__DEPLOYMENT_RECONNECTION_TIMEOUT_SEC
              value: '30'
            - name: DB_MIGRATION__RUN_DATABASE_MIGRATIONS
              value: 'true'
            - name: DB_MIGRATION__EXIT_AFTER_DATABASE_MIGRATIONS
              value: 'false'
            - name: DB_MIGRATION__DB_COMMAND_TIMEOUT_SECONDS
              value: '100'
            - name: LOCAL_SETTINGS__ENABLE_AUDIT_LOG
              value: 'false'
            - name: LOCAL_SETTINGS__SERVICE_START_DELAY_SECONDS
              value: '5'
            - name: GOLANG_PROTOBUF_REGISTRATION_CONFLICT
              value: 'ignore'
          volumeMounts:
            - mountPath: /etc/lumenvox/Lang/vb-active
              name: vb-active
      initContainers:
        - name: wait-for-deployment-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://deployment-service.lumenvox:90/health", "Deployment Service"]
        - name: wait-for-rabbitmq-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["nslookup2"]
          args: ["external-services-rabbitmq.lumenvox", "RabbitMQ Service"]
        - name: wait-for-rabbitmq-management-endpoint
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://external-services-rabbitmq.lumenvox:15672", "RabbitMQ Management Page"]
      volumes:
        - name: vb-active
          persistentVolumeClaim:
            claimName: vb-active-claim
            readOnly: false
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/deployment-portal.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-portal
  namespace: lumenvox
  labels:
    app: deployment-portal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deployment-portal
  template:
    metadata:
      labels:
        app: deployment-portal
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '5110'
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: deployment-portal
          image: lumenvox/deployment-portal:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: portal
              containerPort: 3101
            - name: http
              containerPort: 5110
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 5m
              memory: 30Mi
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: rabbitmq-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '3h'   
            - name: GLOBAL_SETTINGS__RABBITMQ_EASY_CONNECTION_STRING
              value: 'host=external-services-rabbitmq.lumenvox;port=5672;username=lvuser;password=$(rabbitmq-password);requestedHeartbeat=10'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '180000'
            - name: SERVICE_ADDRESSES__REPORTING_API
              value: 'http://reporting-api-service.lumenvox:8090'
            - name: SERVICE_ADDRESSES__MANAGEMENT_API
              value: 'http://management-api-service.lumenvox'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.lumenvox'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.lumenvox'
            - name: SERVICE_ADDRESSES__BINARY_STORAGE_SERVICE
              value: 'http://binary-storage-service.lumenvox'
            - name: SERVICE_ADDRESSES__LUMENVOX_API
              value: 'http://lumenvox-api-service.lumenvox:8280'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_PORTAL
              value: 'http://deployment-portal-service.lumenvox:3101'
            - name: SERVICE_EXTERNAL_ADDRESSES__REPORTING_API
              value: 'https://reporting-api.testmachine.com'
            - name: SERVICE_EXTERNAL_ADDRESSES__MANAGEMENT_API
              value: 'https://management-api.testmachine.com'
            - name: SERVICE_EXTERNAL_ADDRESSES__LUMENVOX_API
              value: 'https://lumenvox-api.testmachine.com'
            - name: SERVICE_EXTERNAL_ADDRESSES__DEPLOYMENT_PORTAL
              value: 'https://deployment-portal.testmachine.com'
            - name: SERVICE_EXTERNAL_ADDRESSES__ADMIN_PORTAL
              value: 'https://admin-portal.testmachine.com'
      initContainers:
        - name: wait-for-deployment-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://deployment-service.lumenvox:90/health", "Deployment Service"]
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment
  namespace: lumenvox
  labels:
    app: deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deployment
  template:
    metadata:
      labels:
        app: deployment
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '90'
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: deployment
          image: lumenvox/deployment:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              containerPort: 80
            - name: http
              containerPort: 90
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 150Mi
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: mongodb-existing-secret
            - secretRef:
                name: postgres-existing-secret
            - secretRef:
                name: rabbitmq-existing-secret
            - secretRef:
                name: redis-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '3h'   
            - name: GLOBAL_SETTINGS__RABBITMQ_EASY_CONNECTION_STRING
              value: 'host=external-services-rabbitmq.lumenvox;port=5672;username=lvuser;password=$(rabbitmq-password);requestedHeartbeat=10'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '180000'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.lumenvox'
            - name: DB_SETTINGS__POSTGRES_CONNECTION_STRING
              value: 'postgres://lvuser:$(postgresql-password)@external-services-postgresql.lumenvox:5432/lumenvox_db?sslmode=disable&search_path=public'
            - name: DB_SETTINGS__COMMAND_TIMEOUT_SECONDS
              value: '100'
            - name: DB_MIGRATION__RUN_DATABASE_MIGRATIONS
              value: 'true'
            - name: DB_MIGRATION__EXIT_AFTER_DATABASE_MIGRATIONS
              value: 'false'
            - name: DB_MIGRATION__DB_COMMAND_TIMEOUT_SECONDS
              value: '100'
            - name: LICENSE_SETTINGS__CLUSTER_GUID
              value: 'GET-CLUSTER-GUID-FROM-LUMENVOX'
            - name: LOCAL_SETTINGS__ENABLE_AUDIT_LOG
              value: 'false'
            - name: LOCAL_SETTINGS__SERVICE_START_DELAY_SECONDS
              value: '0'
      initContainers:
        - name: init-postgres
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["nslookup2"]
          args: ["external-services-postgresql.lumenvox", "Postgres"]
        - name: init-mongodb
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["nslookup2"]
          args: ["external-services-mongodb.lumenvox", "MongoDB"]
        - name: init-redis
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["nslookup2"]
          args: ["external-services-redis-master.lumenvox", "Redis"]
        - name: wait-for-rabbitmq-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["nslookup2"]
          args: ["external-services-rabbitmq.lumenvox", "RabbitMQ Service"]
        - name: wait-for-rabbitmq-management-endpoint
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://external-services-rabbitmq.lumenvox:15672", "RabbitMQ Management Page"]
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/license.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: license
  namespace: lumenvox
  labels:
    app: license
spec:
  replicas: 1
  selector:
    matchLabels:
      app: license
  template:
    metadata:
      labels:
        app: license
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '5110'
        linkerd.io/inject: enabled
    spec:
      serviceAccountName: license
      containers:
        - name: license
          image: lumenvox/license:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              containerPort: 5010
            - name: http
              containerPort: 5110
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 5m
              memory: 30Mi
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: rabbitmq-existing-secret
            - secretRef:
                name: postgres-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '3h'   
            - name: GLOBAL_SETTINGS__RABBITMQ_CONNECTION_STRING
              value: 'amqp://lvuser:$(rabbitmq-password)@external-services-rabbitmq.lumenvox:5672'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '180000'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.lumenvox'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.lumenvox'
            - name: DB_SETTINGS__POSTGRES_CONNECTION_STRING
              value: 'postgres://lvuser:$(postgresql-password)@external-services-postgresql.lumenvox:5432/lumenvox_db?sslmode=disable&search_path=public'
            - name: LICENSE_SETTINGS__CLUSTER_GUID
              value: 'GET-CLUSTER-GUID-FROM-LUMENVOX'
            - name: LICENSE_SETTINGS__KUBERNETES_NAMESPACE
              value: 'lumenvox'
            - name: LICENSE_SETTINGS__REPORT_FREQUENCY_MINS
              value: '1440'
            - name: LICENSE_SETTINGS__REPORT_SYNC_HOUR
              value: '1'
            - name: LICENSE_SETTINGS__REPORT_SYNC_MIN
              value: '0'
            
            - name: GOLANG_PROTOBUF_REGISTRATION_CONFLICT
              value: 'ignore'
            - name: LOCAL_SETTINGS__LICENSE_USAGE_COUNTERS_POLLING_INTERVAL_MIN
              value: "60"
      initContainers:
        - name: wait-for-deployment-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://deployment-service.lumenvox:90/health", "Deployment Service"]
        - name: wait-for-rabbitmq-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["nslookup2"]
          args: ["external-services-rabbitmq.lumenvox", "RabbitMQ Service"]
        - name: wait-for-rabbitmq-management-endpoint
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://external-services-rabbitmq.lumenvox:15672", "RabbitMQ Management Page"]
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/management-api.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: management-api
  namespace: lumenvox
  labels:
    app: management-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: management-api
  template:
    metadata:
      labels:
        app: management-api
        # No Prometheus scraping for now
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: management-api
          image: lumenvox/management-api:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: rest
              containerPort: 80
          readinessProbe:
            httpGet:
              path: /health
              port: rest
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: rest
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 150Mi
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: rabbitmq-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '3h'   
            - name: GLOBAL_SETTINGS__RABBITMQ_EASY_CONNECTION_STRING
              value: 'host=external-services-rabbitmq.lumenvox;port=5672;username=lvuser;password=$(rabbitmq-password);requestedHeartbeat=10'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '180000'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.lumenvox'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.lumenvox'
            - name: SERVICE_ADDRESSES__BINARY_STORAGE_SERVICE
              value: 'http://binary-storage-service.lumenvox'
            - name: DB_SETTINGS__DEPLOYMENT_RECONNECTION_TIMEOUT_SEC
              value: '30'
            - name: LOCAL_SETTINGS__ENABLE_AUDIT_LOG
              value: 'false'
            - name: LOCAL_SETTINGS__SERVICE_START_DELAY_SECONDS
              value: '6'
      initContainers:
        - name: wait-for-rabbitmq-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["nslookup2"]
          args: ["external-services-rabbitmq.lumenvox", "RabbitMQ Service"]
        - name: wait-for-rabbitmq-management-endpoint
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://external-services-rabbitmq.lumenvox:15672", "RabbitMQ Management Page"]
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/reporting.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reporting
  namespace: lumenvox
  labels:
    app: reporting
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reporting
  template:
    metadata:
      labels:
        app: reporting
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '90'
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: reporting
          image: lumenvox/reporting:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              containerPort: 80
            - name: http
              containerPort: 90
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 12
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 12
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: rabbitmq-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '3h'   
            - name: GLOBAL_SETTINGS__RABBITMQ_EASY_CONNECTION_STRING
              value: 'host=external-services-rabbitmq.lumenvox;port=5672;username=lvuser;password=$(rabbitmq-password);requestedHeartbeat=10'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '180000'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.lumenvox'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.lumenvox'
            - name: DB_SETTINGS__DEPLOYMENT_RECONNECTION_TIMEOUT_SEC
              value: '30'
            - name: LOCAL_SETTINGS__SERVICE_START_DELAY_SECONDS
              value: '5'
      initContainers:
        - name: wait-for-deployment-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://deployment-service.lumenvox:90/health", "Deployment Service"]
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/resource.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resource
  namespace: lumenvox
  labels:
    app: resource
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resource
  template:
    metadata:
      labels:
        app: resource
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '5110'
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: resource
          image: lumenvox/resource:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              containerPort: 8080
            - name: http
              containerPort: 5110
          startupProbe:
            httpGet:
              path: /health
              port: http

            failureThreshold: 360
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 5m
              memory: 30Mi
          envFrom:
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: postgres-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '3h'   
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.lumenvox'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.lumenvox'
            - name: RESOURCE_SETTINGS__RESOURCE_DOWNLOAD_ENDPOINT
              value: ''
            - name: RESOURCE_SETTINGS__MAX_CONCURRENT_DOWNLOADS
              value: '4'
            - name: RESOURCE_SETTINGS__DOWNLOAD_ATTEMPT_COUNTER
              value: '4'
            - name: RESOURCE_SETTINGS__DOWNLOAD_ATTEMPT_DELAY_IN_MS
              value: '1500'
            - name: RESOURCE_SETTINGS__GRPC_API_PORT
              value: '8080'
            - name: GOLANG_PROTOBUF_REGISTRATION_CONFLICT
              value: 'ignore'
          volumeMounts:
            - mountPath: /etc/lumenvox/Lang
              name: lang
            - mountPath: /usr/lib64/lumenvox_backends
              name: backends
      initContainers:
        - name: wait-for-deployment-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://deployment-service.lumenvox:90/health", "Deployment Service"]
      volumes:
        - name: lang
          persistentVolumeClaim:
            claimName: lang-claim
            readOnly: false
        - name: backends
          persistentVolumeClaim:
            claimName: backends-claim
            readOnly: false
---
# Source: lumenvox/charts/lumenvox-common/templates/deployments/transaction.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transaction
  namespace: lumenvox
  labels:
    app: transaction
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transaction
  template:
    metadata:
      labels:
        app: transaction
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '90'
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: transaction
          image: lumenvox/transaction:4.7
          imagePullPolicy: IfNotPresent
          ports:
            - name: grpc
              containerPort: 80
            - name: http
              containerPort: 90
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 1000Mi
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            - secretRef:
                name: rabbitmq-existing-secret
          env:
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: 'info'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '3h'   
            - name: GLOBAL_SETTINGS__RABBITMQ_EASY_CONNECTION_STRING
              value: 'host=external-services-rabbitmq.lumenvox;port=5672;username=lvuser;password=$(rabbitmq-password);requestedHeartbeat=10'
            - name: GLOBAL_SETTINGS__RMQ_QUEUE_EXPIRE_MS
              value: '180000'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.lumenvox'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.lumenvox'
            - name: DB_SETTINGS__DEPLOYMENT_RECONNECTION_TIMEOUT_SEC
              value: '30'
            - name: DB_MIGRATION__RUN_DATABASE_MIGRATIONS
              value: 'true'
            - name: DB_MIGRATION__EXIT_AFTER_DATABASE_MIGRATIONS
              value: 'false'
            - name: DB_MIGRATION__DB_COMMAND_TIMEOUT_SECONDS
              value: '100'
            - name: LOCAL_SETTINGS__SERVICE_START_DELAY_SECONDS
              value: '5'
      initContainers:
        - name: wait-for-deployment-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://deployment-service.lumenvox:90/health", "Deployment Service"]
        - name: wait-for-rabbitmq-service
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["nslookup2"]
          args: ["external-services-rabbitmq.lumenvox", "RabbitMQ Service"]
        - name: wait-for-rabbitmq-management-endpoint
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["curl2"]
          args: ["http://external-services-rabbitmq.lumenvox:15672", "RabbitMQ Management Page"]
---
# Source: lumenvox/templates/jobs/directory-setup.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: persistent-volume-directory-setup
spec:
  template:
    spec:
      containers:
        - name: initialize-directories
          image: lumenvox/cloud-init-tools:4.7
          imagePullPolicy: IfNotPresent
          command: ["speech_dirs"]
          args: ["/mnt/fileserver/"]
          volumeMounts:
            - mountPath: /mnt/fileserver
              name: root
      restartPolicy: OnFailure
      volumes:
        - name: root
          persistentVolumeClaim:
            claimName: root-claim
            readOnly: false
  backoffLimit: 4
---
# Source: lumenvox/charts/lumenvox-common/templates/ingresses/admin-portal.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-portal-ingress
  namespace: lumenvox
spec:
  ingressClassName: nginx
  rules:
    - host: admin-portal.testmachine.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: admin-portal-service
                port:
                  name: portal
  tls:
    - secretName: speech-tls-secret
      hosts:
        - admin-portal.testmachine.com
---
# Source: lumenvox/charts/lumenvox-common/templates/ingresses/deployment-portal.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: deployment-portal-ingress
  namespace: lumenvox
spec:
  ingressClassName: nginx
  rules:
    - host: deployment-portal.testmachine.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: deployment-portal-service
                port:
                  name: portal
  tls:
    - secretName: speech-tls-secret
      hosts:
        - deployment-portal.testmachine.com
---
# Source: lumenvox/charts/lumenvox-common/templates/ingresses/linkerd-dashboard-ingress.yaml
# apiVersion: networking.k8s.io/v1beta1 # for k8s < v1.19
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ingress
  namespace: linkerd-viz
  annotations:
    nginx.ingress.kubernetes.io/upstream-vhost: $service_name.$namespace.svc.cluster.local:8084
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Origin "";
      proxy_hide_header l5d-remote-ip;
      proxy_hide_header l5d-server-id;
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: web-ingress-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
spec:
  rules:
  - host: linkerd.testmachine.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web
            port:
              number: 8084
---
# Source: lumenvox/charts/lumenvox-common/templates/ingresses/management-api.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: management-api-ingress
  namespace: lumenvox
spec:
  ingressClassName: nginx
  rules:
    - host: management-api.testmachine.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: management-api-service
                port:
                  name: rest
  tls:
    - secretName: speech-tls-secret
      hosts:
        - management-api.testmachine.com
