---
# Source: smarter-edge/charts/smarter-cni/templates/daemonset.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: smarter-cni-config
data:
  CIDR: "172.39.0.0/16"
  GW:   "172.39.0.1"
---
# Source: smarter-edge/charts/smarter-dns/templates/daemonset.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: smarter-dns-core
data:
  Corefile: |
    .:353 {
      hosts /tmp/cridns/smarterdns {
        reload 5s
        fallthrough
      }
      forward . /etc/resolv.conf
      log
    }
---
# Source: smarter-edge/charts/smarter-dns/templates/daemonset.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: smarter-dns-config
data:
  CLUSTER_DNS: "169.254.0.2"
  CLUSTER_DOMAIN: "cluster.local"
  DNS_LOGGING: "False"
  CRI_DIR: "unix:///var/run/crisock"
  CRI_FILE: "containerd.sock"
  WAIT_INTERVAL: "30"
  IFACE: "eth0"
---
# Source: smarter-edge/charts/smarter-cni/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: smarter-cni
  name: smarter-cni
spec:
  selector:
    matchLabels:
      k8s-app: smarter-cni
  template:
    metadata:
      labels:
        k8s-app: smarter-cni
    spec:
      nodeSelector:
        smarter.type: edge
      priorityClassName: "system-node-critical"
      tolerations:
        - key: "smarter.type"
          operator: "Equal"
          value: "edge"
          effect: "NoSchedule"
      containers:
        - name: smarter-cni
          image: ghcr.io/smarter-project/smarter-cni:v1.34.4
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          volumeMounts:
          - mountPath: /opt/cni
            name: cni-path
          - mountPath: /etc/cni
            name: etc-cni-netd
          - mountPath: /usr/libexec/cni
            name: alt-cni-path
          env:
          - name: DEST_DIR
            value: "/opt/cni/bin"
          envFrom:
          - configMapRef:
              name: smarter-cni-config
      restartPolicy: Always
      priorityClassName: system-node-critical
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
       - operator: Exists
         effect: NoSchedule
      volumes:
      # To install cni plugin in the host
      - hostPath:
          path:  /opt/cni
          type: DirectoryOrCreate
        name: cni-path
        # To install cni configuration in the host
      - hostPath:
          path: /etc/cni
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path:  /usr/libexec/cni
        name: alt-cni-path
---
# Source: smarter-edge/charts/smarter-device-manager/templates/common.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: smarter-device-manager
  labels:
    name: smarter-device-manager
    role: agent
spec:
  selector:
    matchLabels:
      name: smarter-device-manager
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels: 
        name: smarter-device-manager
      annotations:
        node.kubernetes.io/bootstrap-checkpoint: "true"
    spec: 
      nodeSelector:
        smarter.type: edge
      tolerations:
      - key: "smarter.type"
        operator: "Equal"
        value: "edge"
        effect: "NoSchedule"
      priorityClassName: "system-node-critical"
      hostname: smarter-device-manager
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: smarter-device-manager
        image: ghcr.io/smarter-project/smarter-device-manager:v1.20.11
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        resources:
          limits:
            cpu: 200m
            memory: 15Mi
          requests:
            cpu: 10m
            memory: 15Mi
        volumeMounts:
          - name: device-plugin
            mountPath: /var/lib/kubelet/device-plugins
          - name: dev-dir
            mountPath: /dev
          - name: sys-dir
            mountPath: /sys
      volumes:
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/device-plugins
        - name: dev-dir
          hostPath:
            path: /dev
        - name: sys-dir
          hostPath:
            path: /sys
      terminationGracePeriodSeconds: 30
---
# Source: smarter-edge/charts/smarter-dns/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: smarter-dns
  labels:
    k8s-app: smarter-dns
spec:
  selector:
    matchLabels:
      k8s-app: smarter-dns
  template:
    metadata:
      labels:
        k8s-app: smarter-dns
    spec:
      nodeSelector:
        smarter.type: edge
      priorityClassName: "system-node-critical"
      tolerations:
        - key: "smarter.type"
          operator: "Equal"
          value: "edge"
          effect: "NoSchedule"
      hostNetwork: true
      containers:
      - name: smarter-dns
        image: ghcr.io/smarter-project/smarter-dns:v1.3.11
        imagePullPolicy: IfNotPresent
        imagePullPolicy: Always
        resources:
          limits:
            memory: 270Mi
          requests:
            cpu: 100m
            memory: 150Mi
        args: [ "-conf", "/etc/coredns/corefile" ]
        envFrom:
          - configMapRef:
             name: smarter-dns-config
        volumeMounts:
        # Defaults to using the standard directory containing the containerd socket
        - name: crisock
          mountPath: /var/run/crisock
        - name: config-volume
          mountPath: /etc/coredns
        - name: usrbin
          mountPath: /host/usr/bin
        - name: usrlocalbin
          mountPath: /host/usr/local/bin
        - name: criconfig
          mountPath: /var/lib/rancher/k3s/agent/etc
        ports:
        - containerPort: 353
          name: dns
          protocol: UDP
        - containerPort: 353
          name: dns-tcp
          protocol: TCP
        securityContext:
          privileged: true        
          capabilities:
            add:
            - NET_BIND_SERVICE
            - NET_ADMIN
            - SYS_MODULE            
          readOnlyRootFilesystem: false
      dnsPolicy: Default
      volumes:
        # Defaults to using the standard directory containing the containerd socket
        - name: crisock
          hostPath:
            path: /var/run/k3s/containerd
        - name: usrbin
          hostPath:
            path: /usr/bin
            type: DirectoryOrCreate
        - name: usrlocalbin
          hostPath:
            path: /usr/local/bin
            type: DirectoryOrCreate
        - name: criconfig
          hostPath:
            path: /var/lib/rancher/k3s/agent/etc
            type: DirectoryOrCreate
        - name: config-volume
          configMap:
            name: smarter-dns-core
            items:
            - key: Corefile
              path: corefile
