---
# Source: openobserve/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-openobserve
  labels:
    helm.sh/chart: openobserve-0.1.10
    app.kubernetes.io/name: openobserve
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: openobserve/templates/initial-pass-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "initial-root-password"
  annotations:
    "helm.sh/resource-policy": "keep"
  labels:
    helm.sh/chart: openobserve-0.1.10
    app.kubernetes.io/name: openobserve
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  password: "c0Q5NXBNMGVpbXdxakdCQQ=="
---
# Source: openobserve/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-openobserve
  labels:
    helm.sh/chart: openobserve-0.1.10
    app.kubernetes.io/name: openobserve
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 5080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: openobserve
    app.kubernetes.io/instance: my-release
---
# Source: openobserve/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-openobserve
  labels:
    helm.sh/chart: openobserve-0.1.10
    app.kubernetes.io/name: openobserve
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: my-release-openobserve
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: openobserve
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: openobserve
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-openobserve
      securityContext:
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 3000
        runAsNonRoot: true
        runAsUser: 10000
      # terminationGracePeriodSeconds: 0
      containers:
        - name: openobserve
          securityContext:
            {}
          image: "public.ecr.aws/zinclabs/openobserve:v0.8.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: ZO_ROOT_USER_EMAIL
              value: "admin@example.com"
            - name: ZO_ROOT_USER_PASSWORD
              valueFrom:
                  secretKeyRef:
                    name: initial-root-password
                    key: password
            - name: ZO_DATA_DIR
              value: /data
            - name: ZO_S3_ACCESS_KEY
              value: ""
            - name: ZO_S3_BUCKET_NAME
              value: ""
            - name: ZO_S3_REGION_NAME
              value: ""
            - name: ZO_S3_SECRET_KEY
              value: ""
            - name: ZO_S3_SERVER_URL
              value: ""
          # command: ["/bin/bash", "-c", "while true; do sleep 1; done"]
          resources:
            limits:
              cpu: 4096m
              memory: 2048Mi
            requests:
              cpu: 256m
              memory: 50Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5080
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5080
            initialDelaySeconds: 3
            periodSeconds: 3
          ports:
            - containerPort: 5080
              name: http
          volumeMounts:
          - name: data
            mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
---
# Source: openobserve/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-openobserve-test-connection"
  labels:
    helm.sh/chart: openobserve-0.1.10
    app.kubernetes.io/name: openobserve
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.8.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-openobserve:80/web/']
  restartPolicy: Never
