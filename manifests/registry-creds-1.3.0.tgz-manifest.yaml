---
# Source: registry-creds/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
    name: registry-creds
    namespace: kube-system
---
# Source: registry-creds/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: registry-creds
rules:
    - apiGroups:
          - ""
      resources:
          - namespaces
      verbs:
          - list
          - watch
    - apiGroups:
          - ""
      resources:
          - secrets
      verbs:
          - create
          - get
          - update
    - apiGroups:
          - ""
      resources:
          - serviceaccounts
      verbs:
          - get
          - update
---
# Source: registry-creds/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: registry-creds
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: registry-creds
subjects:
    - kind: ServiceAccount
      name: registry-creds
      namespace: kube-system
---
# Source: registry-creds/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-registry-creds
  namespace: kube-system
  labels:
    app.kubernetes.io/name: registry-creds
    helm.sh/chart: registry-creds-1.3.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: registry-creds
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: registry-creds
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: registry-creds
      containers:
        - name: registry-creds
          image: upmcenterprises/registry-creds:1.10
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 40m
              memory: 50Mi
          env:
