---
# Source: spark/templates/spark-livy-lb.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-livy
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "spark-1.0.4"
    component: "my-release-livy"
spec:
  ports:
    - name: http
      port: 8998
      targetPort: 8998
  selector:
    component: "my-release-livy"
  type: LoadBalancer
---
# Source: spark/templates/spark-master-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-master
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "spark-1.0.4"
    component: "my-release-spark-master"
spec:
  ports:
    - port: 7077
      targetPort: 7077
  selector:
    component: "my-release-spark-master"
---
# Source: spark/templates/spark-master-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-webui
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "spark-1.0.4"
    component: "my-release-spark-master"
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: "web-port"
    - port: 7077
      targetPort: 7077
      name: "spark-port"
  selector:
    component: "my-release-spark-master"
  type: LoadBalancer
---
# Source: spark/templates/spark-worker-lb.yaml
kind: Service
apiVersion: v1
metadata:
  name: my-release-workerlb
spec:
  selector:
    component: "my-release-spark-worker"
  ports:
  - name: driverport
    port: 8085
    targetPort: 8085
  - name: webui
    port: 8081
    targetPort: 8081
  - name: monitor
    port: 4040
    targetPort: 4040
  - name: server
    port: 8888
    targetPort: 8888
  - name: misc
    port: 8889
    targetPort: 8889
  - name: webui2
    port: 8080
    targetPort: 8080
  type: LoadBalancer
---
# Source: spark/templates/spark-zeppelin-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-zeppelin
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "spark-1.0.4"
    component: "my-release-zeppelin"
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    component: "my-release-zeppelin"
  type: LoadBalancer
---
# Source: spark/templates/spark-livy-deployment.yaml
# Livy deployment 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-livy
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "spark-1.0.4"
    component: "my-release-livy"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "my-release-livy"
  template:
    metadata:
      labels:
        heritage: "Helm"
        release: "my-release"
        chart: "spark-1.0.4"
        component: "my-release-livy"
    spec:
      containers:
        - name: my-release-livy
          image: "dbanda/livy:0.8"
          ports:
            - containerPort: 8998
              name: http
          resources:
            requests:
              cpu: "100m"
              memory: "1024Mi"
          env:
            - name: SPARK_MASTER
              value: "spark://my-release-master:7077"
            - name: SPARK_HOME
              value: "/opt/spark"
            - name : HADOOP_HOME
              value : "/opt/hadoop"
            - name : SPARK_CONF_DIR 
              value : "/opt/spark/conf"
            - name : HOST
              value: "0.0.0.0"
---
# Source: spark/templates/spark-master-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-master
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "spark-1.0.4"
    component: "my-release-spark-master"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "my-release-spark-master"
  template:
    metadata:
      labels:
        heritage: "Helm"
        release: "my-release"
        chart: "spark-1.0.4"
        component: "my-release-spark-master"
    spec:
      containers:
        - name: my-release-master
          image: "dbanda/spark:2.4.6"
          command: ["/bin/sh","-c"]
          args: ["echo $(hostname -i) my-release-master >> /etc/hosts; /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master"]
          ports:
            - containerPort: 7077
            - containerPort: 8080
          resources:
            requests:
              cpu: "100m"
              memory: "1024Mi"
          env:
          - name: SPARK_DAEMON_MEMORY
            value: "1g"
          - name: SPARK_MASTER_HOST
            value: my-release-master
          - name: SPARK_MASTER_PORT
            value: "7077"
          - name: SPARK_MASTER_WEBUI_PORT
            value: "8080"
---
# Source: spark/templates/spark-worker-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-worker
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "spark-1.0.4"
    component: "my-release-spark-worker"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "my-release-spark-worker"
  template:
    metadata:
      labels:
        heritage: "Helm"
        release: "my-release"
        chart: "spark-1.0.4"
        component: "my-release-spark-worker"
    spec:
      containers:
        - name: my-release-worker
          image: "dbanda/spark:2.4.6"
          command: ["/opt/spark/bin/spark-class", "org.apache.spark.deploy.worker.Worker", "spark://my-release-master:7077"]
          ports:
            - containerPort: 8081
          resources:
            requests:
              cpu: "100m"
              memory: "2048Mi"
          env:
          - name: SPARK_DAEMON_MEMORY
            value: "1g"
          - name: SPARK_WORKER_MEMORY
            value: "1g"
          - name: SPARK_WORKER_WEBUI_PORT
            value: "8080"
---
# Source: spark/templates/spark-zeppelin-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-zeppelin
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "spark-1.0.4"
    component: "my-release-zeppelin"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: "my-release-zeppelin"
  template:
    metadata:
      labels:
        heritage: "Helm"
        release: "my-release"
        chart: "spark-1.0.4"
        component: "my-release-zeppelin"
    spec:
      containers:
        - name: my-release-zeppelin
          image: "dbanda/zeppelin:0.9.0-preview1"
          ports:
            - containerPort: 8080
              name: http
          resources:
            requests:
              cpu: "100m"
              memory: "2048Mi"
          env:
            - name: SPARK_MASTER
              value: "spark://my-release-master:7077"
          volumeMounts:
      volumes:
---
# Source: spark/templates/spark-sql-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-sql-test-mk6hm"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: my-release-sql-test
      image: dbanda/spark:2.4.6
      command: ["/opt/spark/bin/spark-sql", "--master",
                "spark://my-release-master:7077", "-e",
                "show databases;"]
  restartPolicy: Never
