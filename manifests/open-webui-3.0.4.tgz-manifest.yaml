---
# Source: open-webui/charts/ollama/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: open-webui-ollama
  labels:
    helm.sh/chart: ollama-0.33.0
    app.kubernetes.io/version: "0.1.41"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui-ollama
automountServiceAccountToken: true
---
# Source: open-webui/charts/pipelines/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: open-webui-pipelines
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui-pipelines
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: 2Gi
---
# Source: open-webui/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: open-webui
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: 2Gi
---
# Source: open-webui/charts/ollama/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: open-webui-ollama
  labels:
    helm.sh/chart: ollama-0.33.0
    app.kubernetes.io/version: "0.1.41"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui-ollama
spec:
  type: ClusterIP
  ports:
    - port: 11434
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui-ollama
---
# Source: open-webui/charts/pipelines/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: open-webui-pipelines
  labels:
    helm.sh/chart: pipelines-0.0.1
    app.kubernetes.io/version: "alpha"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui-pipelines
spec:
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui-pipelines
  type: ClusterIP
  ports:
  - protocol: TCP
    name: http
    port: 9099
    targetPort: http
---
# Source: open-webui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: open-webui
  labels:
    helm.sh/chart: open-webui-3.0.4
    app.kubernetes.io/version: "v0.3.4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui
spec:
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui
  type: ClusterIP
  ports:
  - protocol: TCP
    name: http
    port: 80
    targetPort: http
---
# Source: open-webui/charts/ollama/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-webui-ollama
  labels:
    helm.sh/chart: ollama-0.33.0
    app.kubernetes.io/version: "0.1.41"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui-ollama
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: open-webui-ollama
  template:
    metadata:
      labels:
        helm.sh/chart: ollama-0.33.0
        app.kubernetes.io/version: "0.1.41"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: open-webui-ollama
    spec:
      serviceAccountName: open-webui-ollama
      securityContext:
        {}
      containers:
        - name: ollama
          securityContext:
            {}
          image: "ollama/ollama:0.1.41"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 11434
              protocol: TCP
          env:
          args:
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: ollama-data
              mountPath: /root/.ollama
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 6
      volumes:
        - name: ollama-data
          emptyDir: { }
---
# Source: open-webui/charts/pipelines/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-webui-pipelines
  labels:
    helm.sh/chart: pipelines-0.0.1
    app.kubernetes.io/version: "alpha"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: open-webui-pipelines
  template:
    metadata:
      labels:
        helm.sh/chart: pipelines-0.0.1
        app.kubernetes.io/version: "alpha"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: open-webui-pipelines
    spec:
      enableServiceLinks: false
      automountServiceAccountToken: false
      containers:
      - name: pipelines
        image: ghcr.io/open-webui/pipelines:main
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 9099
        volumeMounts:
        - name: data
          mountPath: /app/backend/data
        env:
        tty: true
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: open-webui-pipelines
---
# Source: open-webui/templates/workload-manager.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: open-webui
  labels:
    helm.sh/chart: open-webui-3.0.4
    app.kubernetes.io/version: "v0.3.4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: open-webui
  template:
    metadata:
      labels:
        helm.sh/chart: open-webui-3.0.4
        app.kubernetes.io/version: "v0.3.4"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: open-webui
    spec:
      enableServiceLinks: false
      automountServiceAccountToken: false
      containers:
      - name: open-webui
        image: ghcr.io/open-webui/open-webui:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        volumeMounts:
        - name: data
          mountPath: /app/backend/data
        env:
        - name: OLLAMA_BASE_URLS
          value: "http://open-webui-ollama.default.svc.cluster.local:11434"
        
        - name: OPENAI_API_BASE_URL
          value: http://open-webui-pipelines.default.svc.cluster.local:9099
        
        - name: OPENAI_API_KEY
          value: 0p3n-w3bu!
        tty: true
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: open-webui
---
# Source: open-webui/charts/ollama/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "open-webui-ollama-test-connection"
  labels:
    helm.sh/chart: ollama-0.33.0
    app.kubernetes.io/version: "0.1.41"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: open-webui-ollama
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['open-webui-ollama:11434']
  restartPolicy: Never
