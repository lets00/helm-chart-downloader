---
# Source: nifi-registry/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-nifi-registry
  labels:
    helm.sh/chart: nifi-registry-1.1.5
    app.kubernetes.io/name: nifi-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: nifi-registry/templates/ssh.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nifi-registry-ssh-config
  namespace: nifi-registry-1.1.5.tgz
data:
  config: |
          StrictHostKeyChecking accept-new
---
# Source: nifi-registry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-nifi-registry
  labels:
    helm.sh/chart: nifi-registry-1.1.5
    app.kubernetes.io/name: nifi-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 18080
      protocol: TCP
      
      targetPort: http
      name: http
      
  selector:
    app.kubernetes.io/name: nifi-registry
    app.kubernetes.io/instance: my-release
---
# Source: nifi-registry/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-nifi-registry
  labels:
    helm.sh/chart: nifi-registry-1.1.5
    app.kubernetes.io/name: nifi-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nifi-registry
      app.kubernetes.io/instance: my-release
  serviceName: my-release-nifi-registry
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nifi-registry
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-nifi-registry
      securityContext:
        {}
      initContainers:
        - name: take-data-dir-ownership
          image: "alpine:3.6"
          command:
            - chown
            - -R
            - 1000:1000
            - /opt/nifi-registry/nifi-registry-current/database
            - /opt/nifi-registry/nifi-registry-current/flow_storage
          volumeMounts:
            - name: "database"
              mountPath: /opt/nifi-registry/nifi-registry-current/database
            - name: "flow-storage"
              mountPath: /opt/nifi-registry/nifi-registry-current/flow_storage
              subPath: flow_storage
      containers:
        - name: nifi-registry
          securityContext:
            {}
          image: "apache/nifi-registry:0.8.0"
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command: ["bin/nifi-registry.sh", "stop"]
          command:
            - bash
            - -ce
            - |
              mkdir -p "$HOME"/.ssh
              chmod 700 "$HOME"/.ssh
              touch "$HOME"/.ssh/known_hosts
              chmod 600 "$HOME"/.ssh/known_hosts
              cp --dereference /sshConfig/config "$HOME"/.ssh
              chmod 600 "$HOME"/.ssh/config
            

          
              . ${NIFI_REGISTRY_BASE_DIR}/scripts/common.sh
          
              prop_replace () {
                target_file=${NIFI_REGISTRY_HOME}/conf/${3:-nifi-registry.properties}
                echo "updating ${1} in ${target_file}"
                if egrep "^${1}=" ${target_file} &> /dev/null; then
                  sed -i -e "s|^$1=.*$|$1=$2|"  ${target_file}
                else
                  echo ${1}=${2} >> ${target_file}
                fi
              }
              echo >> ${NIFI_REGISTRY_HOME}/conf/nifi-registry.properties

          

          

              # Log everything to the console, not to files
              xmlstarlet ed --inplace --delete "//configuration/logger/appender-ref[@ref='CONSOLE']" "${NIFI_REGISTRY_HOME}/conf/logback.xml"
              xmlstarlet ed --inplace --update "//configuration/logger/appender-ref[@ref='BOOTSTRAP_FILE']/@ref" -v CONSOLE "${NIFI_REGISTRY_HOME}/conf/logback.xml"
              xmlstarlet ed --inplace --update "//configuration/logger/appender-ref[@ref='EVENTS_FILE']/@ref" -v CONSOLE "${NIFI_REGISTRY_HOME}/conf/logback.xml"
              xmlstarlet ed --inplace --update "//configuration/logger/appender-ref[@ref='APP_FILE']/@ref" -v CONSOLE "${NIFI_REGISTRY_HOME}/conf/logback.xml"
              xmlstarlet ed --inplace --update "//configuration/root/appender-ref[@ref='APP_FILE']/@ref" -v CONSOLE "${NIFI_REGISTRY_HOME}/conf/logback.xml"

              mkdir -p ./flow_storage

              exec ${NIFI_REGISTRY_HOME}/bin/nifi-registry.sh run
              # ${NIFI_REGISTRY_HOME}/bin/nifi-registry.sh run
              # tail -f /dev/null
          ports:
          
            - name: http
              containerPort: 18080
              protocol: TCP
          
          env:
            - name: NIFI_REGISTRY_BUNDLE_PROVIDER
              value: file
            - name: NIFI_REGISTRY_BUNDLE_STORAGE_DIR
              value: ./extension_bundles
            - name: GIT_SSH_COMMAND
              value: ssh -v
          volumeMounts:
            
            - name: "database"
              mountPath: /opt/nifi-registry/nifi-registry-current/database
            
            
            - name: "flow-storage"
              mountPath: /opt/nifi-registry/nifi-registry-current/flow_storage
              subPath: flow_storage
            
            - name: ssh-config
              mountPath: /sshConfig
              readOnly: true
          resources:
            {}
          readinessProbe:
            tcpSocket:
          
              port: 18080
          
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 2
            failureThreshold: 3
      volumes:
      - name: ssh-known-hosts
        emptyDir: {}
      - name: ssh-config
        configMap:
          name: my-release-nifi-registry-ssh-config
          defaultMode: 0444
  volumeClaimTemplates:
  
  - metadata:
      name: database
    spec:
      accessModes:
      - ReadWriteOnce
      
      resources:
        requests:
          storage: "1Gi"
  - metadata:
      name: flow-storage
    spec:
      accessModes:
      - ReadWriteOnce
      
      resources:
        requests:
          storage: "1Gi"
---
# Source: nifi-registry/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-nifi-registry-test-connection"
  labels:
    helm.sh/chart: nifi-registry-1.1.5
    app.kubernetes.io/name: nifi-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: "busybox:1.33.1"
      command: ['wget']
      args: ['my-release-nifi-registry:18080/nifi-registry']
  restartPolicy: Never
