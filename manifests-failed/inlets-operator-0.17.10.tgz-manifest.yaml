---
# Source: inlets-operator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: inlets-operator
  namespace: inlets-operator-0.17.10.tgz
---
# Source: inlets-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: inlets-operator-rw
  namespace: inlets-operator-0.17.10.tgz
rules:
- apiGroups: ["operator.inlets.dev"]
  resources: ["tunnels", "tunnels/finalizers", "tunnels/status"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["services", "services/status", "services/finalizers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/finalizers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: inlets-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: inlets-operator-rw
  namespace: inlets-operator-0.17.10.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: inlets-operator-rw
subjects:
- kind: ServiceAccount
  name: inlets-operator
  namespace: inlets-operator-0.17.10.tgz
---
# Source: inlets-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-inlets-operator
  namespace: inlets-operator-0.17.10.tgz
  labels:
    app.kubernetes.io/name: inlets-operator
    helm.sh/chart: inlets-operator-0.17.10
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: inlets-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: inlets-operator
        app.kubernetes.io/instance: my-release
      annotations:
        prometheus.io.scrape: "false"
    spec:
      serviceAccountName: inlets-operator
      containers:
      - name: inlets-operator
        image: "ghcr.io/inlets/inlets-operator:0.17.9"
        imagePullPolicy: IfNotPresent
        command:
        - ./inlets-operator
        - "-provider=digitalocean"
        - "-zone="
        - "-region=lon1"
        - "-access-key-file=/var/secrets/inlets/inlets-access-key"
        - "-license-file=/var/secrets/inlets-license/license"
        - "-project-id="
        - "-client-image=ghcr.io/inlets/inlets-pro:0.9.32"
        - "-inlets-release=0.9.32"
        - "-max-client-memory=128Mi"
        resources:
            requests:
              cpu: 100m
              memory: 128Mi
        env:
        - name: client_image
          value: ""
        volumeMounts:
        - mountPath: /var/secrets/inlets-license/
          name: inlets-license
          readOnly: true
        - mountPath: /var/secrets/inlets/
          name: inlets-access-key
          readOnly: true
      volumes:
      - name: inlets-license
        secret:
          defaultMode: 420
          secretName: inlets-license
      - name: inlets-access-key
        secret:
          defaultMode: 420
          secretName: inlets-access-key
