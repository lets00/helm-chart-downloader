---
# Source: influxdb/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-influxdb
  namespace: "influxdb-6.3.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 2.7.6
    helm.sh/chart: influxdb-6.3.5
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: influxdb
      app.kubernetes.io/component: influxdb
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    # Allow inbound connections
    - ports:
        - port: 8086
          protocol: TCP
        - port: 8088
          protocol: TCP
---
# Source: influxdb/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-influxdb
  namespace: "influxdb-6.3.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 2.7.6
    helm.sh/chart: influxdb-6.3.5
    app.kubernetes.io/component: influxdb
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: influxdb
      app.kubernetes.io/component: influxdb
---
# Source: influxdb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-influxdb
  namespace: "influxdb-6.3.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 2.7.6
    helm.sh/chart: influxdb-6.3.5
    app.kubernetes.io/component: influxdb
automountServiceAccountToken: false
---
# Source: influxdb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-influxdb
  namespace: "influxdb-6.3.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 2.7.6
    helm.sh/chart: influxdb-6.3.5
type: Opaque
data:
  admin-user-password: "enNZNHlYWmdDdQ=="
  admin-user-token: "ZWZDZFpVUG1HOUlMaVpRaGVpYkQ="
---
# Source: influxdb/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-influxdb
  namespace: "influxdb-6.3.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 2.7.6
    helm.sh/chart: influxdb-6.3.5
    app.kubernetes.io/component: influxdb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: influxdb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-influxdb
  namespace: "influxdb-6.3.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 2.7.6
    helm.sh/chart: influxdb-6.3.5
    app.kubernetes.io/component: influxdb
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - port: 8086
      targetPort: http
      protocol: TCP
      name: http
      nodePort: null
    - port: 8088
      targetPort: rpc
      protocol: TCP
      name: rpc
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/component: influxdb
---
# Source: influxdb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-influxdb
  namespace: "influxdb-6.3.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/version: 2.7.6
    helm.sh/chart: influxdb-6.3.5
    app.kubernetes.io/component: influxdb
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: influxdb
      app.kubernetes.io/component: influxdb
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: influxdb
        app.kubernetes.io/version: 2.7.6
        helm.sh/chart: influxdb-6.3.5
        app.kubernetes.io/component: influxdb
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: influxdb
                    app.kubernetes.io/component: influxdb
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      priorityClassName: ""
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: my-release-influxdb
      initContainers:
      containers:
        - name: influxdb
          image: docker.io/bitnami/influxdb:2.7.6-debian-12-r12
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: INFLUXDB_HTTP_AUTH_ENABLED
              value: "true"
            - name: INFLUXDB_CREATE_USER_TOKEN
              value: "no"
            - name: INFLUXDB_ADMIN_USER
              value: "admin"
            - name: INFLUXDB_ADMIN_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-influxdb
                  key: admin-user-password
            - name: INFLUXDB_ADMIN_USER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: my-release-influxdb
                  key: admin-user-token
            - name: INFLUXDB_ADMIN_BUCKET
              value: "primary"
            - name: INFLUXDB_ADMIN_ORG
              value: "primary"
          envFrom:
          ports:
            - name: http
              containerPort: 8086
              protocol: TCP
            - name: rpc
              containerPort: 8088
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 180
            periodSeconds: 45
            successThreshold: 1
            timeoutSeconds: 30
            httpGet:
              port: http
              path: /
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 45
            successThreshold: 1
            timeoutSeconds: 30
            exec:
              command:
                - bash
                - -c
                - |
                  . /opt/bitnami/scripts/libinfluxdb.sh

                  influxdb_env
                  export INFLUX_USERNAME="$INFLUXDB_ADMIN_USER"
                  export INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"

                  timeout 29s influx ping --host http://$POD_IP:8086
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 1024Mi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/influxdb/etc
              subPath: app-conf-dir
            - name: data
              mountPath: /bitnami/influxdb
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: data
          persistentVolumeClaim:
            claimName: my-release-influxdb
