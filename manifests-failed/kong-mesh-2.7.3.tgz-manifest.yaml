---
# Source: kong-mesh/charts/kuma/templates/cp-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-mesh-control-plane
  namespace: kong-mesh-2.7.3.tgz
  labels: 
    app: kong-mesh-control-plane
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: kong-mesh/charts/kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: kong-mesh-tls-cert
  namespace: kong-mesh-2.7.3.tgz
  labels: 
    app: kong-mesh-control-plane
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURpakNDQW5LZ0F3SUJBZ0lSQVBiYnBFZlhIODF4aEI0RGFWYmZWS3N3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlOREEyTWpBeE5EVTNNalphRncwek5EQTJNVGd4TkRVMwpNalphTUNJeElEQWVCZ05WQkFNVEYydHZibWN0YldWemFDMWpiMjUwY205c0xYQnNZVzVsTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeFBvUjRxRHVMTlloU2JSelp0UmsyUDZYOFdmU2cxMXMKVk5ad3hhSWN0SW50RnVob08zMUtDTDYrYk5SaHhzU2ZIUERsU3pjOHlFQnNPZ0RwbXFteklyVjJ0bkxqeWZZMQp3UnRZRTl0bUpKVnZNd3MySURMOEhQa3gzL3hUZWlDT0Q1RjFJRzY1TXFUcUtsVExTUkxwWlhidXBnZ1d2MTRaCmdZTy84UExlSFc3cnJRWUwzd29RZ1lVaG5wenBHMlJweDdZY2pueWtPY0dEZTVUb3VFRmdqcnc5TjYvREM3U0wKZUNTQ04wOWZzS2ovMjVabDRsNzMvclp4MjNHZjd3VUR0emxINU1SaXdsY2V4VFEva1FCUjFDOUZrYVE5Y1VMVAp4dGV6R0Z1STQ1dTFyZTFGWXJlaHd4SEYvdkdXb1JRT1haSGdKeEtKZDNTa2VzZXNPR0ViVFFJREFRQUJvNEhLCk1JSEhNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUZkE3a0xDekM1WUJBUVdnZjUrcGFaU3hobApwREJuQmdOVkhSRUVZREJlZ2l0cmIyNW5MVzFsYzJndFkyOXVkSEp2YkMxd2JHRnVaUzVyYjI1bkxXMWxjMmd0Ck1pNDNMak11ZEdkNmdpOXJiMjVuTFcxbGMyZ3RZMjl1ZEhKdmJDMXdiR0Z1WlM1cmIyNW5MVzFsYzJndE1pNDMKTGpNdWRHZDZMbk4yWXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUN1Q0VwMGRyZGJ6SzRkYlY3SE54bDVoQwpkbDhrYkJZYkNEa1oyUEZvZkNtc2p6bVJyT3BKOXRGU0M0YU5uaUlSUEs4enJRbVY1TWpvL2FxRlQ1MkRGOVpmCnZDcWkycEVxMWpiUkQ5ZEhzcmsvLy91ZFo2MUlnYlZKTkpLNlkwUE1Ebll2L254Q3NBOWVLb1VuRnAxQUdnZXQKdDUrMWxuQTJjT3lBZnhnNEZsdjFFWHQ4TVNvNnhhRndSREhsNndjSnp3L3NoRGZ6bExFL0lkTC91TEFrcDFsawo3U1lUQ0Jqb1QvRmszMjNJVmRiUmNHQjY1VnorRXV4aWxpR3kxdUZXNHdRYndodFQvRUc5Yk5CNDVUZ0kxa1dICmNjRlpZOWs4TUR6eklqMXp0eExBUlkrTG54UGxVWWJmUm04NnFQOUZTdWxBSXh1SnFrNFhCYytWN2lDTWRRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFBvUjRxRHVMTlloU2JSelp0UmsyUDZYOFdmU2cxMXNWTlp3eGFJY3RJbnRGdWhvCk8zMUtDTDYrYk5SaHhzU2ZIUERsU3pjOHlFQnNPZ0RwbXFteklyVjJ0bkxqeWZZMXdSdFlFOXRtSkpWdk13czIKSURMOEhQa3gzL3hUZWlDT0Q1RjFJRzY1TXFUcUtsVExTUkxwWlhidXBnZ1d2MTRaZ1lPLzhQTGVIVzdyclFZTAozd29RZ1lVaG5wenBHMlJweDdZY2pueWtPY0dEZTVUb3VFRmdqcnc5TjYvREM3U0xlQ1NDTjA5ZnNLai8yNVpsCjRsNzMvclp4MjNHZjd3VUR0emxINU1SaXdsY2V4VFEva1FCUjFDOUZrYVE5Y1VMVHh0ZXpHRnVJNDV1MXJlMUYKWXJlaHd4SEYvdkdXb1JRT1haSGdKeEtKZDNTa2VzZXNPR0ViVFFJREFRQUJBb0lCQUJuYlpkdWxHbjdpUVE1bQoxTHRMNkUwZjVwdzI3OGgwekJLNjc2VFI2Z2k5RGxWeWZyUklkeDU4dzR5UHVLSWFEM1VDSG1kb1FkOWJyWmxUCm8xYTlMaG5CVG1zVzI5WVlMdWhCaWFkWnBxZm93ZWNtY3AxNWMrVHR4V0ZNd3p5RjU0QWRyUTFyMjMzTmJqdk8KVTcwczhWeHpaMUorUDFZeHFSRjZWUWp4S0wwZUpnelo0WDE0aUtxQThWNTd3QWRML1IwV0dRblJXeVpPVU9yMApQdENEU2ZNS0s5MTNic21tdG1QMEk3dTlXTFB6SmszNE1lc3BvaVZWWEpLWm15TnpJZnNBSGc5S1hxN2h2YzlyCmdEMGdMU2lPdXhtS3FJNWRQTnI2LzhucFFkaG92d2VFVktaY0JCeGsvdEcvOGRyc0N1YVFkSnphb3RlRm5tMloKdkRmK1Z1RUNnWUVBL05XdFlNZHhhQU5QZ2EyOElacUo3aDZsMVNKbVhGc3NDSjYxQkY2UGVnaDBOU0NheFBDOQpyRHM2MVByaXkzeXV3K1hmVnNpaWxHaUJ2ZUZCUTUxM0NxbnNBYlQvdmRSN09kT2hFem5mODJKbFNFazJ1d2pGCkpvVHM2bXhZemdhNVYxMjEvYnpRcVg1VXFuejEycGg2akdGNVh2SVlJSURsR2tOVlNQN2ZJQVVDZ1lFQXgzRmUKOTNmVWR6NXpwR3ZyZ2FIaUhrOXQxTndyanRtaFlFZ2RPbW84blRrZUl2RWFacHdRdXN1a1EwWlVzMW1RcGdwSwp4c0FlOXdpeUtWNjdrbXBON0VDaFB5NTV6bGZ1SlFGOFZIYkdqYnlESmVTbzE1SjcrVjZiZFZyVkFDV3VvemtOCjRnSFU3RXRBbVBpYUhRUU13eHJhbXRHTmF6L3RpMEJtR25KcW1La0NnWUFMbnJadE1EMWlEbVRsRE5zTW9GR2UKaEFJVEhaV2V3UUh4RTNvMlRUSkM1WWlSdUlIa2N6d0VZbVI5elZvSENCL3dHT3grekpITVNGRk9MTUFYSDNHTgpKK29VMmdDMjlNRUZFMWpmelZVaGxuQVpObVF4akdHak41Qzc1V2JmY1NlcmdEOFEvbENJdWFtaWZFUEFYQ21sCnNnVWwrL0puN0FTYmhHU3pDaU92RVFLQmdRQ2x1dXk2WVVZWnJMaTE2Y1B5bmMzamVBZUJlVTlzemlYT2R6NXEKZXp0UlB0UnZIc0RjZ1ZWWms3MDA5aTJPTjUvK2lkRG5aV0NWMFJFVFZaZ3lxOG1DeDVYMmhhMU1MVDlFV3Y2dwp4VjVyQ3pwRDg4WG1GT0NXTU9xbjAwbnFiR1c1VnNEVmpNWWRjTThHRHBjcUEyS0RnajRqcG55SW9iL0lGa1NDCk40K2l1UUtCZ1FESS8yTFJhVWxQR0ZOWlFtRzdhalhydDdoVk1HdHp0ME9JcWliZ0R5SWZwaVhwaUpheU9iUVoKSXp5bzNFOWp3ZzBsNTFYN1VDWnI4T3E0cVNtVzNEcFpYand4bTZUOG5qTmd2Y0FmUjFCaXhrNWV4VGdTSnh6WgorejJsSDJqam1yNjgrdEp3Y1hkd3dtc1d3WVlQeUQvWmxxc1BlUnhteTY0TVM0YjNJWDVtYlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRRFh2TXZRSFV3Qmd1RG83SlRQdlgrREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSTBNRFl5TURFME5UY3lObG9YRFRNME1EWXhPREUwTlRjeQpObG93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUw2YjFhR3IxbHkzamVyUlVBdi85bWdUZHJyM0g0RzBSU3labFUzQ3h0bm8zc29SS3R6UDRwZU8KRXIyWFJhREljdkZ2NXB4VXRKYm1PRFIyUFdWZk1ZdnFKZkJIUDFuVkFOaHBPVWxBMng0YlhMeDBPV2F2bE16VgozdWM4WWRpY2pZZGJTbVdmV3RXRzFvU2ozSUZXT1o3UEtlUWJzRXBvK0tLSndycXZWcXhxQjNScnZBWFlDcU1JCklLdFE3N1MzcEFtczJubVVLSHAzZ2M1RnVaVWNNK0VsbmRqL3ZsYVNJb1VDR1YxV2s1NWRKTVIwRFVWY1pWcHoKQmg5emcyNEViTFR0dEpGMVg2UVJyTnI1Qlk2VkVQWGxzR3hvbTYwMnoxN2xVa3hKbXc3a3FySzN4U0k4RDBjZgp6SHNnU1M0b212dUhFQndmd1BIZjFYUWIvRXExWE04Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUZkE3a0xDekM1WUJBUVdnZjUrcGFaU3hobHBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBRG1qS1RsYmNqcVJKOGJZTENWQ1lHWFpwS2tPK0JXa21uSWZCZUhZM2JTeEFrYU5Cckc2bEhVM1h3NWc2ClNzdGZsTUc2K3VOY1E4WXZhWFROUXh2dWNnNzRJUkNPMnNyMVNBSTVJdThrMVFpeXMzLzhvdmJOUXF2TTVoU1gKY2tFSDlmei8yNXJHTFV2S1RpOVFOa0hHbXBCdTJ6dXZEVE9vSElHS1R3UmtzY01iZzhVc3Fsd1NXRTBWNlF0Vwo1a2dLa2E3OG5uRENLZS8rOTlCaHdMckExTFJ6dXNsUnZEejUyYTFsVGVNbjFpd3lvMzQzbzEvQnVrOHZCVzZzCmNrblpUQ0JORHRYMHVtc2JGLzFvZW1wNk5qamM2c0xiQm91RUJLRmNCQTJ5K2ZJMUdFMGFYSXBCTzIxWkFKZ2YKMUlXNHZuRHlTSzRpcm9UblJMYVpUQ2ZqK1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: kong-mesh/charts/kuma/templates/cp-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-mesh-control-plane-config
  namespace: kong-mesh-2.7.3.tgz
  labels: 
    app: kong-mesh-control-plane
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
---
# Source: kong-mesh/charts/kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kong-mesh-control-plane
  labels: 
    app: kong-mesh-control-plane
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - configmaps
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
    - ""
    resources:
      - secrets
    verbs:
    - list
    - watch
  - apiGroups:
      - "apps"
    resources:
      - deployments
      - replicasets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - "batch"
    resources:
      - jobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses
      - gateways
      - referencegrants
      - httproutes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses/status
      - gateways/status
      - httproutes/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - delete
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes
      - dataplaneinsights
      - meshes
      - zones
      - zoneinsights
      - zoneingresses
      - zoneingressinsights
      - zoneegresses
      - zoneegressinsights
      - meshinsights
      - serviceinsights
      - proxytemplates
      - ratelimits
      - trafficpermissions
      - trafficroutes
      - timeouts
      - retries
      - circuitbreakers
      - virtualoutbounds
      - containerpatches
      - externalservices
      - faultinjections
      - healthchecks
      - trafficlogs
      - traffictraces
      - meshgateways
      - meshgatewayroutes
      - meshgatewayinstances
      - meshgatewayconfigs
      - meshaccesslogs
      - meshcircuitbreakers
      - meshfaultinjections
      - meshglobalratelimits
      - meshhealthchecks
      - meshhttproutes
      - meshloadbalancingstrategies
      - meshmetrics
      - meshopas
      - meshproxypatches
      - meshratelimits
      - meshretries
      - meshtcproutes
      - meshtimeouts
      - meshtraces
      - meshtrafficpermissions
      - meshservices
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - meshgatewayinstances/status
      - meshgatewayinstances/finalizers
      - meshes/finalizers
      - dataplanes/finalizers
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods/finalizers
    verbs:
      - get
      - patch
      - update
  # validate k8s token before issuing mTLS cert
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
---
# Source: kong-mesh/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kong-mesh-control-plane-kmesh
  labels:
    helm.sh/chart: kong-mesh-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - kuma.io
    resources:
      - opapolicies
      - accessroles
      - accessrolebindings
      - accessaudits
      - meshopas
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups: 
      - cert-manager.io
    resources: 
      - certificaterequests
    verbs: 
      - create
      - get
      - list
      - watch
      - update
      - delete
      - patch
---
# Source: kong-mesh/charts/kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-mesh-control-plane
  labels: 
    app: kong-mesh-control-plane
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-mesh-control-plane
subjects:
  - kind: ServiceAccount
    name: kong-mesh-control-plane
    namespace: kong-mesh-2.7.3.tgz
---
# Source: kong-mesh/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-mesh-control-plane-kmesh
  labels:
    helm.sh/chart: kong-mesh-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-mesh-control-plane-kmesh
subjects:
  - kind: ServiceAccount
    name: kong-mesh-control-plane
    namespace: kong-mesh-2.7.3.tgz
---
# Source: kong-mesh/charts/kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kong-mesh-control-plane
  namespace: kong-mesh-2.7.3.tgz
  labels: 
    app: kong-mesh-control-plane
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  # leader-for-life election deletes Pods in some circumstances
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
---
# Source: kong-mesh/charts/kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kong-mesh-control-plane
  namespace: kong-mesh-2.7.3.tgz
  labels: 
    app: kong-mesh-control-plane
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong-mesh-control-plane
subjects:
  - kind: ServiceAccount
    name: kong-mesh-control-plane
    namespace: kong-mesh-2.7.3.tgz
---
# Source: kong-mesh/charts/kuma/templates/cp-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-mesh-control-plane
  namespace: kong-mesh-2.7.3.tgz
  labels: 
    app: kong-mesh-control-plane
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/port: "5680"
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
    - port: 5680
      name: diagnostics
      appProtocol: http
    - port: 5681
      name: http-api-server
      appProtocol: http
    - port: 5682
      name: https-api-server
      appProtocol: https
    - port: 443
      name: https-admission-server
      targetPort: 5443
      appProtocol: https
    - port: 5676
      name: mads-server
      appProtocol: https
    - port: 5678
      name: dp-server
      appProtocol: https
  selector:
    app: kong-mesh-control-plane
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
---
# Source: kong-mesh/charts/kuma/templates/cp-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-mesh-control-plane
  namespace: kong-mesh-2.7.3.tgz
  labels: 
    app: kong-mesh-control-plane
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
  annotations: 
    
spec:
  replicas: 1
  minReadySeconds: 0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kong-mesh
      app.kubernetes.io/instance: my-release
      app: kong-mesh-control-plane
  template:
    metadata:
      annotations:
        checksum/config: a9a3a0998ea181d47b8e5d63be092c444703f0a146dc521418d6deea5c08d767
        checksum/tls-secrets: 14da07223cc9116f08c41507f95c0659a96983bfd5c8a9dd30c7f1605c46c5fa
      labels: 
        app: kong-mesh-control-plane
        helm.sh/chart: kuma-2.7.3
        app.kubernetes.io/name: kong-mesh
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "2.7.3"
        app.kubernetes.io/managed-by: Helm
    spec:
      affinity: 
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - 'kong-mesh'
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - 'my-release'
                - key: app
                  operator: In
                  values:
                  - 'kong-mesh-control-plane'
              topologyKey: kubernetes.io/hostname
            weight: 100
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kong-mesh-control-plane
      automountServiceAccountToken: true
      nodeSelector:
        
        kubernetes.io/os: linux
      hostNetwork: false
      terminationGracePeriodSeconds: 30
      containers:
        - name: control-plane
          image: "docker.io/kong/kuma-cp:2.7.3"
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
          env:
            - name: KUMA_API_SERVER_AUTHN_LOCALHOST_IS_ADMIN
              value: "false"
            - name: KUMA_API_SERVER_READ_ONLY
              value: "true"
            - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
              value: "false"
            - name: KUMA_DP_SERVER_HDS_ENABLED
              value: "false"
            - name: KUMA_ENVIRONMENT
              value: "kubernetes"
            - name: KUMA_GENERAL_TLS_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.crt"
            - name: KUMA_GENERAL_TLS_KEY_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.key"
            - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
              value: "docker.io/kong/kuma-init:2.7.3"
            - name: KUMA_MODE
              value: "zone"
            - name: KUMA_PLUGIN_POLICIES_ENABLED
              value: "meshaccesslogs,meshcircuitbreakers,meshfaultinjections,meshglobalratelimits,meshhealthchecks,meshhttproutes,meshloadbalancingstrategies,meshmetrics,meshopas,meshproxypatches,meshratelimits,meshretries,meshtcproutes,meshtimeouts,meshtraces,meshtrafficpermissions"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
              value: "/var/run/secrets/kuma.io/tls-cert"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
              value: "5443"
            - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
              value: "kong-mesh-control-plane"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/ca.crt"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
              value: "false"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
              value: "docker.io/kong/kuma-dp:2.7.3"
            - name: KUMA_RUNTIME_KUBERNETES_SERVICE_ACCOUNT_NAME
              value: "system:serviceaccount:kong-mesh-2.7.3.tgz:kong-mesh-control-plane"
            - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
              value: "kong-mesh-2.7.3.tgz"
            - name: KUMA_STORE_TYPE
              value: "kubernetes"
            - name: KUMA_INTER_CP_CATALOG_INSTANCE_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          args:
            - run
            - --log-level=info
            - --log-output-path=
            - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
          ports:
            - containerPort: 5680
              name: diagnostics
              protocol: TCP
            - containerPort: 5681
            - containerPort: 5682
            - containerPort: 5443
            - containerPort: 5678
          livenessProbe:
            timeoutSeconds: 10
            httpGet:
              path: /healthy
              port: 5680
          readinessProbe:
            timeoutSeconds: 10
            httpGet:
              path: /ready
              port: 5680
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 500m
              memory: 256Mi
          
          volumeMounts:
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert/tls.crt
              subPath: tls.crt
              readOnly: true
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert/tls.key
              subPath: tls.key
              readOnly: true
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert/ca.crt
              subPath: ca.crt
              readOnly: true
            - name: kong-mesh-control-plane-config
              mountPath: /etc/kuma.io/kuma-control-plane
              readOnly: true
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: general-tls-cert
          secret:
            secretName: kong-mesh-tls-cert
        - name: kong-mesh-control-plane-config
          configMap:
            name: kong-mesh-control-plane-config
        - name: tmp
          emptyDir: {}
---
# Source: kong-mesh/charts/kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: kong-mesh-admission-mutating-webhook-configuration
  namespace: kong-mesh-2.7.3.tgz
  labels: 
    app: kong-mesh-control-plane
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: mesh.defaulter.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values: ["kube-system"]
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRRFh2TXZRSFV3Qmd1RG83SlRQdlgrREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSTBNRFl5TURFME5UY3lObG9YRFRNME1EWXhPREUwTlRjeQpObG93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUw2YjFhR3IxbHkzamVyUlVBdi85bWdUZHJyM0g0RzBSU3labFUzQ3h0bm8zc29SS3R6UDRwZU8KRXIyWFJhREljdkZ2NXB4VXRKYm1PRFIyUFdWZk1ZdnFKZkJIUDFuVkFOaHBPVWxBMng0YlhMeDBPV2F2bE16VgozdWM4WWRpY2pZZGJTbVdmV3RXRzFvU2ozSUZXT1o3UEtlUWJzRXBvK0tLSndycXZWcXhxQjNScnZBWFlDcU1JCklLdFE3N1MzcEFtczJubVVLSHAzZ2M1RnVaVWNNK0VsbmRqL3ZsYVNJb1VDR1YxV2s1NWRKTVIwRFVWY1pWcHoKQmg5emcyNEViTFR0dEpGMVg2UVJyTnI1Qlk2VkVQWGxzR3hvbTYwMnoxN2xVa3hKbXc3a3FySzN4U0k4RDBjZgp6SHNnU1M0b212dUhFQndmd1BIZjFYUWIvRXExWE04Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUZkE3a0xDekM1WUJBUVdnZjUrcGFaU3hobHBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBRG1qS1RsYmNqcVJKOGJZTENWQ1lHWFpwS2tPK0JXa21uSWZCZUhZM2JTeEFrYU5Cckc2bEhVM1h3NWc2ClNzdGZsTUc2K3VOY1E4WXZhWFROUXh2dWNnNzRJUkNPMnNyMVNBSTVJdThrMVFpeXMzLzhvdmJOUXF2TTVoU1gKY2tFSDlmei8yNXJHTFV2S1RpOVFOa0hHbXBCdTJ6dXZEVE9vSElHS1R3UmtzY01iZzhVc3Fsd1NXRTBWNlF0Vwo1a2dLa2E3OG5uRENLZS8rOTlCaHdMckExTFJ6dXNsUnZEejUyYTFsVGVNbjFpd3lvMzQzbzEvQnVrOHZCVzZzCmNrblpUQ0JORHRYMHVtc2JGLzFvZW1wNk5qamM2c0xiQm91RUJLRmNCQTJ5K2ZJMUdFMGFYSXBCTzIxWkFKZ2YKMUlXNHZuRHlTSzRpcm9UblJMYVpUQ2ZqK1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kong-mesh-2.7.3.tgz
        name: kong-mesh-control-plane
        path: /default-kuma-io-v1alpha1-mesh
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - meshes
          - meshgateways
          - meshaccesslogs
          - meshcircuitbreakers
          - meshfaultinjections
          - meshglobalratelimits
          - meshhealthchecks
          - meshhttproutes
          - meshloadbalancingstrategies
          - meshmetrics
          - meshopas
          - meshproxypatches
          - meshratelimits
          - meshretries
          - meshtcproutes
          - meshtimeouts
          - meshtraces
          - meshtrafficpermissions
          - meshservices
    sideEffects: None
  - name: owner-reference.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values: ["kube-system"]
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRRFh2TXZRSFV3Qmd1RG83SlRQdlgrREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSTBNRFl5TURFME5UY3lObG9YRFRNME1EWXhPREUwTlRjeQpObG93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUw2YjFhR3IxbHkzamVyUlVBdi85bWdUZHJyM0g0RzBSU3labFUzQ3h0bm8zc29SS3R6UDRwZU8KRXIyWFJhREljdkZ2NXB4VXRKYm1PRFIyUFdWZk1ZdnFKZkJIUDFuVkFOaHBPVWxBMng0YlhMeDBPV2F2bE16VgozdWM4WWRpY2pZZGJTbVdmV3RXRzFvU2ozSUZXT1o3UEtlUWJzRXBvK0tLSndycXZWcXhxQjNScnZBWFlDcU1JCklLdFE3N1MzcEFtczJubVVLSHAzZ2M1RnVaVWNNK0VsbmRqL3ZsYVNJb1VDR1YxV2s1NWRKTVIwRFVWY1pWcHoKQmg5emcyNEViTFR0dEpGMVg2UVJyTnI1Qlk2VkVQWGxzR3hvbTYwMnoxN2xVa3hKbXc3a3FySzN4U0k4RDBjZgp6SHNnU1M0b212dUhFQndmd1BIZjFYUWIvRXExWE04Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUZkE3a0xDekM1WUJBUVdnZjUrcGFaU3hobHBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBRG1qS1RsYmNqcVJKOGJZTENWQ1lHWFpwS2tPK0JXa21uSWZCZUhZM2JTeEFrYU5Cckc2bEhVM1h3NWc2ClNzdGZsTUc2K3VOY1E4WXZhWFROUXh2dWNnNzRJUkNPMnNyMVNBSTVJdThrMVFpeXMzLzhvdmJOUXF2TTVoU1gKY2tFSDlmei8yNXJHTFV2S1RpOVFOa0hHbXBCdTJ6dXZEVE9vSElHS1R3UmtzY01iZzhVc3Fsd1NXRTBWNlF0Vwo1a2dLa2E3OG5uRENLZS8rOTlCaHdMckExTFJ6dXNsUnZEejUyYTFsVGVNbjFpd3lvMzQzbzEvQnVrOHZCVzZzCmNrblpUQ0JORHRYMHVtc2JGLzFvZW1wNk5qamM2c0xiQm91RUJLRmNCQTJ5K2ZJMUdFMGFYSXBCTzIxWkFKZ2YKMUlXNHZuRHlTSzRpcm9UblJMYVpUQ2ZqK1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kong-mesh-2.7.3.tgz
        name: kong-mesh-control-plane
        path: /owner-reference-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - circuitbreakers
          - externalservices
          - faultinjections
          - healthchecks
          - meshgateways
          - meshgatewayroutes
          - proxytemplates
          - ratelimits
          - retries
          - timeouts
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - virtualoutbounds
          - meshaccesslogs
          - meshcircuitbreakers
          - meshfaultinjections
          - meshglobalratelimits
          - meshhealthchecks
          - meshhttproutes
          - meshloadbalancingstrategies
          - meshmetrics
          - meshopas
          - meshproxypatches
          - meshratelimits
          - meshretries
          - meshtcproutes
          - meshtimeouts
          - meshtraces
          - meshtrafficpermissions
          - meshservices
  
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - opapolicies
      
    sideEffects: None
  - name: namespace-kuma-injector.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values: ["kube-system"]
        - key: kuma.io/sidecar-injection
          operator: In
          values: ["enabled", "true"]
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRRFh2TXZRSFV3Qmd1RG83SlRQdlgrREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSTBNRFl5TURFME5UY3lObG9YRFRNME1EWXhPREUwTlRjeQpObG93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUw2YjFhR3IxbHkzamVyUlVBdi85bWdUZHJyM0g0RzBSU3labFUzQ3h0bm8zc29SS3R6UDRwZU8KRXIyWFJhREljdkZ2NXB4VXRKYm1PRFIyUFdWZk1ZdnFKZkJIUDFuVkFOaHBPVWxBMng0YlhMeDBPV2F2bE16VgozdWM4WWRpY2pZZGJTbVdmV3RXRzFvU2ozSUZXT1o3UEtlUWJzRXBvK0tLSndycXZWcXhxQjNScnZBWFlDcU1JCklLdFE3N1MzcEFtczJubVVLSHAzZ2M1RnVaVWNNK0VsbmRqL3ZsYVNJb1VDR1YxV2s1NWRKTVIwRFVWY1pWcHoKQmg5emcyNEViTFR0dEpGMVg2UVJyTnI1Qlk2VkVQWGxzR3hvbTYwMnoxN2xVa3hKbXc3a3FySzN4U0k4RDBjZgp6SHNnU1M0b212dUhFQndmd1BIZjFYUWIvRXExWE04Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUZkE3a0xDekM1WUJBUVdnZjUrcGFaU3hobHBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBRG1qS1RsYmNqcVJKOGJZTENWQ1lHWFpwS2tPK0JXa21uSWZCZUhZM2JTeEFrYU5Cckc2bEhVM1h3NWc2ClNzdGZsTUc2K3VOY1E4WXZhWFROUXh2dWNnNzRJUkNPMnNyMVNBSTVJdThrMVFpeXMzLzhvdmJOUXF2TTVoU1gKY2tFSDlmei8yNXJHTFV2S1RpOVFOa0hHbXBCdTJ6dXZEVE9vSElHS1R3UmtzY01iZzhVc3Fsd1NXRTBWNlF0Vwo1a2dLa2E3OG5uRENLZS8rOTlCaHdMckExTFJ6dXNsUnZEejUyYTFsVGVNbjFpd3lvMzQzbzEvQnVrOHZCVzZzCmNrblpUQ0JORHRYMHVtc2JGLzFvZW1wNk5qamM2c0xiQm91RUJLRmNCQTJ5K2ZJMUdFMGFYSXBCTzIxWkFKZ2YKMUlXNHZuRHlTSzRpcm9UblJMYVpUQ2ZqK1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kong-mesh-2.7.3.tgz
        name: kong-mesh-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
  - name: pods-kuma-injector.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values: ["kube-system"]
    objectSelector:
      matchLabels:
        kuma.io/sidecar-injection: enabled
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRRFh2TXZRSFV3Qmd1RG83SlRQdlgrREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSTBNRFl5TURFME5UY3lObG9YRFRNME1EWXhPREUwTlRjeQpObG93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUw2YjFhR3IxbHkzamVyUlVBdi85bWdUZHJyM0g0RzBSU3labFUzQ3h0bm8zc29SS3R6UDRwZU8KRXIyWFJhREljdkZ2NXB4VXRKYm1PRFIyUFdWZk1ZdnFKZkJIUDFuVkFOaHBPVWxBMng0YlhMeDBPV2F2bE16VgozdWM4WWRpY2pZZGJTbVdmV3RXRzFvU2ozSUZXT1o3UEtlUWJzRXBvK0tLSndycXZWcXhxQjNScnZBWFlDcU1JCklLdFE3N1MzcEFtczJubVVLSHAzZ2M1RnVaVWNNK0VsbmRqL3ZsYVNJb1VDR1YxV2s1NWRKTVIwRFVWY1pWcHoKQmg5emcyNEViTFR0dEpGMVg2UVJyTnI1Qlk2VkVQWGxzR3hvbTYwMnoxN2xVa3hKbXc3a3FySzN4U0k4RDBjZgp6SHNnU1M0b212dUhFQndmd1BIZjFYUWIvRXExWE04Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUZkE3a0xDekM1WUJBUVdnZjUrcGFaU3hobHBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBRG1qS1RsYmNqcVJKOGJZTENWQ1lHWFpwS2tPK0JXa21uSWZCZUhZM2JTeEFrYU5Cckc2bEhVM1h3NWc2ClNzdGZsTUc2K3VOY1E4WXZhWFROUXh2dWNnNzRJUkNPMnNyMVNBSTVJdThrMVFpeXMzLzhvdmJOUXF2TTVoU1gKY2tFSDlmei8yNXJHTFV2S1RpOVFOa0hHbXBCdTJ6dXZEVE9vSElHS1R3UmtzY01iZzhVc3Fsd1NXRTBWNlF0Vwo1a2dLa2E3OG5uRENLZS8rOTlCaHdMckExTFJ6dXNsUnZEejUyYTFsVGVNbjFpd3lvMzQzbzEvQnVrOHZCVzZzCmNrblpUQ0JORHRYMHVtc2JGLzFvZW1wNk5qamM2c0xiQm91RUJLRmNCQTJ5K2ZJMUdFMGFYSXBCTzIxWkFKZ2YKMUlXNHZuRHlTSzRpcm9UblJMYVpUQ2ZqK1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kong-mesh-2.7.3.tgz
        name: kong-mesh-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
---
# Source: kong-mesh/charts/kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: kong-mesh-validating-webhook-configuration
  namespace: kong-mesh-2.7.3.tgz
  labels: 
    app: kong-mesh-control-plane
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values: ["kube-system"]
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRRFh2TXZRSFV3Qmd1RG83SlRQdlgrREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSTBNRFl5TURFME5UY3lObG9YRFRNME1EWXhPREUwTlRjeQpObG93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUw2YjFhR3IxbHkzamVyUlVBdi85bWdUZHJyM0g0RzBSU3labFUzQ3h0bm8zc29SS3R6UDRwZU8KRXIyWFJhREljdkZ2NXB4VXRKYm1PRFIyUFdWZk1ZdnFKZkJIUDFuVkFOaHBPVWxBMng0YlhMeDBPV2F2bE16VgozdWM4WWRpY2pZZGJTbVdmV3RXRzFvU2ozSUZXT1o3UEtlUWJzRXBvK0tLSndycXZWcXhxQjNScnZBWFlDcU1JCklLdFE3N1MzcEFtczJubVVLSHAzZ2M1RnVaVWNNK0VsbmRqL3ZsYVNJb1VDR1YxV2s1NWRKTVIwRFVWY1pWcHoKQmg5emcyNEViTFR0dEpGMVg2UVJyTnI1Qlk2VkVQWGxzR3hvbTYwMnoxN2xVa3hKbXc3a3FySzN4U0k4RDBjZgp6SHNnU1M0b212dUhFQndmd1BIZjFYUWIvRXExWE04Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUZkE3a0xDekM1WUJBUVdnZjUrcGFaU3hobHBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBRG1qS1RsYmNqcVJKOGJZTENWQ1lHWFpwS2tPK0JXa21uSWZCZUhZM2JTeEFrYU5Cckc2bEhVM1h3NWc2ClNzdGZsTUc2K3VOY1E4WXZhWFROUXh2dWNnNzRJUkNPMnNyMVNBSTVJdThrMVFpeXMzLzhvdmJOUXF2TTVoU1gKY2tFSDlmei8yNXJHTFV2S1RpOVFOa0hHbXBCdTJ6dXZEVE9vSElHS1R3UmtzY01iZzhVc3Fsd1NXRTBWNlF0Vwo1a2dLa2E3OG5uRENLZS8rOTlCaHdMckExTFJ6dXNsUnZEejUyYTFsVGVNbjFpd3lvMzQzbzEvQnVrOHZCVzZzCmNrblpUQ0JORHRYMHVtc2JGLzFvZW1wNk5qamM2c0xiQm91RUJLRmNCQTJ5K2ZJMUdFMGFYSXBCTzIxWkFKZ2YKMUlXNHZuRHlTSzRpcm9UblJMYVpUQ2ZqK1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kong-mesh-2.7.3.tgz
        name: kong-mesh-control-plane
        path: /validate-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - circuitbreakers
          - dataplanes
          - externalservices
          - faultinjections
          - gatewayinstances
          - healthchecks
          - meshes
          - meshgateways
          - meshgatewayroutes
          - proxytemplates
          - ratelimits
          - retries
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - virtualoutbounds
          - zones
          - containerpatches
          - meshaccesslogs
          - meshcircuitbreakers
          - meshfaultinjections
          - meshglobalratelimits
          - meshhealthchecks
          - meshhttproutes
          - meshloadbalancingstrategies
          - meshmetrics
          - meshopas
          - meshproxypatches
          - meshratelimits
          - meshretries
          - meshtcproutes
          - meshtimeouts
          - meshtraces
          - meshtrafficpermissions
          - meshservices
    
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - opapolicies
          - accessaudits
          - accessroles
          - accessrolebindings
      
    sideEffects: None
  - name: service.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Ignore
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values: ["kube-system"]
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRRFh2TXZRSFV3Qmd1RG83SlRQdlgrREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSTBNRFl5TURFME5UY3lObG9YRFRNME1EWXhPREUwTlRjeQpObG93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUw2YjFhR3IxbHkzamVyUlVBdi85bWdUZHJyM0g0RzBSU3labFUzQ3h0bm8zc29SS3R6UDRwZU8KRXIyWFJhREljdkZ2NXB4VXRKYm1PRFIyUFdWZk1ZdnFKZkJIUDFuVkFOaHBPVWxBMng0YlhMeDBPV2F2bE16VgozdWM4WWRpY2pZZGJTbVdmV3RXRzFvU2ozSUZXT1o3UEtlUWJzRXBvK0tLSndycXZWcXhxQjNScnZBWFlDcU1JCklLdFE3N1MzcEFtczJubVVLSHAzZ2M1RnVaVWNNK0VsbmRqL3ZsYVNJb1VDR1YxV2s1NWRKTVIwRFVWY1pWcHoKQmg5emcyNEViTFR0dEpGMVg2UVJyTnI1Qlk2VkVQWGxzR3hvbTYwMnoxN2xVa3hKbXc3a3FySzN4U0k4RDBjZgp6SHNnU1M0b212dUhFQndmd1BIZjFYUWIvRXExWE04Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUZkE3a0xDekM1WUJBUVdnZjUrcGFaU3hobHBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBRG1qS1RsYmNqcVJKOGJZTENWQ1lHWFpwS2tPK0JXa21uSWZCZUhZM2JTeEFrYU5Cckc2bEhVM1h3NWc2ClNzdGZsTUc2K3VOY1E4WXZhWFROUXh2dWNnNzRJUkNPMnNyMVNBSTVJdThrMVFpeXMzLzhvdmJOUXF2TTVoU1gKY2tFSDlmei8yNXJHTFV2S1RpOVFOa0hHbXBCdTJ6dXZEVE9vSElHS1R3UmtzY01iZzhVc3Fsd1NXRTBWNlF0Vwo1a2dLa2E3OG5uRENLZS8rOTlCaHdMckExTFJ6dXNsUnZEejUyYTFsVGVNbjFpd3lvMzQzbzEvQnVrOHZCVzZzCmNrblpUQ0JORHRYMHVtc2JGLzFvZW1wNk5qamM2c0xiQm91RUJLRmNCQTJ5K2ZJMUdFMGFYSXBCTzIxWkFKZ2YKMUlXNHZuRHlTSzRpcm9UblJMYVpUQ2ZqK1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kong-mesh-2.7.3.tgz
        name: kong-mesh-control-plane
        path: /validate-v1-service
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - services
    sideEffects: None
  - name: secret.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    namespaceSelector:
      matchLabels:
        kuma.io/system-namespace: "true"
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRRFh2TXZRSFV3Qmd1RG83SlRQdlgrREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSTBNRFl5TURFME5UY3lObG9YRFRNME1EWXhPREUwTlRjeQpObG93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUw2YjFhR3IxbHkzamVyUlVBdi85bWdUZHJyM0g0RzBSU3labFUzQ3h0bm8zc29SS3R6UDRwZU8KRXIyWFJhREljdkZ2NXB4VXRKYm1PRFIyUFdWZk1ZdnFKZkJIUDFuVkFOaHBPVWxBMng0YlhMeDBPV2F2bE16VgozdWM4WWRpY2pZZGJTbVdmV3RXRzFvU2ozSUZXT1o3UEtlUWJzRXBvK0tLSndycXZWcXhxQjNScnZBWFlDcU1JCklLdFE3N1MzcEFtczJubVVLSHAzZ2M1RnVaVWNNK0VsbmRqL3ZsYVNJb1VDR1YxV2s1NWRKTVIwRFVWY1pWcHoKQmg5emcyNEViTFR0dEpGMVg2UVJyTnI1Qlk2VkVQWGxzR3hvbTYwMnoxN2xVa3hKbXc3a3FySzN4U0k4RDBjZgp6SHNnU1M0b212dUhFQndmd1BIZjFYUWIvRXExWE04Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUZkE3a0xDekM1WUJBUVdnZjUrcGFaU3hobHBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBRG1qS1RsYmNqcVJKOGJZTENWQ1lHWFpwS2tPK0JXa21uSWZCZUhZM2JTeEFrYU5Cckc2bEhVM1h3NWc2ClNzdGZsTUc2K3VOY1E4WXZhWFROUXh2dWNnNzRJUkNPMnNyMVNBSTVJdThrMVFpeXMzLzhvdmJOUXF2TTVoU1gKY2tFSDlmei8yNXJHTFV2S1RpOVFOa0hHbXBCdTJ6dXZEVE9vSElHS1R3UmtzY01iZzhVc3Fsd1NXRTBWNlF0Vwo1a2dLa2E3OG5uRENLZS8rOTlCaHdMckExTFJ6dXNsUnZEejUyYTFsVGVNbjFpd3lvMzQzbzEvQnVrOHZCVzZzCmNrblpUQ0JORHRYMHVtc2JGLzFvZW1wNk5qamM2c0xiQm91RUJLRmNCQTJ5K2ZJMUdFMGFYSXBCTzIxWkFKZ2YKMUlXNHZuRHlTSzRpcm9UblJMYVpUQ2ZqK1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kong-mesh-2.7.3.tgz
        name: kong-mesh-control-plane
        path: /validate-v1-secret
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - secrets
    sideEffects: None
  - name: gateway.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Ignore
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values: ["kube-system"]
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRRFh2TXZRSFV3Qmd1RG83SlRQdlgrREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSTBNRFl5TURFME5UY3lObG9YRFRNME1EWXhPREUwTlRjeQpObG93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUw2YjFhR3IxbHkzamVyUlVBdi85bWdUZHJyM0g0RzBSU3labFUzQ3h0bm8zc29SS3R6UDRwZU8KRXIyWFJhREljdkZ2NXB4VXRKYm1PRFIyUFdWZk1ZdnFKZkJIUDFuVkFOaHBPVWxBMng0YlhMeDBPV2F2bE16VgozdWM4WWRpY2pZZGJTbVdmV3RXRzFvU2ozSUZXT1o3UEtlUWJzRXBvK0tLSndycXZWcXhxQjNScnZBWFlDcU1JCklLdFE3N1MzcEFtczJubVVLSHAzZ2M1RnVaVWNNK0VsbmRqL3ZsYVNJb1VDR1YxV2s1NWRKTVIwRFVWY1pWcHoKQmg5emcyNEViTFR0dEpGMVg2UVJyTnI1Qlk2VkVQWGxzR3hvbTYwMnoxN2xVa3hKbXc3a3FySzN4U0k4RDBjZgp6SHNnU1M0b212dUhFQndmd1BIZjFYUWIvRXExWE04Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUZkE3a0xDekM1WUJBUVdnZjUrcGFaU3hobHBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBRG1qS1RsYmNqcVJKOGJZTENWQ1lHWFpwS2tPK0JXa21uSWZCZUhZM2JTeEFrYU5Cckc2bEhVM1h3NWc2ClNzdGZsTUc2K3VOY1E4WXZhWFROUXh2dWNnNzRJUkNPMnNyMVNBSTVJdThrMVFpeXMzLzhvdmJOUXF2TTVoU1gKY2tFSDlmei8yNXJHTFV2S1RpOVFOa0hHbXBCdTJ6dXZEVE9vSElHS1R3UmtzY01iZzhVc3Fsd1NXRTBWNlF0Vwo1a2dLa2E3OG5uRENLZS8rOTlCaHdMckExTFJ6dXNsUnZEejUyYTFsVGVNbjFpd3lvMzQzbzEvQnVrOHZCVzZzCmNrblpUQ0JORHRYMHVtc2JGLzFvZW1wNk5qamM2c0xiQm91RUJLRmNCQTJ5K2ZJMUdFMGFYSXBCTzIxWkFKZ2YKMUlXNHZuRHlTSzRpcm9UblJMYVpUQ2ZqK1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kong-mesh-2.7.3.tgz
        name: kong-mesh-control-plane
        path: /validate-gatewayclass
    rules:
      - apiGroups:
          - "gateway.networking.k8s.io"
        apiVersions:
          - v1beta1
        operations:
          - CREATE
        resources:
          - gatewayclasses
    sideEffects: None
---
# Source: kong-mesh/charts/kuma/templates/pre-delete-webhooks.yaml
# HELM first deletes RBAC of Kuma, then it tries to delete Secrets. We've got validating webhook on Secrets.
# But even that the policy of this webhook is Ignore, it fails because Kuma does not have permission to access Secrets anymore.
# Therefore we first need to delete webhook so we can delete the rest of the deployment
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-mesh-pre-delete-job
  namespace: kong-mesh-2.7.3.tgz
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: kong-mesh/charts/kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-mesh-patch-ns-job
  namespace: kong-mesh-2.7.3.tgz
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: kong-mesh/charts/kuma/templates/pre-upgrade-install-crds-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-mesh-install-crds
  namespace: kong-mesh-2.7.3.tgz
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: kong-mesh/charts/kuma/templates/pre-upgrade-install-crds-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-mesh-install-crds-scripts
  namespace: kong-mesh-2.7.3.tgz
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
data:
  install_crds.sh: |
    #!/usr/bin/env sh
    set -e

    if [ -s /kuma/crds/crds.yaml ]; then
      echo "/kuma/crds/crds.yaml found and is not empty, adding crds"
      kubectl apply -f /kuma/crds/crds.yaml
    else
      echo "/kuma/crds/crds.yaml not found or empty, it looks like there is no crds to install"
    fi
  save_crds.sh: |
    set -e

    crds="$(kumactl install crds --no-config)"

    if [ -n "${crds}" ]; then
      echo "found crds - saving to /kuma/crds/crds.yaml"
      echo "${crds}" > /kuma/crds/crds.yaml
    fi
---
# Source: kong-mesh/charts/kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kong-mesh-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    resourceNames:
      - kong-mesh-validating-webhook-configuration
    verbs:
      - delete
---
# Source: kong-mesh/charts/kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kong-mesh-patch-ns-job
  namespace: kong-mesh-2.7.3.tgz
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    resourceNames:
      - kong-mesh-2.7.3.tgz
    verbs:
      - get
      - patch
---
# Source: kong-mesh/charts/kuma/templates/pre-upgrade-install-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kong-mesh-install-crds
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - patch
      - update
      - list
      - get
---
# Source: kong-mesh/charts/kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-mesh-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-mesh-pre-delete-job
subjects:
  - kind: ServiceAccount
    name: kong-mesh-pre-delete-job
    namespace: kong-mesh-2.7.3.tgz
---
# Source: kong-mesh/charts/kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-mesh-patch-ns-job
  namespace: kong-mesh-2.7.3.tgz
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-mesh-patch-ns-job
subjects:
  - kind: ServiceAccount
    name: kong-mesh-patch-ns-job
    namespace: kong-mesh-2.7.3.tgz
---
# Source: kong-mesh/charts/kuma/templates/pre-upgrade-install-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-mesh-install-crds
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-mesh-install-crds
subjects:
  - kind: ServiceAccount
    name: kong-mesh-install-crds
    namespace: kong-mesh-2.7.3.tgz
---
# Source: kong-mesh/charts/kuma/templates/pre-delete-webhooks.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-mesh-delete-webhook
  namespace: kong-mesh-2.7.3.tgz
  labels:
  
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-delete"
    
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kong-mesh-delete-webhook
      labels:
    
        helm.sh/chart: kuma-2.7.3
        app.kubernetes.io/name: kong-mesh
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "2.7.3"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kong-mesh-pre-delete-job
      nodeSelector:
      
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
      containers:
        - name: pre-delete-job
          image: "docker.io/bitnami/kubectl:1.27.5"
          command:
            - 'kubectl'
            - 'delete'
            - 'ValidatingWebhookConfiguration'
            - kong-mesh-validating-webhook-configuration
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 65534
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
---
# Source: kong-mesh/charts/kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-mesh-patch-ns
  namespace: kong-mesh-2.7.3.tgz
  labels:
  
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-install"
    
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kong-mesh-patch-ns-script
      labels:
    
        helm.sh/chart: kuma-2.7.3
        app.kubernetes.io/name: kong-mesh
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "2.7.3"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kong-mesh-patch-ns-job
      nodeSelector:
      
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
      containers:
        - name: pre-install-job
          image: "docker.io/bitnami/kubectl:1.27.5"
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 65534
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
          command:
            - 'kubectl'
            - 'patch'
            - 'namespace'
            - "kong-mesh-2.7.3.tgz"
            - '--type'
            - 'merge'
            - '--patch'
            - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
---
# Source: kong-mesh/charts/kuma/templates/pre-upgrade-install-crds-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-mesh-install-crds
  namespace: kong-mesh-2.7.3.tgz
  labels:
  
    helm.sh/chart: kuma-2.7.3
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      name: kong-mesh-install-crds-job
      labels:
    
        helm.sh/chart: kuma-2.7.3
        app.kubernetes.io/name: kong-mesh
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "2.7.3"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kong-mesh-install-crds
      nodeSelector:
      
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
      containers:
        - name: pre-upgrade-job
          image: "docker.io/bitnami/kubectl:1.27.5"
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 65534
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
          command: ["/kuma/scripts/install_crds.sh"]
          volumeMounts:
            - mountPath: /kuma/crds
              name: crds
              readOnly: true
            - mountPath: /kuma/scripts
              name: scripts
              readOnly: true
      initContainers:
        - name: pre-upgrade-job-init
          image: "docker.io/kong/kumactl:2.7.3"
          securityContext:
            readOnlyRootFilesystem: true
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
          volumeMounts:
          - mountPath: /kuma/crds
            name: crds
          - mountPath: /kuma/scripts
            name: scripts
            readOnly: true
          command: ["sh", "-c"]
          args: ["/kuma/scripts/save_crds.sh"]
      volumes:
        - name: scripts
          configMap:
            name: kong-mesh-install-crds-scripts
            defaultMode: 0755
        - name: crds
          emptyDir: {}
