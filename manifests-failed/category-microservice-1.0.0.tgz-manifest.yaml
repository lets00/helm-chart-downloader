---
# Source: category-microservice/charts/mongo/templates/mongo/storage-class.yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: my-release-mongo-category-microservice-1.0.0.tgz
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
provisioner: k8s.io/minikube-hostpath
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
# Source: category-microservice/charts/mongo/templates/mongo/pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-release-mongo-category-microservice-1.0.0.tgz
  namespace: category-microservice-1.0.0.tgz
  labels:
    type: local
spec:
  storageClassName: my-release-mongo-category-microservice-1.0.0.tgz
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/db/[replace-this-with-your-namespace]
---
# Source: category-microservice/charts/mongo/templates/mongo/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-mongo
  namespace: category-microservice-1.0.0.tgz
spec:
  storageClassName: my-release-mongo-category-microservice-1.0.0.tgz
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
---
# Source: category-microservice/charts/category/templates/category/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: my-release-category
    servicefor: my-release-category
  name: my-release-category
  namespace: category-microservice-1.0.0.tgz
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: my-release-category
    servicefor: my-release-category
  type: NodePort
---
# Source: category-microservice/charts/mongo/templates/mongo/service.yaml
apiVersion: v1
kind: Service
metadata:
  name:  mongo
  namespace: category-microservice-1.0.0.tgz
  labels:
    app: my-release-mongo
spec:
  selector:
    app: my-release-mongo
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
---
# Source: category-microservice/charts/category/templates/category/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-release-category
    servicefor: my-release-category
  name: my-release-category
  namespace: category-microservice-1.0.0.tgz
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-release-category
      servicefor: my-release-category
  strategy: {}
  template:
    metadata:
      labels:
        app: my-release-category
        servicefor: my-release-category
    spec:
      containers:
      - image: dellcloud/category:distributed
        imagePullPolicy: IfNotPresent
        name: category
        ports:
          - containerPort: 8080
        env:
          - name: SPRING_DATA_MONGODB_URI
            value: mongodb://mongo:27017/dev
---
# Source: category-microservice/charts/mongo/templates/mongo/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-mongo
  namespace: category-microservice-1.0.0.tgz
  labels:
    app: my-release-mongo
spec:
  selector:
    matchLabels:
      app: my-release-mongo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: my-release-mongo
    spec:
      containers:
        - image: mongo:latest
          name: mongo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: storage
              mountPath: /data/db
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: my-release-mongo
