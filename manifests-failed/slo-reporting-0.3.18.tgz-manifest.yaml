---
# Source: slo-reporting/templates/configmap.yaml
# https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#configure-all-key-value-pairs-in-a-configmap-as-container-environment-variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-slo-reporting
  labels:
    helm.sh/chart: slo-reporting-0.3.18
    app.kubernetes.io/name: slo-reporting
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.18"
    app.kubernetes.io/managed-by: Helm
  annotations:
    timestamp: "20240620115843"
data:
  settings.yaml: |-
    ui:
      about:
        links:
        - icon: fa-brands fa-github
          name: colenio/slo-reporting
          url: https://github.com/colenio/slo-reporting
      icons:
        brand: /static/img/brand.png
        favicon: /static/favico.png
      slo:
        links:
        - icon: https://raw.githubusercontent.com/pyrra-dev/pyrra/main/ui/public/favicon.ico
          name: Pyrra
          url: http://localhost:8080
        - icon: https://raw.githubusercontent.com/prometheus/docs/main/static/favicon.ico
          name: Prometheus
          url: http://localhost:9090
      status:
        links:
        - icon: https://raw.githubusercontent.com/grafana/grafana/main/public/img/fav32.png
          name: Grafana
          url: http://localhost:3000
        - icon: https://raw.githubusercontent.com/prometheus/alertmanager/main/ui/app/favicon.ico
          name: Alertmanager
          url: http://localhost:9093
    metrics:
      enabled: true
      prometheus: 
        url: http://prometheus-community-kube-prometheus.observability:9090
      archive: /app/data/slo-reporting.csv
      window: P30D
      step: P1D
      objectives:
      - goal: 99.9
        name: prometheus-uptime
        query: 100 * avg(avg_over_time(up{job=~"prometheus.*"}[5m]))
      - goal_query: 100 * pyrra_objective
        name: slo
        query: 100 * pyrra_availability
    status:
    enabled: true
    interval: PT1M
    monitors:
      alertmanager:
      - active: true
        filters:
        - receiver=email
        - severity=critical
        - relevance=health-status
        inhibited: false
        name: alertmanager-project1
        silenced: false
        unprocessed: false
        url: http://alertmanager-operated.observability:9093/api/v2/alerts
      azure:
      - name: azure-project-1
        subscription_id: XXXXXX-XXXX-XXXXXX-XXXX-XXXXXX
      prometheus:
      - name: prometheus-project-1
        query: ALERTS{alertstate="firing", severity="critical", relevance="health-status"}
        url: http://prometheus-operated.observability:9090
---
# Source: slo-reporting/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-slo-reporting
  labels:
    helm.sh/chart: slo-reporting-0.3.18
    app.kubernetes.io/name: slo-reporting
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.18"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: slo-reporting
    app.kubernetes.io/instance: my-release
---
# Source: slo-reporting/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-slo-reporting
  labels:
    helm.sh/chart: slo-reporting-0.3.18
    app.kubernetes.io/name: slo-reporting
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.18"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: slo-reporting
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: slo-reporting
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: slo-reporting
          securityContext:
            {}
          image: "ghcr.io/colenio/slo-reporting:0.3.18"
          imagePullPolicy: IfNotPresent
          # cf.:
          # - https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
              scheme: HTTP
          env:
            {}          
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /app/config/settings.yaml
              subPath: settings.yaml
              readOnly: true
            - name: bucket
              mountPath: /app/data
      volumes:
        - name: config
          configMap:
            name: my-release-slo-reporting
            items:
              - key: settings.yaml
                path: settings.yaml
        - name: bucket
          azureFile:
            secretName: slo-reporting
            shareName: slo-reports
---
# Source: slo-reporting/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: my-release-slo-reporting-update
  labels:
    helm.sh/chart: slo-reporting-0.3.18
    app.kubernetes.io/name: slo-reporting
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.18"
    app.kubernetes.io/managed-by: Helm
spec:
  concurrencyPolicy: Forbid
  schedule: "@daily"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            helm.sh/chart: slo-reporting-0.3.18
            app.kubernetes.io/name: slo-reporting
            app.kubernetes.io/instance: my-release
            app.kubernetes.io/version: "0.3.18"
            app.kubernetes.io/managed-by: Helm
        spec:
          restartPolicy: Never
          containers:
            - name: slo-update
              image: curlimages/curl
              command: ['curl']
              args:
                - '-X'
                - 'POST'
                - 'http://my-release-slo-reporting:8000/api/slo/_update'
---
# Source: slo-reporting/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: my-release-slo-reporting
  labels:
    app.kubernetes.io/component: metrics
    helm.sh/chart: slo-reporting-0.3.18
    app.kubernetes.io/name: slo-reporting
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.18"
    app.kubernetes.io/managed-by: Helm
spec:
  endpoints:
    - port: http # TODO: port name should be 'metrics'
      path: "/metrics"
      interval: 30s
  selector:
    matchLabels:
      app.kubernetes.io/name: slo-reporting
      app.kubernetes.io/instance: my-release
      # TODO: app.kubernetes.io/component: metrics
