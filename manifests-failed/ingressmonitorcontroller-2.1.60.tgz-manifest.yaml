---
# Source: ingressmonitorcontroller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingressmonitorcontroller
  namespace: ingressmonitorcontroller-2.1.60.tgz
  labels:
    helm.sh/chart: ingressmonitorcontroller-2.1.60
    app.kubernetes.io/name: ingressmonitorcontroller
    app.kubernetes.io/instance: ingress-monitor-controller
    app.kubernetes.io/version: "2.1.60"
    app.kubernetes.io/managed-by: helm
---
# Source: ingressmonitorcontroller/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingressmonitorcontroller-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - endpointmonitor.stakater.com
  resources:
  - endpointmonitors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - endpointmonitor.stakater.com
  resources:
  - endpointmonitors/finalizers
  verbs:
  - update
- apiGroups:
  - endpointmonitor.stakater.com
  resources:
  - endpointmonitors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
---
# Source: ingressmonitorcontroller/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingressmonitorcontroller-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: ingressmonitorcontroller/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingressmonitorcontroller-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: ingressmonitorcontroller/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingressmonitorcontroller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingressmonitorcontroller-manager-role
subjects:
- kind: ServiceAccount
  name: ingressmonitorcontroller
  namespace: ingressmonitorcontroller-2.1.60.tgz
---
# Source: ingressmonitorcontroller/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingressmonitorcontroller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingressmonitorcontroller-proxy-role
subjects:
- kind: ServiceAccount
  name: ingressmonitorcontroller
  namespace: ingressmonitorcontroller-2.1.60.tgz
---
# Source: ingressmonitorcontroller/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingressmonitorcontroller-metrics-reader-rolebbinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingressmonitorcontroller-metrics-reader
subjects:
- kind: ServiceAccount
  name: ingressmonitorcontroller
  namespace: ingressmonitorcontroller-2.1.60.tgz
---
# Source: ingressmonitorcontroller/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ingressmonitorcontroller-leader-election-role
  namespace: ingressmonitorcontroller-2.1.60.tgz
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: ingressmonitorcontroller/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ingressmonitorcontroller-secret-viewer-role
  namespace: ingressmonitorcontroller-2.1.60.tgz
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
---
# Source: ingressmonitorcontroller/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ingressmonitorcontroller-leader-election-rolebinding
  namespace: ingressmonitorcontroller-2.1.60.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingressmonitorcontroller-leader-election-role
subjects:
- kind: ServiceAccount
  name: ingressmonitorcontroller
  namespace: ingressmonitorcontroller-2.1.60.tgz
---
# Source: ingressmonitorcontroller/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ingressmonitorcontroller-secret-viewer-rolebinding
  namespace: ingressmonitorcontroller-2.1.60.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingressmonitorcontroller-secret-viewer-role
subjects:
- kind: ServiceAccount
  name: ingressmonitorcontroller
  namespace: ingressmonitorcontroller-2.1.60.tgz
---
# Source: ingressmonitorcontroller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ingressmonitorcontroller-metrics-service
  namespace: ingressmonitorcontroller-2.1.60.tgz
  labels:
    helm.sh/chart: ingressmonitorcontroller-2.1.60
    app.kubernetes.io/name: ingressmonitorcontroller
    app.kubernetes.io/instance: ingress-monitor-controller
    app.kubernetes.io/version: "2.1.60"
    app.kubernetes.io/managed-by: helm
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/name: ingressmonitorcontroller
    app.kubernetes.io/instance: ingress-monitor-controller
---
# Source: ingressmonitorcontroller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingressmonitorcontroller
  namespace: ingressmonitorcontroller-2.1.60.tgz
  labels:
    helm.sh/chart: ingressmonitorcontroller-2.1.60
    app.kubernetes.io/name: ingressmonitorcontroller
    app.kubernetes.io/instance: ingress-monitor-controller
    app.kubernetes.io/version: "2.1.60"
    app.kubernetes.io/managed-by: helm
    control-plane: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingressmonitorcontroller
      app.kubernetes.io/instance: ingress-monitor-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingressmonitorcontroller
        app.kubernetes.io/instance: ingress-monitor-controller
    spec:
      serviceAccountName: ingressmonitorcontroller
      securityContext:
        {}
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --v=0
        image: "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0"
        imagePullPolicy: "IfNotPresent"
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources:
          {}
        securityContext:
          {}    
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: CONFIG_SECRET_NAME
          value: imc-config
        name: manager
        image: "stakater/ingressmonitorcontroller:v2.1.60"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {}
        securityContext:
          {}  
      terminationGracePeriodSeconds: 10
---
# Source: ingressmonitorcontroller/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "ingressmonitorcontroller-test-connection"
  labels:
    helm.sh/chart: ingressmonitorcontroller-2.1.60
    app.kubernetes.io/name: ingressmonitorcontroller
    app.kubernetes.io/instance: ingress-monitor-controller
    app.kubernetes.io/version: "2.1.60"
    app.kubernetes.io/managed-by: helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['ingressmonitorcontroller:443']
  restartPolicy: Never
