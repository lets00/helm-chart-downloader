
---
# Source: cluster-ansible/templates/automationHub.yaml
apiVersion: automationhub.ansible.com/v1beta1
kind: AutomationHub
metadata:
  name: "default-ansible"
  namespace: "ansible-automation-platform-operator"
  labels:
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "default"
    app.startx.fr/environment: "infra"
    app.startx.fr/component: "ansible"
    app.startx.fr/app: "default-ansible"
    app.startx.fr/version: "14.6.301"
    helm.sh/chart: "cluster-ansible"
    app.kubernetes.io/component: "ansible"
    app.kubernetes.io/part-of: "default-ansible"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "14.6.301"
    app.kubernetes.io/instance: "myscope-infra-default-ansible-14.6.301"
    app.kubernetes.io/name: "default-ansible-automationhub"
  annotations:
    openshift.io/generated-by: startx-helm-cluster-ansible
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "10"
    helm.sh/hook-delete-policy: hook-failed
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookFailed
    argocd.argoproj.io/sync-wave: "10"
spec:
  route_tls_termination_mechanism: Edge
  ingress_type: Route
  loadbalancer_port: 80
  file_storage_size: 20Gi
  image_pull_policy: IfNotPresent
  file_storage_storage_class: efs-sc
  web:
    replicas: 1
  file_storage_access_mode: ReadWriteMany
  content:
    log_level: INFO
    replicas: 2
  api:
    log_level: INFO
    replicas: 1
  loadbalancer_protocol: http
  resource_manager:
    replicas: 1
  storage_type: File
  worker:
    replicas: 2
