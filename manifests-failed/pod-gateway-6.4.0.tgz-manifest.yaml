---
# Source: pod-gateway/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "my-release-pod-gateway"
  namespace: pod-gateway-6.4.0.tgz
  labels:
    helm.sh/chart: pod-gateway-6.4.0
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.8.1"
    app.kubernetes.io/managed-by: Helm
    
data:
  settings.sh: |
    #!/bin/sh
    # Generated by my-release-pod-gateway
    DNS_LOCAL_CIDRS="local"
    NOT_ROUTED_TO_GATEWAY_CIDRS=""
    VPN_BLOCK_OTHER_TRAFFIC="false"
    VPN_INTERFACE="tun0"
    VPN_LOCAL_CIDRS="10.0.0.0/8 192.168.0.0/16"
    VPN_TRAFFIC_PORT="1194"
    VXLAN_GATEWAY_FIRST_DYNAMIC_IP="20"
    VXLAN_ID="42"
    VXLAN_IP_NETWORK="172.16.0"
  nat.conf: |
    # Generated by my-release-pod-gateway
---
# Source: pod-gateway/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-pod-gateway
  labels:
    app.kubernetes.io/service: my-release-pod-gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/version: v1.8.1
    helm.sh/chart: pod-gateway-6.4.0
  annotations:
spec:
  type: ClusterIP
  clusterIP: None
  
  ports:
    - port: 4789
      targetPort: http
      protocol: UDP
      name: http
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: pod-gateway
---
# Source: pod-gateway/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-pod-gateway-webhook
  labels:
    helm.sh/chart: pod-gateway-6.4.0
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.8.1"
    app.kubernetes.io/managed-by: Helm
    
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: http
  selector:
    app.kubernetes.io/name: pod-gateway-webhook
    app.kubernetes.io/instance: my-release
---
# Source: pod-gateway/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-pod-gateway
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/version: v1.8.1
    helm.sh/chart: pod-gateway-6.4.0
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: pod-gateway
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pod-gateway
        app.kubernetes.io/instance: my-release
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - command:
          - /bin/gateway_init.sh
          image: ghcr.io/angelnu/pod-gateway:v1.8.1
          imagePullPolicy: IfNotPresent
          name: routes
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /config
            name: config
            readOnly: true
      containers:
        - name: my-release-pod-gateway
          image: "ghcr.io/angelnu/pod-gateway:v1.8.1"
          imagePullPolicy: IfNotPresent
          command:
              
            - /bin/gateway_sidecar.sh
          securityContext:
            capabilities:
              add:
              - NET_RAW
              - NET_ADMIN
          ports:
            - name: http
              containerPort: 4789
              protocol: UDP
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
          
      volumes:
        - name: config
          configMap:
            defaultMode: 365
            name: my-release-pod-gateway
---
# Source: pod-gateway/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-pod-gateway-webhook
  labels:
    helm.sh/chart: pod-gateway-6.4.0
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.8.1"
    app.kubernetes.io/managed-by: Helm
    
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      
      app.kubernetes.io/name: pod-gateway-webhook
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
      
        app.kubernetes.io/name: pod-gateway-webhook
        app.kubernetes.io/instance: my-release
    spec:
      volumes:
        - name: certs
          secret:
            secretName: my-release-pod-gateway-webhook-tls
            defaultMode: 420
      containers:
        - name: webhook
          image: ghcr.io/angelnu/gateway-admision-controller:v3.8.0
          args:
            - --webhook-listen-address=:8080
            - --gateway=my-release-pod-gateway.pod-gateway-6.4.0.tgz.svc.cluster.local
            - --DNS=172.16.0.1
            - --configmapName=my-release-pod-gateway
            - --setGatewayLabel=setGateway
            - --setGatewayAnnotation=setGateway
            - --setGatewayDefault
            # Static
            - --tls-cert-file-path=/tls/tls.crt
            - --tls-key-file-path=/tls/tls.key
            - --DNSPolicy=None
            # Init container
            - --initImage=ghcr.io/angelnu/pod-gateway:v1.8.1
            - --initImagePullPol=IfNotPresent
            - --initCmd=/bin/client_init.sh
            - --initMountPoint=/config
            # Sidecar container
            - --sidecarImage=ghcr.io/angelnu/pod-gateway:v1.8.1
            - --sidecarImagePullPol=IfNotPresent
            - --sidecarCmd=/bin/client_sidecar.sh
            - --sidecarMountPoint=/config
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: certs
              readOnly: true
              mountPath: /tls
          livenessProbe:
            httpGet:
              path: /wh/health
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 1
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /wh/health
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 1
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          startupProbe:
            httpGet:
              path: /wh/health
              port: 8080
              scheme: HTTPS
            timeoutSeconds: 1
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
---
# Source: pod-gateway/templates/webhook-pki.yaml
# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: my-release-pod-gateway-webhook-ca
  namespace: "pod-gateway-6.4.0.tgz"
  labels:
    helm.sh/chart: pod-gateway-6.4.0
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.8.1"
    app.kubernetes.io/managed-by: Helm
    
spec:
  secretName: my-release-pod-gateway-webhook-ca
  duration: 43800h # 5y
  issuerRef:
    name: my-release-pod-gateway-webhook-selfsign
    kind: Issuer
  commonName: "ca.pod-gateway.cert-manager"
  isCA: true
---
# Source: pod-gateway/templates/webhook-pki.yaml
# Finally, generate a serving certificate for the webhook to use
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: my-release-pod-gateway-webhook-tls
  namespace: "pod-gateway-6.4.0.tgz"
  labels:
    helm.sh/chart: pod-gateway-6.4.0
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.8.1"
    app.kubernetes.io/managed-by: Helm
    
spec:
  secretName: my-release-pod-gateway-webhook-tls
  duration: 8760h # 1y
  issuerRef:
    name: my-release-pod-gateway-webhook-ca
    kind: Issuer
  dnsNames:
  - my-release-pod-gateway-webhook
  - my-release-pod-gateway-webhook.pod-gateway-6.4.0.tgz
  - my-release-pod-gateway-webhook.pod-gateway-6.4.0.tgz.svc
---
# Source: pod-gateway/templates/webhook-pki.yaml
# Create a selfsigned Issuer, in order to create a root CA certificate for
# signing webhook serving certificates
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: my-release-pod-gateway-webhook-selfsign
  namespace: "pod-gateway-6.4.0.tgz"
  labels:
    helm.sh/chart: pod-gateway-6.4.0
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.8.1"
    app.kubernetes.io/managed-by: Helm
    
spec:
  selfSigned: {}
---
# Source: pod-gateway/templates/webhook-pki.yaml
# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: my-release-pod-gateway-webhook-ca
  namespace: "pod-gateway-6.4.0.tgz"
  labels:
    helm.sh/chart: pod-gateway-6.4.0
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.8.1"
    app.kubernetes.io/managed-by: Helm
    
spec:
  ca:
    secretName: my-release-pod-gateway-webhook-ca
---
# Source: pod-gateway/templates/webhook-admissionregistration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: "my-release-pod-gateway"
  labels:
    helm.sh/chart: pod-gateway-6.4.0
    app.kubernetes.io/name: pod-gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.8.1"
    app.kubernetes.io/managed-by: Helm
    
  annotations:
    cert-manager.io/inject-ca-from: "pod-gateway-6.4.0.tgz/my-release-pod-gateway-webhook-tls"
webhooks:
- name: "my-release-pod-gateway.svc.cluster.local"
  namespaceSelector:
    matchLabels:
      routed-gateway: "true"
  rules:
  - apiGroups:   [""]
    apiVersions: ["v1"]
    operations:  ["CREATE"]
    resources:   ["pods"]
    scope:       "Namespaced"
  clientConfig:
    service:
      namespace: "pod-gateway-6.4.0.tgz"
      name: my-release-pod-gateway-webhook
      path: /wh/mutating/setgateway
      port: 8080
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  timeoutSeconds: 5
