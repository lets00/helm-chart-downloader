---
# Source: dashboard/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-dashboard
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.4
---
# Source: dashboard/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-dashboard
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.4
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.dashboard.tekton.dev/aggregate-to-dashboard: "true"
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/part-of: tekton-dashboard
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: dashboard-0.6.4
---
# Source: dashboard/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-dashboard-core
  labels:
    rbac.dashboard.tekton.dev/aggregate-to-dashboard: "true"
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.4
rules:
  - apiGroups:
      - ''
    resources:
      - serviceaccounts
    verbs:
      - update
      - patch
  - apiGroups:
      - ''
    resources:
      - pods
      - services
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - extensions
      - apps
    resources:
      - deployments
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - tekton.dev
    resources:
      - tasks
      - clustertasks
      - taskruns
      - pipelines
      - pipelineruns
      - pipelineresources
      - conditions
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - tekton.dev
    resources:
      - taskruns/finalizers
      - pipelineruns/finalizers
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - tekton.dev
    resources:
      - tasks/status
      - clustertasks/status
      - taskruns/status
      - pipelines/status
      - pipelineruns/status
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - dashboard.tekton.dev
    resources:
      - extensions
    verbs:
      - create
      - update
      - delete
      - patch
  - apiGroups:
      - triggers.tekton.dev
    resources:
      - clustertriggerbindings
      - eventlisteners
      - triggerbindings
      - triggertemplates
    verbs:
      - create
      - update
      - delete
      - patch
      - add
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
  - apiGroups:
      - security.openshift.io
    resources:
      - securitycontextconstraints
    verbs:
      - use
  - apiGroups:
      - route.openshift.io
    resources:
      - routes
    verbs:
      - get
      - list
  - apiGroups:
      - extensions
      - apps
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - serviceaccounts
    verbs:
      - get
      - list
  - apiGroups:
      - ''
    resources:
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - pods/log
      - namespaces
      - events
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - tekton.dev
    resources:
      - tasks
      - clustertasks
      - taskruns
      - pipelines
      - pipelineruns
      - pipelineresources
      - conditions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - tekton.dev
    resources:
      - taskruns/finalizers
      - pipelineruns/finalizers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - tekton.dev
    resources:
      - tasks/status
      - clustertasks/status
      - taskruns/status
      - pipelines/status
      - pipelineruns/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - dashboard.tekton.dev
    resources:
      - extensions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - triggers.tekton.dev
    resources:
      - clustertriggerbindings
      - eventlisteners
      - triggerbindings
      - triggertemplates
    verbs:
      - get
      - list
      - watch
---
# Source: dashboard/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: my-release-dashboard
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.4
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-dashboard
subjects:
  - kind: ServiceAccount
    name: my-release-dashboard
    namespace: dashboard-0.6.4.tgz
---
# Source: dashboard/templates/dashboard_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-dashboard
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.4
    app.kubernetes.io/version: v0.6.1.3
    dashboard.tekton.dev/release: v0.6.1.3
    version: v0.6.1.3
    app.kubernetes.io/name: dashboard
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9097
      protocol: TCP
      targetPort: 9097
  selector:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/name: dashboard
---
# Source: dashboard/templates/dashboard_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-dashboard-controller
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: dashboard-0.6.4
    app.kubernetes.io/version: v0.6.1.3
    dashboard.tekton.dev/release: v0.6.1.3
    version: v0.6.1.3
    app.kubernetes.io/name: dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/part-of: tekton-dashboard
      app.kubernetes.io/name: dashboard
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/part-of: tekton-dashboard
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: dashboard-0.6.4
        app.kubernetes.io/version: v0.6.1.3
        dashboard.tekton.dev/release: v0.6.1.3
        version: v0.6.1.3
        app.kubernetes.io/name: dashboard
    spec:
      serviceAccountName: my-release-dashboard
      containers:
        - name: dashboard
          image: gcr.io/tekton-releases/github.com/tektoncd/dashboard/cmd/dashboard:v0.6.1.3
          imagePullPolicy: "IfNotPresent"
          env:
            - name: PORT
              value: "9097"
            - name: READ_ONLY
              value: "false"
            - name: WEB_RESOURCES_DIR
              value: /var/run/ko/web
            - name: PIPELINE_RUN_SERVICE_ACCOUNT
              value: ""
            - name: INSTALLED_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 9097
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 9097
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9097
