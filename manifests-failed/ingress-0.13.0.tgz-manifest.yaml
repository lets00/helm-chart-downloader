---
# Source: ingress/charts/controller/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-controller
  namespace: ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
---
# Source: ingress/charts/gateway/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-gateway
  namespace: ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-controller-validation-webhook-ca-keypair
  namespace:  ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUs5ckYwTE9ybXVpaEVqTnBpdHlmcE13RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3TmpJd01UUTFOekEzV2hjTgpNelF3TmpFNE1UUTFOekEzV2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMbDNiZi9DNlQyZFh2VUV5SklaTTV0YkNxVmcKMit3RWJqYlNDWTRCVXoyeWlVa3cwK2JZakZwY3BhQkp1VXdtaklTQ2VNR0hqWW52dzE4ZGcvUUJnUmNuQ1FYRwpYMUxOSno5dWRMbE5MSDU3YUt4Tk1KU3JMb09SOGRpZHV1WXc3OVBTL214TmhBVjdwb28rZzQzUWo2cUREbnJFCnRRMDNNVjF2YW0vQXllSDMzVW1tQzVFT3NiaDFUUS8xTks5N2o3S1hlOFBVM1BCanNIQ2I5YkdjbThua3YxRlcKNnJIbkRxYlh0RmZVclVzaTFXK28xTVZjK1REeTFGZTZVeGQ4MllJZU0zWVJ1VU9OQlk5ekNselJRc1loRlRRcApubFZ6c0xVMWF5elhldFo4MGx0UHViRFpzVWx4aWUvWFpxSmdFS2RkSDhDNEJFMjVaeTIrRW1oc09pOENBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUmlXTjRnWUZaK0RveFJyVWlmakwzUwpkSVBOTXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWdqdkdHbkYvZWNVNnRrMlFZbzlwMmtHdURFcGxGQnd4CkNreDE5YWNHaU53UnZwV0tlL2w0eDNEU2hoVjQzRmdWMjVoZEExQjY4dkoxRXA3cmgrOURldW54M0pWMFdhdkcKRmNYM0Z2RTRBVEtUcmRucXcyWmVaVG5qZ3d3VHMzaEY1Z0pCVlZNbEhUeXo3aElkWDdkUFFvYU1HNFl0VVM3UQptMUVxVHRFZmlScUM1S2cxTmhYK0Y1eHZ0SW9rMkhlVE1NeGwyMVdJTVlUemoxRWEydDNoU2xZMFNXY0NTUkJqCm1xNkN1NlhMekNqNExocDJObFpBdWRDWVVrbDFpSWM2TGEyVVJ0RlFjd0NMUjVKcFhaN081MlRBZllOaXduMHUKMTRKdGtRaDVpbDkrdFZ0a0hiTHJ0SVVvRUp5WTEzOURmU252akZoZEZKcXpPRTVneXFZRTN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdVhkdC84THBQWjFlOVFUSWtoa3ptMXNLcFdEYjdBUnVOdElKamdGVFBiS0pTVERUCjV0aU1XbHlsb0VtNVRDYU1oSUo0d1llTmllL0RYeDJEOUFHQkZ5Y0pCY1pmVXMwblAyNTB1VTBzZm50b3JFMHcKbEtzdWc1SHgySjI2NWpEdjA5TCtiRTJFQlh1bWlqNkRqZENQcW9NT2VzUzFEVGN4WFc5cWI4REo0ZmZkU2FZTAprUTZ4dUhWTkQvVTByM3VQc3BkN3c5VGM4R093Y0p2MXNaeWJ5ZVMvVVZicXNlY09wdGUwVjlTdFN5TFZiNmpVCnhWejVNUExVVjdwVEYzelpnaDR6ZGhHNVE0MEZqM01LWE5GQ3hpRVZOQ21lVlhPd3RUVnJMTmQ2MW56U1cwKzUKc05teFNYR0o3OWRtb21BUXAxMGZ3TGdFVGJsbkxiNFNhR3c2THdJREFRQUJBb0lCQUdNSXZla0xlQ1paaVNJRwp1dDhncStqeUZWNDN1VmR2Q2pjbHNzcHNOTG5HUXY2ZEh4bXVXa3ZLR3ZyYlF5SEJsOWtPSGxNaEFkZzgrak1vCi9KUG4xYm02TTF3dEVDdVR0cmh0VDlDK3Y5cU9KVmVVSkRQT3NKaTY3c3cvZFZTRG54eWFGeGRYMFA1b2g0WmMKV1R6NXVDMVJyQUtzVlExSWdvaWsvTTNOd1Q5eWhNT3N2MUN4ekRBOXBiaFh1Uk1mbzg1L05YUmNQaERHMG42QwozcDFGZ0NGdXF4RjhDU210ajMrRGtyRG5FOUwrSW1RNHptQ3FwYW16Tk9ZQWg3ZkNrNTlBZTdZSmt0ZTlPaGxmCm93bitIcW02RDVqUk8xRUZhS3VXKzNHOWxwRzFHT2FYSXFlOWFtTXNlZ0ZmWWdsWmp0L1I0MkJyMHVxY3dyVFIKR1NpTkE4a0NnWUVBeHc2KzIxWXRYS1E0alluMGRxQ2Zrdi9OUkVYenZtdjBKT2U3RUZPZ1NXaWxYTFZScHJXQgpyamI1QlBaZDBvSnpuL2FTQysycklIU0VPTXFHSVIwMHh3ZFBuNnJnRzJWR1ZIS1lHNDhvZTdyc1RLL2lDQmdFCnIvZXcxQ3pJWDBTREh6RENRRnJST0VmU1RzeHdzL3hSbTBaK1JiUTM3KzJNMjlBdTUzbndPVDBDZ1lFQTdvVmsKTDM3SHdHRktkdlNYdzYxbU5mWTQ5c0x5RkpGK2tacWRrbkpqSXNXdVppUkNzZXBkb09ST3RlY0xQYVNONWp6dwozMEsxNDd4Y0grMmpoYUJZUGx1N0M3QXRISDZOOVgvVlpHREl1QUVyN0FwMWJIdHltckxpVElvZEcyS2FqejR2CnpLTDdoK3NCQldMbkYvSXM2dnYxRDBYZG5HYXNJUFd5bHJYK2Y5c0NnWUI5Q3oxSHFhWUxTVG9oWjZVREZEbkoKN1JrMEowRkx3S0w0di8xWjd6NkVmdEZLSUxqdklad2FKWHhlNnFqYmdZbEMxbkMrUDRtOWRKUk8zS0pQa1BwRApnTXM3QU91UktoaDVHaGVGVUhQYzdmcGMzaXYrYTZBZUxsbU5uNmdyZUcxcUhZWVpTVE9leURkTHVzK2RzUVpPCnBZVFRJcmYwNTJRUi9ZQkpkdWM1L1FLQmdFMm4zak5jYW5wbThwQ0NGN3NjaEUrRFI0NkhiN3RrbHptZWhqaTgKeHl2MkFrNjg5WDNwV094ZUNJWk9uNmxGSHZIYjIyeEUwdVUvV1JzSUNwb2gxemtPTW5xZXRFRTNyczVEL1Z5OQo2ZnVHWGg5dVZFYXFkbWlKWHdZZVhWV2lKOElGTkJqQzQzT2YvbWdiaURPU3BDOHBNdUx6RXpDdGVOTU9TME9vCkl5RExBb0dBSjlnSGZyako4OGl5bGx2T2oyTnE2aW91L3QzUEJpSWpLNTlTTmU2STI5UXQvYkVpS2ZiUTNiRk0KZ2NGc1NzRDFwODFaRTFVdmtVbnBVaXRZWlBHL25oaHJDQjhTMDFkQjIvN01JaUFCN3ZNaGsvOHpOamhkTmJXZwp3V3dCZVdRM0RVMi9VbklCZ2hVdkI5M0hBQlBkZ0lraUcvTVMwZ09sWEIzaTRNekFNSVU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-controller-validation-webhook-keypair
  namespace:  ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuakNDQW9hZ0F3SUJBZ0lRUGdVOUE0Rld4blE1TnVHekpuYXlpekFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREEyTWpBeE5EVTNNRGRhRncwegpOREEyTVRneE5EVTNNRGRhTUVveFNEQkdCZ05WQkFNVFAyMTVMWEpsYkdWaGMyVXRZMjl1ZEhKdmJHeGxjaTEyCllXeHBaR0YwYVc5dUxYZGxZbWh2YjJzdWFXNW5jbVZ6Y3kwd0xqRXpMakF1ZEdkNkxuTjJZekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVNVdHRwWGtKS2wxMUJyWm8vR0p4SHVjbjRRWStxTQpVdVp5ZmNITDBHQzZTdUtjZnR5WWVPMXV3WW9oRzNoL3dsLzBIUldKRVYxc0hWWDQ2YlQrNGlnVVUwVmZuTFd3CkVrdzhqeWtJQ01TdDFzYnJvVTU4NFVJOHFPaVhuWEpkUjUwUldpdjNEZkxUYWFGaXFNVjdycFFxNGlZTHYvRVAKQkp2YytvN2xPYW1td25oWWZnUVdJSDN3MmpycElaMnFVRmJsVE1mdnFWeUdwQTRPd2Vkd1VjbjBsWXp6MXQwbwpsWFQyS3hFNlMzOUZOUTZ4K3RsZkZybWtoMDMyeUU4MWtoajRpRDlZUzNHaGZKelFDZDNUV3BqNjFJU09vNEJaCkdneHZBcDllaGJlZ29ZbGRoNjEvSFVmV1J6d3lBaGs3cStrOWc0b3BrQ0UyTGFIT1A0RGE4RThDQXdFQUFhT0IKclRDQnFqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRgpCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVWWxqZUlHQldmZzZNVWExSW40eTkwblNECnpUTXdTZ1lEVlIwUkJFTXdRWUkvYlhrdGNtVnNaV0Z6WlMxamIyNTBjbTlzYkdWeUxYWmhiR2xrWVhScGIyNHQKZDJWaWFHOXZheTVwYm1keVpYTnpMVEF1TVRNdU1DNTBaM291YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUJUZTg3YWJZM3psb0ZZY05vZEZsNWtNVmxRa0RhSUk2c0lGQWtTMDZocXdiOTlKa0Q4NnYwM2YzMTREckk2CjNSZU5pcGk1NzFUYld0S1ZoMFNwY1BDTmZURU1GeHBTOVJZNlBDZDRQODVnNnNPNWNWVDdxUTM4cWpVUjBoVTIKeVVYTDFUd1dGVzZYc3RxOHFjTUtDWGhqSWlnZ2dodE54K1VSb0hZK24vUmdNd2lNY0Q3UXZ3WDl0Nk8rc0NtbQpLNVpjYU41emhVakM3V2dsN29jaGFUbW1tcFRZTDdLT3l4UURFWDlRTXlrRmR3cG1kSkxrVGZCTmNqRUpoUm5mClA5Z2pKdUdudUN5OVRpVmhWOEFQNm1OVVUyM1pESHZqOTgxMmJ4NG1VYWU3UGp2QWZuRXEwZEJCWlVIcEc4K1cKN05RZjNLdzk4T1Rqa0FrMjJQbk56bmxZCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeEpTMjJsZVFrcVhYVUd0bWo4WW5FZTV5ZmhCajZveFM1bko5d2N2UVlMcEs0cHgrCjNKaDQ3VzdCaWlFYmVIL0NYL1FkRllrUlhXd2RWZmpwdFA3aUtCUlRSVitjdGJBU1REeVBLUWdJeEszV3h1dWgKVG56aFFqeW82SmVkY2wxSG5SRmFLL2NOOHROcG9XS294WHV1bENyaUpndS84UThFbTl6Nmp1VTVxYWJDZUZoKwpCQllnZmZEYU91a2huYXBRVnVWTXgrK3BYSWFrRGc3QjUzQlJ5ZlNWalBQVzNTaVZkUFlyRVRwTGYwVTFEckg2CjJWOFd1YVNIVGZiSVR6V1NHUGlJUDFoTGNhRjhuTkFKM2ROYW1QclVoSTZqZ0ZrYURHOENuMTZGdDZDaGlWMkgKclg4ZFI5WkhQRElDR1R1cjZUMkRpaW1RSVRZdG9jNC9nTnJ3VHdJREFRQUJBb0lCQUU2bEhGNVB4K1FUZXdlTwpZRExHMkp5ZzQ2Y3hrWGVsZWdqOTV2ZmdQVlpsVVU1Rnc2OG5STUhnbklkUlpYY1l6YitybnZNZHFoZlJDQTk4CkRLdS9pT1QxOUxaOVlPbURMbDdYbjRLUDEwb3dMZ3ZZK3VpMnB6dmpuc09tM0hPRGhBSC9qaTZtb1NyemozL2sKUTViMk8wckZ1VUgxVTIzeVR5cTRCbm1pbFNZY2dKQSthS3llNG1nby9NNWlRZmJ2bE1GeStyNFRxd0pCc0JXYgpDd2lNOTcyRTcybUdyWEFPeHhra0NRamFYNlVQRGhZQUFqZkdZNnpVSFgreTRjL1BIaEpLTW84SU9vUVNSdmNyCnVQSkxhWVBrbU5DUENvWSt1R3pwR0kyUG82aWJrTDkyUkczaTdJQjE4MWFkZmFsVVdLbmk5U3M2NStRSDN5dmQKa2VGVHQwRUNnWUVBM2Ftbm5TZ1k1VDVjQWhKQThWK3RlODQwVmNRTGd4emJRTGlYS0sybWFTWjkzQmZIQmtydgpha091S3g1UEkwMUpGYldCMWJYcWFxc0FmOURxWEd4NmhxU2VRUlRLZVA1RkpPa0szL0dKd1RtY1ozZExZOFQ0ClRzWHp2L3RIekxncENtNEJtMmgzQkI2emRhU09vbHp2M3pnUVROb2dmUVNvaHNpeU1KYVJybThDZ1lFQTR3aG4KMnRndmdXdlJYd1lyay9nR0crTnBEVVJBTzJYb2JiMUVIZkRYcnNyWVJEOUpndDlnS2cwSlMxUFB5SzR4eXhOVwpDK1FoZjZzWEJvRU95Z0RHWHo2U0JZcHRqQWZHTVZyZmIvTVpaWU52aG9PNnlhZDNrNU5vQUZqc25sY01HSXY1CjAzTERLVWx6UEh0c0VZZENLYVJyTzhOV2hWU1V1b1poNittZHpDRUNnWUVBeTZtUXByWHJ3ZDI4L2U0MW0xRVUKZmRkbGdKUGpHL0dNaGZmVWN2eXlGSlRZT1R2amtxV1JPbXE3QVVVVTQxT2tYZnpxTVNpM0hKREhvYWliWEpZVApNZGpZeXVWR2IwcjR6c1FNU055TmZHcnBpS3MwS3BRVXJaUDF0S1ExUVNUSUdKd2dmK0RJMFpFL3hFeVEvUjgxCkNqeGh4YXI1Qk1VZDd0RkIzNkRJYzZNQ2dZRUFsYlZsUnBwb09SK3Y0TWxnMHlJcVpSbUFuSTcxRERZWEhzWS8KdEw2c2UwYW5kZG1GMEJjY2dwNDJFc1locm1PdjBnbmVJOWs3ZmNTRVduV2dHdlNIMnlhWGc2L1VyUkl6VHpodApQcFUvbWdFaCtjSEQybFhrTkJ4djZFcTdQVzZKTzJhU1J5eldKTk9hZWJlcGU2V0ZxNUFRWmtoWk5YS2c0SjdjCjA0UXAyZ0VDZ1lBRFQyb2g0THNscU1sd2hPeUxNTGZEaFRhU2VUWkJEbW1GdUxYbWxmRVdkN2thb0VONTZNNUIKbmdsdFNHMC9kaGhLeUU2UUFjcVZxcStrNTlSTGhWei90SVhzRE5yeVF4QmlrRWw4ejQvRGJ4N3Y5d3FMK1l1aQpzc2FXZmd0VE1LUnkxVGJkSHYzQUM2aTBBUU5BN2hkS2JtSGozanRVVkJ6S3JLRHhZbExmWVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
  name: my-release-controller
rules:

- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update

- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-controller
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-controller
subjects:
  - kind: ServiceAccount
    name: my-release-controller
    namespace: ingress-0.13.0.tgz
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-controller
  namespace: ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-controller
  namespace: ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-controller
subjects:
  - kind: ServiceAccount
    name: my-release-controller
    namespace: ingress-0.13.0.tgz
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-controller-validation-webhook
  namespace: ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    app.kubernetes.io/component: app
---
# Source: ingress/charts/gateway/templates/service-kong-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-gateway-admin
  namespace: ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
spec:
  type: ClusterIP
  ports:
  - name: kong-admin-tls
    port: 8444
    targetPort: 8444
    protocol: TCP
  clusterIP: None
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "my-release"
---
# Source: ingress/charts/gateway/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-gateway-manager
  namespace: ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
spec:
  type: NodePort
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "my-release"
---
# Source: ingress/charts/gateway/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-gateway-proxy
  namespace: ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "my-release"
---
# Source: ingress/charts/controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-controller
  namespace:  ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: controller
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "my-release"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: my-release-controller-token
        kuma.io/gateway: "enabled"
        traffic.kuma.io/exclude-outbound-ports: "8444"
        traffic.sidecar.istio.io/excludeOutboundPorts: "8444"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: controller
        helm.sh/chart: controller-2.39.0
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "3.6"
        app.kubernetes.io/component: app
        app: my-release-controller
        version: "3.6"
    spec:
      serviceAccountName: my-release-controller
      automountServiceAccountToken: false
      
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_SVC
          value: "ingress-0.13.0.tgz/my-release-gateway-admin"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "ingress-0.13.0.tgz/my-release-gateway-proxy"
        
        image: kong/kubernetes-ingress-controller:3.2
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: my-release-controller-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
       
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: my-release-controller-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: my-release-controller-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: my-release-controller-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: my-release-controller-validation-webhook-keypair
---
# Source: ingress/charts/gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-gateway
  namespace:  ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "my-release"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: my-release-gateway-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: gateway
        helm.sh/chart: gateway-2.39.0
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "3.6"
        app.kubernetes.io/component: app
        app: my-release-gateway
        version: "3.6"
    spec:
      serviceAccountName: my-release-gateway
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROLE
          value: "traditional"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        
        volumeMounts:
        - name: my-release-gateway-prefix-dir
          mountPath: /kong_prefix/
        - name: my-release-gateway-tmp
          mountPath: /tmp
      containers:
      - name: "proxy"
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROLE
          value: "traditional"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: admin-tls
          containerPort: 8444
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: my-release-gateway-prefix-dir
            mountPath: /kong_prefix/
          - name: my-release-gateway-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: my-release-gateway-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: my-release-gateway-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: my-release-gateway-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: my-release-controller-validations
  namespace: ingress-0.13.0.tgz
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.39.0
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "3.6"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUs5ckYwTE9ybXVpaEVqTnBpdHlmcE13RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3TmpJd01UUTFOekEzV2hjTgpNelF3TmpFNE1UUTFOekEzV2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMbDNiZi9DNlQyZFh2VUV5SklaTTV0YkNxVmcKMit3RWJqYlNDWTRCVXoyeWlVa3cwK2JZakZwY3BhQkp1VXdtaklTQ2VNR0hqWW52dzE4ZGcvUUJnUmNuQ1FYRwpYMUxOSno5dWRMbE5MSDU3YUt4Tk1KU3JMb09SOGRpZHV1WXc3OVBTL214TmhBVjdwb28rZzQzUWo2cUREbnJFCnRRMDNNVjF2YW0vQXllSDMzVW1tQzVFT3NiaDFUUS8xTks5N2o3S1hlOFBVM1BCanNIQ2I5YkdjbThua3YxRlcKNnJIbkRxYlh0RmZVclVzaTFXK28xTVZjK1REeTFGZTZVeGQ4MllJZU0zWVJ1VU9OQlk5ekNselJRc1loRlRRcApubFZ6c0xVMWF5elhldFo4MGx0UHViRFpzVWx4aWUvWFpxSmdFS2RkSDhDNEJFMjVaeTIrRW1oc09pOENBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUmlXTjRnWUZaK0RveFJyVWlmakwzUwpkSVBOTXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWdqdkdHbkYvZWNVNnRrMlFZbzlwMmtHdURFcGxGQnd4CkNreDE5YWNHaU53UnZwV0tlL2w0eDNEU2hoVjQzRmdWMjVoZEExQjY4dkoxRXA3cmgrOURldW54M0pWMFdhdkcKRmNYM0Z2RTRBVEtUcmRucXcyWmVaVG5qZ3d3VHMzaEY1Z0pCVlZNbEhUeXo3aElkWDdkUFFvYU1HNFl0VVM3UQptMUVxVHRFZmlScUM1S2cxTmhYK0Y1eHZ0SW9rMkhlVE1NeGwyMVdJTVlUemoxRWEydDNoU2xZMFNXY0NTUkJqCm1xNkN1NlhMekNqNExocDJObFpBdWRDWVVrbDFpSWM2TGEyVVJ0RlFjd0NMUjVKcFhaN081MlRBZllOaXduMHUKMTRKdGtRaDVpbDkrdFZ0a0hiTHJ0SVVvRUp5WTEzOURmU252akZoZEZKcXpPRTVneXFZRTN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: my-release-controller-validation-webhook
      namespace: ingress-0.13.0.tgz
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUs5ckYwTE9ybXVpaEVqTnBpdHlmcE13RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3TmpJd01UUTFOekEzV2hjTgpNelF3TmpFNE1UUTFOekEzV2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMbDNiZi9DNlQyZFh2VUV5SklaTTV0YkNxVmcKMit3RWJqYlNDWTRCVXoyeWlVa3cwK2JZakZwY3BhQkp1VXdtaklTQ2VNR0hqWW52dzE4ZGcvUUJnUmNuQ1FYRwpYMUxOSno5dWRMbE5MSDU3YUt4Tk1KU3JMb09SOGRpZHV1WXc3OVBTL214TmhBVjdwb28rZzQzUWo2cUREbnJFCnRRMDNNVjF2YW0vQXllSDMzVW1tQzVFT3NiaDFUUS8xTks5N2o3S1hlOFBVM1BCanNIQ2I5YkdjbThua3YxRlcKNnJIbkRxYlh0RmZVclVzaTFXK28xTVZjK1REeTFGZTZVeGQ4MllJZU0zWVJ1VU9OQlk5ekNselJRc1loRlRRcApubFZ6c0xVMWF5elhldFo4MGx0UHViRFpzVWx4aWUvWFpxSmdFS2RkSDhDNEJFMjVaeTIrRW1oc09pOENBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUmlXTjRnWUZaK0RveFJyVWlmakwzUwpkSVBOTXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWdqdkdHbkYvZWNVNnRrMlFZbzlwMmtHdURFcGxGQnd4CkNreDE5YWNHaU53UnZwV0tlL2w0eDNEU2hoVjQzRmdWMjVoZEExQjY4dkoxRXA3cmgrOURldW54M0pWMFdhdkcKRmNYM0Z2RTRBVEtUcmRucXcyWmVaVG5qZ3d3VHMzaEY1Z0pCVlZNbEhUeXo3aElkWDdkUFFvYU1HNFl0VVM3UQptMUVxVHRFZmlScUM1S2cxTmhYK0Y1eHZ0SW9rMkhlVE1NeGwyMVdJTVlUemoxRWEydDNoU2xZMFNXY0NTUkJqCm1xNkN1NlhMekNqNExocDJObFpBdWRDWVVrbDFpSWM2TGEyVVJ0RlFjd0NMUjVKcFhaN081MlRBZllOaXduMHUKMTRKdGtRaDVpbDkrdFZ0a0hiTHJ0SVVvRUp5WTEzOURmU252akZoZEZKcXpPRTVneXFZRTN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: my-release-controller-validation-webhook
      namespace: ingress-0.13.0.tgz
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUs5ckYwTE9ybXVpaEVqTnBpdHlmcE13RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3TmpJd01UUTFOekEzV2hjTgpNelF3TmpFNE1UUTFOekEzV2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMbDNiZi9DNlQyZFh2VUV5SklaTTV0YkNxVmcKMit3RWJqYlNDWTRCVXoyeWlVa3cwK2JZakZwY3BhQkp1VXdtaklTQ2VNR0hqWW52dzE4ZGcvUUJnUmNuQ1FYRwpYMUxOSno5dWRMbE5MSDU3YUt4Tk1KU3JMb09SOGRpZHV1WXc3OVBTL214TmhBVjdwb28rZzQzUWo2cUREbnJFCnRRMDNNVjF2YW0vQXllSDMzVW1tQzVFT3NiaDFUUS8xTks5N2o3S1hlOFBVM1BCanNIQ2I5YkdjbThua3YxRlcKNnJIbkRxYlh0RmZVclVzaTFXK28xTVZjK1REeTFGZTZVeGQ4MllJZU0zWVJ1VU9OQlk5ekNselJRc1loRlRRcApubFZ6c0xVMWF5elhldFo4MGx0UHViRFpzVWx4aWUvWFpxSmdFS2RkSDhDNEJFMjVaeTIrRW1oc09pOENBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUmlXTjRnWUZaK0RveFJyVWlmakwzUwpkSVBOTXpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWdqdkdHbkYvZWNVNnRrMlFZbzlwMmtHdURFcGxGQnd4CkNreDE5YWNHaU53UnZwV0tlL2w0eDNEU2hoVjQzRmdWMjVoZEExQjY4dkoxRXA3cmgrOURldW54M0pWMFdhdkcKRmNYM0Z2RTRBVEtUcmRucXcyWmVaVG5qZ3d3VHMzaEY1Z0pCVlZNbEhUeXo3aElkWDdkUFFvYU1HNFl0VVM3UQptMUVxVHRFZmlScUM1S2cxTmhYK0Y1eHZ0SW9rMkhlVE1NeGwyMVdJTVlUemoxRWEydDNoU2xZMFNXY0NTUkJqCm1xNkN1NlhMekNqNExocDJObFpBdWRDWVVrbDFpSWM2TGEyVVJ0RlFjd0NMUjVKcFhaN081MlRBZllOaXduMHUKMTRKdGtRaDVpbDkrdFZ0a0hiTHJ0SVVvRUp5WTEzOURmU252akZoZEZKcXpPRTVneXFZRTN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: my-release-controller-validation-webhook
      namespace: ingress-0.13.0.tgz
