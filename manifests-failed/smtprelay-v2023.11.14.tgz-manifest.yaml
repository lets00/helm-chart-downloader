---
# Source: smtprelay/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-smtprelay-config
  namespace: smtprelay-v2023.11.14.tgz
  labels:
    helm.sh/chart: smtprelay-v2023.11.14
    app.kubernetes.io/name: smtprelay
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  smtprelay.ini: |
    ; smtprelay configuration
    ;
    ; All config parameters can also be provided as environment
    ; variables in uppercase and the prefix "SMTPRELAY_".
    ; (eg. SMTPRELAY_LOGFILE, SMTPRELAY_LOG_FORMAT)

    ; Logfile (blank/default is stderr)
    ;logfile =

    ; Log format: default, plain (no timestamp), json
    ;log_format = default

    ; Log level: panic, fatal, error, warn, info, debug, trace
    ;log_level = info

    ; Hostname for this SMTP server

    ; Welcome message for clients
    ;welcome_msg = <hostname> ESMTP ready.
      
    ; STARTTLS and TLS are also supported but need a
    ; SSL certificate and key.
    listen = :8025 starttls://:587 tls://:465
    local_cert = /etc/smtprelay/pki/tls.crt
    local_key  = /etc/smtprelay/pki/tls.key

    ; Enforce encrypted connection on STARTTLS ports before
    ; accepting mails from client.
    ;local_forcetls = false

    ; Socket timeout for read operations
    ; Duration string as sequence of decimal numbers,
    ; each with optional fraction and a unit suffix.
    ; Valid time units are "ns", "us", "ms", "s", "m", "h".
    ;read_timeout = 60s

    ; Socket timeout for write operations
    ; Duration string as sequence of decimal numbers,
    ; each with optional fraction and a unit suffix.
    ; Valid time units are "ns", "us", "ms", "s", "m", "h".
    ;write_timeout = 60s

    ; Socket timeout for DATA command
    ; Duration string as sequence of decimal numbers,
    ; each with optional fraction and a unit suffix.
    ; Valid time units are "ns", "us", "ms", "s", "m", "h".
    ;data_timeout = 5m

    ; Max concurrent connections, use -1 to disable
    ;max_connections = 100

    ; Max message size in bytes
    ;max_message_size = 10240000

    ; Max RCPT TO calls for each envelope
    ;max_recipients = 100

    ; Networks that are allowed to send mails to us
    ; Defaults to localhost. If set to "", then any address is allowed.
    ;allowed_nets = 127.0.0.0/8 ::1/128
    allowed_nets =

    ; Regular expression for valid FROM EMail addresses
    ; If set to "", then any sender is permitted.
    ; Example: ^(.*)@localhost.localdomain$
    ;allowed_sender =

    ; Regular expression for valid TO EMail addresses
    ; If set to "", then any recipient is permitted.
    ; Example: ^(.*)@localhost.localdomain$
    ;allowed_recipients =

    ; File which contains username and password used for
    ; authentication before they can send mail.
    ; File format: username bcrypt-hash [email[,email[,...]]]
    ;   username: The SMTP auth username
    ;   bcrypt-hash: The bcrypt hash of the pasword (generate with "./hasher password")
    ;   email: Comma-separated list of allowed "from" addresses:
    ;          - If omitted, user can send from any address
    ;          - If @domain.com is given, user can send from any address @domain.com
    ;          - Otherwise, email address must match exactly (case-insensitive)
    ;          E.g. "app@example.com,@appsrv.example.com"
    ;allowed_users = users.txt

    ; Relay all mails to this SMTP servers.
    ; If not set, mails are discarded.
    ;
    ; Format:
    ;   protocol://[user[:password]@][netloc][:port][/remote_sender][?param1=value1&...]
    ;
    ;   protocol: smtp (unencrypted), smtps (TLS), starttls (STARTTLS)
    ;   user: Username for authentication
    ;   password: Password for authentication
    ;   remote_sender: Email address to use as FROM
    ;   params:
    ;     skipVerify: "true" or empty to prevent ssl verification of remote server's certificate
    ;     auth: "login" to use LOGIN authentication
    remotes = 

    ; Pipe messages to external command
    ;command = /usr/local/bin/script
---
# Source: smtprelay/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-smtprelay
  namespace: smtprelay-v2023.11.14.tgz
  labels:
    helm.sh/chart: smtprelay-v2023.11.14
    app.kubernetes.io/name: smtprelay
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8025
      targetPort: http
      protocol: TCP
      name: http
    - port: 8080
      targetPort: metrics
      protocol: TCP
      name: metrics
    - port: 465
      targetPort: tls
      protocol: TCP
      name: tls
    - port: 587
      targetPort: starttls
      protocol: TCP
      name: starttls
  selector:
    app.kubernetes.io/name: smtprelay
    app.kubernetes.io/instance: my-release
---
# Source: smtprelay/templates/controller.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-release-smtprelay
  namespace: smtprelay-v2023.11.14.tgz
  labels:
    helm.sh/chart: smtprelay-v2023.11.14
    app.kubernetes.io/name: smtprelay
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: smtprelay
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: smtprelay
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: smtprelay
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/appscode/smtprelay:v0.0.2"
          imagePullPolicy: IfNotPresent
          args:
          - -config
          - /etc/smtprelay/smtprelay.ini
          ports:
          - name: http
            containerPort: 8025
            protocol: TCP
            hostPort: 8025
          - name: metrics
            containerPort: 8080
            protocol: TCP
          - name: tls
            containerPort: 465
            protocol: TCP
            hostPort: 465
          - name: starttls
            containerPort: 587
            protocol: TCP
            hostPort: 587
          livenessProbe:
            httpGet:
              path: /
              port: metrics
          readinessProbe:
            httpGet:
              path: /
              port: metrics
          resources:
            {}
          volumeMounts:
          - name: config
            mountPath: /etc/smtprelay
            readOnly: true
      volumes:
      - name: config
        projected:
          sources:
          - secret:
              name: my-release-smtprelay-config
          - secret:
              name: my-release-smtprelay-cert
              items:
              - key: tls.crt
                path: pki/tls.crt
              - key: tls.key
                path: pki/tls.key
---
# Source: smtprelay/templates/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: my-release-smtprelay-cert
  namespace: smtprelay-v2023.11.14.tgz
spec:
  isCA: true
  secretName: my-release-smtprelay-cert
  # privateKey:
  #   algorithm: ECDSA
  #   size: 256
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: my-release-smtprelay-ca
  commonName: localhost
  dnsNames:
  - localhost
  - my-release-smtprelay
  - my-release-smtprelay.smtprelay-v2023.11.14.tgz.svc
  ipAddresses:
  - 127.0.0.1
---
# Source: smtprelay/templates/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: my-release-smtprelay-ca
  namespace: smtprelay-v2023.11.14.tgz
spec:
  selfSigned: {}
