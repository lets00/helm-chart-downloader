---
# Source: azure-devops-agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-azure-devops-agent
  labels:
    helm.sh/chart: azure-devops-agent-0.1.4
    app.kubernetes.io/name: azure-devops-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: azure-devops-agent/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-azure-devops-agent
  labels:
    helm.sh/chart: azure-devops-agent-0.1.4
    app.kubernetes.io/name: azure-devops-agent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: azure-devops-agent
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: azure-devops-agent
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-azure-devops-agent
      securityContext:
        {}
      containers:
        - name: azure-devops-agent
          securityContext:
            {}
          image: "mcr.microsoft.com/azure-pipelines/vsts-agent:latest"
          imagePullPolicy: IfNotPresent
          env:
          - name: VSTS_ACCOUNT
            valueFrom:
              secretKeyRef:
                name: 
                key: account
          - name: VSTS_TOKEN
            valueFrom:
              secretKeyRef:
                name: 
                key: token
          - name: VSTS_AGENT
            value: $(hostname)
          - name: VSTS_WORK
            value: _work
          resources:
            {}
          volumeMounts:
            
      volumes:
        
      nodeSelector:
        kubernetes.io/os: linux
