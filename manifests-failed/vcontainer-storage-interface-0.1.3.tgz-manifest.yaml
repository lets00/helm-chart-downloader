---
# Source: vcontainer-storage-interface/templates/controllerplugin-rbac.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: vcontainer-csi-controller-sa
  namespace: vcontainer-storage-interface-0.1.3.tgz
---
# Source: vcontainer-storage-interface/templates/nodeplugin-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vcontainer-csi-node-sa
  namespace: vcontainer-storage-interface-0.1.3.tgz
---
# Source: vcontainer-storage-interface/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: vcontainer-csi-config-secret
  namespace: vcontainer-storage-interface-0.1.3.tgz
type: Opaque
stringData:
  vcontainer-csi-config.conf: |-
    [Global]
    identity-url=https://iamapis.vngcloud.vn/accounts-api
    vserver-url=https://hcm-3.api.vngcloud.vn/vserver/vserver-gateway
    client-id=<PUT_YOUR_CLIENT_ID>
    client-secret=<PUT_YOUR_CLIENT_SECRET>
---
# Source: vcontainer-storage-interface/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: sc-nvme-5000-delete
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: csi.vngcloud.vn
reclaimPolicy: Delete
parameters:
  type: vtype-7a7a8610-34f5-11ee-be56-0242ac120002
allowVolumeExpansion: true
---
# Source: vcontainer-storage-interface/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: sc-ssd-200-retain
provisioner: csi.vngcloud.vn
reclaimPolicy: Retain
parameters:
  type: vtype-bacd68a4-8758-4fb6-a739-b047665e05d5
allowVolumeExpansion: true
---
# Source: vcontainer-storage-interface/templates/controllerplugin-rbac.yaml
########################################################################################### ATTACHER
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vcontainer-csi-attacher-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: vcontainer-storage-interface/templates/controllerplugin-rbac.yaml
######################################################################################## PROVISIONER
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vcontainer-csi-provisioner-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: vcontainer-storage-interface/templates/controllerplugin-rbac.yaml
############################################################################################ RESIZER
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vcontainer-csi-resizer-role
rules:
  # The following rule should be uncommented for plugins that require secrets
  # for provisioning.
  # - apiGroups: [""]
  #   resources: ["secrets"]
  #   verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: vcontainer-storage-interface/templates/nodeplugin-rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vcontainer-csi-nodeplugin-role
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
# Source: vcontainer-storage-interface/templates/controllerplugin-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vcontainer-csi-attacher-binding
subjects:
  - kind: ServiceAccount
    name: vcontainer-csi-controller-sa
    namespace: vcontainer-storage-interface-0.1.3.tgz
roleRef:
  kind: ClusterRole
  name: vcontainer-csi-attacher-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: vcontainer-storage-interface/templates/controllerplugin-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vcontainer-csi-provisioner-binding
subjects:
  - kind: ServiceAccount
    name: vcontainer-csi-controller-sa
    namespace: vcontainer-storage-interface-0.1.3.tgz
roleRef:
  kind: ClusterRole
  name: vcontainer-csi-provisioner-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: vcontainer-storage-interface/templates/controllerplugin-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vcontainer-csi-resizer-binding
subjects:
  - kind: ServiceAccount
    name: vcontainer-csi-controller-sa
    namespace: vcontainer-storage-interface-0.1.3.tgz
roleRef:
  kind: ClusterRole
  name: vcontainer-csi-resizer-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: vcontainer-storage-interface/templates/nodeplugin-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vcontainer-csi-nodeplugin-binding
subjects:
  - kind: ServiceAccount
    name: vcontainer-csi-node-sa
    namespace: vcontainer-storage-interface-0.1.3.tgz
roleRef:
  kind: ClusterRole
  name: vcontainer-csi-nodeplugin-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: vcontainer-storage-interface/templates/nodeplugin-daemonset.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: vcontainer-storage-interface-nodeplugin
  namespace: vcontainer-storage-interface-0.1.3.tgz
  labels:
    component: nodeplugin
    app: vcontainer-storage-interface
    release: my-release
    chart: vcontainer-storage-interface-0.1.3
    heritage: Helm
  annotations:
spec:
  selector:
    matchLabels:
      component: nodeplugin
      app: vcontainer-storage-interface
      release: my-release
  template:
    metadata:
      labels:
        component: nodeplugin
        app: vcontainer-storage-interface
        release: my-release
        chart: vcontainer-storage-interface-0.1.3
        heritage: Helm
      annotations:
    spec:
      serviceAccount: vcontainer-csi-node-sa
      hostNetwork: true
      containers:
        - name: node-driver-registrar
          securityContext:
            {}
          image: "vcr.vngcloud.vn/public/csi-node-driver-registrar:v2.6.2"
          imagePullPolicy: IfNotPresent
          args:
            - "-v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/csi.vngcloud.vn/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          resources: 
            {}
        - name: liveness-probe
          securityContext:
            {}
          image: "vcr.vngcloud.vn/public/csi-livenessprobe:v2.9.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-v=5"
            - --csi-address=/csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          resources: 
            {}
        - name: vcontainer-storage-interface
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: "vcr.vngcloud.vn/public/vcontainer-storage-interface:v0.1.3"
          imagePullPolicy: IfNotPresent
          args:
            - /bin/vcontainer-storage-interface
            - "-v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--vcontainer-config=$(VCONTAINER_CONFIG)"
          env:
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
            - name: VCONTAINER_CONFIG
              value: /etc/config/vcontainer-csi-config.conf
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          # The probe
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 60
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: pods-probe-dir
              mountPath: /dev
              mountPropagation: "HostToContainer"
            - mountPath: /etc/kubernetes/ca-bundle.crt
              name: cacert
              readOnly: true
            - mountPath: /etc/config
              name: vcontainer-config
              readOnly: true
          resources: 
            {}
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.vngcloud.vn
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        # - name: pods-cloud-data
        #   hostPath:
        #     path: /var/lib/cloud/data
        #     type: Directory
        - name: pods-probe-dir
          hostPath:
            path: /dev
            type: Directory
        - name: vcontainer-config
          secret:
            secretName: vcontainer-csi-config-secret
        - hostPath:
            path: /etc/kubernetes/ca-bundle.crt
            type: File
          name: cacert
      affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: DoesNotExist
      nodeSelector: 
        {}
      tolerations: 
        - operator: Exists
---
# Source: vcontainer-storage-interface/templates/controllerplugin-deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: vcontainer-storage-interface-controllerplugin
  namespace: vcontainer-storage-interface-0.1.3.tgz
  labels:
    component: controllerplugin
    app: vcontainer-storage-interface
    release: my-release
    chart: vcontainer-storage-interface-0.1.3
    heritage: Helm
  annotations:
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      component: controllerplugin
      app: vcontainer-storage-interface
      release: my-release
  template:
    metadata:
      labels:
        component: controllerplugin
        app: vcontainer-storage-interface
        release: my-release
        chart: vcontainer-storage-interface-0.1.3
        heritage: Helm
      annotations:
    spec:
      serviceAccount: vcontainer-csi-controller-sa
      securityContext:
        {}
      containers:
        - name: csi-attacher
          securityContext:
            {}
          image: "vcr.vngcloud.vn/public/csi-attacher:v4.4.2"
          imagePullPolicy: IfNotPresent
          args:
            - "-v=5"
            - "--csi-address=$(ADDRESS)"
            - "--timeout=3m"
            - "--leader-election=true"
            - "--default-fstype=ext4"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources: 
            {}
        - name: csi-provisioner
          securityContext:
            {}
          image: "vcr.vngcloud.vn/public/csi-provisioner:v3.6.2"
          imagePullPolicy: IfNotPresent
          args:
            - "-v=5"
            - "--csi-address=$(ADDRESS)"
            - "--timeout=3m"
            - "--leader-election=true"
            - "--default-fstype=ext4"
            - "--feature-gates=Topology=true"
            - "--extra-create-metadata"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources: 
            {}
        - name: csi-resizer
          securityContext:
            {}
          image: "vcr.vngcloud.vn/public/csi-resizer:v1.8.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-v=5"
            - "--csi-address=$(ADDRESS)"
            - "--timeout=3m"
            - "--handle-volume-inuse-error=false"
            - "--leader-election=true"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources: 
            {}
        - name: liveness-probe
          securityContext:
            {}
          image: "vcr.vngcloud.vn/public/csi-livenessprobe:v2.9.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
          resources: 
            {}
        - name: vcontainer-storage-interface
          securityContext:
            {}
          image: "vcr.vngcloud.vn/public/vcontainer-storage-interface:v0.1.3"
          imagePullPolicy: IfNotPresent
          args:
            - /bin/vcontainer-storage-interface
            - "-v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--vcontainer-config=$(VCONTAINER_CONFIG)"
          env:
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
            - name: VCONTAINER_CONFIG
              value: /etc/config/vcontainer-csi-config.conf
            - name: CLUSTER_NAME
              value: "kubernetes"
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          # The probe
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 60
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - mountPath: /etc/kubernetes/ca-bundle.crt
              name: cacert
              readOnly: true
            - mountPath: /etc/config
              name: vcontainer-config
              readOnly: true
          resources: 
            {}
      volumes:
        - name: socket-dir
          emptyDir:
        - name: vcontainer-config
          secret:
            secretName: vcontainer-csi-config-secret
        - hostPath:
            path: /etc/kubernetes/ca-bundle.crt
            type: File
          name: cacert
      affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: DoesNotExist
      nodeSelector: 
        {}
      tolerations: 
        []
---
# Source: vcontainer-storage-interface/templates/vcontainer-csi-driver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.vngcloud.vn
spec:
  attachRequired: true
  podInfoOnMount: true
  volumeLifecycleModes:
  - Persistent
