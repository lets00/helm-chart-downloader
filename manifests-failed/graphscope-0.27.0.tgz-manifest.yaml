---
# Source: graphscope/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: coordinator-my-release
  namespace: graphscope-0.27.0.tgz
  labels:
        app.kubernetes.io/name: graphscope
        app.kubernetes.io/instance: my-release
        graphscope.components: coordinator
        helm.sh/chart: graphscope-0.27.0
        graphscope.coordinator.name: coordinator-my-release
        app.kubernetes.io/version: "0.27.0"
        app.kubernetes.io/managed-by: Helm
data:
  start.sh: |-
    #!/bin/bash
    python3 -m gscoordinator --config-file /home/graphscope/config.yaml
  coordinator.config: |-
    launcher_type: k8s
    coordinator:
      deployment_name: coordinator-my-release
      monitor: false
      monitor_port: 9090
      operator_mode: false
      service_port: 59001
    kubernetes_launcher:
      dataset:
        enable: false
        proxy: bnVsbA==
      delete_namespace: false
      engine:
        enabled_engines: analytical,interactive
        gae_resource: 
          requests:
            cpu: 1
            memory: 1Gi
        gie_executor_resource: 
          requests:
            cpu: 1
            memory: 1Gi
        gie_frontend_resource: 
          requests:
            cpu: 0.5
            memory: 1Gi
        gle_resource: 
          requests:
            cpu: 0.2
            memory: 1Gi
      image:
        pull_policy: IfNotPresent
        pull_secrets: 
          []
        registry: registry.cn-hongkong.aliyuncs.com
        repository: graphscope
        tag: 0.27.0
      namespace: graphscope-0.27.0.tgz
      service_type: NodePort
      waiting_for_delete: false
    session:
      dangling_timeout_seconds: -1
      execution_mode: eager
      instance_id: my-release
      log_level: INFO
      num_workers: 2
      timeout_seconds: 1200
    vineyard:
      deployment_name: 
      image: vineyardcloudnative/vineyardd:latest
      resource: 
          limits:
            cpu: 0.5
            memory: 512Mi
          requests:
            cpu: 0.5
            memory: 512Mi
      rpc_port: 9600
---
# Source: graphscope/templates/role_and_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-role
  namespace: graphscope-0.27.0.tgz
rules:
- apiGroups: ["apps", "extensions", ""]
  resources: ["configmaps", "deployments", "deployments/status", "statefulsets", "statefulsets/status", "endpoints", "events", "pods", "pods/log", "pods/exec", "pods/status", "services", "replicasets"]
  verbs: ["*"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["get", "patch"]
---
# Source: graphscope/templates/role_and_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-role-binding
  namespace: graphscope-0.27.0.tgz
subjects:
- kind: ServiceAccount
  name: default
  namespace: graphscope-0.27.0.tgz
roleRef:
  kind: Role
  name: my-release-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: graphscope/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: coordinator-service-my-release
  namespace: graphscope-0.27.0.tgz
  annotations:
    "service.beta.kubernetes.io/alibaba-cloud-loadbalancer-health-check-type": "tcp"
    "service.beta.kubernetes.io/alibaba-cloud-loadbalancer-health-check-connect-timeout": "8"
    "service.beta.kubernetes.io/alibaba-cloud-loadbalancer-healthy-threshold": "2"
    "service.beta.kubernetes.io/alibaba-cloud-loadbalancer-unhealthy-threshold": "2"
    "service.beta.kubernetes.io/alibaba-cloud-loadbalancer-health-check-interval": "1"
  labels:
    app.kubernetes.io/name: graphscope
    app.kubernetes.io/instance: my-release
    graphscope.components: coordinator
    helm.sh/chart: graphscope-0.27.0
    graphscope.coordinator.name: coordinator-my-release
    app.kubernetes.io/version: "0.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: graphscope
    app.kubernetes.io/instance: my-release
    graphscope.components: coordinator
    helm.sh/chart: graphscope-0.27.0
    graphscope.coordinator.name: coordinator-my-release
    app.kubernetes.io/version: "0.27.0"
    app.kubernetes.io/managed-by: Helm
  ports:
    - port: 59001
      targetPort: 59001
      protocol: TCP
      name: rpc
    - port: 8888
      nodePort: 30080
      name: http
---
# Source: graphscope/templates/coordinator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coordinator-my-release
  namespace: graphscope-0.27.0.tgz
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: graphscope
      app.kubernetes.io/instance: my-release
      graphscope.components: coordinator
      helm.sh/chart: graphscope-0.27.0
      graphscope.coordinator.name: coordinator-my-release
      app.kubernetes.io/version: "0.27.0"
      app.kubernetes.io/managed-by: Helm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: graphscope
        app.kubernetes.io/instance: my-release
        graphscope.components: coordinator
        helm.sh/chart: graphscope-0.27.0
        graphscope.coordinator.name: coordinator-my-release
        app.kubernetes.io/version: "0.27.0"
        app.kubernetes.io/managed-by: Helm
      annotations:
        kubectl.kubernetes.io/default-container: coordinator
    spec:      
      containers:
      - name: coordinator
        image: registry.cn-hongkong.aliyuncs.com/graphscope/coordinator:0.27.0
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 1
            memory: 512Mi
          requests:
            cpu: 0.2
            memory: 256Mi
        env:
          - name: PYTHONUNBUFFERED
            value: "TRUE"
        ports:
          - containerPort: 59001
            name: coordinator
        readinessProbe:
          initialDelaySeconds: 0
          periodSeconds: 1
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 20
          tcpSocket:
            port: 59001
        args:
          - /home/graphscope/start.sh
        volumeMounts:
          - name: config
            mountPath: /home/graphscope/config.yaml
            subPath: coordinator.config
          - name: config
            mountPath: /home/graphscope/start.sh
            subPath: start.sh
      - name: jupyter
        image:  registry.cn-hongkong.aliyuncs.com/graphscope/jupyter:0.27.0
        imagePullPolicy: 
        resources:
          limits:
            cpu: 1
            memory: 512Mi
          requests:
            cpu: 0.5
            memory: 256Mi
        ports:
          - containerPort: 8888
            name: jupyter
      volumes:
        - name: config
          configMap:
            name: coordinator-my-release
            defaultMode: 0755
---
# Source: graphscope/templates/test/test-rpc.yaml
apiVersion: v1
kind: Pod
metadata:
  name: test-rpc-service-my-release
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl:7.65.3
      command: ['sh']
      args: ['-c', 'while ! curl coordinator-service-my-release.graphscope-0.27.0.tgz:59001 --output -; do sleep 1 && echo -n .; done']
  restartPolicy: Never
