---
# Source: rainloop/templates/persistentvolume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    helm.sh/chart: rainloop-0.3.0
    app.kubernetes.io/name: rainloop
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
  name: my-release-rainloop
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 10Gi
  mountOptions:
  - hard
  - rw
  nfs:
    path: "/"
    server: 
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs
  volumeMode: Filesystem
---
# Source: rainloop/templates/persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    helm.sh/chart: rainloop-0.3.0
    app.kubernetes.io/name: rainloop
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
  name: my-release-rainloop
  namespace: "rainloop-0.3.0.tgz"
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  selector:
    matchLabels:
      app.kubernetes.io/name: rainloop
      app.kubernetes.io/instance: my-release
  storageClassName: nfs
---
# Source: rainloop/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-rainloop
  namespace: "rainloop-0.3.0.tgz"
  labels:
    helm.sh/chart: rainloop-0.3.0
    app.kubernetes.io/name: rainloop
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    traefik.ingress.kubernetes.io/affinity: "true"
    traefik.ingress.kubernetes.io/session-cookie-name: "sticky"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: rainloop
    app.kubernetes.io/instance: my-release
---
# Source: rainloop/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-rainloop
  namespace: "rainloop-0.3.0.tgz"
  labels:
    helm.sh/chart: rainloop-0.3.0
    app.kubernetes.io/name: rainloop
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rainloop
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rainloop
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      containers:
        - name: rainloop
          securityContext:
            runAsGroup: 1080
            runAsNonRoot: true
            runAsUser: 1080
          image: "nerzhul/rainloop-arm64:1.17.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
          volumeMounts:
            - name: rainloop-data
              mountPath: /var/www/html/data/
          resources:
            {}
      volumes:
        - name: rainloop-data
          persistentVolumeClaim:
            claimName: my-release-rainloop
---
# Source: rainloop/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-rainloop
  namespace: "rainloop-0.3.0.tgz"
  labels:
    helm.sh/chart: rainloop-0.3.0
    app.kubernetes.io/name: rainloop
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-release-rainloop
                port:
                  number: 80
---
# Source: rainloop/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-rainloop-test-connection"
  labels:
    helm.sh/chart: rainloop-0.3.0
    app.kubernetes.io/name: rainloop
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.17.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-rainloop:80']
  restartPolicy: Never
