---
# Source: identity-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-identity-server
  namespace: identity-server-v0.1.1.tgz
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: identity-server/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-identity-server-apiserver-cert
  namespace: identity-server-v0.1.1.tgz
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lRYnVZVGVOL1VqOVcxMHpYSDJVZnB6akFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTURWYUZ3MHpOREEyTVRneE5EVTNNRFZhTUNVeApJekFoQmdOVkJBTVRHbTE1TFhKbGJHVmhjMlV0YVdSbGJuUnBkSGt0YzJWeWRtVnlNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEzK3ZvYmY1T2RoaTRUTkJleU51dnZ3TGZSb0d2YjlYZTV6djEKVnR2VENKZGYzQnVPdnpMcEtzYlVzZjloeEVHREo2WXVxZWhSWVMyVGpTelEwSUtUMlRsU2J2aXFHTEhqT2hoQwoxMFNrSjk4ZFRmS3F6LzUveEx5anpPaHVJREZCL2gxSStVaWU2akVlZHU0UHlxTkQvOW1VVHZneW9FN2EvdjdLCmRDS3dLemp2Z1pMN0hCRGVIWmYrNzAzS0JhTk5GRkV2T29zYzNNMGMyeUU5emhDdkI0c1YyT002U1dmQWJCMU8KZnBDNEl1MHNUZzJ0SjRLcnpBd05IZWQrdDJFL2MrQk82dWJoZWxkVHlyQWM0WUUzVDNVWUw0TVgzR2QxOVBlQQpiMkR6Ylo1aHlvcEhFUVBCRlNXejc0Rzc4a3BvQzRmQ1RSd1NOOWxCV2RiS2duZFdKUUlEQVFBQm80SGVNSUhiCk1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXcKREFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJaVndHOW83V2xTTDZZU01JNUplZmlicER2VlRCNwpCZ05WSFJFRWREQnlnalZ0ZVMxeVpXeGxZWE5sTFdsa1pXNTBhWFI1TFhObGNuWmxjaTVwWkdWdWRHbDBlUzF6ClpYSjJaWEl0ZGpBdU1TNHhMblJuZW9JNWJYa3RjbVZzWldGelpTMXBaR1Z1ZEdsMGVTMXpaWEoyWlhJdWFXUmwKYm5ScGRIa3RjMlZ5ZG1WeUxYWXdMakV1TVM1MFozb3VjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBMQpQNmkwdUZocUkvN29lWkNLTTVWelZoa21tWmdGOEpKOEdLejlEN3UzVGlyTFFodGdacWp1MTRQYnB0RGdEMER4Cm9FKzZjaVFSb0NZK1cvTmF3eklkVm9rbUwySitjdHluS2ZZbW9nalNVTkJrMkJ6S2dxUHpLVFY3VWFuakRPdjQKRDR1c3RSOXFYQVVHZEJKOTNNaUhYT3pPUWxNWXlia0Yrb2lTT2N2dFE3RHR4WldmeTFWUHoxTHNJblpPZkV0dgpQZWIvMGhpbUlvZTZlVE9XTWhYSm1WZUgvSFYxQWNCZkdDcGt6MHdjQm53ckZycy9ORlNESGtlMkRqT0JiTGVxCjN1dDl6MkFBT1NnVGl3OElvWWZKREZPRnJtYWhCaGJRNVpMZVIzODdvKzFDVGdTZ0RFRjFlSlk5Zkh0NG1CN1MKbmpDZ1Y1NmdKT01kNWVMSTRmZ1EKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMyt2b2JmNU9kaGk0VE5CZXlOdXZ2d0xmUm9HdmI5WGU1enYxVnR2VENKZGYzQnVPCnZ6THBLc2JVc2Y5aHhFR0RKNll1cWVoUllTMlRqU3pRMElLVDJUbFNidmlxR0xIak9oaEMxMFNrSjk4ZFRmS3EKei81L3hMeWp6T2h1SURGQi9oMUkrVWllNmpFZWR1NFB5cU5ELzltVVR2Z3lvRTdhL3Y3S2RDS3dLemp2Z1pMNwpIQkRlSFpmKzcwM0tCYU5ORkZFdk9vc2MzTTBjMnlFOXpoQ3ZCNHNWMk9NNlNXZkFiQjFPZnBDNEl1MHNUZzJ0Cko0S3J6QXdOSGVkK3QyRS9jK0JPNnViaGVsZFR5ckFjNFlFM1QzVVlMNE1YM0dkMTlQZUFiMkR6Ylo1aHlvcEgKRVFQQkZTV3o3NEc3OGtwb0M0ZkNUUndTTjlsQldkYktnbmRXSlFJREFRQUJBb0lCQVFDL05waDR0UjBUUS9DOQp4NEhwUzVBOE1KdXhmYlR1YjFlMVprSVBOaEJ6MmJBR0taSXdPNjFZMWdsekpuMjZOYWRtQ0ViNDJHWUY4Z0Y2CklMY0FGMEZoMGMxTzdoRnluUlZJMnNiWlJNaFpNL0cyU204S3htMGM5Mmw0NVZLRk13c0RrTVpyK1ZPYThPN3UKNkVPYjZ1ZDZaN1o1NlFCeVhHUXVOQzEyRnRrUlRpZkY2LzcyZG9ENDdRazNwcVZNTFdpQ3lPNVNKQkxYSEk3UAppYU55YmhhcERIekp3M21lVnVjVVhEMHUvMW9iSWdydWZrbXl0eGNSVVg5bVVzeEozVElsQVNyZTdtczhyaG5VCmI3M2F1akhZd3d1YW9YTllFOWJHME05NUpQQ05FcjV3THB1eWRpdy9kRSs5ZFRQdVlMM0ROSHgya0c1bG9OVG8KZlhuTTRoK0JBb0dCQVAxeE5EVUt5Ky9mcDRCZGFHNW9McmxFdGVjZ1B4KzlXMGs3eUhmd3htTE50MlpReUgxVwoyRHc4bkNOOTV4Qm0rZ0oxdVMzZzRuV0VVbkxpY29NK0I4Qm05NFp6YjZuM3hyQlpiVExPb2VoTW40amF2S08yCmNHVU55aTdDL0gvaHFGcGlDRE0vL2oycnl5cjJJcFZlalhsMjY0RnozdXhRUkFMNHc2NzlKVHpaQW9HQkFPSXUKYnh2N0xYQnpERDNyK1p2YzVnNGc4MWVrT3dYRFVkREpNT2hJR3BkYitWQ3ZmMm5qRDIxeDl0Qk9OSGtlZjlmagpZRXhVeENQZS9OZW9YeTJXZU81cXgweWNUNWZHOUhDUVYzT3lNQzVNeWQyNmFiSGIwOVNRYVlzNmM3MkRvNUIvCmNzZ0JVWDJIMWE1R1NqcjJZR3RWUEdUMEw5d1ZTeW4wQXNIamtrUXRBb0dCQUpnVWUvMXdNeHdIbXgxOTc1S0EKMWJpNnNHUzJodXBtMkFaRDUzR0JlNm9DUTVFVDNKckpxQXZOV3V3NU9wUXZGc3F2RmFXZ0VvUHVHUU56T3IvaQpVd2h6UVFqZThCeVA0QndtTFU2Vmk3WTNkR3ZNeGZGL0lrYWhWYmRscmRxVzhFejhFbXVlZE5OUTZTTW9lMndpClJzYWlRNE4wb2tvdmlBQTRna1BaQjZWUkFvR0JBSmVMc3lpVllEbXk3Q1hsSVVhY2VJeEk2YUwwU0JPeGJmVXQKaUpacUVWOE80ZnA4ekNzZlZ1dm02dzloQnVtTVZPNUt5Ky80Nzc1MUh3WkVLeGw1YzZlVFpkdmY4N2huTnNyZworNmRxWWJ2eitXR1dFRkY2VC9GaG5VWUxNUmR1eHozL0Z1SUplQmRhMXdKQTJHV3ZSS1ZGNUFSa1ZGanE3NFM1Cm1NdGVkbGMxQW9HQkFMcEJIcjlFT0gvcFBPUEVPVnRySTVzYWRRQVZRS0FDQnc1UVMyNWFzR3IrdStaMTBWNXUKbkZwMEdsa1R6VE9LYi9saXYyV2dKSm4wcTViaEdpM2xxa1pVTUY4OG5FQU5QSW9WdGhURzhwOGlHMkJpaDIwRwo2eUxOaDlZQzFPemMzNFUxT1RlUVIwN2V2MHVGUGRnb2VSREZ5U0FDQU9iUGRmZGdNSVJtV0ZlWQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: identity-server/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-identity-server
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - identity.kubeshield.io
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["list"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["get", "list", "watch"]
---
# Source: identity-server/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-identity-server-apiserver-auth-delegator
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-identity-server
  namespace: identity-server-v0.1.1.tgz
---
# Source: identity-server/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-identity-server
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-identity-server
subjects:
- kind: ServiceAccount
  name: my-release-identity-server
  namespace: identity-server-v0.1.1.tgz
---
# Source: identity-server/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-identity-server-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-identity-server
  namespace: identity-server-v0.1.1.tgz
---
# Source: identity-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-identity-server
  namespace: identity-server-v0.1.1.tgz
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
---
# Source: identity-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-identity-server
  namespace: identity-server-v0.1.1.tgz
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: identity-server
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: identity-server
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: e0fbac7787968d5254408644cd8d0ad57748dd9d9555f71e4b3cb08d3d03a3ab
    spec:
      serviceAccountName: my-release-identity-server
      containers:
      - name: operator
        securityContext:
          {}
        image: kubeshield/identity-server:v0.1.1
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        ports:
        - containerPort: 8443
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-identity-server-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
---
# Source: identity-server/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.identity.kubeshield.io
  labels:
    helm.sh/chart: identity-server-v0.1.1
    app.kubernetes.io/name: identity-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  group: identity.kubeshield.io
  version: v1alpha1
  service:
    namespace: identity-server-v0.1.1.tgz
    name: my-release-identity-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRSm95WE1oYVRjVVZyKzh2c2ZDTDJNekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTURSYUZ3MHpOREEyTVRneE5EVTNNRFJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwdmhlCktWeW1Qa3oreUduQTlVdDRJZUtIc0FJM0N1MStnMTVINXB1OWlTVmFkdDNiY2N5YXJYN080QnJkb1BPaG5hMEcKMEk2NVljS1J1QU1ITnNyazZGenlUSXdVaHZWOE9jQ2MyWkhNdmM3czlqbkVjUnYwNEJ4S3kyZEJKbUd3M01xYwpIbnUyN2ZmQkN6QWVnZUoyeFRleUM4RldkTVgya3E5ZHM0QWpqMGlnRnNZZ0dhVGVkc2pWVHVIM0gxUjRvZWlzCm1DYzlURzNqZWJ3YlF3MURxNmkwZm96UXpYbWpCUFpRSk8wc3JJcVpmVS9GTlFhS01tZ002MXJWaVZVbjdEYzIKTFEyWDljNEo3MDdyT0JLZkdhSTVvbElpeisrNTM2RHhoN1YzZ25XRTBTYlNJVTFyU1RiUkNTQ2tVVU9KUFArRgp6NFdsbVZBMi9qUThjSDRyR3dJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkZsWEFiMmp0YVZJdnBoSXdqa2w1K0p1a085Vk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ3loY05LNVZHbApheHVwOFpzSnNhU0xEUVVBWkdHNlN2b0tZSjJOS1pIWXg3YmtiZGFCU2ZueUJjZGVUTlFoc3czV0JjQm1rT3ZjCjQrZzJTb3hVTVNZYkZKSW44MTNTYWUwNFIwcFBCNjlqbG5rakY3U2RGQmJrTytjNkZqUUR5eFpVc0Qwb2djMm8KOWNJdkdzR1IwZGdNdTFQQ3hXcG82bVR4YUtvS3MvaVEzeWJjMW5sZ2s5bXpoQlhVbFpaejRqbXk5emlZOG44OQpUS1I3d0Q5b2VmbkV2V2ZrWDZvMXhrNFV4VVYyM0V1TUtaNUszd2owOGQ0OG9qOENYd1RqdTlLckw1T1VyUXlMCmQyVVNQL1J6aVMrQ3NqZjFHWDU0am44WEd4Z0RaMzQreE9BamJZNHZKeWRDY3RNSUUrVjNhSFlPVjZQaVhmWm8KMDIvRWZxak4rUitLCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: identity-server/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeshield:identity:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - identity.kubeshield.io
  resources:
  - whoamis
  verbs: ["create"]
