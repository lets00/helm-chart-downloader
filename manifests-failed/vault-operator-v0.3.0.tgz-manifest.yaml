---
# Source: vault-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-vault-operator
  namespace: vault-operator-v0.3.0.tgz
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: vault-operator/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-vault-operator-apiserver-cert
  namespace: vault-operator-v0.3.0.tgz
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsakNDQW42Z0F3SUJBZ0lRTUJiMDVIZnhuUDhkR1Z0OWMwN3NMekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFU1TURKYUZ3MHpOREEyTVRneE5EVTVNREphTUNReApJakFnQmdOVkJBTVRHVzE1TFhKbGJHVmhjMlV0ZG1GMWJIUXRiM0JsY21GMGIzSXdnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3BVZDIxNFI2b3czQjdaMXhaeEsyOS9EY0ZtR2VPR1BhRzB3UmEKQ0pqYkdodUpUYWo4eVVOTU9wSnlLeHpBU2V2QUZJb1k5bER5YW1idVo4ZkVtU3Y0d1hqSzJsYkJsTHlidU5yOQorcjlVNHFSQ0psWmQ5Q2N4b1Yzd1lnQXBzaTZqM3lEM3IxeUVXVjk4SHdQSW52Q0VvbTg4cFRsVWNPbGFQb1pVCnNVcFo0a1NDamJmL2doUFl4b0MwOWNUUVprOTZiNHRqQklMK01yT29UeHNyM2dwcStQYzVKeXhjQm5uY0dzU0cKcWN0aWtkcXl4S0oyK3BET3ZycktqVWFrWG5hM1lTdFduaEpFeFU0VnNrbWNsc0tlamRoY3NqNFo4WUxrNFhiTwpoaEh6OG41MWNIWndySHM0aTI3empMYmN0Y1dvbDNzZmJJclYvZU96YUIxanZ4TTlBZ01CQUFHamdkb3dnZGN3CkRnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU0KQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRHp5cFFBUytNQW83WU9rYUhSR2FtMStmZExLTUhjRwpBMVVkRVFSd01HNkNNMjE1TFhKbGJHVmhjMlV0ZG1GMWJIUXRiM0JsY21GMGIzSXVkbUYxYkhRdGIzQmxjbUYwCmIzSXRkakF1TXk0d0xuUm5lb0kzYlhrdGNtVnNaV0Z6WlMxMllYVnNkQzF2Y0dWeVlYUnZjaTUyWVhWc2RDMXYKY0dWeVlYUnZjaTEyTUM0ekxqQXVkR2Q2TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFiZHZyV0k3NgpzQXVtSW5ab2FmbVNoRTlKVmVsTEwzNG1KMUNlV1R2Q1ZsUGxDZGFDbEgzanNoNEhRZkVndXplanRGRVovMlAxCmxWczFBN1EveDRJUXRGV2ZUT3VhZXlyUkI0R1Qrc0RqNVlGTDY0SGlIcW5tU01EbWRBaGk3THA2RklzUDIxZ2sKT2YxNW03SGFoenRYTENtNy9yVy9qS1o4dnJJRERvMmc3TDJ3K1FLTVZUZjdmd3g1YXFtbGdpekRjQ2ROYjB6NQpFV3pIWElJd2l3WVRRTmxkc2xBc0tOdjdMSVdNS2VQcTVDZzUvSHFobjNuQlpGY0hjUmZwQkpsTUZBLzBKcEtvClV0UGNqL0c0N3lBWW4xRjhOdkZsTGxjSSt4T2tVbllhQTQ5N0tNYWpSbys4RlJvVThSTm9LUkFQa3VJNnZ2WkkKemJ4WDQva3FQNTRnWFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcVZIZHRlRWVxTU53ZTJkY1djU3R2ZnczQlpobmpoajJodE1FV2dpWTJ4b2JpVTJvCi9NbERURHFTY2lzY3dFbnJ3QlNLR1BaUThtcG03bWZIeEprcitNRjR5dHBXd1pTOG03amEvZnEvVk9La1FpWlcKWGZRbk1hRmQ4R0lBS2JJdW85OGc5NjljaEZsZmZCOER5Sjd3aEtKdlBLVTVWSERwV2o2R1ZMRktXZUpFZ28yMwovNElUMk1hQXRQWEUwR1pQZW0rTFl3U0Mvakt6cUU4Yks5NEthdmozT1Njc1hBWjUzQnJFaHFuTFlwSGFzc1NpCmR2cVF6cjY2eW8xR3BGNTJ0MkVyVnA0U1JNVk9GYkpKbkpiQ25vM1lYTEkrR2ZHQzVPRjJ6b1lSOC9KK2RYQjIKY0t4N09JdHU4NHkyM0xYRnFKZDdIMnlLMWYzanMyZ2RZNzhUUFFJREFRQUJBb0lCQVFDTllqTEQ0TXI5R05VZgo5bHNEQ2x3WnZEVWxrdkZGa2txb29pT01Hb21veXRBYmdxR05FM0lDZ1JZd0J4Zm02TkxXZlZBakwrcS93V0ZaCnlZYmgveFRjanBFU3NlYW5sazgzcU5BVUxBRUFISkFVUEhiNTFSbTFNNDJCWUJQS3ZXSjhxNkNYc2ZLTEFTWGUKT3ZlcDJpMzBVcjZYNFU5UjEwYkRlRm9xOWkramhSUVVsTTNuOWlESlZBZE05NThIcFVpcmpSdkxFd1JQNFVCOQoreTlKd3dqT3BHTHZyTjc4K1VyWkxnV2hCMmVva1IvU0xxS3pQWXI2UFdmb0hrZ1JQTFhZWUQwYlRKQjlpdVQ0Ck5ZSStJeW5jMHU2ZXBQZnhxOFlNbnNWa3QwbHdhaHJidkFpbHQzNk5EeFRYY2JmZFVreU4wVmNJOXhUcXlGUGgKMkdjeDNNc0JBb0dCQU1GdlJXeUkrK3ZValkza0xGUlhJL3QwcmtnY1B2MVZlOGNVbUxjU0QwYklZM1BWLzVvNgprOEMvVXByZUZiMkI4azVubGhCeWdFYnBHOXBwcWtoMnVYQmxEL1R6aXhxNGFBbGNqL3hJeG5oRkY5UTNiYk9oCmJRWWRKc01EZjhGMzlhZlU2T3lXRWtxdng4Q1gzak56cjliclFYdkNVVDZrN21MdHA1dlJJV0p0QW9HQkFPQVYKMTRGak8xSzlITnZWSFVuSHo1cGJkM2NsUHIzcHFDaVhHZEl5d2p2YU5hQUpCUFd3WTIrbjY3MXVxTnZjTkJuMwpVbE0yQWVkSkRUNmZ4SXdtTE1RMDZTcVU4K01mb1p5bnk0WE5WNDlnM2dWQ3pCM1Z0SHczaklMd0x3V1V6VkFuClI4UVQ1ZVc5VE42QzN4eWhGOW1ZS2pVT2ZMM0lzb3d5Qk16bG4zSVJBb0dCQUl2cTNjL0ZRbHh5c2pXNW4yc2UKWVRPcFVjdHRTdzdhUDU5Z1FacmlvRlExN09KRUlCQkNZTS9pVkhFYlJhUi9rM0t0TVBvU3FNRWlLdmlReUJDRQplRnhaYmZKa0cvR25BL0lKbDBrSXB5OGw0emVwSkZ2ejN6VzE3bXpQWWlEaWtibmxvdHBITDFJQTFqOTBXdERpCjFJVmtSRWl0NVRDb0FwdGlob09LQVZqOUFvR0FFMWJQT29OdDR6NGU5M24xQlNFUmNhampMbzB3VlFPTlY3TnkKcndsaWFmZnpHTlN1Y09YQUx5cTIxYXB2T0VwUTFNemJkZ0w3TnhLKzZlQ3YvY2h0cEtGTVhqaHNzL1ZPNVU0MQo2bDVHYUVGYjUraFQ1VjlFTEZRKzlDMzJZT3p1cXpRNHBWdHlROW1LZ01tYXA4WGZZUkFZMUd0anFKMWhpMmZsCnNpay9FWUVDZ1lBT1FnL2UrYnpnbWdoVE9OVEcrT0NFcExmOElFV0JhNWN2OGRsb3dCcmxNRUxSUjFKUmJydnUKQ0RIQkd1ZDBnTjBDaWtXR1VIejRqamZaTDNxMVNFMG5tblV6Mm5TUUdZSGI5R3ZwcWpCNXdGWlAwcWxEYVVvZApvWFJDdnJGNXIxS3lYazZTTXlKY05xYTZZUVVzK1JmY0k3NjZjNUZZTHMwZHFkRjNjNkR4VEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: vault-operator/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-vault-operator
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["create", "patch"]
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["delete", "get", "patch"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["delete", "list", "watch", "patch"]
- apiGroups:
  - kubevault.com
  - catalog.kubevault.com
  - policy.kubevault.com
  - engine.kubevault.com
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - deployments
  verbs: ["create","get", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - services
  - serviceaccounts
  verbs: ["create", "get", "patch"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["list"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs: ["get", "create", "list"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs: ["get", "update", "create", "patch"]
---
# Source: vault-operator/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-vault-operator-apiserver-auth-delegator
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-vault-operator
  namespace: vault-operator-v0.3.0.tgz
---
# Source: vault-operator/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-vault-operator
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-vault-operator
subjects:
- kind: ServiceAccount
  name: my-release-vault-operator
  namespace: vault-operator-v0.3.0.tgz
---
# Source: vault-operator/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-vault-operator-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-vault-operator
  namespace: vault-operator-v0.3.0.tgz
---
# Source: vault-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-vault-operator
  namespace: vault-operator-v0.3.0.tgz
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
---
# Source: vault-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-vault-operator
  namespace: vault-operator-v0.3.0.tgz
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vault-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault-operator
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: bd5b5c315481402fcb82fc8f41cd59697e3df456f98dbe3a815cd3ca54d81544
    spec:
      serviceAccountName: my-release-vault-operator
      containers:
      - name: operator
        securityContext:
          {}
        image: kubevault/vault-operator:v0.3.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        - --cluster-name=
        ports:
        - containerPort: 8443
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-vault-operator-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
---
# Source: vault-operator/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.mutators.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.kubevault.com
  version: v1alpha1
  service:
    namespace: vault-operator-v0.3.0.tgz
    name: my-release-vault-operator
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU13M1NMbjFKdjVKZTBXcmxuZlo0V2d3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExT1RBeFdoY05NelF3TmpFNE1UUTFPVEF4V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2NZCnlqSnNQdGlYcXZRTzBjeEVkWkMrTXBFVmx4K04waTA2SDl6bFVsSmVZYnJFbTdJRU8rVm1TZER0Q0lySTNSeGMKakdnL2E4SGJDdkVLSjU2Z2FqUVBWSnZidnBCZVl3MDhCZHBsWW9QSzJMNHFWVEI4YTl1RGprNVh1RDhERVRqSQp3dDkwVWhHaHZiSFRQb3BObE0xa1BSUU01TzRNV2lOYTFreitCcWp4Q1kycG9OUCtpYlBmazE0bjBZekszUmFqCm50dWtnNXFWMCtqTWhaejZzTXVGVFhlM09YQjBKcXhMT3hsSE8vY1lYK1JjeUtlQmRiTnNvN1dSUElsS21ET1UKNFhTSWYwSzlhTm5COWJyMVlIL1hOVVZzU29TNm1YZjBWWEx4OElFM2pxS0k1MUZyNlc3a29EMVRPZm1jUlJoQwovUjdJbzEwY3RINjF5b20wL2s4Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRODhxVUFFdmpBS08yRHBHaDBSbXB0Zm4zU3lqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFlVlA2U0RVRApQbjc5SHgvMWIxbWF6OVU4QjhPcElXdDFXall3WXRRamxiRFB5ZFo3QTh2ZXZkQ3p6MVMyalB2Z0k0R0NEZ0cvCm9Ycm5KMHZuUGtaNGJEYmIzd3NpNWFQOHJqQjNKbW5NVllpUFRLSDZaNnhOeHhqVmFtSVU4STlmVkJpT2VCNHIKNE9hRXdUMjN5QUx1ODM0b2VlNWZvdnlLb285K0tseVNHK2NnbXBqUjJ4a1I2YVJuVkowcm5zQzFxek9IcC9qNwpoc3d5bEtXYmRBd1dKU2tmTFRyZkhtTTk3blVvZjZXNFVqeUVIMnFRYnZsdGlmb0pUcWhTMjRPQkhqWVdCK0hwCmxkVCsyb0RpOUZRdUJHaU5idGFpb3FDSXhPQWh6clpSU2N6eURDTzFqM2wrMkc0Z0NId0RvWkhaN1dvbit0ZFkKSEd4TmwwNzhJNXhkTVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: vault-operator/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.validators.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.kubevault.com
  version: v1alpha1
  service:
    namespace: vault-operator-v0.3.0.tgz
    name: my-release-vault-operator
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU13M1NMbjFKdjVKZTBXcmxuZlo0V2d3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExT1RBeFdoY05NelF3TmpFNE1UUTFPVEF4V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2NZCnlqSnNQdGlYcXZRTzBjeEVkWkMrTXBFVmx4K04waTA2SDl6bFVsSmVZYnJFbTdJRU8rVm1TZER0Q0lySTNSeGMKakdnL2E4SGJDdkVLSjU2Z2FqUVBWSnZidnBCZVl3MDhCZHBsWW9QSzJMNHFWVEI4YTl1RGprNVh1RDhERVRqSQp3dDkwVWhHaHZiSFRQb3BObE0xa1BSUU01TzRNV2lOYTFreitCcWp4Q1kycG9OUCtpYlBmazE0bjBZekszUmFqCm50dWtnNXFWMCtqTWhaejZzTXVGVFhlM09YQjBKcXhMT3hsSE8vY1lYK1JjeUtlQmRiTnNvN1dSUElsS21ET1UKNFhTSWYwSzlhTm5COWJyMVlIL1hOVVZzU29TNm1YZjBWWEx4OElFM2pxS0k1MUZyNlc3a29EMVRPZm1jUlJoQwovUjdJbzEwY3RINjF5b20wL2s4Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRODhxVUFFdmpBS08yRHBHaDBSbXB0Zm4zU3lqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFlVlA2U0RVRApQbjc5SHgvMWIxbWF6OVU4QjhPcElXdDFXall3WXRRamxiRFB5ZFo3QTh2ZXZkQ3p6MVMyalB2Z0k0R0NEZ0cvCm9Ycm5KMHZuUGtaNGJEYmIzd3NpNWFQOHJqQjNKbW5NVllpUFRLSDZaNnhOeHhqVmFtSVU4STlmVkJpT2VCNHIKNE9hRXdUMjN5QUx1ODM0b2VlNWZvdnlLb285K0tseVNHK2NnbXBqUjJ4a1I2YVJuVkowcm5zQzFxek9IcC9qNwpoc3d5bEtXYmRBd1dKU2tmTFRyZkhtTTk3blVvZjZXNFVqeUVIMnFRYnZsdGlmb0pUcWhTMjRPQkhqWVdCK0hwCmxkVCsyb0RpOUZRdUJHaU5idGFpb3FDSXhPQWh6clpSU2N6eURDTzFqM2wrMkc0Z0NId0RvWkhaN1dvbit0ZFkKSEd4TmwwNzhJNXhkTVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: vault-operator/templates/apiregistration.yaml
# register as aggregated apiserver
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1alpha1.validators.engine.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.engine.kubevault.com
  version: v1alpha1
  service:
    namespace: vault-operator-v0.3.0.tgz
    name: my-release-vault-operator
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU13M1NMbjFKdjVKZTBXcmxuZlo0V2d3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExT1RBeFdoY05NelF3TmpFNE1UUTFPVEF4V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS2NZCnlqSnNQdGlYcXZRTzBjeEVkWkMrTXBFVmx4K04waTA2SDl6bFVsSmVZYnJFbTdJRU8rVm1TZER0Q0lySTNSeGMKakdnL2E4SGJDdkVLSjU2Z2FqUVBWSnZidnBCZVl3MDhCZHBsWW9QSzJMNHFWVEI4YTl1RGprNVh1RDhERVRqSQp3dDkwVWhHaHZiSFRQb3BObE0xa1BSUU01TzRNV2lOYTFreitCcWp4Q1kycG9OUCtpYlBmazE0bjBZekszUmFqCm50dWtnNXFWMCtqTWhaejZzTXVGVFhlM09YQjBKcXhMT3hsSE8vY1lYK1JjeUtlQmRiTnNvN1dSUElsS21ET1UKNFhTSWYwSzlhTm5COWJyMVlIL1hOVVZzU29TNm1YZjBWWEx4OElFM2pxS0k1MUZyNlc3a29EMVRPZm1jUlJoQwovUjdJbzEwY3RINjF5b20wL2s4Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRODhxVUFFdmpBS08yRHBHaDBSbXB0Zm4zU3lqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFlVlA2U0RVRApQbjc5SHgvMWIxbWF6OVU4QjhPcElXdDFXall3WXRRamxiRFB5ZFo3QTh2ZXZkQ3p6MVMyalB2Z0k0R0NEZ0cvCm9Ycm5KMHZuUGtaNGJEYmIzd3NpNWFQOHJqQjNKbW5NVllpUFRLSDZaNnhOeHhqVmFtSVU4STlmVkJpT2VCNHIKNE9hRXdUMjN5QUx1ODM0b2VlNWZvdnlLb285K0tseVNHK2NnbXBqUjJ4a1I2YVJuVkowcm5zQzFxek9IcC9qNwpoc3d5bEtXYmRBd1dKU2tmTFRyZkhtTTk3blVvZjZXNFVqeUVIMnFRYnZsdGlmb0pUcWhTMjRPQkhqWVdCK0hwCmxkVCsyb0RpOUZRdUJHaU5idGFpb3FDSXhPQWh6clpSU2N6eURDTzFqM2wrMkc0Z0NId0RvWkhaN1dvbit0ZFkKSEd4TmwwNzhJNXhkTVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: vault-operator/templates/appcatalog-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: vault-operator/templates/appcatalog-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: vault-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubevault:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubevault.com
  - catalog.kubevault.com
  - policy.kubevault.com
  - appcatalog.appscode.com
  - engine.kubevault.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: vault-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubevault:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubevault.com
  resources:
  - vaultservers
  verbs: ["*"]
- apiGroups:
  - policy.kubevault.com
  resources:
  - vaultpolicies
  - vaultpolicybindings
  verbs: ["*"]
- apiGroups:
  - engine.kubevault.com
  resources:
  - secretengines
  - databaseaccessrequests
  - mongodbroles
  - mysqlroles
  - postgresroles
  - awsroles
  - awsaccesskeyrequests
  - gcproles
  - gcpaccesskeyrequests
  - azureroles
  - azureaccesskeyrequests
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["*"]
- apiGroups:
  - catalog.kubevault.com
  resources:
  - vaultserverversions
  verbs: ["get", "list", "watch"]
---
# Source: vault-operator/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubevault:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubevault.com
  resources:
  - vaultservers
  verbs: ["get", "list", "watch"]
- apiGroups:
  - policy.kubevault.com
  resources:
  - vaultpolicies
  - vaultpolicybindings
  verbs: ["get", "list", "watch"]
- apiGroups:
  - engine.kubevault.com
  resources:
  - secretengines
  - databaseaccessrequests
  - mongodbroles
  - mysqlroles
  - postgresroles
  - awsroles
  - awsaccesskeyrequests
  - gcproles
  - gcpaccesskeyrequests
  - azureroles
  - azureaccesskeyrequests
  verbs: ["get", "list", "watch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["get", "list", "watch"]
- apiGroups:
  - catalog.kubevault.com
  resources:
  - vaultserverversions
  verbs: ["get", "list", "watch"]
---
# Source: vault-operator/templates/cleaner.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-vault-operator-cleaner
  namespace: vault-operator-v0.3.0.tgz
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      serviceAccountName: my-release-vault-operator
      containers:
      - name: kubectl
        image: appscode/kubectl:v1.16
        command:
          - sh
          - -c
          - "sleep 2; \
          kubectl delete validatingwebhookconfigurations validators.kubevault.com || true; \
          kubectl delete validatingwebhookconfigurations validators.engine.kubevault.com || true; \
          kubectl delete mutatingwebhookconfiguration mutators.kubevault.com || true; \
          kubectl delete apiservice v1alpha1.mutators.kubevault.com || true; \
          kubectl delete apiservice v1alpha1.validators.engine.kubevault.com || true; \
          kubectl delete apiservice v1alpha1.validators.kubevault.com || true;"
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
---
# Source: vault-operator/templates/mutating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: vaultpolicybindings.mutators.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubevault.com/v1alpha1/vaultpolicybindingmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - policy.kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultpolicybindings
  failurePolicy: Fail
  sideEffects: None
- name: vaultservers.mutators.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubevault.com/v1alpha1/vaultservermutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultservers
  failurePolicy: Fail
  sideEffects: None
---
# Source: vault-operator/templates/validating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: vaultservers.validators.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubevault.com/v1alpha1/vaultservervalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - kubevault.com
    apiVersions:
    - "*"
    resources:
    - vaultservers
  failurePolicy: Fail
  sideEffects: None
---
# Source: vault-operator/templates/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.engine.kubevault.com
  labels:
    helm.sh/chart: vault-operator-v0.3.0
    app.kubernetes.io/name: vault-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: databaseaccessrequests.validators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.engine.kubevault.com/v1alpha1/databaseaccessrequestvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
      - CREATE
      - UPDATE
    apiGroups:
      - engine.kubevault.com
    apiVersions:
      - "*"
    resources:
      - databaseaccessrequests
  failurePolicy: Fail
  sideEffects: None
- name: awsaccesskeyrequests.validators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.engine.kubevault.com/v1alpha1/awsaccesskeyrequestvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - engine.kubevault.com
    apiVersions:
    - "*"
    resources:
    - awsaccesskeyrequests
  failurePolicy: Fail
  sideEffects: None
- name: gcpaccesskeyrequests.validators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.engine.kubevault.com/v1alpha1/gcpaccesskeyrequestvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - engine.kubevault.com
    apiVersions:
    - "*"
    resources:
    - gcpaccesskeyrequests
  failurePolicy: Fail
  sideEffects: None
- name: azureaccesskeyrequests.validators.engine.kubevault.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.engine.kubevault.com/v1alpha1/azureaccesskeyrequestvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - engine.kubevault.com
    apiVersions:
    - "*"
    resources:
    - azureaccesskeyrequests
  failurePolicy: Fail
  sideEffects: None
