---
# Source: grafana-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-grafana-operator
  namespace: grafana-operator-v2022.06.14.tgz
  labels:
    helm.sh/chart: grafana-operator-v2022.06.14
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: grafana-operator/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-grafana-operator
  labels:
    helm.sh/chart: grafana-operator-v2022.06.14
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["delete", "get", "patch"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["delete", "list", "watch", "patch"]
- apiGroups:
  - openviz.dev
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - openviz.dev
  resources:
  - grafanadashboards/finalizers
  - grafanadatasources/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - deployments
  verbs: ["create","get", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - secrets
  - services
  - serviceaccounts
  verbs: ["create", "get", "patch", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "get", "list", "watch", "patch"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["list"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create", "patch"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs: ["get", "create", "list"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs: ["get", "update", "create", "patch"]
---
# Source: grafana-operator/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-grafana-operator
  labels:
    helm.sh/chart: grafana-operator-v2022.06.14
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-grafana-operator
subjects:
- kind: ServiceAccount
  name: my-release-grafana-operator
  namespace: grafana-operator-v2022.06.14.tgz
---
# Source: grafana-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-grafana-operator
  namespace: grafana-operator-v2022.06.14.tgz
  labels:
    helm.sh/chart: grafana-operator-v2022.06.14
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  selector:
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: my-release
---
# Source: grafana-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-grafana-operator
  namespace: grafana-operator-v2022.06.14.tgz
  labels:
    helm.sh/chart: grafana-operator-v2022.06.14
    app.kubernetes.io/name: grafana-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana-operator
        app.kubernetes.io/instance: my-release
      annotations:
        reload: sdqYwGnp
    spec:
      
      serviceAccountName: my-release-grafana-operator
      containers:
      - name: operator
        securityContext:
          {}
        image: ghcr.io/appscode/grafana-tools:v0.0.1
        imagePullPolicy: IfNotPresent
        args:
        - operator
        - --v=3
        - --use-kubeapiserver-fqdn-for-aks=true
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: metrics
          containerPort: 8080
        - name: probes
          containerPort: 8081
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        readinessProbe:
          httpGet:
            path: /readyz
            port: probes
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: probes
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: grafana-operator/templates/appcatalog-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: grafana-operator/templates/appcatalog-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: grafana-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: openviz:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  - openviz.dev
  resources:
  - "*"
  verbs: ["*"]
---
# Source: grafana-operator/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: openviz:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - openviz.dev
  resources:
  - dashboards
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["*"]
---
# Source: grafana-operator/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openviz:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - openviz.dev
  resources:
  - dashboards
  verbs: ["get", "list", "watch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - appbindings
  verbs: ["get", "list", "watch"]
