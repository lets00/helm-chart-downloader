---
# Source: thingsboard/charts/rabbitmq/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-rabbitmq
  namespace: "thingsboard-0.1.2.tgz"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.11.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: my-release-rabbitmq
---
# Source: thingsboard/charts/rabbitmq/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-rabbitmq
  namespace: "thingsboard-0.1.2.tgz"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.11.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  rabbitmq-password: "cGFzc3dvcmQx"
  rabbitmq-erlang-cookie: "R0RGU0VLR1pOU0JSU0VJRlNSVE5TRklLU0VLTE1FRVI="
---
# Source: thingsboard/charts/rabbitmq/templates/configuration.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-rabbitmq-config
  namespace: "thingsboard-0.1.2.tgz"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.11.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  rabbitmq.conf: |-
    ## Username and password
    ##
    default_user = admin
    default_pass = CHANGEME
    ## Clustering
    ##
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.node_cleanup.interval = 10
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal
    # queue master locator
    queue_master_locator = min-masters
    # enable guest user
    loopback_users.guest = false
    #default_vhost = thingsboard-0.1.2.tgz-vhost
    #disk_free_limit.absolute = 50MB
    #load_definitions = /app/load_definition.json
---
# Source: thingsboard/charts/rabbitmq/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-rabbitmq-endpoint-reader
  namespace: "thingsboard-0.1.2.tgz"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.11.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
---
# Source: thingsboard/charts/rabbitmq/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-rabbitmq-endpoint-reader
  namespace: "thingsboard-0.1.2.tgz"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.11.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: my-release-rabbitmq
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-rabbitmq-endpoint-reader
---
# Source: thingsboard/charts/rabbitmq/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-rabbitmq-headless
  namespace: "thingsboard-0.1.2.tgz"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.11.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: epmd
      port: 4369
      targetPort: epmd
    - name: amqp
      port: 5672
      targetPort: amqp
    - name: dist
      port: 25672
      targetPort: dist
    - name: http-stats
      port: 15672
      targetPort: stats
  selector: 
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: my-release
---
# Source: thingsboard/charts/rabbitmq/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-rabbitmq
  namespace: "thingsboard-0.1.2.tgz"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.11.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  externalTrafficPolicy: "Cluster"
  ports:
    - name: amqp
      port: 5672
      targetPort: amqp
    - name: epmd
      port: 4369
      targetPort: epmd
    - name: dist
      port: 25672
      targetPort: dist
    - name: http-stats
      port: 15672
      targetPort: stats
  selector: 
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/instance: my-release
---
# Source: thingsboard/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-thingsboard
  labels:
    helm.sh/chart: thingsboard-0.1.2
    app.kubernetes.io/name: thingsboard
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 9090
      protocol: TCP
      name: http
    - port: 1883
      targetPort: 1883
      protocol: TCP
      name: mqtt
    - port: 5683
      targetPort: 5683
      protocol: UDP
      name: caop
  selector:
    app: thingsboard
---
# Source: thingsboard/charts/rabbitmq/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-rabbitmq
  namespace: "thingsboard-0.1.2.tgz"
  labels:
    app.kubernetes.io/name: rabbitmq
    helm.sh/chart: rabbitmq-8.11.9
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: my-release-rabbitmq-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-8.11.9
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: d3da5cc5b6714c4e33d1165d6bb55ad3d1dd12f72d7198d69c6a9144f5d70e21
        checksum/secret: a47a62185cfb9fe6351b946f3f53cea85e7a64b8a25023cf38ed6ee57f56d3d3
    spec:
      
      serviceAccountName: my-release-rabbitmq
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: rabbitmq
                    app.kubernetes.io/instance: my-release
                namespaces:
                  - "thingsboard-0.1.2.tgz"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      terminationGracePeriodSeconds: 120
      containers:
        - name: rabbitmq
          image: docker.io/bitnami/rabbitmq:3.8.14-debian-10-r24
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K8S_SERVICE_NAME
              value: "my-release-rabbitmq-headless"
            - name: K8S_ADDRESS_TYPE
              value: hostname
            - name: RABBITMQ_FORCE_BOOT
              value: "no"
            - name: RABBITMQ_NODE_NAME
              value: "rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
            - name: K8S_HOSTNAME_SUFFIX
              value: ".$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE).svc.cluster.local"
            - name: RABBITMQ_MNESIA_DIR
              value: "/bitnami/rabbitmq/mnesia/$(RABBITMQ_NODE_NAME)"
            - name: RABBITMQ_LDAP_ENABLE
              value: "no"
            - name: RABBITMQ_LOGS
              value: "-"
            - name: RABBITMQ_ULIMIT_NOFILES
              value: "65536"
            - name: RABBITMQ_USE_LONGNAME
              value: "true"
            - name: RABBITMQ_ERL_COOKIE
              valueFrom:
                secretKeyRef:
                  name: my-release-rabbitmq
                  key: rabbitmq-erlang-cookie
            - name: RABBITMQ_LOAD_DEFINITIONS
              value: "no"
            - name: RABBITMQ_SECURE_PASSWORD
              value: "yes"
            - name: RABBITMQ_USERNAME
              value: "admin"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-rabbitmq
                  key: rabbitmq-password
            - name: RABBITMQ_PLUGINS
              value: "rabbitmq_management, rabbitmq_peer_discovery_k8s, rabbitmq_auth_backend_ldap"
          ports:
            - name: amqp
              containerPort: 5672
            - name: dist
              containerPort: 25672
            - name: stats
              containerPort: 15672
            - name: epmd
              containerPort: 4369
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q ping
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits: {}
            requests: {}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -ec
                  - |
                    if [[ -f /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh ]]; then
                        /opt/bitnami/scripts/rabbitmq/nodeshutdown.sh -t "120" -d  "false"
                    else
                        rabbitmqctl stop_app
                    fi
          volumeMounts:
            - name: configuration
              mountPath: /bitnami/rabbitmq/conf
            - name: data
              mountPath: /bitnami/rabbitmq/mnesia
      volumes:
        - name: configuration
          configMap:
            name: my-release-rabbitmq-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: rabbitmq
          app.kubernetes.io/instance: my-release
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: thingsboard/templates/StatefulSet.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-thingsboard
  labels:
    app: soprism
    chart: "thingsboard-0.1.2"
    release: "my-release"
    heritage: "Helm"
spec:
  replicas: 1
  serviceName: my-release-thingsboard
  selector:
    matchLabels:
      app: thingsboard
      release: my-release
  template:
    metadata:
      labels:
        app: thingsboard
        chart: "thingsboard-0.1.2"
        release: "my-release"
        heritage: "Helm"
    spec:
      
      
      containers:
        - name: thingsboard
          securityContext:
            {}
          image: thingsboard/tb-postgres
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
            - name: mqtt
              containerPort: 1883
              protocol: TCP
            - name: coap
              containerPort: 5683
              protocol: UDP
          env:
            - name: TB_QUEUE_TYPE
              value: "rabbitmq"
            - name: TB_QUEUE_RABBIT_MQ_USERNAME
              value: "admin"
            - name: TB_QUEUE_RABBIT_MQ_PASSWORD
              value: "password1"
            - name: TB_QUEUE_RABBIT_MQ_HOST
              value: my-release-rabbitmq
            - name: TB_QUEUE_RABBIT_MQ_PORT
              value: "5672"
      
      
          readinessProbe:
            exec:
              command:
                - ls
            initialDelaySeconds: 40
            periodSeconds: 7
      
          resources:
            {}
