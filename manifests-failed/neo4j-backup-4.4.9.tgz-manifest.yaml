---
# Source: neo4j-backup/templates/backup.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "my-release-job"
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    helm.sh/chart: "neo4j-backup-4.4.9"
    app.kubernetes.io/name: "graph-backup"
    app.kubernetes.io/component: backup
spec:
  schedule: "0 */12 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 6
      template:
        metadata:
          labels:
        spec:
          restartPolicy: Never
          shareProcessNamespace: false
          containers:
            - name: graph-backup
              image: gcr.io/neo4j-helm/backup:4.4.9
              imagePullPolicy: Always
              env:
                - name: NEO4J_ADDR
                  value: holder-neo4j.default.svc.cluster.local:6362
                - name: DATABASE
                  value: neo4j,system
                - name: CLOUD_PROVIDER
                  value: gcp
                - name: BUCKET
                  value: gs://test-neo4j
                - name: HEAP_SIZE
                  value: 2G
                - name: PAGE_CACHE
                  value: 2G
                - name: FALLBACK_TO_FULL
                  value: "true"
                - name: CHECK_CONSISTENCY
                  value: "true"
                - name: CHECK_INDEXES
                  value: "true"
                - name: CHECK_GRAPH
                  value: "true"
                - name: CHECK_LABEL_SCAN_STORE
                  value: "true"
                - name: CHECK_PROPERTY_OWNERS
                  value: "false"
                - name: REMOVE_EXISTING_FILES
                  value: "true"
                - name: REMOVE_BACKUP_FILES
                  value: "true"
              volumeMounts:
                - name: credentials
                  mountPath: /credentials
                  readOnly: true
                - name: "backup"
                  mountPath: "/backups"
          volumes:
            - name: credentials
              secret:
                secretName: "neo4j-gcp-credentials"
                items:
                  - key: credentials
                    path: credentials
            - name: "backup"
