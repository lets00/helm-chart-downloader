---
# Source: akeyless-csi-provider/templates/csi-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-akeyless-csi-provider-csi-provider
  namespace: akeyless-csi-provider-1.0.2.tgz
  labels:
    app.kubernetes.io/name: akeyless-csi-provider-csi-provider
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: akeyless-csi-provider/templates/csi-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-akeyless-csi-provider-csi-provider-clusterrole
  labels:
    app.kubernetes.io/name: akeyless-csi-provider-csi-provider
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts/token
  verbs:
  - create
---
# Source: akeyless-csi-provider/templates/csi-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-akeyless-csi-provider-csi-provider-clusterrolebinding
  labels:
    app.kubernetes.io/name: akeyless-csi-provider-csi-provider
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-akeyless-csi-provider-csi-provider-clusterrole
subjects:
- kind: ServiceAccount
  name: my-release-akeyless-csi-provider-csi-provider
  namespace: akeyless-csi-provider-1.0.2.tgz
---
# Source: akeyless-csi-provider/templates/csi-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-release-akeyless-csi-provider-csi-provider
  namespace: akeyless-csi-provider-1.0.2.tgz
  labels:
    app.kubernetes.io/name: akeyless-csi-provider-csi-provider
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: akeyless-csi-provider-csi-provider
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: akeyless-csi-provider-csi-provider
        app.kubernetes.io/instance: my-release
      
    spec:
      serviceAccountName: my-release-akeyless-csi-provider-csi-provider
      containers:
        - name: akeyless-csi-provider-csi-provider
          
          image: "akeyless/akeyless-csi-provider:latest"
          imagePullPolicy: IfNotPresent
          args:
            - --endpoint=/provider/akeyless.sock
          volumeMounts:
            - name: providervol
              mountPath: "/provider"
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: HostToContainer
          livenessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
      volumes:
        - name: providervol
          hostPath:
            path: /etc/kubernetes/secrets-store-csi-providers
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
