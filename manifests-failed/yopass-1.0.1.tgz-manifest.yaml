---
# Source: yopass/charts/memcached/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-memcached
  namespace: yopass-1.0.1.tgz
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: memcached-6.3.7
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: memcache
      port: 11211
      targetPort: memcache
      nodePort: null
  selector:
    app.kubernetes.io/name: memcached
    app.kubernetes.io/instance: my-release
---
# Source: yopass/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-yopass
  labels:
    helm.sh/chart: yopass-1.0.1
    app.kubernetes.io/name: yopass
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "11.4.6"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 1337
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: yopass
    app.kubernetes.io/instance: my-release
---
# Source: yopass/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-yopass
  labels:
    helm.sh/chart: yopass-1.0.1
    app.kubernetes.io/name: yopass
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "11.4.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: yopass
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: yopass
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      containers:
        - name: yopass
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1337
            runAsGroup: 420
          image: "jhaals/yopass:11.4.6"
          imagePullPolicy: IfNotPresent
          args:
            - "--memcached=my-release-memcached.yopass-1.0.1.tgz.svc:11211"
          ports:
            - name: http
              containerPort: 1337
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: yopass/charts/memcached/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-memcached
  namespace: yopass-1.0.1.tgz
  labels:
    app.kubernetes.io/name: memcached
    helm.sh/chart: memcached-6.3.7
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: memcached
      app.kubernetes.io/instance: my-release
  replicas: 3
  podManagementPolicy: "Parallel"
  serviceName: my-release-memcached
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: memcached
        helm.sh/chart: memcached-6.3.7
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: memcached
                    app.kubernetes.io/instance: my-release
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      serviceAccountName: default
      containers:
        - name: memcached
          image: docker.io/bitnami/memcached:1.6.18-debian-11-r14
          imagePullPolicy: "IfNotPresent"
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MEMCACHED_PORT_NUMBER
              value: "11211"
          ports:
            - name: memcache
              containerPort: 11211
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: memcache
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
            tcpSocket:
              port: memcache
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
