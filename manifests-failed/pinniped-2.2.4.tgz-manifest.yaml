---
# Source: pinniped/templates/concierge/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-pinniped-concierge
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: pinniped
      app.kubernetes.io/part-of: pinniped
      app.kubernetes.io/component: concierge
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 8444
        - port: 10250
---
# Source: pinniped/templates/supervisor/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-pinniped-supervisor
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: pinniped
      app.kubernetes.io/part-of: pinniped
      app.kubernetes.io/component: supervisor
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 8443
        - port: 10250
---
# Source: pinniped/templates/concierge/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-pinniped-concierge
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: pinniped
      app.kubernetes.io/component: concierge
---
# Source: pinniped/templates/supervisor/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-pinniped-supervisor
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: pinniped
      app.kubernetes.io/component: supervisor
---
# Source: pinniped/templates/concierge/impersonation-proxy-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-pinniped-concierge-impersonation-proxy
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
automountServiceAccountToken: false
secrets:
  - name: my-release-pinniped-concierge-impersonation-proxy
---
# Source: pinniped/templates/concierge/kube-cert-agent-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-pinniped-concierge-kube-cert-agent-server
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
automountServiceAccountToken: false
---
# Source: pinniped/templates/concierge/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-pinniped-concierge
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
automountServiceAccountToken: false
---
# Source: pinniped/templates/supervisor/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-pinniped-supervisor
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
automountServiceAccountToken: false
---
# Source: pinniped/templates/concierge/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-pinniped-concierge
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
data:
  pinniped.yaml: |-
    discovery:
      url: null
    api:
      servingCertificate:
        durationSeconds: 2592000
        renewBeforeSeconds: 2160000
    apiGroupSuffix: pinniped.dev
    aggregatedAPIServerPort: 10250
    impersonationProxyServerPort: 8444
    names:
      servingCertificateSecret: my-release-pinniped-concierge-pinniped-2.2.4.tgz-api-tls-servin
      credentialIssuer: my-release-pinniped-concierge
      apiService: my-release-pinniped-concierge-pinniped-2.2.4.tgz-api
      impersonationLoadBalancerService: my-release-pinniped-concierge-impersonation-proxy-load-balancer
      impersonationClusterIPService: my-release-pinniped-concierge-impersonation-proxy-cluster-ip
      impersonationTLSCertificateSecret: my-release-pinniped-concierge-impersonation-proxy-tls-serving-c
      impersonationCACertificateSecret: my-release-pinniped-concierge-impersonation-proxy-ca-certificat
      impersonationSignerSecret: my-release-pinniped-concierge-impersonation-proxy-signer-ca-cer
      impersonationProxyServiceAccount: my-release-pinniped-concierge-impersonation-proxy
      impersonationProxyLegacySecret: my-release-pinniped-concierge-impersonation-proxy
      agentServiceAccount: my-release-pinniped-concierge-kube-cert-agent-server
    labels: {"app":"pinniped-concierge","app.kubernetes.io/part-of":"pinniped", "app.kubernetes.io/component": "concierge", "app.kubernetes.io/instance": "my-release"}
    kubeCertAgent:
      namePrefix: my-release-pinniped-concierge-kube-cert-agent-
      image: docker.io/bitnami/pinniped:0.31.0-debian-12-r1
---
# Source: pinniped/templates/supervisor/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-pinniped-supervisor
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
data:
  pinniped.yaml: |-
    apiGroupSuffix: pinniped.dev
    names:
      defaultTLSCertificateSecret: my-release-pinniped-supervisor-default-tls-certificate
      apiService: my-release-pinniped-supervisor-api
    labels: {"app.kubernetes.io/part-of":"pinniped", "app.kubernetes.io/component": "supervisor", "app.kubernetes.io/instance": "my-release"}
    insecureAcceptExternalUnencryptedHttpRequests: false
---
# Source: pinniped/templates/concierge/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-aggregated-api
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
      - validatingadmissionpolicies
      - validatingadmissionpolicybindings
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - flowcontrol.apiserver.k8s.io
    resources:
      - flowschemas
      - prioritylevelconfigurations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - security.openshift.io
    resources:
      - securitycontextconstraints
    verbs:
      - use
    resourceNames:
      - nonroot
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
  - apiGroups:
      - config.concierge.pinniped.dev
    resources:
      - credentialissuers
    verbs:
      - get
      - list
      - watch
      - create
  - apiGroups:
      - config.concierge.pinniped.dev
    resources:
      - credentialissuers/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - authentication.concierge.pinniped.dev
    resources:
      - jwtauthenticators
      - webhookauthenticators
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authentication.concierge.pinniped.dev
    resources:
      - jwtauthenticators/status
      - webhookauthenticators/status
    verbs:
      - get
      - list
      - watch
      - update
---
# Source: pinniped/templates/concierge/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-impersonation
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
rules:
  - apiGroups:
      - ""
    resources:
      - users
      - groups
      - serviceaccounts
    verbs:
      - impersonate
  - apiGroups:
      - authentication.k8s.io
    resources:
      - '*'
    verbs:
      - impersonate
---
# Source: pinniped/templates/concierge/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-pre-authn-apis
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
rules:
  - apiGroups:
      - login.concierge.pinniped.dev
    resources:
      - tokencredentialrequests
    verbs:
      - create
      - list
  - apiGroups:
      - identity.concierge.pinniped.dev
    resources:
      - whoamirequests
    verbs:
      - create
      - list
---
# Source: pinniped/templates/supervisor/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-pinniped-supervisor-pinniped-2.2.4.tgz-aggregated-ap
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - flowcontrol.apiserver.k8s.io
    resources:
      - flowschemas
      - prioritylevelconfigurations
    verbs:
      - get
      - list
      - watch
---
# Source: pinniped/templates/concierge/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-aggregated-api
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-concierge
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: ClusterRole
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-aggregated-api
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/concierge/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-impersonation
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-concierge-impersonation-proxy
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: ClusterRole
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-impersonation
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/concierge/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-pre-authn-apis
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
subjects:
  - kind: Group
    name: system:authenticated
    apiGroup: rbac.authorization.k8s.io
  - kind: Group
    name: system:unauthenticated
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-pre-authn-apis
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/concierge/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-concierge
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: ClusterRole
  name: system:auth-delegator
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/supervisor/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-supervisor-pinniped-2.2.4.tgz
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-supervisor
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: ClusterRole
  name: system:auth-delegator
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/supervisor/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-supervisor-pinniped-2.2.4.tgz-aggregated-ap
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-supervisor
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: ClusterRole
  name: my-release-pinniped-supervisor-pinniped-2.2.4.tgz-aggregated-ap
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/concierge/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-pinniped-concierge-kube-cert-agent
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - use
---
# Source: pinniped/templates/concierge/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-pinniped-concierge-aggregated-api-server
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - serviceaccounts/token
    verbs:
      - create
---
# Source: pinniped/templates/concierge/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-kube-system-po
  namespace: kube-system
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
---
# Source: pinniped/templates/concierge/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-cluster-info-l
  namespace: kube-public
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - list
      - watch
---
# Source: pinniped/templates/supervisor/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-pinniped-supervisor
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - config.supervisor.pinniped.dev
    resources:
      - federationdomains
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - config.supervisor.pinniped.dev
    resources:
      - federationdomains/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - config.supervisor.pinniped.dev
    resources:
      - oidcclients
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - config.supervisor.pinniped.dev
    resources:
      - oidcclients/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - idp.supervisor.pinniped.dev
    resources:
      - oidcidentityproviders
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - idp.supervisor.pinniped.dev
    resources:
      - oidcidentityproviders/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - idp.supervisor.pinniped.dev
    resources:
      - ldapidentityproviders
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - idp.supervisor.pinniped.dev
    resources:
      - ldapidentityproviders/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - idp.supervisor.pinniped.dev
    resources:
      - activedirectoryidentityproviders
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - idp.supervisor.pinniped.dev
    resources:
      - activedirectoryidentityproviders/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - idp.supervisor.pinniped.dev
    resources:
      - githubidentityproviders
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - idp.supervisor.pinniped.dev
    resources:
      - githubidentityproviders/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - replicasets
      - deployments
    verbs:
      - get
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
# Source: pinniped/templates/concierge/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-concierge-kube-cert-agent
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-concierge-kube-cert-agent-server
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: Role
  name: my-release-pinniped-concierge-kube-cert-agent
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/concierge/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-concierge-aggregated-api-server
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-concierge
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: Role
  name: my-release-pinniped-concierge-aggregated-api-server
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/concierge/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-kube-system-po
  namespace: kube-system
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-concierge
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: Role
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-kube-system-po
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/concierge/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-extension-apis
  namespace: kube-system
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-concierge
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: Role
  name: extension-apiserver-authentication-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/concierge/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-cluster-info-l
  namespace: kube-public
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-concierge
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: Role
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-cluster-info-l
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/supervisor/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-supervisor
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-supervisor
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: Role
  name: my-release-pinniped-supervisor
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/supervisor/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-pinniped-supervisor-pinniped-2.2.4.tgz-extension-api
  namespace: kube-system
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
subjects:
  - kind: ServiceAccount
    name: my-release-pinniped-supervisor
    namespace: "pinniped-2.2.4.tgz"
roleRef:
  kind: Role
  name: extension-apiserver-authentication-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: pinniped/templates/concierge/service-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-api
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 443
      targetPort: https-api
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/component: concierge
---
# Source: pinniped/templates/concierge/service-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-pinniped-concierge
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https-proxy
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/component: concierge
---
# Source: pinniped/templates/supervisor/service-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-pinniped-supervisor-api
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 10250
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/component: supervisor
---
# Source: pinniped/templates/supervisor/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-pinniped-supervisor
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
spec:
  type: LoadBalancer
  sessionAffinity: None
  externalTrafficPolicy: "Cluster"
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/component: supervisor
---
# Source: pinniped/templates/concierge/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-pinniped-concierge
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: pinniped
      app.kubernetes.io/component: concierge
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: pinniped
        app.kubernetes.io/version: 0.31.0
        helm.sh/chart: pinniped-2.2.4
        app: pinniped-concierge
        app.kubernetes.io/component: concierge
        app.kubernetes.io/part-of: pinniped
    spec:
      serviceAccountName: my-release-pinniped-concierge
      
      automountServiceAccountToken: true
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: pinniped
                    app.kubernetes.io/component: concierge
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
      containers:
        - name: concierge
          image: docker.io/bitnami/pinniped:0.31.0-debian-12-r1
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
            seccompProfile:
              type: RuntimeDefault
          command:
            - pinniped-concierge
          args:
            - --config=/bitnami/pinniped/conf/pinniped.yaml
            - --downward-api-path=/etc/podinfo
          env:
          envFrom:
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 1024Mi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          ports:
            - name: https-proxy
              containerPort: 8444
            - name: https-api
              containerPort: 10250
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            tcpSocket:
              port: https-api
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /healthz
              port: https-api
              scheme: HTTPS
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: config-volume
              mountPath: /bitnami/pinniped/conf
              readOnly: true
            - name: podinfo
              mountPath: /etc/podinfo
              readOnly: true
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: config-volume
          configMap:
            name: my-release-pinniped-concierge
        - name: podinfo
          downwardAPI:
            items:
              - path: labels
                fieldRef:
                  fieldPath: metadata.labels
              - path: name
                fieldRef:
                  fieldPath: metadata.name
              - path: namespace
                fieldRef:
                  fieldPath: metadata.namespace
---
# Source: pinniped/templates/supervisor/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-pinniped-supervisor
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: pinniped
      app.kubernetes.io/component: supervisor
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: pinniped
        app.kubernetes.io/version: 0.31.0
        helm.sh/chart: pinniped-2.2.4
        app.kubernetes.io/component: supervisor
        app.kubernetes.io/part-of: pinniped
    spec:
      serviceAccountName: my-release-pinniped-supervisor
      
      automountServiceAccountToken: true
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: pinniped
                    app.kubernetes.io/component: supervisor
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
      containers:
        - name: supervisor
          image: docker.io/bitnami/pinniped:0.31.0-debian-12-r1
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
            seccompProfile:
              type: RuntimeDefault
          command:
            - pinniped-supervisor
          args:
            - /etc/podinfo
            - /bitnami/pinniped/conf/pinniped.yaml
          env:
          envFrom:
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 1024Mi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          ports:
            - name: https
              containerPort: 8443
            - name: https-api
              containerPort: 10250
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            tcpSocket:
              port: https
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
            - name: config-volume
              mountPath: /bitnami/pinniped/conf
              readOnly: true
            - name: podinfo
              mountPath: /etc/podinfo
              readOnly: true
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: config-volume
          configMap:
            name: my-release-pinniped-supervisor
        - name: podinfo
          downwardAPI:
            items:
              - path: labels
                fieldRef:
                  fieldPath: metadata.labels
              - path: name
                fieldRef:
                  fieldPath: metadata.name
              - path: namespace
                fieldRef:
                  fieldPath: metadata.namespace
---
# Source: pinniped/templates/concierge/apiservice-identity.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.identity.concierge.pinniped.dev
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
spec:
  version: v1alpha1
  group: identity.concierge.pinniped.dev
  groupPriorityMinimum: 9900
  versionPriority: 15
  service:
    name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-api
    namespace: pinniped-2.2.4.tgz
    port: 443
---
# Source: pinniped/templates/concierge/apiservice-login.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.login.concierge.pinniped.dev
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
spec:
  version: v1alpha1
  group: login.concierge.pinniped.dev
  groupPriorityMinimum: 9900
  versionPriority: 15
  service:
    name: my-release-pinniped-concierge-pinniped-2.2.4.tgz-api
    namespace: pinniped-2.2.4.tgz
    port: 443
---
# Source: pinniped/templates/supervisor/apiservice-clientsecret.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.clientsecret.supervisor.pinniped.dev
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: supervisor
spec:
  version: v1alpha1
  group: clientsecret.supervisor.pinniped.dev
  groupPriorityMinimum: 9900
  versionPriority: 15
  service:
    name: my-release-pinniped-supervisor-api
    namespace: pinniped-2.2.4.tgz
    port: 443
---
# Source: pinniped/templates/concierge/credential-issuer.yaml
apiVersion: config.concierge.pinniped.dev/v1alpha1
kind: CredentialIssuer
metadata:
  name: my-release-pinniped-concierge
  namespace: "pinniped-2.2.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pinniped
    app.kubernetes.io/version: 0.31.0
    helm.sh/chart: pinniped-2.2.4
    app.kubernetes.io/part-of: pinniped
    app.kubernetes.io/component: concierge
spec:
  impersonationProxy:
    mode: auto
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "4000"
