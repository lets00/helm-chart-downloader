---
# Source: cluster-manager-hub/templates/auth/sa/bootstrap_sa.yaml
# Copyright Contributors to the Open Cluster Management project

apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-bootstrap
  namespace: open-cluster-management
---
# Source: cluster-manager-hub/templates/clustermanager_sa.yaml
# Copyright Contributors to the Open Cluster Management project
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-manager
  namespace: open-cluster-management
---
# Source: cluster-manager-hub/templates/auth/sa/bootstrap_sa_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cluster-bootstrap-token
  namespace: open-cluster-management
  annotations:
    kubernetes.io/service-account.name: cluster-bootstrap
type: kubernetes.io/service-account-token
---
# Source: cluster-manager-hub/templates/auth/bootstrap_cluster_role.yaml
# Copyright Contributors to the Open Cluster Management project
# Copied from https://github.com/open-cluster-management-io/clusteradm/blob/main/pkg/cmd/init/scenario/init/bootstrap_cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:open-cluster-management:bootstrap
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - cluster.open-cluster-management.io
  resources:
  - managedclusters
  verbs:
  - get
  - create
  - list
  - update
- apiGroups:
  - cluster.open-cluster-management.io
  resources:
  - managedclustersets/join
  verbs:
  - create
---
# Source: cluster-manager-hub/templates/clustermanager_cluster_role.yaml
# Copyright Contributors to the Open Cluster Management project
# Copied from https://github.com/open-cluster-management-io/ocm/blob/main/deploy/cluster-manager/config/rbac/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-manager
rules:
# Allow the registration-operator to create workload
- apiGroups: [""]
  resources: ["configmaps", "namespaces", "serviceaccounts", "services"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete", "deletecollection"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete", "deletecollection"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "update", "patch", "delete"]
  resourceNames:
    - "signer-secret"
    - "registration-webhook-serving-cert"
    - "work-webhook-serving-cert"
    - "registration-controller-sa-kubeconfig"
    - "registration-webhook-sa-kubeconfig"
    - "work-webhook-sa-kubeconfig"
    - "placement-controller-sa-kubeconfig"
    - "work-controller-sa-kubeconfig"
    - "addon-manager-controller-sa-kubeconfig"
    - "external-hub-kubeconfig"
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create", "get"]
- apiGroups: ["", "events.k8s.io"]
  resources: ["events"]
  verbs: ["get", "list", "watch", "create", "patch", "update", "delete", "deletecollection"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["get"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterrolebindings", "rolebindings"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "roles"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
# Allow the registration-operator to create crds
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
# Allow the registration-operator to update crds status
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions/status"]
  verbs: ["update", "patch"]
# Allow the registration-operator to create apiservice
- apiGroups: ["apiregistration.k8s.io"]
  resources: ["apiservices"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
# Allow the registration-operator to create validatingwebhookconfigurration
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
# Allow the nuclues to manage clustermanager apis.
- apiGroups: ["operator.open-cluster-management.io"]
  resources: ["clustermanagers"]
  verbs: ["get", "list", "watch", "update", "delete", "patch"]
- apiGroups: ["operator.open-cluster-management.io"]
  resources: ["clustermanagers/status"]
  verbs: ["update", "patch"]
# Allow the registration-operator to create storageversionmigration
- apiGroups: ["migration.k8s.io"]
  resources: ["storageversionmigrations"]
  verbs: ["create", "get", "list", "update", "watch", "patch", "delete"]
# Some rbac needed in cluster-manager
- apiGroups: ["addon.open-cluster-management.io"]
  resources: ["managedclusteraddons", "clustermanagementaddons"]
  verbs: ["create", "update", "patch", "get", "list", "watch", "delete"]
- apiGroups: ["addon.open-cluster-management.io"]
  resources: ["managedclusteraddons/status", "clustermanagementaddons/status"]
  verbs: ["patch", "update"]
- apiGroups: ["addon.open-cluster-management.io"]
  resources: [managedclusteraddons/finalizers, "clustermanagementaddons/finalizers"]
  verbs: ["update"]
- apiGroups: ["addon.open-cluster-management.io"]
  resources: [addondeploymentconfigs, "addontemplates"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests"]
  verbs: ["create", "get", "list", "watch"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["certificatesigningrequests/approval", "certificatesigningrequests/status"]
  verbs: ["update"]
- apiGroups: ["certificates.k8s.io"]
  resources: ["signers"]
  verbs: ["approve", "sign"]
- apiGroups: ["cluster.open-cluster-management.io"]
  resources: ["managedclusters"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: ["cluster.open-cluster-management.io"]
  resources: ["managedclustersetbindings", "placements", "addonplacementscores"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["cluster.open-cluster-management.io"]
  resources: ["managedclustersets","placementdecisions"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["cluster.open-cluster-management.io"]
  resources: ["managedclusters/status","managedclustersetbindings/status", "managedclustersets/status", "placements/status", "placementdecisions/status"]
  verbs: ["update", "patch"]
- apiGroups: ["cluster.open-cluster-management.io"]
  resources: ["placements/finalizers"]
  verbs: ["update"]
- apiGroups: ["register.open-cluster-management.io"]
  resources: ["managedclusters/clientcertificates"]
  verbs: ["renew"]
- apiGroups: ["register.open-cluster-management.io"]
  resources: ["managedclusters/accept"]
  verbs: ["update"]
- apiGroups: ["work.open-cluster-management.io"]
  resources: ["manifestworkreplicasets"]
  verbs: ["get", "list", "watch", "create", "update", "delete", "deletecollection", "patch"]
- apiGroups: ["work.open-cluster-management.io"]
  resources: ["manifestworkreplicasets/finalizers"]
  verbs: ["update"]
- apiGroups: ["work.open-cluster-management.io"]
  resources: ["manifestworks"]
  verbs: ["get", "list", "watch", "create", "update", "delete", "deletecollection", "patch", "execute-as"]
- apiGroups: ["work.open-cluster-management.io"]
  resources: ["manifestworks/status", "manifestworkreplicasets/status"]
  verbs: ["update", "patch"]
- apiGroups: ["flowcontrol.apiserver.k8s.io"]
  resources: ["flowschemas", "prioritylevelconfigurations"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["config.openshift.io"]
  resources: ["infrastructures"]
  verbs: ["get"]
---
# Source: cluster-manager-hub/templates/auth/sa/bootstrap_sa_cluster_role_binding.yaml
# Copyright Contributors to the Open Cluster Management project

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-bootstrap-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:open-cluster-management:bootstrap
subjects:
- kind: ServiceAccount
  name: cluster-bootstrap
  namespace: open-cluster-management
---
# Source: cluster-manager-hub/templates/clustermanager_cluster_role_binding.yaml
# Copyright Contributors to the Open Cluster Management project
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-manager
subjects:
- kind: ServiceAccount
  name: cluster-manager
  namespace: open-cluster-management
---
# Source: cluster-manager-hub/templates/operator.yaml
# Copyright Contributors to the Open Cluster Management project
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cluster-manager
  name: cluster-manager
  namespace: open-cluster-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-manager
  template:
    metadata:
      labels:
        app: cluster-manager
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cluster-manager
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 70
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cluster-manager
              topologyKey: kubernetes.io/hostname
            weight: 30
      containers:
      - args:
        - /registration-operator
        - hub
        image: quay.io/open-cluster-management/registration-operator:v0.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 2
          periodSeconds: 10
        name: registration-operator
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 2
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
      serviceAccountName: cluster-manager
---
# Source: cluster-manager-hub/templates/auth/token/bootstrap-token-secret.yaml
# Copyright Contributors to the Open Cluster Management project
---
# Source: cluster-manager-hub/templates/auth/token/bootstrap_cluster_role_binding.yaml
# Copyright Contributors to the Open Cluster Management project
---
# Source: cluster-manager-hub/templates/clustermanager.cr.yaml
# Copyright Contributors to the Open Cluster Management project
apiVersion: operator.open-cluster-management.io/v1
kind: ClusterManager
metadata:
  name: cluster-manager
spec:
  registrationImagePullSpec: quay.io/open-cluster-management/registration:v0.12.0
  workImagePullSpec: quay.io/open-cluster-management/work:v0.12.0
  placementImagePullSpec: quay.io/open-cluster-management/placement:v0.12.0
  
  deployOption:
    mode: Default
  
  registrationConfiguration:
    
    featureGates:
    
    - feature: DefaultClusterSet
      mode: Enable
    
  
  
  workConfiguration:
    featureGates:
    
    - feature: ManifestWorkReplicaSet
      mode: Enable
    
  
  
  addOnManagerConfiguration:
    featureGates:
    
    - feature: AddonManagement
      mode: Enable
