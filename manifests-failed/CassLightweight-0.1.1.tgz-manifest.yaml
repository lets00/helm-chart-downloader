---
# Source: CassLightweight/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cassandra-custom-chart
  namespace: default
type: Opaque
data:
  cassandra-username: "Y2Fzcy10ZXN0LXVzZXI="
  cassandra-password: "Y2Fzc2FuZHJh"
---
# Source: CassLightweight/templates/tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-cert-crt
  labels:
    app.kubernetes.io/name: CassLightweight
    helm.sh/chart: CassLightweight-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: release-service
type: kubernetes.io/tls
data:
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHakNDQWdLZ0F3SUJBZ0lSQUxWeWpoYm11SWFFbWMrTXVDUk9FcXN3RFFZSktvWklodmNOQVFFTEJRQXcKRnpFVk1CTUdBMVVFQXhNTVkyRnpjMkZ1WkhKaExXTmhNQjRYRFRJME1EWXlNREUwTlRVeU5Wb1hEVEkxTURZeQpNREUwTlRVeU5Wb3dGekVWTUJNR0ExVUVBeE1NWTJGemMyRnVaSEpoTFdOaE1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXlCTW9lYk0zQ3dEc1Y2TGlvNzN4TkN4d3ZIT3dPNzFVWUpyOWcxczQKVi9Fd1dCZHBidW1Ibko4TERnYTF4NkZ4OFI4WGNvcWcwZDlnckpRS2M3bzdtUVFCYWhFalAxdk9FOFMrdGtWbApRaUdZS292QU9na3JYa3pZZXNBS1ZHbmZJcFRXbFU3Yy9KYnRLa3MxUFF1WGFVZzFiSWF2dnYzdTFGN0lnN0ZSCmQ0SlpNMDdkWGFFS28xUEpwVWFBaEJhbytSeDJ2VXBES2d6UGMrRTdFeVNJQ05RSmphanJjVXZhMktDYitXSTAKNVVWUDBQRzVJLzFMNEFuSUowMWdtTERhdHZTSVpBOUZJc21YYnBvOFhrNC9BRVY5RDRPVlBJTksyQk9Bc3hLSwo3MjNLSTZKaHliVDRaanhJRVFpMUtUY0Q4YTkvZW1KVWk0c0cvWEQ1M2xxaWlRSURBUUFCbzJFd1h6QU9CZ05WCkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOcytoRklndUFTVW9oM2cwSXU3ZFE3dEtRQzlNQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFCTzJ5dC9ka2FlVmlXRzdKTTQzMHM2UFJ5bVFCZGwySmx5ZGJudDNQSjFtOHBUCllKYmtULzlaTmxhYzliNmQwRjBaeE5xd0ZlWENkbVErVjdtTHN3VEc2dGN1N0xzMHAzOVBjWWJtRW04Q1FHK2YKdUJKeTcvKy9GekxiZit0L1BHSTZyT0F0Q2QwSmR3SmRtdk9rbHlWNlYrc0l6U3ZvNkwvSVdNdDIrUUpNMTlVKwozcXZBTFJ3SnQ1U3lzemcxbnZNRU9lR2NOVi9taE5WdEVZQ2dzT3hNeFBkYUl1YkRjczNkZm8vQ3BERDI1eldyCnV1V0FDYVZDMnBRVEc5NXpTcjJyMXVxUDlUSVcxUVNwdnc1QmgwYkEwelZkZllQV1AwOThsWm90d1VvWVgxNGsKOWg5bW5wWVFpbWZuQzRxS2FraVQrbGR2SkMyOWlubWZJcys3OTNicQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVWVENDQXoyZ0F3SUJBZ0lRRzRhNDNNZVUrdWoybG1tQUlsVVBIREFOQmdrcWhraUc5dzBCQVFzRkFEQVgKTVJVd0V3WURWUVFERXd4allYTnpZVzVrY21FdFkyRXdIaGNOTWpRd05qSXdNVFExTlRJMVdoY05NalV3TmpJdwpNVFExTlRJMVdqQWFNUmd3RmdZRFZRUURFdzlEWVhOelRHbG5hSFIzWldsbmFIUXdnZ0VpTUEwR0NTcUdTSWIzCkRRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREtub09NT0M2c3ErRnVERElPeG1FeCtJbGNManIzZUJzTXgwdFUKZ1lwMUdzWGlMNll1aEtwbitVdWJaTDdza2ljRDRFbE9aTlhkb250NVpMRUk4Z1Jxb3hib3JXRUF1Tml1TW1MSwo4N3A0TGQ3SDV5QlF4emJjRWxLSHBCM2xLNkNxRnV3VjNaaSszcmZJb2VKemE0WkFFTVE5Nnc1NnRKNGFZUjcwCkIrMmxrc09SWFpuYVdFMGpCUFhIWERjWGEzbUFzS3NGUmE3dEVHeGlnS04zQ2hJS2YzL3M0NjlMTHR5NzBaSC8KaEIzS0FUTStoVEJUNDRuSURTNmU1dGV0S0lSNXZTaWQ5V1JnRzVkVjJXMFY2dmFOSEM0VDBhUWdNc01kaEUxYgpZclVNZVVKaXk4VnpWTFdHRDYrSDlhYkpleXJGMFRHUGphWVhPM2t5REtBR09JalJBZ01CQUFHamdnR1lNSUlCCmxEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVMno2RVVpQzRCSlNpSGVEUWk3dDFEdTBwQUwwdwpnZ0V5QmdOVkhSRUVnZ0VwTUlJQkpZSTZLaTVEWVhOelRHbG5hSFIzWldsbmFIUXVRMkZ6YzB4cFoyaDBkMlZwCloyaDBMVEF1TVM0eExuUm5laTV6ZG1NdUpTRnpLRHh1YVd3K0tZSTRRMkZ6YzB4cFoyaDBkMlZwWjJoMExrTmgKYzNOTWFXZG9kSGRsYVdkb2RDMHdMakV1TVM1MFozb3VjM1pqTGlVaGN5ZzhibWxzUGltQ1F5b3VRMkZ6YzB4cApaMmgwZDJWcFoyaDBMV2hsWVdSc1pYTnpMa05oYzNOTWFXZG9kSGRsYVdkb2RDMHdMakV1TVM1MFozb3VjM1pqCkxpVWhjeWc4Ym1sc1BpbUNRVU5oYzNOTWFXZG9kSGRsYVdkb2RDMW9aV0ZrYkdWemN5NURZWE56VEdsbmFIUjMKWldsbmFIUXRNQzR4TGpFdWRHZDZMbk4yWXk0bElYTW9QRzVwYkQ0cGdnbHNiMk5oYkdodmMzU0NDVEV5Tnk0dwpMakF1TVlJUFEyRnpjMHhwWjJoMGQyVnBaMmgwTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDUlBBeEI4NnVMClBHRUg1YVdCNWtnS3Y5WW9Hc0JHVnpsT2VETGtHNzBWZnlCYTMrQW9zbUU3M1FJZW81T0o5d3VSUUh0N3JYUzcKRk1SR3ZPRU50UWo0Nk1ORE14KzhkWHNjSmdMRzZJai9GczhPUXRSa1Nyem5nRGExSmlKcVRLNnFTb1NXUE9vVgpsRk9tR2hOQUpFUnQ3Y3psTUM0Nmlqb0pGOUpwVUtBSGxFNHI5cmJua2ZVT3pLN3VIWG9xaXhieU1MZVhSODFpCklLdjZJSHFLeFdqQnFGSXhYcE9mamhENnBvVEozYXB3dFZSZGxjb2lTUDlaQURNR1FldE5VVHd0UHFJVVdlUDkKUDFuUHN3TXluNGdCOGMvdEdIYVhpQjJQdFBXOWhqeUxoM3Y0RTE4dVZyb3lGTSt1N1FjaDliOVRVeHdXSnhkYwprVXBLdFBwd0h6RTYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeXA2RGpEZ3VyS3ZoYmd3eURzWmhNZmlKWEM0NjkzZ2JETWRMVklHS2RSckY0aSttCkxvU3FaL2xMbTJTKzdKSW5BK0JKVG1UVjNhSjdlV1N4Q1BJRWFxTVc2SzFoQUxqWXJqSml5dk82ZUMzZXgrY2cKVU1jMjNCSlNoNlFkNVN1Z3FoYnNGZDJZdnQ2M3lLSGljMnVHUUJERVBlc09lclNlR21FZTlBZnRwWkxEa1YyWgoybGhOSXdUMXgxdzNGMnQ1Z0xDckJVV3U3UkJzWW9DamR3b1NDbjkvN09PdlN5N2N1OUdSLzRRZHlnRXpQb1V3ClUrT0p5QTB1bnViWHJTaUVlYjBvbmZWa1lCdVhWZGx0RmVyMmpSd3VFOUdrSURMREhZUk5XMksxREhsQ1lzdkYKYzFTMWhnK3ZoL1dteVhzcXhkRXhqNDJtRnp0NU1neWdCamlJMFFJREFRQUJBb0lCQVFDeGZ3a1lGY04xaWlDeQpLY2JVUUo2Mml0V3h4ZUhzRmZBRVVyVy84cmNhL1BncXU3a2xlUnhhZHYzdncrS3BGU05PZHZWZzBsNnppSG9JCkR0Z3pVT2ZqanJrcjNXNWpsb3BpbDBzS0pWYk5uc2xSYnp4VTV4ODh6R1ExNU9RM2RPK0s4UWVoNC96Q0FCTVoKbEE3dk0xdG8xZ2REZ3AydGlub1IrOUNFMEVrengvdnNiVUlWQU4zeGNDWmliUk5LcVFMcnVkZWNFVGJsdGNZZQoxNG9mN1BjZ0duUllkeUpBNjdyNHdMRGM3U1hIeDNRRk1zbkd5ZGwvQ01iL0xXQW8yZi90KzFXZGR2akprZ0lKClVwRGp2YU1XNkp1ek5jbkpRWVI2bTMzWUtRelBLdWRPNXFSNDY5bDVUeGluWGp2dW9qdk1mejNRSWpFTzJpOVYKbGpaUmJ2dWRBb0dCQVBwc042OEJPSk5NMHlZR0J2ZEt0bCs3R0N6bnF2K3UyMVhOS0FBYmFSR1I5WU94d09FZwpWb096eXpwaEQwUjJXUVQ1aHgwenlodUFQYXh6bzhHYng2MWY0NzZoM0x3WnZyU2pwbHkxZytjSVJlTkEwRnkyClZzZ1V4SzI1bEFOSkozK2Fmb05wRWxHeEJvRDFaeGo2WnpNN0gyMGwwNEZtYVp2bCtzTHE1Mk5qQW9HQkFNOGgKdnJwR05nTTdVbENGbHBnQmU5Tmh6cHhtN3p6WnB2Z2ttcitmTnZnZ3E1ck9GU2x0TTJBMmQ3R1ZJTVVZcGlLSwpDc2grNThsZ0greGQxZEhMUVErMnBzaHlXM2lTM2p4MHNEUFkzdjlFZ0x6Y2lDZzN0Zy9TWTFodVcrcjhQYUtMClQ0NmoyS2VVQlI2djY1MFBQU2h3OHBDdFdETHBGbmlRTE41SDhTczdBb0dCQVBORkIzOEJyNlVnbjRvemxyYksKcElvdzVaWlI0NE1JcVZnYnVYMEpJN09HMkR0OEJVUnR0cjJ3Zm4rUzVGTDhxUk8xRjdXZHB2dTZRNjl3a3ljMApudkJrMDRoUUUyL0Rqc2hLcGdVdjdCZ1dxRlhRazlsTTVOYnZuZlNwOEFpVkcwTFJvWThsRmorM3VmcXk2dG1QCi80cjhKMVpQeGJ6UjhVd2FTTlRyZjZiREFvR0FOT0F1YWlybU91ajMyR3BoeVNnSHppeFhyQUZ5N1J1NnpmbTYKTDFTYm1iZnRWclZwSFl3czQxREVPV2NTV0g0MFd2aldTOXhwbXpTWXNhUTZvelc1eENNaWJHVVZDTENsWHRXQwo3WmxkUTlqZTdGZDN3cHlHTTMvSHNKbHJpWThleE5HL1czQmtMRk5UQTBSeFowU3VuaFpITmJ1cW1rUjZZZ2ljCkM1cGQ3R1VDZ1lFQWduUlprM200MmRqbFMrZG1Lc1psUjEvQUlQNXdQZXNDU3NiRTV1YVVBS0p4OWNNQ3c3ckUKcVpNbUJvcFVUNzczSW9YRjBvb3Z3YW00cDk3Snd1cVYxM3h1NlZILzJUbnF0Rkk2b2pwZktzL0UrQ3F2MTlQNwpSYVBEdU9RbTVKekJ1bmJwNWdNaXRaRGtBSVgyYXF0eGFqTng1eHhEeUdTRFZ3akF0blgyK3VrPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
---
# Source: CassLightweight/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: cassandra-custom-chart-headless
  namespace: default
  labels:
    app.kubernetes.io/name: CassLightweight
    helm.sh/chart: CassLightweight-0.1.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: release-service
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: intra
      port: 7000
      targetPort: intra
    - name: tls
      port: 7001
      targetPort: tls
    - name: jmx
      port: 7199
      targetPort: jmx
    - name: cql
      port: 9042
      targetPort: cql
    - name: metrics
      port: 8080
      targetPort: metrics
  selector:
    app.kubernetes.io/name: CassLightweight
    app.kubernetes.io/instance: release-name
---
# Source: CassLightweight/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: cassandra-custom-chart
  labels: 
    app: cassandra-chart
  
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: cql
    port: 9042
    nodePort:             
  - name: cass-metrics
    port: 8080
    nodePort:
---
# Source: CassLightweight/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra-pods
  namespace: default
spec:
  serviceName: cassandra-custom-chart
  replicas: 1
  
  selector:
    matchLabels:
      app: cassandra
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      terminationGracePeriodSeconds: 1800
      volumes:
        - name: cass-persistent
          persistentVolumeClaim:
            claimName: cass-pvc-claim
          retainPolicy:

      containers:
        - name: cassandra
          image: 
            gcr.io/google-samples/cassandra:v13
          imagePullPolicy: 
            IfNotPresent
          ports:
            - containerPort: 8080
              name: metrics
            - containerPort: 7000
              name: intra-node
            - containerPort: 7001
              name: tls-intra-node
            - containerPort: 7199
              name: jmx
            - containerPort: 9042
              name: cql
          resources:
            limits:
              cpu: "500m"
              memory: 1Gi
            requests:
              cpu: "500m"
              memory: 1Gi
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - nodetool drain
          env:
            - name: MAX_HEAP_SIZE
              value: 512M
            - name: HEAP_NEWSIZE
              value: 100M
            - name: CASSANDRA_EXPORTER_CONFIG_listenPort
              value: "8080"
            - name: CASSANDRA_CLIENT_ENCRYPTION
              value: "true"
            - name: CASSANDRA_CQL_PORT_NUMBER
              value: "9042"
            - name: CASSANDRA_JMX_PORT_NUMBER
              value: "5555"
            - name: CASSANDRA_BROADCAST_ADDRESS
              value: 10.1.3.26
            - name: CASSANDRA_RPC_ADDRESS
              value: 0.0.0.0
            - name: CASSANDRA_SEED_PROVIDER
              value: "org.apache.cassandra.locator.SimpleSeedProvider"
            - name: CASSANDRA_CLUSTER_NAME
              value: test-cluster
            - name: CASSANDRA_DC
              value: cass-dc
            - name: CASSANDRA_RACK
              value: rack-1
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - /ready-probe.sh
            initialDelaySeconds: 15
            timeoutSeconds: 5
            
        - name: metrics
          image: bitnami/cassandra-exporter
          imagePullPolicy: "IfNotPresent"
          command:
            null
          args:
            null
