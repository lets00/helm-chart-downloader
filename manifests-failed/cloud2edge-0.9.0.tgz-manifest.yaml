---
# Source: cloud2edge/charts/ditto/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-mongodb
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 6.0.10
    helm.sh/chart: mongodb-13.18.5
secrets:
  - name: my-release-mongodb
automountServiceAccountToken: true
---
# Source: cloud2edge/charts/ditto/templates/serviceaccount.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-ditto
  labels:
    app.kubernetes.io/name: ditto
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/provisioning/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kafka-provisioning
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
automountServiceAccountToken: false
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kafka
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
    app.kubernetes.io/component: kafka
automountServiceAccountToken: false
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-base/hono-adapter-sa.yaml
#
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "my-release-hono-adapter"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "my-release-hono-service-command-router"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
---
# Source: cloud2edge/charts/ditto/templates/gateway-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-ditto-gateway-secret
  labels:
    app.kubernetes.io/name: ditto-gateway-secret
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  devops-password: "WnkwYXNPaVk3SlBJ"
  status-password: "R2x3UFBwS05FaFg0"
---
# Source: cloud2edge/charts/ditto/templates/mongodb-secret.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: Secret
metadata:
  name: my-release-ditto-mongodb-secret
  labels:
    app.kubernetes.io/name: ditto-mongodb-secret
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  connectivity-uri: "bW9uZ29kYjovL215LXJlbGVhc2UtbW9uZ29kYjoyNzAxNy9kaXR0bw=="
  things-uri: "bW9uZ29kYjovL215LXJlbGVhc2UtbW9uZ29kYjoyNzAxNy9kaXR0bw=="
  thingsSearch-uri: "bW9uZ29kYjovL215LXJlbGVhc2UtbW9uZ29kYjoyNzAxNy9kaXR0bw=="
  policies-uri: "bW9uZ29kYjovL215LXJlbGVhc2UtbW9uZ29kYjoyNzAxNy9kaXR0bw=="
---
# Source: cloud2edge/charts/ditto/templates/nginx-auth.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: Secret
metadata:
  name: my-release-nginx-config-nginx-htpasswd
  labels:
    app.kubernetes.io/name: ditto-nginx-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  nginx.htpasswd: |-
        ditto:$2a$10$kqpsPKGsnj80bVvvRVY8geceP3LeWeYj3bFAQXuKndGIZKY/PBL4S
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kafka-user-passwords
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
type: Opaque
data:
  client-passwords: "aG9uby1zZWNyZXQsdmVyeXNlY3JldA=="
  system-user-password: "aG9uby1zZWNyZXQ="
  inter-broker-password: "RXN1WmpJYXZkWg=="
  controller-password: "aVZYcmpFV05oUQ=="
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kafka-kraft-cluster-id
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
type: Opaque
data:
  kraft-cluster-id: "UGFpbzNOWkJUZzdzcjJhTFVBR0pnTQ=="
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kafka-tls-passwords
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
type: Opaque
data:
  keystore-password: "WW94bXVTdnJ5VA=="
  truststore-password: "YVF4UEVIYXFyNg=="
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-amqp/hono-adapter-amqp-example-keys.yaml
#
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-adapter-amqp-example-keys"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-amqp"
type: Opaque
data:
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ2JTcWJTekhiNUYzZ3ZHVW4KM1lvUnZydjdkbHRhR3JKa1hzQmc3dFJSMkxLaFJBTkNBQVRuZ0JpbW1KeFVmWU16VHFBREUwRnFiL1ZKaGs1NQo5b0F3ME5UZEFkMUFJR1MxTERkcnl6TXZWTXoyZDI3ZFk0WDEzNDlUVUxZK1dBQ1E2YnFZekJDUgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNQVENDQWVLZ0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFRNd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl6TURZeU5EQTVNRFl3Ck1Gb1hEVEkwTURZeU16QTVNRFl3TUZvd1dqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZUQVRCZ05WQkFNTQpER0Z0Y1hBdFlXUmhjSFJsY2pCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQk9lQUdLYVluRlI5Cmd6Tk9vQU1UUVdwdjlVbUdUbm4yZ0REUTFOMEIzVUFnWkxVc04ydkxNeTlVelBaM2J0MWpoZlhmajFOUXRqNVkKQUpEcHVwak1FSkdqZ1k4d2dZd3dIUVlEVlIwT0JCWUVGS1ZpZGc5aUhVTjR5RUJ1YjBMTjMrRHhkNjduTUFzRwpBMVVkRHdRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd1B3WURWUjBSCkJEZ3dOb0lSYUc5dWJ5MWhaR0Z3ZEdWeUxXRnRjWENDRm1odmJtOHRZV1JoY0hSbGNpMWhiWEZ3TG1odmJtK0MKQ1d4dlkyRnNhRzl6ZERBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQTBIZWRPaDcvNEZLazk0Y091TVBKNVpwcApHa2dxQWMvOWVaYWg3YkhpWjBFQ0lRRGd2SU9WSkdyaWF1SzVRMlk1elcrNlU5YTFvWExCTnIrRklQcGlvRGFxCkxnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjR6Q0NBWW1nQXdJQkFnSVVEdmZzZXZIcEY3T2JSZUFBbUdYWEhIc0FYRDB3Q2dZSUtvWkl6ajBFQXdJdwpVakVMTUFrR0ExVUVCaE1DUTBFeER6QU5CZ05WQkFjTUJrOTBkR0YzWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6ClpTQkpiMVF4RFRBTEJnTlZCQXNNQkVodmJtOHhEVEFMQmdOVkJBTU1CSEp2YjNRd0hoY05Nak13TmpJME1Ea3cKTmpBd1doY05NalF3TmpJek1Ea3dOakF3V2pCUU1Rc3dDUVlEVlFRR0V3SkRRVEVQTUEwR0ExVUVCd3dHVDNSMApZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0VTRzl1YnpFTE1Ba0dBMVVFCkF3d0NZMkV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFwaG9WN1pKWmc3MVZSbGQ2NlBLaVcKTUhZYXRmTDcxL3h1Z2hoU3NIZmU0R1lOQTZoOXB6NlFiMGU5aDhLajZ0TFRGTlRodlowRTUwMm95NmUvQTV0cQpvejh3UFRBZEJnTlZIUTRFRmdRVWJBeVJSQ1UzWUNwN1pxMVRiR2VXL2ZhZ3FIRXdEd1lEVlIwVEFRSC9CQVV3CkF3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFKYXFVdTRRU0xLM3B3Q2QKTkxtcktIb2w2ZFhxYUtTb0ZVS1lWZEFTc0ZzUkFpQnZYOFhISWRSay9BZWtjRFg0QWVqRGcxVzVFYnZQNXIxdApLaUVzVjFsMVR3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-amqp/hono-adapter-amqp-secret.yaml
#
# Copyright (c) 2019, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-adapter-amqp-conf"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-amqp"
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: 1
      amqp:
        bindAddress: "0.0.0.0"
        keyPath: "/opt/hono/tls/tls.key"
        certPath: "/opt/hono/tls/tls.crt"
        insecurePortEnabled: true
        insecurePortBindAddress: "0.0.0.0"
        tenantIdleTimeout: "1h"
      
      kafka:
        commonClientConfig:
          bootstrap.servers: "my-release-kafka-controller-headless:9092"
          security.protocol: "SASL_SSL"
          sasl.mechanism: "SCRAM-SHA-512"
          sasl.jaas.config: "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"hono\" password=\"hono-secret\";"
          ssl.truststore.type: "PEM"
          ssl.truststore.location: "/opt/hono/tls/ca.crt"
          ssl.endpoint.identification.algorithm: "" # Disables hostname verification. Don't do this in productive setups!
      tenant:
        name: "Hono adapter-amqp"
        host: "my-release-hono-service-device-registry"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
      registration:
        name: "Hono adapter-amqp"
        host: "my-release-hono-service-device-registry"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
      credentials:
        name: "Hono adapter-amqp"
        host: "my-release-hono-service-device-registry"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
      commandRouter:
        name: "Hono adapter-amqp"
        host: "my-release-hono-service-command-router"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false    
    quarkus:
      console:
        color: false
      log:
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
data:
  adapter.credentials: dXNlcm5hbWU9YW1xcC1hZGFwdGVyQEhPTk8KcGFzc3dvcmQ9YW1xcC1zZWNyZXQK
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-http/hono-adapter-http-example-keys.yaml
#
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-adapter-http-example-keys"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-http"
type: Opaque
data:
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZzhZbXI5dkFDMUEzTnVZQloKT2ZyWWpUNzlLYWhSUWo3MVFsOE44Uk1IMHVDaFJBTkNBQVFtd0x1VDR1L0grc2pWUjVpM0NSWEpycnV6bHhhdApUdjBBRkp3U2dUQXNvbG9FalhYRitzdktEZ0puYjE4MHJzWFRndUFMY0h2MVc0RzlYS1ZDVzRGKwotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNQRENDQWVLZ0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFM0d0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl6TURZeU5EQTVNRFl3Ck1Gb1hEVEkwTURZeU16QTVNRFl3TUZvd1dqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZUQVRCZ05WQkFNTQpER2gwZEhBdFlXUmhjSFJsY2pCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkNiQXU1UGk3OGY2CnlOVkhtTGNKRmNtdXU3T1hGcTFPL1FBVW5CS0JNQ3lpV2dTTmRjWDZ5OG9PQW1kdlh6U3V4ZE9DNEF0d2UvVmIKZ2IxY3BVSmJnWDZqZ1k4d2dZd3dIUVlEVlIwT0JCWUVGRDJwQ211Z2lrMmlIZElOeWZYUVVHTDRQZStBTUFzRwpBMVVkRHdRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd1B3WURWUjBSCkJEZ3dOb0lSYUc5dWJ5MWhaR0Z3ZEdWeUxXaDBkSENDRm1odmJtOHRZV1JoY0hSbGNpMW9kSFJ3TG1odmJtK0MKQ1d4dlkyRnNhRzl6ZERBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlCWEJkQU1ibXZUY1FUL2dQRHBmRWZnaFYxOQpWK0J6Uzh1YTFGTzExUWY1a1FJaEFKMFlKVm4vREZTN2ZhMlFLS1JGbTNDcDMwQkdQeGhCRWFVZkJZN1NGZW1YCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWEQwd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpNd05qSTBNRGt3Ck5qQXdXaGNOTWpRd05qSXpNRGt3TmpBd1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRcGhvVjdaSlpnNzFWUmxkNjZQS2lXCk1IWWF0Zkw3MS94dWdoaFNzSGZlNEdZTkE2aDlwejZRYjBlOWg4S2o2dExURk5UaHZaMEU1MDJveTZlL0E1dHEKb3o4d1BUQWRCZ05WSFE0RUZnUVViQXlSUkNVM1lDcDdacTFUYkdlVy9mYWdxSEV3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSmFxVXU0UVNMSzNwd0NkCk5MbXJLSG9sNmRYcWFLU29GVUtZVmRBU3NGc1JBaUJ2WDhYSElkUmsvQWVrY0RYNEFlakRnMVc1RWJ2UDVyMXQKS2lFc1YxbDFUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-http/hono-adapter-http-secret.yaml
#
# Copyright (c) 2019, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-adapter-http-conf"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-http"
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: 1
      http:
        bindAddress: "0.0.0.0"
        insecurePortBindAddress: "0.0.0.0"
        insecurePortEnabled: true
        keyPath: "/opt/hono/tls/tls.key"
        certPath: "/opt/hono/tls/tls.crt"
        tenantIdleTimeout: "1h"
      
      kafka:
        commonClientConfig:
          bootstrap.servers: "my-release-kafka-controller-headless:9092"
          security.protocol: "SASL_SSL"
          sasl.mechanism: "SCRAM-SHA-512"
          sasl.jaas.config: "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"hono\" password=\"hono-secret\";"
          ssl.truststore.type: "PEM"
          ssl.truststore.location: "/opt/hono/tls/ca.crt"
          ssl.endpoint.identification.algorithm: "" # Disables hostname verification. Don't do this in productive setups!
      tenant:
        name: "Hono adapter-http"
        host: "my-release-hono-service-device-registry"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
      registration:
        name: "Hono adapter-http"
        host: "my-release-hono-service-device-registry"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
      credentials:
        name: "Hono adapter-http"
        host: "my-release-hono-service-device-registry"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
      commandRouter:
        name: "Hono adapter-http"
        host: "my-release-hono-service-command-router"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false    
    quarkus:
      console:
        color: false
      log:
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
data:
  adapter.credentials: dXNlcm5hbWU9aHR0cC1hZGFwdGVyQEhPTk8KcGFzc3dvcmQ9aHR0cC1zZWNyZXQK
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-mqtt/hono-adapter-mqtt-example-keys.yaml
#
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-adapter-mqtt-example-keys"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-mqtt"
type: Opaque
data:
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZzZZQUs5OVFIRERkMnlWSEgKWUdVNzlTaFNLaEViN0tuejkyc3VPb3QvZDIyaFJBTkNBQVJ5NE1PR3hoVFVJWEdNWXB0VHQ4Tjc0c3dLZG1UOAo1YjRlUmFlK2p4S0t5WEVha0x4N0tuLzVLckpBdzdhTTZaRTd6bjgwT3pQV05hd1NXTnBpK2pUYwotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNQRENDQWVLZ0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFRBd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl6TURZeU5EQTVNRFl3Ck1Gb1hEVEkwTURZeU16QTVNRFl3TUZvd1dqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZUQVRCZ05WQkFNTQpERzF4ZEhRdFlXUmhjSFJsY2pCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkhMZ3c0YkdGTlFoCmNZeGltMU8zdzN2aXpBcDJaUHpsdmg1RnA3NlBFb3JKY1JxUXZIc3FmL2txc2tERHRvenBrVHZPZnpRN005WTEKckJKWTJtTDZOTnlqZ1k4d2dZd3dIUVlEVlIwT0JCWUVGSVZZeER2VW45MmxIcldJVWFYVkFtZGl5a1MxTUFzRwpBMVVkRHdRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd1B3WURWUjBSCkJEZ3dOb0lSYUc5dWJ5MWhaR0Z3ZEdWeUxXMXhkSFNDRm1odmJtOHRZV1JoY0hSbGNpMXRjWFIwTG1odmJtK0MKQ1d4dlkyRnNhRzl6ZERBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlBQWp4N0Z0SnV0YlpqWWszczZTVzVlZGQrSwo5NWU5UWl0ekFhSGxhVHc4N2dJaEFQbS80dGJaV2pKaXVDWm1NWUNxREFCY2ovWHVncndZbmN3Y0I2eTk4S3hqCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWEQwd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpNd05qSTBNRGt3Ck5qQXdXaGNOTWpRd05qSXpNRGt3TmpBd1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRcGhvVjdaSlpnNzFWUmxkNjZQS2lXCk1IWWF0Zkw3MS94dWdoaFNzSGZlNEdZTkE2aDlwejZRYjBlOWg4S2o2dExURk5UaHZaMEU1MDJveTZlL0E1dHEKb3o4d1BUQWRCZ05WSFE0RUZnUVViQXlSUkNVM1lDcDdacTFUYkdlVy9mYWdxSEV3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSmFxVXU0UVNMSzNwd0NkCk5MbXJLSG9sNmRYcWFLU29GVUtZVmRBU3NGc1JBaUJ2WDhYSElkUmsvQWVrY0RYNEFlakRnMVc1RWJ2UDVyMXQKS2lFc1YxbDFUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-mqtt/hono-adapter-mqtt-secret.yaml
#
# Copyright (c) 2019, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-adapter-mqtt-conf"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-mqtt"
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: 1
      mqtt:
        bindAddress: "0.0.0.0"
        insecurePortBindAddress: "0.0.0.0"
        insecurePortEnabled: true
        keyPath: "/opt/hono/tls/tls.key"
        certPath: "/opt/hono/tls/tls.crt"
        tenantIdleTimeout: "1h"
      
      kafka:
        commonClientConfig:
          bootstrap.servers: "my-release-kafka-controller-headless:9092"
          security.protocol: "SASL_SSL"
          sasl.mechanism: "SCRAM-SHA-512"
          sasl.jaas.config: "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"hono\" password=\"hono-secret\";"
          ssl.truststore.type: "PEM"
          ssl.truststore.location: "/opt/hono/tls/ca.crt"
          ssl.endpoint.identification.algorithm: "" # Disables hostname verification. Don't do this in productive setups!
      tenant:
        name: "Hono adapter-mqtt"
        host: "my-release-hono-service-device-registry"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
      registration:
        name: "Hono adapter-mqtt"
        host: "my-release-hono-service-device-registry"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
      credentials:
        name: "Hono adapter-mqtt"
        host: "my-release-hono-service-device-registry"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
      commandRouter:
        name: "Hono adapter-mqtt"
        host: "my-release-hono-service-command-router"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false    
    quarkus:
      console:
        color: false
      log:
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
data:
  adapter.credentials: dXNlcm5hbWU9bXF0dC1hZGFwdGVyQEhPTk8KcGFzc3dvcmQ9bXF0dC1zZWNyZXQK
---
# Source: cloud2edge/charts/hono/templates/hono-service-auth/hono-service-auth-example-keys.yaml
#
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-service-auth-example-keys"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-auth"
type: Opaque
data:
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ3Zxa2cveDYxOFZLZHdmWVoKNUhkYm1KNk5rdDlRREkvY0lxT3V2OWtIQm5TaFJBTkNBQVNOYmNKYmVEM04zR1Jhem93MVBWYm1lcFAycEJESgpwQTdweUhIbk9lTkxVZjh3QThTcHZIWC9RbDFwQVp4YjBEaGw1ZXIwZnJWcmhuNDJJZmQ1cmp1WgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNPakNDQWVHZ0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFNzd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl6TURZeU5EQTVNRFl3Ck1Gb1hEVEkwTURZeU16QTVNRFl3TUZvd1dURUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZEQVNCZ05WQkFNTQpDMkYxZEdndGMyVnlkbVZ5TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFalczQ1czZzl6ZHhrCldzNk1OVDFXNW5xVDlxUVF5YVFPNmNoeDV6bmpTMUgvTUFQRXFieDEvMEpkYVFHY1c5QTRaZVhxOUg2MWE0WisKTmlIM2VhNDdtYU9CanpDQmpEQWRCZ05WSFE0RUZnUVVtZkJ0Y293czZrekNCaVBORDZjbmxVN1F5QkV3Q3dZRApWUjBQQkFRREFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBL0JnTlZIUkVFCk9EQTJnaEZvYjI1dkxYTmxjblpwWTJVdFlYVjBhSUlXYUc5dWJ5MXpaWEoyYVdObExXRjFkR2d1YUc5dWI0SUoKYkc5allXeG9iM04wTUFvR0NDcUdTTTQ5QkFNQ0EwY0FNRVFDSUN1RG9oaHdFRG1nc3J6Vld2T2JVNElaTjEwZApMYU4wTmI1QzI1RVo2TmNXQWlCeFJzbTRTQ0YyK3F2OHBSRGZCZkhQZCtPMGxRWm8xMWhuRng0SWxaYUZ0QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWEQwd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpNd05qSTBNRGt3Ck5qQXdXaGNOTWpRd05qSXpNRGt3TmpBd1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRcGhvVjdaSlpnNzFWUmxkNjZQS2lXCk1IWWF0Zkw3MS94dWdoaFNzSGZlNEdZTkE2aDlwejZRYjBlOWg4S2o2dExURk5UaHZaMEU1MDJveTZlL0E1dHEKb3o4d1BUQWRCZ05WSFE0RUZnUVViQXlSUkNVM1lDcDdacTFUYkdlVy9mYWdxSEV3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSmFxVXU0UVNMSzNwd0NkCk5MbXJLSG9sNmRYcWFLU29GVUtZVmRBU3NGc1JBaUJ2WDhYSElkUmsvQWVrY0RYNEFlakRnMVc1RWJ2UDVyMXQKS2lFc1YxbDFUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: cloud2edge/charts/hono/templates/hono-service-auth/hono-service-auth-secret.yaml
#
# Copyright (c) 2019, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-service-auth-conf"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-auth"
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: 1
      auth:
        amqp:
          bindAddress: "0.0.0.0"
          keyPath: "/opt/hono/tls/tls.key"
          certPath: "/opt/hono/tls/tls.crt"
        svc:
          permissionsPath: /var/run/hono/auth/permissions.json
          signing:
            tokenExpiration: 3600
          supportedSaslMechanisms: PLAIN    
    quarkus:
      console:
        color: false
      log:
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
data:
  permissions.json: ewogICJyb2xlcyI6IHsKICAgICJwcm90b2NvbC1hZGFwdGVyIjogWwogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInRlbGVtZXRyeS8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAicmVzb3VyY2UiOiAiZXZlbnQvKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInJlZ2lzdHJhdGlvbi8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiLCAiV1JJVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJvcGVyYXRpb24iOiAicmVnaXN0cmF0aW9uLyo6YXNzZXJ0IiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIkVYRUNVVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJvcGVyYXRpb24iOiAicmVnaXN0cmF0aW9uLyo6Z2V0IiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIkVYRUNVVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJjcmVkZW50aWFscy8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiLCAiV1JJVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJvcGVyYXRpb24iOiAiY3JlZGVudGlhbHMvKjpnZXQiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiRVhFQ1VURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInRlbmFudCIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiwgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAib3BlcmF0aW9uIjogInRlbmFudC8qOioiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiRVhFQ1VURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogImNtZF9yb3V0ZXIvKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiwgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAib3BlcmF0aW9uIjogImNtZF9yb3V0ZXIvKjoqIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIkVYRUNVVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJkZXZpY2VfY29uLyoiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiUkVBRCIsICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgIm9wZXJhdGlvbiI6ICJkZXZpY2VfY29uLyo6KiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJFWEVDVVRFIiBdCiAgICAgIH0KICAgIF0sCiAgICAiY29tbWFuZC1yb3V0ZXIiOiBbCiAgICAgIHsKICAgICAgICAicmVzb3VyY2UiOiAidGVuYW50IiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiLCAiV1JJVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJvcGVyYXRpb24iOiAidGVuYW50Lyo6KiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJFWEVDVVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAicmVzb3VyY2UiOiAicmVnaXN0cmF0aW9uLyoiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiUkVBRCIsICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgIm9wZXJhdGlvbiI6ICJyZWdpc3RyYXRpb24vKjoqIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIkVYRUNVVEUiIF0KICAgICAgfQogICAgXSwKICAgICJkZXZpY2UtbWFuYWdlciI6IFsKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJyZWdpc3RyYXRpb24vKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiwgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAib3BlcmF0aW9uIjogInJlZ2lzdHJhdGlvbi8qOioiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiRVhFQ1VURSIgXQogICAgICB9CiAgICBdLAogICAgImFwcGxpY2F0aW9uIjogWwogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInRlbGVtZXRyeS8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJldmVudC8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJjb250cm9sLyoiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiUkVBRCIsICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogImNvbW1hbmQvKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogImNvbW1hbmRfcmVzcG9uc2UvKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiBdCiAgICAgIH0KICAgIF0KICB9LAogICJ1c2VycyI6IHsKICAgICJjb2FwLWFkYXB0ZXJASE9OTyI6IHsKICAgICAgIm1lY2hhbmlzbSI6ICJQTEFJTiIsCiAgICAgICJwYXNzd29yZCI6ICJjb2FwLXNlY3JldCIsCiAgICAgICJhdXRob3JpdGllcyI6IFsgImhvbm8tY29tcG9uZW50IiwgInByb3RvY29sLWFkYXB0ZXIiIF0KICAgIH0sCiAgICAiaHR0cC1hZGFwdGVyQEhPTk8iOiB7CiAgICAgICJtZWNoYW5pc20iOiAiUExBSU4iLAogICAgICAicGFzc3dvcmQiOiAiaHR0cC1zZWNyZXQiLAogICAgICAiYXV0aG9yaXRpZXMiOiBbICJob25vLWNvbXBvbmVudCIsICJwcm90b2NvbC1hZGFwdGVyIiBdCiAgICB9LAogICAgImxvcmEtYWRhcHRlckBIT05PIjogewogICAgICAibWVjaGFuaXNtIjogIlBMQUlOIiwKICAgICAgInBhc3N3b3JkIjogImxvcmEtc2VjcmV0IiwKICAgICAgImF1dGhvcml0aWVzIjogWyAiaG9uby1jb21wb25lbnQiLCAicHJvdG9jb2wtYWRhcHRlciIgXQogICAgfSwKICAgICJtcXR0LWFkYXB0ZXJASE9OTyI6IHsKICAgICAgIm1lY2hhbmlzbSI6ICJQTEFJTiIsCiAgICAgICJwYXNzd29yZCI6ICJtcXR0LXNlY3JldCIsCiAgICAgICJhdXRob3JpdGllcyI6IFsgImhvbm8tY29tcG9uZW50IiwgInByb3RvY29sLWFkYXB0ZXIiIF0KICAgIH0sCiAgICAiYW1xcC1hZGFwdGVyQEhPTk8iOiB7CiAgICAgICJtZWNoYW5pc20iOiAiUExBSU4iLAogICAgICAicGFzc3dvcmQiOiAiYW1xcC1zZWNyZXQiLAogICAgICAiYXV0aG9yaXRpZXMiOiBbICJob25vLWNvbXBvbmVudCIsICJwcm90b2NvbC1hZGFwdGVyIiBdCiAgICB9LAogICAgImNvbW1hbmQtcm91dGVyQEhPTk8iOiB7CiAgICAgICJtZWNoYW5pc20iOiAiUExBSU4iLAogICAgICAicGFzc3dvcmQiOiAiY21kLXJvdXRlci1zZWNyZXQiLAogICAgICAiYXV0aG9yaXRpZXMiOiBbICJob25vLWNvbXBvbmVudCIsICJjb21tYW5kLXJvdXRlciIgXQogICAgfSwKICAgICJob25vLWNsaWVudEBIT05PIjogewogICAgICAibWVjaGFuaXNtIjogIlBMQUlOIiwKICAgICAgInBhc3N3b3JkIjogInNlY3JldCIsCiAgICAgICJhdXRob3JpdGllcyI6IFsgInByb3RvY29sLWFkYXB0ZXIiLCAiZGV2aWNlLW1hbmFnZXIiIF0KICAgIH0sCiAgICAiZGV2aWNlLXJlZ2lzdHJ5IjogewogICAgICAibWVjaGFuaXNtIjogIkVYVEVSTkFMIiwKICAgICAgImF1dGhvcml0aWVzIjogW10KICAgIH0sCiAgICAiY29uc3VtZXJASE9OTyI6IHsKICAgICAgIm1lY2hhbmlzbSI6ICJQTEFJTiIsCiAgICAgICJwYXNzd29yZCI6ICJ2ZXJ5c2VjcmV0IiwKICAgICAgImF1dGhvcml0aWVzIjogWyAiYXBwbGljYXRpb24iIF0KICAgIH0KICB9Cn0K
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-example-keys.yaml
#
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-service-command-router-example-keys"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-command-router"
type: Opaque
data:
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ2ZMQ3RKNTJiZGM3WE5sTEMKVkVhamFPM3lmOW91c1hnQy96VTJneUNpd2dtaFJBTkNBQVRham9lem1Bc2R4M09BWDN1c2gxWktNcVEyZUw1Rwpkcm5EZnpnT2NxTnBUMHJvRTFsNXAxQmdmU3oxZkNzRzhnUG0wSStkM2dWa040aFpSYS83R1FXTgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVakNDQWZpZ0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFMwd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl6TURZeU5EQTVNRFl3Ck1Gb1hEVEkwTURZeU16QTVNRFl3TUZvd1hERUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZ6QVZCZ05WQkFNTQpEbU52YlcxaGJtUXRjbTkxZEdWeU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRTJvNkhzNWdMCkhjZHpnRjk3cklkV1NqS2tObmkrUm5hNXczODREbktqYVU5SzZCTlplYWRRWUgwczlYd3JCdklENXRDUG5kNEYKWkRlSVdVV3YreGtGamFPQm96Q0JvREFkQmdOVkhRNEVGZ1FVVDV5QXZoQTlUVWZORUZSZUJnNWhBTCtPeGk4dwpDd1lEVlIwUEJBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQlRCZ05WCkhSRUVUREJLZ2h0b2IyNXZMWE5sY25acFkyVXRZMjl0YldGdVpDMXliM1YwWlhLQ0lHaHZibTh0YzJWeWRtbGoKWlMxamIyMXRZVzVrTFhKdmRYUmxjaTVvYjI1dmdnbHNiMk5oYkdodmMzUXdDZ1lJS29aSXpqMEVBd0lEU0FBdwpSUUloQUtNc08yVHB5Qnl2V0JuWTVXTTNrdStuNGFESEM2MXNpSGhObVR2VURodXJBaUJpb3lDUGx3SThveFRzCmZRcDAyelRSa3dCbWIxMHJMRUhaTm1jRkVWcGNWQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWEQwd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpNd05qSTBNRGt3Ck5qQXdXaGNOTWpRd05qSXpNRGt3TmpBd1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRcGhvVjdaSlpnNzFWUmxkNjZQS2lXCk1IWWF0Zkw3MS94dWdoaFNzSGZlNEdZTkE2aDlwejZRYjBlOWg4S2o2dExURk5UaHZaMEU1MDJveTZlL0E1dHEKb3o4d1BUQWRCZ05WSFE0RUZnUVViQXlSUkNVM1lDcDdacTFUYkdlVy9mYWdxSEV3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSmFxVXU0UVNMSzNwd0NkCk5MbXJLSG9sNmRYcWFLU29GVUtZVmRBU3NGc1JBaUJ2WDhYSElkUmsvQWVrY0RYNEFlakRnMVc1RWJ2UDVyMXQKS2lFc1YxbDFUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-secret.yaml
#
# Copyright (c) 2021 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-service-command-router-conf"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-command-router"
type: Opaque
stringData:
  dns-cache-config.properties: |
    networkaddress.cache.negative.ttl=0
  application.yml: |
    hono:
      app:
        # The embedded cache is created for each service instance being deployed, so
        # we need to limit the number to one instance in order to ensure consistent cache content
        maxInstances: 1
      auth:
        host: "my-release-hono-service-auth"
        port: 5671
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
        name: "Hono service-command-router"
      commandRouter:
        amqp:
          bindAddress: "0.0.0.0"
          keyPath: "/opt/hono/tls/tls.key"
          certPath: "/opt/hono/tls/tls.crt"
        cache:
      registration:
        name: "Hono service-command-router"
        host: "my-release-hono-service-device-registry"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
      tenant:
        name: "Hono service-command-router"
        host: "my-release-hono-service-device-registry"
        port: 5671
        credentialsPath: "/opt/hono/config/adapter.credentials"
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
      
      kafka:
        commonClientConfig:
          bootstrap.servers: "my-release-kafka-controller-headless:9092"
          security.protocol: "SASL_SSL"
          sasl.mechanism: "SCRAM-SHA-512"
          sasl.jaas.config: "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"hono\" password=\"hono-secret\";"
          ssl.truststore.type: "PEM"
          ssl.truststore.location: "/opt/hono/tls/ca.crt"
          ssl.endpoint.identification.algorithm: "" # Disables hostname verification. Don't do this in productive setups!    
    quarkus:
      console:
        color: false
      log:
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
  cache-config.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <!-- 
        Copyright (c) 2021, 2022 Contributors to the Eclipse Foundation
       
        See the NOTICE file(s) distributed with this work for additional
        information regarding copyright ownership.
       
        This program and the accompanying materials are made available under the
        terms of the Eclipse Public License 2.0 which is available at
        http://www.eclipse.org/legal/epl-2.0
       
        SPDX-License-Identifier: EPL-2.0
     -->
    <infinispan
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="urn:infinispan:config:13.0 https://infinispan.org/schemas/infinispan-config-13.0.xsd"
            xmlns="urn:infinispan:config:13.0">
    
      <cache-container default-cache="command-router">
        <local-cache name="command-router" simple-cache="true">
          <encoding media-type="application/x-protostream" />
          <memory max-count="200" storage="OFF_HEAP" when-full="REMOVE"></memory>
        </local-cache>
      </cache-container>
    </infinispan>
    
data:
  adapter.credentials: dXNlcm5hbWU9Y29tbWFuZC1yb3V0ZXJASE9OTwpwYXNzd29yZD1jbWQtcm91dGVyLXNlY3JldAo=
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-base/hono-service-device-registry-example-keys.yaml
#
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-service-device-registry-example-keys"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-device-registry"
type: Opaque
data:
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ2hoenZNRUROWjIyanpxcTAKLyt1Ym9nbHNmUTVvZXpYMlQxdGRiNWxocUNxaFJBTkNBQVFQMWwxdXU1c0c3VGNuT3NKVnJPREVIcVBLbFVoNgpBcFFQMEh3aERFTmhvbVhnK1NLTFV4aVZiQmtsM2dTb3FhQUxLbDQyWTRUMTNvRmN0ay9CeURNagotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNWakNDQWZ1Z0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFN3d0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl6TURZeU5EQTVNRFl3Ck1Gb1hEVEkwTURZeU16QTVNRFl3TUZvd1hURUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEdEQVdCZ05WQkFNTQpEMlJsZG1salpTMXlaV2RwYzNSeWVUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJBL1dYVzY3Cm13YnROeWM2d2xXczRNUWVvOHFWU0hvQ2xBL1FmQ0VNUTJHaVplRDVJb3RUR0pWc0dTWGVCS2lwb0FzcVhqWmoKaFBYZWdWeTJUOEhJTXlPamdhVXdnYUl3SFFZRFZSME9CQllFRkdxRzJUTDZBOGhjdlhLNitERG5EVUdNUi9xdgpNQXNHQTFVZER3UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdWUVlEClZSMFJCRTR3VElJY2FHOXVieTF6WlhKMmFXTmxMV1JsZG1salpTMXlaV2RwYzNSeWVZSWhhRzl1YnkxelpYSjIKYVdObExXUmxkbWxqWlMxeVpXZHBjM1J5ZVM1b2IyNXZnZ2xzYjJOaGJHaHZjM1F3Q2dZSUtvWkl6ajBFQXdJRApTUUF3UmdJaEFPeXRtL2JFY2FrbmZ0citQTkJrU1BZeXZZaHo3elgzZ1A1ZENGeFo2TjJ5QWlFQXVaMUY1TndSCjI4aDdpRnhtQThxV0hsbStVeWs1VkhvajFtcTFEZTcrZU5nPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCNHpDQ0FZbWdBd0lCQWdJVUR2ZnNldkhwRjdPYlJlQUFtR1hYSEhzQVhEMHdDZ1lJS29aSXpqMEVBd0l3ClVqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUVDZ3dMUldOc2FYQnoKWlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eERUQUxCZ05WQkFNTUJISnZiM1F3SGhjTk1qTXdOakkwTURrdwpOakF3V2hjTk1qUXdOakl6TURrd05qQXdXakJRTVFzd0NRWURWUVFHRXdKRFFURVBNQTBHQTFVRUJ3d0dUM1IwCllYZGhNUlF3RWdZRFZRUUtEQXRGWTJ4cGNITmxJRWx2VkRFTk1Bc0dBMVVFQ3d3RVNHOXViekVMTUFrR0ExVUUKQXd3Q1kyRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUXBob1Y3WkpaZzcxVlJsZDY2UEtpVwpNSFlhdGZMNzEveHVnaGhTc0hmZTRHWU5BNmg5cHo2UWIwZTloOEtqNnRMVEZOVGh2WjBFNTAyb3k2ZS9BNXRxCm96OHdQVEFkQmdOVkhRNEVGZ1FVYkF5UlJDVTNZQ3A3WnExVGJHZVcvZmFncUhFd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QUxCZ05WSFE4RUJBTUNBUVl3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQUphcVV1NFFTTEszcHdDZApOTG1yS0hvbDZkWHFhS1NvRlVLWVZkQVNzRnNSQWlCdlg4WEhJZFJrL0Fla2NEWDRBZWpEZzFXNUVidlA1cjF0CktpRXNWMWwxVHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-mongodb/hono-service-device-registry-secret.yaml
#
# Copyright (c) 2020, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-hono-service-device-registry-conf"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-device-registry"
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: 1
      auth:
        host: "my-release-hono-service-auth"
        port: 5671
        trustStorePath: "/opt/hono/tls/ca.crt"
        hostnameVerificationRequired: false
        name: "Hono service-device-registry"
        supportedSaslMechanisms: "PLAIN"
        connectTimeout: 2000
      registry:
        amqp:
          bindAddress: "0.0.0.0"
          keyPath: "/opt/hono/tls/tls.key"
          certPath: "/opt/hono/tls/tls.crt"
        http:
          authenticationRequired: false
          bindAddress: "0.0.0.0"
          keyPath: "/opt/hono/tls/tls.key"
          certPath: "/opt/hono/tls/tls.crt"
          insecurePortEnabled: true
          insecurePortBindAddress: "0.0.0.0"
          deviceIdPattern: "^[a-zA-Z0-9-_\\.\\:]+$"
      mongodb:
        dbName: hono
        host: 'my-release-mongodb'
        port: 27017
      
      kafka:
        commonClientConfig:
          bootstrap.servers: "my-release-kafka-controller-headless:9092"
          security.protocol: "SASL_SSL"
          sasl.mechanism: "SCRAM-SHA-512"
          sasl.jaas.config: "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"hono\" password=\"hono-secret\";"
          ssl.truststore.type: "PEM"
          ssl.truststore.location: "/opt/hono/tls/ca.crt"
          ssl.endpoint.identification.algorithm: "" # Disables hostname verification. Don't do this in productive setups!    
    quarkus:
      console:
        color: false
      log:
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
---
# Source: cloud2edge/charts/hono/templates/kafka/kafka-example-keys.yaml
#
# Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  
  name: "my-release-kafka-example-keys"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "kafka"
    helm.sh/chart: "kafka-26.11.4"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "3.6.1"
    app.kubernetes.io/component: "kafka"
type: Opaque
data:
  "ca.crt": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWEQwd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpNd05qSTBNRGt3Ck5qQXdXaGNOTWpRd05qSXpNRGt3TmpBd1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFRcGhvVjdaSlpnNzFWUmxkNjZQS2lXCk1IWWF0Zkw3MS94dWdoaFNzSGZlNEdZTkE2aDlwejZRYjBlOWg4S2o2dExURk5UaHZaMEU1MDJveTZlL0E1dHEKb3o4d1BUQWRCZ05WSFE0RUZnUVViQXlSUkNVM1lDcDdacTFUYkdlVy9mYWdxSEV3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSmFxVXU0UVNMSzNwd0NkCk5MbXJLSG9sNmRYcWFLU29GVUtZVmRBU3NGc1JBaUJ2WDhYSElkUmsvQWVrY0RYNEFlakRnMVc1RWJ2UDVyMXQKS2lFc1YxbDFUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "tls.crt": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNQakNDQWVPZ0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFRVd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl6TURZeU5EQTVNRFl3Ck1Gb1hEVEkwTURZeU16QTVNRFl3TUZvd1V6RUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eERqQU1CZ05WQkFNTQpCV3RoWm10aE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRU0yTitMS0kyYWEwNS83cVI0cDNMCnRMM3hwdGlQRXJDSU0rb0NIdGY2NTZaMDVMRWZsOTRlVzI4VWpOSVppTGVkMmpPdWptaWQyNEpyRE9laFVnS3YKaXFPQmx6Q0JsREFkQmdOVkhRNEVGZ1FVaXUzSytxVEpQZ29GNXYxTGFUb1FDREdXYlNvd0N3WURWUjBQQkFRRApBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQkhCZ05WSFJFRVFEQStnaFVxCkxtaHZibTh0YTJGbWEyRXRhR1ZoWkd4bGMzT0NHaW91YUc5dWJ5MXJZV1pyWVMxb1pXRmtiR1Z6Y3k1b2IyNXYKZ2dsc2IyTmhiR2h2YzNRd0NnWUlLb1pJemowRUF3SURTUUF3UmdJaEFPZHhGTjlhMHNKc29WWGdJbFo3VUZUWQpDMnpmVXNvVld4WlBZdkJVenhnbUFpRUE5OHhFd3lYUFlPME5leGR2bFNNTzNScW5lNEVHMU81cjRTQmIxRWFnCkJzaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjR6Q0NBWW1nQXdJQkFnSVVEdmZzZXZIcEY3T2JSZUFBbUdYWEhIc0FYRDB3Q2dZSUtvWkl6ajBFQXdJdwpVakVMTUFrR0ExVUVCaE1DUTBFeER6QU5CZ05WQkFjTUJrOTBkR0YzWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6ClpTQkpiMVF4RFRBTEJnTlZCQXNNQkVodmJtOHhEVEFMQmdOVkJBTU1CSEp2YjNRd0hoY05Nak13TmpJME1Ea3cKTmpBd1doY05NalF3TmpJek1Ea3dOakF3V2pCUU1Rc3dDUVlEVlFRR0V3SkRRVEVQTUEwR0ExVUVCd3dHVDNSMApZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0VTRzl1YnpFTE1Ba0dBMVVFCkF3d0NZMkV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFwaG9WN1pKWmc3MVZSbGQ2NlBLaVcKTUhZYXRmTDcxL3h1Z2hoU3NIZmU0R1lOQTZoOXB6NlFiMGU5aDhLajZ0TFRGTlRodlowRTUwMm95NmUvQTV0cQpvejh3UFRBZEJnTlZIUTRFRmdRVWJBeVJSQ1UzWUNwN1pxMVRiR2VXL2ZhZ3FIRXdEd1lEVlIwVEFRSC9CQVV3CkF3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFKYXFVdTRRU0xLM3B3Q2QKTkxtcktIb2w2ZFhxYUtTb0ZVS1lWZEFTc0ZzUkFpQnZYOFhISWRSay9BZWtjRFg0QWVqRGcxVzVFYnZQNXIxdApLaUVzVjFsMVR3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "tls.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ3BQemdHRXdldkZCNWcxbG8KWTYrUGNnWHZrK2VqVDZPR05veGJ3VEVjTUJXaFJBTkNBQVF6WTM0c29qWnByVG4vdXBIaW5jdTB2ZkdtMkk4UwpzSWd6NmdJZTEvcm5wblRrc1IrWDNoNWJieFNNMGhtSXQ1M2FNNjZPYUozYmdtc001NkZTQXErSwotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cloud2edge/templates/permissions-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: permissions
  namespace: cloud2edge-0.9.0.tgz
  labels:
    app.kubernetes.io/name: cloud2edge
    helm.sh/chart: cloud2edge-0.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.9.0
type: Opaque
stringData:
  permissions.json: |
    {
      "roles": {
        "protocol-adapter": [
          {
            "resource": "telemetry/*",
            "activities": [ "WRITE" ]
          },
          {
            "resource": "event/*",
            "activities": [ "WRITE" ]
          },
          {
            "resource": "registration/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "registration/*:assert",
            "activities": [ "EXECUTE" ]
          },
          {
            "operation": "registration/*:get",
            "activities": [ "EXECUTE" ]
          },
          {
            "resource": "credentials/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "credentials/*:get",
            "activities": [ "EXECUTE" ]
          },
          {
            "resource": "tenant",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "tenant/*:*",
            "activities": [ "EXECUTE" ]
          },
          {
            "resource": "cmd_router/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "cmd_router/*:*",
            "activities": [ "EXECUTE" ]
          },
          {
            "resource": "device_con/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "device_con/*:*",
            "activities": [ "EXECUTE" ]
          }
        ],
        "command-router": [
          {
            "resource": "tenant",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "tenant/*:*",
            "activities": [ "EXECUTE" ]
          },
          {
            "resource": "registration/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "registration/*:*",
            "activities": [ "EXECUTE" ]
          }
        ],
        "device-manager": [
          {
            "resource": "registration/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "registration/*:*",
            "activities": [ "EXECUTE" ]
          }
        ],
        "application_all_tenants": [
          {
            "resource": "telemetry/*",
            "activities": [ "READ" ]
          },
          {
            "resource": "event/*",
            "activities": [ "READ" ]
          },
          {
            "resource": "command/*",
            "activities": [ "WRITE" ]
          },
          {
            "resource": "command_response/*",
            "activities": [ "READ" ]
          }
        ],
        "application_c2e": [
          {
            "resource": "telemetry/org.eclipse.packages.c2e",
            "activities": [ "READ" ]
          },
          {
            "resource": "event/org.eclipse.packages.c2e",
            "activities": [ "READ" ]
          },
          {
            "resource": "command/org.eclipse.packages.c2e",
            "activities": [ "WRITE" ]
          },
          {
            "resource": "command_response/org.eclipse.packages.c2e/*",
            "activities": [ "READ" ]
          }
        ]
      },
      "users": {
        "coap-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "coap-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "http-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "http-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "lora-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "lora-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "mqtt-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "mqtt-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "amqp-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "amqp-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "kura-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "kura-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "command-router@HONO": {
          "mechanism": "PLAIN",
          "password": "cmd-router-secret",
          "authorities": [ "hono-component", "command-router" ]
        },
        "hono-client@HONO": {
          "mechanism": "PLAIN",
          "password": "secret",
          "authorities": [ "protocol-adapter", "device-manager" ]
        },
        "device-registry": {
          "mechanism": "EXTERNAL",
          "authorities": []
        },
        "consumer@HONO": {
          "mechanism": "PLAIN",
          "password": "verysecret",
          "authorities": [ "application_all_tenants" ]
        },
        "ditto-c2e": {
          "mechanism": "PLAIN",
          "password": "verysecret",
          "authorities": [ "application_c2e" ]
        }
      }
    }
---
# Source: cloud2edge/templates/post-install-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "my-release-post-install-data"
  namespace: cloud2edge-0.9.0.tgz
  labels:
    app.kubernetes.io/name: cloud2edge
    helm.sh/chart: cloud2edge-0.9.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.9.0
type: Opaque
stringData:
  post-install.sh: |
    #!/bin/sh
    #*******************************************************************************
    # Copyright (c) 2023 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    #*******************************************************************************
    
    DITTO_DEVOPS_USER_PW="devops:$(cat /var/run/c2e/ditto-gw-users/devops-password)"
    DEVICE_REGISTRY_URL_SCHEME="https"
    DEVICE_REGISTRY_PORT=$([ "${DEVICE_REGISTRY_URL_SCHEME}" = "http" ] && echo "8080" || echo "8443")
    DEVICE_REGISTRY_BASE_URL="${DEVICE_REGISTRY_URL_SCHEME}://my-release-hono-service-device-registry:${DEVICE_REGISTRY_PORT}/v1"
    DITTO_CONNECTIONS_BASE_URL="http://my-release-ditto-nginx:8080/api/2/connections"
    DITTO_THINGS_BASE_URL="http://my-release-ditto-nginx:8080/api/2/things"
    
    DEMO_TENANT="org.eclipse.packages.c2e"
    DEMO_DEVICE="$DEMO_TENANT:demo-device"
    IS_USING_AMQP="false"
    IS_USING_KAFKA="true"
    
    check_status() {
      exit_code="$1"
      response_body_and_status="$2"
    
      if [ "$exit_code" -ne 0 ]; then
        echo "curl command failed [exit-code: $exit_code]"
        exit 1
      fi
      http_code=$(echo "$response_body_and_status" | tail -n1) # get last line
      body=$(echo "$response_body_and_status" | sed '$ d') # get all but last line
      # echo "DEBUG: Got [status: $http_code, response: $body]"
      if [ "$http_code" -eq "409" ]; then
        # HTTP 409 Conflict (e.g. "device already exists") ignored here
        echo "Ignoring Http response 409 [$body]"
      elif [ "$http_code" -ge "400" ]; then
        echo "Http request failed [status: $http_code, response: $body]"
        exit 1
      fi
    }
    
    add_hono_tenant(){
      tenant_id="$1"
      http_request_body="$2"
    
      echo "Adding tenant [$tenant_id]"
      response_body_and_status=$(curl --silent --write-out "\n%{http_code}" -k \
                        -X POST --header 'Content-Type: application/json' \
                        --data-raw "$http_request_body" "$DEVICE_REGISTRY_BASE_URL/tenants/$tenant_id")
      check_status $? "$response_body_and_status"
    }
    
    register_hono_device(){
      tenant_id="$1"
      device_id="$2"
      http_request_body="$3"
    
      echo "Registering device [tenant: $tenant_id, device: $device_id]"
      response_body_and_status=$(curl --silent --write-out "\n%{http_code}" -k \
                      -X POST --header 'Content-Type: application/json' \
                      --data-raw "$http_request_body" "$DEVICE_REGISTRY_BASE_URL/devices/$tenant_id/$device_id")
      check_status $? "$response_body_and_status"
    }
    
    add_hono_device_credentials(){
      tenant_id="$1"
      device_id="$2"
      http_request_body_file="$3"
    
      echo "Adding credentials [tenant: $tenant_id, device: $device_id]"
      response_body_and_status=$(curl --silent --write-out "\n%{http_code}" -k \
                    -X PUT --header 'Content-Type: application/json' \
                    --data-binary "@$http_request_body_file" "$DEVICE_REGISTRY_BASE_URL/credentials/$tenant_id/$device_id")
      check_status $? "$response_body_and_status"
    }
    
    add_connection_in_ditto(){
      connection_id_prefix="$1"
      tenant_id="$2"
      http_request_body_file="$3"
    
      tenant_adapted=$(echo "$tenant_id" | sed "s/\./_/g")
      connection_id="${connection_id_prefix}${tenant_adapted}"
      echo "Adding ditto connection '$connection_id' [URL: ${DITTO_CONNECTIONS_BASE_URL}/${connection_id}]"
      response_body_and_status=$(curl --silent --write-out "\n%{http_code}" \
                    -X PUT -u "$DITTO_DEVOPS_USER_PW" --header 'Content-Type: application/json' \
                    --data-binary "@$http_request_body_file" "${DITTO_CONNECTIONS_BASE_URL}/${connection_id}")
      check_status $? "$response_body_and_status"
    }
    
    add_ditto_device(){
      device="$1"
      http_request_body_file="$2"
      
      echo "Adding ditto thing '$device' [URL: $DITTO_THINGS_BASE_URL/$device]"
      response_body_and_status=$(curl --silent --write-out "\n%{http_code}" \
                    -X PUT -u ditto:ditto --header 'Content-Type: application/json' \
                    --data-binary "@$http_request_body_file" "$DITTO_THINGS_BASE_URL/$device")
      check_status $? "$response_body_and_status"
    }
    
    # ----------------------------------------------
    
    echo "Device Registry Http endpoint base url: $DEVICE_REGISTRY_BASE_URL"
    add_hono_tenant "$DEMO_TENANT" "{}"
    register_hono_device "$DEMO_TENANT" "$DEMO_DEVICE" "{}"
    add_hono_device_credentials "$DEMO_TENANT" "$DEMO_DEVICE" "demo-device-credentials.json"
    
    if [ "$IS_USING_AMQP" = "true" ]; then
      add_connection_in_ditto "hono-amqp-connection-for-" "$DEMO_TENANT" "hono-amqp-connection.json"
    fi
    if [ "$IS_USING_KAFKA" = "true" ]; then
      cp hono-kafka-connection.json /tmp/hono-kafka-connection.json
      chmod 777 /tmp/hono-kafka-connection.json
      certPath=/var/run/c2e/kafka-connection-cert/tls.crt
      if [ -e $certPath ]; then
          echo "Adapting hono-kafka-connection.json"
          # Necessary transformation in order to comply with the expected format of certificates
          # imposed by the Ditto connectivity API: "ca": "-----BEGIN CERTIFICATE-----\n<trusted certificate>\n-----END CERTIFICATE-----"
          cert="$(< $certPath tr -d '\n' | sed 's/E-----/E-----\\\\n/g' | sed 's/-----END/\\\\n-----END/g')"
          sed -i '/uri/ a '"\"ca\": \"$cert\","'' /tmp/hono-kafka-connection.json
      fi
      add_connection_in_ditto "hono-kafka-connection-for-" "$DEMO_TENANT" "/tmp/hono-kafka-connection.json"
    fi
    
    add_ditto_device "$DEMO_DEVICE" "demo-device-thing.json"
    
    echo "DONE"
    
  demo-device-thing.json: |
    {
        "_policy": {
            "entries": {
                "DEFAULT": {
                    "subjects": {
                        "nginx:ditto": {
                            "type": "Ditto user authenticated via nginx"
                        }
                    },
                    "resources": {
                        "thing:/": {
                            "grant": ["READ", "WRITE"],
                            "revoke": []
                        },
                        "policy:/": {
                            "grant": ["READ", "WRITE"],
                            "revoke": []
                        },
                        "message:/": {
                            "grant": ["READ", "WRITE"],
                            "revoke": []
                        }
                    }
                },
                "HONO": {
                    "subjects": {
                        "pre-authenticated:hono-connection-org.eclipse.packages.c2e": {
                            "type": "Connection to Eclipse Hono"
                        }
                    },
                    "resources": {
                        "thing:/": {
                            "grant": ["READ", "WRITE"],
                            "revoke": []
                        },
                        "message:/": {
                            "grant": ["READ", "WRITE"],
                            "revoke": []
                        }
                    }
                }
            }
        },
        "attributes": {
            "location": "Germany"
        },
        "features": {
            "temperature": {
                "properties": {
                    "value": null
                }
            },
            "humidity": {
                "properties": {
                    "value": null
                }
            }
        }
    }
    
  hono-kafka-connection.json: |
    {
      "name": "[Hono/Kafka] org.eclipse.packages.c2e",
      "connectionType": "kafka",
      "connectionStatus": "open",
      "uri": "ssl://ditto-c2e:verysecret@my-release-kafka:9092",
      "sources": [
        {
          "addresses": [
            "hono.telemetry.org.eclipse.packages.c2e"
          ],
          "consumerCount": 1,
          "authorizationContext": [
            "pre-authenticated:hono-connection-org.eclipse.packages.c2e"
          ],
          "qos": 0,
          "enforcement": {
            "input": "{{ header:device_id }}",
            "filters": [
              "{{ entity:id }}"
            ]
          },
          "headerMapping": {},
          "payloadMapping": [],
          "replyTarget": {
            "enabled": true,
            "address": "hono.command.org.eclipse.packages.c2e/{{ thing:id }}",
            "headerMapping": {
              "device_id": "{{ thing:id }}",
              "subject": "{{ header:subject | fn:default(topic:action-subject) | fn:default(topic:criterion) }}-response",
              "correlation-id": "{{ header:correlation-id }}"
            },
            "expectedResponseTypes": [
              "response",
              "error"
            ]
          },
          "acknowledgementRequests": {
            "includes": [],
            "filter": "fn:delete()"
          },
          "declaredAcks": []
        },
        {
          "addresses": [
            "hono.event.org.eclipse.packages.c2e"
          ],
          "consumerCount": 1,
          "authorizationContext": [
            "pre-authenticated:hono-connection-org.eclipse.packages.c2e"
          ],
          "qos": 1,
          "enforcement": {
            "input": "{{ header:device_id }}",
            "filters": [
              "{{ entity:id }}"
            ]
          },
          "headerMapping": {},
          "payloadMapping": [],
          "replyTarget": {
            "enabled": true,
            "address": "hono.command.org.eclipse.packages.c2e/{{ thing:id }}",
            "headerMapping": {
              "device_id": "{{ thing:id }}",
              "subject": "{{ header:subject | fn:default(topic:action-subject) | fn:default(topic:criterion) }}-response",
              "correlation-id": "{{ header:correlation-id }}"
            },
            "expectedResponseTypes": [
              "response",
              "error"
            ]
          },
          "acknowledgementRequests": {
            "includes": []
          },
          "declaredAcks": []
        },
        {
          "addresses": [
            "hono.command_response.org.eclipse.packages.c2e"
          ],
          "consumerCount": 1,
          "authorizationContext": [
            "pre-authenticated:hono-connection-org.eclipse.packages.c2e"
          ],
          "qos": 0,
          "enforcement": {
            "input": "{{ header:device_id }}",
            "filters": [
              "{{ entity:id }}"
            ]
          },
          "headerMapping": {
            "correlation-id": "{{ header:correlation-id }}",
            "status": "{{ header:status }}"
          },
          "payloadMapping": [],
          "replyTarget": {
            "enabled": false,
            "expectedResponseTypes": [
              "response",
              "error"
            ]
          },
          "acknowledgementRequests": {
            "includes": [],
            "filter": "fn:delete()"
          },
          "declaredAcks": []
        }
      ],
      "targets": [
        {
          "address": "hono.command.org.eclipse.packages.c2e/{{ thing:id }}",
          "authorizationContext": [
            "pre-authenticated:hono-connection-org.eclipse.packages.c2e"
          ],
          "headerMapping": {
            "device_id": "{{ thing:id }}",
            "subject": "{{ header:subject | fn:default(topic:action-subject) }}",
            "correlation-id": "{{ header:correlation-id }}",
            "response-required": "{{ header:response-required }}"
          },
          "topics": [
            "_/_/things/live/commands",
            "_/_/things/live/messages"
          ]
        },
        {
          "address": "hono.command.org.eclipse.packages.c2e/{{thing:id}}",
          "authorizationContext": [
            "pre-authenticated:hono-connection-org.eclipse.packages.c2e"
          ],
          "topics": [
            "_/_/things/twin/events",
            "_/_/things/live/events"
          ],
          "headerMapping": {
            "device_id": "{{ thing:id }}",
            "subject": "{{ header:subject | fn:default(topic:action-subject) }}",
            "correlation-id": "{{ header:correlation-id }}"
          }
        }
      ],
      "specificConfig": {
        "saslMechanism": "plain",
        "bootstrapServers": "my-release-kafka:9092",
        "groupId": "org.eclipse.packages.c2e_{{ connection:id }}"
      },
      "clientCount": 1,
      "failoverEnabled": true,
      "validateCertificates": true
    }
    
  demo-device-credentials.json: |
    [
      {
        "type": "hashed-password",
        "auth-id": "demo-device",
        "enabled": true,
        "secrets": [
          {
            "comment": "pwd: demo-secret",
            "pwd-plain": "demo-secret"
          }
        ]
      },
      {
        "type": "psk",
        "auth-id": "demo-device",
        "enabled": true,
        "secrets": [
          {
            "comment": "pwd: demo-secret",
            "key": "ZGVtby1zZWNyZXQ="
          }
        ]
      }
    ]
---
# Source: cloud2edge/charts/ditto/charts/mongodb/templates/common-scripts-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mongodb-common-scripts
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 6.0.10
    helm.sh/chart: mongodb-13.18.5
    app.kubernetes.io/component: mongodb
data:
  startup-probe.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep 'true'
  readiness-probe.sh: |
    #!/bin/bash
    # Run the proper check depending on the version
    [[ $(mongod -version | grep "db version") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
    . /opt/bitnami/scripts/libversion.sh
    VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
    VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
    VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
    readiness_test='db.isMaster().ismaster || db.isMaster().secondary'
    if [[ ( "$VERSION_MAJOR" -ge 5 ) || ( "$VERSION_MAJOR" -ge 4 && "$VERSION_MINOR" -ge 4 && "$VERSION_PATCH" -ge 2 ) ]]; then
        readiness_test='db.hello().isWritablePrimary || db.hello().secondary'
    fi
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval "${readiness_test}" | grep 'true'
  ping-mongodb.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval "db.adminCommand('ping')"
---
# Source: cloud2edge/charts/ditto/templates/dittoui-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-dittoui-config-nginx-conf
  labels:
    app.kubernetes.io/name: ditto-dittoui-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |-
    worker_processes 1;
    
    error_log  /var/log/nginx/error.log notice;
    pid        /tmp/nginx.pid;
    
    events {
      worker_connections  1024;
    }
    
    http {
        proxy_temp_path /tmp/proxy_temp;
        client_body_temp_path /tmp/client_temp;
        fastcgi_temp_path /tmp/fastcgi_temp;
        uwsgi_temp_path /tmp/uwsgi_temp;
        scgi_temp_path /tmp/scgi_temp;
    
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
    
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
    
        access_log  /var/log/nginx/access.log  main;
    
        server_tokens off; # Hide Nginx version
    
        sendfile        on;
        #tcp_nopush     on;
    
        keepalive_timeout  65;
    
        #gzip  on;
    
        include /etc/nginx/conf.d/*.conf;
    }
---
# Source: cloud2edge/charts/ditto/templates/logback-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-logback-config-connectivity-xml
  labels:
    app.kubernetes.io/name: ditto-logback-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  logback.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
      ~ Copyright (c) 2023 Contributors to the Eclipse Foundation
      ~
      ~ See the NOTICE file(s) distributed with this work for additional
      ~ information regarding copyright ownership.
      ~
      ~ This program and the accompanying materials are made available under the
      ~ terms of the Eclipse Public License 2.0 which is available at
      ~ http://www.eclipse.org/legal/epl-2.0
      ~
      ~ SPDX-License-Identifier: EPL-2.0
      -->
    <configuration>
        <appender name="jsonConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <excludeMdcKeyName>sourceActorSystem</excludeMdcKeyName>
                <excludeMdcKeyName>pekkoUid</excludeMdcKeyName>
                <excludeMdcKeyName>pekkoTimestamp</excludeMdcKeyName>
                <mdcKeyFieldName>x-correlation-id=correlation-id</mdcKeyFieldName>
                <mdcKeyFieldName>connection-id=ditto-connection-id</mdcKeyFieldName>
                <mdcKeyFieldName>connection-type=ditto-connection-type</mdcKeyFieldName>
            </encoder>
        </appender>
    
        <!-- Do not print INFO cluster messages of mongo driver: -->
        <logger name="org.mongodb.driver" level="WARN"/>
    
        <logger name="org.apache.pekko.management.cluster.bootstrap.contactpoint.HttpClusterBootstrapRoutes" level="WARN"/>
        <logger name="org.apache.pekko.management.cluster.bootstrap.internal.BootstrapCoordinator" level="WARN"/>
        <logger name="org.apache.pekko.actor.CoordinatedShutdown" level="INFO"/>
    
        <logger name="org.apache.kafka" level="WARN"/>
    
        <!-- Log level for the application -->
        <logger name="org.eclipse.ditto" level="${LOG_LEVEL_APPLICATION:-INFO}"/>
    
        <root level="${LOG_LEVEL:-INFO}">
            <appender-ref ref="jsonConsoleAppender"/>
        </root>
    </configuration>
---
# Source: cloud2edge/charts/ditto/templates/logback-config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-logback-config-gateway-xml
  labels:
    app.kubernetes.io/name: ditto-logback-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  logback.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
      ~ Copyright (c) 2023 Contributors to the Eclipse Foundation
      ~
      ~ See the NOTICE file(s) distributed with this work for additional
      ~ information regarding copyright ownership.
      ~
      ~ This program and the accompanying materials are made available under the
      ~ terms of the Eclipse Public License 2.0 which is available at
      ~ http://www.eclipse.org/legal/epl-2.0
      ~
      ~ SPDX-License-Identifier: EPL-2.0
      -->
    <configuration>
        <appender name="jsonConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <excludeMdcKeyName>sourceActorSystem</excludeMdcKeyName>
                <excludeMdcKeyName>pekkoUid</excludeMdcKeyName>
                <excludeMdcKeyName>pekkoTimestamp</excludeMdcKeyName>
                <mdcKeyFieldName>x-correlation-id=correlation-id</mdcKeyFieldName>
            </encoder>
        </appender>
    
        <!-- Do not print INFO cluster messages of mongo driver: -->
        <logger name="org.mongodb.driver" level="WARN"/>
    
        <logger name="org.apache.pekko.management.cluster.bootstrap.contactpoint.HttpClusterBootstrapRoutes" level="WARN"/>
        <logger name="org.apache.pekko.management.cluster.bootstrap.internal.BootstrapCoordinator" level="WARN"/>
        <logger name="org.apache.pekko.actor.CoordinatedShutdown" level="INFO"/>
    
        <!-- Log level for the application -->
        <logger name="org.eclipse.ditto" level="${LOG_LEVEL_APPLICATION:-INFO}"/>
    
        <root level="${LOG_LEVEL:-INFO}">
            <appender-ref ref="jsonConsoleAppender"/>
        </root>
    </configuration>
---
# Source: cloud2edge/charts/ditto/templates/logback-config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-logback-config-policies-xml
  labels:
    app.kubernetes.io/name: ditto-logback-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  logback.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
      ~ Copyright (c) 2023 Contributors to the Eclipse Foundation
      ~
      ~ See the NOTICE file(s) distributed with this work for additional
      ~ information regarding copyright ownership.
      ~
      ~ This program and the accompanying materials are made available under the
      ~ terms of the Eclipse Public License 2.0 which is available at
      ~ http://www.eclipse.org/legal/epl-2.0
      ~
      ~ SPDX-License-Identifier: EPL-2.0
      -->
    <configuration>
        <appender name="jsonConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <excludeMdcKeyName>sourceActorSystem</excludeMdcKeyName>
                <excludeMdcKeyName>pekkoUid</excludeMdcKeyName>
                <excludeMdcKeyName>pekkoTimestamp</excludeMdcKeyName>
                <mdcKeyFieldName>x-correlation-id=correlation-id</mdcKeyFieldName>
            </encoder>
        </appender>
    
        <!-- Do not print INFO cluster messages of mongo driver: -->
        <logger name="org.mongodb.driver" level="WARN"/>
    
        <logger name="org.apache.pekko.management.cluster.bootstrap.contactpoint.HttpClusterBootstrapRoutes" level="WARN"/>
        <logger name="org.apache.pekko.management.cluster.bootstrap.internal.BootstrapCoordinator" level="WARN"/>
        <logger name="org.apache.pekko.actor.CoordinatedShutdown" level="INFO"/>
    
        <!-- Log level for the application -->
        <logger name="org.eclipse.ditto" level="${LOG_LEVEL_APPLICATION:-INFO}"/>
    
        <root level="${LOG_LEVEL:-INFO}">
            <appender-ref ref="jsonConsoleAppender"/>
        </root>
    </configuration>
---
# Source: cloud2edge/charts/ditto/templates/logback-config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-logback-config-things-xml
  labels:
    app.kubernetes.io/name: ditto-logback-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  logback.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
      ~ Copyright (c) 2023 Contributors to the Eclipse Foundation
      ~
      ~ See the NOTICE file(s) distributed with this work for additional
      ~ information regarding copyright ownership.
      ~
      ~ This program and the accompanying materials are made available under the
      ~ terms of the Eclipse Public License 2.0 which is available at
      ~ http://www.eclipse.org/legal/epl-2.0
      ~
      ~ SPDX-License-Identifier: EPL-2.0
      -->
    <configuration>
        <appender name="jsonConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <excludeMdcKeyName>sourceActorSystem</excludeMdcKeyName>
                <excludeMdcKeyName>pekkoUid</excludeMdcKeyName>
                <excludeMdcKeyName>pekkoTimestamp</excludeMdcKeyName>
                <mdcKeyFieldName>x-correlation-id=correlation-id</mdcKeyFieldName>
            </encoder>
        </appender>
    
        <!-- Do not print INFO cluster messages of mongo driver: -->
        <logger name="org.mongodb.driver" level="WARN"/>
    
        <logger name="org.apache.pekko.management.cluster.bootstrap.contactpoint.HttpClusterBootstrapRoutes" level="WARN"/>
        <logger name="org.apache.pekko.management.cluster.bootstrap.internal.BootstrapCoordinator" level="WARN"/>
        <logger name="org.apache.pekko.actor.CoordinatedShutdown" level="INFO"/>
    
        <!-- Log level for the application -->
        <logger name="org.eclipse.ditto" level="${LOG_LEVEL_APPLICATION:-INFO}"/>
    
        <root level="${LOG_LEVEL:-INFO}">
            <appender-ref ref="jsonConsoleAppender"/>
        </root>
    </configuration>
---
# Source: cloud2edge/charts/ditto/templates/logback-config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-logback-config-thingssearch-xml
  labels:
    app.kubernetes.io/name: ditto-logback-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  logback.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <!--
      ~ Copyright (c) 2023 Contributors to the Eclipse Foundation
      ~
      ~ See the NOTICE file(s) distributed with this work for additional
      ~ information regarding copyright ownership.
      ~
      ~ This program and the accompanying materials are made available under the
      ~ terms of the Eclipse Public License 2.0 which is available at
      ~ http://www.eclipse.org/legal/epl-2.0
      ~
      ~ SPDX-License-Identifier: EPL-2.0
      -->
    <configuration>
        <appender name="jsonConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <excludeMdcKeyName>sourceActorSystem</excludeMdcKeyName>
                <excludeMdcKeyName>pekkoUid</excludeMdcKeyName>
                <excludeMdcKeyName>pekkoTimestamp</excludeMdcKeyName>
                <mdcKeyFieldName>x-correlation-id=correlation-id</mdcKeyFieldName>
            </encoder>
        </appender>
    
        <!-- Do not print INFO cluster messages of mongo driver: -->
        <logger name="org.mongodb.driver" level="WARN"/>
    
        <logger name="org.apache.pekko.management.cluster.bootstrap.contactpoint.HttpClusterBootstrapRoutes" level="WARN"/>
        <logger name="org.apache.pekko.management.cluster.bootstrap.internal.BootstrapCoordinator" level="WARN"/>
        <logger name="org.apache.pekko.actor.CoordinatedShutdown" level="INFO"/>
    
        <!-- Log level for the application -->
        <logger name="org.eclipse.ditto" level="${LOG_LEVEL_APPLICATION:-INFO}"/>
    
        <root level="${LOG_LEVEL:-INFO}">
            <appender-ref ref="jsonConsoleAppender"/>
        </root>
    </configuration>
---
# Source: cloud2edge/charts/ditto/templates/nginx-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nginx-config-ditto-down-svg
  labels:
    app.kubernetes.io/name: ditto-nginx-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  ditto-down.svg: |-
    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
    <!-- Created with Inkscape (http://www.inkscape.org/) -->
    
    <svg
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:cc="http://creativecommons.org/ns#"
            xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            xmlns="http://www.w3.org/2000/svg"
            xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
            xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
            width="64px"
            height="64px"
            viewBox="0 0 64 64"
            version="1.1"
            id="SVGRoot"
            inkscape:version="0.92.1 r15371"
            sodipodi:docname="ditto-sandbox-down.svg">
      <sodipodi:namedview
         id="base"
         pagecolor="#ffffff"
         bordercolor="#666666"
         borderopacity="1.0"
         inkscape:pageopacity="0.0"
         inkscape:pageshadow="2"
         inkscape:zoom="4"
         inkscape:cx="36.5"
         inkscape:cy="32"
         inkscape:document-units="px"
         inkscape:current-layer="layer1"
         showgrid="false"
         inkscape:window-width="1600"
         inkscape:window-height="1137"
         inkscape:window-x="3832"
         inkscape:window-y="-8"
         inkscape:window-maximized="1"
         inkscape:grid-bbox="true" />
      <defs
         id="defs4485" />
      <metadata
         id="metadata4488">
        <rdf:RDF>
          <cc:Work
             rdf:about="">
            <dc:format>image/svg+xml</dc:format>
            <dc:type
               rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
            <dc:title></dc:title>
          </cc:Work>
        </rdf:RDF>
      </metadata>
      <g
         id="layer1"
         inkscape:groupmode="layer"
         inkscape:label="Layer 1">
        <circle
           style="opacity:1;fill:#3a8c9a;fill-opacity:1;stroke:none;stroke-width:5.99148989;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:stroke fill markers"
           id="path5283"
           cx="32.187649"
           cy="32"
           r="31.999998" />
        <g
           id="g6928-2-3"
           transform="matrix(0.4753937,0,0,0.4753937,-13.450147,-13.637795)"
           style="fill:#ffffff;fill-opacity:1"
           inkscape:export-xdpi="96"
           inkscape:export-ydpi="96">
          <g
             id="g6926-1-4"
             style="fill:#ffffff;fill-opacity:1">
            <path
               id="path6924-2-3"
               d="m 103.1,128.9 c 0,3.9 -3.2,7.1 -7.1,7.1 -4,0 -7.1,-3.1 -7.1,-7.1 0,-4 3.1,-7.1 7.1,-7.1 3.9,0 7.1,3.2 7.1,7.1 z M 90.9,80.9 V 56 h 10.2 v 24.9 l -2.7,30.7 h -4.9 z"
               inkscape:connector-curvature="0"
               style="fill:#ffffff;fill-opacity:1" />
          </g>
        </g>
      </g>
    </svg>
---
# Source: cloud2edge/charts/ditto/templates/nginx-config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nginx-config-ditto-up-svg
  labels:
    app.kubernetes.io/name: ditto-nginx-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  ditto-up.svg: |-
    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
    <!-- Created with Inkscape (http://www.inkscape.org/) -->
    
    <svg
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:cc="http://creativecommons.org/ns#"
            xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            xmlns="http://www.w3.org/2000/svg"
            xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
            xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
            width="64px"
            height="64px"
            viewBox="0 0 64 64"
            version="1.1"
            id="SVGRoot"
            inkscape:version="0.92.1 r15371"
            sodipodi:docname="ditto-sandbox-up.svg">
      <sodipodi:namedview
         id="base"
         pagecolor="#ffffff"
         bordercolor="#666666"
         borderopacity="1.0"
         inkscape:pageopacity="0.0"
         inkscape:pageshadow="2"
         inkscape:zoom="4"
         inkscape:cx="36.5"
         inkscape:cy="32"
         inkscape:document-units="px"
         inkscape:current-layer="layer1"
         showgrid="false"
         inkscape:window-width="1600"
         inkscape:window-height="1137"
         inkscape:window-x="3832"
         inkscape:window-y="-8"
         inkscape:window-maximized="1"
         inkscape:grid-bbox="true" />
      <defs
         id="defs4485" />
      <metadata
         id="metadata4488">
        <rdf:RDF>
          <cc:Work
             rdf:about="">
            <dc:format>image/svg+xml</dc:format>
            <dc:type
               rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
            <dc:title></dc:title>
          </cc:Work>
        </rdf:RDF>
      </metadata>
      <g
         id="layer1"
         inkscape:groupmode="layer"
         inkscape:label="Layer 1">
        <circle
           style="opacity:1;fill:#3a8c9a;fill-opacity:1;stroke:none;stroke-width:5.99148989;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:stroke fill markers"
           id="path5283"
           cx="32.25"
           cy="32.25"
           r="31.999998" />
        <polygon
           points="129.2,69.2 84,114.3 62.8,93.2 57.2,98.8 84,125.7 134.8,74.8 "
           id="polygon2339-8-2-8-5-2"
           style="fill:#ffffff;fill-opacity:1;stroke:#008ecf;stroke-opacity:1"
           transform="matrix(0.39751555,0,0,0.39751555,-5.911566,-6.488167)" />
      </g>
    </svg>
---
# Source: cloud2edge/charts/ditto/templates/nginx-config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nginx-config-index-html
  labels:
    app.kubernetes.io/name: ditto-nginx-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  index.html: |-
    <!doctype html>
    <html>
    <head>
      <title>Eclipse Ditto</title>
    
      <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
    
      <style>
        body {
          text-align: center;
          padding: 150px;
        }
    
        h1 {
          font-size: 50px;
        }
    
        body {
          font: 20px Helvetica, sans-serif;
          color: #333;
        }
    
        article {
          display: block;
          text-align: left;
          width: 750px;
          margin: 0 auto;
        }
    
        a {
          color: #dc8100;
          text-decoration: none;
        }
    
        a:hover {
          color: #333;
          text-decoration: none;
        }
    
        .stats {
          line-height: 3em;
        }
    
        .stats-count {
          font: normal 2em Abel;
          color: #3a8c9a;
          font-weight: bold;
          text-align: center;
          margin: 5px;
          clear: left;
          float: left;
          width: 5em;
          background-color: lightgray;
        }
    
        .stats-count-text {
          padding-left: 1em;
          vertical-align: middle;
        }
    
        .health {
          background-size: contain;
          height: 30px;
          width: 30px;
          float: left;
        }
    
        .health-up {
          background-image: url(ditto-up.svg);
        }
    
        .health-down {
          background-image: url(ditto-down.svg);
        }
    
        .health-list li {
          clear: both;
          line-height: 30px;
          padding-bottom: 5px;
        }
    
        .health-key {
          float: left;
          width: 9em;
        }
    
        .health-status {
          line-height: 30px;
          padding-left: 1em;
        }
      </style>
    </head>
    <body>
    
    <article>
      <h1>Eclipse Ditto</h1>
      <div>
        <p>From here, you can:
        <ul>
          <li><a href="./ui/">visit the Eclipse Ditto™ UI to administer Ditto</a></li>
          <li><a href="./apidoc/">interactively explore the Eclipse Ditto™ OpenAPI documentation</a></li>
        </ul>
      </div>
      <h2 style="clear: both">Health</h2>
      <div id="health-content">
      </div>
      <h2>Statistics</h2>
      <div>
        <div class="stats">
          <span id="total-things-count" class="stats-count"></span><span
          class="stats-count-text"> persisted <em>Things</em></span>
        </div>
        <div class="stats">
          <span id="hot-things-count" class="stats-count"></span><span class="stats-count-text"> currently "hot" <em>Things</em> (loaded in memory)</span>
        </div>
      </div>
    </article>
    
    <script>
      function update_count(selector, count) {
        $(selector).animate({
                              counter: count
                            }, {
                              duration: 3000,
                              easing: 'swing',
                              step: function (now) {
                                $(this).text(Math.ceil(now));
                              }
                            });
      }
    
      function calcHealthStatusClass(status) {
        let healthStatusClass;
        if (status === "UP") {
          healthStatusClass = "health-up";
        } else if (status === "DOWN") {
          healthStatusClass = "health-down";
        } else {
          healthStatusClass = "health-down";
        }
        return healthStatusClass;
      }
    
      function calculateHealth(data) {
        let overallStatus = data.status;
        $(`<p>
                <span class="health-key"></span>
                <span class="health ${calcHealthStatusClass(overallStatus)}"></span>
                <span class="health-status">${overallStatus}</span>
            </p>`).appendTo("#health-content");
      }
    
      $.getJSON("./stats/search", function (data) {
        let allThingsCount = data.allThingsCount;
        update_count('#total-things-count', allThingsCount);
      }).fail(function () {
        update_count('#total-things-count', 0);
      });
      $.getJSON("./stats/things", function (data) {
        let hotThings = data.hotThings;
        update_count('#hot-things-count', hotThings);
      }).fail(function () {
        update_count('#hot-things-count', 0);
      });
      $.getJSON("./health", function (data) {
        calculateHealth(data);
      }).fail(function (jqXHR, textStatus, errorThrown) {
        calculateHealth(jqXHR.responseJSON);
      })
    </script>
    
    </body>
    </html>
---
# Source: cloud2edge/charts/ditto/templates/nginx-config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nginx-config-nginx-cors-conf
  labels:
    app.kubernetes.io/name: ditto-nginx-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  nginx-cors.conf: |-
    #
    # CORS header support
    #
    # As of Nginx 1.7.5, add_header supports an "always" parameter which
    # allows CORS to work if the backend returns 4xx or 5xx status code.
    #
    # For more information on CORS, please see: http://enable-cors.org/
    # From this Gist: https://gist.github.com/Stanback/7145487
    # And this: https://gist.github.com/pauloricardomg/7084524
    #
    
    set $cors '1';
    
    # OPTIONS indicates a CORS pre-flight request
    if ($request_method = 'OPTIONS') {
      set $cors "${cors}o";
    }
    
    if ($cors = '1') {
      add_header 'Access-Control-Allow-Origin' '$http_origin' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Headers' '$http_access_control_request_headers' always;
      add_header 'Access-Control-Expose-Headers' '*' always;
    }
    
    # OPTIONS (pre-flight) request from allowed CORS domain. return response directly
    if ($cors = '1o') {
      # Tell client that this pre-flight info is valid for 20 days
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Access-Control-Allow-Origin' '$http_origin' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Headers' '$http_access_control_request_headers' always;
      add_header 'Access-Control-Expose-Headers' '*' always;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 200;
    }
---
# Source: cloud2edge/charts/ditto/templates/nginx-configmap.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nginx-conf
  labels:
    app.kubernetes.io/name: ditto-nginx-conf
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |-
    worker_processes 4;

    events {
      worker_connections 1024;
    }
    
    http {
      charset utf-8;
      default_type application/json;
      include mime.types;
    
      proxy_connect_timeout 70; # seconds, default: 60
      proxy_send_timeout 70; # seconds, default: 60
      proxy_read_timeout 70; # seconds, default: 60
      # will try another upstream if an error or timeout occurred during the connection
      # or if the upstream returns 502 response
      proxy_next_upstream error timeout http_502;
      # will retry up to 3 times to find another upstream to connect to
      proxy_next_upstream_tries 3;
      # will try for max. 20s to find another upstream to connect to
      proxy_next_upstream_timeout 20;

      send_timeout 70; # seconds, default: 60
    
      client_header_buffer_size 8k; # allow longer URIs + headers (default: 1k)
      large_client_header_buffers 4 16k;
    
      merge_slashes off; # allow multiple slashes for CRS Authentication

      map $http_authorization $authentication {
        default "Authentication required";
        "~Bearer" "off";
        # the above means: if we get a request containing an "Authorization: Bearer ..." header, set "off" to $authentication
      }

      map $http_authorization $nginx_auth_user {
        default "nginx:${remote_user}";
        "~Bearer" "";
      }
    
      upstream my-release-ditto-gateway {
        server my-release-ditto-gateway:8080;
      }

      upstream my-release-ditto-dittoui {
        server my-release-ditto-dittoui:8080;
      }

      upstream my-release-ditto-swaggerui {
        server my-release-ditto-swaggerui:8080;
      }

      log_format jsonlog escape=json '{'
        '"@timestamp":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"upstream_response_time":"$upstream_response_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"correlation-id":"$http_correlation_id"'
      '}';
      access_log /var/log/nginx/access.log jsonlog;

      server {
        listen 8080;
        server_name localhost;

        location / {
          index index.html;
        }
    
        # api
        location /api {
          include nginx-cors.conf;

          
          auth_basic                    $authentication;
          auth_basic_user_file          nginx.htpasswd;
          proxy_set_header              X-Forwarded-User          $remote_user;
          proxy_set_header              x-ditto-pre-authenticated $nginx_auth_user;
        
          proxy_pass                    http://my-release-ditto-gateway;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
    
          proxy_set_header Connection  '';
          chunked_transfer_encoding    off;
          proxy_buffering              off;
          proxy_cache                  off;
        }
    
        # ws
        location /ws {

          
          auth_basic                    $authentication;
          auth_basic_user_file          nginx.htpasswd;
          proxy_set_header              X-Forwarded-User          $remote_user;
          proxy_set_header              x-ditto-pre-authenticated $nginx_auth_user;
          
          proxy_pass                    http://my-release-ditto-gateway;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
    
          proxy_set_header              Upgrade                   $http_upgrade;
          proxy_set_header              Connection                "upgrade";
          proxy_read_timeout            1d;
          proxy_send_timeout            1d;
        }
    
        # health
        location /health {
          include nginx-cors.conf;

          # exclude health checks from being logged in access log:
          access_log off;
    
          proxy_pass                    http://my-release-ditto-gateway/health;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }
    
        # status
        location /status {
          include nginx-cors.conf;

          # exclude status access from being logged in access log:
          access_log off;
    
          proxy_pass                    http://my-release-ditto-gateway/overall/status;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }

        # stats
        location /stats {
          include nginx-cors.conf;

          # exclude stats access from being logged in access log:
          access_log off;

          proxy_pass                    http://my-release-ditto-gateway/stats;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }
    
        # devops
        location /devops {
          include nginx-cors.conf;

          proxy_pass                    http://my-release-ditto-gateway/devops;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }

        # connections api using devops user configured in Ditto
        location /api/2/connections {
          include nginx-cors.conf;

          proxy_pass                    http://my-release-ditto-gateway;
          proxy_http_version            1.1;
          proxy_set_header              Host                $http_host;
          proxy_set_header              X-Real-IP           $remote_addr;
          proxy_set_header              X-Forwarded-For     $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User    $remote_user;
        }

        location /ui/ {
          proxy_pass                    http://my-release-ditto-dittoui/;
          proxy_http_version            1.1;
          proxy_set_header              Host                $http_host;
        }

        # swagger
        # access API doc on: /apidoc/
        location /apidoc/ {
          proxy_pass                    http://my-release-ditto-swaggerui/;
          proxy_http_version            1.1;
          proxy_set_header              Host                $http_host;
        }
      }
    }
---
# Source: cloud2edge/charts/ditto/templates/swaggerui-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-swaggerui-config-index-html
  labels:
    app.kubernetes.io/name: ditto-swaggerui-config
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  index.html: |-
    <!-- HTML for static distribution bundle build -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Eclipse Ditto - HTTP API</title>
        <link rel="stylesheet" type="text/css" href="./swagger-ui.css" >
        <link rel="icon" type="image/png" href="./favicon-16x16.png" sizes="16x16" />
        <link rel="icon" type="image/png" href="./favicon-32x32.png" sizes="32x32" />
        <style>
            html
            {
                box-sizing: border-box;
                overflow: -moz-scrollbars-vertical;
                overflow-y: scroll;
            }
            *,
            *:before,
            *:after
            {
                box-sizing: inherit;
            }
    
            body {
                margin:0;
                background: #fafafa;
            }
    
            #swagger-ui .swagger-ui.swagger-container .topbar {
            }
    
            #swagger-ui .swagger-ui.swagger-container .topbar .topbar-wrapper a {
                display: none;
            }
        </style>
    </head>
    
    <body>
    
    <div id="swagger-ui"></div>
    
    <script src="./swagger-ui-bundle.js"> </script>
    <script src="./swagger-ui-standalone-preset.js"> </script>
    <script>
        window.onload = function() {
    
            const ui = SwaggerUIBundle({
                                           urls: [
                                               {url: "./openapi/ditto-api-2.yml", name:"Ditto API v2"}
                                           ],
                                           "urls.primaryName": "Ditto API v2",
                                           validatorUrl: null,
                                           docExpansion: "none",
                                           dom_id: '#swagger-ui',
                                           deepLinking: true,
                                           presets: [
                                               SwaggerUIBundle.presets.apis,
                                               SwaggerUIStandalonePreset
                                           ],
                                           plugins: [
                                               SwaggerUIBundle.plugins.DownloadUrl
                                           ],
                                           layout: "StandaloneLayout",
                                           oauth2RedirectUrl: window.location.origin + "./oauth2-redirect.html",
                                           onComplete: function () {
                                           }
                                       });
            window.ui = ui;
        }
    </script>
    </body>
    
    </html>
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/controller-eligible/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-kafka-controller-configuration
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
    app.kubernetes.io/component: controller-eligible
    app.kubernetes.io/part-of: kafka
data:
  server.properties: |-
    # Listeners configuration
    listeners=CLIENT://:9092,INTERNAL://:9094,EXTERNAL://:9095,CONTROLLER://:9093
    advertised.listeners=CLIENT://advertised-address-placeholder:9092,INTERNAL://advertised-address-placeholder:9094
    listener.security.protocol.map=CLIENT:SASL_SSL,INTERNAL:SASL_PLAINTEXT,CONTROLLER:SASL_PLAINTEXT,EXTERNAL:SASL_SSL
    # KRaft process roles
    process.roles=controller,broker
    #node.id=
    controller.listener.names=CONTROLLER
    controller.quorum.voters=0@my-release-kafka-controller-0.my-release-kafka-controller-headless.cloud2edge-0.9.0.tgz.svc.cluster.local:9093
    # Kraft Controller listener SASL settings
    sasl.mechanism.controller.protocol=PLAIN
    listener.name.controller.sasl.enabled.mechanisms=PLAIN
    listener.name.controller.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="controller_user" password="controller-password-placeholder" user_controller_user="controller-password-placeholder";
    # Kafka data logs directory
    log.dir=/bitnami/kafka/data
    # Kafka application logs directory
    logs.dir=/opt/bitnami/kafka/logs
    
    sasl.enabled.mechanisms=PLAIN,SCRAM-SHA-256,SCRAM-SHA-512
    # Interbroker configuration
    inter.broker.listener.name=INTERNAL
    sasl.mechanism.inter.broker.protocol=PLAIN
    # TLS configuration
    ssl.keystore.type=JKS
    ssl.truststore.type=JKS
    ssl.keystore.location=/opt/bitnami/kafka/config/certs/kafka.keystore.jks
    ssl.truststore.location=/opt/bitnami/kafka/config/certs/kafka.truststore.jks
    #ssl.keystore.password=
    #ssl.truststore.password=
    #ssl.key.password=
    ssl.client.auth=required
    ssl.endpoint.identification.algorithm=https
    # Listeners SASL JAAS configuration
    listener.name.client.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required user_hono="password-placeholder-0" user_ditto-c2e="password-placeholder-1";
    listener.name.client.scram-sha-256.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required;
    listener.name.client.scram-sha-512.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required;
    listener.name.internal.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="inter_broker_user" password="interbroker-password-placeholder" user_inter_broker_user="interbroker-password-placeholder" user_hono="password-placeholder-0" user_ditto-c2e="password-placeholder-1";
    listener.name.internal.scram-sha-256.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="inter_broker_user" password="interbroker-password-placeholder";
    listener.name.internal.scram-sha-512.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="inter_broker_user" password="interbroker-password-placeholder";
    listener.name.external.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required user_hono="password-placeholder-0" user_ditto-c2e="password-placeholder-1";
    listener.name.external.scram-sha-256.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required;
    listener.name.external.scram-sha-512.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required;
    # End of SASL JAAS configuration
    
    group.initial.rebalance.delay.ms=0
    offsets.topic.replication.factor=1
    transaction.state.log.min.isr=1
    transaction.state.log.replication.factor=1
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/scripts-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-kafka-scripts
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
data:
  auto-discovery.sh: |-
    #!/bin/bash
    SVC_NAME="${MY_POD_NAME}-external"
    AUTODISCOVERY_SERVICE_TYPE="${AUTODISCOVERY_SERVICE_TYPE:-}"
    # Auxiliary functions
    retry_while() {
        local -r cmd="${1:?cmd is missing}"
        local -r retries="${2:-12}"
        local -r sleep_time="${3:-5}"
        local return_value=1

        read -r -a command <<< "$cmd"
        for ((i = 1 ; i <= retries ; i+=1 )); do
            "${command[@]}" && return_value=0 && break
            sleep "$sleep_time"
        done
        return $return_value
    }
    k8s_svc_lb_ip() {
        local namespace=${1:?namespace is missing}
        local service=${2:?service is missing}
        local service_ip=$(kubectl get svc "$service" -n "$namespace" -o jsonpath="{.status.loadBalancer.ingress[0].ip}")
        local service_hostname=$(kubectl get svc "$service" -n "$namespace" -o jsonpath="{.status.loadBalancer.ingress[0].hostname}")

        if [[ -n ${service_ip} ]]; then
            echo "${service_ip}"
        else
            echo "${service_hostname}"
        fi
    }
    k8s_svc_lb_ip_ready() {
        local namespace=${1:?namespace is missing}
        local service=${2:?service is missing}
        [[ -n "$(k8s_svc_lb_ip "$namespace" "$service")" ]]
    }
    k8s_svc_node_port() {
        local namespace=${1:?namespace is missing}
        local service=${2:?service is missing}
        local index=${3:-0}
        local node_port="$(kubectl get svc "$service" -n "$namespace" -o jsonpath="{.spec.ports[$index].nodePort}")"
        echo "$node_port"
    }

    if [[ "$AUTODISCOVERY_SERVICE_TYPE" = "LoadBalancer" ]]; then
      # Wait until LoadBalancer IP is ready
      retry_while "k8s_svc_lb_ip_ready cloud2edge-0.9.0.tgz $SVC_NAME" || exit 1
      # Obtain LoadBalancer external IP
      k8s_svc_lb_ip "cloud2edge-0.9.0.tgz" "$SVC_NAME" | tee "/shared/external-host.txt"
    elif [[ "$AUTODISCOVERY_SERVICE_TYPE" = "NodePort" ]]; then
      k8s_svc_node_port "cloud2edge-0.9.0.tgz" "$SVC_NAME" | tee "/shared/external-port.txt"
    else
      echo "Unsupported autodiscovery service type: '$AUTODISCOVERY_SERVICE_TYPE'"
      exit 1
    fi
  kafka-init.sh: |-
    #!/bin/bash

    set -o errexit
    set -o nounset
    set -o pipefail

    error(){
      local message="${1:?missing message}"
      echo "ERROR: ${message}"
      exit 1
    }

    retry_while() {
        local -r cmd="${1:?cmd is missing}"
        local -r retries="${2:-12}"
        local -r sleep_time="${3:-5}"
        local return_value=1

        read -r -a command <<< "$cmd"
        for ((i = 1 ; i <= retries ; i+=1 )); do
            "${command[@]}" && return_value=0 && break
            sleep "$sleep_time"
        done
        return $return_value
    }

    replace_in_file() {
        local filename="${1:?filename is required}"
        local match_regex="${2:?match regex is required}"
        local substitute_regex="${3:?substitute regex is required}"
        local posix_regex=${4:-true}

        local result

        # We should avoid using 'sed in-place' substitutions
        # 1) They are not compatible with files mounted from ConfigMap(s)
        # 2) We found incompatibility issues with Debian10 and "in-place" substitutions
        local -r del=$'\001' # Use a non-printable character as a 'sed' delimiter to avoid issues
        if [[ $posix_regex = true ]]; then
            result="$(sed -E "s${del}${match_regex}${del}${substitute_regex}${del}g" "$filename")"
        else
            result="$(sed "s${del}${match_regex}${del}${substitute_regex}${del}g" "$filename")"
        fi
        echo "$result" > "$filename"
    }

    kafka_conf_set() {
        local file="${1:?missing file}"
        local key="${2:?missing key}"
        local value="${3:?missing value}"

        # Check if the value was set before
        if grep -q "^[#\\s]*$key\s*=.*" "$file"; then
            # Update the existing key
            replace_in_file "$file" "^[#\\s]*${key}\s*=.*" "${key}=${value}" false
        else
            # Add a new key
            printf '\n%s=%s' "$key" "$value" >>"$file"
        fi
    }

    replace_placeholder() {
      local placeholder="${1:?missing placeholder value}"
      local password="${2:?missing password value}"
      sed -i "s/$placeholder/$password/g" "$KAFKA_CONFIG_FILE"
    }

    append_file_to_kafka_conf() {
        local file="${1:?missing source file}"
        local conf="${2:?missing kafka conf file}"

        cat "$1" >> "$2"
    }

    configure_external_access() {
      # Configure external hostname
      if [[ -f "/shared/external-host.txt" ]]; then
        host=$(cat "/shared/external-host.txt")
      elif [[ -n "${EXTERNAL_ACCESS_HOST:-}" ]]; then
        host="$EXTERNAL_ACCESS_HOST"
      elif [[ -n "${EXTERNAL_ACCESS_HOSTS_LIST:-}" ]]; then
        read -r -a hosts <<<"$(tr ',' ' ' <<<"${EXTERNAL_ACCESS_HOSTS_LIST}")"
        host="${hosts[$POD_ID]}"
      elif [[ "$EXTERNAL_ACCESS_HOST_USE_PUBLIC_IP" =~ ^(yes|true)$ ]]; then
        host=$(curl -s https://ipinfo.io/ip)
      else
        error "External access hostname not provided"
      fi

      # Configure external port
      if [[ -f "/shared/external-port.txt" ]]; then
        port=$(cat "/shared/external-port.txt")
      elif [[ -n "${EXTERNAL_ACCESS_PORT:-}" ]]; then
        if [[ "${EXTERNAL_ACCESS_PORT_AUTOINCREMENT:-}" =~ ^(yes|true)$ ]]; then
          port="$((EXTERNAL_ACCESS_PORT + POD_ID))"
        else
          port="$EXTERNAL_ACCESS_PORT"
        fi
      elif [[ -n "${EXTERNAL_ACCESS_PORTS_LIST:-}" ]]; then
        read -r -a ports <<<"$(tr ',' ' ' <<<"${EXTERNAL_ACCESS_PORTS_LIST}")"
        port="${ports[$POD_ID]}"
      else
        error "External access port not provided"
      fi
      # Configure Kafka advertised listeners
      sed -i -E "s|^(advertised\.listeners=\S+)$|\1,EXTERNAL://${host}:${port}|" "$KAFKA_CONFIG_FILE"
    }
    configure_kafka_tls() {
      # Remove previously existing keystores and certificates, if any
      rm -f /certs/kafka.keystore.jks /certs/kafka.truststore.jks
      rm -f /certs/tls.crt /certs/tls.key /certs/ca.crt
      find /certs -name "xx*" -exec rm {} \;
      if [[ "${KAFKA_TLS_TYPE}" = "PEM" ]]; then
        # Copy PEM certificate and key
        if [[ -f "/mounted-certs/kafka-${POD_ROLE}-${POD_ID}.crt" && "/mounted-certs/kafka-${POD_ROLE}-${POD_ID}.key" ]]; then
          cp "/mounted-certs/kafka-${POD_ROLE}-${POD_ID}.crt" /certs/tls.crt
          # Copy the PEM key ensuring the key used PEM format with PKCS#8
          openssl pkcs8 -topk8 -nocrypt -in "/mounted-certs/kafka-${POD_ROLE}-${POD_ID}.key" > /certs/tls.key
        elif [[ -f /mounted-certs/kafka.crt && -f /mounted-certs/kafka.key ]]; then
          cp "/mounted-certs/kafka.crt" /certs/tls.crt
          # Copy the PEM key ensuring the key used PEM format with PKCS#8
          openssl pkcs8 -topk8 -nocrypt -in "/mounted-certs/kafka.key" > /certs/tls.key
        elif [[ -f /mounted-certs/tls.crt && -f /mounted-certs/tls.key ]]; then
          cp "/mounted-certs/tls.crt" /certs/tls.crt
          # Copy the PEM key ensuring the key used PEM format with PKCS#8
          openssl pkcs8 -topk8 -nocrypt -in "/mounted-certs/tls.key" > /certs/tls.key
        else
          error "PEM key and cert files not found"
        fi
        # Copy CA certificate
        if [[ -f /mounted-certs/kafka-ca.crt ]]; then
          cp /mounted-certs/kafka-ca.crt /certs/ca.crt
        elif [[ -f /mounted-certs/ca.crt ]]; then
          cp /mounted-certs/ca.crt /certs/ca.crt
        else
          error "CA certificate file not found"
        fi

        # Create JKS keystore from PEM cert and key
        openssl pkcs12 -export -in "/certs/tls.crt" \
          -passout pass:"${KAFKA_TLS_KEYSTORE_PASSWORD}" \
          -inkey "/certs/tls.key" \
          -out "/certs/kafka.keystore.p12"
        keytool -importkeystore -srckeystore "/certs/kafka.keystore.p12" \
          -srcstoretype PKCS12 \
          -srcstorepass "${KAFKA_TLS_KEYSTORE_PASSWORD}" \
          -deststorepass "${KAFKA_TLS_KEYSTORE_PASSWORD}" \
          -destkeystore "/certs/kafka.keystore.jks" \
          -noprompt
        # Create JKS truststore from CA cert
        keytool -keystore /certs/kafka.truststore.jks -alias CARoot -import -file /certs/ca.crt -storepass "${KAFKA_TLS_TRUSTSTORE_PASSWORD}" -noprompt
        # Remove extra files
        rm -f "/certs/kafka.keystore.p12" "/certs/tls.crt" "/certs/tls.key" "/certs/ca.crt"
      elif [[ "${KAFKA_TLS_TYPE}" = "JKS" ]]; then
        if [[ -f "/mounted-certs/kafka-${POD_ROLE}-${POD_ID}.keystore.jks" ]]; then
          cp "/mounted-certs/kafka-${POD_ROLE}-${POD_ID}.keystore.jks" /certs/kafka.keystore.jks
        elif [[ -f "/mounted-certs/kafka.keystore.jks" ]]; then
          cp "/mounted-certs/kafka.keystore.jks" /certs/kafka.keystore.jks
        else
          error "Keystore file not found"
        fi

        if [[ -f "/mounted-certs/kafka.truststore.jks" ]]; then
          cp "/mounted-certs/kafka.truststore.jks" /certs/kafka.truststore.jks
        else
          error "Truststore file not found"
        fi
      else
        error "Invalid type ${KAFKA_TLS_TYPE}"
      fi

      # Configure TLS password settings in Kafka configuration
      [[ -n "${KAFKA_TLS_KEYSTORE_PASSWORD:-}" ]] && kafka_conf_set "$KAFKA_CONFIG_FILE" "ssl.keystore.password" "$KAFKA_TLS_KEYSTORE_PASSWORD"
      [[ -n "${KAFKA_TLS_TRUSTSTORE_PASSWORD:-}" ]] && kafka_conf_set "$KAFKA_CONFIG_FILE" "ssl.truststore.password" "$KAFKA_TLS_TRUSTSTORE_PASSWORD"
      [[ -n "${KAFKA_TLS_PEM_KEY_PASSWORD:-}" ]] && kafka_conf_set "$KAFKA_CONFIG_FILE" "ssl.key.password" "$KAFKA_TLS_PEM_KEY_PASSWORD"
      # Avoid errors caused by previous checks
      true
    }
    configure_kafka_sasl() {

      # Replace placeholders with passwords
      replace_placeholder "interbroker-password-placeholder" "$KAFKA_INTER_BROKER_PASSWORD"
      replace_placeholder "controller-password-placeholder" "$KAFKA_CONTROLLER_PASSWORD"
      read -r -a passwords <<<"$(tr ',;' ' ' <<<"${KAFKA_CLIENT_PASSWORDS:-}")"
      for ((i = 0; i < ${#passwords[@]}; i++)); do
          replace_placeholder "password-placeholder-${i}" "${passwords[i]}"
      done
    }
    # Wait for autodiscovery to finish
    if [[ "${EXTERNAL_ACCESS_ENABLED:-false}" =~ ^(yes|true)$ ]]; then
      retry_while "test -f /shared/external-host.txt -o -f /shared/external-port.txt" || error "Timed out waiting for autodiscovery init-container"
    fi

    export KAFKA_CONFIG_FILE=/config/server.properties
    cp /configmaps/server.properties $KAFKA_CONFIG_FILE

    # Get pod ID and role, last and second last fields in the pod name respectively
    POD_ID=$(echo "$MY_POD_NAME" | rev | cut -d'-' -f 1 | rev)
    POD_ROLE=$(echo "$MY_POD_NAME" | rev | cut -d'-' -f 2 | rev)

    # Configure node.id and/or broker.id
    if [[ -f "/bitnami/kafka/data/meta.properties" ]]; then
        if grep -q "broker.id" /bitnami/kafka/data/meta.properties; then
          ID="$(grep "broker.id" /bitnami/kafka/data/meta.properties | awk -F '=' '{print $2}')"
          kafka_conf_set "$KAFKA_CONFIG_FILE" "node.id" "$ID"
        else
          ID="$(grep "node.id" /bitnami/kafka/data/meta.properties | awk -F '=' '{print $2}')"
          kafka_conf_set "$KAFKA_CONFIG_FILE" "node.id" "$ID"
        fi
    else
        ID=$((POD_ID + KAFKA_MIN_ID))
        kafka_conf_set "$KAFKA_CONFIG_FILE" "node.id" "$ID"
    fi
    replace_placeholder "advertised-address-placeholder" "${MY_POD_NAME}.my-release-kafka-${POD_ROLE}-headless.cloud2edge-0.9.0.tgz.svc.cluster.local"
    if [[ "${EXTERNAL_ACCESS_ENABLED:-false}" =~ ^(yes|true)$ ]]; then
      configure_external_access
    fi
    configure_kafka_tls
    configure_kafka_sasl
    if [ -f /secret-config/server-secret.properties ]; then
      append_file_to_kafka_conf /secret-config/server-secret.properties $KAFKA_CONFIG_FILE
    fi
---
# Source: cloud2edge/charts/hono/templates/defaults/default-logging-config.yaml
#
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: "my-release-hono-default-logging-config"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "logging"
data:
  logging-quarkus-prod.yml: |
    quarkus:
      log:
        category:
          "org.apache.kafka":
            level: ERROR
          "org.eclipse.hono":
            level: INFO
          "org.eclipse.hono.client.impl.HonoConnectionImpl":
            level: ERROR
  logging-quarkus-dev.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: DEBUG
          "org.infinispan":
            level: DEBUG
  logging-quarkus-trace.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: TRACE
          "org.infinispan":
            level: DEBUG
---
# Source: cloud2edge/charts/hono/templates/defaults/example-trust-store.yaml
#
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: "my-release-hono-example-trust-store"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "security"
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIB4zCCAYmgAwIBAgIUDvfsevHpF7ObReAAmGXXHHsAXD0wCgYIKoZIzj0EAwIw
    UjELMAkGA1UEBhMCQ0ExDzANBgNVBAcMBk90dGF3YTEUMBIGA1UECgwLRWNsaXBz
    ZSBJb1QxDTALBgNVBAsMBEhvbm8xDTALBgNVBAMMBHJvb3QwHhcNMjMwNjI0MDkw
    NjAwWhcNMjQwNjIzMDkwNjAwWjBQMQswCQYDVQQGEwJDQTEPMA0GA1UEBwwGT3R0
    YXdhMRQwEgYDVQQKDAtFY2xpcHNlIElvVDENMAsGA1UECwwESG9ubzELMAkGA1UE
    AwwCY2EwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQphoV7ZJZg71VRld66PKiW
    MHYatfL71/xughhSsHfe4GYNA6h9pz6Qb0e9h8Kj6tLTFNThvZ0E502oy6e/A5tq
    oz8wPTAdBgNVHQ4EFgQUbAyRRCU3YCp7Zq1TbGeW/fagqHEwDwYDVR0TAQH/BAUw
    AwEB/zALBgNVHQ8EBAMCAQYwCgYIKoZIzj0EAwIDSAAwRQIhAJaqUu4QSLK3pwCd
    NLmrKHol6dXqaKSoFUKYVdASsFsRAiBvX8XHIdRk/AekcDX4AejDg1W5EbvP5r1t
    KiEsV1l1Tw==
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    MIICeTCCAh+gAwIBAgIUfwZ93GxLHl4pKx+jUiyh/bXYkSkwCgYIKoZIzj0EAwIw
    UjELMAkGA1UEBhMCQ0ExDzANBgNVBAcMBk90dGF3YTEUMBIGA1UECgwLRWNsaXBz
    ZSBJb1QxDTALBgNVBAsMBEhvbm8xDTALBgNVBAMMBHJvb3QwHhcNMjMwNjI0MDkw
    NjAwWhcNMjQwNjIzMDkwNjAwWjBSMQswCQYDVQQGEwJDQTEPMA0GA1UEBwwGT3R0
    YXdhMRQwEgYDVQQKDAtFY2xpcHNlIElvVDENMAsGA1UECwwESG9ubzENMAsGA1UE
    AwwEcm9vdDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAgp8l1Ao38qj7kizHpb
    5hBdid6mLc3JY67K11hocPN5z/V2SZ01Az+wo2HYtRem58KbAQNOBTvI2vDx0EUu
    d22jgdIwgc8wHQYDVR0OBBYEFD7oR5QKFx4rb18HZ+62kQ1x66cUMIGPBgNVHSME
    gYcwgYSAFD7oR5QKFx4rb18HZ+62kQ1x66cUoVakVDBSMQswCQYDVQQGEwJDQTEP
    MA0GA1UEBwwGT3R0YXdhMRQwEgYDVQQKDAtFY2xpcHNlIElvVDENMAsGA1UECwwE
    SG9ubzENMAsGA1UEAwwEcm9vdIIUfwZ93GxLHl4pKx+jUiyh/bXYkSkwDwYDVR0T
    AQH/BAUwAwEB/zALBgNVHQ8EBAMCAQYwCgYIKoZIzj0EAwIDSAAwRQIgEXB+MLWl
    LiuwXQ7w6PmcDhf646XAl3Nfo8YMSziVPIUCIQDDUfiiAnrniyFjlMKHDKk1GI/J
    UT6Pq7oL2KbKP37rNA==
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    MIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw
    TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
    cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw
    WhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg
    RW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP
    R5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx
    sxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm
    NHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg
    Z3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG
    /kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC
    AYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB
    Af8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA
    FHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw
    AoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw
    Oi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB
    gt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W
    PTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl
    ikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz
    CkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm
    lJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4
    avAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2
    yJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O
    yK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids
    hCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+
    HlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv
    MldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX
    nLRbwHOoq7hHwg==
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    MIIFazCCA1OgAwIBAgIRAIIQz7DSQONZRGPgu2OCiwAwDQYJKoZIhvcNAQELBQAw
    TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
    cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMTUwNjA0MTEwNDM4
    WhcNMzUwNjA0MTEwNDM4WjBPMQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJu
    ZXQgU2VjdXJpdHkgUmVzZWFyY2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBY
    MTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK3oJHP0FDfzm54rVygc
    h77ct984kIxuPOZXoHj3dcKi/vVqbvYATyjb3miGbESTtrFj/RQSa78f0uoxmyF+
    0TM8ukj13Xnfs7j/EvEhmkvBioZxaUpmZmyPfjxwv60pIgbz5MDmgK7iS4+3mX6U
    A5/TR5d8mUgjU+g4rk8Kb4Mu0UlXjIB0ttov0DiNewNwIRt18jA8+o+u3dpjq+sW
    T8KOEUt+zwvo/7V3LvSye0rgTBIlDHCNAymg4VMk7BPZ7hm/ELNKjD+Jo2FR3qyH
    B5T0Y3HsLuJvW5iB4YlcNHlsdu87kGJ55tukmi8mxdAQ4Q7e2RCOFvu396j3x+UC
    B5iPNgiV5+I3lg02dZ77DnKxHZu8A/lJBdiB3QW0KtZB6awBdpUKD9jf1b0SHzUv
    KBds0pjBqAlkd25HN7rOrFleaJ1/ctaJxQZBKT5ZPt0m9STJEadao0xAH0ahmbWn
    OlFuhjuefXKnEgV4We0+UXgVCwOPjdAvBbI+e0ocS3MFEvzG6uBQE3xDk3SzynTn
    jh8BCNAw1FtxNrQHusEwMFxIt4I7mKZ9YIqioymCzLq9gwQbooMDQaHWBfEbwrbw
    qHyGO0aoSCqI3Haadr8faqU9GY/rOPNk3sgrDQoo//fb4hVC1CLQJ13hef4Y53CI
    rU7m2Ys6xt0nUW7/vGT1M0NPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNV
    HRMBAf8EBTADAQH/MB0GA1UdDgQWBBR5tFnme7bl5AFzgAiIyBpY9umbbjANBgkq
    hkiG9w0BAQsFAAOCAgEAVR9YqbyyqFDQDLHYGmkgJykIrGF1XIpu+ILlaS/V9lZL
    ubhzEFnTIZd+50xx+7LSYK05qAvqFyFWhfFQDlnrzuBZ6brJFe+GnY+EgPbk6ZGQ
    3BebYhtF8GaV0nxvwuo77x/Py9auJ/GpsMiu/X1+mvoiBOv/2X/qkSsisRcOj/KK
    NFtY2PwByVS5uCbMiogziUwthDyC3+6WVwW6LLv3xLfHTjuCvjHIInNzktHCgKQ5
    ORAzI4JMPJ+GslWYHb4phowim57iaztXOoJwTdwJx4nLCgdNbOhdjsnvzqvHu7Ur
    TkXWStAmzOVyyghqpZXjFaH3pO3JLF+l+/+sKAIuvtd7u+Nxe5AW0wdeRlN8NwdC
    jNPElpzVmbUq4JUagEiuTDkHzsxHpFKVK7q4+63SM1N95R1NbdWhscdCb+ZAJzVc
    oyi3B43njTOQ5yOf+1CceWxG1bQVs5ZufpsMljq4Ui0/1lvh+wjChP4kqKOJ2qxq
    4RgqsahDYVvTH9w7jXbyLeiNdd8XM2w9U/t7y0Ff/9yi0GE44Za4rF2LN9d11TPA
    mRGunUHBcnWEvgJBQl9nJEiU0Zsnvgc/ubhPgXRR4Xq37Z0j4r7g1SgEEzwxA57d
    emyPxgcYxn/eR44/KJ4EBs+lVDR3veyJm+kXQ99b21/+jh5Xos1AnX5iItreGCc=
    -----END CERTIFICATE-----
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-base/hono-service-device-registry-post-install-configmap.yaml
#
# Copyright (c) 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: "my-release-hono-post-install-device-registry-conf"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-device-registry"
data:
  add_example_data_device_registry.sh: |
    #!/bin/sh
    #*******************************************************************************
    # Copyright (c) 2020, 2023 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    #*******************************************************************************
    URL_SCHEME="https"
    URL_PORT=$([ "${URL_SCHEME}" = "http" ] && echo "8080" || echo "8443")
    HTTP_BASE_URL="${URL_SCHEME}://my-release-hono-service-device-registry:${URL_PORT}/v1"
    
    check_status() {
      EXIT_STATUS=$1
      HTTP_RESPONSE=$2
    
      if [ $EXIT_STATUS -ne 0 ]
      then
        echo "Curl command failed [exit-code: $EXIT_STATUS]"
        exit 1
      elif [ $HTTP_RESPONSE -ne "201" ] && [ $HTTP_RESPONSE -ne "204" ] && [ $HTTP_RESPONSE -ne "409" ]
      then
        echo "Http request failed [http-response: $HTTP_RESPONSE]"
        exit 1
      fi
    }
    
    echo "Device Registry Http endpoint base url: [$HTTP_BASE_URL]"
    
    add_tenant(){
      TENANT_ID=$1
      HTTP_REQUEST_BODY=$2
    
      echo "Adding tenant [$TENANT_ID]"
      HTTP_RESPONSE=$(curl -o /dev/null -sw "%{http_code}" -k \
                        -X POST "$HTTP_BASE_URL/tenants/$TENANT_ID" \
                        --header 'Content-Type: application/json' \
                        --data-raw "$HTTP_REQUEST_BODY")
    
      check_status $? $HTTP_RESPONSE
    }
    
    register_device(){
      TENANT_ID=$1
      DEVICE_ID=$2
      HTTP_REQUEST_BODY=$3
    
      echo "Registering device [$TENANT_ID:$DEVICE_ID]"
      HTTP_RESPONSE=$(curl -o /dev/null -sw "%{http_code}" -k \
                      -X POST "$HTTP_BASE_URL/devices/$TENANT_ID/$DEVICE_ID" \
                      --header 'Content-Type: application/json' \
                      --data-raw "$HTTP_REQUEST_BODY")
    
      check_status $? $HTTP_RESPONSE
    }
    
    
    add_credentials(){
      TENANT_ID=$1
      DEVICE_ID=$2
      HTTP_REQUEST_BODY=$3
    
      echo "Adding credentials [$TENANT_ID:$DEVICE_ID]"
      HTTP_RESPONSE=$(curl -o /dev/null -sw "%{http_code}" -k \
                    -X PUT "$HTTP_BASE_URL/credentials/$TENANT_ID/$DEVICE_ID" \
                    --header 'Content-Type: application/json' \
                    --data-raw "$HTTP_REQUEST_BODY")
    
      check_status $? $HTTP_RESPONSE
    }
    
    . ./example-tenants.sh
    . ./example-devices.sh
    . ./example-credentials.sh
    
  example-tenants.sh: |
    
    #!/bin/sh
    #*******************************************************************************
    # Copyright (c) 2020, 2022 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    #*******************************************************************************
    
    DEFAULT_TENANT_TRUSTED_CA=`cat default_tenant-trusted-ca.json`
    
    add_tenant 'DEFAULT_TENANT' \
              "{
                  \"enabled\": true,
                  \"trusted-ca\": [
    $DEFAULT_TENANT_TRUSTED_CA
                  ]
                }"
    
    add_tenant 'HTTP_TENANT' \
              '{
                  "enabled": true,
                  "adapters": [
                    {
                      "type": "hono-amqp",
                      "enabled": false,
                      "device-authentication-required": true
                    },
                    {
                      "type": "hono-coap",
                      "enabled": false,
                      "device-authentication-required": true
                    },
                    {
                      "type": "hono-http",
                      "enabled": true,
                      "device-authentication-required": true
                    },
                    {
                      "type": "hono-lora",
                      "enabled": false,
                      "device-authentication-required": true
                    },
                    {
                      "type": "hono-mqtt",
                      "enabled": false,
                      "device-authentication-required": true
                    }
                  ]
                }'
    
  example-devices.sh: |
    
    #!/bin/sh
    #*******************************************************************************
    # Copyright (c) 2020 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    #*******************************************************************************
    
    register_device 'DEFAULT_TENANT' '4711' \
                    '{
                        "enabled": true,
                        "defaults": {
                            "content-type": "application/vnd.bumlux",
                            "importance": "high"
                        }
                    }'
    
    register_device 'DEFAULT_TENANT' '4712' \
                    '{
                        "enabled": true,
                        "via": [
                            "gw-1"
                        ]
                    }'
    
    register_device 'DEFAULT_TENANT' 'gw-1' \
                    '{
                        "enabled": true
                    }'
    
  example-credentials.sh: |
    
    #!/bin/sh
    #*******************************************************************************
    # Copyright (c) 2020 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    #*******************************************************************************
    
    add_credentials 'DEFAULT_TENANT' '4711' \
                    '[
                      {
                          "type": "hashed-password",
                          "auth-id": "sensor1",
                          "enabled": true,
                          "secrets": [
                              {
                                  "not-before": "2017-05-01T14:00:00+01:00",
                                  "not-after": "2037-06-01T14:00:00+01:00",
                                  "hash-function": "bcrypt",
                                  "comment": "pwd: hono-secret",
                                  "pwd-hash": "$2a$10$N7UMjhZ2hYx.yuvW9WVXZ.4y33mr6MvnpAsZ8wgLHnkamH2tZ1jD."
                              }
                          ]
                      },
                      {
                          "type": "psk",
                          "auth-id": "sensor1",
                          "enabled": true,
                          "secrets": [
                              {
                                  "not-before": "2018-01-01T00:00:00+01:00",
                                  "not-after": "2037-06-01T14:00:00+01:00",
                                  "comment": "key: hono-secret",
                                  "key": "aG9uby1zZWNyZXQ="
                              }
                          ]
                      },
                      {
                          "type": "x509-cert",
                          "auth-id": "CN=Device 4711,OU=Hono,O=Eclipse IoT,L=Ottawa,C=CA",
                          "enabled": true,
                          "secrets": [
                              {
                                  "comment": "The secrets array must contain an object, which can be empty."
                              }
                          ]
                      }]'
    
    add_credentials 'DEFAULT_TENANT' 'gw-1' \
                    '[
                          {
                              "type": "hashed-password",
                              "auth-id": "gw",
                              "enabled": true,
                              "secrets": [
                                  {
                                      "not-before": "2018-01-01T00:00:00+01:00",
                                      "not-after": "2037-06-01T14:00:00+01:00",
                                      "hash-function": "bcrypt",
                                      "comment": "pwd: gw-secret",
                                      "pwd-hash": "$2a$10$GMcN0iV9gJV7L1sH6J82Xebc1C7CGJ..Rbs./vcTuTuxPEgS9DOa6"
                                  }
                              ]
                          },
                          {
                              "type": "psk",
                              "auth-id": "gw",
                              "enabled": true,
                              "secrets": [
                                  {
                                      "not-before": "2018-01-01T00:00:00+01:00",
                                      "not-after": "2037-06-01T14:00:00+01:00",
                                      "comment": "key: gw-secret",
                                      "key": "Z3ctc2VjcmV0"
                                  }
                              ]
                          }
                  ]'
    
  default_tenant-trusted-ca.json: |
    
    {
      "subject-dn": "CN=DEFAULT_TENANT_CA,OU=Hono,O=Eclipse IoT,L=Ottawa,C=CA",
      "public-key": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEuL3/RNv+etr5zVv1NqoMIIypP9ysh0cVzsf4dKIuo/iNVxhVBMfnqW77DHNK3dhvdmlvRr3ewflSlrJ2ECBjCg==",
      "algorithm": "EC",
      "not-before": "2023-06-24T11:06:00+02:00",
      "not-after": "2024-06-23T11:06:00+02:00"
    }
---
# Source: cloud2edge/charts/ditto/templates/role.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-ditto
  labels:
    app.kubernetes.io/name: ditto
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
    - "" # "" indicates the core API group
  resources:
    - "pods"
  verbs:
    - "get"
    - "watch"
    - "list"
    - "patch" # we require "patch" to annotate the pods with pod-deletion-cost
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-kafka
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
    app.kubernetes.io/component: kafka
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-base/hono-adapter-role.yaml
#
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "my-release-hono-adapter"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "my-release-hono-service-command-router"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "watch"]
---
# Source: cloud2edge/charts/ditto/templates/rolebinding.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-ditto
  labels:
    app.kubernetes.io/name: ditto
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  name: my-release-ditto
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: my-release-ditto
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/rbac/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-kafka
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
    app.kubernetes.io/component: kafka
roleRef:
  kind: Role
  name: my-release-kafka
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: my-release-kafka
    namespace: cloud2edge-0.9.0.tgz
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-base/hono-adapter-rolebinding.yaml
#
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "my-release-hono-adapter"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
roleRef:
  kind: Role
  name: "my-release-hono-adapter"
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: "my-release-hono-adapter"
    namespace: cloud2edge-0.9.0.tgz
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "my-release-hono-service-command-router"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
roleRef:
  kind: Role
  name: "my-release-hono-service-command-router"
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: "my-release-hono-service-command-router"
    namespace: cloud2edge-0.9.0.tgz
---
# Source: cloud2edge/charts/ditto/charts/mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-mongodb
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 6.0.10
    helm.sh/chart: mongodb-13.18.5
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: "mongodb"
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: mongodb
---
# Source: cloud2edge/charts/ditto/templates/dittoui-service.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: Service
metadata:
  name: my-release-ditto-dittoui
  labels:
    app.kubernetes.io/name: ditto-dittoui
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ditto-dittoui
    app.kubernetes.io/instance: my-release
---
# Source: cloud2edge/charts/ditto/templates/gateway-service.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: Service
metadata:
  name: my-release-ditto-gateway
  labels:
    app.kubernetes.io/name: ditto-gateway
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ditto-gateway
    app.kubernetes.io/instance: my-release
---
# Source: cloud2edge/charts/ditto/templates/nginx-service.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: Service
metadata:
  name: my-release-ditto-nginx
  labels:
    app.kubernetes.io/name: ditto-nginx
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ditto-nginx
    app.kubernetes.io/instance: my-release
---
# Source: cloud2edge/charts/ditto/templates/swaggerui-service.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: Service
metadata:
  name: my-release-ditto-swaggerui
  labels:
    app.kubernetes.io/name: ditto-swaggerui
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ditto-swaggerui
    app.kubernetes.io/instance: my-release
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/controller-eligible/svc-external-access.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kafka-controller-0-external
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
    app.kubernetes.io/component: kafka
    pod: my-release-kafka-controller-0
spec:
  type: NodePort
  publishNotReadyAddresses: false
  ports:
    - name: tcp-kafka
      port: 9094
      nodePort: null
      targetPort: external
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: kafka
    app.kubernetes.io/part-of: kafka
    app.kubernetes.io/component: controller-eligible
    statefulset.kubernetes.io/pod-name: my-release-kafka-controller-0
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/controller-eligible/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kafka-controller-headless
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
    app.kubernetes.io/component: controller-eligible
    app.kubernetes.io/part-of: kafka
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: tcp-interbroker
      port: 9094
      protocol: TCP
      targetPort: interbroker
    - name: tcp-client
      port: 9092
      protocol: TCP
      targetPort: client
    - name: tcp-controller
      protocol: TCP
      port: 9093
      targetPort: controller
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: kafka
    app.kubernetes.io/component: controller-eligible
    app.kubernetes.io/part-of: kafka
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kafka
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
    app.kubernetes.io/component: kafka
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-client
      port: 9092
      protocol: TCP
      targetPort: client
      nodePort: null
    - name: tcp-external
      port: 9095
      protocol: TCP
      targetPort: external
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: kafka
    app.kubernetes.io/part-of: kafka
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-amqp/hono-adapter-amqp-svc.yaml
#
# Copyright (c) 2019, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: "my-release-hono-adapter-amqp"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-amqp"
spec:
  ports:
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
    
    nodePort: 32671
  selector:
    app.kubernetes.io/name: "hono"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/component: "adapter-amqp"
  type: "NodePort"
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-http/hono-adapter-http-svc.yaml
#
# Copyright (c) 2019, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: "my-release-hono-adapter-http"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-http"
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
    
    nodePort: 30443
  selector:
    app.kubernetes.io/name: "hono"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/component: "adapter-http"
  type: "NodePort"
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-mqtt/hono-adapter-mqtt-svc.yaml
#
# Copyright (c) 2019, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: "my-release-hono-adapter-mqtt"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-mqtt"
spec:
  ports:
  - name: secure-mqtt
    port: 8883
    protocol: TCP
    targetPort: secure-mqtt
    
    nodePort: 30883
  selector:
    app.kubernetes.io/name: "hono"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/component: "adapter-mqtt"
  type: "NodePort"
---
# Source: cloud2edge/charts/hono/templates/hono-service-auth/hono-service-auth-svc.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: "my-release-hono-service-auth"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-auth"
spec:
  ports:
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
  - name: validation-keys
    port: 8088
    protocol: TCP
    targetPort: health
  selector:
    app.kubernetes.io/name: "hono"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/component: "service-auth"
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-svc.yaml
#
# Copyright (c) 2021, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: "my-release-hono-service-command-router"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-command-router"
spec:
  ports:
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
  selector:
    app.kubernetes.io/name: "hono"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/component: "service-command-router"
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-base/hono-service-device-registry-ext-svc.yaml
#
# Copyright (c) 2019, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: "my-release-hono-service-device-registry-ext"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-device-registry"
spec:
  ports:
  - name: https
    port: 28443
    protocol: TCP
    targetPort: https
    
    nodePort: 31443
  selector:
    app.kubernetes.io/name: "hono"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/component: "service-device-registry"
  type: "NodePort"
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-base/hono-service-device-registry-svc.yaml
#
# Copyright (c) 2019, 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: "my-release-hono-service-device-registry"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-device-registry"
spec:
  ports:
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: "hono"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/component: "service-device-registry"
---
# Source: cloud2edge/charts/ditto/charts/mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-mongodb
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 6.0.10
    helm.sh/chart: mongodb-13.18.5
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/version: 6.0.10
        helm.sh/chart: mongodb-13.18.5
        app.kubernetes.io/component: mongodb
    spec:
      
      serviceAccountName: my-release-mongodb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: mongodb
                    app.kubernetes.io/component: mongodb
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        sysctls: []
      
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:6.0.10-debian-11-r8
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_PORT_NUMBER
              value: "27017"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 40
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 15
            exec:
              command:
                - /bitnami/scripts/ping-mongodb.sh
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 13
            exec:
              command:
                - /bitnami/scripts/readiness-probe.sh
          resources:
            limits:
              cpu: 250m
              memory: 512Mi
            requests:
              cpu: 150m
              memory: 256Mi
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
            - name: common-scripts
              mountPath: /bitnami/scripts
      volumes:
        - name: common-scripts
          configMap:
            name: my-release-mongodb-common-scripts
            defaultMode: 0550
        - name: datadir
          emptyDir: {}
---
# Source: cloud2edge/charts/ditto/templates/connectivity-deployment.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ditto-connectivity
  labels:
    app.kubernetes.io/name: ditto-connectivity
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-connectivity
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-connectivity
        app.kubernetes.io/instance: my-release
        actorSystemName: ditto-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9095"
        checksum/mongodb-config: cad01276ff72651c00e9711d58c06bfdda82e3bde09f50d7df4fae9286a6ae12
    spec:
      serviceAccountName: my-release-ditto
      securityContext:
        fsGroup: 1000
      initContainers:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ditto-connectivity
      containers:
        - name: ditto-connectivity
          image: docker.io/eclipse/ditto-connectivity:3.5.6
          imagePullPolicy: IfNotPresent
          env:
            - name: DITTO_METRICS_METRIC_PREFIX
              value: ""
            - name: SYSTEM_METRICS_ENABLED
              value: "true"
            - name: DITTO_TRACING_ENABLED
              value: "false"
            - name: DITTO_TRACING_OTEL_TRACE_REPORTER_ENABLED
              value: "false"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://localhost:4317"
            - name: DITTO_TRACING_SAMPLER
              value: "never"
            - name: DITTO_TRACING_RANDOM_SAMPLER_PROBABILITY
              value: "0.01"
            - name: DITTO_TRACING_ADAPTIVE_SAMPLER_THROUGHPUT
              value: "600"
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: cloud2edge-0.9.0.tgz
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: >
                -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxMetaspaceSize=256m -XX:+UseG1GC -Djava.net.preferIPv4Stack=true

                -XX:ActiveProcessorCount=2
                -XX:MaxRAMPercentage=60
                -XX:InitialRAMPercentage=60
                -XX:MaxGCPauseMillis=150
                
                -Dpekko.management.cluster.bootstrap.contact-point-discovery.port-name=management -Dpekko.cluster.failure-detector.threshold=15.0 -Dpekko.cluster.failure-detector.expected-response-after=3s -Dpekko.cluster.failure-detector.acceptable-heartbeat-pause=7s -Dpekko.persistence.journal-plugin-fallback.recovery-event-timeout=30s -Dpekko.persistence.max-concurrent-recoveries=100 -Dpekko.cluster.sharding.updating-state-timeout=20s -Dpekko.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s

                -Dlogback.configurationFile=/opt/ditto/logback.xml
                
            - name: MONGO_DB_SSL_ENABLED
              value: "false"
            - name: MONGO_DB_URI
              valueFrom:
                secretKeyRef:
                  name: my-release-ditto-mongodb-secret
                  key: connectivity-uri
            - name: MONGO_DB_CONNECTION_MIN_POOL_SIZE
              value: "10"
            - name: MONGO_DB_CONNECTION_POOL_SIZE
              value: "50"
            - name: MONGO_DB_CONNECTION_POOL_IDLE_TIME
              value: "10m"
            - name: CLUSTER_BS_REQUIRED_CONTACTS
              value: "5"
            - name: DITTO_DDATA_NUMBER_OF_SHARDS
              value: "1"
            - name: DITTO_DDATA_MAX_DELTA_ELEMENTS
              value: "1"
            - name: CLUSTER_NUMBER_OF_SHARDS
              value: "50"
            - name: CLUSTER_DOWNING_STABLE_AFTER
              value: "15s"
            - name: CLUSTER_DOWNING_DOWN_ALL_WHEN_UNSTABLE
              value: "on"
            - name: PROMETHEUS_PORT
              value: "9095"
            - name: REMOTE_MAX_FRAMESIZE
              value: "256k"
            - name: LIMITS_THINGS_MAX_SIZE
              value: "100k"
            - name: LIMITS_POLICIES_MAX_SIZE
              value: "100k"
            - name: LIMITS_POLICIES_MAX_IMPORTS
              value: "10"
            - name: LIMITS_MESSAGES_MAX_SIZE
              value: "250k"
            - name: LIMITS_MESSAGES_HEADERS_SIZE
              value: "5k"
            - name: LIMITS_MESSAGES_AUTH_SUBJECTS_COUNT
              value: "100"
            - name: PEKKO_PERSISTENCE_MONGO_JOURNAL_WRITE_CONCERN
              value: "Journaled"
            - name: PEKKO_PERSISTENCE_MONGO_SNAPS_WRITE_CONCERN
              value: "Journaled"
            - name: BREAKER_MAXTRIES
              value: "10"
            - name: BREAKER_TIMEOUT
              value: "10s"
            - name: BREAKER_RESET
              value: "5s"
            - name: SNAPSHOT_BREAKER_MAXTRIES
              value: "10"
            - name: SNAPSHOT_BREAKER_TIMEOUT
              value: "20s"
            - name: SNAPSHOT_BREAKER_RESET
              value: "8s"
            - name: CONNECTION_ACTIVITY_CHECK_INTERVAL
              value: "45m"
            - name: HEALTH_CHECK_METRICS_REPORTER_RESOLUTION
              value: "1s"
            - name: HEALTH_CHECK_METRICS_REPORTER_HISTORY
              value: "5"
            - name: CLEANUP_ENABLED
              value: "false"
            - name: CLEANUP_QUIET_PERIOD
              value: "5m"
            - name: CLEANUP_HISTORY_RETENTION_DURATION
              value: "30d"
            - name: CLEANUP_INTERVAL
              value: "10s"
            - name: CLEANUP_TIMER_THRESHOLD
              value: "100ms"
            - name: CLEANUP_CREDITS_PER_BATCH
              value: "5"
            - name: CLEANUP_DELETE_FINAL_DELETED_SNAPSHOT
              value: "true"
            - name: CONNECTION_SNAPSHOT_INTERVAL
              value: "15m"
            - name: CONNECTION_SNAPSHOT_THRESHOLD
              value: "5"
            - name: DITTO_POLICIES_ENFORCER_CACHE_ENABLED
              value: "true"
            - name: DITTO_POLICIES_ENFORCER_CACHE_MAX_SIZE
              value: "1000"
            - name: DITTO_POLICIES_ENFORCER_CACHE_EXPIRE_AFTER_WRITE
              value: "8h"
            - name: DITTO_POLICIES_ENFORCER_CACHE_EXPIRE_AFTER_ACCESS
              value: "4h"
            - name: RECONNECT_RATE_FREQUENCY
              value: "1s"
            - name: RECONNECT_RATE_ENTITIES
              value: "10"
            - name: CONNECTIVITY_CONNECTION_ALLOWED_HOSTNAMES
              value: ""
            - name: CONNECTIVITY_CONNECTION_BLOCKED_HOSTNAMES
              value: ""
            - name: CONNECTIVITY_CONNECTION_BLOCKED_SUBNETS
              value: ""
            - name: CONNECTIVITY_CONNECTION_BLOCKED_HOST_REGEX
              value: ""
            - name: CONNECTION_SOURCE_NUMBER
              value: "5"
            - name: CONNECTION_TARGET_NUMBER
              value: "5"
            - name: CONNECTIVITY_SIGNAL_ENRICHMENT_BUFFER_SIZE
              value: "200"
            - name: KAFKA_CONSUMER_THROTTLING_ENABLED
              value: "true"
            - name: KAFKA_CONSUMER_THROTTLING_INTERVAL
              value: "1s"
            - name: KAFKA_CONSUMER_THROTTLING_LIMIT
              value: "500"
            - name: KAFKA_CONSUMER_THROTTLING_MAX_IN_FLIGHT_FACTOR
              value: "2"
            - name: KAFKA_PRODUCER_QUEUE_SIZE
              value: "1000"
            - name: KAFKA_PRODUCER_PARALLELISM
              value: "10"
          ports:
            - name: remoting
              containerPort: 2551
              protocol: TCP
            - name: management
              containerPort: 7626
              protocol: TCP
            - name: prometheus
              protocol: TCP
              containerPort: 9095
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: 160
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 4
          volumeMounts:
            - name: ditto-custom-log-config
              mountPath: /opt/ditto/logback.xml
              subPath: logback.xml
          resources:
            requests:
              cpu: 200m
              memory: 1024Mi
            limits:
              # ## no cpu limit to avoid CFS scheduler limits
              # ref: https://pekko.apache.org/docs/pekko/current/additional/deploying.html#deploying-to-kubernetes
              # cpu: ""
              memory: 1024Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
      priorityClassName: ""
      volumes:
        - name: ditto-custom-log-config
          configMap:
            name: my-release-logback-config-connectivity-xml
---
# Source: cloud2edge/charts/ditto/templates/dittoui-deployment.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ditto-dittoui
  labels:
    app.kubernetes.io/name: ditto-dittoui
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-dittoui
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-dittoui
        app.kubernetes.io/instance: my-release
      annotations:
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ditto-dittoui
      containers:
        - name: ditto-dittoui
          image: docker.io/eclipse/ditto-ui:3.5.6
          imagePullPolicy: IfNotPresent
          env:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 50m
              memory: 32Mi
            limits:
              # cpu: # don't limit
              memory: 32Mi
          volumeMounts:
            - name: dittoui-nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: dittoui-nginx-conf
          configMap:
            name: my-release-dittoui-config-nginx-conf
---
# Source: cloud2edge/charts/ditto/templates/gateway-deployment.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ditto-gateway
  labels:
    app.kubernetes.io/name: ditto-gateway
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-gateway
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-gateway
        app.kubernetes.io/instance: my-release
        actorSystemName: ditto-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9095"
        checksum/password-config: d51695ef32755798984476136c44e7cd592b66cabb6f28f36a3ca80250ad19f0
        checksum/mongodb-config: cad01276ff72651c00e9711d58c06bfdda82e3bde09f50d7df4fae9286a6ae12
    spec:
      serviceAccountName: my-release-ditto
      securityContext:
        fsGroup: 1000
      initContainers:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ditto-gateway
      containers:
        - name: ditto-gateway
          image: docker.io/eclipse/ditto-gateway:3.5.6
          imagePullPolicy: IfNotPresent
          env:
            - name: DITTO_METRICS_METRIC_PREFIX
              value: ""
            - name: SYSTEM_METRICS_ENABLED
              value: "true"
            - name: DITTO_TRACING_ENABLED
              value: "false"
            - name: DITTO_TRACING_OTEL_TRACE_REPORTER_ENABLED
              value: "false"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://localhost:4317"
            - name: DITTO_TRACING_SAMPLER
              value: "never"
            - name: DITTO_TRACING_RANDOM_SAMPLER_PROBABILITY
              value: "0.01"
            - name: DITTO_TRACING_ADAPTIVE_SAMPLER_THROUGHPUT
              value: "600"
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: cloud2edge-0.9.0.tgz
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: >
                -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxMetaspaceSize=256m -XX:+UseG1GC -Djava.net.preferIPv4Stack=true

                -XX:ActiveProcessorCount=2
                -XX:MaxRAMPercentage=60
                -XX:InitialRAMPercentage=60
                -XX:MaxGCPauseMillis=150
                
                -Dpekko.management.cluster.bootstrap.contact-point-discovery.port-name=management -Dpekko.cluster.failure-detector.threshold=15.0 -Dpekko.cluster.failure-detector.expected-response-after=3s -Dpekko.cluster.failure-detector.acceptable-heartbeat-pause=7s -Dpekko.persistence.journal-plugin-fallback.recovery-event-timeout=30s -Dpekko.persistence.max-concurrent-recoveries=100 -Dpekko.cluster.sharding.updating-state-timeout=20s -Dpekko.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s

                -Dlogback.configurationFile=/opt/ditto/logback.xml
                -Dditto.protocol.blocklist.0=raw-request-uri -Dditto.protocol.blocklist.1=cache-control -Dditto.protocol.blocklist.2=connection -Dditto.protocol.blocklist.3=timeout-access -Dditto.protocol.blocklist.4=accept-encoding -Dditto.protocol.blocklist.5=x-forwarded-scheme -Dditto.protocol.blocklist.6=x-forwarded-port -Dditto.protocol.blocklist.7=x-forwarded-for -Dditto.protocol.blocklist.8=forwarded=for -Dditto.protocol.blocklist.9=sec-fetch-mode -Dditto.protocol.blocklist.10=sec-fetch-site -Dditto.protocol.blocklist.11=authorization -Dditto.protocol.blocklist.12=accept-language -Dditto.protocol.blocklist.13=host -Dditto.protocol.blocklist.14=via -Dditto.protocol.blocklist.15=sec-ch-ua -Dditto.protocol.blocklist.16=sec-ch-ua-mobile -Dditto.protocol.blocklist.17=sec-ch-ua-platform -Dditto.protocol.blocklist.18=sec-fetch-dest -Dditto.protocol.blocklist.19=user-agent
            - name: CLUSTER_BS_REQUIRED_CONTACTS
              value: "5"
            - name: DITTO_DDATA_NUMBER_OF_SHARDS
              value: "1"
            - name: DITTO_DDATA_MAX_DELTA_ELEMENTS
              value: "1"
            - name: CLUSTER_NUMBER_OF_SHARDS
              value: "50"
            - name: CLUSTER_DOWNING_STABLE_AFTER
              value: "15s"
            - name: CLUSTER_DOWNING_DOWN_ALL_WHEN_UNSTABLE
              value: "on"
            - name: PROMETHEUS_PORT
              value: "9095"
            - name: REMOTE_MAX_FRAMESIZE
              value: "256k"
            - name: LIMITS_THINGS_MAX_SIZE
              value: "100k"
            - name: LIMITS_POLICIES_MAX_SIZE
              value: "100k"
            - name: LIMITS_POLICIES_MAX_IMPORTS
              value: "10"
            - name: LIMITS_MESSAGES_MAX_SIZE
              value: "250k"
            - name: LIMITS_MESSAGES_HEADERS_SIZE
              value: "5k"
            - name: LIMITS_MESSAGES_AUTH_SUBJECTS_COUNT
              value: "100"
            - name: ENABLE_PRE_AUTHENTICATION
              value: "true"
            - name: DEVOPS_SECURED
              value: "true"
            - name: DEVOPS_AUTHENTICATION_METHOD
              value: "basic"
            - name: DEVOPS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-ditto-gateway-secret
                  key: devops-password
            - name: DEVOPS_STATUS_SECURED
              value: "true"
            - name: STATUS_AUTHENTICATION_METHOD
              value: "basic"
            - name: STATUS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-ditto-gateway-secret
                  key: status-password
            - name: WS_SUBSCRIBER_BACKPRESSURE
              value: "100"
            - name: WS_PUBLISHER_BACKPRESSURE
              value: "200"
            - name: GATEWAY_WEBSOCKET_THROTTLING_ENABLED
              value: "true"
            - name: GATEWAY_WEBSOCKET_THROTTLING_INTERVAL
              value: "1s"
            - name: GATEWAY_WEBSOCKET_THROTTLING_LIMIT
              value: "100"
            - name: GATEWAY_SSE_THROTTLING_ENABLED
              value: "true"
            - name: GATEWAY_SSE_THROTTLING_INTERVAL
              value: "1s"
            - name: GATEWAY_SSE_THROTTLING_LIMIT
              value: "100"
            - name: OAUTH_ALLOWED_CLOCK_SKEW
              value: "20s"
            - name: OAUTH_TOKEN_INTEGRATION_SUBJECT
              value: "integration:{{policy-entry:label}}:{{jwt:aud}}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: remoting
              containerPort: 2551
              protocol: TCP
            - name: management
              containerPort: 7626
              protocol: TCP
            - name: prometheus
              protocol: TCP
              containerPort: 9095
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: 160
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 4
          volumeMounts:
            - name: ditto-custom-log-config
              mountPath: /opt/ditto/logback.xml
              subPath: logback.xml
          resources:
            requests:
              cpu: 200m
              memory: 768Mi
            limits:
              # ## no cpu limit to avoid CFS scheduler limits
              # ref: https://pekko.apache.org/docs/pekko/current/additional/deploying.html#deploying-to-kubernetes
              # cpu: ""
              memory: 768Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
      priorityClassName: ""
      volumes:
        - name: ditto-custom-log-config
          configMap:
            name: my-release-logback-config-gateway-xml
---
# Source: cloud2edge/charts/ditto/templates/nginx-deployment.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ditto-nginx
  labels:
    app.kubernetes.io/name: ditto-nginx
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-nginx
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-nginx
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/nginx-conf: b72f1f1e92e292061f0f9ff79a7f7810984c9aa6548a0fb4c91935190552c4c3
        checksum/nginx-config: 3c8bc2c05eb4df497ff4fa805303744b524f596f933fe778dc8f6517129e37cc
        checksum/nginx-auth: 96ef772b4d1ca5e7c3085d47c7c8798d05d6f2b93b48ec6ea85145255e7f0604
    spec:
      initContainers:
        - name: wait-for-gateway
          image: rancher/curlimages-curl:7.73.0
          args:
            - /bin/sh
            - -c
            - >
              set -x;
              while [[ "$(curl -sL -w "%{http_code}\n" http://my-release-ditto-gateway:8080/health -o /dev/null)" != "200" ]]; do
                echo '.'
                sleep 1;
              done
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ditto-nginx
      containers:
        - name: ditto-nginx
          image: "docker.io/nginx:1.25"
          imagePullPolicy: IfNotPresent
          env:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 50m
              memory: 32Mi
            limits:
              # cpu: # don't limit
              memory: 32Mi
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-htpasswd
              mountPath: /etc/nginx/nginx.htpasswd
              subPath: nginx.htpasswd
            - name: nginx-cors
              mountPath: /etc/nginx/nginx-cors.conf
              subPath: nginx-cors.conf
            - name: nginx-index
              mountPath: /etc/nginx/html/index.html
              subPath: index.html
            - name: nginx-ditto-down
              mountPath: /etc/nginx/html/ditto-down.svg
              subPath: ditto-down.svg
            - name: nginx-ditto-up
              mountPath: /etc/nginx/html/ditto-up.svg
              subPath: ditto-up.svg
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /run/nginx
      volumes:
        - name: nginx-conf
          configMap:
            name: my-release-nginx-conf
        - name: nginx-htpasswd
          secret:
            secretName: my-release-nginx-config-nginx-htpasswd
        - name: nginx-cors
          configMap:
            name: my-release-nginx-config-nginx-cors-conf
        - name: nginx-index
          configMap:
            name: my-release-nginx-config-index-html
        - name: nginx-ditto-down
          configMap:
            name: my-release-nginx-config-ditto-down-svg
        - name: nginx-ditto-up
          configMap:
            name: my-release-nginx-config-ditto-up-svg
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
      priorityClassName: ""
---
# Source: cloud2edge/charts/ditto/templates/policies-deployment.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ditto-policies
  labels:
    app.kubernetes.io/name: ditto-policies
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-policies
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-policies
        app.kubernetes.io/instance: my-release
        actorSystemName: ditto-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9095"
        checksum/mongodb-config: cad01276ff72651c00e9711d58c06bfdda82e3bde09f50d7df4fae9286a6ae12
    spec:
      serviceAccountName: my-release-ditto
      securityContext:
        fsGroup: 1000
      initContainers:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ditto-policies
      containers:
        - name: ditto-policies
          image: docker.io/eclipse/ditto-policies:3.5.6
          imagePullPolicy: IfNotPresent
          env:
            - name: DITTO_METRICS_METRIC_PREFIX
              value: ""
            - name: SYSTEM_METRICS_ENABLED
              value: "true"
            - name: DITTO_TRACING_ENABLED
              value: "false"
            - name: DITTO_TRACING_OTEL_TRACE_REPORTER_ENABLED
              value: "false"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://localhost:4317"
            - name: DITTO_TRACING_SAMPLER
              value: "never"
            - name: DITTO_TRACING_RANDOM_SAMPLER_PROBABILITY
              value: "0.01"
            - name: DITTO_TRACING_ADAPTIVE_SAMPLER_THROUGHPUT
              value: "600"
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: cloud2edge-0.9.0.tgz
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: >
                -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxMetaspaceSize=256m -XX:+UseG1GC -Djava.net.preferIPv4Stack=true

                -XX:ActiveProcessorCount=2
                -XX:MaxRAMPercentage=60
                -XX:InitialRAMPercentage=60
                -XX:MaxGCPauseMillis=150
                -Dpekko.management.cluster.bootstrap.contact-point-discovery.port-name=management -Dpekko.cluster.failure-detector.threshold=15.0 -Dpekko.cluster.failure-detector.expected-response-after=3s -Dpekko.cluster.failure-detector.acceptable-heartbeat-pause=7s -Dpekko.persistence.journal-plugin-fallback.recovery-event-timeout=30s -Dpekko.persistence.max-concurrent-recoveries=100 -Dpekko.cluster.sharding.updating-state-timeout=20s -Dpekko.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s

                -Dlogback.configurationFile=/opt/ditto/logback.xml
                "-Dditto.entity-creation.grant.0.resource-types.0=policy"
                
            - name: MONGO_DB_SSL_ENABLED
              value: "false"
            - name: MONGO_DB_URI
              valueFrom:
                secretKeyRef:
                  name: my-release-ditto-mongodb-secret
                  key: policies-uri
            - name: MONGO_DB_CONNECTION_MIN_POOL_SIZE
              value: "10"
            - name: MONGO_DB_CONNECTION_POOL_SIZE
              value: "200"
            - name: MONGO_DB_CONNECTION_POOL_IDLE_TIME
              value: "10m"
            - name: PROMETHEUS_PORT
              value: "9095"
            - name: CLUSTER_BS_REQUIRED_CONTACTS
              value: "5"
            - name: DITTO_DDATA_NUMBER_OF_SHARDS
              value: "1"
            - name: DITTO_DDATA_MAX_DELTA_ELEMENTS
              value: "1"
            - name: CLUSTER_NUMBER_OF_SHARDS
              value: "50"
            - name: CLUSTER_DOWNING_STABLE_AFTER
              value: "15s"
            - name: CLUSTER_DOWNING_DOWN_ALL_WHEN_UNSTABLE
              value: "on"
            - name: REMOTE_MAX_FRAMESIZE
              value: "256k"
            - name: LIMITS_THINGS_MAX_SIZE
              value: "100k"
            - name: LIMITS_POLICIES_MAX_SIZE
              value: "100k"
            - name: LIMITS_POLICIES_MAX_IMPORTS
              value: "10"
            - name: LIMITS_MESSAGES_MAX_SIZE
              value: "250k"
            - name: LIMITS_MESSAGES_HEADERS_SIZE
              value: "5k"
            - name: LIMITS_MESSAGES_AUTH_SUBJECTS_COUNT
              value: "100"
            - name: PEKKO_PERSISTENCE_MONGO_JOURNAL_WRITE_CONCERN
              value: "Journaled"
            - name: PEKKO_PERSISTENCE_MONGO_SNAPS_WRITE_CONCERN
              value: "Journaled"
            - name: BREAKER_MAXTRIES
              value: "10"
            - name: BREAKER_TIMEOUT
              value: "10s"
            - name: BREAKER_RESET
              value: "5s"
            - name: SNAPSHOT_BREAKER_MAXTRIES
              value: "10"
            - name: SNAPSHOT_BREAKER_TIMEOUT
              value: "20s"
            - name: SNAPSHOT_BREAKER_RESET
              value: "8s"
            - name: POLICY_ACTIVITY_CHECK_INTERVAL
              value: "2d"
            - name: HEALTH_CHECK_METRICS_REPORTER_RESOLUTION
              value: "1s"
            - name: HEALTH_CHECK_METRICS_REPORTER_HISTORY
              value: "5"
            - name: CLEANUP_ENABLED
              value: "false"
            - name: CLEANUP_QUIET_PERIOD
              value: "5m"
            - name: CLEANUP_HISTORY_RETENTION_DURATION
              value: "30d"
            - name: CLEANUP_INTERVAL
              value: "1s"
            - name: CLEANUP_TIMER_THRESHOLD
              value: "100ms"
            - name: CLEANUP_CREDITS_PER_BATCH
              value: "5"
            - name: CLEANUP_DELETE_FINAL_DELETED_SNAPSHOT
              value: "true"
            - name: POLICIES_PERSISTENCE_PING_RATE_FREQUENCY
              value: "1s"
            - name: POLICIES_PERSISTENCE_PING_RATE_ENTITIES
              value: "50"
            - name: POLICY_SNAPSHOT_INTERVAL
              value: "15m"
            - name: POLICY_SNAPSHOT_THRESHOLD
              value: "5"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: remoting
              containerPort: 2551
              protocol: TCP
            - name: management
              containerPort: 7626
              protocol: TCP
            - name: prometheus
              protocol: TCP
              containerPort: 9095
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: 160
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 4
          volumeMounts:
            - name: ditto-custom-log-config
              mountPath: /opt/ditto/logback.xml
              subPath: logback.xml
          resources:
            requests:
              cpu: 200m
              memory: 768Mi
            limits:
              # ## no cpu limit to avoid CFS scheduler limits
              # ref: https://pekko.apache.org/docs/pekko/current/additional/deploying.html#deploying-to-kubernetes
              # cpu: ""
              memory: 768Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
      priorityClassName: ""
      volumes:
        - name: ditto-custom-log-config
          configMap:
            name: my-release-logback-config-policies-xml
---
# Source: cloud2edge/charts/ditto/templates/swaggerui-deployment.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ditto-swaggerui
  labels:
    app.kubernetes.io/name: ditto-swaggerui
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-swaggerui
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-swaggerui
        app.kubernetes.io/instance: my-release
      annotations:
    spec:
      initContainers:
        - name: ditto-swaggerui-init
          image: "docker.io/curlimages/curl:8.3.0"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -ec
            - |
               mkdir -p ~/openapi
               curl -sL https://raw.githubusercontent.com/eclipse/ditto/3.5.6/documentation/src/main/resources/openapi/ditto-api-2.yml -o ~/openapi/ditto-api-2.yml
               sed --in-place "\=- url: 'https://ditto.eclipseprojects.io/'=d" ~/openapi/ditto-api-2.yml
               sed --in-place "/description: online Ditto Sandbox/d" ~/openapi/ditto-api-2.yml
               echo "removing Google auth from ditto-api-2.yml"
               sed --in-place "/- Google:/,+1d" ~/openapi/ditto-api-2.yml
               sed --in-place "/    Google:/,+9d" ~/openapi/ditto-api-2.yml
               echo "removing NginxBasic auth from ditto-api-2.yml"
               sed --in-place "/- NginxBasic: \[]/d" ~/openapi/ditto-api-2.yml
               sed --in-place "/    NginxBasic:/,+3d" ~/openapi/ditto-api-2.yml
               echo "removing DevOpsBearer auth from ditto-api-2.yml"
               sed --in-place "/- DevOpsBearer: \[]/d" ~/openapi/ditto-api-2.yml
               sed --in-place "/    DevOpsBearer:/,+4d" ~/openapi/ditto-api-2.yml
               sed --in-place "s=- url: /=- url: /=g" ~/openapi/ditto-api-2.yml
               cp -rv ~/openapi/. /init-config/
          volumeMounts:
            - name: swagger-ui-init-config
              mountPath: /init-config
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ditto-swaggerui
      containers:
        - name: ditto-swaggerui
          image: "docker.io/swaggerapi/swagger-ui:v5.9.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: QUERY_CONFIG_ENABLED
              value: "true"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 50m
              memory: 32Mi
            limits:
              # cpu: # don't limit
              memory: 32Mi
          volumeMounts:
            - name: swagger-ui-init-config
              mountPath: /usr/share/nginx/html/openapi
            - name: swaggerui-index
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
      volumes:
        - name: swagger-ui-init-config
          emptyDir: {}
        - name: swaggerui-index
          configMap:
            name: my-release-swaggerui-config-index-html
---
# Source: cloud2edge/charts/ditto/templates/things-deployment.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ditto-things
  labels:
    app.kubernetes.io/name: ditto-things
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-things
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-things
        app.kubernetes.io/instance: my-release
        actorSystemName: ditto-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9095"
        checksum/mongodb-config: cad01276ff72651c00e9711d58c06bfdda82e3bde09f50d7df4fae9286a6ae12
    spec:
      serviceAccountName: my-release-ditto
      securityContext:
        fsGroup: 1000
      initContainers:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ditto-things
      containers:
        - name: ditto-things
          image: docker.io/eclipse/ditto-things:3.5.6
          imagePullPolicy: IfNotPresent
          env:
            - name: DITTO_METRICS_METRIC_PREFIX
              value: ""
            - name: SYSTEM_METRICS_ENABLED
              value: "true"
            - name: DITTO_TRACING_ENABLED
              value: "false"
            - name: DITTO_TRACING_OTEL_TRACE_REPORTER_ENABLED
              value: "false"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://localhost:4317"
            - name: DITTO_TRACING_SAMPLER
              value: "never"
            - name: DITTO_TRACING_RANDOM_SAMPLER_PROBABILITY
              value: "0.01"
            - name: DITTO_TRACING_ADAPTIVE_SAMPLER_THROUGHPUT
              value: "600"
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: cloud2edge-0.9.0.tgz
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: >
                -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxMetaspaceSize=256m -XX:+UseG1GC -Djava.net.preferIPv4Stack=true

                -XX:ActiveProcessorCount=2
                -XX:MaxRAMPercentage=60
                -XX:InitialRAMPercentage=60
                -XX:MaxGCPauseMillis=150
                
                -Dpekko.management.cluster.bootstrap.contact-point-discovery.port-name=management -Dpekko.cluster.failure-detector.threshold=15.0 -Dpekko.cluster.failure-detector.expected-response-after=3s -Dpekko.cluster.failure-detector.acceptable-heartbeat-pause=7s -Dpekko.persistence.journal-plugin-fallback.recovery-event-timeout=30s -Dpekko.persistence.max-concurrent-recoveries=100 -Dpekko.cluster.sharding.updating-state-timeout=20s -Dpekko.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s

                -Dlogback.configurationFile=/opt/ditto/logback.xml
                "-Dditto.entity-creation.grant.0.resource-types.0=thing"
                '-Dditto.things.wot.to-thing-description.json-template={  "securityDefinitions": {    "basic_sc": {      "scheme": "basic",      "in": "header"    }  },  "security": "basic_sc",  "support": "https://www.eclipse.dev/ditto/"}'
                
            - name: MONGO_DB_SSL_ENABLED
              value: "false"
            - name: MONGO_DB_URI
              valueFrom:
                secretKeyRef:
                  name: my-release-ditto-mongodb-secret
                  key: things-uri
            - name: MONGO_DB_CONNECTION_MIN_POOL_SIZE
              value: "10"
            - name: MONGO_DB_CONNECTION_POOL_SIZE
              value: "200"
            - name: MONGO_DB_CONNECTION_POOL_IDLE_TIME
              value: "10m"
            - name: PROMETHEUS_PORT
              value: "9095"
            - name: CLUSTER_BS_REQUIRED_CONTACTS
              value: "5"
            - name: DITTO_DDATA_NUMBER_OF_SHARDS
              value: "1"
            - name: DITTO_DDATA_MAX_DELTA_ELEMENTS
              value: "1"
            - name: CLUSTER_NUMBER_OF_SHARDS
              value: "50"
            - name: CLUSTER_DOWNING_STABLE_AFTER
              value: "15s"
            - name: CLUSTER_DOWNING_DOWN_ALL_WHEN_UNSTABLE
              value: "on"
            - name: REMOTE_MAX_FRAMESIZE
              value: "256k"
            - name: LIMITS_THINGS_MAX_SIZE
              value: "100k"
            - name: LIMITS_POLICIES_MAX_SIZE
              value: "100k"
            - name: LIMITS_POLICIES_MAX_IMPORTS
              value: "10"
            - name: LIMITS_MESSAGES_MAX_SIZE
              value: "250k"
            - name: LIMITS_MESSAGES_HEADERS_SIZE
              value: "5k"
            - name: LIMITS_MESSAGES_AUTH_SUBJECTS_COUNT
              value: "100"
            - name: PEKKO_PERSISTENCE_MONGO_JOURNAL_WRITE_CONCERN
              value: "Acknowledged"
            - name: PEKKO_PERSISTENCE_MONGO_SNAPS_WRITE_CONCERN
              value: "Acknowledged"
            - name: BREAKER_MAXTRIES
              value: "10"
            - name: BREAKER_TIMEOUT
              value: "10s"
            - name: BREAKER_RESET
              value: "5s"
            - name: SNAPSHOT_BREAKER_MAXTRIES
              value: "10"
            - name: SNAPSHOT_BREAKER_TIMEOUT
              value: "20s"
            - name: SNAPSHOT_BREAKER_RESET
              value: "8s"
            - name: THING_ACTIVITY_CHECK_INTERVAL
              value: "2d"
            - name: HEALTH_CHECK_METRICS_REPORTER_RESOLUTION
              value: "1s"
            - name: HEALTH_CHECK_METRICS_REPORTER_HISTORY
              value: "5"
            - name: CLEANUP_ENABLED
              value: "true"
            - name: CLEANUP_QUIET_PERIOD
              value: "5m"
            - name: CLEANUP_HISTORY_RETENTION_DURATION
              value: "30d"
            - name: CLEANUP_INTERVAL
              value: "1s"
            - name: CLEANUP_TIMER_THRESHOLD
              value: "100ms"
            - name: CLEANUP_CREDITS_PER_BATCH
              value: "5"
            - name: CLEANUP_DELETE_FINAL_DELETED_SNAPSHOT
              value: "true"
            - name: THING_SNAPSHOT_INTERVAL
              value: "15m"
            - name: THING_SNAPSHOT_THRESHOLD
              value: "50"
            - name: DITTO_POLICIES_ENFORCER_CACHE_ENABLED
              value: "true"
            - name: DITTO_POLICIES_ENFORCER_CACHE_MAX_SIZE
              value: "50000"
            - name: DITTO_POLICIES_ENFORCER_CACHE_EXPIRE_AFTER_WRITE
              value: "8h"
            - name: DITTO_POLICIES_ENFORCER_CACHE_EXPIRE_AFTER_ACCESS
              value: "4h"
            - name: THINGS_WOT_TO_THING_DESCRIPTION_BASE_PREFIX
              value: "http://localhost:8080"
          ports:
            - name: remoting
              containerPort: 2551
              protocol: TCP
            - name: management
              containerPort: 7626
              protocol: TCP
            - name: prometheus
              protocol: TCP
              containerPort: 9095
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: 160
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 4
          volumeMounts:
            - name: ditto-custom-log-config
              mountPath: /opt/ditto/logback.xml
              subPath: logback.xml
          resources:
            requests:
              cpu: 200m
              memory: 768Mi
            limits:
              # ## no cpu limit to avoid CFS scheduler limits
              # ref: https://pekko.apache.org/docs/pekko/current/additional/deploying.html#deploying-to-kubernetes
              # cpu: ""
              memory: 768Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
      priorityClassName: ""
      volumes:
        - name: ditto-custom-log-config
          configMap:
            name: my-release-logback-config-things-xml
---
# Source: cloud2edge/charts/ditto/templates/thingssearch-deployment.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ditto-thingssearch
  labels:
    app.kubernetes.io/name: ditto-thingssearch
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-thingssearch
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-thingssearch
        app.kubernetes.io/instance: my-release
        actorSystemName: ditto-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9095"
        checksum/mongodb-config: cad01276ff72651c00e9711d58c06bfdda82e3bde09f50d7df4fae9286a6ae12
    spec:
      serviceAccountName: my-release-ditto
      securityContext:
        fsGroup: 1000
      initContainers:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ditto-thingssearch
      containers:
        - name: ditto-thingssearch
          image: docker.io/eclipse/ditto-things-search:3.5.6
          imagePullPolicy: IfNotPresent
          env:
            - name: DITTO_METRICS_METRIC_PREFIX
              value: ""
            - name: SYSTEM_METRICS_ENABLED
              value: "true"
            - name: DITTO_TRACING_ENABLED
              value: "false"
            - name: DITTO_TRACING_OTEL_TRACE_REPORTER_ENABLED
              value: "false"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://localhost:4317"
            - name: DITTO_TRACING_SAMPLER
              value: "never"
            - name: DITTO_TRACING_RANDOM_SAMPLER_PROBABILITY
              value: "0.01"
            - name: DITTO_TRACING_ADAPTIVE_SAMPLER_THROUGHPUT
              value: "600"
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: cloud2edge-0.9.0.tgz
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: >
                -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxMetaspaceSize=256m -XX:+UseG1GC -Djava.net.preferIPv4Stack=true

                -XX:ActiveProcessorCount=2
                -XX:MaxRAMPercentage=60
                -XX:InitialRAMPercentage=60
                -XX:MaxGCPauseMillis=150
                
                -Dpekko.management.cluster.bootstrap.contact-point-discovery.port-name=management -Dpekko.cluster.failure-detector.threshold=15.0 -Dpekko.cluster.failure-detector.expected-response-after=3s -Dpekko.cluster.failure-detector.acceptable-heartbeat-pause=7s -Dpekko.persistence.journal-plugin-fallback.recovery-event-timeout=30s -Dpekko.persistence.max-concurrent-recoveries=100 -Dpekko.cluster.sharding.updating-state-timeout=20s -Dpekko.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s

                -Dlogback.configurationFile=/opt/ditto/logback.xml
                
            - name: MONGO_DB_SSL_ENABLED
              value: "false"
            - name: MONGO_DB_URI
              valueFrom:
                secretKeyRef:
                  name: my-release-ditto-mongodb-secret
                  key: thingsSearch-uri
            - name: MONGO_DB_CONNECTION_MIN_POOL_SIZE
              value: "10"
            - name: MONGO_DB_CONNECTION_POOL_SIZE
              value: "100"
            - name: MONGO_DB_CONNECTION_POOL_IDLE_TIME
              value: "10m"
            - name: PROMETHEUS_PORT
              value: "9095"
            - name: CLUSTER_BS_REQUIRED_CONTACTS
              value: "5"
            - name: DITTO_DDATA_NUMBER_OF_SHARDS
              value: "1"
            - name: DITTO_DDATA_MAX_DELTA_ELEMENTS
              value: "1"
            - name: CLUSTER_NUMBER_OF_SHARDS
              value: "50"
            - name: CLUSTER_DOWNING_STABLE_AFTER
              value: "15s"
            - name: CLUSTER_DOWNING_DOWN_ALL_WHEN_UNSTABLE
              value: "on"
            - name: REMOTE_MAX_FRAMESIZE
              value: "256k"
            - name: LIMITS_THINGS_MAX_SIZE
              value: "100k"
            - name: LIMITS_POLICIES_MAX_SIZE
              value: "100k"
            - name: LIMITS_POLICIES_MAX_IMPORTS
              value: "10"
            - name: LIMITS_MESSAGES_MAX_SIZE
              value: "250k"
            - name: LIMITS_MESSAGES_HEADERS_SIZE
              value: "5k"
            - name: LIMITS_MESSAGES_AUTH_SUBJECTS_COUNT
              value: "100"
            - name: MONGO_DB_READ_PREFERENCE
              value: "primary"
            - name: QUERY_PERSISTENCE_MONGO_DB_READ_CONCERN
              value: "local"
            - name: MONGO_DB_WRITE_CONCERN
              value: "acknowledged"
            - name: UPDATER_PERSISTENCE_MONGO_DB_READ_CONCERN
              value: "local"
            - name: UPDATER_PERSISTENCE_MONGO_DB_READ_PREFERENCE
              value: "primaryPreferred"
            - name: THINGS_SEARCH_UPDATER_STREAM_PERSISTENCE_WITH_ACKS_WRITE_CONCERN
              value: "majority"
            - name: THINGS_SEARCH_UPDATER_STREAM_POLICY_CACHE_SIZE
              value: "30000"
            - name: THINGS_SEARCH_UPDATER_STREAM_POLICY_CACHE_EXPIRY
              value: "12h"
            - name: THINGS_SEARCH_UPDATER_STREAM_POLICY_CACHE_EXPIRY_AFTER_ACCESS
              value: "6h"
            - name: THINGS_SEARCH_UPDATER_STREAM_THING_CACHE_SIZE
              value: "30000"
            - name: THINGS_SEARCH_UPDATER_STREAM_THING_CACHE_EXPIRY
              value: "12h"
            - name: THINGS_SEARCH_UPDATER_STREAM_THING_CACHE_EXPIRY_AFTER_ACCESS
              value: "6h"
            - name: THINGS_SEARCH_UPDATER_STREAM_RETRIEVAL_PARALLELISM
              value: "64"
            - name: THINGS_SEARCH_UPDATER_STREAM_PERSISTENCE_PARALLELISM
              value: "16"
            - name: THINGS_SEARCH_OPERATOR_METRICS_ENABLED
              value: "true"
            - name: THINGS_SEARCH_OPERATOR_METRICS_SCRAPE_INTERVAL
              value: "15m"
            - name: ACTIVITY_CHECK_INTERVAL
              value: "2h"
            - name: BACKGROUND_SYNC_ENABLED
              value: "true"
            - name: BACKGROUND_SYNC_QUIET_PERIOD
              value: "5m"
            - name: BACKGROUND_SYNC_IDLE_TIMEOUT
              value: "5m"
            - name: BACKGROUND_SYNC_TOLERANCE_WINDOW
              value: "20m"
            - name: BACKGROUND_SYNC_KEEP_EVENTS
              value: "2"
            - name: BACKGROUND_SYNC_THROTTLE_THROUGHPUT
              value: "100"
            - name: BACKGROUND_SYCN_THROTTLE_PERIOD
              value: "30s"
            - name: DITTO_POLICIES_ENFORCER_CACHE_MAX_SIZE
              value: "30000"
            - name: DITTO_POLICIES_ENFORCER_CACHE_EXPIRE_AFTER_WRITE
              value: "12h"
            - name: DITTO_POLICIES_ENFORCER_CACHE_EXPIRE_AFTER_ACCESS
              value: "6h"
          ports:
            - name: remoting
              containerPort: 2551
              protocol: TCP
            - name: management
              containerPort: 7626
              protocol: TCP
            - name: prometheus
              protocol: TCP
              containerPort: 9095
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: 160
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 4
          volumeMounts:
            - name: ditto-custom-log-config
              mountPath: /opt/ditto/logback.xml
              subPath: logback.xml
          resources:
            requests:
              cpu: 200m
              memory: 768Mi
            limits:
              # ## no cpu limit to avoid CFS scheduler limits
              # ref: https://pekko.apache.org/docs/pekko/current/additional/deploying.html#deploying-to-kubernetes
              # cpu: ""
              memory: 768Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
      priorityClassName: ""
      volumes:
        - name: ditto-custom-log-config
          configMap:
            name: my-release-logback-config-thingssearch-xml
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-amqp/hono-adapter-amqp-deployment.yaml
#
# Copyright (c) 2019, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-hono-adapter-amqp"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-amqp"  
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "hono"
      app.kubernetes.io/instance: "my-release"
      app.kubernetes.io/component: "adapter-amqp"
  template:
    metadata:
      name: "my-release-hono-adapter-amqp"
      namespace: "cloud2edge-0.9.0.tgz"
      labels:
        app.kubernetes.io/name: "hono"
        helm.sh/chart: "hono-2.6.1"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/version: "2.5.1"
        app.kubernetes.io/component: "adapter-amqp"
        
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
        kubectl.kubernetes.io/default-container: "adapter-amqp"
        
    spec:
      
      
      serviceAccountName: "my-release-hono-adapter"
      containers:            
      - name: "adapter-amqp"
        image: "index.docker.io/eclipse/hono-adapter-amqp:2.5.1"
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: amqps
          containerPort: 5671
          protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: "QUARKUS_CONFIG_LOCATIONS"
          value: "/opt/hono/default-logging-config/logging-quarkus-dev.yml"        
        volumeMounts:        
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.key"
          subPath: "tls.key"
          readOnly: true
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.crt"
          subPath: "tls.crt"
          readOnly: true
        - name: "tls-trust-store"
          mountPath: "/opt/hono/tls/ca.crt"
          subPath: "ca.crt"
          readOnly: true
        - name: "default-logging-config"
          mountPath: "/opt/hono/default-logging-config"
          readOnly: true
        - name: "adapter-amqp-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 300Mi
        livenessProbe:
          httpGet:
            path: /liveness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 900
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /readiness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 45
          successThreshold: 1
          timeoutSeconds: 3
      volumes:      
      - name: "tls-keys"
        secret:
          secretName: "my-release-hono-adapter-amqp-example-keys"
      - name: "tls-trust-store"
        configMap:
          name: "my-release-hono-example-trust-store"
      - name: "default-logging-config"
        configMap:
          name: "my-release-hono-default-logging-config"
          optional: true
      - name: "adapter-amqp-conf"
        secret:
          secretName: "my-release-hono-adapter-amqp-conf"
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-http/hono-adapter-http-deployment.yaml
#
# Copyright (c) 2019, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-hono-adapter-http"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-http"  
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "hono"
      app.kubernetes.io/instance: "my-release"
      app.kubernetes.io/component: "adapter-http"
  template:
    metadata:
      name: "my-release-hono-adapter-http"
      namespace: "cloud2edge-0.9.0.tgz"
      labels:
        app.kubernetes.io/name: "hono"
        helm.sh/chart: "hono-2.6.1"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/version: "2.5.1"
        app.kubernetes.io/component: "adapter-http"
        
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
        kubectl.kubernetes.io/default-container: "adapter-http"
        
    spec:
      
      
      serviceAccountName: "my-release-hono-adapter"
      containers:            
      - name: "adapter-http"
        image: "index.docker.io/eclipse/hono-adapter-http:2.5.1"
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: "QUARKUS_CONFIG_LOCATIONS"
          value: "/opt/hono/default-logging-config/logging-quarkus-dev.yml"        
        volumeMounts:        
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.key"
          subPath: "tls.key"
          readOnly: true
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.crt"
          subPath: "tls.crt"
          readOnly: true
        - name: "tls-trust-store"
          mountPath: "/opt/hono/tls/ca.crt"
          subPath: "ca.crt"
          readOnly: true
        - name: "default-logging-config"
          mountPath: "/opt/hono/default-logging-config"
          readOnly: true
        - name: "adapter-http-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 300Mi
        livenessProbe:
          httpGet:
            path: /liveness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 900
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /readiness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 45
          successThreshold: 1
          timeoutSeconds: 3
      volumes:      
      - name: "tls-keys"
        secret:
          secretName: "my-release-hono-adapter-http-example-keys"
      - name: "tls-trust-store"
        configMap:
          name: "my-release-hono-example-trust-store"
      - name: "default-logging-config"
        configMap:
          name: "my-release-hono-default-logging-config"
          optional: true
      - name: "adapter-http-conf"
        secret:
          secretName: "my-release-hono-adapter-http-conf"
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-mqtt/hono-adapter-mqtt-deployment.yaml
#
# Copyright (c) 2019, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-hono-adapter-mqtt"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "adapter-mqtt"  
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "hono"
      app.kubernetes.io/instance: "my-release"
      app.kubernetes.io/component: "adapter-mqtt"
  template:
    metadata:
      name: "my-release-hono-adapter-mqtt"
      namespace: "cloud2edge-0.9.0.tgz"
      labels:
        app.kubernetes.io/name: "hono"
        helm.sh/chart: "hono-2.6.1"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/version: "2.5.1"
        app.kubernetes.io/component: "adapter-mqtt"
        
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
        kubectl.kubernetes.io/default-container: "adapter-mqtt"
        
    spec:
      
      
      serviceAccountName: "my-release-hono-adapter"
      containers:            
      - name: "adapter-mqtt"
        image: "index.docker.io/eclipse/hono-adapter-mqtt:2.5.1"
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: mqtt
          containerPort: 1883
          protocol: TCP
        - name: secure-mqtt
          containerPort: 8883
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: "QUARKUS_CONFIG_LOCATIONS"
          value: "/opt/hono/default-logging-config/logging-quarkus-dev.yml"        
        volumeMounts:        
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.key"
          subPath: "tls.key"
          readOnly: true
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.crt"
          subPath: "tls.crt"
          readOnly: true
        - name: "tls-trust-store"
          mountPath: "/opt/hono/tls/ca.crt"
          subPath: "ca.crt"
          readOnly: true
        - name: "default-logging-config"
          mountPath: "/opt/hono/default-logging-config"
          readOnly: true
        - name: "adapter-mqtt-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 300Mi
        livenessProbe:
          httpGet:
            path: /liveness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 900
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /readiness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 45
          successThreshold: 1
          timeoutSeconds: 3
      volumes:      
      - name: "tls-keys"
        secret:
          secretName: "my-release-hono-adapter-mqtt-example-keys"
      - name: "tls-trust-store"
        configMap:
          name: "my-release-hono-example-trust-store"
      - name: "default-logging-config"
        configMap:
          name: "my-release-hono-default-logging-config"
          optional: true
      - name: "adapter-mqtt-conf"
        secret:
          secretName: "my-release-hono-adapter-mqtt-conf"
---
# Source: cloud2edge/charts/hono/templates/hono-service-auth/hono-service-auth-deployment.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-hono-service-auth"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-auth"  
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "hono"
      app.kubernetes.io/instance: "my-release"
      app.kubernetes.io/component: "service-auth"
  template:
    metadata:
      name: "my-release-hono-service-auth"
      namespace: "cloud2edge-0.9.0.tgz"
      labels:
        app.kubernetes.io/name: "hono"
        helm.sh/chart: "hono-2.6.1"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/version: "2.5.1"
        app.kubernetes.io/component: "service-auth"
        
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
        kubectl.kubernetes.io/default-container: "service-auth"
        
    spec:
      
      
      containers:      
      - name: "service-auth"
        image: "index.docker.io/eclipse/hono-service-auth:2.5.1"
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: amqps
          containerPort: 5671
          protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: "QUARKUS_CONFIG_LOCATIONS"
          value: "/opt/hono/default-logging-config/logging-quarkus-dev.yml"        
        volumeMounts:        
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.key"
          subPath: "tls.key"
          readOnly: true
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.crt"
          subPath: "tls.crt"
          readOnly: true
        - name: "default-logging-config"
          mountPath: "/opt/hono/default-logging-config"
          readOnly: true
        - name: "service-auth-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        - mountPath: /var/run/hono/auth
          name: permissions
        resources:
          limits:
            cpu: "1"
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 196Mi
        livenessProbe:
          httpGet:
            path: /liveness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 900
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /readiness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 45
          successThreshold: 1
          timeoutSeconds: 3
      volumes:      
      - name: "tls-keys"
        secret:
          secretName: "my-release-hono-service-auth-example-keys"
      - name: "default-logging-config"
        configMap:
          name: "my-release-hono-default-logging-config"
          optional: true
      - name: "service-auth-conf"
        secret:
          secretName: "my-release-hono-service-auth-conf"
      - name: permissions
        secret:
          secretName: permissions
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-deployment.yaml
#
# Copyright (c) 2021, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-hono-service-command-router"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-command-router"  
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "hono"
      app.kubernetes.io/instance: "my-release"
      app.kubernetes.io/component: "service-command-router"
  template:
    metadata:
      name: "my-release-hono-service-command-router"
      namespace: "cloud2edge-0.9.0.tgz"
      labels:
        app.kubernetes.io/name: "hono"
        helm.sh/chart: "hono-2.6.1"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/version: "2.5.1"
        app.kubernetes.io/component: "service-command-router"
        
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
        kubectl.kubernetes.io/default-container: "service-command-router"
        
    spec:
      
      
      containers:            
      - name: "service-command-router"
        image: "index.docker.io/eclipse/hono-service-command-router:2.5.1"
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: amqps
          containerPort: 5671
          protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80 -Djava.security.properties=/opt/hono/config/dns-cache-config.properties"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: "QUARKUS_CONFIG_LOCATIONS"
          value: "/opt/hono/default-logging-config/logging-quarkus-dev.yml"        
        volumeMounts:        
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.key"
          subPath: "tls.key"
          readOnly: true
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.crt"
          subPath: "tls.crt"
          readOnly: true
        - name: "tls-trust-store"
          mountPath: "/opt/hono/tls/ca.crt"
          subPath: "ca.crt"
          readOnly: true
        - name: "default-logging-config"
          mountPath: "/opt/hono/default-logging-config"
          readOnly: true
        - name: "service-command-router-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 150m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /liveness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 900
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /readiness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 45
          successThreshold: 1
          timeoutSeconds: 3
      volumes:      
      - name: "tls-keys"
        secret:
          secretName: "my-release-hono-service-command-router-example-keys"
      - name: "tls-trust-store"
        configMap:
          name: "my-release-hono-example-trust-store"
      - name: "default-logging-config"
        configMap:
          name: "my-release-hono-default-logging-config"
          optional: true
      - name: "service-command-router-conf"
        secret:
          secretName: "my-release-hono-service-command-router-conf"
      serviceAccountName: "my-release-hono-service-command-router"
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-mongodb/hono-service-device-registry-deployment.yaml
#
# Copyright (c) 2020, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-hono-service-device-registry"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-device-registry"  
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "hono"
      app.kubernetes.io/instance: "my-release"
      app.kubernetes.io/component: "service-device-registry"
  template:
    metadata:
      name: "my-release-hono-service-device-registry"
      namespace: "cloud2edge-0.9.0.tgz"
      labels:
        app.kubernetes.io/name: "hono"
        helm.sh/chart: "hono-2.6.1"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/version: "2.5.1"
        app.kubernetes.io/component: "service-device-registry"
        
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
        kubectl.kubernetes.io/default-container: "service-device-registry"
        
    spec:
      
      
      containers:            
      - name: "service-device-registry"
        image: "index.docker.io/eclipse/hono-service-device-registry-mongodb:2.5.1"
        ports:
          - name: health
            containerPort: 8088
            protocol: TCP
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          - name: amqps
            containerPort: 5671
            protocol: TCP
          - name: amqp
            containerPort: 5672
            protocol: TCP
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: "QUARKUS_CONFIG_LOCATIONS"
          value: "/opt/hono/default-logging-config/logging-quarkus-dev.yml"        
        securityContext:
          privileged: false
        volumeMounts:        
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.key"
          subPath: "tls.key"
          readOnly: true
        - name: "tls-keys"
          mountPath: "/opt/hono/tls/tls.crt"
          subPath: "tls.crt"
          readOnly: true
        - name: "tls-trust-store"
          mountPath: "/opt/hono/tls/ca.crt"
          subPath: "ca.crt"
          readOnly: true
        - name: "default-logging-config"
          mountPath: "/opt/hono/default-logging-config"
          readOnly: true
        - name: "service-device-registry-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: 400Mi
          requests:
            cpu: 200m
            memory: 400Mi
        livenessProbe:
          httpGet:
            path: /liveness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 900
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /readiness
            port: health
            scheme: HTTP
          periodSeconds: 10
          failureThreshold: 3
          initialDelaySeconds: 45
          successThreshold: 1
          timeoutSeconds: 3
      volumes:      
      - name: "tls-keys"
        secret:
          secretName: "my-release-hono-service-device-registry-example-keys"
      - name: "tls-trust-store"
        configMap:
          name: "my-release-hono-example-trust-store"
      - name: "default-logging-config"
        configMap:
          name: "my-release-hono-default-logging-config"
          optional: true
      - name: "service-device-registry-conf"
        secret:
          secretName: "my-release-hono-service-device-registry-conf"
---
# Source: cloud2edge/charts/hono/charts/kafka/templates/controller-eligible/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-kafka-controller
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.6.1
    helm.sh/chart: kafka-26.11.4
    app.kubernetes.io/component: controller-eligible
    app.kubernetes.io/part-of: kafka
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: kafka
      app.kubernetes.io/component: controller-eligible
      app.kubernetes.io/part-of: kafka
  serviceName: my-release-kafka-controller-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kafka
        app.kubernetes.io/version: 3.6.1
        helm.sh/chart: kafka-26.11.4
        app.kubernetes.io/component: controller-eligible
        app.kubernetes.io/part-of: kafka
      annotations:
        checksum/configuration: f94337ba49b0aa2995d321f802e2c7ecad87e9e82c74b9ca5d27c2de1e77b067
        checksum/passwords-secret: 25d6bd297f03ce5371c6321fbb4f9620c88db5d7c6a1abe8c3101ccf84c15019
    spec:
      
      automountServiceAccountToken: true
      hostNetwork: false
      hostIPC: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: kafka
                    app.kubernetes.io/component: controller-eligible
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups: []
        sysctls: []
      serviceAccountName: my-release-kafka
      enableServiceLinks: true
      initContainers:
        
        - name: auto-discovery
          image: docker.io/bitnami/kubectl:1.29.2-debian-12-r2
          imagePullPolicy: "IfNotPresent"
          command:
            - /scripts/auto-discovery.sh
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: AUTODISCOVERY_SERVICE_TYPE
              value: "NodePort"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: scripts
              mountPath: /scripts/auto-discovery.sh
              subPath: auto-discovery.sh
            - name: kafka-autodiscovery-shared
              mountPath: /shared
        - name: kafka-init
          image: docker.io/bitnami/kafka:3.6.1-debian-12-r12
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
          resources:
            limits: {}
            requests: {} 
          command:
            - /bin/bash
          args:
            - -ec
            - |
              /scripts/kafka-init.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                    fieldPath: metadata.name
            - name: KAFKA_VOLUME_DIR
              value: "/bitnami/kafka"
            - name: KAFKA_MIN_ID
              value: "0"
            - name: EXTERNAL_ACCESS_ENABLED
              value: "true"
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: EXTERNAL_ACCESS_HOST
              value: "$(HOST_IP)"
            - name: KAFKA_CLIENT_USERS
              value: "hono,ditto-c2e"
            - name: KAFKA_CLIENT_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: my-release-kafka-user-passwords
                  key: client-passwords
            - name: KAFKA_INTER_BROKER_USER
              value: "inter_broker_user"
            - name: KAFKA_INTER_BROKER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-kafka-user-passwords
                  key: inter-broker-password
            - name: KAFKA_CONTROLLER_USER
              value: "controller_user"
            - name: KAFKA_CONTROLLER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-kafka-user-passwords
                  key: controller-password
            - name: KAFKA_TLS_TYPE
              value: PEM
            - name: KAFKA_TLS_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-kafka-tls-passwords
                  key: "keystore-password"
            - name: KAFKA_TLS_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-kafka-tls-passwords
                  key: "truststore-password"
          volumeMounts:
            - name: data
              mountPath: /bitnami/kafka
            - name: kafka-config
              mountPath: /config
            - name: kafka-configmaps
              mountPath: /configmaps
            - name: kafka-secret-config
              mountPath: /secret-config
            - name: scripts
              mountPath: /scripts
            - name: tmp
              mountPath: /tmp
            - name: kafka-autodiscovery-shared
              mountPath: /shared
            - name: kafka-shared-certs
              mountPath: /certs
            - name: kafka-certs
              mountPath: /mounted-certs
              readOnly: true
      containers:
        - name: kafka
          image: docker.io/bitnami/kafka:3.6.1-debian-12-r12
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: null
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: KAFKA_HEAP_OPTS
              value: "-Xmx1024m -Xms1024m"
            - name: KAFKA_KRAFT_CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: my-release-kafka-kraft-cluster-id
                  key: kraft-cluster-id
            - name: KAFKA_KRAFT_BOOTSTRAP_SCRAM_USERS
              value: "true"
            - name: KAFKA_CLIENT_USERS
              value: "hono,ditto-c2e"
            - name: KAFKA_CLIENT_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: my-release-kafka-user-passwords
                  key: client-passwords
            - name: KAFKA_INTER_BROKER_USER
              value: "inter_broker_user"
            - name: KAFKA_INTER_BROKER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-kafka-user-passwords
                  key: inter-broker-password
            - name: KAFKA_CONTROLLER_USER
              value: "controller_user"
            - name: KAFKA_CONTROLLER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-kafka-user-passwords
                  key: controller-password
          ports:
            - name: controller
              containerPort: 9093
            - name: client
              containerPort: 9092
            - name: interbroker
              containerPort: 9094
            - name: external
              containerPort: 9095
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: "controller"
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: "controller"
          volumeMounts:
            - name: data
              mountPath: /bitnami/kafka
            - name: logs
              mountPath: /opt/bitnami/kafka/logs
            - name: kafka-config
              mountPath: /opt/bitnami/kafka/config/server.properties
              subPath: server.properties
            - name: tmp
              mountPath: /tmp
            - name: kafka-shared-certs
              mountPath: /opt/bitnami/kafka/config/certs
              readOnly: true
      volumes:
        - name: kafka-configmaps
          configMap:
            name: my-release-kafka-controller-configuration
        - name: kafka-secret-config
          emptyDir: {}
        - name: kafka-config
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: scripts
          configMap:
            name: my-release-kafka-scripts
            defaultMode: 493
        - name: kafka-autodiscovery-shared
          emptyDir: {}
        - name: kafka-shared-certs
          emptyDir: {}
        - name: kafka-certs
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: my-release-kafka-example-keys
        - name: logs
          emptyDir: {}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: cloud2edge/charts/ditto/templates/hooks/pod-deletion-cost-cron-job.yaml
# Copyright (c) 2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: my-release-ditto-pod-deletion-cron-job
  labels:
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "*/5 * * * *" # every 5 minutes
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          name: my-release-ditto-pod-deletion-cron-job
          labels:
            app.kubernetes.io/managed-by: "Helm"
            app.kubernetes.io/instance: "my-release"
            helm.sh/chart: "ditto-3.5.6"
        spec:
          serviceAccountName: my-release-ditto
          restartPolicy: Never
          containers:
            - name: ditto-pod-deletion-cost-cronjob
              image: "public.ecr.aws/h0h9t7p1/alpine-bash-curl-jq:latest"
              command:
                - /bin/sh
                - -c
                - |
                  cd /opt/ditto-scripts
                  ./patch-pods-deletion-cost.sh
              volumeMounts:
              - name: hook-scripts
                mountPath: "/opt/ditto-scripts"
          volumes:
            - name: hook-scripts
              configMap:
                name: my-release-ditto-hook-scripts
                defaultMode: 0555
---
# Source: cloud2edge/charts/ditto/templates/connectivity-pdb.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/connectivity-podmonitor.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/dittoui-config.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/dittoui-pdb.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/gateway-pdb.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/gateway-podmonitor.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/gateway-secret.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/hooks/scripts-configmap.yaml
# Copyright (c) 2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/logback-config.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-config.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-ingress-api.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-ingress-auth.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-ingress-devops.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-ingress-root.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-ingress-ui.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-ingress-ws.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-ingress.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-route.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/policies-pdb.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/policies-podmonitor.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/swaggerui-config.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/swaggerui-pdb.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/things-pdb.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/things-podmonitor.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/thingssearch-pdb.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/thingssearch-podmonitor.yaml
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/templates/permissions-secret.yaml
#
# Copyright (c) 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
---
# Source: cloud2edge/templates/post-install-job.yaml
#
# Copyright (c) 2020, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
---
# Source: cloud2edge/templates/post-install-secret.yaml
#
# Copyright (c) 2020, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
---
# Source: cloud2edge/charts/ditto/templates/hooks/scripts-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-ditto-hook-scripts
  labels:
    app.kubernetes.io/name: ditto-hook-scripts
  annotations:
    helm.sh/hook: pre-upgrade,pre-install
    helm.sh/hook-weight: "-5"
    helm.sh/resource-policy: keep
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
data:
  patch-pods-deletion-cost.sh: |-

    #!/bin/bash
    # Copyright (c) 2024 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    
    SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
    TOKEN=$(cat ${SERVICEACCOUNT}/token)
    CACERT=${SERVICEACCOUNT}/ca.crt
    NAMESPACE=$(cat ${SERVICEACCOUNT}/namespace)
    WORKING_FOLDER="/tmp/pod-deletion-script-$(date +%Y-%m-%d-%H-%M-%S)"
    
    mkdir -p $WORKING_FOLDER
    cd $WORKING_FOLDER
    
    echo "Retrieving current pods, ips and their deletion cost in working dir: $WORKING_FOLDER ..."
    # access k8s pods information and extract "pod name", "internal pod IP" and "pod deletion cost" into file `pod_ip_cost.json`:
    curl --fail --silent --cacert ${CACERT} -H "Authorization: Bearer ${TOKEN}" \
      "https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT/api/v1/namespaces/${NAMESPACE}/pods" \
      | jq '.items | map(select(.metadata.labels.actorSystemName == "ditto-cluster") | { pod: .metadata.name, ip: .status.podIP, cost: .metadata.annotations."controller.kubernetes.io/pod-deletion-cost"})' \
      > pod_ip_cost.json
    if [ $? -ne 0 ]; then
      echo "Retrieving current pods curl failed [exit-code: $?]"
      exit 1
    fi
    
    # extract the first internal IP from `pod_ip_cost.json` in order to lookup Apache Pekko cluster membership data:
    somePekkoClusterIp=$(jq -r '.[0].ip' pod_ip_cost.json)
    echo "Accessing current Pekko Cluster members from internal ip: $somePekkoClusterIp ..."
    curl --fail --silent -o pekko_cluster_members.json http://$somePekkoClusterIp:7626/cluster/members
    if [ $? -ne 0 ]; then
      echo "Accessing current Pekko Cluster members curl failed [exit-code: $?]"
      exit 1
    fi
    
    echo "Finding out all oldest ..."
    # find out all "oldest" pods (per role and the "overall oldest" - specifying the "cost" for deletion in here as well):
    jq '.oldestPerRole | to_entries | map(.value | split("@") | last | split(":") | first | { ip: . }) | group_by(.ip) | map(.[]+{"cost":length}) | unique_by(.ip) | .[].cost *= 100' pekko_cluster_members.json \
      > ip_to_new_cost.json
    
    echo "Merging pods and their internal ip addresses with pod deletion cost ..."
    # merge pods and their internal IP addresses together with the calculated pod deletion cost:
    jq 'INDEX(.ip)' ip_to_new_cost.json > ip_to_new_cost_by_ip.json
    jq 'map(del(.cost)) | INDEX(.ip)' pod_ip_cost.json > pods_by_ip.json
    jq -s '.[0] * .[1] | to_entries | map(select(.value.cost != null).value)' pods_by_ip.json ip_to_new_cost_by_ip.json \
      > new_cost_pod_and_ip.json
    
    # clear remaining ones - which had a cost from "last run", but now don't any longer
    jq -r '.[] | select(.cost != null) | .pod' pod_ip_cost.json > pods_with_old_cost.txt
    while read pod; do
      grep -R $pod new_cost_pod_and_ip.json
      if [ $? -eq 0 ]; then
         #pod is in file at least once
         echo "Not clearing pod-deletion-cost of pod: $pod"
      else
         #pod is not in file
         echo "Clearing pod-deletion-cost of pod: $pod"
         curl -X PATCH --silent --output /dev/null --show-error --fail --cacert ${CACERT} -H "Authorization: Bearer ${TOKEN}" -H 'Content-Type: application/merge-patch+json' \
            "https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT/api/v1/namespaces/${NAMESPACE}/pods/${pod}" \
            --data '{"metadata": {"annotations": {"controller.kubernetes.io/pod-deletion-cost": null }}}'
         if [ $? -ne 0 ]; then
           echo "Clearing pod-deletion-cost curl failed [exit-code: $?]"
           exit 1
         fi
      fi
    done <pods_with_old_cost.txt
    
    echo "Starting to patch pods with updated pod deletion costs ..."
    jq -r '.[] | [.pod, .ip, .cost] | @tsv' new_cost_pod_and_ip.json |
      while IFS=$'\t' read -r pod ip cost; do
        echo "Patching pod-deletion-cost of pod: $pod to: $cost"
        curl -X PATCH --silent --output /dev/null --show-error --fail --cacert ${CACERT} -H "Authorization: Bearer ${TOKEN}" -H 'Content-Type: application/merge-patch+json' \
           "https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT/api/v1/namespaces/${NAMESPACE}/pods/${pod}" \
           --data '{"metadata": {"annotations": {"controller.kubernetes.io/pod-deletion-cost": '\""$cost"\"' }}}'
        if [ $? -ne 0 ]; then
          echo "Patching pod-deletion-cost curl failed [exit-code: $?]"
          exit 1
        fi
      done
    
    echo "Pod deletion costs after script finished:"
    curl --fail --cacert ${CACERT} -H "Authorization: Bearer ${TOKEN}" \
      "https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT/api/v1/namespaces/${NAMESPACE}/pods" \
      | jq '.items | map(select(.metadata.labels.actorSystemName == "ditto-cluster") | { pod: .metadata.name, ip: .status.podIP, cost: .metadata.annotations."controller.kubernetes.io/pod-deletion-cost"})'
    
    echo "DONE"
---
# Source: cloud2edge/charts/ditto/templates/hooks/pre-upgrade-job.yaml
# Copyright (c) 2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-ditto-pre-update
  labels:
    helm.sh/chart: ditto-3.5.6
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.5.6"
    app.kubernetes.io/managed-by: Helm
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    helm.sh/hook: pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  backoffLimit: 3
  template:
    metadata:
      name: my-release-ditto-pre-upgrade
      labels:
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "my-release"
        helm.sh/chart: "ditto-3.5.6"
    spec:
      serviceAccountName: my-release-ditto
      restartPolicy: Never
      containers:
        - name: ditto-pod-deletion-cost-pre-upgrade-hook
          image: "public.ecr.aws/h0h9t7p1/alpine-bash-curl-jq:latest"
          command:
            - /bin/sh
            - -c
            - |
              cd /opt/ditto-scripts
              ./patch-pods-deletion-cost.sh
          volumeMounts:
            - name: hook-scripts
              mountPath: "/opt/ditto-scripts"
      volumes:
        - name: hook-scripts
          configMap:
            name: my-release-ditto-hook-scripts
            defaultMode: 0555
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-base/hono-service-device-registry-post-install-job.yaml
#
# Copyright (c) 2020, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-release-hono-post-install-device-registry-job"
  namespace: "cloud2edge-0.9.0.tgz"
  labels:
    app.kubernetes.io/name: "hono"
    helm.sh/chart: "hono-2.6.1"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: "2.5.1"
    app.kubernetes.io/component: "service-device-registry"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    helm.sh/hook: post-install
    helm.sh/hook-weight: "-10"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: "my-release-hono-post-install"
    spec:
      restartPolicy: Never
      containers:
        - name: "post-install"
          image: "curlimages/curl:8.2.1"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - |
              cd /var/run/hono/post-install-data/
              ./add_example_data_device_registry.sh
          volumeMounts:
          - name: post-install-data
            mountPath: "/var/run/hono/post-install-data"
      volumes:
      - name: post-install-data
        configMap:
          name: my-release-hono-post-install-device-registry-conf
          defaultMode: 0555
---
# Source: cloud2edge/templates/post-install-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-release-post-install"
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: 0.9.0
    helm.sh/chart: cloud2edge-0.9.0
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    helm.sh/hook: post-install
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  backoffLimit: 3
  template:
    metadata:
      name: "my-release-post-install"
      labels:
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "my-release"
        helm.sh/chart: "cloud2edge-0.9.0"
    spec:
      restartPolicy: Never
      containers:
      - name: "post-install"
        image: "curlimages/curl:8.2.1"
        command:
        - /bin/sh
        - -c
        - |
          cd /var/run/c2e/post-install-data/
          ./post-install.sh
        volumeMounts:
        - name: post-install-data
          mountPath: "/var/run/c2e/post-install-data"
          readOnly: true
        - name: ditto-gw-users
          mountPath: "/var/run/c2e/ditto-gw-users"
          readOnly: true
        - name: kafka-connection-cert
          mountPath: "/var/run/c2e/kafka-connection-cert"
          readOnly: true
      volumes:
      - name: post-install-data
        secret:
          secretName: my-release-post-install-data
          defaultMode: 0555
      - name: ditto-gw-users
        secret:
          secretName: my-release-ditto-gateway-secret
      - name: kafka-connection-cert
        secret:
          secretName: my-release-kafka-example-keys
