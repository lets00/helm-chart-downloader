---
# Source: imagepullsecret-patcher/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: imagepullsecret-patcher
  labels:
    helm.sh/chart: imagepullsecret-patcher-1.0.0
    app.kubernetes.io/name: imagepullsecret-patcher
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.14"
    app.kubernetes.io/managed-by: Helm
---
# Source: imagepullsecret-patcher/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: imagepullsecret-patcher-1.0.0
    app.kubernetes.io/name: imagepullsecret-patcher
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.14"
    app.kubernetes.io/managed-by: Helm
  name: imagepullsecret-patcher
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - list
  - secrets
  - serviceaccounts
  verbs:
  - list
  - patch
  - create
  - get
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - get
---
# Source: imagepullsecret-patcher/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: imagepullsecret-patcher-1.0.0
    app.kubernetes.io/name: imagepullsecret-patcher
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.14"
    app.kubernetes.io/managed-by: Helm
  name: imagepullsecret-patcher
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: imagepullsecret-patcher
subjects:
  - kind: ServiceAccount
    name: imagepullsecret-patcher
    namespace: imagepullsecret-patcher-1.0.0.tgz
---
# Source: imagepullsecret-patcher/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: imagepullsecret-patcher
  labels:
    helm.sh/chart: imagepullsecret-patcher-1.0.0
    app.kubernetes.io/name: imagepullsecret-patcher
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.14"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: imagepullsecret-patcher
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: imagepullsecret-patcher
        app.kubernetes.io/instance: my-release
    spec:
      automountServiceAccountToken: true
      serviceAccountName: imagepullsecret-patcher
      securityContext:
        {}
      containers:
        - name: imagepullsecret-patcher
          env:
            - name: CONFIG_FORCE
              value: "true"
            - name: CONFIG_DEBUG
              value: "false"
            - name: CONFIG_MANAGEDONLY
              value: "false"
            - name: CONFIG_RUNONCE
              value: "false" 
            - name: CONFIG_ALLSERVICEACCOUNT
              value: "true" 
            - name: CONFIG_SECRETNAME
              value: ""
            - name: CONFIG_DOCKERCONFIGJSONPATH
              value: "/app/secrets/.dockerconfigjson"
            - name: CONFIG_LOOP_DURATION
              value: "10"
          securityContext:
            {}
          image: "quay.io/titansoft/imagepullsecret-patcher:v0.14"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: src-dockerconfigjson
              mountPath: "/app/secrets"
              readOnly: true
          resources:
            requests:
              cpu: 0.1
              memory: 15Mi
            limits:
              cpu: 0.2
              memory: 30Mi
      volumes:
        - name: src-dockerconfigjson
          secret: 
            secretName:
