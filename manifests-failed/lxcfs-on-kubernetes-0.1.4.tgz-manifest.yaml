---
# Source: lxcfs-on-kubernetes/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: 'my-release-lxcfs-on-kubernetes-manager-role'
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  verbs:
  - '*'
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - '*'
---
# Source: lxcfs-on-kubernetes/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: 'my-release-lxcfs-on-kubernetes-manager-rolebinding'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-release-lxcfs-on-kubernetes-manager-role'
subjects:
- kind: ServiceAccount
  name: default
  namespace: "lxcfs-on-kubernetes-0.1.4.tgz"
---
# Source: lxcfs-on-kubernetes/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: 'my-release-lxcfs-on-kubernetes-webhook-service'
  namespace: "lxcfs-on-kubernetes-0.1.4.tgz"
  labels:
    helm.sh/chart: lxcfs-on-kubernetes-0.1.4
    app.kubernetes.io/name: lxcfs-on-kubernetes
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/compose: manager
    app.kubernetes.io/version: "0.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9443
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: lxcfs-on-kubernetes
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/compose: manager
---
# Source: lxcfs-on-kubernetes/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    helm.sh/chart: lxcfs-on-kubernetes-0.1.4
    app.kubernetes.io/name: lxcfs-on-kubernetes
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/compose: lxcfs
    app.kubernetes.io/version: "0.1.4"
    app.kubernetes.io/managed-by: Helm
  name: 'my-release-lxcfs-on-kubernetes-controller-manager-daemonset'
  namespace: "lxcfs-on-kubernetes-0.1.4.tgz"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: lxcfs-on-kubernetes
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/compose: lxcfs
  template:
    metadata:
      annotations:
        {}
      labels:
        app.kubernetes.io/name: lxcfs-on-kubernetes
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/compose: lxcfs
    spec:
      containers:
      - args:
        - -l
        - --enable-cfs
        - --enable-pidfd
        - /var/lib/lxcfs
        image: ghcr.io/cndoit18/lxcfs-agent:v0.1.4
        imagePullPolicy: "IfNotPresent"
        name: agent
        resources:
          limits:
            cpu: 500m
            memory: 300Mi
          requests:
            cpu: 300m
            memory: 200M
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/lxcfs
          mountPropagation: Bidirectional
          name: lxcfs
        - mountPath: /sys/fs/cgroup
          name: cgroup
      hostPID: true
      volumes:
      - hostPath:
          path: /var/lib/lxcfs
          type: DirectoryOrCreate
        name: lxcfs
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroup
---
# Source: lxcfs-on-kubernetes/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: lxcfs-on-kubernetes-0.1.4
    app.kubernetes.io/name: lxcfs-on-kubernetes
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/compose: manager
    app.kubernetes.io/version: "0.1.4"
    app.kubernetes.io/managed-by: Helm
  name: 'my-release-lxcfs-on-kubernetes-controller-manager'
  namespace: "lxcfs-on-kubernetes-0.1.4.tgz"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: lxcfs-on-kubernetes
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/compose: manager
  template:
    metadata:
      annotations:
        {}
      labels:
        app.kubernetes.io/name: lxcfs-on-kubernetes
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/compose: manager
    spec:
      containers:
      - args:
        - --lxcfs-path=/var/lib/lxcfs
        - --v=4
        - --leader-election=false
        - --leader-election-namespace=kube-system
        - --leader-election-id=lxcfs-on-kubernetes-leader-election
        image: ghcr.io/cndoit18/lxcfs-manager:v0.1.4
        imagePullPolicy: "IfNotPresent"
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 300Mi
          requests:
            cpu: 300m
            memory: 200Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: 'my-release-lxcfs-on-kubernetes-certificate'
---
# Source: lxcfs-on-kubernetes/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: 'my-release-lxcfs-on-kubernetes-serving-cert'
  namespace: "lxcfs-on-kubernetes-0.1.4.tgz"
spec:
  dnsNames:
  - 'my-release-lxcfs-on-kubernetes-webhook-service.lxcfs-on-kubernetes-0.1.4.tgz.svc'
  - 'my-release-lxcfs-on-kubernetes-webhook-service.lxcfs-on-kubernetes-0.1.4.tgz.svc.cluster.local'
  issuerRef:
    kind: Issuer
    name: 'my-release-lxcfs-on-kubernetes-selfsigned-issuer'
  secretName: 'my-release-lxcfs-on-kubernetes-certificate'
---
# Source: lxcfs-on-kubernetes/templates/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: 'my-release-lxcfs-on-kubernetes-selfsigned-issuer'
  namespace: "lxcfs-on-kubernetes-0.1.4.tgz"
spec:
  selfSigned: {}
---
# Source: lxcfs-on-kubernetes/templates/mutatingwebhookconfiguration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: 'lxcfs-on-kubernetes-0.1.4.tgz/my-release-lxcfs-on-kubernetes-serving-cert'
  name: 'my-release-lxcfs-on-kubernetes-mutating-webhook-configuration'
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: 'my-release-lxcfs-on-kubernetes-webhook-service'
      namespace: "lxcfs-on-kubernetes-0.1.4.tgz"
      path: /mount-lxcfs
  failurePolicy: Ignore
  name: club.cndoit18.lxcfs-on-kubernetes
  namespaceSelector:
    matchLabels:
      mount-lxcfs: enabled
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: NoneOnDryRun
