---
# Source: devportal-admin-ui/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-devportal-admin-ui
  labels:
    helm.sh/chart: devportal-admin-ui-0.3.4
    app.kubernetes.io/name: devportal-admin-ui
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: devportal-admin-ui/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-devportal-admin-ui
data:
  CHART_VALUES_FILENAME: current.yaml
  DIR: ./platform
  URL: http://localhost:3000
  ADMIN_UI_BASE_PATH: ""
  NAMESPACE: devportal-admin-ui-0.3.4.tgz
---
# Source: devportal-admin-ui/templates/persistent-volume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-release-devportal-admin-ui-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/platform-volume/admin-ui"
---
# Source: devportal-admin-ui/templates/persistent-volume.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-devportal-admin-ui-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: devportal-admin-ui/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-devportal-admin-ui
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes", "persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles", "clusterrolebindings", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
  - apiGroups: ["configuration.konghq.com"]
    resources: ["kongclusterplugins"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["networkpolicies"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
---
# Source: devportal-admin-ui/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-devportal-admin-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-devportal-admin-ui
subjects:
- kind: ServiceAccount
  name: my-release-devportal-admin-ui
  namespace: devportal-admin-ui-0.3.4.tgz
---
# Source: devportal-admin-ui/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-devportal-admin-ui
rules:
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets", "replicasets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
  - apiGroups: [""]
    resources: ["configmaps","secrets", "services", "serviceaccounts"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
---
# Source: devportal-admin-ui/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-devportal-admin-ui
  namespace: devportal-admin-ui-0.3.4.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-devportal-admin-ui
subjects:
- kind: ServiceAccount
  name: my-release-devportal-admin-ui
  namespace: devportal-admin-ui-0.3.4.tgz
---
# Source: devportal-admin-ui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-devportal-admin-ui
  labels:
    helm.sh/chart: devportal-admin-ui-0.3.4
    app.kubernetes.io/name: devportal-admin-ui
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: devportal-admin-ui
    app.kubernetes.io/instance: my-release
---
# Source: devportal-admin-ui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-devportal-admin-ui
  labels:
    helm.sh/chart: devportal-admin-ui-0.3.4
    app.kubernetes.io/name: devportal-admin-ui
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: devportal-admin-ui
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: devportal-admin-ui
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/config: 10ec97d5b442c12a2d0f90e0a5e0703094be8d0646379b86b13d8b8e54c55d10
    spec:
      volumes:
      - name: platform-volume-storage
        persistentVolumeClaim:
          claimName: my-release-devportal-admin-ui-claim
      serviceAccountName: my-release-devportal-admin-ui
      securityContext:
        {}
      initContainers:
      - name: fix-permissions
        image: ubuntu
        command: ['sh', '-c', 'chown -R 1000:1000 /app/platform']  # Replace 1000:1000 with the desired UID:GID
        volumeMounts:
        - name: platform-volume-storage
          mountPath: /app/platform
      containers:
        - name: devportal-admin-ui
          securityContext:
            {}
          image: "veecode/devportal-admin-ui:0.3.1"
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - mountPath: "/app/platform"
            name: platform-volume-storage
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: my-release-devportal-admin-ui
---
# Source: devportal-admin-ui/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-devportal-admin-ui-test-connection"
  labels:
    helm.sh/chart: devportal-admin-ui-0.3.4
    app.kubernetes.io/name: devportal-admin-ui
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-devportal-admin-ui:3000']
  restartPolicy: Never
