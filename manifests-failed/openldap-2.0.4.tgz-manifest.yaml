---
# Source: openldap/templates/secret-ltb.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-openldap-ltb-passwd
  labels:
    app: openldap
    chart: openldap-2.0.4
    release: my-release
    heritage: Helm
type: Opaque
data:
  LDAP_ADMIN_PASSWORD: "Tm90QFNlY3VyZVBhc3N3MHJk"
---
# Source: openldap/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-openldap
  labels:
    app: openldap
    chart: openldap-2.0.4
    release: my-release
    heritage: Helm
type: Opaque
data:
  LDAP_ADMIN_PASSWORD: "Tm90QFNlY3VyZVBhc3N3MHJk"
  LDAP_CONFIG_PASSWORD: "Tm90QFNlY3VyZVBhc3N3MHJk"
---
# Source: openldap/charts/phpldapadmin/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-phpldapadmin
  labels:
    app: phpldapadmin
    chart: phpldapadmin-0.1.2
    release: my-release
    heritage: Helm
data:
  PHPLDAPADMIN_HTTPS: "false"
  PHPLDAPADMIN_LDAP_HOSTS: openldap
  PHPLDAPADMIN_TRUST_PROXY_SSL: "true"
---
# Source: openldap/templates/configmap-env.yaml
#
# A ConfigMap spec for openldap slapd that map directly to env variables in the Pod.
# List of environment variables supported is from the docker image:
# https://github.com/osixia/docker-openldap#beginner-guide
# Note that passwords are defined as secrets
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-openldap-env
  labels:
    app: openldap
    chart: openldap-2.0.4
    release: my-release
    heritage: Helm
data:
  CONTAINER_LOG_LEVEL: "4"
  KEEP_EXISTING_CONFIG: "false"
  LDAP_BACKEND: mdb
  LDAP_DOMAIN: example.org
  LDAP_LOG_LEVEL: "256"
  LDAP_ORGANISATION: Example Inc.
  LDAP_READONLY_USER: "false"
  LDAP_READONLY_USER_PASSWORD: readonly
  LDAP_READONLY_USER_USERNAME: readonly
  LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
  LDAP_RFC2307BIS_SCHEMA: "false"
  LDAP_SSL_HELPER_PREFIX: ldap
  LDAP_TLS: "true"
  LDAP_TLS_CA_CRT_FILENAME: ca.crt
  LDAP_TLS_CIPHER_SUITE: NORMAL
  LDAP_TLS_CRT_FILENAME: ldap.crt
  LDAP_TLS_DH_PARAM_FILENAME: dhparam.pem
  LDAP_TLS_ENFORCE: "false"
  LDAP_TLS_KEY_FILENAME: ldap.key
  LDAP_TLS_PROTOCOL_MIN: "3.0"
  LDAP_TLS_REQCERT: never
  LDAP_TLS_VERIFY_CLIENT: never
  LDAP_REPLICATION: "true"
  LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn=\"cn=admin,cn=config\" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase=\"cn=config\" type=refreshAndPersist retry=\"60 +\" timeout=1 starttls=critical tls_reqcert=never"
  LDAP_REPLICATION_DB_SYNCPROV: "binddn=\"cn=admin,$LDAP_BASE_DN\" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase=\"$LDAP_BASE_DN\" type=refreshAndPersist interval=00:00:00:10 retry=\"60 +\" timeout=1 starttls=critical tls_reqcert=never"
  LDAP_REPLICATION_HOSTS: "#PYTHON2BASH:['ldap://my-release-openldap-0.my-release-openldap-headless.openldap-2.0.4.tgz.svc.cluster.local','ldap://my-release-openldap-1.my-release-openldap-headless.openldap-2.0.4.tgz.svc.cluster.local','ldap://my-release-openldap-2.my-release-openldap-headless.openldap-2.0.4.tgz.svc.cluster.local']"
---
# Source: openldap/charts/ltb-passwd/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-ltb-passwd
  labels:
    app.kubernetes.io/name: my-release
    helm.sh/chart: ltb-passwd-0.1.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: my-release
    app.kubernetes.io/instance: my-release
---
# Source: openldap/charts/phpldapadmin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-phpldapadmin
  labels:
    app: phpldapadmin
    chart: phpldapadmin-0.1.2
    release: my-release
    heritage: Helm
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: phpldapadmin
    release: my-release
---
# Source: openldap/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-openldap
  namespace: openldap-2.0.4.tgz
  labels:
    app: my-release-openldap
    chart: openldap-2.0.4
    release: my-release
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: ldap-port
      protocol: TCP
      port: 389
      targetPort: ldap-port
      nodePort: null
    - name: ssl-ldap-port
      protocol: TCP
      port: 636
      targetPort: ssl-ldap-port
      nodePort: null
  selector:
    app: my-release-openldap
    release: my-release
---
# Source: openldap/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-openldap-headless
  labels:
    app: my-release-openldap
    chart: openldap-2.0.4
    release: my-release
    heritage: Helm
spec:
  ports:
  - port: 389
    name: ldap-port
    targetPort: ldap-port
  clusterIP: None
  selector:
    app: my-release-openldap
    release: my-release  
  type: ClusterIP
  sessionAffinity: None
---
# Source: openldap/charts/ltb-passwd/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ltb-passwd
  labels:
    app.kubernetes.io/name: my-release
    helm.sh/chart: ltb-passwd-0.1.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: my-release
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: my-release
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: ltb-passwd
          image: "tiredofit/self-service-password:latest"
          imagePullPolicy: Always
          env:
          - name: LDAP_SERVER
            value: "ldap://openldap"
          - name: LDAP_BINDDN
            value: "cn=admin,dc=example,dc=org"
          - name: LDAP_BINDPASS
            valueFrom:
              secretKeyRef:
                name: my-release-ltb-passwd
                key: LDAP_ADMIN_PASSWORD 
          - name: LDAP_STARTTLS
            value: "false"
          - name: LDAP_BASE_SEARCH
            value: "dc=example,dc=org"
          - name: SECRETEKEY
            value: password
          - name: LDAP_LOGIN_ATTRIBUTE
            value: cn
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: openldap/charts/phpldapadmin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment

metadata:
  name: my-release-phpldapadmin
  labels:
    app: phpldapadmin
    chart: phpldapadmin-0.1.2
    release: my-release
    heritage: Helm

spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpldapadmin
      release: my-release
  template:
    metadata:
      labels:
        app: phpldapadmin
        release: my-release
    spec:
      containers:
      - name: phpldapadmin
        image: "osixia/phpldapadmin:0.9.0"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        envFrom:
        - configMapRef:
            name: my-release-phpldapadmin
        livenessProbe:
            httpGet:
              path: /
              port: http
        readinessProbe:
            httpGet:
              path: /
              port: http
        resources:
            {}
---
# Source: openldap/templates/statefullset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  my-release-openldap
  labels:
    app: my-release-openldap
    chart: openldap-2.0.4
    release: my-release
    heritage: Helm
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-release-openldap
      release: my-release
  serviceName: my-release-openldap-headless
  template:
    metadata:
      annotations:
        checksum/configmap-env: b04184493e25f81685e6e3abdf559f372d16ed72c0fd73b26e843a38f8764cf9
      labels:
        app: my-release-openldap
        release: my-release
    spec:
      containers:
        - name: openldap
          image: "osixia/openldap:1.4.0"
          imagePullPolicy: Always
          args:
            - -l
            - info
          ports:
            - name: ldap-port
              containerPort: 389
            - name: ssl-ldap-port
              containerPort: 636
          envFrom:
            - configMapRef:
                name: my-release-openldap-env
            - secretRef:
                name: my-release-openldap
          volumeMounts:
            - name: data
              mountPath: /var/lib/ldap
              subPath: data
            - name: data
              mountPath: /etc/ldap/slapd.d
              subPath: config-data
            - name: data
              mountPath: /container/service/slapd/assets/certs
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            #- name: HOSTNAME
            #  value: $(POD_NAME).my-release-openldap-headless
            - name: LDAP_TLS_CRT_FILENAME
              value: tls.crt
            - name: LDAP_TLS_KEY_FILENAME
              value: tls.key
          livenessProbe:
            tcpSocket:
              port: ldap-port
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            tcpSocket:
              port: ldap-port
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 10
          resources:
            {}
      affinity: 
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: my-release
                app.kubernetes.io/instance: my-release
      imagePullSecrets: 
        - name: harbor 
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: openldap/charts/ltb-passwd/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: my-release-ltb-passwd
  labels:
    app: my-release
    chart: ltb-passwd-0.1.0
    release: my-release
    heritage: Helm
spec:
  rules:
    - host: ssl-ldap2.example
      http:
        paths:
          - path: /
            backend:
              serviceName: my-release-ltb-passwd
              servicePort: http
---
# Source: openldap/charts/phpldapadmin/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: my-release-phpldapadmin
  labels:
    app: phpldapadmin
    chart: phpldapadmin-0.1.2
    release: my-release
    heritage: Helm
spec:
  rules:
    - host: phpldapadmin.example
      http:
        paths:
          - path: /
            backend:
              serviceName: my-release-phpldapadmin
              servicePort: http
---
# Source: openldap/templates/configmap-customldif.yaml
#
# A ConfigMap spec for openldap slapd that map directly to files under
# /container/service/slapd/assets/config/bootstrap/ldif/custom
#
