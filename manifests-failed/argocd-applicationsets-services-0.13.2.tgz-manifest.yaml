---
# Source: argocd-applicationsets-services/templates/github-pr.yml
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: 'node-webserver-github-pr-reviews'
  namespace: argocd
  labels:
    app.kubernetes.io/name: node-webserver
    app.kubernetes.io/platform: 'github'
  annotations:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: 'argocd-applicationsets-services-0.13.2'
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
  - pullRequest:
      github:
        api: https://api.github.com
        owner: saidsef
        repo: node-webserver
        labels:
        - preview
      requeueAfterSeconds: 500
  template:
    metadata:
      name: node-webserver-{{head_short_sha_7}}-{{number}}-pr-reviews
      labels:
        app.kubernetes.io/name: node-webserver
        app.kubernetes.io/branch: '{{branch_slug}}'
        app.kubernetes.io/created-by: 'applicationset'
      annotations:
        argocd-image-updater.argoproj.io/force-update: 'true'
        argocd-image-updater.argoproj.io/update-strategy: 'latest'
        argocd-image-updater.argoproj.io/write-back-method: 'argocd'
        argocd.argoproj.io/application-set-refresh: 'true'
        argocd.argoproj.io/head: '{{head_short_sha}}'
        link.argocd.argoproj.io/external-link: 'https://github.com/saidsef/node-webserver/pull/{{number}}'
        notifications.argoproj.io/subscribe.on-deleted.slack: argocd
        notifications.argoproj.io/subscribe.on-deployed.slack: argocd
        notifications.argoproj.io/subscribe.on-health-degraded.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-failed.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-running.slack: argocd
    spec:
      revisionHistoryLimit: 2
      source:
        repoURL: https://github.com/saidsef/node-webserver.git
        targetRevision: '{{branch}}'
        kustomize:
          commonAnnotations:
            app.kubernetes.io/instance: 'node-webserver'
            app.kubernetes.io/part-of: preview
            argocd.argoproj.io/head_short_sha: '{{head_short_sha}}'
          images:
          - 'docker.io/saidsef/node-webserver:{{branch}}'
        path: deployment
      project: default
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        managedNamespaceMetadata:
          labels:
            app.kubernetes.io/created-by: node-webserver
        syncOptions:
          - ApplyOutOfSyncOnly=true
          - CreateNamespace=true
          - PruneLast=true
          - PrunePropagationPolicy=foreground
          - RespectIgnoreDifferences=true
          - Validate=false
        retry:
          backoff:
            duration: 10s
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: previews
---
# Source: argocd-applicationsets-services/templates/github-pr.yml
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: 'alpine-jenkins-dockerfile-github-pr-reviews'
  namespace: argocd
  labels:
    app.kubernetes.io/name: alpine-jenkins-dockerfile
    app.kubernetes.io/platform: 'github'
  annotations:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: 'argocd-applicationsets-services-0.13.2'
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
  - pullRequest:
      github:
        api: https://api.github.com
        owner: saidsef
        repo: alpine-jenkins-dockerfile
        labels:
        - preview
      requeueAfterSeconds: 500
  template:
    metadata:
      name: alpine-jenkins-dockerfile-{{head_short_sha_7}}-{{number}}-pr-reviews
      labels:
        app.kubernetes.io/name: alpine-jenkins-dockerfile
        app.kubernetes.io/branch: '{{branch_slug}}'
        app.kubernetes.io/created-by: 'applicationset'
      annotations:
        argocd-image-updater.argoproj.io/force-update: 'true'
        argocd-image-updater.argoproj.io/update-strategy: 'latest'
        argocd-image-updater.argoproj.io/write-back-method: 'argocd'
        argocd.argoproj.io/application-set-refresh: 'true'
        argocd.argoproj.io/head: '{{head_short_sha}}'
        link.argocd.argoproj.io/external-link: 'https://github.com/saidsef/alpine-jenkins-dockerfile/pull/{{number}}'
        notifications.argoproj.io/subscribe.on-deleted.slack: argocd
        notifications.argoproj.io/subscribe.on-deployed.slack: argocd
        notifications.argoproj.io/subscribe.on-health-degraded.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-failed.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-running.slack: argocd
    spec:
      revisionHistoryLimit: 2
      source:
        repoURL: https://github.com/saidsef/alpine-jenkins-dockerfile.git
        targetRevision: '{{branch}}'
        kustomize:
          commonAnnotations:
            app.kubernetes.io/instance: 'alpine-jenkins-dockerfile'
            app.kubernetes.io/part-of: preview
            argocd.argoproj.io/head_short_sha: '{{head_short_sha}}'
        path: deployment/preview
      project: default
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        managedNamespaceMetadata:
          labels:
            app.kubernetes.io/created-by: alpine-jenkins-dockerfile
        syncOptions:
          - ApplyOutOfSyncOnly=true
          - CreateNamespace=true
          - PruneLast=true
          - PrunePropagationPolicy=foreground
          - RespectIgnoreDifferences=true
          - Validate=false
        retry:
          backoff:
            duration: 10s
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: previews
---
# Source: argocd-applicationsets-services/templates/github-pr.yml
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: 'aws-kinesis-local-github-pr-reviews'
  namespace: argocd
  labels:
    app.kubernetes.io/name: aws-kinesis-local
    app.kubernetes.io/platform: 'github'
  annotations:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: 'argocd-applicationsets-services-0.13.2'
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
  - pullRequest:
      github:
        api: https://api.github.com
        owner: saidsef
        repo: aws-kinesis-local
        labels:
        - preview
      requeueAfterSeconds: 500
  template:
    metadata:
      name: aws-kinesis-local-{{head_short_sha_7}}-{{number}}-pr-reviews
      labels:
        app.kubernetes.io/name: aws-kinesis-local
        app.kubernetes.io/branch: '{{branch_slug}}'
        app.kubernetes.io/created-by: 'applicationset'
      annotations:
        argocd-image-updater.argoproj.io/force-update: 'true'
        argocd-image-updater.argoproj.io/update-strategy: 'latest'
        argocd-image-updater.argoproj.io/write-back-method: 'argocd'
        argocd.argoproj.io/application-set-refresh: 'true'
        argocd.argoproj.io/head: '{{head_short_sha}}'
        link.argocd.argoproj.io/external-link: 'https://github.com/saidsef/aws-kinesis-local/pull/{{number}}'
        notifications.argoproj.io/subscribe.on-deleted.slack: argocd
        notifications.argoproj.io/subscribe.on-deployed.slack: argocd
        notifications.argoproj.io/subscribe.on-health-degraded.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-failed.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-running.slack: argocd
    spec:
      revisionHistoryLimit: 2
      source:
        repoURL: https://github.com/saidsef/aws-kinesis-local.git
        targetRevision: '{{branch}}'
        kustomize:
          commonAnnotations:
            app.kubernetes.io/instance: 'aws-kinesis-local'
            app.kubernetes.io/part-of: preview
            argocd.argoproj.io/head_short_sha: '{{head_short_sha}}'
          images:
          - 'docker.io/saidsef/aws-kinesis-local:{{branch}}'
        path: deployment
      project: default
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        managedNamespaceMetadata:
          labels:
            app.kubernetes.io/created-by: aws-kinesis-local
        syncOptions:
          - ApplyOutOfSyncOnly=true
          - CreateNamespace=true
          - PruneLast=true
          - PrunePropagationPolicy=foreground
          - RespectIgnoreDifferences=true
          - Validate=false
        retry:
          backoff:
            duration: 10s
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: previews
---
# Source: argocd-applicationsets-services/templates/github-pr.yml
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: 'aws-dynamodb-local-github-pr-reviews'
  namespace: argocd
  labels:
    app.kubernetes.io/name: aws-dynamodb-local
    app.kubernetes.io/platform: 'github'
  annotations:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: 'argocd-applicationsets-services-0.13.2'
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
  - pullRequest:
      github:
        api: https://api.github.com
        owner: saidsef
        repo: aws-dynamodb-local
        labels:
        - preview
      requeueAfterSeconds: 500
  template:
    metadata:
      name: aws-dynamodb-local-{{head_short_sha_7}}-{{number}}-pr-reviews
      labels:
        app.kubernetes.io/name: aws-dynamodb-local
        app.kubernetes.io/branch: '{{branch_slug}}'
        app.kubernetes.io/created-by: 'applicationset'
      annotations:
        argocd-image-updater.argoproj.io/force-update: 'true'
        argocd-image-updater.argoproj.io/update-strategy: 'latest'
        argocd-image-updater.argoproj.io/write-back-method: 'argocd'
        argocd.argoproj.io/application-set-refresh: 'true'
        argocd.argoproj.io/head: '{{head_short_sha}}'
        link.argocd.argoproj.io/external-link: 'https://github.com/saidsef/aws-dynamodb-local/pull/{{number}}'
        notifications.argoproj.io/subscribe.on-deleted.slack: argocd
        notifications.argoproj.io/subscribe.on-deployed.slack: argocd
        notifications.argoproj.io/subscribe.on-health-degraded.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-failed.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-running.slack: argocd
    spec:
      revisionHistoryLimit: 2
      source:
        repoURL: https://github.com/saidsef/aws-dynamodb-local.git
        targetRevision: '{{branch}}'
        kustomize:
          commonAnnotations:
            app.kubernetes.io/instance: 'aws-dynamodb-local'
            app.kubernetes.io/part-of: preview
            argocd.argoproj.io/head_short_sha: '{{head_short_sha}}'
          images:
          - 'docker.io/saidsef/aws-dynamodb-local:{{branch}}'
        path: deployment
      project: default
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        managedNamespaceMetadata:
          labels:
            app.kubernetes.io/created-by: aws-dynamodb-local
        syncOptions:
          - ApplyOutOfSyncOnly=true
          - CreateNamespace=true
          - PruneLast=true
          - PrunePropagationPolicy=foreground
          - RespectIgnoreDifferences=true
          - Validate=false
        retry:
          backoff:
            duration: 10s
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: previews
---
# Source: argocd-applicationsets-services/templates/github-pr.yml
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: 'tika-document-to-text-github-pr-reviews'
  namespace: argocd
  labels:
    app.kubernetes.io/name: tika-document-to-text
    app.kubernetes.io/platform: 'github'
  annotations:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: 'argocd-applicationsets-services-0.13.2'
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
  - pullRequest:
      github:
        api: https://api.github.com
        owner: saidsef
        repo: tika-document-to-text
        labels:
        - preview
      requeueAfterSeconds: 500
  template:
    metadata:
      name: tika-document-to-text-{{head_short_sha_7}}-{{number}}-pr-reviews
      labels:
        app.kubernetes.io/name: tika-document-to-text
        app.kubernetes.io/branch: '{{branch_slug}}'
        app.kubernetes.io/created-by: 'applicationset'
      annotations:
        argocd-image-updater.argoproj.io/force-update: 'true'
        argocd-image-updater.argoproj.io/update-strategy: 'latest'
        argocd-image-updater.argoproj.io/write-back-method: 'argocd'
        argocd.argoproj.io/application-set-refresh: 'true'
        argocd.argoproj.io/head: '{{head_short_sha}}'
        link.argocd.argoproj.io/external-link: 'https://github.com/saidsef/tika-document-to-text/pull/{{number}}'
        notifications.argoproj.io/subscribe.on-deleted.slack: argocd
        notifications.argoproj.io/subscribe.on-deployed.slack: argocd
        notifications.argoproj.io/subscribe.on-health-degraded.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-failed.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-running.slack: argocd
    spec:
      revisionHistoryLimit: 2
      source:
        repoURL: https://github.com/saidsef/tika-document-to-text.git
        targetRevision: '{{branch}}'
        kustomize:
          commonAnnotations:
            app.kubernetes.io/instance: 'tika-document-to-text'
            app.kubernetes.io/part-of: preview
            argocd.argoproj.io/head_short_sha: '{{head_short_sha}}'
        path: deployment/preview
      project: default
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        managedNamespaceMetadata:
          labels:
            app.kubernetes.io/created-by: tika-document-to-text
        syncOptions:
          - ApplyOutOfSyncOnly=true
          - CreateNamespace=true
          - PruneLast=true
          - PrunePropagationPolicy=foreground
          - RespectIgnoreDifferences=true
          - Validate=false
        retry:
          backoff:
            duration: 10s
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: previews
---
# Source: argocd-applicationsets-services/templates/github-pr.yml
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: 'k8s-spot-termination-notice-github-pr-reviews'
  namespace: argocd
  labels:
    app.kubernetes.io/name: k8s-spot-termination-notice
    app.kubernetes.io/platform: 'github'
  annotations:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: 'argocd-applicationsets-services-0.13.2'
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
  - pullRequest:
      github:
        api: https://api.github.com
        owner: saidsef
        repo: k8s-spot-termination-notice
        labels:
        - preview
      requeueAfterSeconds: 500
  template:
    metadata:
      name: k8s-spot-termination-notice-{{head_short_sha_7}}-{{number}}-pr-reviews
      labels:
        app.kubernetes.io/name: k8s-spot-termination-notice
        app.kubernetes.io/branch: '{{branch_slug}}'
        app.kubernetes.io/created-by: 'applicationset'
      annotations:
        argocd-image-updater.argoproj.io/force-update: 'true'
        argocd-image-updater.argoproj.io/update-strategy: 'latest'
        argocd-image-updater.argoproj.io/write-back-method: 'argocd'
        argocd.argoproj.io/application-set-refresh: 'true'
        argocd.argoproj.io/head: '{{head_short_sha}}'
        link.argocd.argoproj.io/external-link: 'https://github.com/saidsef/k8s-spot-termination-notice/pull/{{number}}'
        notifications.argoproj.io/subscribe.on-deleted.slack: argocd
        notifications.argoproj.io/subscribe.on-deployed.slack: argocd
        notifications.argoproj.io/subscribe.on-health-degraded.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-failed.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-running.slack: argocd
    spec:
      revisionHistoryLimit: 2
      source:
        repoURL: https://github.com/saidsef/k8s-spot-termination-notice.git
        targetRevision: '{{branch}}'
        kustomize:
          commonAnnotations:
            app.kubernetes.io/instance: 'k8s-spot-termination-notice'
            app.kubernetes.io/part-of: preview
            argocd.argoproj.io/head_short_sha: '{{head_short_sha}}'
          images:
          - 'docker.io/saidsef/k8s-spot-termination-notice:merge'
        path: deployment
      project: default
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        managedNamespaceMetadata:
          labels:
            app.kubernetes.io/created-by: k8s-spot-termination-notice
        syncOptions:
          - ApplyOutOfSyncOnly=true
          - CreateNamespace=true
          - PruneLast=true
          - PrunePropagationPolicy=foreground
          - RespectIgnoreDifferences=true
          - Validate=false
        retry:
          backoff:
            duration: 10s
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: previews
---
# Source: argocd-applicationsets-services/templates/github-pr.yml
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: 'scapy-containerised-github-pr-reviews'
  namespace: argocd
  labels:
    app.kubernetes.io/name: scapy-containerised
    app.kubernetes.io/platform: 'github'
  annotations:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: 'argocd-applicationsets-services-0.13.2'
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
  - pullRequest:
      github:
        api: https://api.github.com
        owner: saidsef
        repo: scapy-containerised
        labels:
        - preview
      requeueAfterSeconds: 500
  template:
    metadata:
      name: scapy-containerised-{{head_short_sha_7}}-{{number}}-pr-reviews
      labels:
        app.kubernetes.io/name: scapy-containerised
        app.kubernetes.io/branch: '{{branch_slug}}'
        app.kubernetes.io/created-by: 'applicationset'
      annotations:
        argocd-image-updater.argoproj.io/force-update: 'true'
        argocd-image-updater.argoproj.io/update-strategy: 'latest'
        argocd-image-updater.argoproj.io/write-back-method: 'argocd'
        argocd.argoproj.io/application-set-refresh: 'true'
        argocd.argoproj.io/head: '{{head_short_sha}}'
        link.argocd.argoproj.io/external-link: 'https://github.com/saidsef/scapy-containerised/pull/{{number}}'
        notifications.argoproj.io/subscribe.on-deleted.slack: argocd
        notifications.argoproj.io/subscribe.on-deployed.slack: argocd
        notifications.argoproj.io/subscribe.on-health-degraded.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-failed.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-running.slack: argocd
    spec:
      revisionHistoryLimit: 2
      source:
        repoURL: https://github.com/saidsef/scapy-containerised.git
        helm:
          values: |
            {"image":{"tag":"{{branch}}"}}
        path: charts/scapy
        targetRevision: '{{branch}}'
      project: default
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        managedNamespaceMetadata:
          labels:
            app.kubernetes.io/created-by: scapy-containerised
        syncOptions:
          - ApplyOutOfSyncOnly=true
          - CreateNamespace=true
          - PruneLast=true
          - PrunePropagationPolicy=foreground
          - RespectIgnoreDifferences=true
          - Validate=false
        retry:
          backoff:
            duration: 10s
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: previews
---
# Source: argocd-applicationsets-services/templates/github-pr.yml
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: 'faas-reverse-geocoding-github-pr-reviews'
  namespace: argocd
  labels:
    app.kubernetes.io/name: faas-reverse-geocoding
    app.kubernetes.io/platform: 'github'
  annotations:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: 'argocd-applicationsets-services-0.13.2'
spec:
  syncPolicy:
    preserveResourcesOnDeletion: false
  generators:
  - pullRequest:
      github:
        api: https://api.github.com
        owner: saidsef
        repo: faas-reverse-geocoding
        labels:
        - preview
      requeueAfterSeconds: 500
  template:
    metadata:
      name: faas-reverse-geocoding-{{head_short_sha_7}}-{{number}}-pr-reviews
      labels:
        app.kubernetes.io/name: faas-reverse-geocoding
        app.kubernetes.io/branch: '{{branch_slug}}'
        app.kubernetes.io/created-by: 'applicationset'
      annotations:
        argocd-image-updater.argoproj.io/force-update: 'true'
        argocd-image-updater.argoproj.io/update-strategy: 'latest'
        argocd-image-updater.argoproj.io/write-back-method: 'argocd'
        argocd.argoproj.io/application-set-refresh: 'true'
        argocd.argoproj.io/head: '{{head_short_sha}}'
        link.argocd.argoproj.io/external-link: 'https://github.com/saidsef/faas-reverse-geocoding/pull/{{number}}'
        notifications.argoproj.io/subscribe.on-deleted.slack: argocd
        notifications.argoproj.io/subscribe.on-deployed.slack: argocd
        notifications.argoproj.io/subscribe.on-health-degraded.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-failed.slack: argocd
        notifications.argoproj.io/subscribe.on-sync-running.slack: argocd
    spec:
      revisionHistoryLimit: 2
      source:
        repoURL: https://saidsef.github.io/faas-reverse-geocoding
        helm:
          parameters:
            [{"name":"image.tag","value":"{{branch}}"},{"name":"ingress.enabled","value":"true"},{"name":"ingress.enabled","value":"true"},{"name":"ingress.hosts[0].host","value":"{{branch}}"}]
        chart: reverse-geocoding
        targetRevision: ">= 0"
      project: default
      syncPolicy:
        automated:
          allowEmpty: true
          prune: true
          selfHeal: true
        managedNamespaceMetadata:
          labels:
            app.kubernetes.io/created-by: faas-reverse-geocoding
        syncOptions:
          - ApplyOutOfSyncOnly=true
          - CreateNamespace=true
          - PruneLast=true
          - PrunePropagationPolicy=foreground
          - RespectIgnoreDifferences=true
          - Validate=false
        retry:
          backoff:
            duration: 10s
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: previews
