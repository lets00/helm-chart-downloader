---
# Source: pastebin/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pastebin
  labels:
    helm.sh/chart: pastebin-0.2.2
    app.kubernetes.io/name: pastebin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pastebin
      app.kubernetes.io/instance: my-release
---
# Source: pastebin/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: pastebin
  labels:
    helm.sh/chart: pastebin-0.2.2
    app.kubernetes.io/name: pastebin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
    VAL: "5"
---
# Source: pastebin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: pastebin
  labels:
    helm.sh/chart: pastebin-0.2.2
    app.kubernetes.io/name: pastebin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app.kubernetes.io/name: pastebin
    app.kubernetes.io/instance: my-release
  type: NodePort
---
# Source: pastebin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pastebin
  labels:
    helm.sh/chart: pastebin-0.2.2
    app.kubernetes.io/name: pastebin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pastebin
      app.kubernetes.io/instance: my-release
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: "25%"
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pastebin
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: pastebin
          env:
            - name: PORT
              value: "8000"
          envFrom:
            - configMapRef:
                name: pastebin
          image: "783633885093.dkr.ecr.us-west-2.amazonaws.com/pastebin:v3.5.8"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: http
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 5
            successThreshold: 3
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
---
# Source: pastebin/templates/job.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: pastebin-manager
  labels:
    helm.sh/chart: pastebin-0.2.2
    app.kubernetes.io/name: pastebin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: pastebin-manager
              command:
                - /bin/sh
                - -c
                - ./manage.py cleanup_snippets
              envFrom:
                - configMapRef:
                    name: pastebin
              image: "783633885093.dkr.ecr.us-west-2.amazonaws.com/pastebin:v3.5.8"
              imagePullPolicy: Always
              resources:
                limits:
                  cpu: 1
                  memory: 2Gi
                requests:
                  cpu: 500m
                  memory: 1Gi
          restartPolicy: Never
---
# Source: pastebin/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pastebin
  annotations:
    cert-manager.io/issuer: letsencrypt
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "Content-Security-Policy: frame-ancestors 'none'";
  labels:
    helm.sh/chart: pastebin-0.2.2
    app.kubernetes.io/name: pastebin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: nginx
  rules:
    - host: "paste.allizom.org"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: pastebin
                port:
                  number: 80
  tls:
    - hosts:
        - "paste.allizom.org"
      secretName: chart-paste-allizom-org
---
# Source: pastebin/templates/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt
spec:
  acme:
    email: it-se@mozilla.com
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt
    solvers:
      - http01:
          ingress:
            class: nginx
---
# Source: pastebin/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-pastebin-test-connection"
  labels:
    helm.sh/chart: pastebin-0.2.2
    app.kubernetes.io/name: pastebin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args: ['-L', 'pastebin:80']
  restartPolicy: Never
