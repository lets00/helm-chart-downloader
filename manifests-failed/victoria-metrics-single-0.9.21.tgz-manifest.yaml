---
# Source: victoria-metrics-single/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: victoria-metrics-single-0.9.21
    app.kubernetes.io/managed-by: Helm
  name: my-release-victoria-metrics-single
  namespace: victoria-metrics-single-0.9.21.tgz
---
# Source: victoria-metrics-single/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-victoria-metrics-single-clusterrole
  labels:
    helm.sh/chart: victoria-metrics-single-0.9.21
    app.kubernetes.io/managed-by: Helm
rules:
---
# Source: victoria-metrics-single/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-victoria-metrics-single-clusterrolebinding
  labels:
    helm.sh/chart: victoria-metrics-single-0.9.21
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: my-release-victoria-metrics-single
    namespace: victoria-metrics-single-0.9.21.tgz
roleRef:
  kind: ClusterRole
  name: my-release-victoria-metrics-single-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: victoria-metrics-single/templates/server-service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: victoria-metrics-single-0.9.21.tgz
  labels:
    app: server
    app.kubernetes.io/name: victoria-metrics-single
    app.kubernetes.io/instance: my-release
    helm.sh/chart: victoria-metrics-single-0.9.21
    app.kubernetes.io/managed-by: Helm
  name: my-release-victoria-metrics-single-server
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8428
      protocol: TCP
      targetPort: http
  selector:
    app: server
    app.kubernetes.io/name: victoria-metrics-single
    app.kubernetes.io/instance: my-release
---
# Source: victoria-metrics-single/templates/server-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: victoria-metrics-single-0.9.21.tgz
  labels:
    app: server
    app.kubernetes.io/name: victoria-metrics-single
    app.kubernetes.io/instance: my-release
    helm.sh/chart: victoria-metrics-single-0.9.21
    app.kubernetes.io/managed-by: Helm
  name: my-release-victoria-metrics-single-server
spec:
  serviceName: my-release-victoria-metrics-single-server
  selector:
    matchLabels:
      app: server
      app.kubernetes.io/name: victoria-metrics-single
      app.kubernetes.io/instance: my-release
  replicas: 1
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: server
        app.kubernetes.io/name: victoria-metrics-single
        app.kubernetes.io/instance: my-release
        helm.sh/chart: victoria-metrics-single-0.9.21
        app.kubernetes.io/managed-by: Helm
    spec:
      automountServiceAccountToken: true
      containers:
        - name: victoria-metrics-single-server
          securityContext:
            {}
          image: "victoriametrics/victoria-metrics:v1.101.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - "--retentionPeriod=1"
            - "--storageDataPath=/storage"
            - --envflag.enable=true
            - --envflag.prefix=VM_
            - --loggerFormat=json
          ports:
            - name: http
              containerPort: 8428
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health
              port: 8428
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          resources:
            {}
          volumeMounts:
            - name: server-volume
              mountPath: /storage
              subPath: 
            
      securityContext:
        {}
      serviceAccountName: my-release-victoria-metrics-single
      terminationGracePeriodSeconds: 60
      volumes:
        
  volumeClaimTemplates:
    - metadata:
        name: server-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "16Gi"
