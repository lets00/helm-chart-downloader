---
# Source: cluster-gateway/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cluster-gateway
  namespace: cluster-gateway-v2024.2.25.tgz
---
# Source: cluster-gateway/templates/clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: open-cluster-management:cluster-gateway:apiserver
rules:
  - apiGroups:
      - cluster.open-cluster-management.io
    resources:
      - managedclusters
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - flowcontrol.apiserver.k8s.io
    resources:
      - prioritylevelconfigurations
      - flowschemas
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - "*"
  # read/update managed cluster addons
  - apiGroups:
      - addon.open-cluster-management.io
    resources:
      - managedclusteraddons
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  # read managed service account credentials
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
    resourceNames:
      - cluster-gateway
---
# Source: cluster-gateway/templates/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: open-cluster-management:cluster-gateway:apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: open-cluster-management:cluster-gateway:apiserver
subjects:
  - kind: ServiceAccount
    name: cluster-gateway
    namespace: cluster-gateway-v2024.2.25.tgz
---
# Source: cluster-gateway/templates/rolebindings.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: auth-delegator:cluster-gateway
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: cluster-gateway
    namespace: cluster-gateway-v2024.2.25.tgz
---
# Source: cluster-gateway/templates/rolebindings.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: extension-apiserver-authentication-reader:cluster-gateway
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: cluster-gateway
    namespace: cluster-gateway-v2024.2.25.tgz
---
# Source: cluster-gateway/templates/cluster-gateway-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: cluster-gateway-v2024.2.25.tgz
spec:
  selector:
    app: gateway
  ports:
    - protocol: TCP
      port: 9443
      targetPort: 9443
---
# Source: cluster-gateway/templates/cluster-gateway-apiserver.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  namespace: cluster-gateway-v2024.2.25.tgz
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      serviceAccount: cluster-gateway
      volumes:
        - name: proxy-client
          secret:
            secretName: proxy-client
        - name: proxy-server-ca
          secret:
            secretName: proxy-server-ca
      containers:
        - name: gateway
          image: ghcr.io/kluster-manager/cluster-gateway:1.0.0
          imagePullPolicy: IfNotPresent
          args:
            - --secure-port=9443
            
            - --proxy-host=proxy-entrypoint.open-cluster-management-cluster-proxy
            - --proxy-port=8090
            - --proxy-ca-cert=/etc/ca/ca.crt
            - --proxy-cert=/etc/tls/tls.crt
            - --proxy-key=/etc/tls/tls.key
            
            - --feature-gates=
            # TODO: certificate rotation, otherwise the self-signed will expire in 1 year
          
          volumeMounts:
            - name: proxy-client
              mountPath: "/etc/tls/"
              readOnly: true
            - name: proxy-server-ca
              mountPath: "/etc/ca/"
              readOnly: true
            
          ports:
            - containerPort: 9443
---
# Source: cluster-gateway/templates/apiservice.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.gateway.open-cluster-management.io
  labels:
    api: cluster-extension-apiserver
    apiserver: "true"
spec:
  version: v1alpha1
  group: gateway.open-cluster-management.io
  groupPriorityMinimum: 2000
  service:
    name: gateway-service
    namespace: cluster-gateway-v2024.2.25.tgz
    port: 9443
  versionPriority: 10
  insecureSkipTLSVerify: true
