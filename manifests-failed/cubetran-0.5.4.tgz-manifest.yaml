---
# Source: cubetran/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-cubetran
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
---
# Source: cubetran/templates/rbac/auth_proxy_client_clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cubetran-metrics-reader
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
  - "/metrics"
  verbs:
  - get
---
# Source: cubetran/templates/rbac/auth_proxy_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cubetran-proxy-role
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: cubetran/templates/rbac/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cubetran
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      app.kubernetes.io/name: cubetran
      app.kubernetes.io/instance: my-release
---
# Source: cubetran/templates/rbac/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cubetran-manager-role
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - common.apecloud.io
    resources:
    - serialjobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - common.apecloud.io
    resources:
    - serialjobs/finalizers
    verbs:
    - update
  - apiGroups:
    - common.apecloud.io
    resources:
    - serialjobs/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - common.apecloud.io
    resources:
    - topologies
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - common.apecloud.io
    resources:
    - topologies/finalizers
    verbs:
    - update
  - apiGroups:
    - common.apecloud.io
    resources:
    - topologies/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    - services
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    - pods
    - pods/log
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datacomparison.apecloud.io
    resources:
    - comparisondefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datacomparison.apecloud.io
    resources:
    - comparisondefinitions/finalizers
    verbs:
    - update
  - apiGroups:
    - datacomparison.apecloud.io
    resources:
    - comparisondefinitions/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - datacomparison.apecloud.io
    resources:
    - comparisonjobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datacomparison.apecloud.io
    resources:
    - comparisonjobs/finalizers
    verbs:
    - update
  - apiGroups:
    - datacomparison.apecloud.io
    resources:
    - comparisonjobs/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - datatransfer.apecloud.io
    resources:
    - transferchannels
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datatransfer.apecloud.io
    resources:
    - transferchannels
    - transferdefinitions
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - datatransfer.apecloud.io
    resources:
    - transferchannels/finalizers
    verbs:
    - update
  - apiGroups:
    - datatransfer.apecloud.io
    resources:
    - transferchannels/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - datatransfer.apecloud.io
    resources:
    - transferdefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datatransfer.apecloud.io
    resources:
    - transferdefinitions/finalizers
    verbs:
    - update
  - apiGroups:
    - datatransfer.apecloud.io
    resources:
    - transferdefinitions/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - datatransform.apecloud.io
    resources:
    - transformdefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datatransform.apecloud.io
    resources:
    - transformdefinitions/finalizers
    verbs:
    - update
  - apiGroups:
    - datatransform.apecloud.io
    resources:
    - transformdefinitions/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - datatransform.apecloud.io
    resources:
    - transformprocessors
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datatransform.apecloud.io
    resources:
    - transformprocessors/finalizers
    verbs:
    - update
  - apiGroups:
    - datatransform.apecloud.io
    resources:
    - transformprocessors/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - datatransform.apecloud.io
    resources:
    - transformtemplates
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - datatransform.apecloud.io
    resources:
    - transformtemplates/finalizers
    verbs:
    - update
  - apiGroups:
    - datatransform.apecloud.io
    resources:
    - transformtemplates/status
    verbs:
    - get
    - patch
    - update
---
# Source: cubetran/templates/rbac/common_serialjob_editor_role.yaml
# permissions for end users to edit serialjobs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cubetran-serialjob-editor-role
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - common.apecloud
  resources:
  - serialjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - common.apecloud
  resources:
  - serialjobs/status
  verbs:
  - get
---
# Source: cubetran/templates/rbac/common_serialjob_viewer_role.yaml
# permissions for end users to view serialjobs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cubetran-serialjob-viewer-role
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - common.apecloud
  resources:
  - serialjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - common.apecloud
  resources:
  - serialjobs/status
  verbs:
  - get
---
# Source: cubetran/templates/rbac/migrationjob_editor_role.yaml
# permissions for end users to edit migrationjobs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cubetran-task-editor-role
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationjobs/status
  verbs:
  - get
---
# Source: cubetran/templates/rbac/migrationjob_viewer_role.yaml
# permissions for end users to view migrationjobs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cubetran-task-viewer-role
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationjobs/status
  verbs:
  - get
---
# Source: cubetran/templates/rbac/migrationtemplate_editor_role.yaml
# permissions for end users to edit migrationtemplates.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cubetran-template-editor-role
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationtemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationtemplates/status
  verbs:
  - get
---
# Source: cubetran/templates/rbac/migrationtemplate_viewer_role.yaml
# permissions for end users to view migrationtemplates.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cubetran-template-viewer-role
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationtemplates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - datamigration.apedt.io
  resources:
  - migrationtemplates/status
  verbs:
  - get
---
# Source: cubetran/templates/rbac/auth_proxy_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-cubetran-proxy-rolebinding
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-cubetran-proxy-role
subjects:
- kind: ServiceAccount
  name: my-release-cubetran
  namespace: cubetran-0.5.4.tgz
---
# Source: cubetran/templates/rbac/clusterrole_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-cubetran
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-cubetran
subjects:
- kind: ServiceAccount
  name: my-release-cubetran
  namespace: cubetran-0.5.4.tgz
---
# Source: cubetran/templates/rbac/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-cubetran-leader-election-role
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: cubetran/templates/rbac/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-cubetran-leader-election-rolebinding
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-cubetran-leader-election-role
subjects:
  - kind: ServiceAccount
    name: my-release-cubetran
    namespace: cubetran-0.5.4.tgz
---
# Source: cubetran/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-cubetran
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cubetran
      app.kubernetes.io/instance: my-release
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cubetran
        app.kubernetes.io/instance: my-release
    spec:
      priorityClassName: 
      serviceAccountName: my-release-cubetran
      securityContext:
        runAsNonRoot: true
      containers:
        - name: manager
          args:
            - "--health-probe-bind-address=:8081"
            - "--metrics-bind-address=:8080"
            - "--leader-elect"
            - "--zap-devel=false"
            - "--zap-time-encoding=iso8601"
            - "--zap-encoder=console"
          image: "docker.io/apecloud/cubetran-platform:0.5.4"
          imagePullPolicy: IfNotPresent
          env:
            - name: CUBETRAN_WEBSERVER_ENABLE
              value: "false"
            - name: CUBETRAN_TRANSFORM_ENABLE
              value: "false"
          ports:
            - name: health
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: web-server
              containerPort: 9888
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {}
      dnsPolicy: ClusterFirst
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: kb-controller
                operator: In
                values:
                - "true"
            weight: 100
      tolerations:
        - effect: NoSchedule
          key: kb-controller
          operator: Equal
          value: "true"
      terminationGracePeriodSeconds: 10
---
# Source: cubetran/templates/plugin/mongo_trd.yaml
apiVersion: datatransfer.apecloud.io/v1alpha1
kind: TransferDefinition
metadata:
  name: mongo-source
spec:
  type: source
  nodeDef:
    dbType: MongoDB
    dbVersion: 5.*
    relConstraints:
      - dbType: MongoDB
        dbVersion: 5.*
  cycleDef:
    isSupported: false

  moduleDefs:
    preCheck:
      container:
        name: precheck
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: cdc
        extractor.db_type: mongo
        extractor.start_timestamp: ""
        extractor.source: op_log
        sinker.batch_size: 2
        sinker.sink_type: write
        sinker.db_type: mongo
        pipeline.buffer_size: 4
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: mongo
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        precheck.do_struct_init: false
        precheck.do_cdc: true
        extractor.url: "mongodb://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}/{{ .Source.DatabaseName }}?directConnection=true"
    initData:
      container:
        name: initdata
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: snapshot
        extractor.db_type: mongo
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mongo
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: snapshot
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        extractor.url: "mongodb://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}/{{ .Source.DatabaseName }}?directConnection=true"
    cdc:
      container:
        name: cdc
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: cdc
        extractor.db_type: mongo
        extractor.start_timestamp: ""
        extractor.source: op_log
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mongo
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: mongo
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        extractor.url: "mongodb://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}/{{ .Source.DatabaseName }}?directConnection=true"
---
# Source: cubetran/templates/plugin/mongo_trd.yaml
apiVersion: datatransfer.apecloud.io/v1alpha1
kind: TransferDefinition
metadata:
  name: mongo-sink
spec:
  type: sink
  nodeDef:
    dbType: MongoDB
    dbVersion: 5.*
    relConstraints:
      - dbType: MongoDB
        dbVersion: 5.*
  cycleDef:
    isSupported: false
  moduleDefs:
    preCheck:
      container:
        name: precheck
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        sinker.batch_size: 2
        sinker.sink_type: write
        sinker.db_type: mongo
        pipeline.buffer_size: 4
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: mongo
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        precheck.do_struct_init: false
        precheck.do_cdc: true
        sinker.url: "mongodb://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}/{{ .Sink.DatabaseName }}?directConnection=true"
    initData:
      container:
        name: initdata
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mongo
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: snapshot
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        sinker.url: "mongodb://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}/{{ .Sink.DatabaseName }}?directConnection=true"
    cdc:
      container:
        name: cdc
        image: apecloud/ape-dts:0.1.16
        command:
          - sh
          - -c
          - |
            if [ ! -f "/task/config" ]; then
              cp /secret/config /task/config
            fi
            /ape-dts /task/config
      sidecars:
        - name: cdc-monitor
          image: apecloud/cubetran-sidecar:0.1.1
      param:
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mongo
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: mongo
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        sinker.url: "mongodb://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}/{{ .Sink.DatabaseName }}?directConnection=true"
---
# Source: cubetran/templates/plugin/transferdefinitions.yaml
apiVersion: datatransfer.apecloud.io/v1alpha1
kind: TransferDefinition
metadata:
  name: mysql-source
spec:
  type: source
  nodeDef:
    dbType: MySQL
    dbVersion: 8.*
    relConstraints:
      - dbType: MySQL
        dbVersion: 8.*
      - dbType: Kafka
        dbVersion: 3.3.*
      - dbType: StarRocks
        dbVersion: "5.1"
  cycleDef:
    isSupported: true

  moduleDefs:
    preCheck:
      container:
        name: precheck
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: cdc
        extractor.db_type: mysql
        extractor.binlog_position: 0
        extractor.binlog_filename: ""
        extractor.server_id: 10086
        extractor.url: "mysql://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}?ssl-mode=disabled"
        sinker.batch_size: 2
        sinker.sink_type: write
        sinker.db_type: mysql
        pipeline.buffer_size: 4
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        precheck.do_struct_init: true
        precheck.do_cdc: true
    initStruct:
      container:
        name: initstruct
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: struct
        extractor.db_type: mysql
        extractor.url: "mysql://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}?ssl-mode=disabled"
        sinker.batch_size: 2
        sinker.sink_type: struct
        sinker.db_type: mysql
        sinker.conflict_policy: ignore
        pipeline.buffer_size: 100
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        filter.do_structures: database,table
    initStructLater:
      container:
        name: initstruct
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: struct
        extractor.db_type: mysql
        extractor.url: "mysql://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}?ssl-mode=disabled"
        sinker.batch_size: 2
        sinker.sink_type: struct
        sinker.db_type: mysql
        sinker.conflict_policy: ignore
        pipeline.buffer_size: 100
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        filter.do_structures: constraint,index
    initData:
      container:
        name: initdata
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: snapshot
        extractor.db_type: mysql
        extractor.url: "mysql://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}?ssl-mode=disabled"
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mysql
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: snapshot
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
    cdc:
      container:
        name: cdc
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.server_id: 10086
        extractor.binlog_filename: ""
        extractor.binlog_position: 0
        extractor.heartbeat_interval_secs: 10
        extractor.extract_type: cdc
        extractor.db_type: mysql
        extractor.url: "mysql://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}?ssl-mode=disabled"
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mysql
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: rdb_merge
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
---
# Source: cubetran/templates/plugin/transferdefinitions.yaml
apiVersion: datatransfer.apecloud.io/v1alpha1
kind: TransferDefinition
metadata:
  name: mysql-sink
spec:
  type: sink
  nodeDef:
    dbType: MySQL
    dbVersion: 8.*
    relConstraints:
      - dbType: MySQL
        dbVersion: 8.*
  cycleDef:
    isSupported: true
    param:
      pipeline.type: transaction
  moduleDefs:
    preCheck:
      container:
        name: precheck
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        sinker.batch_size: 2
        sinker.sink_type: write
        sinker.db_type: mysql
        sinker.url: "mysql://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}?ssl-mode=disabled"
        pipeline.buffer_size: 4
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        precheck.do_struct_init: true
        precheck.do_cdc: true
    initStruct:
      container:
        name: initstruct
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        sinker.batch_size: 2
        sinker.sink_type: struct
        sinker.db_type: mysql
        sinker.conflict_policy: ignore
        sinker.url: "mysql://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}?ssl-mode=disabled"
        pipeline.buffer_size: 100
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        filter.do_structures: database,table
    initData:
      container:
        name: initdata
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mysql
        sinker.url: "mysql://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}?ssl-mode=disabled"
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: snapshot
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
    initStructLater:
      container:
        name: initstruct
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        sinker.batch_size: 2
        sinker.sink_type: struct
        sinker.db_type: mysql
        sinker.conflict_policy: ignore
        sinker.url: "mysql://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}?ssl-mode=disabled"
        pipeline.buffer_size: 100
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        filter.do_structures: constraint,index
    cdc:
      container:
        name: cdc
        image: apecloud/ape-dts:0.1.16
        command:
          - sh
          - -c
          - |
            if [ ! -f "/task/config" ]; then
              cp /secret/config /task/config
            fi
            /ape-dts /task/config
      sidecars:
        - name: cdc-monitor
          image: apecloud/cubetran-sidecar:0.1.1
      param:
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: mysql
        sinker.url: "mysql://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}?ssl-mode=disabled"
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: rdb_merge
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
---
# Source: cubetran/templates/plugin/transferdefinitions.yaml
apiVersion: datatransfer.apecloud.io/v1alpha1
kind: TransferDefinition
metadata:
  name: postgresql-source
spec:
  type: source
  nodeDef:
    dbType: PostgreSQL
    dbVersion: 14.*
    relConstraints:
      - dbType: PostgreSQL
        dbVersion: 14.*
  cycleDef:
    isSupported: true
  moduleDefs:
    preCheck:
      container:
        name: precheck
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: cdc
        extractor.db_type: pg
        extractor.start_lsn: ''
        extractor.slot_name: ''
        extractor.heartbeat_interval_secs: 10
        extractor.url: "postgres://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}/{{ .Source.DatabaseName }}"
        sinker.batch_size: 2
        sinker.sink_type: write
        sinker.db_type: pg
        pipeline.buffer_size: 4
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: rdb_merge
        parallelizer.parallel_size: 1
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        precheck.do_struct_init: true
        precheck.do_cdc: true
    initStruct:
      container:
        name: initstruct
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: struct
        extractor.db_type: pg
        extractor.url: "postgres://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}/{{ .Source.DatabaseName }}"
        sinker.batch_size: 2
        sinker.sink_type: struct
        sinker.db_type: pg
        sinker.conflict_policy: ignore
        pipeline.buffer_size: 100
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 1
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        filter.do_structures: database,table
    initData:
      container:
        name: initData
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: snapshot
        extractor.db_type: pg
        extractor.url: "postgres://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}/{{ .Source.DatabaseName }}"
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: pg
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: snapshot
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
    initStructLater:
      container:
        name: initstructlater
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: struct
        extractor.db_type: pg
        extractor.url: "postgres://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}/{{ .Source.DatabaseName }}"
        sinker.batch_size: 2
        sinker.sink_type: struct
        sinker.db_type: pg
        sinker.conflict_policy: ignore
        pipeline.buffer_size: 100
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 1
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        filter.do_structures: constraint,index
    cdc:
      container:
        name: cdc
        image: apecloud/ape-dts:0.1.16
        command:
          - sh
          - -c
          - |
            if [ ! -f "/task/config" ]; then
              cp /secret/config /task/config
            fi
            /ape-dts /task/config
      sidecars:
        - name: cdc-monitor
          image: apecloud/cubetran-sidecar:0.1.1
      param:
        extractor.start_lsn: ''
        extractor.slot_name: ''
        extractor.heartbeat_interval_secs: 10
        extractor.extract_type: cdc
        extractor.db_type: pg
        extractor.pub_name: apecloud_migrate_pub_for_all_tables
        extractor.url: "postgres://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}/{{ .Source.DatabaseName }}"
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: pg
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: rdb_merge
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
---
# Source: cubetran/templates/plugin/transferdefinitions.yaml
apiVersion: datatransfer.apecloud.io/v1alpha1
kind: TransferDefinition
metadata:
  name: postgresql-sink
spec:
  type: sink
  nodeDef:
    dbType: PostgreSQL
    dbVersion: 14.*
    relConstraints:
      - dbType: PostgreSQL
        dbVersion: 14.*
  cycleDef:
    isSupported: true

  moduleDefs:
    preCheck:
      container:
        name: precheck
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        sinker.batch_size: 2
        sinker.sink_type: write
        sinker.db_type: pg
        sinker.url: "postgres://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}/{{ .Sink.DatabaseName }}"
        pipeline.buffer_size: 4
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: rdb_merge
        parallelizer.parallel_size: 1
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        precheck.do_struct_init: true
        precheck.do_cdc: true
    initStruct:
      container:
        name: initstruct
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        sinker.batch_size: 2
        sinker.sink_type: struct
        sinker.db_type: pg
        sinker.conflict_policy: ignore
        sinker.url: "postgres://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}/{{ .Sink.DatabaseName }}"
        pipeline.buffer_size: 100
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 1
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        filter.do_structures: database,table
    initData:
      container:
        name: initdata
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: pg
        sinker.url: "postgres://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}/{{ .Sink.DatabaseName }}"
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: snapshot
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
    initStructLater:
      container:
        name: initstructlater
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        sinker.batch_size: 2
        sinker.sink_type: struct
        sinker.db_type: pg
        sinker.conflict_policy: ignore
        sinker.url: "postgres://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}/{{ .Sink.DatabaseName }}"
        pipeline.buffer_size: 100
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: serial
        parallelizer.parallel_size: 2
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
        filter.do_structures: constraint,index
    cdc:
      container:
        name: cdc
        image: apecloud/ape-dts:0.1.16
        command:
          - sh
          - -c
          - |
            if [ ! -f "/task/config" ]; then
              cp /secret/config /task/config
            fi
            /ape-dts /task/config
      sidecars:
        - name: cdc-monitor
          image: apecloud/cubetran-sidecar:0.1.1
      param:
        sinker.batch_size: 100
        sinker.sink_type: write
        sinker.db_type: pg
        sinker.url: "postgres://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}/{{ .Sink.DatabaseName }}"
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: rdb_merge
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
---
# Source: cubetran/templates/plugin/transferdefinitions.yaml
apiVersion: datatransfer.apecloud.io/v1alpha1
kind: TransferDefinition
metadata:
  name: redis-source
spec:
  type: source
  nodeDef:
    dbType: Redis
    dbVersion: 7.*
    relConstraints:
      - dbType: Redis
        dbVersion: 7.*
      - dbType: Redis
        dbVersion: 6.*
  cycleDef:
    isSupported: true

  moduleDefs:
    initData:
      container:
        name: initdata
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: snapshot
        extractor.db_type: redis
        extractor.repl_port: 
        extractor.url: "redis://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}"
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: redis
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
    cdc:
      container:
        name: cdc
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        extractor.extract_type: cdc
        extractor.db_type: redis
        extractor.repl_port: 10008
        extractor.repl_id: ""
        extractor.repl_offset: 0
        extractor.now_db_id: 0
        extractor.keepalive_interval_secs: 10
        extractor.heartbeat_interval_secs: 10
        extractor.heartbeat_key: 
        extractor.url: "redis://{{ .Source.Address.UserName }}:{{ .Source.Address.Password }}@{{ .Source.Address.Endpoint }}"
        pipeline.buffer_size: 16000
        pipeline.checkpoint_interval_secs: 10
        parallelizer.parallel_type: redis
        parallelizer.parallel_size: 8
        runtime.log_level: info
        runtime.log4rs_file: ./log4rs.yaml
        runtime.log_dir: ./logs
---
# Source: cubetran/templates/plugin/transferdefinitions.yaml
apiVersion: datatransfer.apecloud.io/v1alpha1
kind: TransferDefinition
metadata:
  name: redis-sink
spec:
  type: sink
  nodeDef:
    dbType: Redis
    dbVersion: 7.*
    relConstraints:
      - dbType: Redis
        dbVersion: 7.*
      - dbType: Redis
        dbVersion: 6.*
  cycleDef:
    isSupported: true
    param:
      pipeline.type: transaction
  moduleDefs:
    initData:
      container:
        name: initdata
        image: apecloud/ape-dts:0.1.16
        args:
          - "/secret/config"
      param:
        sinker.batch_size: 200
        sinker.sink_type: write
        sinker.db_type: redis
        sinker.method: restore
        sinker.url: "redis://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}"
    cdc:
      container:
        name: cdc
        image: apecloud/ape-dts:0.1.16
        command:
          - sh
          - -c
          - |
            if [ ! -f "/task/config" ]; then
              cp /secret/config /task/config
            fi
            /ape-dts /task/config
      sidecars:
        - name: cdc-monitor
          image: apecloud/cubetran-sidecar:0.1.1
      param:
        sinker.batch_size: 200
        sinker.sink_type: write
        sinker.db_type: redis
        sinker.method: restore
        sinker.url: "redis://{{ .Sink.Address.UserName }}:{{ .Sink.Address.Password }}@{{ .Sink.Address.Endpoint }}"
---
# Source: cubetran/templates/pre-delete-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-removal-0
  labels:
    helm.sh/chart: cubetran-0.5.4
    app.kubernetes.io/name: cubetran
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.5.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "-1"
spec:
  ttlSecondsAfterFinished: 0
  template:
    metadata:
      name: my-release-removal-0
      labels:
         helm.sh/chart: cubetran-0.5.4
         app.kubernetes.io/name: cubetran
         app.kubernetes.io/instance: my-release
         app.kubernetes.io/version: "0.5.4"
         app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: my-release-cubetran
      securityContext:
        runAsNonRoot: true
      restartPolicy: OnFailure
      containers:
        - name: pre-delete-job
          image: "docker.io/apecloud/kubeblocks-tools:0.8.2"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
            - "-c"
            - |
              kubectl get trd | awk '{if(NR>1)print $1}' | xargs -I {} kubectl patch trd {} -p '{"metadata":{"finalizers":null, "annotations": {"apecloud.io/uninstall": "true"}}}' --type=merge
              kubectl get cpd | awk '{if(NR>1)print $1}' | xargs -I {} kubectl patch cpd {} -p '{"metadata":{"finalizers":null, "annotations": {"apecloud.io/uninstall": "true"}}}' --type=merge
              kubectl get tmd | awk '{if(NR>1)print $1}' | xargs -I {} kubectl patch tmd {} -p '{"metadata":{"finalizers":null, "annotations": {"apecloud.io/uninstall": "true"}}}' --type=merge
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: kb-controller
                operator: In
                values:
                - "true"
            weight: 100
      tolerations:
        - effect: NoSchedule
          key: kb-controller
          operator: Equal
          value: "true"
