---
# Source: quarkus-rest/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name:  my-release-quarkus-rest
data:
  quarkus.datasource.username: cm9vdA==
  quarkus.datasource.password: cGFzc2Vy
type: Opaque
---
# Source: quarkus-rest/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-quarkus-rest
data:
  quarkus.datasource.db-kind :  mysql
  quarkus.datasource.jdbc.url :  jdbc:mysql://mysql/quarkus_training?enabledTLSProtocols=TLSv1.2
  quarkus.oidc.auth-server-url: http://keycloak/auth/realms/training
  quarkus.oidc.jwks-path: /protocol/openid-connect/certs
---
# Source: quarkus-rest/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-quarkus-rest
  labels:
    helm.sh/chart: quarkus-rest-0.1.0
    app.kubernetes.io/name: quarkus-rest
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: quarkus-rest
    app.kubernetes.io/instance: my-release
---
# Source: quarkus-rest/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-quarkus-rest
  labels:
    helm.sh/chart: quarkus-rest-0.1.0
    app.kubernetes.io/name: quarkus-rest
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quarkus-rest
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: quarkus-rest
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: quarkus-rest
          securityContext:
            {}
          image: "laminba2003/quarkus-rest:1.0.0-SNAPSHOT"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 15
          env:
            - name: JAVA_TOOL_OPTIONS
              value: -Xms256M -Xmx256M -Xss256K -XX:ReservedCodeCacheSize=64M
          envFrom:
            - configMapRef:
                name: my-release
            - secretRef:
                name: my-release
          resources:
            {}
---
# Source: quarkus-rest/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: my-release-quarkus-rest
spec:
  selector:
    matchLabels:
        helm.sh/chart: quarkus-rest-0.1.0
        app.kubernetes.io/name: quarkus-rest
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
  endpoints:
    - port: http
      path: "/q/metrics"
---
# Source: quarkus-rest/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-quarkus-rest-test-connection"
  labels:
    helm.sh/chart: quarkus-rest-0.1.0
    app.kubernetes.io/name: quarkus-rest
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-quarkus-rest:9090']
  restartPolicy: Never
