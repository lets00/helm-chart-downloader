---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-autoscaler
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.26.0-rc.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.26.0-rc.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-ops-manager
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.28.0-rc.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.28.0-rc.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-provisioner
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-provisioner-v0.41.0-rc.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.41.0-rc.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-webhook-server
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb-one/charts/stash-enterprise/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-stash-enterprise
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kubedb-webhook-server-apiserver-cert
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR1RENDQXFDZ0F3SUJBZ0lRUWNPWE5NbHFFZVRpZU1CMmU1d0srREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpKYUZ3MHpOREEyTVRneE5EVTNNekphTUNzeApLVEFuQmdOVkJBTVRJRzE1TFhKbGJHVmhjMlV0YTNWaVpXUmlMWGRsWW1odmIyc3RjMlZ5ZG1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTRVU0E2eHdpanE5emxsK0NZSGtURDcrN3VLajgKT0VrQTNmUjBKcnF0MC9aVVdHNlgwcmVwVkhkWlJCN3lHdEVQNFpBd2xlMVpOclFjRXJHRHVkK2cydjVQU2ZkKwpJOXdmZ2xGWGdWZnJpU1FXQTBIOERYcEIxcmR4Q2VWSWxIYVRHc1hCNjJ2LzlrbkhxVXgvbWRxRlhhdE5pcDV4ClV1WWQ2U3FEWXpIS1N3RzIyOGI5QnpuWCtsdGluY3E1aU5MU214YmFrUUNrcU5SR3YxSlZUQXQwakNxTTYxcFMKQ2FHZCtEWS9WV3d0R0RYem9YWHNta1UrWkNQVG1KL0E0ODRVZnMwM2toYkVpamRqOTZ1Z0tZYlpyV3ZlSE1xWQpvM21SUjJaM2ZuUmlaUVFyVjEyaXZtVTJsQ2VyNldsTm9RQVNkRDdLWmxCaHVzRmJkaFlPQlZIOU1RSURBUUFCCm80SDFNSUh5TUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlpkdUhIUkVwclZ5Q3ZEWmMzK2FtagpUWnhBV1RDQmtRWURWUjBSQklHSk1JR0dnajl0ZVMxeVpXeGxZWE5sTFd0MVltVmtZaTEzWldKb2IyOXJMWE5sCmNuWmxjaTVyZFdKbFpHSXRiMjVsTFhZeU1ESTBMakV1TWpZdGNtTXVNQzUwWjNxQ1EyMTVMWEpsYkdWaGMyVXQKYTNWaVpXUmlMWGRsWW1odmIyc3RjMlZ5ZG1WeUxtdDFZbVZrWWkxdmJtVXRkakl3TWpRdU1TNHlOaTF5WXk0dwpMblJuZWk1emRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS0krSlRNS1RlS3J1VVdnV0dneFhDOHdZTk1LCjJOeUNySXpzY1F4dzRkL0FGdmlpL1NpU1gxVW5nVTdVMWpyOGY4bUlGREtEUlFjTEVSUkhuRGR3WkhNS291ckUKWlVXZ1pJeE02c1EvczdyN2o4TExtb3VXY2FWeHZudTV5YXZFZXptMGxpQ2hsNGdNUFRlSVl4b2FUK0lVd08vTApZbThFQllvM1dIMnllVW1JdlJYcjhZWTFBSC9saDdvV3FjaEVNeGZ2Tmhqb3FTS28wakxrOG1qR0tkdjFNZ1BGCkdlYmk2OTErSVRRS1d1MEdwN3BPVGNyd2VGclVNeWxhQUIxL3FRTGEyTDNYeVoxaHdPQzB2ODlmclVBd1BRaFgKeU5Vcm5WbzNFL0FaN1pRaDdaNkNYVHdhaVlUYUgvU1BkMW5nVnhmZUhwTzR1RU1lZmhzbXoyN1lTZTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNFVTQTZ4d2lqcTl6bGwrQ1lIa1RENys3dUtqOE9Fa0EzZlIwSnJxdDAvWlVXRzZYCjByZXBWSGRaUkI3eUd0RVA0WkF3bGUxWk5yUWNFckdEdWQrZzJ2NVBTZmQrSTl3ZmdsRlhnVmZyaVNRV0EwSDgKRFhwQjFyZHhDZVZJbEhhVEdzWEI2MnYvOWtuSHFVeC9tZHFGWGF0TmlwNXhVdVlkNlNxRFl6SEtTd0cyMjhiOQpCem5YK2x0aW5jcTVpTkxTbXhiYWtRQ2txTlJHdjFKVlRBdDBqQ3FNNjFwU0NhR2QrRFkvVld3dEdEWHpvWFhzCm1rVStaQ1BUbUovQTQ4NFVmczAza2hiRWlqZGo5NnVnS1liWnJXdmVITXFZbzNtUlIyWjNmblJpWlFRclYxMmkKdm1VMmxDZXI2V2xOb1FBU2REN0tabEJodXNGYmRoWU9CVkg5TVFJREFRQUJBb0lCQVFDOXh5U0U3aEwrK2pqNgp1a1B3V3BBQWVKc0JtdnZCdjE4SG5tWXNLcUUvTFFzcDVTSHExK2ZEelRoYTkyY255SEVFcXFFRDdnMTIxSTNDCkFlTGp1TTZmTUJoRVRFanNsUW5HbEJpUVV5MlBQK043b3g5aGkxbmtObTc0MHowdU5pY0FLeEtQNzFDWWdOZkEKZlQ0U3M5SWZjNjNEMW0vS1V5dG52L1Vvb0UyNG1ZZ3pjNVNOd3RDZHVMZnR3VVZOekVOcy96MnhOZ0kya0tLTAo0VUIrS2pSWXJkNUtkTTA5QURyalNVMWxMSjZEd2ZuS2w0L0lTNVhON0d1VXAyUjJLcHJiNzNjSnlmeFk2eDdvCmpWM0RFNEdNKy9ycytXaWtqaFpPTEUxdDBNWTA2UlFYWkxaYm15SUpyYjZzeSs5ZmNYZXRpcXUvVVYyU2xyeG8KQkxOS1gxd3hBb0dCQU9jWUdidmhkWDFIampOa25mRzZvVWNWWGc4V2VTbVNUSTVXRVN3VU13eUF5WGR0R0JGLwphZWpHUzkxQzA2aUhCdVBxRExPaHg1ZVpHU2drYlZ5SCttMHAzR21UbTA2d0dkandIVEh6TDdBaGxkRnR2SFh1Ck1YK3NHVWp4Y2h1Z1VzS3RNeTlPRmttbjdDRFdyUnFLbjZZRGdHWVBKMkR6TzdReWlqeDJ0ZTluQW9HQkFQbUwKcGZKeW05L1h1TWFFQ3RncS9uRjFXZTlBeTNVRlJMNDdnRE1SczJtbEJ6K2hPVGltTXFCalNUV01rV3A0WGJlNgpja2ZtdzF2YmhQV3NPeTJRaGJKM2NmeTFGcGZ5SjRXaVNrZDhGcldxQ3FYOGdURVhYTUR0WlVhZFZwdXZrbGFuClY4N2FsNjB4VFMzMC9pSGNSQmFjWkVsQXlhWitpaGMzcTlDWTBRZW5Bb0dBRWdobGFhM01Oenh3TWo1MXZMa3QKZ0ppQVFIa21kMEg5UzFZWC9QS09rVGt6ZjJnNTZwT2d0aE5UTkM3VXlWL1AvOVR4ck1yQkFtbGw5eVh3aXJucApwcjhQZmdXUXB2RkM4eFM1a241QmlHTDJoK01pUTZtVW56dlV0VVp4K3dubHExOU1rVEpzdHM2dHRGcE1JN2dSCmdTamd5aFlBb3FZWVVKVnBDQkxUVzUwQ2dZQmM5eEJ3ZlEvaTJUdkdBT1VGV1NjSFg1K01pVWdDcFY3UnU5cnIKcTVsNkx2ZS9WYkc2ai9mbVZuYXNrMXlOSEtCVlZRbEVEZzBUaUhsRkNNL1hEck13SkYxN3RuN2ZSbUJBNFkvbwpoNnJ5TEpIZyttdXF2VGhaeTFiaWNyVVVOTmxBblFFU1Y4OFB2NEV3TU1nSUYwWHFZb0xkNDF2OFFjSHlHbFJRCjFzMXdtd0tCZ0hoeVZTdkQ1K1BoZWtiaEJZMnlqa1hqUGplNXNtNXYxSm9OZ3VQeUk4bnBEdUJqS3d0NUZKdG4KMGw0NUhGYVZIcC9MY25Bbld3VTRWMjNmdW02MXZ3UGJuWEp6ZkJjOVliZVBYYUtnc3VmcnFzaU5KbHlhVHlXeAordDRzaXcrdHg2QklSeGtkdnJ2RXRoWGlNeFl0R2tRRnBPeHMzSW43NWhzQmhrU3ZKWmVYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kubedb-one/charts/stash-enterprise/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-stash-enterprise-apiserver-cert
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQVB2VmRLRVB5RUNOdXFFK2ZCTUlaNEV3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBbQpNU1F3SWdZRFZRUURFeHR0ZVMxeVpXeGxZWE5sTFhOMFlYTm9MV1Z1ZEdWeWNISnBjMlV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNvUGhYR2d3VTZndzVQd1QxQzdNL0kzRHRFR1djT0lrUDgKaG1ONk9wY1VjSXh0KzRHaUV1Zm9lWlcyanZzSklyU0JOelNMY09vQ3IraHhUcU9wV1VIYUNTQ2t1UUNOVFZXQwpvbzlaNW04SVpibFBEUkpHbTA0UmY5a3hXaWhYVlBkNXNGN3liODZKWkdHdDFsZFNyQXZia0RIWlVOUTVHUm5QClFBVWJ5ZTU1Y1NyYkJjaHQ2MEIzQWU1bGlVaEtzaU5FTnZVNXEwRkt0VDVTNGVPZ0xTbTVUSVlseVQ4WS94TjYKM09UUVptQkdXc1dZd1NxZEVQTmVUK3oxOWJOaVA4dWxJejdiU2xtSlN0dXdmdVE3SjE2V0drYWJoOGRadytoQQpZdTdlLzgrSXNBRXdqK3dmRzFoMnRpVGNxT2hyZ3Jpa0t3UExJN2VwbG0xZy93ZWRRVkZYQWdNQkFBR2pnZWt3CmdlWXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkU1YkhFTTgzVU9qNzVFNzAxNTVCZThjbWlpLwpNSUdGQmdOVkhSRUVmakI4Z2pwdGVTMXlaV3hsWVhObExYTjBZWE5vTFdWdWRHVnljSEpwYzJVdWEzVmlaV1JpCkxXOXVaUzEyTWpBeU5DNHhMakkyTFhKakxqQXVkR2Q2Z2o1dGVTMXlaV3hsWVhObExYTjBZWE5vTFdWdWRHVnkKY0hKcGMyVXVhM1ZpWldSaUxXOXVaUzEyTWpBeU5DNHhMakkyTFhKakxqQXVkR2Q2TG5OMll6QU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBdmVBWjZoQXZoZ0t3aGlCOUs3TjYvK0tmcGlzdC8vQ3hHRk0zYzA2M1NtUEtrVUlQCmwrUmtVdDVzbElSUVIvKytEUmNXV3JkTDZCM2o3TWRFb0FkLzNXMGFPb1ZKRkJMeDk4RERQalZLV1BGNjNQbjkKeVVQWTFJS0VKWG5aRURYSVdjMnlKZjhTUGh4RzBzcnZGOVFDQjBkdTdwUEdnbXQ0cXB4ZWppcGQ3ekQ1a2c1eApabmp2UlpSbmdjYmI5dXEyTjRzclZNKzZMbHRCZVhvNjRnbU9MbEZPdHdSVExjcGRKbThlTytBN3dpNTJTZVkzCnlTQnV6SzUzWkhDZXlrTWxHbzc2VmhIVHIwV0IySUg0NkpGVTNDWU9ZMGFoY2E5MkFWcDdvWVpxMk1vbFA4bGMKUDl1VkwvVGdPUHZ2YkFsbzcvV3B2MUZlakhkRVZXS3hkdUlwcmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcUQ0VnhvTUZPb01PVDhFOVF1elB5Tnc3UkJsbkRpSkQvSVpqZWpxWEZIQ01iZnVCCm9oTG42SG1WdG83N0NTSzBnVGMwaTNEcUFxL29jVTZqcVZsQjJna2dwTGtBalUxVmdxS1BXZVp2Q0dXNVR3MFMKUnB0T0VYL1pNVm9vVjFUM2ViQmU4bS9PaVdSaHJkWlhVcXdMMjVBeDJWRFVPUmtaejBBRkc4bnVlWEVxMndYSQpiZXRBZHdIdVpZbElTcklqUkRiMU9hdEJTclUrVXVIam9DMHB1VXlHSmNrL0dQOFRldHprMEdaZ1JsckZtTUVxCm5SRHpYay9zOWZXellqL0xwU00rMjBwWmlVcmJzSDdrT3lkZWxocEdtNGZIV2NQb1FHTHUzdi9QaUxBQk1JL3MKSHh0WWRyWWszS2pvYTRLNHBDc0R5eU8zcVpadFlQOEhuVUZSVndJREFRQUJBb0lCQVFDY0hqQjZxdTNaSSsvTgoxbFVRbTBzYzZqQWN1eTNFRWN2Z3Nwdnd1aG1qbitUUDBnaXk2clJFSno3anpyM245a3BsZFdMTzJoSnNOK3VMCjZSczVkRmdGQ1Y4L08yVGx1aE5WUzUrV0hweDl3RmM2b2JpSnlHZWpHVzNqdS9PZlJucjJjdEZJU3JQdkRqVU4KNk0zVEswODlpUXFZeThhQ3pXWUR5VFowV09kdnpEQXJmWjlhNUV1SzBsT1RKMjNGRHd3V1lXZkJ2eEJieDl3NwpkNGRud1BnOXNTcG1NcHdsNEN1SEJJU0ZGNXY5QjJJQUN1Wmk0c0c1anpNeGprZ2dOcE1ueGNKaW9JM1loVXBECi9FVzB3Y2lvZkpIRTRnRitHOHBieGI3UTBmS2FrTnp3WmNQZ2pFYUluNFdGZ2VVeG1tazRBREpuUHJmdDMrK0IKVzdOWTNLTFJBb0dCQU5ncGlBa2pJTExkV3hRMHZ0TllwYit4RlloUk5FYXpxWGtEVGY0SWM5NjMyL2dmZkU3QgpWcjRJd2dBcFRyTzlTM2xxZkFGREZFL2daM0g3K1o2akhMOUlqRlE5Ymx2Q3MrYW1KWDNYcFNqbFIwMVltZjhXCkRDRm92cWhjSUhwaHZqSVVXczZobDlVbXdFdUlodmdFcklvd0JrSEd6VTdtc2VsMEduOTIrQ2Z6QW9HQkFNYy8KdDFhOXptUHlOb1hYZDk2dDJhSTdjSEF2eWIwQ1VrZmdsdXlPN0p1RjgxcVByZXp5alJNLzZQeVNzMm9qdXQzSwpyMkk1T1NrOGpoa1h1MHdiejhLNkJWL2tyVTRxVTMzVUxhbjVGOXFBalZyZDFVT2xhcEpNN1kyTW9INnFKRkUvClh3UVdxQ0dzRG9xbHp4RVlZVzRlQnVUQnJiNkI2aHUxUjRWVHFBNE5Bb0dCQUpCMEVLaXFoT3VDNlo2ek1PTGoKMXNBbmd4QTUxQWw3ZnNHVDU4YmZ0eThiQnpEbE9aa1hzdlFEdmtHRldVYmNOVmZLUlZ4Q2k0eGxsanVoKzhwNwpqbloxOFBGS3JEaytBQ01lM09jZitRcy9UVXJ1N3RwOHpWWjJQUk1kbmNhckV3TThmd0tmRW13ckhVNWN5blZzCkNqRytyaSsrdnV6L1ZkMkE3VVJKS01UcEFvR0FMVEMyVkdZWU9YTG1DdFVqeXMyRFh0ZzhXRFYrZSsvYTJaS0cKcUlDQ0NZUUgvYkk0c0ZVU3locmtyT1JZN09uTnFDQWdSeGJUY0JiYjQ3VU9OZVRZNmtGbWxxazI1Vk9VUENXegpkYW1aVDJWNHFmTkdPMkY1R2xWNFMzSnB0RkRDaStyamtmblJpRkdOdXNTQWdsQVZTUFJtZTl1eG5GTzYxUzM0CldyVHVtTUVDZ1lBVG40eEZRbUJjWUlzaWFEaGFEQUxaZk5kWkxpSE0zN25IQmtoRDJBRzJ2MkJ1Q1JieTdZZVoKWUVDdEhBaTVqR1FlS2lKbDI3R3QzdVprMmwwUndBOXlncjFuTWNEU1BLV0l5cnNmUGJtNVlZWEFMdFRGRHNYWAowaHRSZm4rL1E1SE0zTFRTcXU3VTVHMkpqdXozUVczaEVGM3JjUDl1K1NoQ1Y3bVpZenZ2aGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-autoscaler
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.26.0-rc.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.26.0-rc.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - ops.kubedb.com
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - elasticsearchautoscalers/finalizers
  - etcdautoscalers/finalizers
  - mariadbautoscalers/finalizers
  - memcachedautoscalers/finalizers
  - mongodbautoscalers/finalizers
  - mysqlautoscalers/finalizers
  - perconaxtradbautoscalers/finalizers
  - pgbouncerautoscalers/finalizers
  - postgresautoscalers/finalizers
  - proxysqlautoscalers/finalizers
  - redisautoscalers/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: [ "get" ]
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - nodes
  - limitranges
  - persistentvolumeclaims
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "watch", "create"]
- apiGroups:
  - "metrics.k8s.io"
  resources:
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - "node.k8s.appscode.com"
  resources:
  - nodetopologies
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-ops-manager
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.28.0-rc.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.28.0-rc.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs: ["create", "delete", "get", "list", "watch", "patch", "update", "deletecollection"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - ops.kubedb.com
  - postgres.kubedb.com
  - kafka.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - ops.kubedb.com
  resources:
  - elasticsearchopsrequests/finalizers
  - etcdopsrequests/finalizers
  - kafkaopsrequests/finalizers
  - mariadbopsrequests/finalizers
  - memcachedopsrequests/finalizers
  - mongodbopsrequests/finalizers
  - mysqlopsrequests/finalizers
  - perconaxtradbopsrequests/finalizers
  - pgbounceropsrequests/finalizers
  - postgresopsrequests/finalizers
  - proxysqlopsrequests/finalizers
  - redisopsrequests/finalizers
  verbs: ["update"]
- apiGroups:
  - postgres.kubedb.com
  resources:
  - publishers/finalizers
  - subscribers/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - cert-manager.io
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/eviction
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs: ["create", "delete", "get", "patch", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "delete", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["get", "list", "patch", "delete"]
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs: ["get", "list", "create", "delete", "patch", "deletecollection"]
- apiGroups:
  - batch
  resources:
  - jobs
  verbs: ["create", "delete", "get", "list", "watch"]
- apiGroups:
  - stash.appscode.com
  resources:
  - backupsessions
  - backupconfigurations
  - restoresessions
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups:
    - core.kubestash.com
  resources:
    - backupsessions
    - backupconfigurations
    - restoresessions
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - supervisor.appscode.com
  resources: ["*"]
  verbs: ["create", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  verbs: [ "get","create","patch","delete" ]
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs: [ "use" ]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: [ "create", "delete", "get", "list", "patch", "watch" ]
- apiGroups:
  - scanner.appscode.com
  resources:
  - imagescanrequests
  verbs: [ "create", "get", "list", "watch" ]
- apiGroups:
  - scanner.appscode.com
  resources:
  - imagescanreports
  verbs: [ "get", "list", "watch" ]
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-provisioner
  labels:
    helm.sh/chart: kubedb-provisioner-v0.41.0-rc.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.41.0-rc.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs: ["create", "delete", "list","watch", "get", "patch", "deletecollection"]
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs: ["create", "delete", "get", "patch", "update", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - services/finalizers
  verbs: ["update"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["create", "delete", "get", "watch", "list", "patch", "deletecollection"]
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch", "deletecollection"]
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs: ["get"]
- apiGroups:
  - batch
  resources:
  - jobs
  verbs: ["create", "delete", "get", "list", "watch", "patch"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/eviction
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["create", "delete", "get", "list", "patch", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "delete", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups:
  - kubedb.com
  - apps.k8s.appscode.com
  - archiver.kubedb.com
  - catalog.kubedb.com
  - core.kubestash.com
  - elasticsearch.kubedb.com
  - kafka.kubedb.com
  - storage.kubestash.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - kubedb.com
  resources:
  - elasticsearches/finalizers
  - etcds/finalizers
  - mariadbs/finalizers
  - memcacheds/finalizers
  - mongodbs/finalizers
  - mysqls/finalizers
  - perconaxtradbs/finalizers
  - pgbouncers/finalizers
  - postgreses/finalizers
  - proxysqls/finalizers
  - redises/finalizers
  - redissentinels/finalizers
  - zookeepers/finalizers
  verbs: ["update"]
- apiGroups:
  - elasticsearch.kubedb.com
  resources:
  - elasticsearchdashboards/status
  verbs: ["get"]
- apiGroups:
  - elasticsearch.kubedb.com
  resources:
  - elasticsearchdashboards/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - "pods/exec"
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - "pods/status"
  verbs: ["update"]
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs: ["use"]
  resourceNames:
  - my-release-kubedb-provisioner
  - elasticsearch-db
  - etcd-db
  - memcached-db
  - mongodb-db
  - mysql-db
  - percona-xtradb-db
  - postgres-db
  - redis-db
  - proxysql-db
  - maria-db
  - kafka-db
  - kafkaconnector
  - zookeeper-db
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs: ["get", "list", "create", "delete", "patch", "deletecollection"]
- apiGroups:
  - stash.appscode.com
  - kubestash.appscode.com
  resources:
  - restoresessions
  - restorebatches
  verbs: ["get", "list", "watch"]
- apiGroups:
  - cert-manager.io
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  verbs: [ "get","create", "list","watch", "patch","delete"]
- apiGroups:
  - apps.k8s.appscode.com
  resources:
  - sidekicks
  verbs: ["get", "list", "create", "delete", "patch", "deletecollection"]

- apiGroups:
  - stash.appscode.com
  resources:
  - backupsessions
  - backupconfigurations
  verbs: [ "get", "list", "watch" ]

- apiGroups:
  - core.kubestash.com
  resources:
  - backupsessions
  - backupconfigurations
  verbs: [ "get", "list", "watch" ]
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-webhook-server
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups:
    - ""
  resources:
    - secrets
  verbs: ["get"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - ops.kubedb.com
  - postgres.kubedb.com
  - autoscaling.kubedb.com
  - elasticsearch.kubedb.com
  - schema.kubedb.com
  - archiver.kubedb.com
  - kafka.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - cert-manager.io
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-one/charts/stash-enterprise/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-stash-enterprise
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get", "patch", "delete"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["delete", "get", "list", "watch", "patch"]
- apiGroups:
  - stash.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - statefulsets
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - apps
  resources:
  - deployments
  verbs: ["create", "patch", "delete"]
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs: ["get", "list", "watch", "create", "delete", "patch"]
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "update", "get", "list", "watch", "delete"]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["get", "list", "watch", "create", "patch"]
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: ["get", "list", "create", "patch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs: ["get", "create", "list", "delete", "deletecollection"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["get", "create", "patch", "delete"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - roles
  - rolebindings
  - clusterrolebindings
  verbs: ["get","list", "create", "delete", "patch"]
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  - volumesnapshotcontents
  - volumesnapshotclasses
  verbs: ["create", "get", "list", "watch", "patch", "delete"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - coordination.k8s.io
  resources:
    - leases
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - daemonsets/finalizers
  - deployments/finalizers
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs/finalizers
  verbs: ["update"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - elasticsearches
  - elasticsearchversions
  verbs:
  - get
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-autoscaler
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.26.0-rc.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.26.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-autoscaler
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-autoscaler
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-autoscaler-license-checker
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.26.0-rc.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.26.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-autoscaler
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-autoscaler-license-reader
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.26.0-rc.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.26.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-autoscaler
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-ops-manager
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.28.0-rc.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.28.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-ops-manager
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-ops-manager
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-ops-manager-license-checker
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.28.0-rc.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.28.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-ops-manager
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-ops-manager-license-reader
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.28.0-rc.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.28.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-ops-manager
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-provisioner
  labels:
    helm.sh/chart: kubedb-provisioner-v0.41.0-rc.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.41.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-provisioner
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-provisioner
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-provisioner-license-checker
  labels:
    helm.sh/chart: kubedb-provisioner-v0.41.0-rc.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.41.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-provisioner
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-provisioner-license-reader
  labels:
    helm.sh/chart: kubedb-provisioner-v0.41.0-rc.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.41.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-provisioner
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-webhook-server
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-webhook-server
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-webhook-server
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-webhook-server-license-checker
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-webhook-server
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-webhook-server-license-reader
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-webhook-server
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/webhook-eas-rbac.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-webhook-server-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-webhook-server
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/stash-enterprise/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise-apiserver-auth-delegator
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-stash-enterprise
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/stash-enterprise/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-stash-enterprise
subjects:
- kind: ServiceAccount
  name: my-release-stash-enterprise
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/stash-enterprise/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise-license-checker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-stash-enterprise
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/stash-enterprise/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise-license-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-stash-enterprise
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/webhook-eas-rbac.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-kubedb-webhook-server-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-webhook-server
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/stash-enterprise/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-stash-enterprise-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-stash-enterprise
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubedb-autoscaler
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.26.0-rc.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.26.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  selector:
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubedb-ops-manager
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.28.0-rc.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.28.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  selector:
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubedb-provisioner
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-provisioner-v0.41.0-rc.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.41.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  selector:
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubedb-webhook-server
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: operator
    port: 443
    targetPort: operator
  selector:
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
---
# Source: kubedb-one/charts/stash-enterprise/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-stash-enterprise
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  # Port used to expose Prometheus pushgateway
  - name: pushgateway
    port: 56789
    protocol: TCP
    targetPort: 56789
  selector:
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubedb-autoscaler
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.26.0-rc.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.26.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-autoscaler
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-autoscaler
        app.kubernetes.io/instance: my-release
      annotations:
        reload: BfKZfMpX
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-release-kubedb-autoscaler
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubedb/kubedb-autoscaler:v0.26.0-rc.0
        imagePullPolicy: IfNotPresent
        args:
        - operator
        - --v=3
        - --use-kubeapiserver-fqdn-for-aks=true
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        - --update-interval=1m
        - --prometheus-address=http://prometheus-operated.monitoring.svc:9090
        - --memory-aggregation-interval=4m0s
        - --memory-aggregation-interval-count=3
        - --memory-histogram-decay-half-life=5m0s
        - --cpu-histogram-decay-half-life=5m0s
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: metrics
          containerPort: 8080
        - name: probes
          containerPort: 8081
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        readinessProbe:
          httpGet:
            path: /readyz
            port: probes
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: probes
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubedb-ops-manager
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.28.0-rc.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.28.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-ops-manager
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-ops-manager
        app.kubernetes.io/instance: my-release
      annotations:
        reload: gcaTUvFo
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-release-kubedb-ops-manager
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubedb/kubedb-ops-manager:v0.28.0-rc.0
        imagePullPolicy: IfNotPresent
        args:
        - operator
        - --v=3
        - --use-kubeapiserver-fqdn-for-aks=true
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        - --recommendation-resync-period=1h0m0s
        - --gen-rotate-tls-recommendation-before-expiry-year=0
        - --gen-rotate-tls-recommendation-before-expiry-month=1
        - --gen-rotate-tls-recommendation-before-expiry-day=0
        
        
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        ports:
        - name: metrics
          containerPort: 8080
        - name: probes
          containerPort: 8081
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        readinessProbe:
          httpGet:
            path: /readyz
            port: probes
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: probes
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubedb-provisioner
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-provisioner-v0.41.0-rc.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.41.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-provisioner
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-provisioner
        app.kubernetes.io/instance: my-release
      annotations:
        reload: VPeRwdHX
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-release-kubedb-provisioner
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubedb/kubedb-provisioner:v0.41.0-rc.0
        imagePullPolicy: IfNotPresent
        args:
        - operator
        - --v=3
        - --use-kubeapiserver-fqdn-for-aks=true
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        
        
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        ports:
        - name: metrics
          containerPort: 8080
        - name: probes
          containerPort: 8081
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        readinessProbe:
          httpGet:
            path: /readyz
            port: probes
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: probes
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubedb-webhook-server
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-webhook-server
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-webhook-server
        app.kubernetes.io/instance: my-release
      annotations:
        reload: RCIoWVGn
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-release-kubedb-webhook-server
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubedb/kubedb-webhook-server:v0.17.0-rc.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --use-kubeapiserver-fqdn-for-aks=true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: operator
          containerPort: 8443
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /var/serving-cert
          name: serving-cert
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-kubedb-webhook-server-apiserver-cert
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb-one/charts/stash-enterprise/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-stash-enterprise
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: stash-enterprise
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: stash-enterprise
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: b6fa31abc811187389029e06909998f20d482d514d455fd340930e29d2543aad
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-release-stash-enterprise
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/stashed/stash-enterprise:v0.32.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --docker-registry=ghcr.io/stashed
        - --image=stash-enterprise
        - --image-tag=v0.32.0
        - --secure-port=8443
        - --authentication-configmap-namespace=kube-system
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --pushgateway-url=http://my-release-stash-enterprise.kubedb-one-v2024.1.26-rc.0.tgz.svc:56789
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --nva-cpu=100m
        - --nva-memory=128Mi
        - --nva-user=2000
        - --nva-privileged-mode=false
        - --license-apiservice=v1beta1.admission.stash.appscode.com
        ports:
        - containerPort: 8443
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        - mountPath: /tmp
          name: stash-scratchdir
      - name: pushgateway
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: 'prom/pushgateway:v1.4.2'
        imagePullPolicy: IfNotPresent
        args:
        - --web.listen-address=:56789
        - --persistence.file=/var/pv/pushgateway.dat
        resources:
          {}
        ports:
        - containerPort: 56789
        volumeMounts:
        - mountPath: /var/pv
          name: data-volume
        - mountPath: /tmp
          name: stash-scratchdir
      volumes:
      - emptyDir: {}
        name: data-volume
      - emptyDir: {}
        name: stash-scratchdir
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-stash-enterprise-apiserver-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.kafka.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.kafka.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.kafka.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.kafka.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.ops.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.ops.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.ops.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.ops.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.postgres.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.postgres.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.autoscaling.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-autoscaler
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.autoscaling.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.autoscaling.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-autoscaler
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.autoscaling.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.elasticsearch.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-dashboard
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.elasticsearch.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.elasticsearch.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-dashboard
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.elasticsearch.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.schema.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-schema-manager
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.schema.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.schema.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-schema-manager
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.schema.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5YWTNKVkFuNXc3blRMRFBGb2c2bHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS091CmpDRUpmckV2SXdOYjAwNmRQdkhmNXBNSnI0cy9xZTBFTjNoTStZZFhTUkpVV01DUGQrMlZCRU1zMFVnbGJXQmcKMHJhbGFkbnBJM1lEMDA0elQxTUVyQ3BqR3l0VUtmVjJBcnFwdVBpM0NiNDVMNS9MaGZLRlRsQ2xrRW1hSGZlZApLakdURW9zNmY5SE1seG50WjNQVkx5WHFTd1BoL3o4bEVSKzFVeFJEeHhZN213Ky93bGIvN3dYcmlDWnZFYkg0Ci9lMGFLNkxGQ1pmK013N3pNdXdNMFMrb0J0eS84YUtRWDE1elloK1U2SzBvYVBwZlpZNU15Zm5JT3B2ZUJBZ2oKUWEvM3c1YzZWVEsyZXdQQkE1UnlndWRhVEI0ZGUzOGpPLzdxRUFtWjIzYmNpL2thWlB4V3JRakJjbEtheTNPdApSVUVLNTJqQlZ0TTBmU2F1RDVrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSWmR1SEhSRXByVnlDdkRaYzMrYW1qVFp4QVdUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnb1YxRmllYwpCMEJGVXpCdzllVHV6SXhqNjYvUUtqR3BwQmlSQUNaSkg1VFdiS1lnMUVNQ3g0RGpGT0RCY21TQ25XdkNVL3lBCmNVTmlSdUNMZVJBTE5VeTJ3RUNyY2xQaUlxV2ZDbXVvUDh3VTQ1SWd3TzdBd25qQ3R1MVdwRzRUODQvZUdhR08KNmFrRS9jUmp0OE55YzF2TGd5c0toRDFoazBoU0Z0NTVaQTNMWUVzWmJEeWNsa1pTZDI0WndPYU1UZ1J2WTV2WQpTS25aekh1TE52a1JVa1FIaFZpbGFMbDJmZTBvM0xqaUQ5OFVqV3h3V28yV1lFSFVkVDlvSUtmdG5tTHBoV1VzCnVmWS9USUEzTVN1N25aaXNncU5kUWt1TUhxUVBiUWVGNHNDUEJ0QXFDaVFybjdndkdVYmlXK3ZPdzZKOUFveHMKcGJ5NnVsM055bEFoTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/stash-enterprise/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.admission.stash.appscode.com
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: admission.stash.appscode.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-stash-enterprise
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5rNG11YVJvUFJLTGljWkZWWnQ3VHd3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUEM4Ck5uWkRRYTRNUldHcGpCY3I2dlU2MWZZSVdBaGVxR3BHK08ySU4wQlEya2VJYUw5UWpQQnJyVzZ4eVpnRUYzUG4KZGIvZ3FzNWVQd3NUcUdFTzNHQ1pOUExoVng2MGo2dHgwYXJ4K2YrYVpkSG1Qa0c0UEwrd3JiLyttQnkxTTZiZgpUVEkydWVZdjRHUjc4aUZpaWQzbmVXMVJDWHY5ZDcvZ0tKaUNxcjU3OXh1MzVzM1hNTmZvdFBFZm90SDloZGZaCk91SmNncXBDNmJpdDlIdHh5RC92UHJ4WWxYaE81YkkzNGxMVjRGeHkzckFjOE9pM1htNHNUSVB5RWpmb2cvbDAKSG01WkhnY3JXUDBob3pCSjkzVFkzdkthOW1xUjRjdm8zV3EzVUdodDgySE5WeEk2OG0yY0VOalkvQ25nOUNxZQorYjBMQy9BY3ZRZFlWeDErYmJNQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJST1d4eERQTjFEbysrUk85TmVlUVh2SEpvb3Z6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSOHRYek9iRQpRVzcxSnptTGhFR2I3U2o5aWVuT1ZJL0pOK29RNStsb25FNTN1MXRLb29GUkoycW9pM29jcmxXdkg5WTNrZUF5Cmwyd2RoR2RwWVdBK3NwbU9nWS9EN0w5bVBNcEVlUmJPUTB3Nm83eDA5dVp5cDMrMzYyQlNtemVyZUJFb3hEWWcKT2hNNFR5TCsvOGpMeWVTa09BYzZlbXE4YkczVG9SNWJBY3J1bkdFcnBVanVITTNLWUhXTHBTRU9kdDBBLzhpcQpHMTZYcUdoM3BlN2E4WGFYZ1kyTWRXNnpTOEhEclhTZllUK2FWSTk0L25Id1ZIYmFZY3BKOVphemI4Q28rbFFwCjFuMkJ3ZExGMk1sNDVpSGQyblhmcXI0KzRDSjhNeW4wa0Z0SFZpUXN6NlpqQUhtaEZ2QzRDT3Vhbkt1VXY2SkkKWExWWGlHR3RKTUpqTGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/stash-enterprise/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.admission.stash.appscode.com
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: admission.stash.appscode.com
  version: v1beta1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-stash-enterprise
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5rNG11YVJvUFJLTGljWkZWWnQ3VHd3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUEM4Ck5uWkRRYTRNUldHcGpCY3I2dlU2MWZZSVdBaGVxR3BHK08ySU4wQlEya2VJYUw5UWpQQnJyVzZ4eVpnRUYzUG4KZGIvZ3FzNWVQd3NUcUdFTzNHQ1pOUExoVng2MGo2dHgwYXJ4K2YrYVpkSG1Qa0c0UEwrd3JiLyttQnkxTTZiZgpUVEkydWVZdjRHUjc4aUZpaWQzbmVXMVJDWHY5ZDcvZ0tKaUNxcjU3OXh1MzVzM1hNTmZvdFBFZm90SDloZGZaCk91SmNncXBDNmJpdDlIdHh5RC92UHJ4WWxYaE81YkkzNGxMVjRGeHkzckFjOE9pM1htNHNUSVB5RWpmb2cvbDAKSG01WkhnY3JXUDBob3pCSjkzVFkzdkthOW1xUjRjdm8zV3EzVUdodDgySE5WeEk2OG0yY0VOalkvQ25nOUNxZQorYjBMQy9BY3ZRZFlWeDErYmJNQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJST1d4eERQTjFEbysrUk85TmVlUVh2SEpvb3Z6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSOHRYek9iRQpRVzcxSnptTGhFR2I3U2o5aWVuT1ZJL0pOK29RNStsb25FNTN1MXRLb29GUkoycW9pM29jcmxXdkg5WTNrZUF5Cmwyd2RoR2RwWVdBK3NwbU9nWS9EN0w5bVBNcEVlUmJPUTB3Nm83eDA5dVp5cDMrMzYyQlNtemVyZUJFb3hEWWcKT2hNNFR5TCsvOGpMeWVTa09BYzZlbXE4YkczVG9SNWJBY3J1bkdFcnBVanVITTNLWUhXTHBTRU9kdDBBLzhpcQpHMTZYcUdoM3BlN2E4WGFYZ1kyTWRXNnpTOEhEclhTZllUK2FWSTk0L25Id1ZIYmFZY3BKOVphemI4Q28rbFFwCjFuMkJ3ZExGMk1sNDVpSGQyblhmcXI0KzRDSjhNeW4wa0Z0SFZpUXN6NlpqQUhtaEZ2QzRDT3Vhbkt1VXY2SkkKWExWWGlHR3RKTUpqTGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/stash-enterprise/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.repositories.stash.appscode.com
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: repositories.stash.appscode.com
  version: v1alpha1
  service:
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
    name: my-release-stash-enterprise
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5rNG11YVJvUFJLTGljWkZWWnQ3VHd3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNeVdoY05NelF3TmpFNE1UUTFOek15V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUEM4Ck5uWkRRYTRNUldHcGpCY3I2dlU2MWZZSVdBaGVxR3BHK08ySU4wQlEya2VJYUw5UWpQQnJyVzZ4eVpnRUYzUG4KZGIvZ3FzNWVQd3NUcUdFTzNHQ1pOUExoVng2MGo2dHgwYXJ4K2YrYVpkSG1Qa0c0UEwrd3JiLyttQnkxTTZiZgpUVEkydWVZdjRHUjc4aUZpaWQzbmVXMVJDWHY5ZDcvZ0tKaUNxcjU3OXh1MzVzM1hNTmZvdFBFZm90SDloZGZaCk91SmNncXBDNmJpdDlIdHh5RC92UHJ4WWxYaE81YkkzNGxMVjRGeHkzckFjOE9pM1htNHNUSVB5RWpmb2cvbDAKSG01WkhnY3JXUDBob3pCSjkzVFkzdkthOW1xUjRjdm8zV3EzVUdodDgySE5WeEk2OG0yY0VOalkvQ25nOUNxZQorYjBMQy9BY3ZRZFlWeDErYmJNQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJST1d4eERQTjFEbysrUk85TmVlUVh2SEpvb3Z6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSOHRYek9iRQpRVzcxSnptTGhFR2I3U2o5aWVuT1ZJL0pOK29RNStsb25FNTN1MXRLb29GUkoycW9pM29jcmxXdkg5WTNrZUF5Cmwyd2RoR2RwWVdBK3NwbU9nWS9EN0w5bVBNcEVlUmJPUTB3Nm83eDA5dVp5cDMrMzYyQlNtemVyZUJFb3hEWWcKT2hNNFR5TCsvOGpMeWVTa09BYzZlbXE4YkczVG9SNWJBY3J1bkdFcnBVanVITTNLWUhXTHBTRU9kdDBBLzhpcQpHMTZYcUdoM3BlN2E4WGFYZ1kyTWRXNnpTOEhEclhTZllUK2FWSTk0L25Id1ZIYmFZY3BKOVphemI4Q28rbFFwCjFuMkJ3ZExGMk1sNDVpSGQyblhmcXI0KzRDSjhNeW4wa0Z0SFZpUXN6NlpqQUhtaEZ2QzRDT3Vhbkt1VXY2SkkKWExWWGlHR3RKTUpqTGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/deprecated-elasticsearch-7.3.2-elasticstack.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/deprecated-elasticsearch-7.6.1-opendistro.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/deprecated-elasticsearch-7.9.1-elasticstack.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-3.4-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-3.4.22-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-3.6-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-3.6.13-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-4.0.11-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-4.0.5-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-4.0.5-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-4.1.13-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-4.1.7-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/deprecated-mysql-5.7.25-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/deprecated-mysql-5.7.25-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/deprecated-mysql-5.7.29-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/deprecated-mysql-5.7.31-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.14-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.14-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.20-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.21-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.3-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.3-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/deprecated-postgres-10.2-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/deprecated-postgres-10.2-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/deprecated-postgres-10.6-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/deprecated-postgres-11.1-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/deprecated-postgres-9.6-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/deprecated-postgres-9.6-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/deprecated-postgres-9.6.7-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/deprecated-postgres-9.6.7-official.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/redis/deprecated-redis-4.0.6.yaml
---
---
# Source: kubedb-one/charts/kubedb-catalog/templates/redis/deprecated-redis-4.0.yaml
---
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb-one/charts/stash-enterprise/templates/apiregistration.yaml
# copy kube-system/extension-apiserver-authentication into stash operator namespace
---
# Source: kubedb-one/charts/stash-enterprise/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-1.1.0-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-1.1.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:1.1.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:1.1.0-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:1.1.0'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:1.1.0-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 1.1.0
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-1.2.4-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-1.2.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:1.2.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:1.2.4-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:1.2.4'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:1.2.4-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 1.2.4
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-1.3.13-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-1.3.13'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:1.3.13'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:1.3.13-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:1.3.13'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:1.3.13-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 1.3.13
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-2.0.1-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.0.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.0.1'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.0.1-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.0.1'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.0.1-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.0.1
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-2.11.1-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.11.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.11.1'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.11.1-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.11.1'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.11.1-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.11.1
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-2.5.0-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.5.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.5.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.5.0-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.5.0'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.5.0-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.5.0
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-2.8.0-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.8.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.8.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.8.0-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.8.0'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.8.0-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.8.0
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-6.8.23-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-6.8.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:6.8.23'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:6.8.23-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:6.8.23'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:6.8.23-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-6.8.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-6.8.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.5.0
  version: 6.8.23
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-7.13.4-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.13.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.13.4'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.13.4-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.13.4'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.13.4-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.15.0
  version: 7.13.4
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-7.14.2-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.14.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.14.2'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.14.2-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.14.2'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.14.2-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.18.0
  version: 7.14.2
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-7.16.3-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.16.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.16.3'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.16.3-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.16.3'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.16.3-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.18.0
  version: 7.16.3
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-7.17.15-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.17.15'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.17.15'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.17.15-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.17.15'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.17.15-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  version: 7.17.15
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-7.9.3-searchguard.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'searchguard-7.9.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: SearchGuard
  db:
    image: 'floragunncom/sg-elasticsearch:7.9.3-oss-47.1.0'
  distribution: SearchGuard
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.9.3-searchguard'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!searchguard)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!searchguard)(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.15.0
  version: 7.9.3
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-8.11.1-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.11.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.11.1'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.11.1-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.11.1'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.11.1-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.11.1
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-8.2.3-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.2.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.2.3'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.2.3-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.2.3'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.2.3-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.2.3
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-8.5.3-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.5.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.5.3'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.5.3-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.5.3'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.5.3-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.5.3
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-8.6.2-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.6.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.6.2'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.6.2-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.6.2'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.6.2-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.6.2
---
# Source: kubedb-one/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-8.8.2-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.8.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.8.2'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.8.2-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.8.2'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.3.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.8.2-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.8.2
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/5.6.4/elasticsearch-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-backup-5.6.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --es-args=${args:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:5.6.4-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/5.6.4/elasticsearch-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-restore-5.6.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --es-args=${args:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:5.6.4-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.2.4/elasticsearch-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-backup-6.2.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --es-args=${args:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:6.2.4-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.2.4/elasticsearch-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-restore-6.2.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --es-args=${args:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:6.2.4-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.3.0/elasticsearch-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-backup-6.3.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --es-args=${args:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:6.3.0-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.3.0/elasticsearch-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-restore-6.3.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --es-args=${args:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:6.3.0-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.4.0/elasticsearch-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-backup-6.4.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --es-args=${args:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:6.4.0-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.4.0/elasticsearch-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-restore-6.4.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --es-args=${args:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:6.4.0-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.5.3/elasticsearch-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-backup-6.5.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --es-args=${args:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:6.5.3-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.5.3/elasticsearch-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-restore-6.5.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --es-args=${args:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:6.5.3-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.8.0/elasticsearch-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-backup-6.8.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --es-args=${args:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:6.8.0-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.8.0/elasticsearch-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-restore-6.8.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --es-args=${args:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:6.8.0-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.14.0/elasticsearch-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-backup-7.14.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --es-args=${args:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:7.14.0-v14'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.14.0/elasticsearch-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-restore-7.14.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --es-args=${args:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:7.14.0-v14'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.2.0/elasticsearch-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-backup-7.2.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --es-args=${args:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:7.2.0-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.2.0/elasticsearch-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-restore-7.2.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --es-args=${args:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:7.2.0-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.3.2/elasticsearch-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-backup-7.3.2'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --es-args=${args:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:7.3.2-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.3.2/elasticsearch-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-restore-7.3.2'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --es-args=${args:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:7.3.2-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/8.2.0/elasticsearch-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-backup-8.2.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --es-args=${args:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:8.2.0-v11'
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/8.2.0/elasticsearch-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'elasticsearch-restore-8.2.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-es
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --es-args=${args:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-elasticsearch:8.2.0-v11'
---
# Source: kubedb-one/charts/stash-catalog/templates/etcd/3.5.0/etcd-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'etcd-backup-3.5.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-etcd
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --etcd-args=${args:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-etcd:3.5.0-v15'
---
# Source: kubedb-one/charts/stash-catalog/templates/etcd/3.5.0/etcd-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'etcd-restore-3.5.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-etcd
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --etcd-args=${args:=}
  - --initial-cluster=${initialCluster:=}
  - --initial-cluster-token=${initialClusterToken:=}
  - --data-dir=${dataDir:=}
  - --workload-kind=${workloadKind:=}
  - --workload-name=${workloadName:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --invoker-kind=${INVOKER_KIND:=}
  - --invoker-name=${INVOKER_NAME:=}
  - --image=${ADDON_IMAGE:=}
  - --secret-name=${REPOSITORY_SECRET_NAME:=}
  - --snapshots=${RESTORE_SNAPSHOTS:=}
  image: 'ghcr.io/stashed/stash-etcd:3.5.0-v15'
---
# Source: kubedb-one/charts/stash-catalog/templates/kubedump/0.1.0/kubedump-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'kubedump-backup-0.1.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --namespace=${NAMESPACE:=default}
  - --backupsession=${BACKUP_SESSION:=}
  - --invoker-kind=${INVOKER_KIND:=}
  - --invoker-name=${INVOKER_NAME:=}
  - --target-kind=${TARGET_KIND:=}
  - --target-name=${TARGET_NAME:=}
  - --target-namespace=${TARGET_NAMESPACE:=}
  - --sanitize=${sanitize:=true}
  - --label-selector=${labelSelector:=}
  - --include-dependants=${includeDependants:=false}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/kubedump:0.1.0-v11'
---
# Source: kubedb-one/charts/stash-catalog/templates/mariadb/10.5.8/mariadb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mariadb-backup-10.5.8'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mariadb
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mariadb-args=${args:=--all-databases}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-mariadb:10.5.8-v21'
---
# Source: kubedb-one/charts/stash-catalog/templates/mariadb/10.5.8/mariadb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mariadb-restore-10.5.8'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mariadb
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mariadb-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-mariadb:10.5.8-v21'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.4.17/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-3.4.17'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:3.4.17-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.4.17/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-3.4.17'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:3.4.17-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.4.22/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-3.4.22'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:3.4.22-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.4.22/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-3.4.22'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:3.4.22-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.6.13/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-3.6.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:3.6.13-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.6.13/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-3.6.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:3.6.13-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.6.8/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-3.6.8'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:3.6.8-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.6.8/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-3.6.8'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:3.6.8-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.11/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-4.0.11'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.0.11-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.11/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-4.0.11'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.0.11-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.3/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-4.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.0.3-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.3/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-4.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.0.3-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.5/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-4.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.0.5-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.5/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-4.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.0.5-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.13/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-4.1.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.1.13-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.13/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-4.1.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.1.13-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.4/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-4.1.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.1.4-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.4/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-4.1.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.1.4-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.7/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-4.1.7'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.1.7-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.7/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-4.1.7'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.1.7-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.2.3/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-4.2.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.2.3-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.2.3/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-4.2.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.2.3-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.4.6/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-4.4.6'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.4.6-v19'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.4.6/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-4.4.6'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:4.4.6-v19'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/5.0.15/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-5.0.15'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:5.0.15-v1'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/5.0.15/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-5.0.15'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:5.0.15-v1'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/5.0.3/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-5.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:5.0.3-v16'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/5.0.3/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-5.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:5.0.3-v16'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/6.0.5/mongodb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-backup-6.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:6.0.5-v4'
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/6.0.5/mongodb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mongodb-restore-6.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mongo
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=false
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mongo-args=${args:=}
  - --max-concurrency=${MAX_CONCURRENCY:=3}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --restoresession=${RESTORE_SESSION:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --authentication-database=${authenticationDatabase:=admin}
  image: 'ghcr.io/stashed/stash-mongodb:6.0.5-v4'
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/5.7.25/mysql-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mysql-backup-5.7.25'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mysql
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mysql-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-mysql:5.7.25-v29'
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/5.7.25/mysql-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mysql-restore-5.7.25'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mysql
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mysql-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-mysql:5.7.25-v29'
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.14/mysql-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mysql-backup-8.0.14'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mysql
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mysql-args=${args:=--all-databases}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-mysql:8.0.14-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.14/mysql-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mysql-restore-8.0.14'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mysql
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mysql-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-mysql:8.0.14-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.21/mysql-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mysql-backup-8.0.21'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mysql
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mysql-args=${args:=--all-databases}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-mysql:8.0.21-v22'
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.21/mysql-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mysql-restore-8.0.21'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mysql
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mysql-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-mysql:8.0.21-v22'
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.3/mysql-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mysql-backup-8.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-mysql
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --mysql-args=${args:=--all-databases}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-mysql:8.0.3-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.3/mysql-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'mysql-restore-8.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-mysql
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --mysql-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-mysql:8.0.3-v28'
---
# Source: kubedb-one/charts/stash-catalog/templates/nats/2.6.1/nats-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'nats-backup-2.6.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-nats
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --nats-args=${args:=}
  - --streams=${streams:=}
  - --warning-threshold=${warningThreshold:=30s}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-nats:2.6.1-v16'
---
# Source: kubedb-one/charts/stash-catalog/templates/nats/2.6.1/nats-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'nats-restore-2.6.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-nats
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --nats-args=${args:=}
  - --streams=${streams:=}
  - --overwrite=${overwrite:=false}
  - --warning-threshold=${warningThreshold:=30s}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-nats:2.6.1-v16'
---
# Source: kubedb-one/charts/stash-catalog/templates/nats/2.8.2/nats-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'nats-backup-2.8.2'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-nats
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --nats-args=${args:=}
  - --streams=${streams:=}
  - --warning-threshold=${warningThreshold:=30s}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-nats:2.8.2-v11'
---
# Source: kubedb-one/charts/stash-catalog/templates/nats/2.8.2/nats-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'nats-restore-2.8.2'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-nats
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --nats-args=${args:=}
  - --streams=${streams:=}
  - --overwrite=${overwrite:=false}
  - --warning-threshold=${warningThreshold:=30s}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-nats:2.8.2-v11'
---
# Source: kubedb-one/charts/stash-catalog/templates/perconaxtradb/5.7/perconaxtradb-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'perconaxtradb-backup-5.7'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-percona-xtradb
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --xtradb-args=${args:=--all-databases}
  - --socat-retry=${socatRetry:=30}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --backupsession=${BACKUP_SESSION:=}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-percona-xtradb:5.7-v12'
---
# Source: kubedb-one/charts/stash-catalog/templates/perconaxtradb/5.7/perconaxtradb-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'perconaxtradb-restore-5.7'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-percona-xtradb
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --xtradb-args=${args:=}
  - --target-app-replicas=${TARGET_APP_REPLICAS:=1}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-percona-xtradb:5.7-v12'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/10.14/postgres-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-backup-10.14'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --backup-cmd=${backupCMD:=pg_dumpall}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:10.14-v27'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/10.14/postgres-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-restore-10.14'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:10.14-v27'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/11.9/postgres-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-backup-11.9'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --backup-cmd=${backupCMD:=pg_dumpall}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:11.9-v27'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/11.9/postgres-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-restore-11.9'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:11.9-v27'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/12.4/postgres-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-backup-12.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --backup-cmd=${backupCMD:=pg_dumpall}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:12.4-v27'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/12.4/postgres-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-restore-12.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:12.4-v27'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/13.1/postgres-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-backup-13.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --backup-cmd=${backupCMD:=pg_dumpall}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:13.1-v24'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/13.1/postgres-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-restore-13.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:13.1-v24'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/14.0/postgres-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-backup-14.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --backup-cmd=${backupCMD:=pg_dumpall}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:14.0-v16'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/14.0/postgres-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-restore-14.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:14.0-v16'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/15.1/postgres-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-backup-15.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --backup-cmd=${backupCMD:=pg_dumpall}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:15.1-v8'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/15.1/postgres-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-restore-15.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:15.1-v8'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/9.6.19/postgres-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-backup-9.6.19'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --backup-cmd=${backupCMD:=pg_dumpall}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:9.6.19-v27'
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/9.6.19/postgres-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'postgres-restore-9.6.19'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-pg
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --pg-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --user=${user:=}
  image: 'ghcr.io/stashed/stash-postgres:9.6.19-v27'
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/5.0.13/redis-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'redis-backup-5.0.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-redis
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --redis-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-redis:5.0.13-v16'
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/5.0.13/redis-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'redis-restore-5.0.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-redis
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --redis-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-redis:5.0.13-v16'
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/6.2.5/redis-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'redis-backup-6.2.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-redis
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --redis-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-redis:6.2.5-v16'
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/6.2.5/redis-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'redis-restore-6.2.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-redis
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --redis-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-redis:6.2.5-v16'
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/7.0.5/redis-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'redis-backup-7.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-redis
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --redis-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-redis:7.0.5-v9'
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/7.0.5/redis-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'redis-restore-7.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-redis
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --redis-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  image: 'ghcr.io/stashed/stash-redis:7.0.5-v9'
---
# Source: kubedb-one/charts/stash-catalog/templates/vault/1.10.3/vault-backup-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'vault-backup-1.10.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - backup-vault
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --hostname=${HOSTNAME:=}
  - --vault-args=${args:=}
  - --wait-timeout=${waitTimeout:=300}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --backupsession=${BACKUP_SESSION:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0}
  - --retention-keep-hourly=${RETENTION_KEEP_HOURLY:=0}
  - --retention-keep-daily=${RETENTION_KEEP_DAILY:=0}
  - --retention-keep-weekly=${RETENTION_KEEP_WEEKLY:=0}
  - --retention-keep-monthly=${RETENTION_KEEP_MONTHLY:=0}
  - --retention-keep-yearly=${RETENTION_KEEP_YEARLY:=0}
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --key-prefix=${keyPrefix:=}
  image: 'ghcr.io/stashed/stash-vault:1.10.3-v8'
---
# Source: kubedb-one/charts/stash-catalog/templates/vault/1.10.3/vault-restore-function.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: 'vault-restore-1.10.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  args:
  - restore-vault
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --region=${REPOSITORY_REGION:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --storage-secret-name=${REPOSITORY_SECRET_NAME:=}
  - --storage-secret-namespace=${REPOSITORY_SECRET_NAMESPACE:=}
  - --scratch-dir=/stash-tmp
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  - --wait-timeout=${waitTimeout:=300}
  - --hostname=${HOSTNAME:=}
  - --source-hostname=${SOURCE_HOSTNAME:=}
  - --interim-data-dir=${INTERIM_DATA_DIR}
  - --namespace=${NAMESPACE:=default}
  - --appbinding=${TARGET_NAME:=}
  - --appbinding-namespace=${TARGET_NAMESPACE:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=}
  - --vault-args=${args:=}
  - --output-dir=${outputDir:=}
  - --license-apiservice=${LICENSE_APISERVICE:=}
  - --force=${force:=false}
  - --key-prefix=${keyPrefix:=}
  - --old-key-prefix=${oldKeyPrefix:=}
  image: 'ghcr.io/stashed/stash-vault:1.10.3-v8'
---
# Source: kubedb-one/charts/kubedb-catalog/templates/kafkaconnector/kafkaconnector-0.13.0-gcs.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'gcs-0.13.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-gcs:0.13.0'
  securityContext:
    runAsUser: 1001
  type: GCS
  version: 0.13.0
---
# Source: kubedb-one/charts/kubedb-catalog/templates/kafkaconnector/kafkaconnector-1.11.0-mongodb.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'mongodb-1.11.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-mongodb:1.11.0'
  securityContext:
    runAsUser: 1001
  type: MongoDB
  version: 1.11.0
---
# Source: kubedb-one/charts/kubedb-catalog/templates/kafkaconnector/kafkaconnector-2.15.0-s3.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 's3-2.15.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-s3:2.15.0'
  securityContext:
    runAsUser: 1001
  type: S3
  version: 2.15.0
---
# Source: kubedb-one/charts/kubedb-catalog/templates/kafkaconnector/kafkaconnector-2.4.2-mysql.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'mysql-2.4.2.final'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-mysql:2.4.2.final'
  securityContext:
    runAsUser: 1001
  type: MySQL
  version: 2.4.2
---
# Source: kubedb-one/charts/kubedb-catalog/templates/kafkaconnector/kafkaconnector-2.4.2-postgres.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'postgres-2.4.2.final'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-postgres:2.4.2.final'
  securityContext:
    runAsUser: 1001
  type: Postgres
  version: 2.4.2
---
# Source: kubedb-one/charts/kubedb-catalog/templates/kafka/kafka-3.3.0.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.3.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.3.2'
  cruiseControl:
    image: 'ghcr.io/kubedb/cruise-control:3.3.0'
  db:
    image: 'ghcr.io/kubedb/kafka-kraft:3.3.0'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.3.0
---
# Source: kubedb-one/charts/kubedb-catalog/templates/kafka/kafka-3.3.2.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.3.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.3.2'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.3.2'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.3.2'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.3.2
---
# Source: kubedb-one/charts/kubedb-catalog/templates/kafka/kafka-3.4.0.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.4.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.4.1'
  cruiseControl:
    image: 'ghcr.io/kubedb/cruise-control:3.4.0'
  db:
    image: 'ghcr.io/kubedb/kafka-kraft:3.4.0'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.4.0
---
# Source: kubedb-one/charts/kubedb-catalog/templates/kafka/kafka-3.4.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.4.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.4.1'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.4.1'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.4.1'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.4.1
---
# Source: kubedb-one/charts/kubedb-catalog/templates/kafka/kafka-3.5.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.5.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.5.1'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.5.1'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.5.1'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.5.1
---
# Source: kubedb-one/charts/kubedb-catalog/templates/kafka/kafka-3.6.0.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.6.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.6.0'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.6.0'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.6.0'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.6.0
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mariadb/mariadb-10.10.7.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.10.7'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.21.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.10.7-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.10.7
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mariadb/mariadb-10.11.6.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.11.6'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.21.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.11.6-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.11.6
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mariadb/mariadb-10.4.32.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.4.32'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.21.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.4.32-focal'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.4.32
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mariadb/mariadb-10.5.23.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.5.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.21.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.5.23-focal'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.5.23
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mariadb/mariadb-10.6.16.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.6.16'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.21.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.6.16-focal'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.6.16
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mariadb/mariadb-11.0.4.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '11.0.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.21.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:11.0.4-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 11.0.4
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mariadb/mariadb-11.1.3.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '11.1.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.21.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:11.1.3-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 11.1.3
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mariadb/mariadb-11.2.2.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '11.2.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.21.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:11.2.2-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 11.2.2
---
# Source: kubedb-one/charts/kubedb-metrics/templates/elasticsearch/catalog-kubedb-com-elasticsearchversion.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: catalog-kubedb-com-elasticsearchversion
spec:
  targetRef:
    apiVersion: catalog.kubedb.com/v1alpha1
    kind: ElasticsearchVersion
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp
    - name: info
      help: "Elastic search versions info"
      type: gauge
      labels:
        - key: auth_plugin
          valuePath: .spec.authPlugin
        - key: db_image
          valuePath: .spec.db.image
        - key: deprecated
          valuePath: .spec.deprecated
        - key: distribution
          valuePath: .spec.distribution
        - key: exporter_image
          valuePath: .spec.exporter.image
        - key: stash_addon_backup_task
          valuePath: .spec.stash.addon.backupTask.name
        - key: stash_addon_restore_task
          valuePath: .spec.stash.addon.restoreTask.name
      metricValue:
        value: 1
---
# Source: kubedb-one/charts/kubedb-metrics/templates/elasticsearch/kubedb-com-elasticsearch.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubedb-com-elasticsearch
spec:
  targetRef:
    apiVersion: kubedb.com/v1alpha2
    kind: Elasticsearch
  commonLabels:
    - key: app
      valuePath: .metadata.name
    - key: app_namespace
      valuePath: .metadata.namespace
  metrics:
    - name: created
      help: "Unix creation time stamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: info
      help: "Kubedb elasticsearch information"
      type: gauge
      labels:
        - key: version
          valuePath: .spec.version
        - key: storageType
          valuePath: .spec.storageType
        - key: enableSSL
          valuePath: .spec.enableSSL
        - key: terminationPolicy
          valuePath: .spec.terminationPolicy
        - key: storageClassName
          valuePath: .spec.storage.storageClassName
      metricValue:
        value: 1

    - name: replicas
      help: "Number of elasticsearch replicas in general mode"
      type: gauge
      params:
        - key: obj
          valuePath: .
      metricValue:
        valueFromExpression: resource_replicas(obj)

    - name: status_conditions
      help: "Elasticsearch instance status condition"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: type
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1

    - name: status_phase
      help: "Elasticsearch instance current phase"
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Ready
            metricValue:
              valueFromExpression: "int(phase == 'Ready')"
          - labelValue: Halted
            metricValue:
              valueFromExpression: "int(phase == 'Halted')"
          - labelValue: Provisioning
            metricValue:
              valueFromExpression: "int(phase == 'Provisioning')"
          - labelValue: Critical
            metricValue:
              valueFromExpression: "int(phase == 'Critical')"
          - labelValue: NotReady
            metricValue:
              valueFromExpression: "int(phase == 'NotReady')"
          - labelValue: DataRestoring
            metricValue:
              valueFromExpression: "int(phase == 'DataRestoring')"

    - name: security_http_ssl_enabled
      help: "Elasticsearch ssl information"
      type: gauge
      params:
        - key: ssl
          valuePath: .spec.enableSSL
      metricValue:
        valueFromExpression: int(ssl == 'true')

    - name: certmanager_managed_tls_enabled
      help: "Elasticsearch cert manager managed tls info"
      type: gauge
      params:
        - key: tls_issuerRef
          valuePath: .spec.tls.issuerRef
      metricValue:
        valueFromExpression: int(tls_issuerRef != 'nil')

    - name: resource_request_cpu
      help: "Requested CPU by Elasticsearch in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_memory
      help: "Requested memory by Elasticsearch in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_storage
      help: "Requested storage by Elasticsearch in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_limit_cpu
      help: "CPU limit for Elasticsearch in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_memory
      help: "Memory limit for Elasticsearch in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_storage
      help: "Storage limit for Elasticsearch in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    ##### Metrics for Master topology #####

    - name: master_node_replicas
      help: "Number of replicas for elasticsearch master node"
      type: gauge
      field:
        path: .spec.topology.master.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.master.replicas

    - name: master_node_storage_class_info
      help: "Elasticsearch master node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.master.storage.storageClassName
      metricValue:
        value: 1

    - name: master_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.master.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.master.maxUnavailable

    ##### Metrics for Data topology #####

    - name: data_node_replicas
      help: "Number of replicas for elasticsearch data node"
      type: gauge
      field:
        path: .spec.topology.data.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.data.replicas

    - name: data_node_storage_class_info
      help: "Elasticsearch data node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.data.storage.storageClassName
      metricValue:
        value: 1

    - name: data_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.data.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.data.maxUnavailable

      ##### Metrics for DataContent topology #####

    - name: datacontent_node_replicas
      help: "Number of replicas for elasticsearch dataContent node"
      type: gauge
      field:
        path: .spec.topology.dataContent.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataContent.replicas

    - name: datacontent_node_storage_class_info
      help: "Elasticsearch dataContent node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.dataContent.storage.storageClassName
      metricValue:
        value: 1

    - name: datacontent_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.dataContent.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataContent.maxUnavailable

    ##### Metrics for DataHot topology #####

    - name: datahot_node_replicas
      help: "Number of replicas for elasticsearch dataHot node"
      type: gauge
      field:
        path: .spec.topology.dataHot.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataHot.replicas

    - name: datahot_node_storage_class_info
      help: "Elasticsearch dataHot node information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.dataHot.storage.storageClassName
      metricValue:
        value: 1

    - name: datahot_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.dataHot.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataHot.maxUnavailable

    ##### Metrics for DataWarm topology #####

    - name: datawarm_node_replicas
      help: "Number of replicas for elasticsearch dataWarm node"
      type: gauge
      field:
        path: .spec.topology.dataWarm.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataWarm.replicas

    - name: datawarm_node_storage_class_info
      help: "Elasticsearch dataWarm node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.dataWarm.storage.storageClassName
      metricValue:
        value: 1

    - name: datawarm_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.dataWarm.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataWarm.maxUnavailable

    ##### Metrics for DataCold topology #####

    - name: datacold_node_replicas
      help: "Number of replicas for elasticsearch dataCold node"
      type: gauge
      field:
        path: .spec.topology.dataCold.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataCold.replicas

    - name: datacold_node_storage_class_info
      help: "Elasticsearch dataCold node storage information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.dataCold.storage.storageClassName
      metricValue:
        value: 1

    - name: datacold_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.dataCold.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataCold.maxUnavailable

    ##### Metrics for DataFrozen topology #####

    - name: datafrozen_node_replicas
      help: "Number of replicas for elasticsearch dataFrozen node"
      type: gauge
      field:
        path: .spec.topology.dataFrozen.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataFrozen.replicas

    - name: datafrozen_node_storage_class_info
      help: "Elasticsearch dataFrozen node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.dataFrozen.storage.storageClassName
      metricValue:
        value: 1

    - name: datafrozen_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.dataFrozen.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataFrozen.maxUnavailable

    ##### Metrics for Ingest topology #####

    - name: ingest_node_replicas
      help: "Number of replicas for elasticsearch ingest node"
      type: gauge
      field:
        path: .spec.topology.ingest.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.ingest.replicas

    - name: ingest_node_storage_class_info
      help: "Elasticsearch ingest node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.ingest.storage.storageClassName
      metricValue:
        value: 1

    - name: ingest_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.ingest.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.ingest.maxUnavailable

    ##### Metrics for ML topology #####

    - name: ml_node_replicas
      help: "Number of replicas for elasticsearch ml node"
      type: gauge
      field:
        path: .spec.topology.ml.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.ml.replicas


    - name: ml_node_storage_class_info
      help: "Elasticsearch ml node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.ml.storage.storageClassName
      metricValue:
        value: 1

    - name: ml_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.ml.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.ml.maxUnavailable

    ##### Metrics for transform topology #####

    - name: transform_node_replicas
      help: "Number of replicas for elasticsearch transform node"
      type: gauge
      field:
        path: .spec.topology.transform.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.transform.replicas

    - name: transform_node_storage_class_info
      help: "Elasticsearch transform node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.transform.storage.storageClassName
      metricValue:
        value: 1

    - name: transform_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.transform.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.transform.maxUnavailable

    ##### Metrics for coordinating topology #####

    - name: coordinating_node_replicas
      help: "Number of replicas for elasticsearch coordinating node"
      type: gauge
      field:
        path: .spec.topology.coordinating.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.coordinating.replicas

    - name: coordinating_node_storage_class_info
      help: "Elasticsearch coordinating node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.coordinating.storage.storageClassName
      metricValue:
        value: 1

    - name: coordinating_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.coordinating.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.coordinating.maxUnavailable
---
# Source: kubedb-one/charts/kubedb-metrics/templates/elasticsearch/ops-kubedb-com-elasticsearchopsrequest.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: ops-kubedb-com-elasticsearchopsrequest
spec:
  targetRef:
    apiVersion: ops.kubedb.com/v1alpha1
    kind: ElasticsearchOpsRequest
  commonLabels:
    - key: app
      valuePath: .spec.databaseRef.name
    - key: app_namespace
      valuePath: .metadata.namespace
    - key: type
      valuePath: .spec.type
  metrics:
    - name: type
      help: "Elasticsearch OpsRequest Type"
      type: gauge
      metricValue:
        value: 1
    - name: status_phase
      help: "The current phase of Elasticsearch OpsRequest."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Progressing
            metricValue:
              valueFromExpression: "int(phase == 'Progressing')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Successful
            metricValue:
              valueFromExpression: "int(phase == 'Successful')"
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mariadb/catalog-kubedb-com-mariadbversion.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: catalog-kubedb-com-mariadbversion
spec:
  targetRef:
    apiVersion: catalog.kubedb.com/v1alpha1
    kind: MariaDBVersion
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: info
      help: "MariaDB versions info"
      type: gauge
      labels:
        - key: deprecated
          valuePath: .spec.deprecated
        - key: db_image
          valuePath: .spec.db.image
        - key: exporter_image
          valuePath: .spec.exporter.image
        - key: stash_addon_backup_task
          valuePath: .spec.stash.addon.backupTask.name
        - key: stash_addon_restore_task
          valuePath: .spec.stash.addon.restoreTask.name
      metricValue:
        value: 1
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mariadb/kubedb-com-mariadb.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubedb-com-mariadb
spec:
  targetRef:
    apiVersion: kubedb.com/v1alpha2
    kind: MariaDB
  commonLabels:
    - key: app
      valuePath: .metadata.name
    - key: app_namespace
      valuePath: .metadata.namespace
  metrics:
    - name: created
      help: "Unix creation time stamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: replicas
      help: "Number of replicas of mariadb instance"
      type: gauge
      params:
        - key: obj
          valuePath: .
      metricValue:
        valueFromExpression: resource_replicas(obj)

    - name: status_phase
      help: "MariaDB instance current phase"
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Ready
            metricValue:
              valueFromExpression: "int(phase == 'Ready')"
          - labelValue: Halted
            metricValue:
              valueFromExpression: "int(phase == 'Halted')"
          - labelValue: Provisioning
            metricValue:
              valueFromExpression: "int(phase == 'Provisioning')"
          - labelValue: Critical
            metricValue:
              valueFromExpression: "int(phase == 'Critical')"
          - labelValue: NotReady
            metricValue:
              valueFromExpression: "int(phase == 'NotReady')"
          - labelValue: DataRestoring
            metricValue:
              valueFromExpression: "int(phase == 'DataRestoring')"

    - name: info
      help: "MariaDB instance information"
      type: gauge
      labels:
        - key: version
          valuePath: .spec.version
        - key: requireSSL
          valuePath: .spec.requireSSL
        - key: storageType
          valuePath: .spec.storageType
        - key: terminationPolicy
          valuePath: .spec.terminationPolicy
      metricValue:
        value: 1

    - name: status_conditions
      help: "MariaDB instance status condition"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: type
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1

    - name: resource_request_cpu
      help: "Requested CPU by MariaDB in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_memory
      help: "Requested memory by MariaDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_storage
      help: "Requested storage by MariaDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_limit_cpu
      help: "CPU limit for MariaDB in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_memory
      help: "Memory limit for MariaDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_storage
      help: "Storage limit for MariaDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mariadb/ops-kubedb-com-mariadbopsrequest.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: ops-kubedb-com-mariadbopsrequest
spec:
  targetRef:
    apiVersion: ops.kubedb.com/v1alpha1
    kind: MariaDBOpsRequest
  commonLabels:
    - key: app
      valuePath: .spec.databaseRef.name
    - key: app_namespace
      valuePath: .metadata.namespace
    - key: type
      valuePath: .spec.type
  metrics:
    - name: type
      help: "MariaDB OpsRequest type"
      type: gauge
      metricValue:
        value: 1
    - name: status_phase
      help: "MariaDB OpsRequest current phase."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Progressing
            metricValue:
              valueFromExpression: "int(phase == 'Progressing')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Successful
            metricValue:
              valueFromExpression: "int(phase == 'Successful')"
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mariadb/schema-kubedb-com-mariadbdatabase.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: schema-kubedb-com-mariadbdatabase
spec:
  targetRef:
    apiVersion: schema.kubedb.com/v1alpha1
    kind: MariaDBDatabase
  commonLabels:
    - key: app
      valuePath: .spec.database.serverRef.name
    - key: app_namespace
      valuePath: .spec.database.serverRef.namespace
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp
    - name: status_phase
      help: "MariaDB schema current phase."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: InProgress
            metricValue:
              valueFromExpression: "int(phase == 'InProgress')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Current
            metricValue:
              valueFromExpression: "int(phase == 'Current')"
          - labelValue: Expired
            metricValue:
              valueFromExpression: "int(phase == 'Expired')"
          - labelValue: Terminating
            metricValue:
              valueFromExpression: "int(phase == 'Terminating')"
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mongodb/catalog-kubedb-com-mongodbversion.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: catalog-kubedb-com-mongodbversion
spec:
  targetRef:
    apiVersion: catalog.kubedb.com/v1alpha1
    kind: MongoDBVersion
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: info
      help: "MongoDB versions info"
      type: gauge
      labels:
        - key: db_image
          valuePath: .spec.db.image
        - key: deprecated
          valuePath: .spec.deprecated
        - key: distribution
          valuePath: .spec.distribution
        - key: exporter_image
          valuePath: .spec.exporter.image
        - key: stash_addon_backup_task
          valuePath: .spec.stash.addon.backupTask.name
        - key: stash_addon_restore_task
          valuePath: .spec.stash.addon.restoreTask.name
      metricValue:
        value: 1
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mongodb/kubedb-com-mongodb.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubedb-com-mongodb
spec:
  targetRef:
    apiVersion: kubedb.com/v1alpha2
    kind: MongoDB
  commonLabels:
    - key: app
      valuePath: .metadata.name
    - key: app_namespace
      valuePath: .metadata.namespace
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: status_phase
      help: "MongoDB instance current phase"
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Ready
            metricValue:
              valueFromExpression: "int(phase == 'Ready')"
          - labelValue: Halted
            metricValue:
              valueFromExpression: "int(phase == 'Halted')"
          - labelValue: Provisioning
            metricValue:
              valueFromExpression: "int(phase == 'Provisioning')"
          - labelValue: Critical
            metricValue:
              valueFromExpression: "int(phase == 'Critical')"
          - labelValue: NotReady
            metricValue:
              valueFromExpression: "int(phase == 'NotReady')"
          - labelValue: DataRestoring
            metricValue:
              valueFromExpression: "int(phase == 'DataRestoring')"

    - name: info
      help: "MongoDB instance information"
      type: gauge
      labels:
        - key: clusterAuthMode
          valuePath: .spec.clusterAuthMode
        - key: sslMode
          valuePath: .spec.sslMode
        - key: storageType
          valuePath: .spec.storageType
        - key: terminationPolicy
          valuePath: .spec.terminationPolicy
        - key: version
          valuePath: .spec.version
      metricValue:
        value: 1

    - name: status_conditions
      help: "MongoDB instance status condition"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: type
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1

    - name: shard_enabled
      help: "MongoDB sharded topology enable info"
      type: gauge
      params:
        - key: topology
          valuePath: .spec.shardTopology
      metricValue:
        valueFromExpression: "int(topology != 'nil')"

    - name: resource_request_cpu
      help: "Requested CPU by MongoDB in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_memory
      help: "Requested memory by MongoDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_storage
      help: "Requested storage by MongoDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_limit_cpu
      help: "CPU limit for MongoDB in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_memory
      help: "Memory limit for MongoDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_storage
      help: "Storage limit for MongoDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: replicas
      help: "Number of replicas in the MongoDB replicaset"
      type: gauge
      field:
        path: .spec.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.replicas

    ##### Metrics config for mongodb sharded database #####

    - name: shard_shards
      help: "Number of shards of the MongoDB database"
      type: gauge
      field:
        path: .spec.shardTopology.shard.shards
        type: Integer
      metricValue:
        valueFromPath: .spec.shardTopology.shard.shards

    - name: shard_replicas
      help: "Number of replicas in the MongoDB shards"
      type: gauge
      field:
        path: .spec.shardTopology.shard.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.shardTopology.shard.replicas

    - name: configsvr_replicas
      help: "Number of replicas in MongoDB config server in sharded database"
      type: gauge
      field:
        path: .spec.shardTopology.configServer.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.shardTopology.configServer.replicas

    - name: mongos_replicas
      help: "Number of replicas in mongodb sharded mongos"
      type: gauge
      field:
        path: .spec.shardTopology.mongos.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.shardTopology.mongos.replicas
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mongodb/ops-kubedb-com-mongodbopsrequest.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: ops-kubedb-com-mongodbopsrequest
spec:
  targetRef:
    apiVersion: ops.kubedb.com/v1alpha1
    kind: MongoDBOpsRequest
  commonLabels:
    - key: app
      valuePath: .spec.databaseRef.name
    - key: app_namespace
      valuePath: .metadata.namespace
    - key: type
      valuePath: .spec.type
  metrics:
    - name: type
      help: "MongoDB OpsRequest Type"
      type: gauge
      metricValue:
        value: 1
    - name: status_phase
      help: "The current phase of MongoDB OpsRequest."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Progressing
            metricValue:
              valueFromExpression: "int(phase == 'Progressing')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Successful
            metricValue:
              valueFromExpression: "int(phase == 'Successful')"
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mongodb/schema-kubedb-com-mongodbdatabase.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: schema-kubedb-com-mongodbdatabase
spec:
  targetRef:
    apiVersion: schema.kubedb.com/v1alpha1
    kind: MongoDBDatabase
  commonLabels:
    - key: app
      valuePath: .spec.database.serverRef.name
    - key: app_namespace
      valuePath: .spec.database.serverRef.namespace
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp
    - name: status_phase
      help: "MongoDB schema current phase."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: InProgress
            metricValue:
              valueFromExpression: "int(phase == 'InProgress')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Current
            metricValue:
              valueFromExpression: "int(phase == 'Current')"
          - labelValue: Expired
            metricValue:
              valueFromExpression: "int(phase == 'Expired')"
          - labelValue: Terminating
            metricValue:
              valueFromExpression: "int(phase == 'Terminating')"
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mysql/catalog-kubedb-com-mysqlversion.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: catalog-kubedb-com-mysqlversion
spec:
  targetRef:
    apiVersion: catalog.kubedb.com/v1alpha1
    kind: MySQLVersion
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: info
      help: "MySQL versions info"
      type: gauge
      labels:
        - key: deprecated
          valuePath: .spec.deprecated
        - key: db_image
          valuePath: .spec.db.image
        - key: exporter_image
          valuePath: .spec.exporter.image
        - key: distribution
          valuePath: .spec.distribution
        - key: stash_addon_backup_task
          valuePath: .spec.stash.addon.backupTask.name
        - key: stash_addon_restore_task
          valuePath: .spec.stash.addon.restoreTask.name
      metricValue:
        value: 1
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mysql/kubedb-com-mysql.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubedb-com-mysql
spec:
  targetRef:
    apiVersion: kubedb.com/v1alpha2
    kind: MySQL
  commonLabels:
    - key: app
      valuePath: .metadata.name
    - key: app_namespace
      valuePath: .metadata.namespace
  metrics:
    - name: created
      help: "Unix creation time stamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: replicas
      help: "Number of replicas of mysql instance"
      type: gauge
      params:
        - key: obj
          valuePath: .
      metricValue:
        valueFromExpression: resource_replicas(obj)

    - name: status_phase
      help: "MySQL instance current phase"
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Ready
            metricValue:
              valueFromExpression: "int(phase == 'Ready')"
          - labelValue: Halted
            metricValue:
              valueFromExpression: "int(phase == 'Halted')"
          - labelValue: Provisioning
            metricValue:
              valueFromExpression: "int(phase == 'Provisioning')"
          - labelValue: Critical
            metricValue:
              valueFromExpression: "int(phase == 'Critical')"
          - labelValue: NotReady
            metricValue:
              valueFromExpression: "int(phase == 'NotReady')"
          - labelValue: DataRestoring
            metricValue:
              valueFromExpression: "int(phase == 'DataRestoring')"

    - name: info
      help: "MySQL instance information"
      type: gauge
      labels:
        - key: version
          valuePath: .spec.version
        - key: useAddressType
          valuePath: .spec.useAddressType
        - key: storageType
          valuePath: .spec.storageType
        - key: terminationPolicy
          valuePath: .spec.terminationPolicy
        - key: requireSSL
          valuePath: .spec.requireSSL
      metricValue:
        value: 1

    - name: status_conditions
      help: "MySQL instance status condition"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: type
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1

    - name: resource_request_cpu
      help: "Requested CPU by MySQL in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_memory
      help: "Requested memory by MySQL in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_storage
      help: "Requested storage by MySQL in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_limit_cpu
      help: "CPU limit for MySQL in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_memory
      help: "Memory limit for MySQL in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_storage
      help: "Storage limit for MySQL in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mysql/ops-kubedb-com-mysqlopsrequest.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: ops-kubedb-com-mysqlopsrequest
spec:
  targetRef:
    apiVersion: ops.kubedb.com/v1alpha1
    kind: MySQLOpsRequest
  commonLabels:
    - key: app
      valuePath: .spec.databaseRef.name
    - key: app_namespace
      valuePath: .metadata.namespace
    - key: type
      valuePath: .spec.type
  metrics:
    - name: type
      help: "MySQL Opsrequest type"
      type: gauge
      metricValue:
        value: 1
    - name: status_phase
      help: "The opsrequest current phase."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Progressing
            metricValue:
              valueFromExpression: "int(phase == 'Progressing')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Successful
            metricValue:
              valueFromExpression: "int(phase == 'Successful')"
---
# Source: kubedb-one/charts/kubedb-metrics/templates/mysql/schema-kubedb-com-mysqldatabase.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: schema-kubedb-com-mysqldatabase
spec:
  targetRef:
    apiVersion: schema.kubedb.com/v1alpha1
    kind: MySQLDatabase
  commonLabels:
    - key: app
      valuePath: .spec.database.serverRef.name
    - key: app_namespace
      valuePath: .spec.database.serverRef.namespace
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp
    - name: status_phase
      help: "MySQL schema current phase."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: InProgress
            metricValue:
              valueFromExpression: "int(phase == 'InProgress')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Current
            metricValue:
              valueFromExpression: "int(phase == 'Current')"
          - labelValue: Expired
            metricValue:
              valueFromExpression: "int(phase == 'Expired')"
          - labelValue: Terminating
            metricValue:
              valueFromExpression: "int(phase == 'Terminating')"
---
# Source: kubedb-one/charts/kubedb-metrics/templates/perconaxtradb/catalog-kubedb-com-perconaxtradbversion.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: catalog-kubedb-com-perconaxtradbversion
spec:
  targetRef:
    apiVersion: catalog.kubedb.com/v1alpha1
    kind: PerconaXtraDBVersion
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: info
      help: "PerconaXtraDB versions info"
      type: gauge
      labels:
        - key: deprecated
          valuePath: .spec.deprecated
        - key: db_image
          valuePath: .spec.db.image
        - key: exporter_image
          valuePath: .spec.exporter.image
        - key: stash_addon_backup_task
          valuePath: .spec.stash.addon.backupTask.name
        - key: stash_addon_restore_task
          valuePath: .spec.stash.addon.restoreTask.name
      metricValue:
        value: 1
---
# Source: kubedb-one/charts/kubedb-metrics/templates/perconaxtradb/kubedb-com-perconaxtradb.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubedb-com-perconaxtradb
spec:
  targetRef:
    apiVersion: kubedb.com/v1alpha2
    kind: PerconaXtraDB
  commonLabels:
    - key: app
      valuePath: .metadata.name
    - key: app_namespace
      valuePath: .metadata.namespace
  metrics:
    - name: created
      help: "Unix creation time stamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: replicas
      help: "Number of replicas of perconaxtradb instance"
      type: gauge
      params:
        - key: obj
          valuePath: .
      metricValue:
        valueFromExpression: resource_replicas(obj)

    - name: status_phase
      help: "PerconaXtraDB instance current phase"
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Ready
            metricValue:
              valueFromExpression: "int(phase == 'Ready')"
          - labelValue: Halted
            metricValue:
              valueFromExpression: "int(phase == 'Halted')"
          - labelValue: Provisioning
            metricValue:
              valueFromExpression: "int(phase == 'Provisioning')"
          - labelValue: Critical
            metricValue:
              valueFromExpression: "int(phase == 'Critical')"
          - labelValue: NotReady
            metricValue:
              valueFromExpression: "int(phase == 'NotReady')"
          - labelValue: DataRestoring
            metricValue:
              valueFromExpression: "int(phase == 'DataRestoring')"

    - name: info
      help: "PerconaXtraDB instance information"
      type: gauge
      labels:
        - key: version
          valuePath: .spec.version
        - key: requireSSL
          valuePath: .spec.requireSSL
        - key: storageType
          valuePath: .spec.storageType
        - key: terminationPolicy
          valuePath: .spec.terminationPolicy
      metricValue:
        value: 1

    - name: status_conditions
      help: "PerconaXtraDB instance status condition"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: type
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1

    - name: resource_request_cpu
      help: "Requested CPU by PerconaXtraDB in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_memory
      help: "Requested memory by PerconaXtraDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_storage
      help: "Requested storage by PerconaXtraDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_limit_cpu
      help: "CPU limit for PerconaXtraDB in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_memory
      help: "Memory limit for PerconaXtraDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_storage
      help: "Storage limit for PerconaXtraDB in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)
---
# Source: kubedb-one/charts/kubedb-metrics/templates/perconaxtradb/ops-kubedb-com-perconaxtradbopsrequest.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: ops-kubedb-com-perconaxtradbopsrequest
spec:
  targetRef:
    apiVersion: ops.kubedb.com/v1alpha1
    kind: PerconaXtraDBOpsRequest
  commonLabels:
    - key: app
      valuePath: .spec.databaseRef.name
    - key: app_namespace
      valuePath: .metadata.namespace
    - key: type
      valuePath: .spec.type
  metrics:
    - name: type
      help: "PerconaXtraDB OpsRequest type"
      type: gauge
      metricValue:
        value: 1
    - name: status_phase
      help: "PerconaXtraDB OpsRequest current phase."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Progressing
            metricValue:
              valueFromExpression: "int(phase == 'Progressing')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Successful
            metricValue:
              valueFromExpression: "int(phase == 'Successful')"
---
# Source: kubedb-one/charts/kubedb-metrics/templates/postgres/catalog-kubedb-com-postgresversion.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: catalog-kubedb-com-postgresversion
spec:
  targetRef:
    apiVersion: catalog.kubedb.com/v1alpha1
    kind: PostgresVersion
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: info
      help: "Postgres versions info"
      type: gauge
      labels:
        - key: coordinator_image
          valuePath: .spec.coordinator.image
        - key: db_image
          valuePath: .spec.db.image
        - key: deprecated
          valuePath: .spec.deprecated
        - key: distribution
          valuePath: .spec.distribution
        - key: exporter_image
          valuePath: .spec.exporter.image
        - key: stash_addon_backup_task
          valuePath: .spec.stash.addon.backupTask.name
        - key: stash_addon_restore_task
          valuePath: .spec.stash.addon.restoreTask.name
      metricValue:
        value: 1
---
# Source: kubedb-one/charts/kubedb-metrics/templates/postgres/kubedb-com-postgres.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubedb-com-postgres
spec:
  targetRef:
    apiVersion: kubedb.com/v1alpha2
    kind: Postgres
  commonLabels:
    - key: app
      valuePath: .metadata.name
    - key: app_namespace
      valuePath: .metadata.namespace
  metrics:
    - name: created
      help: "Unix creation time stamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: replicas
      help: "Number of replicas of postgres instance"
      type: gauge
      params:
        - key: obj
          valuePath: .
      metricValue:
        valueFromExpression: resource_replicas(obj)

    - name: status_phase
      help: "Postgres instance current phase"
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Ready
            metricValue:
              valueFromExpression: "int(phase == 'Ready')"
          - labelValue: Halted
            metricValue:
              valueFromExpression: "int(phase == 'Halted')"
          - labelValue: Provisioning
            metricValue:
              valueFromExpression: "int(phase == 'Provisioning')"
          - labelValue: Critical
            metricValue:
              valueFromExpression: "int(phase == 'Critical')"
          - labelValue: NotReady
            metricValue:
              valueFromExpression: "int(phase == 'NotReady')"
          - labelValue: DataRestoring
            metricValue:
              valueFromExpression: "int(phase == 'DataRestoring')"

    - name: info
      help: "Postgres instance information"
      type: gauge
      labels:
        - key: clientAuthMode
          valuePath: .spec.clientAuthMode
        - key: sslMode
          valuePath: .spec.sslMode
        - key: storageType
          valuePath: .spec.storageType
        - key: terminationPolicy
          valuePath: .spec.terminationPolicy
        - key: version
          valuePath: .spec.version
        - key: standby_mode
          valuePath: .spec.standbyMode
        - key: streaming_mode
          valuePath: .spec.streamingMode
      metricValue:
        value: 1

    - name: status_conditions
      help: "Postgres instance status condition"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: type
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1

    - name: leader_election_info
      help: "Postgres leader election config info"
      type: gauge
      labels:
        - key: election_tick
          valuePath: .spec.leaderElection.electionTick
        - key: heart_beat_tick
          valuePath: .spec.leaderElection.heartbeatTick
        - key: maximum_lag_before_failover
          valuePath: .spec.leaderElection.maximumLagBeforeFailover
        - key: period
          valuePath: .spec.leaderElection.period
      metricValue:
        value: 1

    - name: monitoring_info
      help: "Postgres monitoring agent info"
      type: gauge
      labels:
        - key: agent
          valuePath: .spec.monitor.agent
      metricValue:
        value: 1

    - name: tls_info
      help: "Postgres database tls info"
      type: gauge
      labels:
        - key: issuers_name
          valuePath: .spec.tls.issuerRef.name
      metricValue:
        value: 1

    - name: resource_request_cpu
      help: "Requested CPU by Postgres in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_memory
      help: "Requested memory by Postgres in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_storage
      help: "Requested storage by Postgres in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_limit_cpu
      help: "CPU limit for Postgres in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_memory
      help: "Memory limit for Postgres in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_storage
      help: "Storage limit for Postgres in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)
---
# Source: kubedb-one/charts/kubedb-metrics/templates/postgres/ops-kubedb-com-postgresopsrequest.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: ops-kubedb-com-postgresopsrequest
spec:
  targetRef:
    apiVersion: ops.kubedb.com/v1alpha1
    kind: PostgresOpsRequest
  commonLabels:
    - key: app
      valuePath: .spec.databaseRef.name
    - key: app_namespace
      valuePath: .metadata.namespace
    - key: type
      valuePath: .spec.type
  metrics:
    - name: type
      help: "Postgres OpsRequest Type"
      type: gauge
      metricValue:
        value: 1
    - name: status_phase
      help: "The current phase of Postgres OpsRequest."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Progressing
            metricValue:
              valueFromExpression: "int(phase == 'Progressing')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Successful
            metricValue:
              valueFromExpression: "int(phase == 'Successful')"
---
# Source: kubedb-one/charts/kubedb-metrics/templates/postgres/schema-kubedb-com-postgresdatabase.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: schema-kubedb-com-postgresdatabase
spec:
  targetRef:
    apiVersion: schema.kubedb.com/v1alpha1
    kind: PostgresDatabase
  commonLabels:
    - key: app
      valuePath: .spec.database.serverRef.name
    - key: app_namespace
      valuePath: .spec.database.serverRef.namespace
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp
    - name: status_phase
      help: "PostgreSQL schema current phase."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: InProgress
            metricValue:
              valueFromExpression: "int(phase == 'InProgress')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Current
            metricValue:
              valueFromExpression: "int(phase == 'Current')"
          - labelValue: Expired
            metricValue:
              valueFromExpression: "int(phase == 'Expired')"
          - labelValue: Terminating
            metricValue:
              valueFromExpression: "int(phase == 'Terminating')"
---
# Source: kubedb-one/charts/kubedb-metrics/templates/proxysql/catalog-kubedb-com-proxysqlversion.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: catalog-kubedb-com-proxysqversion
spec:
  targetRef:
    apiVersion: catalog.kubedb.com/v1alpha1
    kind: ProxySQLVersion
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: info
      help: "ProxySQL versions info"
      type: gauge
      labels:
        - key: deprecated
          valuePath: .spec.deprecated
        - key: proxysql_image
          valuePath: .spec.proxysql.image
      metricValue:
        value: 1
---
# Source: kubedb-one/charts/kubedb-metrics/templates/proxysql/kubedb-com-proxysql.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubedb-com-proxysql
spec:
  targetRef:
    apiVersion: kubedb.com/v1alpha2
    kind: ProxySQL
  commonLabels:
    - key: app
      valuePath: .metadata.name
    - key: app_namespace
      valuePath: .metadata.namespace
  metrics:
    - name: created
      help: "Unix creation time stamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: replicas
      help: "Number of replicas of proxysql instance"
      type: gauge
      params:
        - key: obj
          valuePath: .
      metricValue:
        valueFromExpression: resource_replicas(obj)

    - name: status_phase
      help: "ProxySQL instance current phase"
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Ready
            metricValue:
              valueFromExpression: "int(phase == 'Ready')"
          - labelValue: Halted
            metricValue:
              valueFromExpression: "int(phase == 'Halted')"
          - labelValue: Provisioning
            metricValue:
              valueFromExpression: "int(phase == 'Provisioning')"
          - labelValue: Critical
            metricValue:
              valueFromExpression: "int(phase == 'Critical')"
          - labelValue: NotReady
            metricValue:
              valueFromExpression: "int(phase == 'NotReady')"
          - labelValue: DataRestoring
            metricValue:
              valueFromExpression: "int(phase == 'DataRestoring')"

    - name: info
      help: "ProxySQL instance information"
      type: gauge
      labels:
        - key: version
          valuePath: .spec.version
        - key: terminationPolicy
          valuePath: .spec.terminationPolicy
        - key: backend
          valuePath: .spec.backend.name
        - key: ssl
          valuePath: .spec.tls
      metricValue:
        value: 1

    - name: status_conditions
      help: "ProxySQL instance status condition"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: type
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1

    - name: resource_request_cpu
      help: "Requested CPU by ProxySQL in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_memory
      help: "Requested memory by ProxySQL in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_storage
      help: "Requested storage by ProxySQL in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_limit_cpu
      help: "CPU limit for ProxySQL in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_memory
      help: "Memory limit for ProxySQL in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_storage
      help: "Storage limit for ProxySQL in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)
---
# Source: kubedb-one/charts/kubedb-metrics/templates/proxysql/ops-kubedb-com-proxysqlopsrequest.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: ops-kubedb-com-proxysqlopsrequest
spec:
  targetRef:
    apiVersion: ops.kubedb.com/v1alpha1
    kind: ProxySQLOpsRequest
  commonLabels:
    - key: app
      valuePath: .spec.proxyRef.name
    - key: app_namespace
      valuePath: .metadata.namespace
    - key: type
      valuePath: .spec.type
  metrics:
    - name: type
      help: "ProxySQL OpsRequest type"
      type: gauge
      metricValue:
        value: 1
    - name: status_phase
      help: "ProxySQL OpsRequest current phase."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Progressing
            metricValue:
              valueFromExpression: "int(phase == 'Progressing')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Successful
            metricValue:
              valueFromExpression: "int(phase == 'Successful')"
---
# Source: kubedb-one/charts/kubedb-metrics/templates/redis/catalog-kubedb-com-redisversion.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: catalog-kubedb-com-redisversion
spec:
  targetRef:
    apiVersion: catalog.kubedb.com/v1alpha1
    kind: RedisVersion
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: info
      help: "Redis versions info"
      type: gauge
      labels:
        - key: deprecated
          valuePath: .spec.deprecated
        - key: db_image
          valuePath: .spec.db.image
        - key: exporter_image
          valuePath: .spec.exporter.image
      metricValue:
        value: 1
---
# Source: kubedb-one/charts/kubedb-metrics/templates/redis/kubedb-com-redis.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubedb-com-redis
spec:
  targetRef:
    apiVersion: kubedb.com/v1alpha2
    kind: Redis
  commonLabels:
    - key: app
      valuePath: .metadata.name
    - key: app_namespace
      valuePath: .metadata.namespace
  metrics:
    - name: created
      help: "Unix creation time stamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: mode
      help: "Redis database instance mode"
      type: gauge
      labels:
        - key: mode
          valuePath: .spec.mode
      metricValue:
        value: 1

    - name: cluster_master_nodes
      help: "Number of master nodes in redis cluster"
      type: gauge
      field:
        path: .spec.cluster.master
        type: Integer
      metricValue:
        valueFromPath: .spec.cluster.master

    - name: cluster_replicas
      help: "Number of replicas in redis cluster"
      type: gauge
      field:
        path: .spec.cluster.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.cluster.replicas

    - name: replicas
      help: "Number of replicas of redis instance"
      type: gauge
      params:
        - key: obj
          valuePath: .
      metricValue:
        valueFromExpression: resource_replicas(obj)

    - name: status_phase
      help: "Redis instance current phase"
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Ready
            metricValue:
              valueFromExpression: "int(phase == 'Ready')"
          - labelValue: Halted
            metricValue:
              valueFromExpression: "int(phase == 'Halted')"
          - labelValue: Provisioning
            metricValue:
              valueFromExpression: "int(phase == 'Provisioning')"
          - labelValue: Critical
            metricValue:
              valueFromExpression: "int(phase == 'Critical')"
          - labelValue: NotReady
            metricValue:
              valueFromExpression: "int(phase == 'NotReady')"
          - labelValue: DataRestoring
            metricValue:
              valueFromExpression: "int(phase == 'DataRestoring')"

    - name: info
      help: "Redis instance information"
      type: gauge
      labels:
        - key: version
          valuePath: .spec.version
        - key: mode
          valuePath: .spec.mode
        - key: storageType
          valuePath: .spec.storageType
        - key: terminationPolicy
          valuePath: .spec.terminationPolicy
      metricValue:
        value: 1

    - name: status_conditions
      help: "Redis instance status condition"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: type
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1

    - name: resource_request_cpu
      help: "Requested CPU by Redis in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_memory
      help: "Requested memory by Redis in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_storage
      help: "Requested storage by Redis in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_limit_cpu
      help: "CPU limit for Redis in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_memory
      help: "Memory limit for Redis in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_storage
      help: "Storage limit for Redis in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)
---
# Source: kubedb-one/charts/kubedb-metrics/templates/redis/kubedb-com-redissentinel.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubedb-com-redissentinel
spec:
  targetRef:
    apiVersion: kubedb.com/v1alpha2
    kind: RedisSentinel
  metrics:
    - name: created
      help: "Unix creation time stamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: replicas
      help: "Number of replicas of redis sentinel instance"
      type: gauge
      params:
        - key: obj
          valuePath: .
      metricValue:
        valueFromExpression: resource_replicas(obj)

    - name: tls_enabled
      help: "Redis sentinel tls info"
      type: gauge
      params:
        - key: tls
          valuePath: .spec.tls
      metricValue:
        valueFromExpression: int(tls != 'nil')

    - name: status_phase
      help: "Redis sentinel instance current phase"
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Ready
            metricValue:
              valueFromExpression: "int(phase == 'Ready')"
          - labelValue: Halted
            metricValue:
              valueFromExpression: "int(phase == 'Halted')"
          - labelValue: Provisioning
            metricValue:
              valueFromExpression: "int(phase == 'Provisioning')"
          - labelValue: Critical
            metricValue:
              valueFromExpression: "int(phase == 'Critical')"
          - labelValue: NotReady
            metricValue:
              valueFromExpression: "int(phase == 'NotReady')"
          - labelValue: DataRestoring
            metricValue:
              valueFromExpression: "int(phase == 'DataRestoring')"

    - name: info
      help: "Redis senitel instance information"
      type: gauge
      labels:
        - key: version
          valuePath: .spec.version
        - key: storageType
          valuePath: .spec.storageType
        - key: terminationPolicy
          valuePath: .spec.terminationPolicy
      metricValue:
        value: 1

    - name: status_conditions
      help: "Redis sentinel instance status condition"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: type
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1

    - name: resource_request_cpu
      help: "Requested CPU by Redis sentinel in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_memory
      help: "Requested memory by Redis sentinel in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_storage
      help: "Requested storage by Redis sentinel in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_limit_cpu
      help: "CPU limit for Redis sentinel in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_memory
      help: "Memory limit for Redis sentinel in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_storage
      help: "Storage limit for Redis sentinel in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)
---
# Source: kubedb-one/charts/kubedb-metrics/templates/redis/ops-kubedb-com-redisopsrequest.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: ops-kubedb-com-redisopsrequest
spec:
  targetRef:
    apiVersion: ops.kubedb.com/v1alpha1
    kind: RedisOpsRequest
  commonLabels:
    - key: app
      valuePath: .spec.databaseRef.name
    - key: app_namespace
      valuePath: .metadata.namespace
    - key: type
      valuePath: .spec.type
  metrics:
    - name: type
      help: "Redis OpsRequest Type"
      type: gauge
      metricValue:
        value: 1
    - name: status_phase
      help: "The current phase of Redis OpsRequest."
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Progressing
            metricValue:
              valueFromExpression: "int(phase == 'Progressing')"
          - labelValue: Failed
            metricValue:
              valueFromExpression: "int(phase == 'Failed')"
          - labelValue: Pending
            metricValue:
              valueFromExpression: "int(phase == 'Pending')"
          - labelValue: Successful
            metricValue:
              valueFromExpression: "int(phase == 'Successful')"
---
# Source: kubedb-one/charts/stash-metrics/templates/metricsconfig-backupconfiguration.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: stash-appscode-com-backupconfiguration
spec:
  targetRef:
    apiVersion: stash.appscode.com/v1beta1
    kind: BackupConfiguration
  commonLabels:
    - key: invoker_kind
      value: "BackupConfiguration"
    - key: invoker_name
      valuePath: .metadata.name
  metrics:
    - name: created
      help: "Unix creation timestamp of this BackupConfiguration object"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp
    - name: info
      help: "General information about this BackupConfiguration"
      type: gauge
      labels:
        - key: driver
          valuePath: .spec.driver
        - key: repository
          valuePath: .spec.repository.name
        - key: schedule
          valuePath: .spec.schedule
        - key: target_api_version
          valuePath: .spec.target.ref.apiVersion
        - key: target_kind
          valuePath: .spec.target.ref.kind
        - key: target_name
          valuePath: .spec.target.ref.name
      metricValue:
        value: 1
    - name: conditions
      help: "Current conditions of this BackupConfiguration"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: condition
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1
---
# Source: kubedb-one/charts/stash-metrics/templates/metricsconfig-backupsession.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: stash-appscode-com-backupsession
spec:
  targetRef:
    apiVersion: stash.appscode.com/v1beta1
    kind: BackupSession
  commonLabels:
    - key: invoker_api_group
      valuePath: .spec.invoker.apiGroup
    - key: invoker_kind
      valuePath: .spec.invoker.kind
    - key: invoker_name
      valuePath: .spec.invoker.name
  metrics:
    - name: created
      help: "Unix creation timestamp of this BackupSession"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp
    - name: info
      help: "General information about BackupSession"
      type: gauge
      labels:
        - key: phase
          valuePath: .status.phase
      metricValue:
        value: 1
---
# Source: kubedb-one/charts/stash-metrics/templates/metricsconfig-repository.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: stash-appscode-com-repository
spec:
  targetRef:
    apiVersion: stash.appscode.com/v1alpha1
    kind: Repository
  metrics:
    - name: created
      help: "Unix creation timestamp of this Repository"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp
---
# Source: kubedb-one/charts/stash-metrics/templates/metricsconfig-restoresession.yaml
apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: stash-appscode-com-restoresession
spec:
  targetRef:
    apiVersion: stash.appscode.com/v1beta1
    kind: RestoreSession
  commonLabels:
    - key: invoker_kind
      value: "RestoreSession"
    - key: invoker_name
      valuePath: .metadata.name
  metrics:
    - name: created
      help: "Unix creation timestamp of this RestoreSession object"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp
    - name: info
      help: "General information about this RestoreSession"
      type: gauge
      labels:
        - key: driver
          valuePath: .spec.driver
        - key: repository
          valuePath: .spec.repository.name
        - key: target_api_version
          valuePath: .spec.target.ref.apiVersion
        - key: target_kind
          valuePath: .spec.target.ref.kind
        - key: target_name
          valuePath: .spec.target.ref.name
        - key: phase
          valuePath: .status.phase
      metricValue:
        value: 1
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/mongodb-4.2.24-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '4.2.24'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2023.11.30_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:4.2.24'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.32.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.2.3
      restoreTask:
        name: mongodb-restore-4.2.3
  updateConstraints:
    allowlist:
    - '>= 4.4.0, < 5.0.0'
  version: 4.2.24
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/mongodb-4.2.24-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-4.2.24'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2023.11.30_mongo'
  db:
    image: 'percona/percona-server-mongodb:4.2.24'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.32.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.4.6
      restoreTask:
        name: mongodb-restore-4.4.6
  updateConstraints:
    allowlist:
    - '>= 5.0.0'
  version: 4.2.24
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/mongodb-4.4.26-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '4.4.26'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2023.11.30_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:4.4.26'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.32.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.4.6
      restoreTask:
        name: mongodb-restore-4.4.6
  updateConstraints:
    allowlist:
    - '>= 5.0.0'
  version: 4.4.26
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/mongodb-4.4.26-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-4.4.26'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2023.11.30_mongo'
  db:
    image: 'percona/percona-server-mongodb:4.4.26'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.32.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.4.6
      restoreTask:
        name: mongodb-restore-4.4.6
  updateConstraints:
    allowlist:
    - '>= 5.0.0'
  version: 4.4.26
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/mongodb-5.0.23-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '5.0.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2023.11.30_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:5.0.23'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.32.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-5.0.15
      restoreTask:
        name: mongodb-restore-5.0.15
  version: 5.0.23
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/mongodb-5.0.23-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-5.0.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: ManifestBackup
        manifestRestore:
          name: ManifestRestore
        volumeSnapshot:
          name: VolumeSnapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2023.11.30_mongo'
  db:
    image: 'percona/percona-server-mongodb:5.0.23'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.32.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 5.0.23
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/mongodb-6.0.12-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '6.0.12'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2023.11.30_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:6.0.12'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.32.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 6.0.12
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/mongodb-6.0.12-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-6.0.12'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: ManifestBackup
        manifestRestore:
          name: ManifestRestore
        volumeSnapshot:
          name: VolumeSnapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2023.11.30_mongo'
  db:
    image: 'percona/percona-server-mongodb:6.0.12'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.32.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v10'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 6.0.12
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/mongodb-7.0.4-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-7.0.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: ManifestBackup
        manifestRestore:
          name: ManifestRestore
        volumeSnapshot:
          name: VolumeSnapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2023.11.30_mongo'
  db:
    image: 'percona/percona-server-mongodb:7.0.4'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.32.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v10'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 7.0.4
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mongodb/mongodb-7.0.5-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '7.0.5'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: ManifestBackup
        manifestRestore:
          name: ManifestRestore
        volumeSnapshot:
          name: VolumeSnapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2023.11.30_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:7.0.5'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.32.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v10'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 7.0.5
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/autoscaler/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.autoscaling.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-autoscaler
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mongodbautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/mongodbautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["autoscaling.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbautoscalers"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: elasticsearchautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/elasticsearchautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["autoscaling.kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearchautoscalers"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mariadbautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/mariadbautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["mariadbautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mysqlautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/mysqlautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["mysqlautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: postgresautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/postgresautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["postgresautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redisautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/redisautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["redisautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redissentinelautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/redissentinelautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["redissentinelautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/dashboard/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.elasticsearch.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-dashboard
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: elasticsearchdashboardwebhook.mutators.elasticsearch.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.elasticsearch.kubedb.com/v1alpha1/elasticsearchdashboardwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["elasticsearch.kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearchdashboards"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/ops-manager/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.ops.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mysqlopsrequestwebhook.mutators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.ops.kubedb.com/v1alpha1/mysqlopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqlopsrequests"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/provisioner/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: elasticsearchwebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/elasticsearchwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: postgreswebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/postgreswebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mysqlwebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mysqlwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mongodbwebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mongodbwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: rediswebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/rediswebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redissentinelwebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/redissentinelwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["redissentinels"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mariadbwebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mariadbwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mariadbs"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: kafkawebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/kafkawebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: [ "kubedb.com" ]
      apiVersions: [ "*" ]
      resources: [ "kafkas" ]
      operations: [ "CREATE", "UPDATE" ]
  admissionReviewVersions: [ "v1beta1" ]
  failurePolicy: Ignore
  sideEffects: None
- name: connectclusterwebhook.mutators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kafka.kubedb.com/v1alpha1/connectclusterwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: [ "kafka.kubedb.com" ]
      apiVersions: [ "*" ]
      resources: [ "connectclusters" ]
      operations: [ "CREATE", "UPDATE" ]
  admissionReviewVersions: [ "v1beta1" ]
  failurePolicy: Ignore
  sideEffects: None
- name: connectorwebhook.mutators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kafka.kubedb.com/v1alpha1/connectorwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: [ "kafka.kubedb.com" ]
      apiVersions: [ "*" ]
      resources: [ "connectors" ]
      operations: [ "CREATE", "UPDATE" ]
  admissionReviewVersions: [ "v1beta1" ]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/schema-manager/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.schema.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-schema-manager
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mysqldatabasewebhook.mutators.schema.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.schema.kubedb.com/v1alpha1/mysqldatabasewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["schema.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqldatabases"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mongodbdatabasewebhook.mutators.schema.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.schema.kubedb.com/v1alpha1/mongodbdatabasewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["schema.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbdatabases"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/mysql-5.7.42-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '5.7.42-debian'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: ManifestBackup
        manifestRestore:
          name: ManifestRestore
        volumeSnapshot:
          name: VolumeSnapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.2.0-rc.0_5.7.44'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.19.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:5.7.42-debian'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:5.7-v4'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-5.7.25
      restoreTask:
        name: mysql-restore-5.7.25
  updateConstraints:
    denylist:
      groupReplication:
      - < 5.7.42
      standalone:
      - < 5.7.42
  version: 5.7.42
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/mysql-5.7.44-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '5.7.44'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.2.0-rc.0_5.7.44'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.19.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:5.7.44-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:5.7-v4'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-5.7.25
      restoreTask:
        name: mysql-restore-5.7.25
  updateConstraints:
    denylist:
      groupReplication:
      - < 5.7.44
      standalone:
      - < 5.7.44
  version: 5.7.44
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/mysql-8.0.31-mysql.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.0.31-innodb'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.2.0-rc.0_8.0.35'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.19.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.0.31-oracle'
  distribution: MySQL
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  router:
    image: 'mysql/mysql-router:8.0.31'
  routerInitContainer:
    image: 'ghcr.io/kubedb/mysql-router-init:v0.19.0-rc.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.0.31
      standalone:
      - < 8.0.31
  version: 8.0.31
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/mysql-8.0.35-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.0.35'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.2.0-rc.0_8.0.35'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.19.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.0.35-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.0.35
      standalone:
      - < 8.0.35
  version: 8.0.35
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/mysql-8.1.0-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.1.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.2.0-rc.0_8.1.0'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.19.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.1.0-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.1.0
      standalone:
      - < 8.1.0
  version: 8.1.0
---
# Source: kubedb-one/charts/kubedb-catalog/templates/mysql/mysql-8.2.0-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.2.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.2.0-rc.0_8.2.0'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.19.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.2.0-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.1.0'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.28.0-rc.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.2.0
      standalone:
      - < 8.2.0
  version: 8.2.0
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-10.23-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '10.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:10.23-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-10.14
      restoreTask:
        name: postgres-restore-10.14
  updateConstraints:
    allowlist:
    - '>= 11.14, <= 14.1'
  version: "10.23"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-10.23-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '10.23-bullseye'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: bullseye
    image: 'ghcr.io/appscode-images/postgres:10.23-bullseye'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-10.14
      restoreTask:
        name: postgres-restore-10.14
  updateConstraints:
    allowlist:
    - '>= 11.14, <= 14.1'
  version: "10.23"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-11.11-timescaledb.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.1.0-pg11'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_11.22-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    image: 'timescale/timescaledb:2.1.0-pg11-oss'
  distribution: TimescaleDB
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-11.9
      restoreTask:
        name: postgres-restore-11.9
  version: "11.11"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-11.14-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '11.14-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_11.22-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    image: 'postgis/postgis:11-3.1'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-11.9
      restoreTask:
        name: postgres-restore-11.9
  version: "11.14"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-11.22-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '11.22'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_11.22-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:11.22-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-11.9
      restoreTask:
        name: postgres-restore-11.9
  updateConstraints:
    allowlist:
    - '>= 12.9, <= 14.1'
  version: "11.22"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-11.22-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '11.22-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_11.22-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:11.22-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-11.9
      restoreTask:
        name: postgres-restore-11.9
  updateConstraints:
    allowlist:
    - '>= 12.9, <= 14.1'
  version: "11.22"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-12.17-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '12.17'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_12.17-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:12.17-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-12.4
      restoreTask:
        name: postgres-restore-12.4
  updateConstraints:
    allowlist:
    - "13.5"
    - "14.1"
  version: "12.17"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-12.17-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '12.17-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_12.17-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:12.17-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-12.4
      restoreTask:
        name: postgres-restore-12.4
  updateConstraints:
    allowlist:
    - "13.5"
    - "14.1"
  version: "12.17"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-12.6-timescaledb.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.1.0-pg12'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_12.17-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    image: 'timescale/timescaledb:2.1.0-pg12-oss'
  distribution: TimescaleDB
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-12.4
      restoreTask:
        name: postgres-restore-12.4
  version: "12.6"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-12.9-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '12.9-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_12.17-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    image: 'postgis/postgis:12-3.1'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-12.4
      restoreTask:
        name: postgres-restore-12.4
  version: "12.9"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-13.13-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '13.13'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_13.13-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:13.13-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  updateConstraints:
    allowlist:
    - "14.1"
  version: "13.13"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-13.13-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '13.13-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_13.13-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:13.13-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  updateConstraints:
    allowlist:
    - "14.1"
  version: "13.13"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-13.2-timescaledb.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.1.0-pg13'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_13.13-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    image: 'timescale/timescaledb:2.1.0-pg13-oss'
  distribution: TimescaleDB
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  version: "13.2"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-13.5-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '13.5-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_13.13-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    image: 'postgis/postgis:13-3.1'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  version: "13.5"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-14.1-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '14.1-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_14.10-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    image: 'postgis/postgis:14-3.1'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.1"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-14.1-timescaledb.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.5.0-pg14.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_14.10-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    image: 'timescale/timescaledb:2.5.0-pg14-oss'
  distribution: TimescaleDB
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.1"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-14.10-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '14.10'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_14.10-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:14.10-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.10"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-14.10-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '14.10-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_14.10-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:14.10-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.10"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-15.5-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '15.5'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_15.5-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:15.5-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "14.2"
  version: "15.5"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-15.5-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '15.5-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_15.5-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:15.5-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "14.2"
  version: "15.5"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-16.1-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '16.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_16.1-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:16.1-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "16.1"
  version: "16.1"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/postgres/postgres-16.1-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '16.1-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.2.0-rc.0_16.1-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.25.0-rc.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:16.1-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.11.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "16.1"
  version: "16.1"
---
# Source: kubedb-one/charts/kubedb-catalog/templates/redis/redis-4.0.11.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '4.0.11'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.20.0-rc.0'
  db:
    image: 'ghcr.io/kubedb/redis:4.0.11'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:v0.21.1'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.7.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  version: 4.0.11
---
# Source: kubedb-one/charts/kubedb-catalog/templates/redis/redis-5.0.14.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '5.0.14'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.20.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/redis:5.0.14-bullseye'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.7.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-5.0.13
      restoreTask:
        name: redis-restore-5.0.13
  version: 5.0.14
---
# Source: kubedb-one/charts/kubedb-catalog/templates/redis/redis-6.0.20.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '6.0.20'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.20.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/redis:6.0.20-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.7.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-6.2.5
      restoreTask:
        name: redis-restore-6.2.5
  version: 6.0.20
---
# Source: kubedb-one/charts/kubedb-catalog/templates/redis/redis-6.2.14.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '6.2.14'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.20.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/redis:6.2.14-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.7.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-6.2.5
      restoreTask:
        name: redis-restore-6.2.5
  version: 6.2.14
---
# Source: kubedb-one/charts/kubedb-catalog/templates/redis/redis-7.0.14.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.0.14'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.20.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.0.14-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.7.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.0.14
---
# Source: kubedb-one/charts/kubedb-catalog/templates/redis/redis-7.0.15.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.0.15'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.20.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.0.15-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.7.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.0.15
---
# Source: kubedb-one/charts/kubedb-catalog/templates/redis/redis-7.2.3.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.2.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.20.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.2.3-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.7.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.2.3
---
# Source: kubedb-one/charts/kubedb-catalog/templates/redis/redis-7.2.4.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.2.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.1.26-rc.0
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.1.26-rc.0"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.20.0-rc.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.2.4-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.9.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.7.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.2.4
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/5.6.4/elasticsearch-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-backup-5.6.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-backup-5.6.4
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/5.6.4/elasticsearch-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-restore-5.6.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-restore-5.6.4
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.2.4/elasticsearch-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-backup-6.2.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-backup-6.2.4
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.2.4/elasticsearch-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-restore-6.2.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-restore-6.2.4
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.3.0/elasticsearch-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-backup-6.3.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-backup-6.3.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.3.0/elasticsearch-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-restore-6.3.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-restore-6.3.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.4.0/elasticsearch-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-backup-6.4.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-backup-6.4.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.4.0/elasticsearch-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-restore-6.4.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-restore-6.4.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.5.3/elasticsearch-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-backup-6.5.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-backup-6.5.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.5.3/elasticsearch-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-restore-6.5.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-restore-6.5.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.8.0/elasticsearch-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-backup-6.8.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-backup-6.8.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/6.8.0/elasticsearch-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-restore-6.8.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-restore-6.8.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.14.0/elasticsearch-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-backup-7.14.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-backup-7.14.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.14.0/elasticsearch-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-restore-7.14.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-restore-7.14.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.2.0/elasticsearch-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-backup-7.2.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-backup-7.2.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.2.0/elasticsearch-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-restore-7.2.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-restore-7.2.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.3.2/elasticsearch-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-backup-7.3.2'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-backup-7.3.2
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/7.3.2/elasticsearch-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-restore-7.3.2'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-restore-7.3.2
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/8.2.0/elasticsearch-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-backup-8.2.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-backup-8.2.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/elasticsearch/8.2.0/elasticsearch-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'elasticsearch-restore-8.2.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: elasticsearch-restore-8.2.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/etcd/3.5.0/etcd-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'etcd-backup-3.5.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: etcd-backup-3.5.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/etcd/3.5.0/etcd-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'etcd-restore-3.5.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: etcd-restore-3.5.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/kubedump/0.1.0/kubedump-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'kubedump-backup-0.1.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: kubedump-backup-0.1.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mariadb/10.5.8/mariadb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mariadb-backup-10.5.8'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mariadb-backup-10.5.8
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mariadb/10.5.8/mariadb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mariadb-restore-10.5.8'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mariadb-restore-10.5.8
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.4.17/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-3.4.17'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-3.4.17
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.4.17/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-3.4.17'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-3.4.17
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.4.22/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-3.4.22'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-3.4.22
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.4.22/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-3.4.22'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-3.4.22
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.6.13/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-3.6.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-3.6.13
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.6.13/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-3.6.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-3.6.13
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.6.8/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-3.6.8'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-3.6.8
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/3.6.8/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-3.6.8'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-3.6.8
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.11/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-4.0.11'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-4.0.11
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.11/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-4.0.11'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-4.0.11
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.3/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-4.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-4.0.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.3/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-4.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-4.0.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.5/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-4.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-4.0.5
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.0.5/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-4.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-4.0.5
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.13/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-4.1.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-4.1.13
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.13/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-4.1.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-4.1.13
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.4/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-4.1.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-4.1.4
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.4/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-4.1.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-4.1.4
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.7/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-4.1.7'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-4.1.7
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.1.7/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-4.1.7'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-4.1.7
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.2.3/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-4.2.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-4.2.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.2.3/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-4.2.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-4.2.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.4.6/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-4.4.6'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-4.4.6
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/4.4.6/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-4.4.6'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-4.4.6
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/5.0.15/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-5.0.15'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-5.0.15
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/5.0.15/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-5.0.15'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-5.0.15
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/5.0.3/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-5.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-5.0.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/5.0.3/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-5.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-5.0.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/6.0.5/mongodb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-backup-6.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-backup-6.0.5
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mongodb/6.0.5/mongodb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mongodb-restore-6.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mongodb-restore-6.0.5
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/5.7.25/mysql-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mysql-backup-5.7.25'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mysql-backup-5.7.25
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/5.7.25/mysql-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mysql-restore-5.7.25'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mysql-restore-5.7.25
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.14/mysql-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mysql-backup-8.0.14'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mysql-backup-8.0.14
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.14/mysql-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mysql-restore-8.0.14'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mysql-restore-8.0.14
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.21/mysql-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mysql-backup-8.0.21'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mysql-backup-8.0.21
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.21/mysql-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mysql-restore-8.0.21'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mysql-restore-8.0.21
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.3/mysql-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mysql-backup-8.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mysql-backup-8.0.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/mysql/8.0.3/mysql-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'mysql-restore-8.0.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: mysql-restore-8.0.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/nats/2.6.1/nats-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'nats-backup-2.6.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: nats-backup-2.6.1
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/nats/2.6.1/nats-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'nats-restore-2.6.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: nats-restore-2.6.1
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/nats/2.8.2/nats-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'nats-backup-2.8.2'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: nats-backup-2.8.2
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/nats/2.8.2/nats-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'nats-restore-2.8.2'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: nats-restore-2.8.2
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/perconaxtradb/5.7/perconaxtradb-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'perconaxtradb-backup-5.7'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: perconaxtradb-backup-5.7
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/perconaxtradb/5.7/perconaxtradb-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'perconaxtradb-restore-5.7'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: perconaxtradb-restore-5.7
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/10.14/postgres-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-backup-10.14'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-backup-10.14
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/10.14/postgres-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-restore-10.14'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-restore-10.14
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/11.9/postgres-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-backup-11.9'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-backup-11.9
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/11.9/postgres-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-restore-11.9'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-restore-11.9
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/12.4/postgres-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-backup-12.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-backup-12.4
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/12.4/postgres-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-restore-12.4'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-restore-12.4
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/13.1/postgres-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-backup-13.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-backup-13.1
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/13.1/postgres-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-restore-13.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-restore-13.1
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/14.0/postgres-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-backup-14.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-backup-14.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/14.0/postgres-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-restore-14.0'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-restore-14.0
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/15.1/postgres-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-backup-15.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-backup-15.1
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/15.1/postgres-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-restore-15.1'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-restore-15.1
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/9.6.19/postgres-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-backup-9.6.19'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-backup-9.6.19
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/postgres/9.6.19/postgres-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'postgres-restore-9.6.19'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: postgres-restore-9.6.19
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/5.0.13/redis-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'redis-backup-5.0.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: redis-backup-5.0.13
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/5.0.13/redis-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'redis-restore-5.0.13'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: redis-restore-5.0.13
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/6.2.5/redis-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'redis-backup-6.2.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: redis-backup-6.2.5
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/6.2.5/redis-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'redis-restore-6.2.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: redis-restore-6.2.5
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/7.0.5/redis-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'redis-backup-7.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: redis-backup-7.0.5
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/redis/7.0.5/redis-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'redis-restore-7.0.5'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: redis-restore-7.0.5
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/vault/1.10.3/vault-backup-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'vault-backup-1.10.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: vault-backup-1.10.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/stash-catalog/templates/vault/1.10.3/vault-restore-task.yaml
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: 'vault-restore-1.10.3'
  labels:
    helm.sh/chart: stash-catalog-v2023.10.9
    app.kubernetes.io/name: stash-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2023.10.9"
    app.kubernetes.io/managed-by: Helm
spec:
  steps:
  - name: vault-restore-1.10.3
    params:
    - name: outputDir
      value: /stash-tmp/output
  - name: update-status
    params:
    - name: outputDir
      value: /stash-tmp/output
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/autoscaler/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.autoscaling.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-autoscaler
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mongodbautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/mongodbautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["autoscaling.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbautoscalers"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: elasticsearchautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/elasticsearchautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["autoscaling.kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearchautoscalers"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mariadbautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/mariadbautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["mariadbautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mysqlautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/mysqlautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["mysqlautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: postgresautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/postgresautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["postgresautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redisautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/redisautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["redisautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redissentinelautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/redissentinelautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["redissentinelautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/dashboard/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.elasticsearch.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-dashboard
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: elasticsearchdashboardwebhook.validators.elasticsearch.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.elasticsearch.kubedb.com/v1alpha1/elasticsearchdashboardwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["elasticsearch.kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearchdashboards"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/ops-manager/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.ops.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mysqlopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mysqlopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqlopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mongodbopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mongodbopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: elasticsearchopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/elasticsearchopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearchopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: kafkaopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/kafkaopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["kafkaopsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: redisopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/redisopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["redisopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: publisherwebhook.validators.postgres.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.postgres.kubedb.com/v1alpha1/publisherwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["postgres.kubedb.com"]
    apiVersions: ["*"]
    resources: ["publishers"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: subscriberwebhook.validators.postgres.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.postgres.kubedb.com/v1alpha1/subscriberwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["postgres.kubedb.com"]
    apiVersions: ["*"]
    resources: ["subscribers"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/provisioner/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: namespacewebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/namespacewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: [""]
    apiVersions: ["*"]
    resources: ["namespaces"]
    operations: ["DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: elasticsearchwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/elasticsearchwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: postgreswebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/postgreswebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mysqlwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mysqlwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mongodbwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mongodbwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: rediswebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/rediswebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redissentinelwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/redissentinelwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["redissentinels"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mariadbwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mariadbwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["mariadbs"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: kafkawebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/kafkawebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["kafkas"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: connectclusterwebhook.validators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kafka.kubedb.com/v1alpha1/connectclusterwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kafka.kubedb.com"]
      apiVersions: ["*"]
      resources: ["connectclusters"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: connectorwebhook.validators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kafka.kubedb.com/v1alpha1/connectorwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kafka.kubedb.com"]
      apiVersions: ["*"]
      resources: ["connectors"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/schema-manager/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.schema.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-schema-manager
    helm.sh/chart: kubedb-webhook-server-v0.17.0-rc.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.17.0-rc.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mysqldatabasewebhook.validators.schema.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.schema.kubedb.com/v1alpha1/mysqldatabasewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["schema.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqldatabases"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mongodbdatabasewebhook.validators.schema.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.schema.kubedb.com/v1alpha1/mongodbdatabasewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["schema.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbdatabases"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: postgresdatabasewebhook.validators.schema.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.schema.kubedb.com/v1alpha1/postgresdatabasewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["schema.kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgresdatabases"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb-one/charts/kubedb-crd-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-crd-manager
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.0.2
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "0"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
automountServiceAccountToken:
---
# Source: kubedb-one/charts/stash-enterprise/templates/cleaner/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-stash-enterprise-cleaner
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
---
# Source: kubedb-one/charts/stash-enterprise/templates/crd-installer/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-stash-enterprise-crd-installer
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb-autoscaler addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:autoscaler:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:autoscaler:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
---
# Source: kubedb-one/charts/kubedb-autoscaler/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:autoscaler:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-one/charts/kubedb-crd-manager/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-crd-manager
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.0.2
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "1"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
---
# Source: kubedb-one/charts/kubedb-metrics/templates/metrics-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:metrics:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - metrics.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb-one/charts/kubedb-metrics/templates/metrics-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:metrics:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - metrics.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb-ops-manager addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:ops:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - ops.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:ops:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - ops.kubedb.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:ops:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - ops.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/appcatalog-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/appcatalog-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb-one/charts/stash-enterprise/templates/cleaner/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-stash-enterprise-cleaner
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["delete"]
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs: ["delete"]
  - apiGroups:
      - stash.appscode.com
    resources:
      - "*"
    verbs: ["delete"]
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs: ["delete"]
---
# Source: kubedb-one/charts/stash-enterprise/templates/crd-installer/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-stash-enterprise-crd-installer
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs: ["*"]
  - apiGroups:
      - stash.appscode.com
    resources:
      - "*"
    verbs: ["*"]
---
# Source: kubedb-one/charts/stash-enterprise/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:stash:garbage-collector
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubedb-one/charts/stash-enterprise/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb-one/charts/stash-enterprise/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for stash addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb-one/charts/stash-enterprise/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:stash:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - stash.appscode.com
  - repositories.stash.appscode.com
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb-one/charts/stash-enterprise/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:stash:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - stash.appscode.com
  - repositories.stash.appscode.com
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-one/charts/stash-metrics/templates/metrics-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:metrics:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - metrics.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb-one/charts/stash-metrics/templates/metrics-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:metrics:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - metrics.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-one/charts/kubedb-crd-manager/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-crd-manager
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.0.2
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "2"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-crd-manager
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-crd-manager
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/kubedb-ops-manager/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kubedb
---
# Source: kubedb-one/charts/kubedb-provisioner/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kubedb
---
# Source: kubedb-one/charts/kubedb-webhook-server/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kubedb
---
# Source: kubedb-one/charts/stash-enterprise/templates/cleaner/cluster_rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise-cleaner
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-stash-enterprise-cleaner
subjects:
  - kind: ServiceAccount
    name: my-release-stash-enterprise-cleaner
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/stash-enterprise/templates/crd-installer/cluster_rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-stash-enterprise-crd-installer
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-stash-enterprise-crd-installer
subjects:
  - kind: ServiceAccount
    name: my-release-stash-enterprise-crd-installer
    namespace: kubedb-one-v2024.1.26-rc.0.tgz
---
# Source: kubedb-one/charts/stash-enterprise/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: appscode:stash:garbage-collector
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:stash:garbage-collector
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kube-system
---
# Source: kubedb-one/charts/kubedb-crd-manager/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-kubedb-crd-manager
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.0.2
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "3"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  ttlSecondsAfterFinished: 300
  template:
    metadata:
    spec:
      imagePullSecrets:
        []
      securityContext:
        {}
      serviceAccountName: my-release-kubedb-crd-manager
      initContainers:
        - name: kubedb-crd-manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/kubedb/kubedb-crd-manager:v0.0.2"
          imagePullPolicy: IfNotPresent
          args:
            - run
            - --v=3
            - --remove-unused-crds=false
            - --feature-gates=Druid=false
            - --feature-gates=Elasticsearch=true
            - --feature-gates=FerretDB=false
            - --feature-gates=Kafka=true
            - --feature-gates=MariaDB=true
            - --feature-gates=Memcached=false
            - --feature-gates=MicrosoftSQLServer=false
            - --feature-gates=MongoDB=true
            - --feature-gates=MySQL=true
            - --feature-gates=PerconaXtraDB=false
            - --feature-gates=PgBouncer=false
            - --feature-gates=Pgpool=false
            - --feature-gates=Postgres=true
            - --feature-gates=ProxySQL=false
            - --feature-gates=RabbitMQ=false
            - --feature-gates=Redis=true
            - --feature-gates=Singlestore=false
            - --feature-gates=Solr=false
            - --feature-gates=ZooKeeper=false
          resources:
            {}
      containers:
        - name: checker
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/appscode/kubectl-nonroot:v1.25"
          imagePullPolicy: IfNotPresent
          args:
            - sh
            - -c
            - |
                sleep 2; \
                kubectl wait --for=condition=Established crds -l app.kubernetes.io/name=kubedb --timeout=5m; \
                kubectl wait --for=condition=NamesAccepted crds -l app.kubernetes.io/name=kubedb --timeout=5m
          resources:
            {}
      restartPolicy: Never
---
# Source: kubedb-one/charts/stash-enterprise/templates/cleaner/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-stash-enterprise-cleaner
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-release-stash-enterprise-cleaner
      containers:
      - name: busybox
        image: ghcr.io/appscode/kubectl:v1.22
        command:
          - sh
          - -c
          - "sleep 2; \
           kubectl delete job my-release-stash-enterprise-crd-installer -n kubedb-one-v2024.1.26-rc.0.tgz || true; \
           kubectl delete functions.stash.appscode.com update-status pvc-backup pvc-restore || true; \
           kubectl delete tasks.stash.appscode.com pvc-backup pvc-restore || true;"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
      restartPolicy: Never
---
# Source: kubedb-one/charts/stash-enterprise/templates/crd-installer/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-stash-enterprise-crd-installer
  namespace: kubedb-one-v2024.1.26-rc.0.tgz
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 300
  ttlSecondsAfterFinished: 10
  template:
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-release-stash-enterprise-crd-installer
      containers:
        - name: installer
          image: "ghcr.io/stashed/stash-crd-installer:v0.32.0"
          args:
            - --enterprise=true
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
      restartPolicy: Never
---
# Source: kubedb-one/charts/stash-enterprise/templates/mutating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: admission.stash.appscode.com
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: deployment.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/deploymentmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - apps
    - extensions
    apiVersions:
    - "*"
    resources:
    - deployments
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: daemonset.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/daemonsetmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - apps
    - extensions
    apiVersions:
    - "*"
    resources:
    - daemonsets
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: statefulset.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/statefulsetmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    apiGroups:
    - apps
    apiVersions:
    - "*"
    resources:
    - statefulsets
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: deploymentconfig.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/deploymentconfigmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - apps.openshift.io
    apiVersions:
    - "*"
    resources:
    - deploymentconfigs
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: restoresession.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/restoresessionmutators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - restoresessions
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb-one/charts/stash-enterprise/templates/validating-webhook.yaml
# GKE returns Major:"1", Minor:"10+"
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: admission.stash.appscode.com
  labels:
    helm.sh/chart: stash-enterprise-v0.32.0
    app.kubernetes.io/name: stash-enterprise
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.32.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: restic.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/resticvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - restics
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: recovery.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/recoveryvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - recoveries
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: repository.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1alpha1/repositoryvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - repositories
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: restoresession.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/restoresessionvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - restoresessions
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: restorebatch.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/restorebatchvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - restorebatches
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: backupconfiguration.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/backupconfigurationvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - backupconfigurations
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: backupbatch.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/backupbatchvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - backupbatches
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: backupblueprint.admission.stash.appscode.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/admission.stash.appscode.com/v1beta1/backupblueprintvalidators
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - stash.appscode.com
    apiVersions:
    - "*"
    resources:
    - backupblueprints
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
