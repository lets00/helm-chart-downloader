---
# Source: prometheus-mikrotik-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-prometheus-mikrotik-exporter
  namespace: prometheus-mikrotik-exporter-0.4.0.tgz
  labels:
    helm.sh/chart: prometheus-mikrotik-exporter-0.4.0
    app.kubernetes.io/name: prometheus-mikrotik-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.2.6"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: prometheus-mikrotik-exporter/templates/secret-router-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-prometheus-mikrotik-exporter-router-config
  namespace: prometheus-mikrotik-exporter-0.4.0.tgz
  labels:
    
    helm.sh/chart: prometheus-mikrotik-exporter-0.4.0
    app.kubernetes.io/name: prometheus-mikrotik-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.2.6"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  config: |
   ## Source: https://github.com/akpw/mktxp/blob/main/mktxp/cli/config/mktxp.conf
   ## Copyright (c) 2020 Arseniy Kuznetsov
 
   [Sample-Router]
       enabled = True                  # turns metrics collection for this RouterOS device on / off
       hostname = localhost            # RouterOS IP address
       port = 8728                     # RouterOS IP Port
       username = username             # RouterOS user, needs to have 'read' and 'api' permissions
       password = password             # RouterOS password
       use_ssl = False                 # enables connection via API-SSL servis
       no_ssl_certificate = False      # enables API_SSL connect without router SSL certificate
       ssl_certificate_verify = False  # turns SSL certificate verification on / off
       installed_packages = True       # Installed packages
       dhcp = True                     # DHCP general metrics
       dhcp_lease = True               # DHCP lease metrics
       connections = True              # IP connections metrics
       connection_stats = False        # Open IP connections metrics
       pool = True                     # Pool metrics
       interface = True                # Interfaces traffic metrics
       firewall = True                 # IPv4 Firewall rules traffic metrics
       ipv6_firewall = False           # IPv6 Firewall rules traffic metrics
       ipv6_neighbor = False           # Reachable IPv6 Neighbors
       poe = True                      # POE metrics
       monitor = True                  # Interface monitor metrics
       netwatch = True                 # Netwatch metrics
       public_ip = True                # Public IP metrics
       route = True                    # Routes metrics
       wireless = True                 # WLAN general metrics
       wireless_clients = True         # WLAN clients metrics
       capsman = True                  # CAPsMAN general metrics
       capsman_clients = True          # CAPsMAN clients metrics
       kid_control_devices = False     # Kid Control metrics
       user = True                     # Active Users metrics
       queue = True                    # Queues metrics
       remote_dhcp_entry = None        # An MKTXP entry for remote DHCP info resolution (capsman/wireless)
       use_comments_over_names = True  # when available, forces using comments over the interfaces names
       check_for_updates = False       # check for available ROS updates
---
# Source: prometheus-mikrotik-exporter/templates/secret-scrapper-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-prometheus-mikrotik-exporter-scrapper-config
  namespace: prometheus-mikrotik-exporter-0.4.0.tgz
  labels:
    
    helm.sh/chart: prometheus-mikrotik-exporter-0.4.0
    app.kubernetes.io/name: prometheus-mikrotik-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.2.6"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  config: |
   ## Source: https://github.com/akpw/mktxp/blob/main/mktxp/cli/config/_mktxp.conf
   ## Copyright (c) 2020 Arseniy Kuznetsov
 
   [MKTXP]
       port = 49090
       socket_timeout = 2
       initial_delay_on_failure = 120
       max_delay_on_failure = 900
       delay_inc_div = 5
       bandwidth = False                   # Turns metrics bandwidth metrics collection on / off
       bandwidth_test_interval = 600       # Interval for colllecting bandwidth metrics
       minimal_collect_interval = 5        # Minimal metric collection interval
       verbose_mode = False                # Set it on for troubleshooting
       fetch_routers_in_parallel = False   # Set to True if you want to fetch multiple routers parallel
       max_worker_threads = 5              # Max number of worker threads that can fetch routers (parallel fetch only)
       max_scrape_duration = 10            # Max duration of individual routers' metrics collection (parallel fetch only)
       total_max_scrape_duration = 30      # Max overall duration of all metrics collection (parallel fetch only)
---
# Source: prometheus-mikrotik-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-prometheus-mikrotik-exporter
  namespace: prometheus-mikrotik-exporter-0.4.0.tgz
  labels:
    helm.sh/chart: prometheus-mikrotik-exporter-0.4.0
    app.kubernetes.io/name: prometheus-mikrotik-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.2.6"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 49090
      targetPort: http-metrics
      protocol: TCP
      name: http-metrics
  selector:
    app.kubernetes.io/name: prometheus-mikrotik-exporter
    app.kubernetes.io/instance: my-release
---
# Source: prometheus-mikrotik-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-prometheus-mikrotik-exporter
  namespace: prometheus-mikrotik-exporter-0.4.0.tgz
  labels:
    helm.sh/chart: prometheus-mikrotik-exporter-0.4.0
    app.kubernetes.io/name: prometheus-mikrotik-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.2.6"
    app.kubernetes.io/managed-by: Helm
  annotations:
    checksum/secret-config-router: 66d11ddddb42ceb3d7ae2f75c5ab5c56b53b934b63c89fe68002075bd9b46432
    checksum/secret-config-scrapper: 2a2661716760f47262df988e127ecc124996b3a7184e4b612dcf4ea3ac21064a
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-mikrotik-exporter
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        helm.sh/chart: prometheus-mikrotik-exporter-0.4.0
        app.kubernetes.io/name: prometheus-mikrotik-exporter
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "v1.2.6"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: my-release-prometheus-mikrotik-exporter
      securityContext:
        {}
      initContainers:
        - name: prepare-config
          image: busybox
          command: [
            'sh',
            '-c',
            'cp -pv /tmp/mktxp_config/* /mktxp_config/ && chown 100:101 /mktxp_config/*.conf'
          ]
          resources:
            limits:
              cpu: 25m
              memory: 64Mi
          volumeMounts:
            - name: config
              mountPath: /mktxp_config/
            - name: tmp-config
              mountPath: /tmp/mktxp_config/
      containers:
        - name: mktxp
          securityContext:
            {}
          image: "ghcr.io/akpw/mktxp:stable-20240603114403"
          imagePullPolicy: IfNotPresent
          args:
            - --cfg-dir
            - /mktxp_config
            - export
          ports:
            - name: http-metrics
              containerPort: 49090
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - name: config
              mountPath: /mktxp_config
            - name: tmp-config
              mountPath: /tmp/mktxp_config/
      volumes:
        - name: config
          emptyDir: {}
        - name: tmp-config
          projected:
            sources:
            - secret:
                name: my-release-prometheus-mikrotik-exporter-router-config
                items:
                  - key: config
                    path: mktxp.conf
                    mode: 0664
            - secret:
                name: my-release-prometheus-mikrotik-exporter-scrapper-config
                items:
                  - key: config
                    path: _mktxp.conf
                    mode: 0664
