---
# Source: example-php/templates/cm-app.yaml
kind: ConfigMap
apiVersion: v1
immutable: false
metadata:
  name: example-php-app
  labels:
    app.kubernetes.io/name: "example-php-14.6.301-app-cm"
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "default"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "helm"
    app.startx.fr/app: "example-php"
    app.startx.fr/version: "14.6.301"
    helm.sh/chart: "example-php"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "example-php"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "14.6.301"
    app.startx.fr/component: "helm"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "default"
    app.kubernetes.io/instance: "myscope-myenv-example-php-14.6.301"
  annotations:
    openshift.io/generated-by: startx-helm-example-php
data:
  SX_ID: example-php-app
  SX_TYPE: app
  SX_COMPONENT: helm
  SX_NAME: Startx helm application
  SX_SUMMARY: Startx helm application based on php container
  SX_VERSION: myenv
  EXAMPLE_VALUE: "Example value comming from the value file"
---
# Source: example-php/templates/cm-lib.yaml
kind: ConfigMap
apiVersion: v1
immutable: false
metadata:
  name: example-php-lib
  labels:
    app.kubernetes.io/name: "example-php-14.6.301-lib-cm"
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "default"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "helm"
    app.startx.fr/app: "example-php"
    app.startx.fr/version: "14.6.301"
    helm.sh/chart: "example-php"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "example-php"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "14.6.301"
    app.startx.fr/component: "helm"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "default"
    app.kubernetes.io/instance: "myscope-myenv-example-php-14.6.301"
  annotations:
    openshift.io/generated-by: startx-helm-example-php
data:
  index.html: |-
    <h1>go to <a href="./info.php"><b>info.php</b></a></h1>
  index.php: |-
    <h1>go to <a href="./info.php"><b>info.php</b></a></h1>
  info.php: |-
    <?php
    phpinfo();
    ?>
---
# Source: example-php/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: example-php
  labels:
    app.kubernetes.io/name: "example-php-14.6.301-service"
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "default"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "helm"
    app.startx.fr/app: "example-php"
    app.startx.fr/version: "14.6.301"
    helm.sh/chart: "example-php"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "example-php"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "14.6.301"
    app.startx.fr/component: "helm"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "default"
    app.kubernetes.io/instance: "myscope-myenv-example-php-14.6.301"
    app: example-php
  annotations:
    openshift.io/generated-by: startx-helm-example-php
spec:
  ports:
    - name: http
      port: 8080
  selector:
    app: example-php
---
# Source: example-php/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-php
  labels:
    app.kubernetes.io/name: "example-php-14.6.301-deployment"
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "default"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "helm"
    app.startx.fr/app: "example-php"
    app.startx.fr/version: "14.6.301"
    helm.sh/chart: "example-php"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "example-php"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "14.6.301"
    app.startx.fr/component: "helm"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "default"
    app.kubernetes.io/instance: "myscope-myenv-example-php-14.6.301"
    kube-monkey/enabled: enabled
    kube-monkey/identifier: "example-php"
  annotations:
    openshift.io/generated-by: startx-helm-example-php
    checksum/config: 0778ea73fbbb819f46bb03fe84deaf73c389b3b3cf4bbeb991b6839f7251e5c5
    argocd.argoproj.io/sync-wave: "30"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: example-php
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "example-php-14.6.301-pod"
        app.startx.fr/scope: "myscope"
        app.startx.fr/cluster: "default"
        app.startx.fr/environment: "myenv"
        app.startx.fr/component: "helm"
        app.startx.fr/app: "example-php"
        app.startx.fr/version: "14.6.301"
        helm.sh/chart: "example-php"
        app.kubernetes.io/component: "helm"
        app.kubernetes.io/part-of: "example-php"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "14.6.301"
        app.startx.fr/component: "helm"
        app.kubernetes.io/component: "helm"
        app.kubernetes.io/part-of: "default"
        app.kubernetes.io/instance: "myscope-myenv-example-php-14.6.301"
        app: example-php
        kube-monkey/enabled: enabled
        kube-monkey/identifier: "example-php"
      annotations:
        openshift.io/generated-by: startx-helm-example-php
    spec: 
      containers:
        - name: application
          image: "quay.io/startx/php:alpine3"
          command:
            - "/bin/sx-php"
          args:
            - run
          env:
            - name: SX_DEBUG
              value: "true"
            - name: SX_VERBOSE
              value: "true"
          envFrom:
            - configMapRef:
                name: example-php-app
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - "/bin/sx-php"
                - isLive
            initialDelaySeconds: 1
            timeoutSeconds: 3
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            exec:
              command:
                - "/bin/sx-php"
                - isReady
            initialDelaySeconds: 2
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 2
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
          volumeMounts:
            - name: "php-deploy-log"
              mountPath: "/var/log/httpd"
            - name: php-deploy-conf
              mountPath: "/app"
              readOnly: true
      volumes:
        - name: "php-deploy-log"
          emptyDir:
            medium: ""
        - name: php-deploy-conf
          configMap:
            name: "example-php-lib"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
---
# Source: example-php/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: example-php
  labels:
    app.kubernetes.io/name: "example-php-14.6.301-route"
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "default"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "helm"
    app.startx.fr/app: "example-php"
    app.startx.fr/version: "14.6.301"
    helm.sh/chart: "example-php"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "example-php"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "14.6.301"
    app.startx.fr/component: "helm"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "default"
    app.kubernetes.io/instance: "myscope-myenv-example-php-14.6.301"
    app: example-php
  annotations:
    openshift.io/generated-by: startx-helm-example-php
    haproxy.router.openshift.io/balance: "roundrobin"
    haproxy.router.openshift.io/disable_cookies: "true"
    template.openshift.io/expose-uri: "http://{.spec.host}{.spec.path}"
    argocd.argoproj.io/sync-wave: "30"
spec:
  tls:
    insecureEdgeTerminationPolicy: Allow
    termination: edge
  wildcardPolicy: None
  to:
    kind: Service
    name: "example-php"
    weight: 100
