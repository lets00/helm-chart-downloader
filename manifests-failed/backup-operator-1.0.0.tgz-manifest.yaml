---
# Source: backup-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-backup-operator
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: backup-operator/templates/rbac/backuprun_editor_role.yaml
# permissions for end users to edit backupruns.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backuprun-editor-role
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - backup-operator.io
  resources:
  - backupruns
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - backup-operator.io
  resources:
  - backupruns/status
  verbs:
  - get
---
# Source: backup-operator/templates/rbac/backuprun_viewer_role.yaml
# permissions for end users to view backupruns.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backuprun-viewer-role
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - backup-operator.io
  resources:
  - backupruns
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - backup-operator.io
  resources:
  - backupruns/status
  verbs:
  - get
---
# Source: backup-operator/templates/rbac/backupschedule_editor_role.yaml
# permissions for end users to edit backupschedules.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backupschedule-editor-role
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - backup-operator.io
  resources:
  - backupschedules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - backup-operator.io
  resources:
  - backupschedules/status
  verbs:
  - get
---
# Source: backup-operator/templates/rbac/backupschedule_viewer_role.yaml
# permissions for end users to view backupschedules.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backupschedule-viewer-role
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - backup-operator.io
  resources:
  - backupschedules
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - backup-operator.io
  resources:
  - backupschedules/status
  verbs:
  - get
---
# Source: backup-operator/templates/rbac/backupstorage_editor_role.yaml
# permissions for end users to edit backupstorages.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backupstorage-editor-role
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - backup-operator.io
  resources:
  - backupstorages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - backup-operator.io
  resources:
  - backupstorages/status
  verbs:
  - get
---
# Source: backup-operator/templates/rbac/backupstorage_viewer_role.yaml
# permissions for end users to view backupstorages.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backupstorage-viewer-role
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - backup-operator.io
  resources:
  - backupstorages
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - backup-operator.io
  resources:
  - backupstorages/status
  verbs:
  - get
---
# Source: backup-operator/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backup-operator-manager
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - backup-operator.io
  resources:
  - backupruns
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - backup-operator.io
  resources:
  - backupruns/finalizers
  verbs:
  - update
- apiGroups:
  - backup-operator.io
  resources:
  - backupruns/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - backup-operator.io
  resources:
  - backupschedules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - backup-operator.io
  resources:
  - backupschedules/finalizers
  verbs:
  - update
- apiGroups:
  - backup-operator.io
  resources:
  - backupschedules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - backup-operator.io
  resources:
  - backupstorages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - backup-operator.io
  resources:
  - backupstorages/finalizers
  verbs:
  - update
- apiGroups:
  - backup-operator.io
  resources:
  - backupstorages/status
  verbs:
  - get
  - patch
  - update
---
# Source: backup-operator/templates/rbac/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: backup-operator-manager
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: backup-operator-manager
subjects:
- kind: ServiceAccount
  name: my-release-backup-operator
  namespace: backup-operator-1.0.0.tgz
---
# Source: backup-operator/templates/rbac/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: backup-operator-manager-leader-election
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: backup-operator/templates/rbac/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backup-operator-manager-leader-election
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: backup-operator-manager-leader-election
subjects:
- kind: ServiceAccount
  name: my-release-backup-operator
  namespace: backup-operator-1.0.0.tgz
---
# Source: backup-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-backup-operator
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 443
    targetPort: webhook
    protocol: TCP
    name: webhook
  selector:
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
---
# Source: backup-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-backup-operator
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: backup-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: backup-operator
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-backup-operator
      securityContext:
        fsGroup: 65532
      containers:
      - name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        image: "ghcr.io/universal-backup-operator/backup-operator:1.0.0"
        imagePullPolicy: IfNotPresent
        args:
        - --zap-devel=false
        - --leader-elect
        ports:
        - name: healthz
          containerPort: 8081
          protocol: TCP
        - name: webhook
          containerPort: 9443
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        startupProbe:
          tcpSocket:
            port: 8081
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: webhook-certificate
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: webhook-certificate
        secret:
          secretName: my-release-backup-operator-webhook
---
# Source: backup-operator/templates/webhook/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: my-release-backup-operator-webhook
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  dnsNames:
  - "my-release-backup-operator.backup-operator-1.0.0.tgz.svc"
  - "my-release-backup-operator.backup-operator-1.0.0.tgz.svc.cluster.local"
  issuerRef:
    kind: Issuer
    name: my-release-backup-operator-webhook
  secretName: my-release-backup-operator-webhook
---
# Source: backup-operator/templates/webhook/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: my-release-backup-operator-webhook
  labels:
    helm.sh/chart: backup-operator-1.0.0
    app.kubernetes.io/name: backup-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selfSigned: {}
---
# Source: backup-operator/templates/webhook/mutation.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: my-release-backup-operator-mutation
  annotations:
    cert-manager.io/inject-ca-from: backup-operator-1.0.0.tgz/my-release-backup-operator-webhook
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: my-release-backup-operator
      namespace: backup-operator-1.0.0.tgz
      path: /mutate-backup-operator-io-v1-backuprun
  failurePolicy: Fail
  name: mbackuprun.kb.io
  rules:
  - apiGroups:
    - backup-operator.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - backupruns
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: my-release-backup-operator
      namespace: backup-operator-1.0.0.tgz
      path: /mutate-backup-operator-io-v1-backupstorage
  failurePolicy: Fail
  name: mbackupstorage.kb.io
  rules:
  - apiGroups:
    - backup-operator.io
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - backupstorages
  sideEffects: None
---
# Source: backup-operator/templates/webhook/validation.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-release-backup-operator-validation
  annotations:
    cert-manager.io/inject-ca-from: backup-operator-1.0.0.tgz/my-release-backup-operator-webhook
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service: &service
      name: my-release-backup-operator
      namespace: backup-operator-1.0.0.tgz
      path: /validate-backup-operator-io-v1-backuprun
  failurePolicy: Fail
  name: vbackuprun.kb.io
  rules:
  - &rule
    apiGroups:
    - backup-operator.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - backupruns
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      <<: *service
      path: /validate-backup-operator-io-v1-backupschedule
  failurePolicy: Fail
  name: vbackupschedule.kb.io
  rules:
  - <<: *rule
    resources:
    - backupschedules
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      <<: *service
      path: /validate-backup-operator-io-v1-backupstorage
  failurePolicy: Fail
  name: vbackupstorage.kb.io
  rules:
  - <<: *rule
    resources:
    - backupstorages
  sideEffects: None
