---
# Source: nuclei/templates/nuclei-shared-volumeclaim.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# We use a persistent volume for central storing of all nuclei-templates to prevent downloading it for each scan again, enabled by default.

# Request a persistent volume for web content
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nuclei-content-claim
spec:
  accessModes:
    - ReadWriteOnce
    - ReadOnlyMany
  resources:
    requests:
      storage: 1Gi
---
# Source: nuclei/templates/nuclei-update-cache-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: nuclei-update-initial-template-cache
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: nuclei
          image: "docker.io/projectdiscovery/nuclei:v3.1.10"
          imagePullPolicy: IfNotPresent
          command:
            - 'nuclei'
            - '-update-templates'
          resources:
                {}
          securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - all
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: false
          env:
                []
          volumeMounts:
            - name: nuclei-content
              mountPath: /root
              readOnly: false
      volumes:
        - name: nuclei-content
          persistentVolumeClaim:
            claimName: nuclei-content-claim
            readOnly: false
---
# Source: nuclei/templates/nuclei-update-cache-job.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# We use a persistent volume for central storing of all nuclei-templates to prevent downloading it for each scan again, enabled by default.
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: nuclei-update-template-cache
spec:
  schedule: 0 */1 * * *
  failedJobsHistoryLimit: 10
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: nuclei
              image: "docker.io/projectdiscovery/nuclei:v3.1.10"
              imagePullPolicy: IfNotPresent
              command:
                - 'nuclei'
                - '-update-templates'
              resources:
                {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - all
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: false
              env:
                []
              volumeMounts:
                - name: nuclei-content
                  mountPath: /root
                  readOnly: false
          volumes:
            - name: nuclei-content
              persistentVolumeClaim:
                claimName: nuclei-content-claim
                readOnly: false
---
# Source: nuclei/templates/cascading-rules.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

# We only want to import the default cascading rules if they are enabled
---
# Source: nuclei/templates/nuclei-parse-definition.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: "execution.securecodebox.io/v1"
kind: ParseDefinition
metadata:
  name: "nuclei-json"
spec:
  image: "docker.io/securecodebox/parser-nuclei:4.5.0"
  imagePullPolicy: IfNotPresent
  ttlSecondsAfterFinished: 
  env:
    []
  scopeLimiterAliases:
    {}
  affinity:
    {}
  tolerations:
    []
---
# Source: nuclei/templates/nuclei-scan-type.yaml
# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: "execution.securecodebox.io/v1"
kind: ScanType
metadata:
  name: "nuclei"
spec:
  extractResults:
    type: nuclei-json
    location: "/home/securecodebox/nuclei-results.jsonl"
  jobTemplate:
    spec:
      suspend: false
      backoffLimit: 3
      template:
        spec:
          restartPolicy: OnFailure
          affinity:
            {}
          tolerations:
            []
          securityContext:
            {}
          containers:
            - name: nuclei
              image: "docker.io/projectdiscovery/nuclei:v3.1.10"
              imagePullPolicy: IfNotPresent
              command:
                - "nuclei"
                
                - "-disable-update-check"
                
                - "-jsonl"
                - "-output"
                - "/home/securecodebox/nuclei-results.jsonl"
              resources:
                {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - all
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: false
              env:
                []
              
              
              volumeMounts:
                
                - name: nuclei-content
                  mountPath: /root
                  readOnly: true
              

          
          
          volumes:
            
            - name: nuclei-content
              persistentVolumeClaim:
                claimName: nuclei-content-claim
                readOnly: true
