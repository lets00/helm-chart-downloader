---
# Source: demo-backend/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-demo-backend
  namespace: demo-backend
  labels:
    helm.sh/chart: demo-backend-0.0.3
    app.kubernetes.io/name: demo-backend
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: demo-backend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-demo-backend-http
  namespace: demo-backend
  labels:
    helm.sh/chart: demo-backend-0.0.3
    app.kubernetes.io/name: demo-backend
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5000
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/name: demo-backend
    app.kubernetes.io/instance: my-release
---
# Source: demo-backend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-demo-backend
  namespace: demo-backend
  labels:
    helm.sh/chart: demo-backend-0.0.3
    app.kubernetes.io/name: demo-backend
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  selector:
    matchLabels:
      app.kubernetes.io/name: demo-backend
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: demo-backend
        app.kubernetes.io/instance: my-release
      annotations:
    spec:
      serviceAccountName: my-release-demo-backend
      containers:
        - name: main
          image: quay.io/yushiwho/api:e1f9d77
          imagePullPolicy: "IfNotPresent"
          args:
            - nginx
            - -g
            - daemon off;
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 5000
          livenessProbe:
            httpGet:
              path: /stats
              port: http
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /stats
              port: http
            initialDelaySeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
      volumes:
