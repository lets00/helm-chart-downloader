---
# Source: nominatim/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-nominatim
  namespace: "nominatim-3.12.1.tgz"
  labels:
    app.kubernetes.io/name: nominatim
    helm.sh/chart: nominatim-3.12.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: nominatim/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-postgresql
  namespace: "nominatim-3.12.1.tgz"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.20
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgres-password: "bm9taW5hdGlt"
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords
---
# Source: nominatim/charts/postgresql/templates/primary/extended-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-postgresql-extended-configuration
  namespace: "nominatim-3.12.1.tgz"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.20
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  override.conf: |-
    shared_buffers = 2GB
    maintenance_work_mem = 10GB
    autovacuum_work_mem = 2GB
    work_mem = 50MB
    effective_cache_size = 24GB
    synchronous_commit = off
    max_wal_size = 1GB
    checkpoint_timeout = 10min
    checkpoint_completion_target = 0.9
---
# Source: nominatim/templates/apache-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nominatim-apache-configmap
  namespace: "nominatim-3.12.1.tgz"
  labels:
    app.kubernetes.io/name: nominatim
    helm.sh/chart: nominatim-3.12.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  000-default.conf: |-
    <VirtualHost *:80>
      DocumentRoot /nominatim/website
      CustomLog "|$/usr/bin/rotatelogs -n 7 /var/log/apache2/access.log 86400" combined
      ErrorLog  "|$/usr/bin/rotatelogs -n 7 /var/log/apache2/error.log 86400"
      LogLevel info
    
      <Directory "/nominatim/nominatim-ui/dist">
        DirectoryIndex search.html
        Require all granted
      </Directory>
    
      Alias /ui /nominatim/nominatim-ui/dist
    
      <Directory /nominatim/website>
        Options FollowSymLinks MultiViews
        DirectoryIndex search.php
        Require all granted
    
        RewriteEngine On
    
          # This must correspond to the URL where nominatim can be found.
          RewriteBase "/"
    
          # If no endpoint is given, then use search.
          RewriteRule ^(/|$)   "search.php"
    
          # If format-html is explicity requested, forward to the UI.
          RewriteCond %{QUERY_STRING} "format=html"
          RewriteRule ^([^/]+).php ui/$1.html [R,END]
          # Same but .php suffix is missing.
          RewriteCond %{QUERY_STRING} "format=html"
          RewriteRule ^([^/]+) ui/$1.html [R,END]
    
          # If no format parameter is there then forward anything
          # but /reverse and /lookup to the UI.
          RewriteCond %{QUERY_STRING} "!format="
          RewriteCond %{REQUEST_URI}  "!/lookup"
          RewriteCond %{REQUEST_URI}  "!/reverse"
          RewriteRule ^([^/]+).php ui/$1.html [R,END]
          # Same but .php suffix is missing.
          RewriteCond %{QUERY_STRING} "!format="
          RewriteCond %{REQUEST_URI}  "!/lookup"
          RewriteCond %{REQUEST_URI}  "!/reverse"
          RewriteRule ^([^/]+) ui/$1.html [R,END]
      </Directory>
    
      AddType text/html .php
    </VirtualHost>
---
# Source: nominatim/templates/ui-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nominatim-ui-configmap
  namespace: "nominatim-3.12.1.tgz"
  labels:
    app.kubernetes.io/name: nominatim
    helm.sh/chart: nominatim-3.12.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  config.theme.js: |-
    
    Nominatim_Config.Nominatim_API_Endpoint = '/';
---
# Source: nominatim/charts/postgresql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql-hl
  namespace: "nominatim-3.12.1.tgz"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.20
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: primary
---
# Source: nominatim/charts/postgresql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql
  namespace: "nominatim-3.12.1.tgz"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.20
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: primary
---
# Source: nominatim/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-nominatim
  namespace: "nominatim-3.12.1.tgz"
  labels:
    app.kubernetes.io/name: nominatim
    helm.sh/chart: nominatim-3.12.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      nodePort: null
  selector: 
    app.kubernetes.io/name: nominatim
    app.kubernetes.io/instance: my-release
---
# Source: nominatim/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-nominatim
  namespace: "nominatim-3.12.1.tgz"
  labels:
    app.kubernetes.io/name: nominatim
    helm.sh/chart: nominatim-3.12.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
     matchLabels: 
      app.kubernetes.io/name: nominatim
      app.kubernetes.io/instance: my-release
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nominatim
        helm.sh/chart: nominatim-3.12.1
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: my-release-nominatim
      securityContext:
        fsGroup: 101
      containers:
        - name: nominatim
          securityContext:
            {}
          image: "mediagis/nominatim:4.3"
          workingDir: /nominatim
          imagePullPolicy: IfNotPresent
          env:
            - name: NOMINATIM_DATABASE_DSN
              value: pgsql:host=my-release-postgresql;port=5432;user=postgres;password=nominatim;dbname=nominatim
            - name: NOMINATIM_REPLICATION_URL
              value: https://download.geofabrik.de/europe/germany/sachsen-updates/
          command:
            - /bin/bash
            - -ec
            - |
                nominatim refresh --website
                a2enmod rewrite
                /usr/sbin/apache2ctl -D FOREGROUND
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /etc/apache2/sites-available
              name: apache-config
            - mountPath: /nominatim/nominatim-ui
              name: nominatim-ui
            - name: ui-config
              mountPath: /nominatim/nominatim-ui/dist/theme/config.theme.js
              subPath: config.theme.js
      initContainers:
         - name: nominatim-ui-download
           image: curlimages/curl
           workingDir: /nominatim/nominatim-ui
           command:
           - /bin/sh
           - -ec
           - |
             curl -L https://github.com/osm-search/nominatim-ui/releases/download/v3.2.1/nominatim-ui-3.2.1.tar.gz | tar -xz --strip-components 1
           securityContext:
             runAsUser: 1
             allowPrivilegeEscalation: false
             readOnlyRootFilesystem: true
           volumeMounts:
            - mountPath: /nominatim/nominatim-ui
              name: nominatim-ui
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: apache-config
          configMap:
            name: my-release-nominatim-apache-configmap
        - name: ui-config
          configMap:
            name: my-release-nominatim-ui-configmap
        - name: nominatim-ui
          emptyDir: {}
---
# Source: nominatim/charts/postgresql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-postgresql
  namespace: "nominatim-3.12.1.tgz"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.6.20
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  replicas: 1
  serviceName: my-release-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: my-release-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-11.6.20
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
      annotations:
        checksum/extended-configuration: 863423b36553305cede5a0f0b33b5cb8dcde04c9e5b69a85efe98a299ec5efe7
    spec:
      serviceAccountName: default
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/component: primary
                namespaces:
                  - "nominatim-3.12.1.tgz"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      hostNetwork: false
      hostIPC: false
      initContainers:
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:14.4.0-debian-11-r18
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            # Authentication
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgres-password
            # Replication
            # Initdb
            # Standby
            # LDAP
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            # TLS
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Audit
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            # Others
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                
                - |
                  exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: postgresql-extended-config
              mountPath: /bitnami/postgresql/conf/conf.d/
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
      volumes:
        - name: postgresql-extended-config
          configMap:
            name: my-release-postgresql-extended-configuration
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "500Gi"
---
# Source: nominatim/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-nominatim-test-connection"
  labels:
    helm.sh/chart: nominatim-3.12.1
    app.kubernetes.io/name: nominatim
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-nominatim:80']
  restartPolicy: Never
