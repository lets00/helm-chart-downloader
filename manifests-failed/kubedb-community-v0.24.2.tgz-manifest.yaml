---
# Source: kubedb-community/templates/operator-psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: my-release-kubedb-community
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
spec:
  privileged: true  #Allowing privileged pods is necessary for ES db
  allowPrivilegeEscalation: true #Allowing privilege escalation is necessary for ES db
  volumes:
  - "*"
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  allowedCapabilities:
  - IPC_LOCK
  - SYS_RESOURCE
---
# Source: kubedb-community/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-community
  namespace: kubedb-community-v0.24.2.tgz
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb-community/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kubedb-community-apiserver-cert
  namespace: kubedb-community-v0.24.2.tgz
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwRENDQW95Z0F3SUJBZ0lSQU11UHM1RlJTTzJMTFBlZ25adWFMVFF3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNd1doY05NelF3TmpFNE1UUTFOek13V2pBbQpNU1F3SWdZRFZRUURFeHR0ZVMxeVpXeGxZWE5sTFd0MVltVmtZaTFqYjIxdGRXNXBkSGt3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURqOFcyYkg2eEJjVWRHWDNUSW1YYm41OGw1YXpUbEYveFkKejlFS2YrNStWQ0JHbVFlZzJ2U3c4MnZzeHB3TVlBd0xCVkNmTkRYTllMWE1UcjI0SE5EK0Noc0dRSFNPNDl3MApQMXZrcGpCSi9uL3d2VTd4cWZtMUNOV2RCQTYyc2NPeXNBZ01DMVlKQWpXalArdGw1S3J6T1dSNXViM2dPWSszCm9TSUpjS2RKVkdPWDVYRmEyY296TjFsd1F5QmtIVHp6K0x2aklPTFVKSnhBZmpmdmRGMFVqYWdYTFFlcEJkeWcKeGU5bGFWTnd0dkY1engvcHRLQ3VUL1FhTEhzTHNzZmtpeTYxM01wblNCU0ZKdWYzL1FOaVJ1azFzQzRsSTF5NAp4bHdOSnI3YWVvVDhRUWNGblVaRlVOUHkva2pCYlV3ZGhrRUw0QUZHN1BUWk1Fa3NyWG0zQWdNQkFBR2pnZVV3CmdlSXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkEwR1I1RjN0QUd0S2p1dzY2NnJ1TkpNcFZ6awpNSUdCQmdOVkhSRUVlakI0Z2podGVTMXlaV3hsWVhObExXdDFZbVZrWWkxamIyMXRkVzVwZEhrdWEzVmlaV1JpCkxXTnZiVzExYm1sMGVTMTJNQzR5TkM0eUxuUm5lb0k4YlhrdGNtVnNaV0Z6WlMxcmRXSmxaR0l0WTI5dGJYVnUKYVhSNUxtdDFZbVZrWWkxamIyMXRkVzVwZEhrdGRqQXVNalF1TWk1MFozb3VjM1pqTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUY3RTdYR1VaVjZEYWdNM1hLUlRhMUhFZ0tKTnMrN0hnNWRqYXpnTFZkUXA4RzR4Mnk4ZElyCnlmSDk1SzRqSml6bDFlRUptenFwRDh1czY2VjhSTk8rT0QydmQ3R09YeHluZXE5b3U3NUhXdzBQSlA0T2tqVE4KNWVtNUhRQlVxSTBldlM3aDdZcWttd0gwNzdjYUtVN0VldU5qUENQeGs0QStsbzlabTRHQ0RzNzhSVXBKclZ2LworS2o4S2paY213Q0h4YnN2Ukt0SnVhN0JoUGo0M3Z3UmM1VGlvaEtJQ1A5bExneUxQQTd3eTVUcStHRkhKN2N0CjVDRHAzbkJ1RU0yUTdjRkZUSm03OWRIWktmWkxXbURGSEVueGFHUklIYmpGaHVZUnZVTUJWTytMUDJuVHNvbTYKM29rS2txd29WWFBnV1g3VjN4YTlBWWlCcTlRVFk5cWIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNC9GdG14K3NRWEZIUmw5MHlKbDI1K2ZKZVdzMDVSZjhXTS9SQ24vdWZsUWdScGtICm9OcjBzUE5yN01hY0RHQU1Dd1ZRbnpRMXpXQzF6RTY5dUJ6US9nb2JCa0IwanVQY05EOWI1S1l3U2Y1LzhMMU8KOGFuNXRRalZuUVFPdHJIRHNyQUlEQXRXQ1FJMW96L3JaZVNxOHpsa2VibTk0RG1QdDZFaUNYQ25TVlJqbCtWeApXdG5LTXpkWmNFTWdaQjA4OC9pNzR5RGkxQ1NjUUg0MzczUmRGSTJvRnkwSHFRWGNvTVh2WldsVGNMYnhlYzhmCjZiU2dyay8wR2l4N0M3TEg1SXN1dGR6S1owZ1VoU2JuOS8wRFlrYnBOYkF1SlNOY3VNWmNEU2ErMm5xRS9FRUgKQloxR1JWRFQ4djVJd1cxTUhZWkJDK0FCUnV6MDJUQkpMSzE1dHdJREFRQUJBb0lCQUF0N0xKOGtvRU9IbGlSNApTR1NXUGtQK0M4cmUySUkxakJOWkhGbGdDajQ0dEl0NXg4V1ZZYi9MOHdLeEdra1JTV29Bc1lmalZGWnM2WnRKCjJBcC9BUlBhcEhQVEtVdk5ORms1VzhLUGtGMFp3WTM1cXhGSEUzbkg0U0tRZ3NFM0FQbHVIbW1rNUlkOW9nQUEKQnpaUnB6NnJCR0dSTm53bHloUmd2RnNuWG5XMS94alNpYTZYN2R3dk0yTVJ0eVBkNHJpdEgycHBha054eHZCRwpBdXRNdDJhVWZmbXV3c1hWUEdSVHF6Ykt4RlVLWk9OMHJ3Sm5keXFMU3g5aVFkZXZRMVlXMXBERGZXNFpZRmpJCmF6czllK09WNys5bTV6WDRxdHJvNjNjbE9GeWg1RHhSVjNQR2EwaGFaaVRyK3RRVnBkNGdWMmZ1WkoxNiswYU4KY2g0R09Za0NnWUVBNldxa0FhK2N0T3FMQndEazdCVVIzUDdYcDhvN2hJR0hyanJXWmF6cnZHNnVZektFVzcyYgpBSTVaalhlMTA0Ukl3L05XMytFc21xVWdVR3hZYThpYmZLT0JMMWo4QzNoaWloTTZLeG1MRFhSRy9ieXZqYjcrCjcwZm90MVdLakxEY1lmNUcyWXlzRzBrYVA0RGJsNUlDR0srdE1OZC9RU29aYitnZzhlMElYaXNDZ1lFQStmODMKeDlYc0tUUzh5OXhtQlZneGovOFJaK1BKS2lRVUdROUdvaWREZVdJdFpoSnZaeFd1eHlxeFNOZnBGQ1FPZTkxYwpoeVJWOVVpcWJqRm5zNW1OdHZKak5acExoVEJKeUFKWVlSTFFwRmJkSXRHVVpNVml5d0J1dHUvY0l5RDlZWTkvCmdmN09weFlqN2NMYm1KaWV4dCtaMFNJck1tODMwRFFXTU9hK1dLVUNnWUVBeXcrZyttNkNUOG16aFRZNzhUNHIKT2l6aUEvQ2xjcE1WTEhlM1NPRDBmQXQxM29wMkp6RitCUy9ScklhMlFmclZLdE1wZ3I3c0JPVWVoWmljRzdoNwp2Q1NxSUR5em1HNzBtdFk3Um4rRVB3SW5PRnJNQnU1ZjdsNktqK1AxRW94U1RWWGU0U2ZHR2o2d2ZRcG0veWRnCmQ0VnRrQTRKZ1BGVkM4dlB6V2UrWGQwQ2dZQnNMWk11cHhRZE5KUHB4MEppVjZxQ3ZBWUZKWjFiM2ViUWZUcTgKV2k4cGJHRm14TjF1QndUdGJEenczM1VkWVFqZmNvZGlkMGUyN3kzSXB4cFBya2VUZmNtT1hXa0doa0czQ2NUQwpwTWlpQkhDR2E1aENEdVBVSWlqR2duNkl1UExMNzdObVJpT1lTODFhU2pLS0VxaktOK0d3akkrU3NHdS9iWHFZCnlKQmZmUUtCZ1FERTFMeWwzU1RHVTk5VC90YlFpMXI1ZGVmUGwydzlPVTFoTW5GTEV1WGxGaC9PYVJ1NzNodjYKVmdaSVUvRGRzWE4zTjZ1eWdGSDBrYXBEZjhrS25DNXM3RHdlUUFRTnVkMUxNcmlhdUlCUEJpZVdTdUdtWVVwMApHZHRldUlDTUsyaU9vYjR3NlUvclpsampscDU5NldvK3BnVDB4WnRIRHI0d1ZkVXdBdGZoekE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubedb-community/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-community
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get", "patch", "delete"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["delete", "get", "list", "watch", "patch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs: ["create", "delete", "get", "patch", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - services/finalizers
  verbs: ["update"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch", "deletecollection"]
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs: ["get"]
- apiGroups:
  - batch
  resources:
  - jobs
  verbs: ["create", "delete", "get", "list", "watch"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["create", "delete", "get", "list", "patch", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "delete", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - kubedb.com
  resources:
  - elasticsearches/finalizers
  - etcds/finalizers
  - mariadbs/finalizers
  - memcacheds/finalizers
  - mongodbs/finalizers
  - mysqls/finalizers
  - perconaxtradbs/finalizers
  - pgbouncers/finalizers
  - postgreses/finalizers
  - proxysqls/finalizers
  - redises/finalizers
  - redissentinels/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - "pods/exec"
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - "pods/status"
  verbs: ["update"]
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs: ["use"]
  resourceNames:
  - my-release-kubedb-community
  - elasticsearch-db
  - etcd-db
  - memcached-db
  - mongodb-db
  - mysql-db
  - percona-xtradb-db
  - postgres-db
  - redis-db
  - proxysql-db
  - maria-db
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs: ["get", "list", "create", "delete", "patch", "deletecollection"]
- apiGroups:
  - stash.appscode.com
  resources:
  - restoresessions
  - restorebatches
  verbs: ["get", "list", "watch"]
- apiGroups:
  - cert-manager.io
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-community/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-community-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-community
  namespace: kubedb-community-v0.24.2.tgz
---
# Source: kubedb-community/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-community
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-community
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-community
  namespace: kubedb-community-v0.24.2.tgz
---
# Source: kubedb-community/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-community-license-checker
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-community
  namespace: kubedb-community-v0.24.2.tgz
---
# Source: kubedb-community/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-community-license-reader
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-community
  namespace: kubedb-community-v0.24.2.tgz
---
# Source: kubedb-community/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-kubedb-community-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-community
  namespace: kubedb-community-v0.24.2.tgz
---
# Source: kubedb-community/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubedb-community
  namespace: kubedb-community-v0.24.2.tgz
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: operator
    port: 443
    targetPort: operator
  selector:
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
---
# Source: kubedb-community/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubedb-community
  namespace: kubedb-community-v0.24.2.tgz
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-community
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-community
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: 6ca314fd37c545bb9cc74c59a477d93ee5ac62a7b01dc083d900ff5caefae5d6
    spec:
      
      serviceAccountName: my-release-kubedb-community
      containers:
      - name: operator
        securityContext:
          {}
        image: kubedb/operator:v0.24.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: operator
          containerPort: 8443
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /var/serving-cert
          name: serving-cert
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-kubedb-community-apiserver-cert
      securityContext:
        {}
      nodeSelector:
        beta.kubernetes.io/os: linux
---
# Source: kubedb-community/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.kubedb.com
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-community-v0.24.2.tgz
    name: my-release-kubedb-community
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUxWRjZzZitQclRNeml2SUVJQWUrbHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNd1doY05NelF3TmpFNE1UUTFOek13V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDk5Cm9sWVlZTTRGVXdrTERrOGpLNTd6VEFnSmhtSWNyY0o1eVlCOUxOUTJwK2ZVcDRjMTd5cU1uY3pnMk01QjNCR2IKa3M4MWJiMlAzM01zT01lL01DbW5UUFNrNWZuK1NxNUY3V3NneUlxRzNnQWpKUDRxT0g0SFRadDdxbUl2Tys3KwpHOGNuZ2lkMHFGSjRXV0sxdkdQY1g2UW1CaHFyd1RZNEExY29IcGxqdzRCL3JDMzBmS1V0ckdwQlN4UFZCK2lVCk5hNzgybERrYkxKRzlIcDBEc211REhhSVYxVSt5bXNaQ01wZDVvbmZLOWhIc2NqUmdUaHp3eU1QejAxL2xPMU8KZkJrVTllaE1JVURvL0x1OGZUOGhtWk9ZcDFkWVhuMFM3QnY5RVNIM1NoSng0OEVYenpUT05hODJqSEkvRFhmagpHWGREU2NNTnFORVlOVlhiWm1NQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRTkJrZVJkN1FCclNvN3NPdXVxN2pTVEtWYzVEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFERWRoSDk3SwpFT1gxRVlMQjZiZExSK3ZndWZET1E4ck5uWEltL1dMVzVTZER2dk4xUmxMRFJ1MzBTRy9SNlhjVHZDWldZNTIxCkpRRzN4UmZBdEJvU29qS0svMmdRQTQ2UFdvcU4xUzRnREU1UkdkWnV1OVFheXdPSFNRU3VWeWRDZGtoWHRPbzQKclFuNjdwcHBtT3phMzI4QXVKc2ZFZVBFcVhhaU56UzFKcFE3ZkRzTi9rWmlIY0hyTzE0eE1sazlyKy9hRjBOdApuODM3VUp6TjhNbFFVd2M1N0dxTlFKanY2RlY1SktPVVozNUExakJ2MTRvRThXYWk1SHg0SWpweVpSc3BzeVFUCmZkM2J2N1BhcFNQTWsva2MxWnJPeWljdXA4UU0zaUFwMWRBY1JVc25od3VCSEJiRVowRHJicU5sOWt2Rjh1ZG4KbE4vRWNoSUtrYTh5WkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-community/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.kubedb.com
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-community-v0.24.2.tgz
    name: my-release-kubedb-community
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQUxWRjZzZitQclRNeml2SUVJQWUrbHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNd1doY05NelF3TmpFNE1UUTFOek13V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDk5Cm9sWVlZTTRGVXdrTERrOGpLNTd6VEFnSmhtSWNyY0o1eVlCOUxOUTJwK2ZVcDRjMTd5cU1uY3pnMk01QjNCR2IKa3M4MWJiMlAzM01zT01lL01DbW5UUFNrNWZuK1NxNUY3V3NneUlxRzNnQWpKUDRxT0g0SFRadDdxbUl2Tys3KwpHOGNuZ2lkMHFGSjRXV0sxdkdQY1g2UW1CaHFyd1RZNEExY29IcGxqdzRCL3JDMzBmS1V0ckdwQlN4UFZCK2lVCk5hNzgybERrYkxKRzlIcDBEc211REhhSVYxVSt5bXNaQ01wZDVvbmZLOWhIc2NqUmdUaHp3eU1QejAxL2xPMU8KZkJrVTllaE1JVURvL0x1OGZUOGhtWk9ZcDFkWVhuMFM3QnY5RVNIM1NoSng0OEVYenpUT05hODJqSEkvRFhmagpHWGREU2NNTnFORVlOVlhiWm1NQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJRTkJrZVJkN1FCclNvN3NPdXVxN2pTVEtWYzVEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFERWRoSDk3SwpFT1gxRVlMQjZiZExSK3ZndWZET1E4ck5uWEltL1dMVzVTZER2dk4xUmxMRFJ1MzBTRy9SNlhjVHZDWldZNTIxCkpRRzN4UmZBdEJvU29qS0svMmdRQTQ2UFdvcU4xUzRnREU1UkdkWnV1OVFheXdPSFNRU3VWeWRDZGtoWHRPbzQKclFuNjdwcHBtT3phMzI4QXVKc2ZFZVBFcVhhaU56UzFKcFE3ZkRzTi9rWmlIY0hyTzE0eE1sazlyKy9hRjBOdApuODM3VUp6TjhNbFFVd2M1N0dxTlFKanY2RlY1SktPVVozNUExakJ2MTRvRThXYWk1SHg0SWpweVpSc3BzeVFUCmZkM2J2N1BhcFNQTWsva2MxWnJPeWljdXA4UU0zaUFwMWRBY1JVc25od3VCSEJiRVowRHJicU5sOWt2Rjh1ZG4KbE4vRWNoSUtrYTh5WkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb-community/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb-community/templates/appcatalog-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb-community/templates/appcatalog-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-community/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubedb-community/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb-community/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb-community/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb-community/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-community/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-community/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kubedb
---
# Source: kubedb-community/templates/cleaner.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-kubedb-community-cleaner
  namespace: kubedb-community-v0.24.2.tgz
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 120
  template:
    spec:
      
      serviceAccountName: my-release-kubedb-community
      containers:
      - name: busybox
        image: appscode/kubectl:v1.16
        command:
          - sh
          - -c
          - "sleep 2; \
             kubectl delete validatingwebhookconfigurations validators.kubedb.com || true; \
             kubectl delete mutatingwebhookconfiguration mutators.kubedb.com || true; \
             kubectl delete apiservice v1alpha1.mutators.kubedb.com || true; \
             kubectl delete apiservice v1alpha1.validators.kubedb.com || true;"
        imagePullPolicy: IfNotPresent
      restartPolicy: Never
---
# Source: kubedb-community/templates/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.kubedb.com
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: elasticsearch.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/elasticsearches
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: postgres.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/postgreses
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: mysql.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: perconaxtradb.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/perconaxtradbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["perconaxtradbs"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: mongodb.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mongodbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: redis.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/redises
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: redissentinel.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/redissentinels
    caBundle: bm90LWNhLWNlcnQ=
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["redissentinels"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: memcached.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/memcacheds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["memcacheds"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: etcd.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/etcds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["etcds"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: pgbouncer.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/pgbouncers
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["pgbouncers"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: proxysql.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/proxysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["proxysqls"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: mariadb.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mariadbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["mariadbs"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
---
# Source: kubedb-community/templates/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubedb.com
  labels:
    helm.sh/chart: kubedb-community-v0.24.2
    app.kubernetes.io/name: kubedb-community
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.24.2"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
webhooks:
- name: elasticsearch.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/elasticsearches
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: postgres.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/postgreses
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: mysql.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: perconaxtradb.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/perconaxtradbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["perconaxtradbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: mongodb.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mongodbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: redis.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/redises
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: redissentinel.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/redissentinels
    caBundle: bm90LWNhLWNlcnQ=
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["redissentinels"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: memcached.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/memcacheds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["memcacheds"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: etcd.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/etcds
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["etcds"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: pgbouncer.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/pgbouncers
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["pgbouncers"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: proxysql.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/proxysqls
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["proxysqls"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: namespace.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/namespaces
    caBundle: bm90LWNhLWNlcnQ=
  rules:
  - apiGroups: [""]
    apiVersions: ["*"]
    resources: ["namespaces"]
    operations: ["DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mariadb.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mariadbs
    caBundle: bm90LWNhLWNlcnQ=
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["mariadbs"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
