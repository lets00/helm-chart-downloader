---
# Source: ks-core/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubesphere
  namespace: kubesphere-system
  labels:
    helm.sh/chart: ks-core-0.4.0
    app.kubernetes.io/name: ks-core
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v4.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: ks-core/templates/marketplace-config.yaml
apiVersion: v1
stringData:
  configuration.yaml: |
    url: https://kubesphere.cloud
    oauth:
      clientID: "client-a5cdf64c-7f84-415e-a6b1-8dfbfad493c3"
      clientSecret: "66ce75fc-4a87-4f97-9963-92d1a19b137e"
    subscription:
      syncPeriod: 60m
    repository:
      url: https://app.kubesphere.cloud
      repoName: marketplace
      syncPeriod: 60m
kind: Secret
metadata:
  name: marketplace
  namespace: kubesphere-system
type: config.kubesphere.io/marketplace
---
# Source: ks-core/templates/webhook.yaml
apiVersion: v1
data:
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lRU2JoZm1PR205eGRVY2hQWEp0T0Y3REFOQmdrcWhraUc5dzBCQVFzRkFEQWoKTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoYm1GblpYSXRZMkV3SGhjTk1qUXdOakl3TVRRMQpOekkzV2hjTk16UXdOakU0TVRRMU56STNXakFqTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoCmJtRm5aWEl0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREdk1YWVlmSEsKdExXK0JBZmFNTE5zSVNNVHNxazQrQU5idkZYSTVuRCsvek04SkFSM3hxRmtKOEdpSU4xR3VkWXRGdGhWT0c4UQpVdjhGSWtqNG5JNmhUVGg3T2xVNlBlbTJCWWNYcG9BQk5oSW1zWmc1VWJkVnVXWTFFUWdMS1BOZnJEM3hOd3JDCjhuN3hiWGd0M3VKbUZwamYyd3Z1QUQrK1ZBMVJTZGZlZ3lXTlpRYzFSV2tzNFl5T3c1QTZuT2loNTBBWWxHTS8KOG5mdWpSR1ZlVTZQeDVJRm9Ubk9RSmRlYkc5TkwxNEZnMkVQY1RjYUcvd202aHl4MjkzamQvb3g1UmsraXhyYwp1OU9mTFVUSUloT2dMNHBPQjZiNzA1bkJZTVpiZVBXYTdqandNbmdQMXlyZUFqSGJ1c2Rra1dVWkgzVEIyZ1JqClBWNFVkdWVibmtXSEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVV2NBNwpvNmtGQUdjcU90cjlWUHZhQlNBQjA0RXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQURGREVpN2dUMmhkMmtHCnkzSURKU3hsU1NYMkVWYU1zOUhOS3VYbVRpRlRFVUxJakpoMk9RdzVMcnZJcHRQSUU1dERhN25QZFNqR3BTaGIKN2JuMDI1dytlaGhFb2VsZno1azcvUmQ1M1ZCSjBRU2cxeVdKb2l6SGNMck5yYUtLVmFtNU50cFJDa0p3TjRRZwpVeFY1SnI1bGxMb2pJZ0RuYWtyYUVyYU55bjRQLzlYc2JTamxQWmp5Ti9INGFCa2hremUwREFhTk1uS0NMRUNXCjlPWG5aOGV5WTNpOGRJa0ppQ2tWU1Z6SlB3OUVmQUgrNE1IUC9ZMVdQNGtZWE9SVkdtQ1VUN0xVeUx3UXFuZ0MKQ0xiQU9pSDNmTlFGdEdCVGdCMGpTR3JBTDc1ZUh0cDFURkdXMUdTY3RjTVdSajRqQ0JLV0l2azFsQWV2bmdTVgpPTWxMRHIwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtRENDQW9DZ0F3SUJBZ0lSQUpMcTh0Y0xhN2EzTlplNUt3cjRYR1F3RFFZSktvWklodmNOQVFFTEJRQXcKSXpFaE1COEdBMVVFQXhNWWEzTXRZMjl1ZEhKdmJHeGxjaTF0WVc1aFoyVnlMV05oTUI0WERUSTBNRFl5TURFMApOVGN5TjFvWERUTTBNRFl4T0RFME5UY3lOMW93SnpFbE1DTUdBMVVFQXhNY2JYa3RjbVZzWldGelpTMWhaRzFwCmMzTnBiMjR0ZDJWaWFHOXZhekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFORXQKMHl6ZVNtYnBEUTJxb1NEWGYvQVBta2w5S0pKTU05d2hIZCs1MWF2Ly9jZFVFNDZCR1VGTmhCMkRDUkdWeFh3ZwpySGc1dFVEZmdsU01hZExkUzJ2QXVmSWpDcXJsZ3RIZ3R2VW1hRGl3TStmaUdmd3FoMWNHOEdSQ0w0U01QakRXCkt4ZWxqQ211ay9YajlHQ0R1cmFQZUlaZHlHcmNBeDlRazdqM3JhRjJwdVFteXdqdC85VzEvTnhsQ2lGL0lzYzEKMEpwZ2VmZHY0eGIyMlZzbHZxSjNjVzNDQ3BScHJldklqNTdnRTRQVlVRQWozcVRGSEZkRWhBd0w1bVdpZGxWcgphNWRyOHpVWDZ1U1Nsek5hSGhiKytva2ZwNityc1pKL3h1UTFjSGQxTkJtZ3E4SjV1dmp6OWJJSUdhbk14ZVlzCks1MzVzQTJvK28yUW0wdmZDVWtDQXdFQUFhT0J3akNCdnpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJndwpGb0FVV2NBN282a0ZBR2NxT3RyOVZQdmFCU0FCMDRFd1h3WURWUjBSQkZnd1ZvSW5hM010WTI5dWRISnZiR3hsCmNpMXRZVzVoWjJWeUxtdHpMV052Y21VdE1DNDBMakF1ZEdkNmdpdHJjeTFqYjI1MGNtOXNiR1Z5TFcxaGJtRm4KWlhJdWEzTXRZMjl5WlMwd0xqUXVNQzUwWjNvdWMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNUR2trdgp5SFB3UXdFeHRIeHExOFE2d1hvMlV5SDc2dkRvbGp5WXgxY3VyUVhUSjNHTXVRQ3l3T3QyYXYzZHJNR0VFa2lSCjY4THNNNWFSdldvVWVPZkNNYTJ0RGthd3YrbnA2NTBhTXByNlRiWHFVak9mNCtwUDNTUmFQdElvbGdkMlplTjcKcWNQVTBHb3JZSWVSczF1cWhJNTFsQnZUODJnajdlNG9FSlFGWFJZNndnWVVkWXdSTDl4VVJyUWJHa01oNklKRQpsOWcxRndxVEJrcXhDZHFHK0J3aENjd0JBZkQ4OWZhZktPdE80cWFKM2tnWldWcVpQamlvODhINHc5Q0ZBL1ZnCi84VTdqUks2cEJ2Q05YQWZKUFcvWjAvd2pGY1lSSmpwc1p1djRjOFBkOTdSS2tyNXNIRTVzcEVZcStqbmc2cDEKWTY4Rkg2dkNhZjc5OXBYTQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMFMzVExONUtadWtORGFxaElOZC84QSthU1gwb2trd3ozQ0VkMzduVnEvLzl4MVFUCmpvRVpRVTJFSFlNSkVaWEZmQ0NzZURtMVFOK0NWSXhwMHQxTGE4QzU4aU1LcXVXQzBlQzI5U1pvT0xBejUrSVoKL0NxSFZ3YndaRUl2aEl3K01OWXJGNldNS2E2VDllUDBZSU82dG85NGhsM0lhdHdESDFDVHVQZXRvWGFtNUNiTApDTzMvMWJYODNHVUtJWDhpeHpYUW1tQjU5Mi9qRnZiWld5VytvbmR4YmNJS2xHbXQ2OGlQbnVBVGc5VlJBQ1BlCnBNVWNWMFNFREF2bVphSjJWV3RybDJ2ek5SZnE1SktYTTFvZUZ2NzZpUitucjZ1eGtuL0c1RFZ3ZDNVMEdhQ3IKd25tNitQUDFzZ2dacWN6RjVpd3JuZm13RGFqNmpaQ2JTOThKU1FJREFRQUJBb0lCQVFDMGJLSkpnVE1Mc05qaApnTnVhU0ViQitiTkt6L20rdHB2RXM0dmcvWm1mMGg1RFgvRythUHd2cDN6ZE43a0t3ZlNsTEVtWEthOTlWVXhGClFSZkdHYnFFSnFnOGdwMGc2dlg3c2FnZHJCTVpVbUp6RUVMNWpuVk9TMTN1SEdpQUc3ZEl5SEpDNHpnU2U5S0QKdFN1RVZCc29mSGVvN2h1QWtHVGhEYzlkSzhWSURsQVpRak9SYmE2dzdrNDlUUVJkQ0ZVaHJGd2RWcGNEWkxSWApmOHRsamhKUzY1YkdMU2MzTTZCaVU3M1MrbCtmUEZvREg2V2pqRUVnNGNRTUk1R2o0djJiZ3hKbHNRQmtjelgrCjFsU2VLNEhTM0ZHWjdUVWpvUk9JT3JxbmJqT05CdUVFUXpnNHhSNUZzNXlEdnliK3EvR1FsQ3pOWFJ4Q1Q0YXUKWm9DOHlodEJBb0dCQVBMcWtwelBmQ0c2NFpEQTYvTEhnNTJobGIwL3ZJU0FxL2tqWnc4L0F3cUdwWkNUWVh5Ywp2L1ZQWVNKMjhsVnVzRExZb3NuVUFJdGU3ZWhXNnpQU3M3aVltTW1PNGRGTTB4OEx3b1haRkZoeDZWS0JBSXJDCkJBbjloQlZrUyszQ2U4bTgzejB4b0IyTDVhM0hocWV4Wm5yU1hhZkZFVnZpdVpJOCtRdTBFcktUQW9HQkFOeHkKRVo5ajAvbzV0aERCYlZoZjhHeUpyM0p6SHAwRWxwZHY0anhJT0hwdElRaG9jK25CRFQ4UnNwRCtPaXo1amx3YwpGWlY5U1NWejhQOVpXL3JJVUh1RUovLzVUc0tyclJkRXBqNHZUYXVSR0JtTU9JenllMGJnN2NTZWhjR2ZuN2dpCk1HSXhnVlBDQ3QyRERZaVdhN29IWTkzRFJRaVlTOEM1bVUzSTRISXpBb0dBQ1FIRm1lYmZsV2lXZ0lXR3VpUEgKcjRxVVFNWWlPVStFRU9MTktYV09xVTlBeUZHT3BjNHlGK2h2azVXUmVyVjE5d3l0VElwOTBxMGNhU2IvNVpZRQpiKzNJaklDdHd0TDBhUXhJbENudVpURWtFNWtRNmhRemppTkdTSHpGaS9WUUhiVFJHalhDMkJXZDJJbXpabmhmCmNtSm1jcGdPQXJndlpVcTVlVU9lQmQwQ2dZQW1ZdWFXcnJkMjF4M1JCUjJaU2Z0L3F1b1dMOTJnMGUrM0p4QnEKRnRsZTJDbnNZT1B1VEdPV0crclFQTFM4cUNnVitmMzRMZnpTdk1HMmRVVURBbWFoVzMzcm9Pb0tGQUxzRGxRMApkK0E2ZytXQ2JWeGJqczNRcGRKQmJxa3o4aXZKMElwRVR3S0tKenZsSHJENG05amVaL01INXJ6YXBrcHFvT2NGCkdIbWM2UUtCZ0huYlEyTjVhQkdva3lrNk1FMXZVWWc2N2VUQnQ3OE9uaUwyUlVwNElKWGVZdDM1dGI2VHNRNGgKKzAyb2ZTS1V6Z2s0M3dobWlRMk5qUGtTRkY4S0F6T3A0blpIakMxOHZyOFFQWEdvRWR3L01vM0VGM1lxTFBBbwpPVUd1YVlhVEpJVkJZeE9RMDBiUTI4SXVTdnZjN1FXOUwvVm9JeURFZE45KzEvTHJGaXllCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
kind: Secret
metadata:
  name: ks-controller-manager-webhook-cert
type: Opaque
---
# Source: ks-core/templates/ks-console-config.yml
apiVersion: v1
data:
  local_config.yaml: |
    server:
      http:
        hostname: localhost
        port: 8000
        static:
          production:
            /public: server/public
            /assets: dist/assets
            /dist: dist
      redis:
        port: 6379
        host: redis.kubesphere-system.svc
      redisTimeout: 5000
      sessionTimeout: 7200000
    client:
      version:
        kubesphere: v4.0.0
        kubernetes: 
      enableKubeConfig: true
    defaultClusterName: default
kind: ConfigMap
metadata:
  name: ks-console-config
  namespace: kubesphere-system
---
# Source: ks-core/templates/kubesphere-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubesphere-config
  namespace: kubesphere-system
data:
  kubesphere.yaml: |
    authentication:
      authenticateRateLimiterMaxTries: 10
      authenticateRateLimiterDuration: 10m0s
      loginHistoryRetentionPeriod: 168h
      maximumClockSkew: 10s
      multipleLogin: true
      kubectlImage: registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:latest
      jwtSecret: "Mm8CTKrUkFWPOYW3Z8EAyZCDsahdN5NL"
      oauthOptions:
        clients:
        - name: kubesphere
          redirectURIs:
          - '*'
          secret: kubesphere
    multicluster:
      clusterRole: host
---
# Source: ks-core/templates/clusterroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    kubesphere.io/creator: system
    kubesphere.io/description: '{"zh": "管理集群中的所有资源。", "en": "Manage all resources in the cluster."}'
  name: cluster-admin
aggregationRoleTemplates:
  roleSelector:
    matchLabels:
      iam.kubesphere.io/scope: "cluster"
  templateNames: []
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'
---
# Source: ks-core/templates/clusterroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    kubesphere.io/creator: system
    kubesphere.io/description: '{"zh": "查看集群中的所有资源。", "en": "View all resources in the cluster."}'
  name: cluster-viewer
aggregationRoleTemplates:
  roleSelector:
    matchLabels:
      iam.kubesphere.io/aggregate-to-cluster-viewer: ""
  templateNames:
    - cluster-view-components
    - cluster-view-volume-snapshot-classes
    - cluster-view-volumes
    - cluster-view-roles
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - '*'
    verbs:
      - GET
---
# Source: ks-core/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubesphere
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubesphere
    namespace: kubesphere-system
---
# Source: ks-core/templates/ks-console.yml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-console
    tier: frontend
    version: v4.0.0
  name: ks-console
spec:
  ports:
  - name: nginx
    port: 80
    protocol: TCP
    targetPort: 8000
    nodePort:
      30880
  selector:
    app: ks-console
    tier: frontend
  type: NodePort
---
# Source: ks-core/templates/services.yml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/ks-apiserver
  labels:
    app: ks-apiserver
    tier: backend
    version: v4.0.0
  name: ks-apiserver
  namespace: kubesphere-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    app: ks-apiserver
    tier: backend
    # version: v4.0.0
  type: ClusterIP
---
# Source: ks-core/templates/services.yml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-controller-manager
    tier: backend
    version: v4.0.0
  name: ks-controller-manager
  namespace: kubesphere-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    app: ks-controller-manager
    tier: backend
    # version: v4.0.0
  sessionAffinity: None
  type: ClusterIP
---
# Source: ks-core/templates/ks-apiserver.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-apiserver
    tier: backend
    version: v4.0.0
  name: ks-apiserver
  namespace: kubesphere-system
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: ks-apiserver
      tier: backend
  template:
    metadata:
      labels:
        app: ks-apiserver
        tier: backend
    spec:
      serviceAccountName: kubesphere
      
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
      containers:
        - name: ks-apiserver
          image: registry.cn-beijing.aliyuncs.com/kse/ks-apiserver:v4.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9090
              protocol: TCP
          command:
            - ks-apiserver
            - --logtostderr=true
          env:
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /version
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 15
          volumeMounts:
            - mountPath: /etc/kubesphere/
              name: kubesphere-config
            - mountPath: /etc/localtime
              name: host-time
              readOnly: true
      volumes:
        - configMap:
            defaultMode: 420
            name: kubesphere-config
          name: kubesphere-config
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
---
# Source: ks-core/templates/ks-console.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-console
    tier: frontend
    version: v4.0.0
  name: ks-console
  namespace: kubesphere-system
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: ks-console
      tier: frontend
  template:
    metadata:
      labels:
        app: ks-console
        tier: frontend
    spec:
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
      containers:
        - name: ks-console
          image: registry.cn-beijing.aliyuncs.com/kse/ks-console:v4.0.0
          imagePullPolicy: IfNotPresent
          env:
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 8
          volumeMounts:
            - name: ks-console-config
              mountPath: /opt/kubesphere/console/configs/local_config.yaml
              subPath: local_config.yaml
            - name: host-time
              mountPath: /etc/localtime
              readOnly: true
      volumes:
        - configMap:
            defaultMode: 420
            name: ks-console-config
            items:
              - key: local_config.yaml
                path: local_config.yaml
          name: ks-console-config
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
---
# Source: ks-core/templates/ks-controller-manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-controller-manager
    tier: backend
    version: v4.0.0
  name: ks-controller-manager
  namespace: kubesphere-system
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0
    type: RollingUpdate
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-controller-manager
      tier: backend
  template:
    metadata:
      labels:
        app: ks-controller-manager
        tier: backend
    spec:
      serviceAccountName: kubesphere
      
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      containers:
        - name: ks-controller-manager
          image: registry.cn-beijing.aliyuncs.com/kse/ks-controller-manager:v4.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          command:
            - controller-manager
            - --logtostderr=true
            - --leader-elect=true
            - --controllers=*
          env:
          resources:
            limits:
              cpu: 1
              memory: 1000Mi
            requests:
              cpu: 30m
              memory: 50Mi
          volumeMounts:
            - mountPath: /etc/kubesphere/
              name: kubesphere-config
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: webhook-secret
            - mountPath: /etc/localtime
              name: host-time
              readOnly: true
      volumes:
        - name: kubesphere-config
          configMap:
            name: kubesphere-config
            defaultMode: 420
        - name: webhook-secret
          secret:
            defaultMode: 420
            secretName: ks-controller-manager-webhook-cert
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
---
# Source: ks-core/templates/roletemplates.yaml
# global scope role templates
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
  name: project-admin
targetSelector:
  matchLabels:
    kubesphere.io/managed: "true"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/scope: "namespace"
        kubesphere.io/managed: "true"
  apiVersion: iam.kubesphere.io/v1beta1
  kind: Role
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "管理项目中的所有资源。", "en": "Manage all resources in the project."}'
    labels:
      iam.kubesphere.io/auto-aggregate: "true"
    name: admin
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
  name: project-operator
targetSelector:
  matchLabels:
    kubesphere.io/managed: "true"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-operator: ""
        kubesphere.io/managed: "true"
        iam.kubesphere.io/scope: "namespace"
  apiVersion: iam.kubesphere.io/v1beta1
  kind: Role
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "管理项目中除用户和角色之外的资源。", "en": "Manage resources other than users and roles in the project."}'
    labels:
      iam.kubesphere.io/auto-aggregate: "true"
    name: operator
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - ""
        - apps
        - extensions
        - batch
        - autoscaling
        - app.k8s.io
        - operations.kubesphere.io
        - resources.kubesphere.io
        - config.istio.io
        - events.k8s.io
        - events.kubesphere.io
        - snapshot.storage.k8s.io
        - networking.k8s.io
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
  name: project-viewer
targetSelector:
  matchLabels:
    kubesphere.io/managed: "true"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-viewer: ""
        kubesphere.io/managed: "true"
        iam.kubesphere.io/scope: "namespace"
  apiVersion: iam.kubesphere.io/v1beta1
  kind: Role
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看项目中的所有资源。", "en": "View all resources in the project."}'
    labels:
      iam.kubesphere.io/auto-aggregate: "true"
    name: viewer
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-admin
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/scope: 'workspace'
    templateNames:
      - workspace-manage-workspace-settings
      - workspace-view-workspace-settings
      - workspace-manage-projects
      - workspace-view-projects
      - workspace-create-projects
      - workspace-view-members
      - workspace-manage-members
      - workspace-manage-roles
      - workspace-view-roles
      - workspace-manage-groups
      - workspace-view-groups
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "管理企业空间中的所有资源。", "en": "Manage all resources in the workspace."}'
    labels:
      iam.kubesphere.io/auto-aggregate: "true"
    name: admin
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-regular
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-regular: ""
        iam.kubesphere.io/scope: "workspace"
    templateNames:
      - workspace-view-workspace-settings
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看企业空间设置。", "en": "View workspace settings."}'
    labels:
      iam.kubesphere.io/auto-aggregate: "true"
    name: regular
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
        - workspacemembers
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-self-provisioner
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-self-provisioner: ""
        iam.kubesphere.io/scope: "workspace"
    templateNames:
      - workspace-create-projects
      - workspace-view-workspace-settings
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看企业设置、创建项目。", "en": "View workspace settings, create projects."}'
    labels:
      iam.kubesphere.io/auto-aggregate: "true"
    name: self-provisioner
  rules: []
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-viewer
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/scope: "workspace"
        iam.kubesphere.io/aggregate-to-viewer: ""
    templateNames:
      - workspace-view-projects
      - workspace-view-members
      - workspace-view-roles
      - workspace-view-groups
      - workspace-view-workspace-settings
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看企业空间中的所有资源。", "en": "View all resources in the workspace."}'
    labels:
      iam.kubesphere.io/auto-aggregate: "true"
    name: viewer
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: ai-machine-learning
spec:
  displayName:
    en: AI / Machine learning
    zh: AI / 机器学习
---
# Source: ks-core/templates/categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: database
spec:
  displayName:
    en: Database
    zh: 数据库
---
# Source: ks-core/templates/categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: integration-delivery
spec:
  displayName:
    en: Integration and delivery
    zh: 集成和交付
---
# Source: ks-core/templates/categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: monitoring-logging
spec:
  displayName:
    en: Monitoring and logging
    zh: 监控和日志
---
# Source: ks-core/templates/categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: networking
spec:
  displayName:
    en: Networking
    zh: 网络
---
# Source: ks-core/templates/categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: security
spec:
  displayName:
    en: Security
    zh: 安全
---
# Source: ks-core/templates/categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: storage
spec:
  displayName:
    en: Storage
    zh: 存储
---
# Source: ks-core/templates/categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: streaming-messaging
spec:
  displayName:
    en: Streaming and messaging
    zh: 流平台和消息中间件
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-platform-settings
spec:
  displayName:
    en: 'Platform Settings'
    zh: '平台设置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-workspace-management
spec:
  displayName:
    en: Workspace
    zh: '企业空间'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-cluster-management
spec:
  displayName:
    en: Cluster Management
    zh: '集群管理'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-resource-management
spec:
  displayName:
    en: Cluster Resources
    zh: '集群资源'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-settings
spec:
  displayName:
    en: Cluster Settings
    zh: '集群设置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-app-workloads-management
spec:
  displayName:
    en: Application Workloads
    zh: '应用负载'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-project-management
spec:
  displayName:
    en: Project
    zh: '项目'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-storage-management
spec:
  displayName:
    en: Storage
    zh: '存储'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-settings
spec:
  displayName:
    en: Workspace Settings
    zh: '企业空间设置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-project-management
spec:
  displayName:
    en: Projects
    zh: '项目'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-configuration-management
spec:
  displayName:
    en: Configuration
    zh: '配置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-storage-management
spec:
  displayName:
    en: Storage
    zh: '存储'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-application-workloads
spec:
  displayName:
    en: Application Workloads
    zh: '应用负载'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-settings
spec:
  displayName:
    en: Project Settings
    zh: '项目设置'
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  name: anonymous
rules:
  - nonResourceURLs:
      - /dist/*
    verbs:
      - GET
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/rego-override: |-
      package authz
      default allow = false
      allow = true {
        input.Resource == "users"
        input.User.Name == input.Name
      }
      allow = true {
        allowedResources := ["clustermembers","workspacemembers","namespacemembers"]
        allowedResources[_] == input.Resource
        input.User.Name == input.Name
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
      allow = true {
        allowedNoneResources := ["/api","/api/v1"]
        allowedNoneResources[_] == input.Path
        input.Verb == "GET"
      }
      allow = true {
        input.APIGroup == "tenant.kubesphere.io"
        input.KubernetesRequest == false
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
  name: authenticated
rules:
  - apiGroups:
      - config.kubesphere.io
    resources:
      - configs
    verbs:
      - get
      - list
  - apiGroups:
      - iam.kubesphere.io
    resources:
      - users
      - roletemplates
      - categories
    verbs:
      - list
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - registry
      - git
    verbs:
      - get
      - create
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - clusters
    verbs:
      - get
      - list
  - apiGroups:
      - '*'
    resources:
      - storageclasses
      - storageclasscapabilities
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - namespaces
      - services
    verbs:
      - list
  - apiGroups:
      - tenant.kubesphere.io
    resources:
      - workspacetemplates
    verbs:
      - patch
  - apiGroups:
      - extensions.kubesphere.io
    resources:
      - jsbundles
    verbs:
      - get
      - list
  - apiGroups:
      - kubesphere.io
    resources:
      - extensions
    verbs:
      - get
      - list
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: '{"zh": "管理 KubeSphere 平台上的所有资源。", "en": "Manage all resources on the KubeSphere platform."}'
  labels:
    iam.kubesphere.io/auto-aggregate: "true"
  name: platform-admin
aggregationRoleTemplates:
  roleSelector:
    matchLabels:
      iam.kubesphere.io/scope: "global"
  templateNames:
    - global-manage-clusters
    - global-view-clusters
    - global-create-workspaces
    - global-view-basic
    - global-manage-app-templates
    - global-manage-users
    - global-view-roles
    - global-manage-platform-settings
    - global-manage-workspaces
    - global-view-app-templates
    - global-view-users
    - global-manage-roles
    - global-view-workspaces
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    kubesphere.io/description: '{"zh": "被邀请加入企业空间之前无法访问任何资源。", "en": "Cannot access any resources before joining a workspace."}'
    kubesphere.io/creator: admin
  name: platform-regular
rules: []
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: '{"zh": "创建企业空间并成为所创建的企业空间的管理员。", "en": "Create workspaces and become an administrator of the created workspaces."}'
  labels:
    iam.kubesphere.io/auto-aggregate: "true"
  name: platform-self-provisioner
aggregationRoleTemplates:
  templateNames:
    - global-create-workspaces
rules:
  - apiGroups:
      - tenant.kubesphere.io
    resources:
      - workspaces
      - workspacetemplates
    verbs:
      - create
      - watch
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  name: pre-registration
rules:
  - apiGroups:
      - iam.kubesphere.io
    resources:
      - users
    verbs:
      - create
      - list
---
# Source: ks-core/templates/globalrolebingings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  labels:
    iam.kubesphere.io/role-ref: platform-admin
    iam.kubesphere.io/user-ref: admin
  name: admin-platform-admin
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: platform-admin
subjects:
  - apiGroup: iam.kubesphere.io
    kind: User
    name: admin
---
# Source: ks-core/templates/globalrolebingings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  name: anonymous
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: anonymous
subjects:
  - apiGroup: iam.kubesphere.io
    kind: Group
    name: system:unauthenticated
---
# Source: ks-core/templates/globalrolebingings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  name: authenticated
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: authenticated
subjects:
  - apiGroup: iam.kubesphere.io
    kind: Group
    name: system:authenticated
---
# Source: ks-core/templates/globalrolebingings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  name: pre-registration
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: pre-registration
subjects:
  - apiGroup: iam.kubesphere.io
    kind: Group
    name: pre-registration
  - apiGroup: iam.kubesphere.io
    kind: User
    name: system:pre-registration
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: extensions.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lRU2JoZm1PR205eGRVY2hQWEp0T0Y3REFOQmdrcWhraUc5dzBCQVFzRkFEQWoKTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoYm1GblpYSXRZMkV3SGhjTk1qUXdOakl3TVRRMQpOekkzV2hjTk16UXdOakU0TVRRMU56STNXakFqTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoCmJtRm5aWEl0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREdk1YWVlmSEsKdExXK0JBZmFNTE5zSVNNVHNxazQrQU5idkZYSTVuRCsvek04SkFSM3hxRmtKOEdpSU4xR3VkWXRGdGhWT0c4UQpVdjhGSWtqNG5JNmhUVGg3T2xVNlBlbTJCWWNYcG9BQk5oSW1zWmc1VWJkVnVXWTFFUWdMS1BOZnJEM3hOd3JDCjhuN3hiWGd0M3VKbUZwamYyd3Z1QUQrK1ZBMVJTZGZlZ3lXTlpRYzFSV2tzNFl5T3c1QTZuT2loNTBBWWxHTS8KOG5mdWpSR1ZlVTZQeDVJRm9Ubk9RSmRlYkc5TkwxNEZnMkVQY1RjYUcvd202aHl4MjkzamQvb3g1UmsraXhyYwp1OU9mTFVUSUloT2dMNHBPQjZiNzA1bkJZTVpiZVBXYTdqandNbmdQMXlyZUFqSGJ1c2Rra1dVWkgzVEIyZ1JqClBWNFVkdWVibmtXSEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVV2NBNwpvNmtGQUdjcU90cjlWUHZhQlNBQjA0RXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQURGREVpN2dUMmhkMmtHCnkzSURKU3hsU1NYMkVWYU1zOUhOS3VYbVRpRlRFVUxJakpoMk9RdzVMcnZJcHRQSUU1dERhN25QZFNqR3BTaGIKN2JuMDI1dytlaGhFb2VsZno1azcvUmQ1M1ZCSjBRU2cxeVdKb2l6SGNMck5yYUtLVmFtNU50cFJDa0p3TjRRZwpVeFY1SnI1bGxMb2pJZ0RuYWtyYUVyYU55bjRQLzlYc2JTamxQWmp5Ti9INGFCa2hremUwREFhTk1uS0NMRUNXCjlPWG5aOGV5WTNpOGRJa0ppQ2tWU1Z6SlB3OUVmQUgrNE1IUC9ZMVdQNGtZWE9SVkdtQ1VUN0xVeUx3UXFuZ0MKQ0xiQU9pSDNmTlFGdEdCVGdCMGpTR3JBTDc1ZUh0cDFURkdXMUdTY3RjTVdSajRqQ0JLV0l2azFsQWV2bmdTVgpPTWxMRHIwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /mutate-extensions-kubesphere-io-v1alpha1-jsbundle
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: jsbundles.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jsbundles
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspaces": "create"}'
  labels:
    iam.kubesphere.io/category: global-workspace-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-create-workspaces
spec:
  description:
    en: 'Create workspaces and become an administrator of the created projects.'
    zh: '创建企业空间。'
  displayName:
    en: Workspace Creation
    zh: '企业空间创建'
  rules:
    - apiGroups:
        - tenant.kubesphere.io
      resources:
        - workspaces
        - workspacetemplates
      verbs:
        - create
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspaces": "view"}'
  labels:
    iam.kubesphere.io/category: global-workspace-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-workspaces
spec:
  description:
    en: 'View all workspaces and workspace resources.'
    zh: '查看所有工作空间和企业空间下的资源。'
  displayName:
    en: Workspace Viewing
    zh: 企业空间查看
  rules:
    - apiGroups:
        - '*'
      resources:
        - abnormalworkloads
        - quotas
        - workloads
        - configmaps
        - endpoints
        - events
        - limitranges
        - namespaces
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - meshpolicies
        - cronjobs
        - jobs
        - horizontalpodautoscalers
        - events
        - ingresses
        - router
        - filters
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - namespacenetworkpolicies
        - workspacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - workspacetemplates
        - workspaceroles
        - workspacemembers
        - workspacemembers/namespaces
        - workspacerolebindings
        - workloads
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - list
        - get
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspaces": "manage"}'
  labels:
    iam.kubesphere.io/category: global-workspace-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-workspaces
spec:
  description:
    en: 'Manage all workspaces and workspace resources.'
    zh: '管理所有企业空间和企业空间下的资源。'
  displayName:
    en: Workspace Management
    zh: '企业空间管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - abnormalworkloads
        - quotas
        - workloads
        - configmaps
        - endpoints
        - events
        - limitranges
        - namespaces
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - meshpolicies
        - cronjobs
        - jobs
        - horizontalpodautoscalers
        - events
        - ingresses
        - router
        - filters
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - namespacenetworkpolicies
        - workspacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - workspacetemplates
        - workspaceroles
        - workspacemembers
        - workspacemembers/namespaces
        - workspacerolebindings
        - workloads
      verbs:
        - '*'
    - apiGroups:
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"clusters": "view"}'
  labels:
    iam.kubesphere.io/category: global-cluster-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-clusters
spec:
  description:
    en: 'View all clusters and cluster resources.'
    zh: '查看所有集群和集群资源。'
  displayName:
    en: Cluster Viewing
    zh: '集群查看'
  rules:
    - apiGroups:
        - ""
        - apiextensions.k8s.io
        - app.k8s.io
        - apps
        - autoscaling
        - batch
        - config.istio.io
        - events.k8s.io
        - events.kubesphere.io
        - extensions
        - metrics.k8s.io
        - networking.k8s.io
        - node.k8s.io
        - rbac.istio.io
        - scheduling.k8s.io
        - security.istio.io
        - storage.k8s.io
        - storage.kubesphere.io
        - resources.kubesphere.io
        - cluster.kubesphere.io
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - tenant.kubesphere.io
      resources:
        - workspaces
        - workspacetemplates
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - iam.kubesphere.io
      resources:
        - clustermembers
        - clusterroles
      verbs:
        - get
        - list
        - watch
    - nonResourceURLs:
        - '*'
      verbs:
        - GET
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["global-view-clusters"]'
    iam.kubesphere.io/role-template-rules: '{"clusters": "manage"}'
    kubesphere.io/description: '{"zh":"创建集群、删除集群和管理集群中的所有资源。"}'
  labels:
    iam.kubesphere.io/category: global-cluster-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-clusters
spec:
  description:
    en: 'Create clusters, delete clusters, and manage resources in all clusters.'
    zh: '创建集群、删除集群和管理集群中的所有资源。'
  displayName:
    en: Cluster Management
    zh: '集群管理'
  rules:
    - apiGroups:
        - ""
        - apiextensions.k8s.io
        - app.k8s.io
        - apps
        - autoscaling
        - batch
        - events.k8s.io
        - extensions
        - node.k8s.io
        - scheduling.k8s.io
        - storage.k8s.io
        - storage.k8s.io
        - storage.kubesphere.io
        - resources.kubesphere.io
        - cluster.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
    - apiGroups:
        - tenant.kubesphere.io
      resources:
        - workspaces
        - workspacetemplates
      verbs:
        - update
        - patch
    - apiGroups:
        - iam.kubesphere.io
      resources:
        - clustermembers
        - clusterroles
      verbs:
        - '*'
    - nonResourceURLs:
        - '*'
      verbs:
        - GET
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"platform-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: global-platform-settings
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-platform-settings
spec:
  description:
    zh: '查看和编辑 KubeSphere 平台的设置。'
    en: 'View and edit settings of the KubeSphere platform.'
  displayName:
    en: Platform Settings Management
    zh: '平台设置管理'
  rules:
    - apiGroups:
        - extensions.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
    - apiGroups:
        - kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["global-view-users"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-roles
spec:
  description:
    en: 'View platform roles.'
    zh: '查看平台角色。'
  displayName:
    en: Role Viewing
    zh: '角色查看'
  rules:
    - apiGroups:
        - iam.kubesphere.io
      resources:
        - globalroles
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-roles
spec:
  description:
    en: 'Manage platform roles.'
    zh: '管理平台角色。'
  displayName:
    en: Role Management
    zh: '角色管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - globalroles
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"users": "view"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-users
spec:
  description:
    en: 'View users.'
    zh: '查看用户。'
  displayName:
    en: User Viewing
    zh: '用户查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - users
        - users/loginrecords
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"users": "manage"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-users
spec:
  description:
    en: 'Manage users.'
    zh: '管理用户。'
  displayName:
    en: User Management
    zh: '用户管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - users
        - users/password
        - users/loginrecords
      verbs:
        - '*'


# cluster scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"cluster-settings": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-settings
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: "true"
  name: cluster-view-cluster-settings
spec:
  displayName:
    en: Cluster Settings View
    zh: '集群设置查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"cluster-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-settings
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: "true"
  name: cluster-manage-cluster-settings
spec:
  displayName:
    en: Cluster Settings Management
    zh: '集群设置管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"customresources": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: "true"
  name: cluster-view-crds
spec:
  displayName:
    en: Custom Resource Definition Viewing
    zh: '定制资源定义查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"customresources": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: "true"
  name: cluster-manage-crds
spec:
  displayName:
    en: Custom Resource Definition Management
    zh: '定制资源定义管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-members
spec:
  displayName:
    en: Member Viewing
    zh: '成员查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-roles", "cluster-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"members": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-members
spec:
  displayName:
    en: Member Management
    zh: '成员管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-roles
spec:
  displayName:
    en: Role Viewing
    zh: '角色查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-roles"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-roles
spec:
  displayName:
    en: Role Management
    zh: '角色管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"nodes": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-view-nodes
spec:
  displayName:
    en: Node Viewing
    zh: '节点查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-nodes"]'
    iam.kubesphere.io/role-template-rules: '{"nodes": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-nodes
spec:
  displayName:
    en: Node Management
    zh: '节点管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-projects"]'
    iam.kubesphere.io/role-template-rules: '{"deployments":"view","statefulsets":"view",
        "daemonsets":"view","jobs":"view","cronjobs":"view","pods":"view","services":"view","ingresses":"view",
        "configmaps":"view","secrets":"view","serviceaccounts":"view"}'
  labels:
    iam.kubesphere.io/category: cluster-app-workloads-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-view-app-workloads
spec:
  displayName:
    en: Application Workload Viewing
    zh: '应用负载查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-app-workloads", "cluster-view-projects"]'
    iam.kubesphere.io/role-template-rules: '{"deployments":"manage","statefulsets":"manage",
            "daemonsets":"manage","jobs":"manage","cronjobs":"manage","pods":"manage","services":"manage",
            "ingresses":"manage","configmaps":"manage","secrets":"manage","serviceaccounts":"manage"}'
  labels:
    iam.kubesphere.io/category: cluster-app-workloads-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-app-workloads
spec:
  displayName:
    en: Application Workload Management
    zh: '应用负载管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"projects": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-project-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-projects
spec:
  displayName:
    en: Project Viewing
    zh: '项目查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-projects"]'
    iam.kubesphere.io/role-template-rules: '{"projects": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-project-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-projects
spec:
  displayName:
    en: Project Management
    zh: '项目管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-volumes"]'
    iam.kubesphere.io/role-template-rules: '{"storageclasses": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-storageclasses
spec:
  displayName:
    en: Storage Class Viewing
    zh: '存储类查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-volumes", "cluster-view-storageclasses"]'
    iam.kubesphere.io/role-template-rules: '{"storageclasses": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-storageclasses
spec:
  displayName:
    en: Storage Class Management
    zh: '存储类管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"volumes": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-view-volumes
spec:
  displayName:
    en: Persistent Volume Claim Viewing
    zh: '持久卷声明查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-volumes", "cluster-view-storageclasses"]'
    iam.kubesphere.io/role-template-rules: '{"volumes": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-volumes
spec:
  displayName:
    en: Persistent Volume Claim Management
    zh: '持久卷声明管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"components": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-components
spec:
  displayName:
    en: System Component Viewing
    zh: '系统组件查看'
  rules: []

# workspace scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspace-settings": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-settings
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-regular: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/aggregate-to-self-provisioner: ""
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/basic-role-template: 'true'
    kubesphere.io/managed: 'true'
  name: workspace-view-workspace-settings
spec:
  description:
    en: 'View workspace settings.'
    zh: '查看企业空间设置。'
  displayName:
    en: Workspace Settings Viewing
    zh: '企业空间设置查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspace-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-settings
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-workspace-settings
spec:
  description:
    en: 'Manage workspace settings and edit workspace information and network policies.'
    zh: '管理企业空间的基本信息、网络策略等设置。'
  displayName:
    en: Workspace Settings Management
    zh: '企业空间设置管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"projects": "create"}'
  labels:
    iam.kubesphere.io/category: workspace-project-management
    iam.kubesphere.io/aggregate-to-self-provisioner: ""
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-create-projects
spec:
  description:
    en: 'Create projects and become an administrator of the created projects.'
    zh: '创建项目并成为所创建的项目的管理员。'
  displayName:
    en: Project Creation
    zh: '项目创建'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
        - workspacemembers
        - quotas
        - abnormalworkloads
        - pods
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - '*'
      resources:
        - namespaces
        - federatednamespaces
      verbs:
        - create
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"projects": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-project-management
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-viewer: ""
    kubesphere.io/managed: 'true'
  name: workspace-view-projects
spec:
  description:
    en: 'View all projects and project resources.'
    zh: '查看企业空间中的所有项目及项目下的资源。'
  displayName:
    en: Project Viewing
    zh: '项目查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - namespaces
        - configmaps
        - endpoints
        - events
        - limitranges
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - cronjobs
        - jobs
        - events
        - ingresses
        - router
        - pods
        - pods/log
        - pods/containers
        - namespacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - quotas
        - abnormalworkloads
        - workloads
        - router
        - strategies
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - apps
        - extensions
        - batch
        - autoscaling
        - app.k8s.io
        - operations.kubesphere.io
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - list
        - get
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["workspace-view-projects","workspace-view-members","workspace-create-projects"]'
    iam.kubesphere.io/role-template-rules: '{"projects": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-project-management
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-projects
spec:
  description:
    en: 'Create, edit, and delete projects in the workspace.'
    zh: '创建、编辑和删除企业空间中的项目。'
  displayName:
    en: Project Management
    zh: '项目管理'
  rules:
    - apiGroups:
        - apps
        - extensions
        - batch
        - autoscaling
        - app.k8s.io
        - operations.kubesphere.io
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - namespaces
        - configmaps
        - endpoints
        - events
        - limitranges
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - meshpolicies
        - cronjobs
        - jobs
        - events
        - ingresses
        - router
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - namespacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - quotas
        - abnormalworkloads
        - workloads
        - router
        - strategies
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-viewer: ""
    kubesphere.io/managed: 'true'
  name: workspace-view-members
spec:
  description:
    en: 'View workspace members.'
    zh: '查看企业空间成员。'
  displayName:
    en: Member Viewing
    zh: '成员查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspacemembers
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-members
spec:
  description:
    en: 'Manage workspace members.'
    zh: '管理企业空间成员。'
  displayName:
    en: Member Management
    zh: '成员管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspacemembers
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - workspaceroles
      verbs:
        - list
        - get
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["workspace-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-viewer: ""
    kubesphere.io/managed: 'true'
  name: workspace-view-roles
spec:
  description:
    en: 'View workspace roles.'
    zh: '查看企业空间角色。'
  displayName:
    en: Role Viewing
    zh: "角色查看"
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaceroles
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-roles
spec:
  description:
    en: 'Manage workspace roles.'
    zh: '管理企业空间角色。'
  displayName:
    en: Role Management
    zh: '角色管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaceroles
      verbs:
        - '*'

# namespace scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"project-settings": "view"}'
  labels:
    iam.kubesphere.io/category: namespace-settings
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
    iam.kubesphere.io/basic-role-template: 'true'
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: namespace-view-project-settings
spec:
  description:
    en: 'View project settings including project basic information, external access settings and resource quotas settings.'
    zh: '查看项目设置，包括项目基本信息、外部访问设置、资源配额等。'
  displayName:
    en: Project Settings Viewing
    zh: '项目设置查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - 'namespaces'
      verbs:
        - 'get'
    - apiGroups:
        - 'resources.kubesphere.io'
      resources:
        - 'quotas'
        - 'metrics'
      verbs:
        - 'list'
    - apiGroups:
        - ''
      resources:
        - 'limitranges'
      verbs:
        - 'list'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"project-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-settings
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-project-settings
spec:
  description:
    en: 'Manage project settings including project basic information, external access settings and resource quotas settings.'
    zh: '管理项目设置，包括项目基本信息、外部访问设置、资源配额等。'
  displayName:
    en: Project Settings Management
    zh: '项目设置管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-members
spec:
  description:
    en: 'View project members.'
    zh: '查看项目成员。'
  displayName:
    en: Member Viewing
    zh: '成员查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - namespacemembers
        - rolebindings
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-members
spec:
  description:
    en: 'Manage project members.'
    zh: '管理项目成员。'
  displayName:
    en: Member Management
    zh: '成员管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - namespacemembers
        - rolebindings
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-roles
spec:
  description:
    en: 'View project roles.'
    zh: '查看项目角色。'
  displayName:
    en: Role Viewing
    zh: '角色查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - roles
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-roles
spec:
  description:
    en: 'Manage project roles.'
    zh: '管理项目角色。'
  displayName:
    en: Role Management
    zh: '角色管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - roles
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-volumes","namespace-view-secrets","namespace-view-configmaps"]'
    iam.kubesphere.io/role-template-rules: '{"applications":"view","deployments":"view","statefulsets":"view",
    "daemonsets":"view","jobs":"view","cronjobs":"view","pods":"view","services":"view","ingresses":"view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-application-workloads
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-app-workloads
spec:
  description:
    en: 'View resources such as applications, services, workloads and jobs in the project.'
    zh: '查看项目中的应用、服务、工作负载和任务等资源。'
  displayName:
    en: Application Workload Viewing
    zh: '应用负载查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - jobs
        - cronjobs
        - pods
        - pods/log
        - pods/containers
        - services
        - ingresses
        - router
        - horizontalpodautoscalers
        - configmaps
        - secrets
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-app-workloads"]'
    iam.kubesphere.io/role-template-rules: '{"applications":"manage","deployments":"manage","statefulsets":"manage",
      "daemonsets":"manage","jobs":"manage","cronjobs":"manage","pods":"manage","services":"manage","ingresses":"manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-application-workloads
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-app-workloads
spec:
  description:
    en: 'Manage resources such as applications, services, workloads and jobs in the project.'
    zh: '管理项目中的应用、服务、工作负载和任务等资源。'
  displayName:
    en: Application Workload Management
    zh: '应用负载管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - jobs
        - cronjobs
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - services
        - ingresses
        - router
        - workloads
        - horizontalpodautoscalers
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - secrets
        - secrets
      verbs:
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"configmaps": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-configmaps
spec:
  description:
    en: 'View configmaps in the project.'
    zh: '查看项目中的配置字典。'
  displayName:
    en: ConfigMap Viewing
    zh: '配置字典查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - configmaps
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-configmaps"]'
    iam.kubesphere.io/role-template-rules: '{"configmaps": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-configmaps
spec:
  description:
    en: 'Create, edit, and delete configmaps in the project.'
    zh: '创建、编辑和删除项目中的配置字典。'
  displayName:
    en: ConfigMap Management
    zh: '配置字典管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - configmaps
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"secrets": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-secrets
spec:
  description:
    en: 'View secrets in the project.'
    zh: '查看项目中的保密字典。'
  displayName:
    en: Secret Viewing
    zh: '保密字典查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - secrets
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-secrets"]'
    iam.kubesphere.io/role-template-rules: '{"secrets": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-secrets
spec:
  description:
    en: 'Create, edit, and delete secrets in the project.'
    zh: '创建、编辑和删除项目中的保密字典。'
  displayName:
    en: Secret Management
    zh: '保密字典管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - secrets
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-roles","namespace-view-secrets"]'
    iam.kubesphere.io/role-template-rules: '{"serviceaccounts": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-serviceaccount
spec:
  description:
    en: 'View service accounts in the project.'
    zh: '查看项目中的服务账户。'
  displayName:
    en: Service Account Viewing
    zh: '服务账户查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - serviceaccounts
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-serviceaccount"]'
    iam.kubesphere.io/role-template-rules: '{"serviceaccounts": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-serviceaccount
spec:
  description:
    en: 'Create, edit, and delete service accounts in the project.'
    zh: '创建、编辑和删除项目中的服务帐户。'
  displayName:
    en: Service Account Management
    zh: '服务账户管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - serviceaccounts
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-snapshots"]'
    iam.kubesphere.io/role-template-rules: '{"volumes": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-storage-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-volumes
spec:
  description:
    en: 'View persistent volume claims in the project.'
    zh: '查看项目中的持久卷声明。'
  displayName:
    en: Volume Viewing
    zh: '持久卷声明查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - persistentvolumeclaims
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - '*'
      resources:
        - pods
      verbs:
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-volumes","namespace-manage-snapshots"]'
    iam.kubesphere.io/role-template-rules: '{"volumes": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-storage-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-volumes
spec:
  description:
    en: 'Create, edit, and delete persistent volume claims in the project.'
    zh: '创建、编辑和删除项目中的持久卷声明。'
  displayName:
    en: Volume Management
    zh: 持久卷声明管理
  rules:
    - apiGroups:
        - '*'
      resources:
        - persistentvolumeclaims
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - pods
      verbs:
        - list
---
# Source: ks-core/templates/user.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: User
metadata:
  name: admin
  annotations:
    iam.kubesphere.io/uninitialized: "true"
    iam.kubesphere.io/globalrole: "platform-admin"
spec:
  email: admin@kubesphere.io
  password: "$2a$10$zcHepmzfKPoxCVCYZr5K7ORPZZ/ySe9p/7IUb/8u./xHrnSX2LOCO"
status:
  state: Active
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: users.iam.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lRU2JoZm1PR205eGRVY2hQWEp0T0Y3REFOQmdrcWhraUc5dzBCQVFzRkFEQWoKTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoYm1GblpYSXRZMkV3SGhjTk1qUXdOakl3TVRRMQpOekkzV2hjTk16UXdOakU0TVRRMU56STNXakFqTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoCmJtRm5aWEl0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREdk1YWVlmSEsKdExXK0JBZmFNTE5zSVNNVHNxazQrQU5idkZYSTVuRCsvek04SkFSM3hxRmtKOEdpSU4xR3VkWXRGdGhWT0c4UQpVdjhGSWtqNG5JNmhUVGg3T2xVNlBlbTJCWWNYcG9BQk5oSW1zWmc1VWJkVnVXWTFFUWdMS1BOZnJEM3hOd3JDCjhuN3hiWGd0M3VKbUZwamYyd3Z1QUQrK1ZBMVJTZGZlZ3lXTlpRYzFSV2tzNFl5T3c1QTZuT2loNTBBWWxHTS8KOG5mdWpSR1ZlVTZQeDVJRm9Ubk9RSmRlYkc5TkwxNEZnMkVQY1RjYUcvd202aHl4MjkzamQvb3g1UmsraXhyYwp1OU9mTFVUSUloT2dMNHBPQjZiNzA1bkJZTVpiZVBXYTdqandNbmdQMXlyZUFqSGJ1c2Rra1dVWkgzVEIyZ1JqClBWNFVkdWVibmtXSEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVV2NBNwpvNmtGQUdjcU90cjlWUHZhQlNBQjA0RXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQURGREVpN2dUMmhkMmtHCnkzSURKU3hsU1NYMkVWYU1zOUhOS3VYbVRpRlRFVUxJakpoMk9RdzVMcnZJcHRQSUU1dERhN25QZFNqR3BTaGIKN2JuMDI1dytlaGhFb2VsZno1azcvUmQ1M1ZCSjBRU2cxeVdKb2l6SGNMck5yYUtLVmFtNU50cFJDa0p3TjRRZwpVeFY1SnI1bGxMb2pJZ0RuYWtyYUVyYU55bjRQLzlYc2JTamxQWmp5Ti9INGFCa2hremUwREFhTk1uS0NMRUNXCjlPWG5aOGV5WTNpOGRJa0ppQ2tWU1Z6SlB3OUVmQUgrNE1IUC9ZMVdQNGtZWE9SVkdtQ1VUN0xVeUx3UXFuZ0MKQ0xiQU9pSDNmTlFGdEdCVGdCMGpTR3JBTDc1ZUh0cDFURkdXMUdTY3RjTVdSajRqQ0JLV0l2azFsQWV2bmdTVgpPTWxMRHIwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-email-iam-kubesphere-io-v1beta1
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: users.iam.kubesphere.io
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: app.kubernetes.io/managed-by
          operator: NotIn
          values:
            - Helm
    rules:
      - apiGroups:
          - iam.kubesphere.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - users
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: resourcesquotas.quota.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lRU2JoZm1PR205eGRVY2hQWEp0T0Y3REFOQmdrcWhraUc5dzBCQVFzRkFEQWoKTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoYm1GblpYSXRZMkV3SGhjTk1qUXdOakl3TVRRMQpOekkzV2hjTk16UXdOakU0TVRRMU56STNXakFqTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoCmJtRm5aWEl0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREdk1YWVlmSEsKdExXK0JBZmFNTE5zSVNNVHNxazQrQU5idkZYSTVuRCsvek04SkFSM3hxRmtKOEdpSU4xR3VkWXRGdGhWT0c4UQpVdjhGSWtqNG5JNmhUVGg3T2xVNlBlbTJCWWNYcG9BQk5oSW1zWmc1VWJkVnVXWTFFUWdMS1BOZnJEM3hOd3JDCjhuN3hiWGd0M3VKbUZwamYyd3Z1QUQrK1ZBMVJTZGZlZ3lXTlpRYzFSV2tzNFl5T3c1QTZuT2loNTBBWWxHTS8KOG5mdWpSR1ZlVTZQeDVJRm9Ubk9RSmRlYkc5TkwxNEZnMkVQY1RjYUcvd202aHl4MjkzamQvb3g1UmsraXhyYwp1OU9mTFVUSUloT2dMNHBPQjZiNzA1bkJZTVpiZVBXYTdqandNbmdQMXlyZUFqSGJ1c2Rra1dVWkgzVEIyZ1JqClBWNFVkdWVibmtXSEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVV2NBNwpvNmtGQUdjcU90cjlWUHZhQlNBQjA0RXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQURGREVpN2dUMmhkMmtHCnkzSURKU3hsU1NYMkVWYU1zOUhOS3VYbVRpRlRFVUxJakpoMk9RdzVMcnZJcHRQSUU1dERhN25QZFNqR3BTaGIKN2JuMDI1dytlaGhFb2VsZno1azcvUmQ1M1ZCSjBRU2cxeVdKb2l6SGNMck5yYUtLVmFtNU50cFJDa0p3TjRRZwpVeFY1SnI1bGxMb2pJZ0RuYWtyYUVyYU55bjRQLzlYc2JTamxQWmp5Ti9INGFCa2hremUwREFhTk1uS0NMRUNXCjlPWG5aOGV5WTNpOGRJa0ppQ2tWU1Z6SlB3OUVmQUgrNE1IUC9ZMVdQNGtZWE9SVkdtQ1VUN0xVeUx3UXFuZ0MKQ0xiQU9pSDNmTlFGdEdCVGdCMGpTR3JBTDc1ZUh0cDFURkdXMUdTY3RjTVdSajRqQ0JLV0l2azFsQWV2bmdTVgpPTWxMRHIwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-quota-kubesphere-io-v1alpha2
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    name: resourcesquotas.quota.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - '*'
        apiVersions:
          - '*'
        operations:
          - CREATE
        resources:
          - pods
          - persistentvolumeclaims
          - services
        scope: '*'
    sideEffects: None
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: extensions.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lRU2JoZm1PR205eGRVY2hQWEp0T0Y3REFOQmdrcWhraUc5dzBCQVFzRkFEQWoKTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoYm1GblpYSXRZMkV3SGhjTk1qUXdOakl3TVRRMQpOekkzV2hjTk16UXdOakU0TVRRMU56STNXakFqTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoCmJtRm5aWEl0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREdk1YWVlmSEsKdExXK0JBZmFNTE5zSVNNVHNxazQrQU5idkZYSTVuRCsvek04SkFSM3hxRmtKOEdpSU4xR3VkWXRGdGhWT0c4UQpVdjhGSWtqNG5JNmhUVGg3T2xVNlBlbTJCWWNYcG9BQk5oSW1zWmc1VWJkVnVXWTFFUWdMS1BOZnJEM3hOd3JDCjhuN3hiWGd0M3VKbUZwamYyd3Z1QUQrK1ZBMVJTZGZlZ3lXTlpRYzFSV2tzNFl5T3c1QTZuT2loNTBBWWxHTS8KOG5mdWpSR1ZlVTZQeDVJRm9Ubk9RSmRlYkc5TkwxNEZnMkVQY1RjYUcvd202aHl4MjkzamQvb3g1UmsraXhyYwp1OU9mTFVUSUloT2dMNHBPQjZiNzA1bkJZTVpiZVBXYTdqandNbmdQMXlyZUFqSGJ1c2Rra1dVWkgzVEIyZ1JqClBWNFVkdWVibmtXSEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVV2NBNwpvNmtGQUdjcU90cjlWUHZhQlNBQjA0RXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQURGREVpN2dUMmhkMmtHCnkzSURKU3hsU1NYMkVWYU1zOUhOS3VYbVRpRlRFVUxJakpoMk9RdzVMcnZJcHRQSUU1dERhN25QZFNqR3BTaGIKN2JuMDI1dytlaGhFb2VsZno1azcvUmQ1M1ZCSjBRU2cxeVdKb2l6SGNMck5yYUtLVmFtNU50cFJDa0p3TjRRZwpVeFY1SnI1bGxMb2pJZ0RuYWtyYUVyYU55bjRQLzlYc2JTamxQWmp5Ti9INGFCa2hremUwREFhTk1uS0NMRUNXCjlPWG5aOGV5WTNpOGRJa0ppQ2tWU1Z6SlB3OUVmQUgrNE1IUC9ZMVdQNGtZWE9SVkdtQ1VUN0xVeUx3UXFuZ0MKQ0xiQU9pSDNmTlFGdEdCVGdCMGpTR3JBTDc1ZUh0cDFURkdXMUdTY3RjTVdSajRqQ0JLV0l2azFsQWV2bmdTVgpPTWxMRHIwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-extensions-kubesphere-io-v1alpha1-jsbundle
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: jsbundles.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jsbundles
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lRU2JoZm1PR205eGRVY2hQWEp0T0Y3REFOQmdrcWhraUc5dzBCQVFzRkFEQWoKTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoYm1GblpYSXRZMkV3SGhjTk1qUXdOakl3TVRRMQpOekkzV2hjTk16UXdOakU0TVRRMU56STNXakFqTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoCmJtRm5aWEl0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREdk1YWVlmSEsKdExXK0JBZmFNTE5zSVNNVHNxazQrQU5idkZYSTVuRCsvek04SkFSM3hxRmtKOEdpSU4xR3VkWXRGdGhWT0c4UQpVdjhGSWtqNG5JNmhUVGg3T2xVNlBlbTJCWWNYcG9BQk5oSW1zWmc1VWJkVnVXWTFFUWdMS1BOZnJEM3hOd3JDCjhuN3hiWGd0M3VKbUZwamYyd3Z1QUQrK1ZBMVJTZGZlZ3lXTlpRYzFSV2tzNFl5T3c1QTZuT2loNTBBWWxHTS8KOG5mdWpSR1ZlVTZQeDVJRm9Ubk9RSmRlYkc5TkwxNEZnMkVQY1RjYUcvd202aHl4MjkzamQvb3g1UmsraXhyYwp1OU9mTFVUSUloT2dMNHBPQjZiNzA1bkJZTVpiZVBXYTdqandNbmdQMXlyZUFqSGJ1c2Rra1dVWkgzVEIyZ1JqClBWNFVkdWVibmtXSEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVV2NBNwpvNmtGQUdjcU90cjlWUHZhQlNBQjA0RXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQURGREVpN2dUMmhkMmtHCnkzSURKU3hsU1NYMkVWYU1zOUhOS3VYbVRpRlRFVUxJakpoMk9RdzVMcnZJcHRQSUU1dERhN25QZFNqR3BTaGIKN2JuMDI1dytlaGhFb2VsZno1azcvUmQ1M1ZCSjBRU2cxeVdKb2l6SGNMck5yYUtLVmFtNU50cFJDa0p3TjRRZwpVeFY1SnI1bGxMb2pJZ0RuYWtyYUVyYU55bjRQLzlYc2JTamxQWmp5Ti9INGFCa2hremUwREFhTk1uS0NMRUNXCjlPWG5aOGV5WTNpOGRJa0ppQ2tWU1Z6SlB3OUVmQUgrNE1IUC9ZMVdQNGtZWE9SVkdtQ1VUN0xVeUx3UXFuZ0MKQ0xiQU9pSDNmTlFGdEdCVGdCMGpTR3JBTDc1ZUh0cDFURkdXMUdTY3RjTVdSajRqQ0JLV0l2azFsQWV2bmdTVgpPTWxMRHIwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-extensions-kubesphere-io-v1alpha1-apiservice
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: apiservices.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - apiservices
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNVENDQWhtZ0F3SUJBZ0lRU2JoZm1PR205eGRVY2hQWEp0T0Y3REFOQmdrcWhraUc5dzBCQVFzRkFEQWoKTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoYm1GblpYSXRZMkV3SGhjTk1qUXdOakl3TVRRMQpOekkzV2hjTk16UXdOakU0TVRRMU56STNXakFqTVNFd0h3WURWUVFERXhocmN5MWpiMjUwY205c2JHVnlMVzFoCmJtRm5aWEl0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREdk1YWVlmSEsKdExXK0JBZmFNTE5zSVNNVHNxazQrQU5idkZYSTVuRCsvek04SkFSM3hxRmtKOEdpSU4xR3VkWXRGdGhWT0c4UQpVdjhGSWtqNG5JNmhUVGg3T2xVNlBlbTJCWWNYcG9BQk5oSW1zWmc1VWJkVnVXWTFFUWdMS1BOZnJEM3hOd3JDCjhuN3hiWGd0M3VKbUZwamYyd3Z1QUQrK1ZBMVJTZGZlZ3lXTlpRYzFSV2tzNFl5T3c1QTZuT2loNTBBWWxHTS8KOG5mdWpSR1ZlVTZQeDVJRm9Ubk9RSmRlYkc5TkwxNEZnMkVQY1RjYUcvd202aHl4MjkzamQvb3g1UmsraXhyYwp1OU9mTFVUSUloT2dMNHBPQjZiNzA1bkJZTVpiZVBXYTdqandNbmdQMXlyZUFqSGJ1c2Rra1dVWkgzVEIyZ1JqClBWNFVkdWVibmtXSEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVV2NBNwpvNmtGQUdjcU90cjlWUHZhQlNBQjA0RXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQURGREVpN2dUMmhkMmtHCnkzSURKU3hsU1NYMkVWYU1zOUhOS3VYbVRpRlRFVUxJakpoMk9RdzVMcnZJcHRQSUU1dERhN25QZFNqR3BTaGIKN2JuMDI1dytlaGhFb2VsZno1azcvUmQ1M1ZCSjBRU2cxeVdKb2l6SGNMck5yYUtLVmFtNU50cFJDa0p3TjRRZwpVeFY1SnI1bGxMb2pJZ0RuYWtyYUVyYU55bjRQLzlYc2JTamxQWmp5Ti9INGFCa2hremUwREFhTk1uS0NMRUNXCjlPWG5aOGV5WTNpOGRJa0ppQ2tWU1Z6SlB3OUVmQUgrNE1IUC9ZMVdQNGtZWE9SVkdtQ1VUN0xVeUx3UXFuZ0MKQ0xiQU9pSDNmTlFGdEdCVGdCMGpTR3JBTDc1ZUh0cDFURkdXMUdTY3RjTVdSajRqQ0JLV0l2azFsQWV2bmdTVgpPTWxMRHIwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-extensions-kubesphere-io-v1alpha1-reverseproxy
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: reverseproxies.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - reverseproxies
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/workspace.yaml
apiVersion: tenant.kubesphere.io/v1alpha2
kind: WorkspaceTemplate
metadata:
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: "system-workspace is a built-in workspace automatically created by KubeSphere. It contains all system components to run KubeSphere."
  name: system-workspace
spec:
  placement:
    clusterSelector: {}
  template:
    spec:
      manager: admin
---
# Source: ks-core/templates/post-install-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-release-post-install"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: kubesphere
      containers:
        - name: post-install-job
          image: "kubesphere/kubectl:v1.27.4"
          command:
            - /bin/bash
            - -c
            - |
              for ns in kubesphere-system default kube-system;
              do
                kubectl label ns $ns kubesphere.io/workspace=system-workspace
                kubectl label ns $ns kubesphere.io/managed=true
              done
---
# Source: ks-core/templates/pre-delete-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-release-pre-delete"
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: kubesphere
      containers:
        - name: pre-delete-job
          image: "kubesphere/kubectl:v1.27.4"
          command:
            - /bin/bash
            - -c
            - |
              kubectl -n kubesphere-system scale deploy ks-controller-manager --replicas=0
              until [ "$(kubectl -n kube-system get deploy ks-controller-manager -o jsonpath='{.status.readyReplicas}')" = "" ];
              do
                echo "ks-controller-manager is running......"
                sleep 1s
              done
              kubectl patch workspaces.tenant.kubesphere.io system-workspace -p '{"metadata":{"finalizers":[]}}' --type=merge
              kubectl patch workspacetemplates.tenant.kubesphere.io system-workspace -p '{"metadata":{"finalizers":[]}}' --type=merge
              for ns in $(kubectl get ns -o jsonpath='{.items[*].metadata.name}')
              do 
                  kubectl label ns $ns kubesphere.io/workspace- && \
                  kubectl patch ns $ns -p '{"metadata":{"ownerReferences":[]}}' --type=merge && \
                  echo "{\"kind\":\"Namespace\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"$ns\",\"finalizers\":null}}" | kubectl replace --raw "/api/v1/namespaces/$ns/finalize" -f - 
              done
