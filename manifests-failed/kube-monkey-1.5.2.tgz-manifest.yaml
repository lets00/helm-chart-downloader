---
# Source: kube-monkey/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kube-monkey
  namespace: kube-monkey-1.5.2.tgz
---
# Source: kube-monkey/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-kube-monkey
  namespace: kube-monkey-1.5.2.tgz
data:
    config.toml: |
      [kubemonkey]
      dry_run = true
      run_hour = 8
      start_hour = 10
      end_hour = 16
      blacklisted_namespaces = [ "kube-system", ]
      time_zone = "America/New_York"
      [debug]
      enabled = false
      schedule_immediate_kill = false
      [notifications]
      enabled = false
      [notifications.attacks]
---
# Source: kube-monkey/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-kube-monkey
rules:
- apiGroups:
  - ""
  - "extensions"
  - "apps"
  resources:
  - daemonsets
  - deployments
  - deployments/rollback
  - deployments/scale
  - replicasets
  - replicasets/scale
  - statefulsets
  - statefulsets/scale
  verbs:
  - get
  - list
  - watch
- apiGroups: 
  - ""
  resources: 
  - "namespaces"
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - "pods"
  verbs:
  - "get"
  - "list"
  - "watch"
  - "delete"
---
# Source: kube-monkey/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kube-monkey
  namespace: kube-monkey-1.5.2.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kube-monkey
subjects:
  - kind: ServiceAccount
    name: my-release-kube-monkey
    namespace: kube-monkey-1.5.2.tgz
---
# Source: kube-monkey/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kube-monkey
  namespace: kube-monkey-1.5.2.tgz
  labels:
    app: kube-monkey
    chart: kube-monkey-1.5.2
    release: my-release
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-monkey
      release: my-release
  template:
    metadata:
      labels:
        app: kube-monkey
        release: my-release
    spec:
      containers:
        - name: kube-monkey
          image: "ayushsobti/kube-monkey:v0.5.2"
          imagePullPolicy: IfNotPresent
          command:
            - "/kube-monkey"
          args: ["-v=5", "-log_dir=/var/log/kube-monkey"]
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: "/etc/kube-monkey"
      securityContext:
        {}
      serviceAccountName: my-release-kube-monkey
      volumes:
        - name: config-volume
          configMap:
            name: my-release-kube-monkey
