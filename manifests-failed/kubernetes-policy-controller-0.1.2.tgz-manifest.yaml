---
# Source: kubernetes-policy-controller/templates/webhookconfiguration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kubernetes-policy-controller-cert
  namespace: kubernetes-policy-controller-0.1.2.tgz
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:

  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRZmdkLzJ6bDE2enVrb0pjN2lvRms2akFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCdmNHRXRZV1J0YVhOemFXOXVMV05oTUI0WERUSTBNRFl5TURFME5UY3pPVm9YRFRNMApNRFl4T0RFME5UY3pPVm93WFRGYk1Ga0dBMVVFQXhOU2JYa3RjbVZzWldGelpTMXJkV0psY201bGRHVnpMWEJ2CmJHbGplUzFqYjI1MGNtOXNiR1Z5TG10MVltVnlibVYwWlhNdGNHOXNhV041TFdOdmJuUnliMnhzWlhJdE1DNHgKTGpJdWRHZDZMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTndRV1YrNQpkTnl6M1laN2FJZnVuRU1YVC91dzdncEQ4cGlXdCtlM2NXejBuZkJrNnZYWlQ3end5SDY2amdtbjBwOThYN3FSCngzZU51S2FJUnlsYjFTN2x0K2gydmVNYlJleTl6amZEeUVPVWo4WC90NnN6dDh5QlhYQlE1cEhvUkpQeWEvY20KbXlIbUtSWUNJRkQvYXFpRjFuYTc4WVdhMms1WUNhRlZPZXNQTGlUVjNrZU4zUENrMXMzRWFFVE53cXZBVzViOQoyOHc2QVRGYk5NclNwbVBqblFpUjB2dDV6VlN4b3hneWI1Q1p1djJ4bGEvRDdHSEVRNTZlS3pvNWhlMU5TZ0ZvCi96WStRVFVPOThheE5Fa21udHZPTjEwcjNSSi83M1JRQ0Y1QlVQLzJ6L0lNUVNiZ1ZEVUZOc0JiQUFSZXNTcWMKdmNXQlNhQnVoVVAyMmhzQ0F3RUFBYU5nTUY0d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRRwpDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRXhxCjh6SU5LM01GOTFKZWdKdnJwWFNWZ2F1Wk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQW1rb3lKMmRwS2lsVjUKZFVhTWlaY3k2Mm1PYk9KR2VaL01JWGhMbkhyOWtoc21jYnZpR05ud3ZlWVY5cVFRdlliQlk4SUd0SEsra0xFRQpobFIvbmxKSWVjN3BDM1RTZHhZK1Q0SjNxTnRHYlI5SEJRaUVOSVlHU3dXWWFSTW9rZVRUZEJFOEFNdm1uS3ZICnZmMU1YSWYvRTBUV2N6d0JHTFB0c1ZyS1lqTU5TbVZxWDhNeHpHWUs3WnJYb05YeHZsYzR6ZUtseFNpV0xxMkQKcGN3R1FKMVYzTTFCTEhBUDhpYUJZM0VRd2NOZE4yLzVFeE8wUkZ4T2ErTzBja3FWRW8yaURhN0FjMEt1U0FNSwpEclBaZ1dwY2JqSFVaS0RHaTNFZnNUcXd5YnJPdXIxbkhXWTIzaFJFdVVGSjNmaHRldEtYU3VNeXhTZ1VaN3ZhCjJFMjRQMWoxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM0JCWlg3bDAzTFBkaG50b2grNmNReGRQKzdEdUNrUHltSmEzNTdkeGJQU2Q4R1RxCjlkbFB2UERJZnJxT0NhZlNuM3hmdXBISGQ0MjRwb2hIS1Z2Vkx1VzM2SGE5NHh0RjdMM09OOFBJUTVTUHhmKzMKcXpPM3pJRmRjRkRta2VoRWsvSnI5eWFiSWVZcEZnSWdVUDlxcUlYV2RydnhoWnJhVGxnSm9WVTU2dzh1Sk5YZQpSNDNjOEtUV3pjUm9STTNDcThCYmx2M2J6RG9CTVZzMHl0S21ZK09kQ0pIUyszbk5WTEdqR0RKdmtKbTYvYkdWCnI4UHNZY1JEbnA0ck9qbUY3VTFLQVdqL05qNUJOUTczeHJFMFNTYWUyODQzWFN2ZEVuL3ZkRkFJWGtGUS8vYlAKOGd4Qkp1QlVOUVUyd0ZzQUJGNnhLcHk5eFlGSm9HNkZRL2JhR3dJREFRQUJBb0lCQVFEUklsQnRZa2dtL21CRwpUNzJWZ1RQTHByb0NUYkRLM0t3T1N4M1cva1N5OFAydjJaaFpyLzNSWjFxQzVUUGJCVHhyQ0wzSkJvVnpucUdlCjBlQWU5QUR6SXFqV0tSSm9aQ0RkemJ2T3p5Ymc0cXlIMUc5dUtpWkFHYWo4OWtWSTRGMWI1SVNxU213Zm1TWHUKbm5Lcnh6QkxtM1duUFJGWWtVTnFOTXhpSUNaOHRSb2ZsZlh4RGN6MS95TGROTnJpU3p3KzZqRFIyNnZOdk43QwpQS2I3QXZBNzZEWVNuL3ZwV3lMREhpV1FacS9CLzJobEdqYVpoUDdDWkdPR2NlbGl6VWV6MWZSaFpXRWh0bzdBCmQzVUJMSkJ4WkRFcW9INXJyWkZEWlBma3ZURWNhV0s4VFZMeHFuOXNZamQzYVpUSWRUVCtBK25ZWUEyNGFIa2kKS21JWVR6R1JBb0dCQU55QzNvRDlUMGRRZkVLQ3hLNFhvS0Z5UGpxVWZMWFBtM2dENzhsdk0wSHNoRXdtNzlUSQpONnE0Mit2VjdUUVkxNmNuRUJFMFlSNFRoMTFubDN4VzlzVzVPTHZyeWlKZTVkMjRoZjlXWTRKRWRCSnh0TmVQClFmU0NBVjdSbmRlWWRZaEt4MkRyb1hWZzBKNUUzRjdIbmRKWkZ6L0xGR0EvaHY1U2lINWM2Q1YzQW9HQkFQOTcKREp2THZOSXlSYm5xNW9GL21LVlFWZGhqWGQzY2JLSml1Nnc4b1lxSVl5V1ltWjlESzFTZlROcnpabmZEZllwRgpoR0Jlb2JleGJIOVFOM0RQZkw3ZCtuWXlwaFFId2hKYU9KbGZTZG1FMUpxOVhpTElGZFg3VkU0d1pDOW13MVFWCkZFYVRSY0hqaUxIcFdUaTBRc1JBRmdNMDdPTW9IeG1aZHdmRlo2bDlBb0dBWVVOTU4yTUQwL1haU1ZENnhidGcKTzdYellzMWFFS3VvN0kvMzlVYWFPa3JEcy84OHJBTkFJb3AxWHBtMmpkTWpVL1F6N3hMR2Y0aW5uWGh5NWdKSgp5TDdCR29xUFZ3ZTZwa2ljdWhwMXUrREx2ZEx2ckdEZys2TllUV1Z5Rk1XSG1mMDU0ak1zdldSZHdHR3BQaGtZCk1NN2hKVjlDOW8wdTB3QytlZFlyQTFNQ2dZRUEvWDRYZGFLREdVRStoQW02YTNXeWZSMG9BSXdmd0JxTlE5YVoKaG4ybWY3RnlSd1NTTVQ5UmlDYUQrS0FYNU85NDZqQ3Q5MzBPRXhrZG9YbHplU0MzRXg5bis4Mm5raXBjZXg5QQpGNVkvelcrS0VIdWpJdm5MQ01YVzBib2NQaGhGNlhEODdFWUdxaXBkSU1KN2Y5TUVpSHRhSEJad2tiZm1tOXoxCkNTWHJCSFVDZ1lFQTFuTGpVWXFBSVNFMnVtSnJyTWZkQ3BPQ2dXamo0SldxanduR1R6R3BzYlVvR2VDUDlTdG0KVDhoVHcwUEtMQ1M4RmlGOG95YnBrTGhXcGNsSEwyUHN3aGhDOFFkQ1RpMzh1di9IWjlRTGVFU1h6MjJISTd4ago5NWJSRUpFS1BwZm9kSG1Cc0EvZ0ZtZmxnWXJ1NDFYOEVMVEJaNGZ6OXNjYkZMKzNsTG9heEYwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubernetes-policy-controller/templates/matches-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-kubernetes-matches
  namespace: kubernetes-policy-controller-0.1.2.tgz
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  matches.rego: |-
    package k8s
    import data.kubernetes

    matches[[kind, namespace, name, resource]] {
      resource := kubernetes[kind][namespace][name].object
    }

    matches[[kind, namespace, name, resource]] {
        resource := kubernetes[kind][namespace][name]
    }
---
# Source: kubernetes-policy-controller/templates/policymatches-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-kubernetes-policymatches
  namespace: kubernetes-policy-controller-0.1.2.tgz
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  matches.rego: |-
    package k8s
    import data.kubernetes.policies

    # Matches provides an abstraction to find policies that match the (name). 
    policymatches[[name, policy]] {
        policy := policies[name]
    }
---
# Source: kubernetes-policy-controller/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-opa-viewer
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  name: view
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  name: system:serviceaccounts:kubernetes-policy-controller-0.1.2.tgz
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubernetes-policy-controller/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: kubernetes-policy-controller-0.1.2.tgz
  name: my-release-configmap-modifier
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["update", "patch"]
---
# Source: kubernetes-policy-controller/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: kubernetes-policy-controller-0.1.2.tgz
  name: my-release-configmap-modifier
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  name: my-release-configmap-modifier
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  name: system:serviceaccounts:kubernetes-policy-controller-0.1.2.tgz
  apiGroup: rbac.authorization.k8s.io
---
# Source: kubernetes-policy-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubernetes-policy-controller
  namespace: kubernetes-policy-controller-0.1.2.tgz
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:  
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
  selector:
    app.kubernetes.io/name: kubernetes-policy-controller
    app.kubernetes.io/instance: my-release
---
# Source: kubernetes-policy-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubernetes-policy-controller
  namespace: kubernetes-policy-controller-0.1.2.tgz
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-policy-controller
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-policy-controller
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/config: d780a3ab90788e846cd943e5d221dea6ae888e3e21472743c83468b0cb6f2a47
    spec:
      containers:
        # WARNING: OPA is NOT running with an authorization policy configured. This
        # means that clients can read and write policies in OPA. If you are
        # deploying OPA in an insecure environment, be sure to configure
        # authentication and authorization on the daemon. See the Security page for
        # details: https://www.openpolicyagent.org/docs/security.html.
        - name: opa
          image: "openpolicyagent/opa:0.10.1"
          imagePullPolicy: IfNotPresent
          args:
            - "run"
            - "--server"
            - "--addr=http://127.0.0.1:8181"
        - name: kube-mgmt
          image: "openpolicyagent/kube-mgmt:0.6"
          imagePullPolicy: IfNotPresent
          args:
            - "--replicate-cluster=v1/namespaces"
            - "--replicate=extensions/v1beta1/ingresses"
            - "--replicate=v1/pods"
        - name: kubernetes-policy-controller          
          image: "nikhilbh/kubernetes-policy-controller:1.2"
          imagePullPolicy: IfNotPresent
          args:
            - "--addr=0.0.0.0:443"
            - "--addr=http://127.0.0.1:7925"
          volumeMounts:
            - readOnly: true
              mountPath: /certs
              name: opa-server
          resources:
            {}
      volumes:
        - name: opa-server
          secret:
            secretName: my-release-kubernetes-policy-controller-cert
---
# Source: kubernetes-policy-controller/templates/webhookconfiguration.yaml
# this file contains 2 resources because both need the generated cert
# please don't split the resources
kind: MutatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1beta1
metadata:
  name: my-release-kubernetes-policy-controller  
  labels:
    app.kubernetes.io/name: kubernetes-policy-controller
    helm.sh/chart: kubernetes-policy-controller-0.1.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: mutating.webhook.kubernetes-policy-controller
    failurePolicy: Ignore
    namespaceSelector:
      matchLabels:
        opa-mutation: enabled
    rules:
      - apiGroups:
        - '*'
        apiVersions:
        - '*'
        operations:
        - CREATE
        - UPDATE
        resources:
        - '*'
    clientConfig:

      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRVVdHZkFRMFpSYkdvN2E1a241RTJkVEFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCdmNHRXRZV1J0YVhOemFXOXVMV05oTUI0WERUSTBNRFl5TURFME5UY3pPVm9YRFRNMApNRFl4T0RFME5UY3pPVm93R3pFWk1CY0dBMVVFQXhNUWIzQmhMV0ZrYldsemMybHZiaTFqWVRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1sNjhLelBUVUd4SlEyNlNlZ3BUZXN5bGRGUUdoNmYKUTRjcFQ3eGpQeVhDTURZaWxJaGdSV3c0aWg1Z3dDWU5TWFhnRHcvSklJVkJoTEZzZk4wWVB1bXd1N3B3SkwzUQpnM092Z1JQNnAzbngvbXliUVdFVVhpMmR6RXNEMFhiMHdTRFN5dXgwS3dhWVh0T2Y4K05IeldNeXRma0tLbS9wClJ5bTZHRmRUZEg2aFgzV2xyckRhclcyUFRLL2o4L0hDWXVzYVorbWtEZWFvQ1pUdktDeDlHcmJpaUYzMEkvVmgKdGJZVFZMVXhydExNTmhMUFdyeWlVTjlscUl6TStLbzEvTHIyb2prZmc1WlRRMTJ4RGtxU1JrQ0ZvcWxxS1Z2NQpNcDA5aWpOZ082Y0RqcnNIT1BIcE9nVHltdlFocDdZNzFIaDgrQUc4YlVDamg5MkJMNjhmZ3NrQ0F3RUFBYU5oCk1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLa01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSTWF2TXlEU3R6QmZkU1hvQ2I2NlYwbFlHcgptVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBV3Fncm9nU3UwNnlQVDhYK0pzSmRia2g5Q205dy82cG94QnJDCk0zWTR5NERFZFQxWTFiRXVvUU1FenBzeU9QdHltMG93TFFGQkdDWGtvc1A5SE0zWXdPdklEK0dteFlaSTgyRkcKVHBxQWpVYmxQTEhzMEFGa3BaWDlCaVRFUTBvOUE2VmYyMEwvT24ySHM4WU9MMXI0K1J4Q3AwbzQ2aWd6cDBwWgpQOXUwSFo0OTlWWHVQNUxtUklYUE5CQ3Qwbk92SjdpY25iN3BpVEY0M3NEQ0VndkZsLy9iSFNLSnl3WFRETm12Cm41Rjg2bTJicEZUYW5lWHRlR0hCVGluS2E1Zi9wdElLYXpWSVZMQ3RXU1dqaHI1cSt1VG03QkEwT0VwRFFwdzIKR2V4cGIvVnJYNUoyK1N5Y09JNkdaTHJxbkpOM2xqY1ZVQkUxMGFhSlVNQVVTenFEeUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==

      service:
        name: my-release-kubernetes-policy-controller
        namespace: kubernetes-policy-controller-0.1.2.tgz
        path: "/v1/admit"
