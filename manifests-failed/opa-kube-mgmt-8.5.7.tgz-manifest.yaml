---
# Source: opa-kube-mgmt/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-opa-kube-mgmt
  labels:
    app: my-release-opa-kube-mgmt
    chart: opa-kube-mgmt-8.5.7
    release: "my-release"
    heritage: "Helm"
---
# Source: opa-kube-mgmt/templates/webhookconfiguration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-opa-kube-mgmt-cert
  labels:
    app: my-release-opa-kube-mgmt
    chart: "opa-kube-mgmt-8.5.7"
    release: "my-release"
    heritage: "Helm"
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURoekNDQW0rZ0F3SUJBZ0lRTlYrOTE5OW5iUnFxS2NMQjVGZ1MvVEFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCdmNHRXRZV1J0YVhOemFXOXVMV05oTUI0WERUSTBNRFl5TURFME5UZ3hOMW9YRFRNMApNRFl4T0RFME5UZ3hOMW93UHpFOU1Ec0dBMVVFQXhNMGJYa3RjbVZzWldGelpTMXZjR0V0YTNWaVpTMXRaMjEwCkxtOXdZUzFyZFdKbExXMW5iWFF0T0M0MUxqY3VkR2Q2TG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFOcTNWYmo1bk9raHB1TXlFMDNzbTZlVW1UUTBnbTZqbHlQUTQraHdTbE9YQUQxTApKc1JlbTg5WWFDQlUrS1R6OWEwKzFzODN0SGRtWEEwNGliNTBtTlpsS0pISUw3dmxDd3A2UDV1TXFXaFV1d1FaCjd1bkdqeXVzQlIrdExGWnExY2JGSkd3ZHZ3QUdnSithd1VMTk1nTGJMSkZMQVp0UzR0RkdWeHM2cHE5WlBuaWsKVWZXN01CcTIvR0VVWkRtUTJ6Z25UWnM1WEpwU1dNVzdzMzhncCtlMnhSN2JqbkNKS2FvTUE1cVVGOFVRUzB4cQpOeExVLzdTQVZ4bWRYenh6RjU2TkU5d3BaR3ZEWDNCQXZWNkgyQmFWTjVMWkVMMHRjV2NMOCtXUzlnSDhyT2ZjCjRvalJDb290eUN5Ulc1TXJnOUNCNmVueHV2Nlpnd05EVXZ6eU9aY0NBd0VBQWFPQm9qQ0JuekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQgovd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVlZEpUWUxFTjQ1VFFWYy9WTkZudFhIQTg5cDR3UHdZRFZSMFJCRGd3Ck5vSTBiWGt0Y21Wc1pXRnpaUzF2Y0dFdGEzVmlaUzF0WjIxMExtOXdZUzFyZFdKbExXMW5iWFF0T0M0MUxqY3UKZEdkNkxuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBakw3VTRlRENna1RabFR2K2tqWkV0UWRReFQ4MQpva2tqT1VPa1EyRXNSazRtUmRhVFJVTzJJeTdYZTB6cmRNZ2FscFZQb3BBZEQ5enU0MnlEUStaR3J2TlU3bnB6CkVoWlQxUHB2L3c3NmhwL0VxNTRWR2hTUjExZmdld1hSUGtENVZXek1WM0pWMmNSY0xNakJyYVl2dmJCYzhNQk8KMjFZdGdybkJCRzVaSFBMNTJjL0NDWVZ3SUlRYmd6RlpYOU5Bcy83SW9xcTZ1SzRVSkhvOXFoalhjLzhvTzU1dApqZHpTZnZjSzB1YjdPa3IwMWl4Skh2bExROXZ1bGhBSWpmQlNjc1kvOHZyVkxZV3hBOUdWa2p3bW94a2dHMGZ0CmVYRWoxVGhjbnlFZWlIQStJKzJPS2JpQnJsVm9Nb2U4SWg1dVVRbFI0Wlh6Q2xLcC9kd2gza25aUGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMnJkVnVQbWM2U0dtNHpJVFRleWJwNVNaTkRTQ2JxT1hJOURqNkhCS1U1Y0FQVXNtCnhGNmJ6MWhvSUZUNHBQUDFyVDdXenplMGQyWmNEVGlKdm5TWTFtVW9rY2d2dStVTENuby9tNHlwYUZTN0JCbnUKNmNhUEs2d0ZINjBzVm1yVnhzVWtiQjIvQUFhQW41ckJRczB5QXRzc2tVc0JtMUxpMFVaWEd6cW1yMWsrZUtSUgo5YnN3R3JiOFlSUmtPWkRiT0NkTm16bGNtbEpZeGJ1emZ5Q241N2JGSHR1T2NJa3BxZ3dEbXBRWHhSQkxUR28zCkV0VC90SUJYR1oxZlBITVhubzBUM0Nsa2E4TmZjRUM5WG9mWUZwVTNrdGtRdlMxeFp3dno1WkwyQWZ5czU5emkKaU5FS2lpM0lMSkZia3l1RDBJSHA2Zkc2L3BtREEwTlMvUEk1bHdJREFRQUJBb0lCQUNJOW1Ybi8rZ1MxYy84VgprOWdiTnJNaG5HcUQzZmVjUE1rcXBzTjQ4T250TmVoaW40c1dsS1g5WFMvU25hcVZWdHpzZll5clYrRnBjUGZRCjVoK2UrVjUzTDhiQzVGWXlJV3hlZng3SEFxNkd0VkNMRHRBaWViK0lpclRPMDZZank1djJ1U0VEOXliMTNhVWYKQVNxSUhWQTlKOWtIT1JVc0FMNXFtTEIybWluUk1MTUFGc0twWkVMTDEyYzJtZk95cHZCV0lsQnNQbDhleWs3TgpmTFllL0M4c2ZvWEpqckJvazRBYmdQUW00TUNPQUJUQzR0M1RSRTFWRmViUFRNN0JYSGpKdjBBQTVlOTc3TGp4CjdUTU85OHR6RzREeDFvYmdmY3ppZWlzQWE3OG0vQ3NKeUVYMzlrUHc5RHVSR2xXRDBTUCtHcVBHQ1RVMkZQeFcKNXZWck5BRUNnWUVBM3lnZzFXMGg1N3orVi9tNmRpdkdsa1JQZ2NQcy93anhhODNDelVhWlZ6ZnR1MGRWZXNkMgpkK3pObnFUQzFydy9oaEdpdHBqVmxiSUNENUNjZUtLWVJOckZyUjhEYVRock9QWmIwOVBjUXNFNndzUlRsTXFvCnFjYTZyWTUyNDU5YjFHUldHVHBidjVnVFB1QndhTUg4VmVGMlYrMzNacG43VG9EZGhieThJeGNDZ1lFQSt1ZmwKOHp1bEw3V2xuOVlWdStUMGE4MUtteEtFeVJMbGgrMFpQNDVlVm12bW8yS00yZ1ljRkFlNUlNMU0vV0Y1T2J1bgpSaXd5UXZpVDlNeWtNUUVaVWcvNWdLVDk2VG5pa3lSbEc3Z1R6dlhlQm9WVXNWTkJHRldPZXBucUdjZ1AySkFuCk1MWHpQYXlQR3JOTE4rcXVROHU3cVJlYlkvczkxcUhXekhIQ3JZRUNnWUEvVGFQYXgyV0oxb3dVS3N4aFAxUEwKUnIrRElUQTJ2TE8za0J3Rm5WUmNjSW9veVRpUFpzdk5nMGhsQzNvVjdqcmE3bC9KQ3B2MEpoWDlrbGxBdzJjTQppVDd3T0U4QVp6ZkxaZDl3dkxYTDNnS3NRNE11UHpzUFJrZW9lalJ4cDhBbUJQeURsWkYzVFUyUVZaeXRxdkhJCjd2ZGlSQ2dkVytyMVB3c1lLQXo2cXdLQmdRREtNa04vaHB1U0hTS0I4bmJGV3JjV2dQUVVrQkh1TUlwRXhlL0kKNWlSa0pNUlMrc0pqbVBUYnQzV2JWNWNwd25sODZ4cmNWQldWSHRtdE41VkI0STdWTVFaeWc0UVRoWkJ2MzY2VApiZjZZbEU3K2xrZ3dOdFdJbExvalZ4SHZBT2kwTDBkRjIvdFB3bFg0d0hCbmVYcENMRmJvNTV0VU1VNGVQNEhvCmMremRBUUtCZ0d6Z3loTWo3UzZWZHdpOThCa1k1MGpvUm9FNWJHdkZxM3E1bVFzd2d1eWN5UkxmSU4xN01VZEYKT1JhZkV3VmpaNTM3a3lINm56bTc0TmJwRzRiYm1yUjNnSVgrOGw0WW5BaWloRkl1ZHJYSnArcldFUVZzVDdUTApLUG1FbWJTTDJ4TEJnS08rSGlSOGdKVE9EVVhsZ09QQU5LWUpERzRVMjVTRXc2REN4VnZCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: opa-kube-mgmt/templates/rbac-mgmt.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: opa-kube-mgmt
    chart: opa-kube-mgmt-8.5.7
    release: my-release
    component: mgmt
  name: my-release-opa-kube-mgmt-mgmt
  namespace: opa-kube-mgmt-8.5.7.tgz
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "update", "patch"]
---
# Source: opa-kube-mgmt/templates/rbac-mgmt.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: opa-kube-mgmt
    chart: opa-kube-mgmt-8.5.7
    release: my-release
    component: mgmt
  name: my-release-opa-kube-mgmt-mgmt
  namespace: opa-kube-mgmt-8.5.7.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-opa-kube-mgmt-mgmt
subjects:
  - kind: ServiceAccount
    name: my-release-opa-kube-mgmt
    namespace: opa-kube-mgmt-8.5.7.tgz
---
# Source: opa-kube-mgmt/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: my-release-opa-kube-mgmt
  labels:
    app: my-release-opa-kube-mgmt
    chart: "opa-kube-mgmt-8.5.7"
    release: "my-release"
    heritage: "Helm"
spec:
  selector:
    app: my-release-opa-kube-mgmt
  ports:
  - name: opa
    port: 8181
    targetPort: opa
---
# Source: opa-kube-mgmt/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-opa-kube-mgmt
  labels:
    app: my-release-opa-kube-mgmt
    chart: "opa-kube-mgmt-8.5.7"
    release: "my-release"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-release-opa-kube-mgmt
  template:
    metadata:
      annotations:
      labels:
        app: my-release-opa-kube-mgmt
      name: my-release-opa-kube-mgmt
    spec:
      initContainers:
        - name: initpolicy
          image: openpolicyagent/kube-mgmt:8.5.7
          imagePullPolicy: IfNotPresent
          resources:
            {}
          command:
          - /bin/sh
          - -c
          - |
            tr -dc 'A-F0-9' < /dev/urandom | dd bs=1 count=32 2>/dev/null > /bootstrap/mgmt-token
            TOKEN=`cat /bootstrap/mgmt-token`
            cat > /bootstrap/authz.rego <<EOF
            package system.authz
            default allow = false
            # Allow anonymous access to the default policy decision.
            allow { input.path = [""]; input.method = "POST" }
            allow { input.path = [""]; input.method = "GET" }
            # This is only used for health check in liveness and readiness probe
            allow { input.path = ["health"]; input.method = "GET" }
            allow { input.identity == "$TOKEN" }
            EOF
          volumeMounts:
            - name: bootstrap
              mountPath: /bootstrap
      containers:
        - name: opa
          ports:
          - name: opa
            containerPort: 8181
          image: "openpolicyagent/opa:0.53.1"
          imagePullPolicy: IfNotPresent
          env:
          resources:
            {}
          args:
            - "run"
            - "--server"
            - "--tls-cert-file=/certs/tls.crt"
            - "--tls-private-key-file=/certs/tls.key"
            - "--addr=0.0.0.0:8181"
            - "--log-level=info"
            - "--log-format=json"
            - "--authentication=token"
            - "--authorization=basic"
            - "--ignore=.*"
            - "/bootstrap"
          volumeMounts:
            - name: certs
              readOnly: true
              mountPath: /certs
            - name: bootstrap
              readOnly: true
              mountPath: /bootstrap
          readinessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: opa
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: opa
            initialDelaySeconds: 10
            periodSeconds: 15
        - name: mgmt
          image: openpolicyagent/kube-mgmt:8.5.7
          imagePullPolicy: IfNotPresent
          startupProbe:

            failureThreshold: 5
            httpGet:
              path: /health
              port: 8181
              scheme: HTTPS
            initialDelaySeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
          env:
          resources:
            
            {}
          args:
            - --opa-auth-token-file=/bootstrap/mgmt-token
            - --opa-url=https://127.0.0.1:8181/v1
            - --opa-allow-insecure
            - "--namespaces=opa-kube-mgmt-8.5.7.tgz"
            - "--enable-data=true"
            - "--enable-policies=true"

            - "--replicate-path=kubernetes"
            - "--replicate-ignore-namespaces="
          volumeMounts:
            - name: bootstrap
              readOnly: true
              mountPath: /bootstrap
      serviceAccountName: my-release-opa-kube-mgmt
      volumes:
        - name: certs
          secret:
            secretName: my-release-opa-kube-mgmt-cert
        - name: bootstrap
          emptyDir: {}
      affinity:
        {}
      nodeSelector:
        {}
      tolerations:
        []
