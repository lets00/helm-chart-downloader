---
# Source: triggers/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-triggers
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
---
# Source: triggers/templates/webhook_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: triggers-webhook-certs
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/component: webhook
---
# Source: triggers/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-triggers-logging
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
data:
  loglevel.controller: info
  loglevel.eventlistener: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
---
# Source: triggers/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-triggers-observability
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################
  
    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.
  
    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using stackdriver will incur additional charges
    metrics.backend-destination: prometheus
  
    # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used if this field is not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"
  
    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
    # Stackdriver using "global" resource type and custom metric type if the
    # metrics are not supported by "knative_revision" resource type. Setting this
    # flag to "true" could cause extra Stackdriver charge.
    # If metrics.backend-destination is not Stackdriver, this is ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
---
# Source: triggers/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-triggers
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
      - secrets
      - services
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - deployments/finalizers
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - triggers.tekton.dev
    resources:
      - clustertriggerbindings
      - eventlisteners
      - triggerbindings
      - triggertemplates
      - eventlisteners/finalizers
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - triggers.tekton.dev
    resources:
      - clustertriggerbindings/status
      - eventlisteners/status
      - triggerbindings/status
      - triggertemplates/status
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
---
# Source: triggers/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-triggers-edit
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    rbac.authorization.k8s.io/aggregate-to-admin: 'true'
rules:
  - apiGroups:
      - tekton.dev
    resources:
      - clustertriggerbindings
      - eventlisteners
      - triggerbindings
      - triggertemplates
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
# Source: triggers/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-triggers-view
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    rbac.authorization.k8s.io/aggregate-to-view: 'true'
rules:
- apiGroups:
    - tekton.dev
  resources:
    - clustertriggerbindings
    - eventlisteners
    - triggerbindings
    - triggertemplates
  verbs:
    - get
    - list
    - watch
---
# Source: triggers/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: my-release-triggers
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-triggers
subjects:
  - kind: ServiceAccount
    name: my-release-triggers
    namespace: triggers-0.4.0.tgz
---
# Source: triggers/templates/controller_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-triggers-controller
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/version: "v0.4.0"
    triggers.tekton.dev/release: "v0.4.0"
    version: "v0.4.0"
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: controller
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: controller
---
# Source: triggers/templates/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-triggers-webhook
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/version: "v0.4.0"
    triggers.tekton.dev/release: "v0.4.0"
    version: "v0.4.0"
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: webhook
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
    - name: http-metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: http-profiling
      port: 8008
      protocol: TCP
      targetPort: 8008
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: webhook
---
# Source: triggers/templates/controller_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-triggers-controller
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/version: "v0.4.0"
    triggers.tekton.dev/release: "v0.4.0"
    version: "v0.4.0"
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/part-of: tekton-triggers
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: controller
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/part-of: tekton-triggers
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: triggers-0.4.0
        app.kubernetes.io/version: "v0.4.0"
        triggers.tekton.dev/release: "v0.4.0"
        version: "v0.4.0"
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: controller
    spec:
      serviceAccountName: my-release-triggers
      containers:
        - name: controller
          image: "gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/controller:v0.4.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - "-logtostderr"
            - "-stderrthreshold"
            - "INFO"
            - "-el-image"
            - "gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/eventlistenersink:v0.4.0"
            - "-el-port"
            - "8080"
            - "-period-seconds"
            - "10"
            - "-failure-threshold"
            - "1"
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: my-release-triggers-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: my-release-triggers-observability
            - name: METRICS_DOMAIN
              value: tekton.dev/triggers
          ports:
            - containerPort: 9090
              protocol: TCP
---
# Source: triggers/templates/webhook_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-triggers-webhook
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/version: "v0.4.0"
    triggers.tekton.dev/release: "v0.4.0"
    version: "v0.4.0"
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/part-of: tekton-triggers
      app.kubernetes.io/component: webhook
      app.kubernetes.io/name: webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/part-of: tekton-triggers
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: triggers-0.4.0
        app.kubernetes.io/version: "v0.4.0"
        triggers.tekton.dev/release: "v0.4.0"
        version: "v0.4.0"
        app.kubernetes.io/component: webhook
        app.kubernetes.io/name: webhook
    spec:
      serviceAccountName: my-release-triggers
      containers:
        - name: webhook
          image: "gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/webhook:v0.4.0"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: my-release-triggers-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: my-release-triggers-observability
            - name: WEBHOOK_SERVICE_NAME
              value: my-release-triggers-webhook
            - name: METRICS_DOMAIN
              value: tekton.dev/triggers
          securityContext:
            allowPrivilegeEscalation: false
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
            - name: https-webhook
              containerPort: 8443
---
# Source: triggers/templates/webhook_admission.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: my-release-triggers-webhook
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/component: webhook
webhooks:
  - name: webhook.triggers.tekton.dev
    admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: my-release-triggers-webhook
        namespace: triggers-0.4.0.tgz
    failurePolicy: Fail
    sideEffects: None
---
# Source: triggers/templates/webhook_admission.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-release-triggers-validation
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/component: webhook
webhooks:
  - name: validation.webhook.triggers.tekton.dev
    admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: my-release-triggers-webhook
        namespace: triggers-0.4.0.tgz
    failurePolicy: Fail
    sideEffects: None
---
# Source: triggers/templates/webhook_admission.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-release-triggers-config
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: triggers-0.4.0
    app.kubernetes.io/component: webhook
webhooks:
  - name: config.webhook.triggers.tekton.dev
    admissionReviewVersions:
      - v1beta1
    clientConfig:
      service:
        name: my-release-triggers-webhook
        namespace: triggers-0.4.0.tgz
    failurePolicy: Fail
    sideEffects: None
    objectSelector:
      matchLabels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/part-of: tekton-triggers
