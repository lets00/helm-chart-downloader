---
# Source: yatai-deployment/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-yatai-deployment
  namespace: yatai-deployment-1.1.21.tgz
  labels:
    helm.sh/chart: yatai-deployment-1.1.21
    app.kubernetes.io/name: yatai-deployment
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.21"
    app.kubernetes.io/managed-by: Helm
---
# Source: yatai-deployment/templates/secret-env.yaml
apiVersion: v1
kind: Secret
metadata:
  name: yatai-deployment-env
  namespace: yatai-deployment-1.1.21.tgz
  labels:
    helm.sh/chart: yatai-deployment-1.1.21
    app.kubernetes.io/name: yatai-deployment
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.21"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  YATAI_SYSTEM_NAMESPACE: yatai-system
  YATAI_API_TOKEN: "B4iGho08PsZf88Yn"

  INTERNAL_IMAGES_METRICS_TRANSFORMER: "quay.io/bentoml/yatai-bento-metrics-transformer:0.0.4"
  INTERNAL_IMAGES_DEBUGGER: "quay.io/bentoml/bento-debugger:0.0.8"
  INTERNAL_IMAGES_MONITOR_EXPORTER: "quay.io/bentoml/bentoml-monitor-exporter:0.0.3"
  INTERNAL_IMAGES_PROXY: "quay.io/bentoml/bentoml-proxy:0.0.1"

  DISABLE_YATAI_COMPONENT_REGISTRATION: "false"
---
# Source: yatai-deployment/templates/secret-shared-env.yaml
apiVersion: v1
kind: Secret
metadata:
  name: yatai-deployment-shared-env
  namespace: yatai-system
  labels:
    helm.sh/chart: yatai-deployment-1.1.21
    app.kubernetes.io/name: yatai-deployment
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.21"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  YATAI_DEPLOYMENT_NAMESPACE: yatai-deployment-1.1.21.tgz
  BENTO_DEPLOYMENT_NAMESPACES: "yatai"
  BENTO_DEPLOYMENT_ALL_NAMESPACES: "false"
---
# Source: yatai-deployment/templates/configmap-network.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: network
  namespace: yatai-deployment-1.1.21.tgz
  labels:
    helm.sh/chart: yatai-deployment-1.1.21
    app.kubernetes.io/name: yatai-deployment
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.21"
    app.kubernetes.io/managed-by: Helm
data:
  ingress-class: nginx
  ingress-path: "/"
  ingress-path-type: "ImplementationSpecific"
  ingress-tls-mode: "none"
---
# Source: yatai-deployment/templates/role-in-yatai-system-namespace.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-yatai-deployment-in-yatai-system
  namespace: yatai-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  resourceNames:
  - yatai-common-env
  - yatai-deployment-shared-env
  verbs:
  - get
  - list
  - watch
---
# Source: yatai-deployment/templates/role-with-bento-deployment.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-yatai-deployment-with-bento-deployment
  namespace: "yatai"
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.yatai.ai
  resources:
  - bentodeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.yatai.ai
  resources:
  - bentodeployments/finalizers
  verbs:
  - update
- apiGroups:
  - serving.yatai.ai
  resources:
  - bentodeployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - resources.yatai.ai
  resources:
  - bentorequests
  verbs:
  - get
  - list
  - watch
  - patch
  - update
  - create
- apiGroups:
  - resources.yatai.ai
  resources:
  - bentorequests/status
  verbs:
  - get
- apiGroups:
  - resources.yatai.ai
  resources:
  - bentoes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - resources.yatai.ai
  resources:
  - bentoes/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
---
# Source: yatai-deployment/templates/role-yatai-in-yatai-system-namespace.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: yatai-role-for-yatai-deployment
  namespace: yatai-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  resourceNames:
  - yatai-common-env
  - yatai-deployment-shared-env
  verbs:
  - get
  - list
  - watch
---
# Source: yatai-deployment/templates/role-yatai-with-bento-deployment.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: yatai-with-bento-deployment
  namespace: "yatai"
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "batch"
  resources:
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/attach
  verbs:
  - create
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/ephemeralcontainers
  verbs:
  - create
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - serving.yatai.ai
  resources:
  - bentodeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.yatai.ai
  resources:
  - bentodeployments/finalizers
  verbs:
  - update
- apiGroups:
  - serving.yatai.ai
  resources:
  - bentodeployments/status
  verbs:
  - get
  - patch
  - update
---
# Source: yatai-deployment/templates/role-yatai-with-yatai-deployment.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: yatai-with-yatai-deployment
  namespace: yatai-deployment-1.1.21.tgz
rules:
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/attach
  verbs:
  - create
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/ephemeralcontainers
  verbs:
  - create
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  resourceNames:
  - yatai-deployment-env
  verbs:
  - get
  - list
  - watch
---
# Source: yatai-deployment/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-yatai-deployment
  namespace: yatai-deployment-1.1.21.tgz
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: yatai-deployment/templates/rolebinding-in-yatai-system-namespace.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-yatai-deployment-in-yatai-system
  namespace: yatai-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-yatai-deployment-in-yatai-system
subjects:
  - kind: ServiceAccount
    name: my-release-yatai-deployment
    namespace: yatai-deployment-1.1.21.tgz
---
# Source: yatai-deployment/templates/rolebinding-with-bento-deployment.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-yatai-deployment-with-bento-deployment
  namespace: "yatai"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-yatai-deployment-with-bento-deployment
subjects:
  - kind: ServiceAccount
    name: my-release-yatai-deployment
    namespace: yatai-deployment-1.1.21.tgz
---
# Source: yatai-deployment/templates/rolebinding-yatai-in-yatai-system-namespace.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: yatai-role-for-yatai-deployment
  namespace: yatai-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: yatai-role-for-yatai-deployment
subjects:
  - kind: ServiceAccount
    name: yatai
    namespace: yatai-system
---
# Source: yatai-deployment/templates/rolebinding-yatai-with-bento-deployment.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: yatai-with-bento-deployment
  namespace: "yatai"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: yatai-with-bento-deployment
subjects:
  - kind: ServiceAccount
    name: yatai
    namespace: yatai-system
---
# Source: yatai-deployment/templates/rolebinding-yatai-with-yatai-deployment.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: yatai-with-yatai-deployment
  namespace: yatai-deployment-1.1.21.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: yatai-with-yatai-deployment
subjects:
  - kind: ServiceAccount
    name: yatai
    namespace: yatai-system
---
# Source: yatai-deployment/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-yatai-deployment
  namespace: yatai-deployment-1.1.21.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-yatai-deployment
subjects:
  - kind: ServiceAccount
    name: my-release-yatai-deployment
    namespace: yatai-deployment-1.1.21.tgz
---
# Source: yatai-deployment/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-yatai-deployment-webhook-service
  namespace: yatai-deployment-1.1.21.tgz
  labels:
    helm.sh/chart: yatai-deployment-1.1.21
    app.kubernetes.io/name: yatai-deployment
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.21"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: yatai-deployment
    app.kubernetes.io/instance: my-release
---
# Source: yatai-deployment/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-yatai-deployment
  namespace: yatai-deployment-1.1.21.tgz
  labels:
    helm.sh/chart: yatai-deployment-1.1.21
    app.kubernetes.io/name: yatai-deployment
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.21"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: yatai-deployment
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: yatai-deployment
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-yatai-deployment
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: manager
          args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - secretRef:
                name: yatai-deployment-env
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          image: "quay.io/bentoml/yatai-deployment:1.1.21"
          imagePullPolicy: IfNotPresent

          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP

          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1

          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1

          resources:
            {}

          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: my-release-yatai-deployment-webhook-server-cert
---
# Source: yatai-deployment/templates/job-default-domain.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: 'my-release-yatai-deployment-default-domain'
  namespace: yatai-deployment-1.1.21.tgz
  labels:
    helm.sh/chart: yatai-deployment-1.1.21
    app.kubernetes.io/name: yatai-deployment
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.21"
    app.kubernetes.io/managed-by: Helm
    app: "yatai-default-domain"
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/name: yatai-deployment
        app.kubernetes.io/instance: my-release
        app: "yatai-default-domain"
    spec:
      serviceAccountName: my-release-yatai-deployment
      containers:
        - name: default-domain
          # This is the Go import path for the binary that is containerized
          # and substituted here.
          image: "quay.io/bentoml/yatai-default-domain:0.0.2"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      restartPolicy: Never
  backoffLimit: 10
---
# Source: yatai-deployment/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: my-release-yatai-deployment-serving-cert
  namespace: yatai-deployment-1.1.21.tgz
  labels:
    helm.sh/chart: yatai-deployment-1.1.21
    app.kubernetes.io/name: yatai-deployment
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.21"
    app.kubernetes.io/managed-by: Helm
spec:
  dnsNames:
  - my-release-yatai-deployment-webhook-service.yatai-deployment-1.1.21.tgz.svc
  - my-release-yatai-deployment-webhook-service.yatai-deployment-1.1.21.tgz.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: my-release-yatai-deployment-selfsigned-issuer
  secretName: my-release-yatai-deployment-webhook-server-cert
---
# Source: yatai-deployment/templates/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: my-release-yatai-deployment-selfsigned-issuer
  namespace: yatai-deployment-1.1.21.tgz
  labels:
    helm.sh/chart: yatai-deployment-1.1.21
    app.kubernetes.io/name: yatai-deployment
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.21"
    app.kubernetes.io/managed-by: Helm
spec:
  selfSigned: {}
---
# Source: yatai-deployment/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-yatai-deployment-test-connection"
  labels:
    helm.sh/chart: yatai-deployment-1.1.21
    app.kubernetes.io/name: yatai-deployment
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.21"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-yatai-deployment:80']
  restartPolicy: Never
