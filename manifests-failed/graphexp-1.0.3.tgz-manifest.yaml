---
# Source: graphexp/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-graphexp"
spec:
  type: ClusterIP
  ports:
    - name: 80tcp
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: "my-release-graphexp"
    release: my-release
---
# Source: graphexp/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-graphexp"
  labels:
    chart: "graphexp-1.0.3"
    heritage: Helm
    release: my-release
    app.kubernetes.io/name: graphexp
    helm.sh/chart: graphexp-1.0.3
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 
  selector:
    matchLabels:
      app: "my-release-graphexp"
      release: my-release
  template:
    metadata:
      labels:
        app: "my-release-graphexp"
        release: my-release
      annotations:
        rollme: "UzhkV"
    spec:
      containers:
      - name: graphexp
        image: "ghcr.io/armandleopold/graphexp:latest"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: 80tcp
          protocol: TCP
        resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: graphexp/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: graphexp
  labels:
    app: graphexp
    chart: "graphexp-1.0.3"
    heritage: Helm
    release: my-release
spec:
  tls:
    - hosts:
      - graphexp.company.com
      secretName: graphexp
  rules:
  - host: "graphexp.company.com"
    http:
      paths:
        - path: /
          backend:
            serviceName: my-release-graphexp
            servicePort: 80tcp
