---
# Source: ace/templates/console-importer/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-ace-importer
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: ace/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-ace
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: ace/templates/cache/cache-auth.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-ace-cache-auth
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: my-release-ace-cache
    app.kubernetes.io/managed-by: kubedb.com
    app.kubernetes.io/name: redises.kubedb.com
type: kubernetes.io/basic-auth
stringData:
  username: 'root'
  password: 'xyz'
---
# Source: ace/templates/db/db-auth.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-ace-db-auth
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: my-release-ace-db
    app.kubernetes.io/managed-by: kubedb.com
    app.kubernetes.io/name: postgreses.kubedb.com
type: kubernetes.io/basic-auth
stringData:
  username: 'postgres'
  password: 'xyz'
---
# Source: ace/templates/db/db-config.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-ace-db-config
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: my-release-ace-db
    app.kubernetes.io/managed-by: kubedb.com
    app.kubernetes.io/name: postgreses.kubedb.com
type: Opaque
stringData:
  user.conf: |
    max_connections=110
    # shared_buffers=258MB
---
# Source: ace/templates/db/init-script.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-ace-db-init-script
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: my-release-ace-db
    app.kubernetes.io/managed-by: kubedb.com
    app.kubernetes.io/name: postgreses.kubedb.com
type: Opaque
stringData:
  data.sql: |
     CREATE DATABASE bb;
---
# Source: ace/templates/grafana/grafana-config.yaml
kind: Secret
apiVersion: v1
metadata:
  name: my-release-ace-grafana-config
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
stringData:
  defaults.ini: |-
    ##################### Grafana Configuration Defaults #####################
    #
    # Do not modify this file in grafana installs
    #

    # possible values : production, development
    app_mode = production

    # instance name, defaults to HOSTNAME environment variable value or hostname if HOSTNAME var is empty
    instance_name = ${HOSTNAME}

    #################################### Paths ###############################
    [paths]
    # Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)
    data = data

    # Temporary files in `data` directory older than given duration will be removed
    temp_data_lifetime = 24h

    # Directory where grafana can store logs
    logs = data/log

    # Directory where grafana will automatically scan and look for plugins
    plugins = data/plugins

    # folder that contains provisioning config files that grafana will apply on startup and while running.
    provisioning = conf/provisioning

    #################################### Server ##############################
    [server]
    # Protocol (http, https, socket)
    protocol = http

    # The ip address to bind to, empty will bind to all interfaces
    http_addr =

    # The http port to use
    http_port = 3005

    # The public facing domain name used to access grafana from a browser
    domain = localhost

    # Redirect to correct domain if host header does not match domain
    # Prevents DNS rebinding attacks
    enforce_domain = false

    # The full public facing url
    root_url = %(protocol)s://%(domain)s:%(http_port)s/

    # Log web requests
    router_logging = false

    # the path relative working path
    static_root_path = public

    # enable gzip
    enable_gzip = false

    # https certs & key file
    cert_file =
    cert_key =

    # Unix socket path
    socket = /tmp/grafana.sock

    #################################### Database ############################
    [database]
    # You can configure the database connection by specifying type, host, name, user and password
    # as separate properties or as on string using the url property.

    # Either "mysql", "postgres" or "sqlite3", it's your choice
    type = postgres
    host = my-release-ace-db.ace-v2024.6.3.tgz:5432
    name = bb
    user = postgres
    # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
    password = xyz
    # Use either URL or the previous fields to configure the database
    # Example: mysql://user:secret@host:port/database
    url =

    skip_migrations = false

    # Max idle conn setting default is 2
    max_idle_conn = 2

    # Max conn setting default is 0 (mean not set)
    max_open_conn =

    # Connection Max Lifetime default is 14400 (means 14400 seconds or 4 hours)
    conn_max_lifetime = 14400

    # Set to true to log the sql calls and execution times.
    log_queries =

    # For "postgres", use either "disable", "require" or "verify-full"
    # For "mysql", use either "true", "false", or "skip-verify".
    ssl_mode = disable

    # Database drivers may support different transaction isolation levels.
    # Currently, only "mysql" driver supports isolation levels.
    # If the value is empty - driver's default isolation level is applied.
    # For "mysql" use "READ-UNCOMMITTED", "READ-COMMITTED", "REPEATABLE-READ" or "SERIALIZABLE".
    isolation_level =

    ca_cert_path =
    client_key_path =
    client_cert_path =
    server_cert_name =

    # For "sqlite3" only, path relative to data_path setting
    path = grafana.db

    # For "sqlite3" only. cache mode setting used for connecting to the database
    cache_mode = private

    #################################### Cache server #############################
    [remote_cache]
    # Either "redis", "memcached" or "database" default is "database"
    type = redis

    # cache connectionstring options
    # database: will use Grafana primary database.
    # redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`
    # memcache: 127.0.0.1:11211
    connstr = addr=my-release-ace-cache.ace-v2024.6.3.tgz:6379,password='xyz',db=1,pool_size=100

    #################################### Session #############################
    [session]
    # Either "memory", "file", "redis", "mysql", "postgres", "memcache", default is "file"
    provider = redis

    # Provider config options
    # memory: not have any config yet
    # file: session dir path, is relative to grafana data_path
    # redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`
    # postgres: user=a password=b host=localhost port=5432 dbname=c sslmode=disable
    # mysql: go-sql-driver/mysql dsn config string, examples:
    #         `user:password@tcp(127.0.0.1:3306)/database_name`
    #         `user:password@unix(/var/run/mysqld/mysqld.sock)/database_name`
    # memcache: 127.0.0.1:11211


    provider_config = addr=my-release-ace-cache.ace-v2024.6.3.tgz:6379,password='xyz',db=0,pool_size=100

    # Session cookie name
    cookie_name = i_like_ace

    # If you use session in https only, default is false
    cookie_secure = false

    # Session life time, default is 86400
    session_life_time = 86400
    gc_interval_time = 86400

    # Connection Max Lifetime default is 14400 (means 14400 seconds or 4 hours)
    conn_max_lifetime = 14400

    #################################### Data proxy ###########################
    [dataproxy]

    # This enables data proxy logging, default is false
    logging = false

    # How long the data proxy should wait before timing out default is 30 (seconds)
    timeout = 30

    # If enabled and user is not anonymous, data proxy will add X-Grafana-User header with username into the request, default is false.
    send_user_header = false

    #################################### Analytics ###########################
    [analytics]
    # Server reporting, sends usage counters to stats.grafana.org every 24 hours.
    # No ip addresses are being tracked, only simple counters to track
    # running instances, dashboard and error counts. It is very helpful to us.
    # Change this option to false to disable reporting.
    reporting_enabled = false

    # The name of the distributor of the Grafana instance. Ex hosted-grafana, grafana-labs
    reporting_distributor = AppsCode Inc.


    # Set to false to disable all checks to https://grafana.com
    # for new versions (grafana itself and plugins), check is used
    # in some UI views to notify that grafana or plugin update exists
    # This option does not cause any auto updates, nor send any information
    # only a GET request to https://grafana.com to get latest versions
    check_for_updates = false

    # Google Analytics universal tracking code, only enabled if you specify an id here
    google_analytics_ua_id =

    # Google Tag Manager ID, only enabled if you specify an id here
    google_tag_manager_id =

    #################################### Security ############################
    [security]
    # disable creation of admin user on first start of grafana
    disable_initial_admin_creation = true
    # default admin user, created on startup
    admin_user = admin

    # default admin password, can be changed before first start of grafana, or in profile settings
    admin_password = admin

    # used for signing
    secret_key = 4nHrUDNw00AjlhAq8hCGYPxBt6I1UCbmdC5ReY19IPWdy8qFDzTZzXkdCr5d6qwP

    # disable gravatar profile images
    disable_gravatar = false

    # data source proxy whitelist (ip_or_domain:port separated by spaces)
    data_source_proxy_whitelist =

    # disable protection against brute force login attempts
    disable_brute_force_login_protection = false

    # set to true if you host Grafana behind HTTPS. default is false.
    cookie_secure = false

    # set cookie SameSite attribute. defaults to `lax`. can be set to "lax", "strict" and "none"
    cookie_samesite = lax

    # set to true if you want to allow browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. default is false.
    allow_embedding = true


    #################################### Snapshots ###########################
    [snapshots]
    # snapshot sharing options
    external_enabled = true
    external_snapshot_url = https://snapshots-origin.raintank.io
    external_snapshot_name = Publish to snapshot.raintank.io

    # remove expired snapshot
    snapshot_remove_expired = true

    #################################### Dashboards ##################

    [dashboards]
    # Number dashboard versions to keep (per dashboard). Default: 20, Minimum: 1
    versions_to_keep = 20
    # Minimum dashboard refresh interval. When set, this will restrict users to set the refresh interval of a dashboard lower than given interval. Per default this is 5 seconds.
    # The interval string is a possibly signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s or 1m.
    min_refresh_interval = 5s
    # Path to the default home dashboard. If this value is empty, then Grafana uses StaticRootPath + "dashboards/home.json"
    default_home_dashboard_path =
    ################################### Data sources #########################
    [datasources]
    # Upper limit of data sources that Grafana will return. This limit is a temporary configuration and it will be deprecated when pagination will be introduced on the list data sources API.
    datasource_limit = 5000
    #################################### Users ###############################
    [users]
    # disable user signup / registration
    allow_sign_up = false

    # Allow non admin users to create organizations
    allow_org_create = false

    # Set to true to automatically assign new users to the default organization (id 1)
    auto_assign_org = false

    # Set this value to automatically add new users to the provided organization (if auto_assign_org above is set to true)
    auto_assign_org_id = 1

    # Default role new users will be automatically assigned (if auto_assign_org above is set to true)
    auto_assign_org_role = Viewer

    # Require email validation before sign up completes
    verify_email_enabled = false

    # Background text for the user field on the login page
    login_hint = email or username
    password_hint = password

    # Default UI theme ("dark" or "light")
    default_theme = dark

    # External user management
    external_manage_link_url =
    external_manage_link_name =
    external_manage_info =

    # Viewers can edit/inspect dashboard settings in the browser. But not save the dashboard.
    viewers_can_edit = false

    # Editors can administrate dashboard, folders and teams they create
    editors_can_admin = false

    [auth]
    # Login cookie name
    login_cookie_name = grafana_session

    # The lifetime (days) an authenticated user can be inactive before being required to login at next visit. Default is 7 days.
    login_maximum_inactive_lifetime_days = 7

    # The maximum lifetime (days) an authenticated user can be logged in since login time before being required to login. Default is 30 days.
    login_maximum_lifetime_days = 30

    # How often should auth tokens be rotated for authenticated users when being active. The default is each 10 minutes.
    token_rotation_interval_minutes = 10

    # Set to true to disable (hide) the login form, useful if you use OAuth
    disable_login_form = false

    # Set to true to disable the signout link in the side menu. useful if you use auth.proxy
    disable_signout_menu = false

    # URL to redirect the user to after sign out
    signout_redirect_url =

    # Set to true to attempt login with OAuth automatically, skipping the login screen.
    # This setting is ignored if multiple OAuth providers are configured.
    oauth_auto_login = false
    # OAuth state max age cookie duration in seconds. Defaults to 600 seconds.

    oauth_state_cookie_max_age = 600
    # limit of api_key seconds to live before expiration
    api_key_max_seconds_to_live = -1
    # Set to true to enable SigV4 authentication option for HTTP-based datasources
    sigv4_auth_enabled = false


    #################################### Anonymous Auth ######################
    [auth.anonymous]
    # enable anonymous access
    enabled = false

    # specify organization name that should be used for unauthenticated users
    org_name = Main Org.

    # specify role for unauthenticated users
    org_role = Viewer

    # mask the Grafana version number for unauthenticated users
    hide_version = false

    #################################### Github Auth #########################
    [auth.github]
    enabled = false
    allow_sign_up = true
    client_id = some_id
    client_secret = some_secret
    scopes = user:email,read:org
    auth_url = https://github.com/login/oauth/authorize
    token_url = https://github.com/login/oauth/access_token
    api_url = https://api.github.com/user
    team_ids =
    allowed_organizations =

    #################################### GitLab Auth #########################
    [auth.gitlab]
    enabled = false
    allow_sign_up = true
    client_id = some_id
    client_secret = some_secret
    scopes = api
    auth_url = https://gitlab.com/oauth/authorize
    token_url = https://gitlab.com/oauth/token
    api_url = https://gitlab.com/api/v4
    allowed_groups =

    #################################### Google Auth #########################
    [auth.google]
    enabled = false
    allow_sign_up = true
    client_id = some_client_id
    client_secret = some_client_secret
    scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
    auth_url = https://accounts.google.com/o/oauth2/auth
    token_url = https://accounts.google.com/o/oauth2/token
    api_url = https://www.googleapis.com/oauth2/v1/userinfo
    allowed_domains =
    hosted_domain =

    #################################### Grafana.com Auth ####################
    # legacy key names (so they work in env variables)
    [auth.grafananet]
    enabled = false
    allow_sign_up = true
    client_id = some_id
    client_secret = some_secret
    scopes = user:email
    allowed_organizations =

    [auth.grafana_com]
    enabled = false
    allow_sign_up = true
    client_id = some_id
    client_secret = some_secret
    scopes = user:email
    allowed_organizations =

    #################################### Generic OAuth #######################
    [auth.generic_oauth]
    name = OAuth
    enabled = false
    allow_sign_up = true
    client_id = some_id
    client_secret = some_secret
    scopes = user:email
    email_attribute_name = email:primary
    auth_url =
    token_url =
    api_url =
    team_ids =
    allowed_organizations =
    tls_skip_verify_insecure = false
    tls_client_cert =
    tls_client_key =
    tls_client_ca =
    send_client_credentials_via_post = false

    #################################### Basic Auth ##########################
    [auth.basic]
    enabled = false

    #################################### Auth Proxy ##########################
    [auth.proxy]
    enabled = false
    header_name = X-WEBAUTH-USER
    header_property = username
    auto_sign_up = true
    ldap_sync_ttl = 60
    whitelist =
    headers =

    #################################### Auth LDAP ###########################
    [auth.ldap]
    enabled = false
    config_file = /etc/grafana/ldap.toml
    allow_sign_up = true

    #################################### SMTP / Emailing #####################
    [smtp]
    enabled = false
    host = localhost:25
    user =
    # If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
    password =
    cert_file =
    key_file =
    skip_verify = false
    from_address = admin@grafana.localhost
    from_name = Grafana
    ehlo_identity =

    [emails]
    welcome_email_on_sign_up = false
    templates_pattern = emails/*.html

    #################################### Logging ##########################
    [log]
    # Either "console", "file", "syslog". Default is console and file
    # Use space to separate multiple modes, e.g. "console file"
    mode = console file

    # Either "debug", "info", "warn", "error", "critical", default is "info"
    level = info

    # optional settings to set different levels for specific loggers. Ex filters = sqlstore:debug
    filters =

    # For "console" mode only
    [log.console]
    level =

    # log line format, valid options are text, console and json
    format = console

    # For "file" mode only
    [log.file]
    level =

    # log line format, valid options are text, console and json
    format = text

    # This enables automated log rotate(switch of following options), default is true
    log_rotate = true

    # Max line number of single file, default is 1000000
    max_lines = 1000000

    # Max size shift of single file, default is 28 means 1 << 28, 256MB
    max_size_shift = 28

    # Segment log daily, default is true
    daily_rotate = true

    # Expired days of log file(delete after max days), default is 7
    max_days = 7

    [log.syslog]
    level =

    # log line format, valid options are text, console and json
    format = text

    # Syslog network type and address. This can be udp, tcp, or unix. If left blank, the default unix endpoints will be used.
    network =
    address =

    # Syslog facility. user, daemon and local0 through local7 are valid.
    facility =

    # Syslog tag. By default, the process' argv[0] is used.
    tag =

    #################################### Usage Quotas ########################
    [quota]
    enabled = false

    #### set quotas to -1 to make unlimited. ####
    # limit number of users per Org.
    org_user = 10

    # limit number of dashboards per Org.
    org_dashboard = 100

    # limit number of data_sources per Org.
    org_data_source = 10

    # limit number of api_keys per Org.
    org_api_key = 10

    # limit number of orgs a user can create.
    user_org = 10

    # Global limit of users.
    global_user = -1

    # global limit of orgs.
    global_org = -1

    # global limit of dashboards
    global_dashboard = -1

    # global limit of api_keys
    global_api_key = -1

    # global limit on number of logged in users.
    global_session = -1

    #################################### Alerting ############################
    [alerting]
    # Disable alerting engine & UI features
    enabled = true
    # Makes it possible to turn off alert rule execution but alerting UI is visible
    execute_alerts = true

    # Default setting for new alert rules. Defaults to categorize error and timeouts as alerting. (alerting, keep_state)
    error_or_timeout = alerting

    # Default setting for how Grafana handles nodata or null values in alerting. (alerting, no_data, keep_state, ok)
    nodata_or_nullvalues = no_data

    # Alert notifications can include images, but rendering many images at the same time can overload the server
    # This limit will protect the server from render overloading and make sure notifications are sent out quickly
    concurrent_render_limit = 5

    #################################### Explore #############################
    [explore]
    # Enable the Explore section
    enabled = true

    #################################### Internal Grafana Metrics ############
    # Metrics available at HTTP API Url /metrics
    [metrics]
    enabled           = true
    interval_seconds  = 10

    #If both are set, basic auth will be required for the metrics endpoint.
    basic_auth_username =
    basic_auth_password =

    # Send internal Grafana metrics to graphite
    [metrics.graphite]
    # Enable by setting the address setting (ex localhost:2003)
    address =
    prefix = prod.grafana.%(instance_name)s.

    [grafana_net]
    url = https://grafana.com

    [grafana_com]
    url = https://grafana.com

    #################################### Distributed tracing ############
    [tracing.jaeger]
    # jaeger destination (ex localhost:6831)
    address =
    # tag that will always be included in when creating new spans. ex (tag1:value1,tag2:value2)
    always_included_tag =
    # Type specifies the type of the sampler: const, probabilistic, rateLimiting, or remote
    sampler_type = const
    # jaeger samplerconfig param
    # for "const" sampler, 0 or 1 for always false/true respectively
    # for "probabilistic" sampler, a probability between 0 and 1
    # for "rateLimiting" sampler, the number of spans per second
    # for "remote" sampler, param is the same as for "probabilistic"
    # and indicates the initial sampling rate before the actual one
    # is received from the mothership
    sampler_param = 1

    #################################### External Image Storage ##############
    [external_image_storage]
    # You can choose between (s3, webdav, gcs, azure_blob, local)
    provider =

    [external_image_storage.s3]
    bucket_url =
    bucket =
    region =
    path =
    access_key =
    secret_key =

    [external_image_storage.webdav]
    url =
    username =
    password =
    public_url =

    [external_image_storage.gcs]
    key_file =
    bucket =
    path =

    [external_image_storage.azure_blob]
    account_name =
    account_key =
    container_name =

    [external_image_storage.local]
    # does not require any configuration

    [rendering]
    # Options to configure a remote HTTP image rendering service, e.g. using https://github.com/grafana/grafana-image-renderer.
    # URL to a remote HTTP image renderer service, e.g. http://localhost:8081/render, will enable Grafana to render panels and dashboards to PNG-images using HTTP requests to an external service.
    server_url =
    # If the remote HTTP image renderer service runs on a different server than the Grafana server you may have to configure this to a URL where Grafana is reachable, e.g. http://grafana.domain/.
    callback_url =
    # Concurrent render request limit affects when the /render HTTP endpoint is used. Rendering many images at the same time can overload the server,
    # which this setting can help protect against by only allowing a certain amount of concurrent requests.
    concurrent_render_request_limit = 30
    [panels]
    # here for to support old env variables, can remove after a few months
    enable_alpha = false
    disable_sanitize_html = false
    [plugins]
    enable_alpha = false
    app_tls_skip_verify_insecure = false
    # Enter a comma-separated list of plugin identifiers to identify plugins that are allowed to be loaded even if they lack a valid signature.
    allow_loading_unsigned_plugins =
    marketplace_url = https://grafana.com/grafana/plugins/
    #################################### Grafana Image Renderer Plugin ##########################
    [plugin.grafana-image-renderer]
    # Instruct headless browser instance to use a default timezone when not provided by Grafana, e.g. when rendering panel image of alert.
    # See ICU’s metaZones.txt (https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt) for a list of supported
    # timezone IDs. Fallbacks to TZ environment variable if not set.
    rendering_timezone =
    # Instruct headless browser instance to use a default language when not provided by Grafana, e.g. when rendering panel image of alert.
    # Please refer to the HTTP header Accept-Language to understand how to format this value, e.g. 'fr-CH, fr;q=0.9, en;q=0.8, de;q=0.7, *;q=0.5'.
    rendering_language =
    # Instruct headless browser instance to use a default device scale factor when not provided by Grafana, e.g. when rendering panel image of alert.
    # Default is 1. Using a higher value will produce more detailed images (higher DPI), but will require more disk space to store an image.
    rendering_viewport_device_scale_factor =
    # Instruct headless browser instance whether to ignore HTTPS errors during navigation. Per default HTTPS errors are not ignored. Due to
    # the security risk it's not recommended to ignore HTTPS errors.
    rendering_ignore_https_errors =
    # Instruct headless browser instance whether to capture and log verbose information when rendering an image. Default is false and will
    # only capture and log error messages. When enabled, debug messages are captured and logged as well.
    # For the verbose information to be included in the Grafana server log you have to adjust the rendering log level to debug, configure
    # [log].filter = rendering:debug.
    rendering_verbose_logging =
    # Instruct headless browser instance whether to output its debug and error messages into running process of remote rendering service.
    # Default is false. This can be useful to enable (true) when troubleshooting.
    rendering_dumpio =
    # Additional arguments to pass to the headless browser instance. Default is --no-sandbox. The list of Chromium flags can be found
    # here (https://peter.sh/experiments/chromium-command-line-switches/). Multiple arguments is separated with comma-character.
    rendering_args =
    # You can configure the plugin to use a different browser binary instead of the pre-packaged version of Chromium.
    # Please note that this is not recommended, since you may encounter problems if the installed version of Chrome/Chromium is not
    # compatible with the plugin.
    rendering_chrome_bin =
    # Instruct how headless browser instances are created. Default is 'default' and will create a new browser instance on each request.
    # Mode 'clustered' will make sure that only a maximum of browsers/incognito pages can execute concurrently.
    # Mode 'reusable' will have one browser instance and will create a new incognito page on each request.
    rendering_mode =
    # When rendering_mode = clustered you can instruct how many browsers or incognito pages can execute concurrently. Default is 'browser'
    # and will cluster using browser instances.
    # Mode 'context' will cluster using incognito pages.
    rendering_clustering_mode =
    # When rendering_mode = clustered you can define maximum number of browser instances/incognito pages that can execute concurrently..
    rendering_clustering_max_concurrency =
    # Limit the maximum viewport width, height and device scale factor that can be requested.
    rendering_viewport_max_width =
    rendering_viewport_max_height =
    rendering_viewport_max_device_scale_factor =
    # Change the listening host and port of the gRPC server. Default host is 127.0.0.1 and default port is 0 and will automatically assign
    # a port not in use.
    grpc_host =
    grpc_port =

    [enterprise]
    license_path =

    [feature_toggles]
    # enable features, separated by spaces
    enable =
    [date_formats]
    # For information on what formatting patterns that are supported https://momentjs.com/docs/#/displaying/
    # Default system date format used in time range picker and other places where full time is displayed
    full_date = YYYY-MM-DD HH:mm:ss
    # Used by graph and other places where we only show small intervals
    interval_second = HH:mm:ss
    interval_minute = HH:mm
    interval_hour = MM/DD HH:mm
    interval_day = MM/DD
    interval_month = YYYY-MM
    interval_year = YYYY
    # Experimental feature
    use_browser_locale = false
    # Default timezone for user preferences. Options are 'browser' for the browser local timezone or a timezone name from IANA Time Zone database, e.g. 'UTC' or 'Europe/Amsterdam' etc.
    default_timezone = browser
    [expressions]
    # Enable or disable the expressions functionality.
    enabled = true
---
# Source: ace/templates/platform/admin-auth.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-ace-admin-auth
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/version: "v2024.6.3"
type: kubernetes.io/basic-auth
stringData:
  username: 'admin'
  password: 'secr3t'
---
# Source: ace/templates/platform/config.yaml
kind: Secret
apiVersion: v1
metadata:
  name: my-release-ace-config
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
stringData:
  app.ini: |-
    APP_NAME = ACE: Cloud Native Data Platform
    RUN_MODE = GA
    DOMAIN   = appscode.ninja
    HOSTED   = false
    [licensor]
    DOMAIN = 
    TOKEN = 

    [site_accounts]
    ; WHY http, not https?
    PROTOCOL = http
    DOMAIN = appscode.ninja
    ROOT_URL = https://accounts.appscode.ninja
    LANDING_PAGE = home
    APP_DATA_PATH = /data

    [site_api]
    ; WHY http, not https?
    PROTOCOL = http
    DOMAIN = api.appscode.ninja
    ROOT_URL = https://api.appscode.ninja

    [picture]
    DISABLE_GRAVATAR        = false
    ENABLE_FEDERATED_AVATAR = true
    AVATAR_UPLOAD_PATH      = avatars

    [storage]
    BUCKET_URL      = gs://ace-data
    BUCKET_ENDPOINT = 
    BUCKET_REGION   = 
    BUCKET_PREFIX   = 

    [database]
    DB_TYPE = "postgres"
    HOST = my-release-ace-db.ace-v2024.6.3.tgz:5432
    NAME = bb
    USER = postgres
    PASSWD = xyz
    LOG_SQL = false

    [session]
    DOMAIN = appscode.ninja
    PROVIDER = redis
    PROVIDER_CONFIG = network=tcp,addr=my-release-ace-cache.ace-v2024.6.3.tgz:6379,password='xyz',db=0,pool_size=100,idle_timeout=180,prefix=session-
    COOKIE_NAME = i_like_ace
    ; https://intercom.help/progressier/en/articles/6894845-why-aren-t-cookies-working-inside-an-iframe
    COOKIE_SECURE=true
    ; SameSiteDefaultMode = 1 SameSiteLaxMode = 2 SameSiteStrictMode = 3 SameSiteNoneMode = 4
    COOKIE_SAME_SITE = 4

    [cache]
    ADAPTER = redis
    INTERVAL = 60
    HOST = network=tcp,addr=my-release-ace-cache.ace-v2024.6.3.tgz:6379,password='xyz',db=1,pool_size=100,idle_timeout=180,prefix=cache-
    [mailer]
    ENABLED = false
    MAILER_TYPE = smtp
    HOST    = smtp.mailgun.org:465
    IS_TLS_ENABLED = false
    FROM    = no-reply@example.com
    USER    = apikey
    PASSWD  = xyz
    SUBJECT_PREFIX = ACE
    SEND_AS_PLAIN_TEXT = false

    [log]
    MODE = console
    LEVEL = Info

    [oauth2]
    JWT_SECRET = j4MZfrftTei3pNadlS8XmbgNP9jjWaCoMaRX0GMLTyg

    [security]
    SECRET_KEY     = IyvKFhAMD1SvN7wN3BjavMqPQabW94wEyaVsXXgGAa1IV57wBZw5ygqz70ozw5TZ
    CSRF_COOKIE_HTTP_ONLY = false
    COOKIE_USERNAME = ace_awesome
    COOKIE_REMEMBER_NAME = ace_incredible

    [service]
    ENABLE_CAPTCHA = true
    ACTIVE_CODE_LIVE_MINUTES = 180
    RESET_PASSWD_CODE_LIVE_MINUTES = 180
    REGISTER_EMAIL_CONFIRM = true
    DISABLE_REGISTRATION = false
    REQUIRE_SIGNIN_VIEW = false
    ENABLE_NOTIFY_MAIL = true
    ENABLE_REVERSE_PROXY_AUTHENTICATION = false
    ENABLE_REVERSE_PROXY_AUTO_REGISTRATION = false
    NO_REPLY_ADDRESS = no-reply@example.com
    EMAIL_DOMAIN_WHITELIST = 

    [other]
    SHOW_FOOTER_BRANDING = false
    SHOW_FOOTER_VERSION = true
    SHOW_FOOTER_TEMPLATE_LOAD_TIME = true

    [cors]
    ENABLED = true
    SCHEME = https
    ALLOW_DOMAIN = appscode.ninja
    ALLOW_SUBDOMAIN = true

    [kms]
    MASTER_KEY_URL = 'base64key://cDuPV8TU9CIR2LgPppLacHne6hQD785W068o2ERyUlk8MepHqUOwCfV5M9e2lBwn'

    [searchlight]
    ENABLE = true
    ALERTMANAGER_ADDR = http://alertmanager.m3db.svc:8443
    QUERY_ADDR = http://m3query.m3db.svc:7201
    RULER_ADDR = http://ruler.m3db.svc:8443
    M3COORDINATOR_ADDR = http://m3coordinator.m3db.svc:7201

    [cluster_connector]

    [branding]
    LOGO = ``
    FAVICON = ``
    PRIMARY_COLOR = ``
---
# Source: ace/templates/rbac/rbac.yaml
# TODO: Remove this once virtual-kubernetes is ready
# This temporarily gives the s/a in b3 deployment permission on the BB crds.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-ace
  # namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
rules:
# for trickster
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - '*'
- apiGroups:
  - trickstercache.org
  resources:
  - "*"
  verbs: ["*"]
# for creating capi cluster
- apiGroups:
  - docker-machine.klusters.dev
  resources:
  - "*"
  verbs: ["*"]
# for site info
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  - ace-info
  verbs: ["get"]
# for bootstrap data
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - helmrepositories
  verbs: ["get", "list", "watch"]
- apiGroups:
  - charts.x-helm.dev
  resources:
  - clusterchartpresets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ui.k8s.appscode.com
  resources:
  - features
  - featuresets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - meta.k8s.appscode.com
  resources:
  - clusterprofiles
  verbs: ["get", "list", "watch"]
---
# Source: ace/templates/console-importer/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-ace-importer
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: my-release-ace-importer
  namespace: ace-v2024.6.3.tgz
---
# Source: ace/templates/rbac/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-ace
  # namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-ace
subjects:
- kind: ServiceAccount
  name: my-release-ace
  namespace: ace-v2024.6.3.tgz
---
# Source: ace/templates/platform/setup-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-ace-setup
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 4
  template:
    spec:
      imagePullSecrets:
        null
      serviceAccountName: my-release-ace
      securityContext:
        {}
      containers:
        - name: ace
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/appscode/b3:v2024.6.3"
          imagePullPolicy: Always
          args:
            - dev
            - --admin=admin
            - --name=Ace Admin
            - --password=$(ADMIN_PASSWORD)
            - --email=admin@example.com
            - --exports
            - --reload-nats-accounts
            - --importer-service-account=my-release-ace-importer
            - --self-import
            - --enable-monitoring
            - --enable-service-backend
          # ports:
          #   - name: http
          #     containerPort: 3000
          #     protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {}
          env:
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-ace-admin-auth
                  key: password
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: data
              mountPath: /data
            - name: config
              mountPath: /data/b3/conf/app.ini
              subPath: app.ini
            - name: nats-cred
              mountPath: /nats/creds
            - name: objstore-cred
              mountPath: /data/credentials
            - name: cacerts
              mountPath: /etc/ssl/certs
      volumes:
        - name: tmp
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: config
          secret:
            defaultMode: 420
            secretName: my-release-ace-config
        - name: nats-cred
          secret:
            defaultMode: 420
            secretName: my-release-ace-nats-cred
        - name: objstore-cred
          secret:
            defaultMode: 420
            secretName: my-release-ace-objstore-cred
        - name: cacerts
          csi:
            driver: cacerts.csi.cert-manager.io
            readOnly: true
            volumeAttributes:
              os: debian
              caProviderClasses: my-release-ace
      restartPolicy: Never
---
# Source: ace/templates/ingress/ingress-nats.yaml
# TODO: expose nats websocket via nginx
# https://discuss.kubernetes.io/t/how-to-use-ingress-nginx-with-secure-backend/7347/2
---
# Source: ace/templates/cache/cache-backupconfig.yaml
apiVersion: core.kubestash.com/v1alpha1
kind: BackupConfiguration
metadata:
  name: my-release-ace-cache
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: my-release-ace-cache
    app.kubernetes.io/managed-by: kubedb.com
    app.kubernetes.io/name: redises.kubedb.com
spec:
  target:
    apiGroup: kubedb.com
    kind: Redis
    name: my-release-ace-cache
    namespace: ace-v2024.6.3.tgz
  backends:
    - name: default-backend
      storageRef:
        name: default
        namespace: 
      retentionPolicy:
        name: keep-1mo
        namespace: 
  sessions:
    - name: full-backup
      sessionHistoryLimit: 2
      scheduler:
        schedule: 0 */2 * * *
        jobTemplate:
          backoffLimit: 1
      repositories:
        - name: my-release-ace-cache
          backend: default-backend
          directory: ace-v2024.6.3.tgz/my-release-ace-cache
          encryptionSecret:
            name: default-encryption-secret
            namespace: 
      addon:
        name: redis-addon
        tasks:
          - name: logical-backup
---
# Source: ace/templates/db/db-backupconfig.yaml
apiVersion: core.kubestash.com/v1alpha1
kind: BackupConfiguration
metadata:
  name: my-release-ace-db
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: my-release-ace-db
    app.kubernetes.io/managed-by: kubedb.com
    app.kubernetes.io/name: postgreses.kubedb.com
spec:
  target:
    apiGroup: kubedb.com
    kind: Postgres
    name: my-release-ace-db
    namespace: ace-v2024.6.3.tgz
  backends:
    - name: default-backend
      storageRef:
        name: default
        namespace: 
      retentionPolicy:
        name: keep-1mo
        namespace: 
  sessions:
    - name: full-backup
      sessionHistoryLimit: 2
      scheduler:
        schedule: 0 */2 * * *
        jobTemplate:
          backoffLimit: 1
      repositories:
        - name: my-release-ace-db
          backend: default-backend
          directory: ace-v2024.6.3.tgz/my-release-ace-db
          encryptionSecret:
            name: default-encryption-secret
            namespace: 
      addon:
        name: postgres-addon
        tasks:
          - name: logical-backup
---
# Source: ace/templates/ingress/caprovicerclass.yaml
apiVersion: cacerts.csi.cert-manager.io/v1alpha1
kind: CAProviderClass
metadata:
  name: my-release-ace
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
spec:
  refs:
  - apiGroup: cert-manager.io
    kind: Issuer
    namespace: ace-v2024.6.3.tgz
    name: my-release-ace
---
# Source: ace/templates/ingress/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: my-release-ace
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
spec:
  secretName: my-release-ace-cert
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: my-release-ace
  commonName: "appscode.ninja"
  dnsNames:
    - "appscode.ninja"
    - "*.appscode.ninja"
  usages:
    - key agreement
    - digital signature
    - server auth
---
# Source: ace/templates/ingress/issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: my-release-ace
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
spec:
  selfSigned: {}
---
# Source: ace/templates/db/db.yaml
apiVersion: kubedb.com/v1alpha2
kind: Postgres
metadata:
  name: my-release-ace-db
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
spec:
  version: "15.5"
  replicas: 3
  storageType: Durable
  storage:
    storageClassName: standard
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
  podTemplate:
    spec:
      resources:
        limits:
          memory: 2Gi
  terminationPolicy: Delete
  authSecret:
    name: my-release-ace-db-auth
    externallyManaged: true
  configSecret:
    name: my-release-ace-db-config
  init:
    waitForInitialRestore: false
    script:
      secret:
        secretName: my-release-ace-db-init-script
  monitor:
    agent: 
    prometheus:
      exporter:
        resources:
          requests:
            memory: 128Mi
      serviceMonitor:
        interval: 30s
        labels:
          {}
---
# Source: ace/templates/cache/cache.yaml
apiVersion: kubedb.com/v1alpha2
kind: Redis
metadata:
  name: my-release-ace-cache
  namespace: ace-v2024.6.3.tgz
  labels:
    helm.sh/chart: ace-v2024.6.3
    app.kubernetes.io/name: ace
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.3"
    app.kubernetes.io/managed-by: Helm
spec:
  version: "7.2.4"
  storageType: Durable
  storage:
    storageClassName: standard
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
  podTemplate:
    spec:
      resources:
        limits:
          memory: 2Gi
  terminationPolicy: Delete
  authSecret:
    name: my-release-ace-cache-auth
    externallyManaged: true
  monitor:
    agent: 
    prometheus:
      exporter:
        resources:
          requests:
            memory: 128Mi
      serviceMonitor:
        interval: 30s
        labels:
          {}
