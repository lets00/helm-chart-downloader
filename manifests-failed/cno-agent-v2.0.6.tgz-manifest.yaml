---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cno-apigateway
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cno-apigateway-internal
  annotations:
    app.kubernetes.io/managed-by: Helm
    meta.helm.sh/release-name: cno
  labels:
    meta.helm.sh/release-name: cno
    app.kubernetes.io/managed-by: Helm
---
# Source: cno-agent/templates/prometheus/prometheus.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cno-monitoring
---
# Source: cno-agent/charts/metrics-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-metrics-server
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: cno-agent/templates/agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cno-agent
  namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/cd/cno-cd.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cno-cd-operator
  namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contour
  namespace: cno-apigateway
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: envoy
  namespace: cno-apigateway
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contour-certgen
  namespace: cno-apigateway
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contour
  namespace: cno-apigateway-internal
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: envoy
  namespace: cno-apigateway-internal
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contour-certgen
  namespace: cno-apigateway-internal
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: door-helm
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: door-helm
    app: door-helm
  name: door-helm
  namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/onboard/cno-onboard.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cno-onboarding-operator
  namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/agent/secret-licence.yaml
apiVersion: v1
data:
  uuid: YWE=
  user.key: bXkta2V5Cg==
  user.crt: bXktY3J0Cg==
  ca.crt: bXktY2EK
kind: Secret
metadata:
  name: licence
  namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: contour
  namespace: cno-apigateway
data:
  contour.yaml: |
    #
    # server:
    #   determine which XDS Server implementation to utilize in Contour.
    #   xds-server-type: contour
    #
    # Specify the Gateway API configuration.
    gateway:
      controllerName: projectcontour.io/projectcontour/contour
    #
    # should contour expect to be running inside a k8s cluster
    # incluster: true
    #
    # path to kubeconfig (if not running inside a k8s cluster)
    # kubeconfig: /path/to/.kube/config
    #
    # Disable RFC-compliant behavior to strip "Content-Length" header if
    # "Tranfer-Encoding: chunked" is also set.
    # disableAllowChunkedLength: false
    #
    # Disable Envoy's non-standard merge_slashes path transformation option
    # that strips duplicate slashes from request URLs.
    # disableMergeSlashes: false
    #
    # Disable HTTPProxy permitInsecure field
    disablePermitInsecure: false
    tls:
    # minimum TLS version that Contour will negotiate
    # minimum-protocol-version: "1.2"
    # TLS ciphers to be supported by Envoy TLS listeners when negotiating
    # TLS 1.2.
    # cipher-suites:
    # - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
    # - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
    # - 'ECDHE-ECDSA-AES256-GCM-SHA384'
    # - 'ECDHE-RSA-AES256-GCM-SHA384'
    # Defines the Kubernetes name/namespace matching a secret to use
    # as the fallback certificate when requests which don't match the
    # SNI defined for a vhost.
      fallback-certificate:
    #   name: fallback-secret-name
    #   namespace: cno-apigateway
      envoy-client-certificate:
    #   name: envoy-client-cert-secret-name
    #   namespace: cno-apigateway
    ####
    # ExternalName Services are disabled by default due to CVE-2021-XXXXX
    # You can re-enable them by setting this setting to `true`.
    # This is not recommended without understanding the security implications.
    # Please see the advisory at https://github.com/projectcontour/contour/security/advisories/GHSA-5ph6-qq5x-7jwc for the details.
    # enableExternalNameService: false
    ##
    # Address to be placed in status.loadbalancer field of Ingress objects.
    # May be either a literal IP address or a host name.
    # The value will be placed directly into the relevant field inside the status.loadBalancer struct.
    # ingress-status-address: local.projectcontour.io
    ### Logging options
    # Default setting
    accesslog-format: envoy
    # The default access log format is defined by Envoy but it can be customized by setting following variable.
    # accesslog-format-string: "...\n"
    # To enable JSON logging in Envoy
    # accesslog-format: json
    # accesslog-level: info
    # The default fields that will be logged are specified below.
    # To customise this list, just add or remove entries.
    # The canonical list is available at
    # https://godoc.org/github.com/projectcontour/contour/internal/envoy#JSONFields
    # json-fields:
    #   - "@timestamp"
    #   - "authority"
    #   - "bytes_received"
    #   - "bytes_sent"
    #   - "downstream_local_address"
    #   - "downstream_remote_address"
    #   - "duration"
    #   - "method"
    #   - "path"
    #   - "protocol"
    #   - "request_id"
    #   - "requested_server_name"
    #   - "response_code"
    #   - "response_flags"
    #   - "uber_trace_id"
    #   - "upstream_cluster"
    #   - "upstream_host"
    #   - "upstream_local_address"
    #   - "upstream_service_time"
    #   - "user_agent"
    #   - "x_forwarded_for"
    #   - "grpc_status"
    #
    # default-http-versions:
    # - "HTTP/2"
    # - "HTTP/1.1"
    #
    # The following shows the default proxy timeout settings.
    # timeouts:
    #   request-timeout: infinity
    #   connection-idle-timeout: 60s
    #   stream-idle-timeout: 5m
    #   max-connection-duration: infinity
    #   delayed-close-timeout: 1s
    #   connection-shutdown-grace-period: 5s
    #   connect-timeout: 2s
    #
    # Envoy cluster settings.
    # cluster:
    #   configure the cluster dns lookup family
    #   valid options are: auto (default), v4, v6
    #   dns-lookup-family: auto
    #
    # Envoy network settings.
    # network:
    #   Configure the number of additional ingress proxy hops from the
    #   right side of the x-forwarded-for HTTP header to trust.
    #   num-trusted-hops: 0
    #   Configure the port used to access the Envoy Admin interface.
    #   admin-port: 9001
    #
    # Configure an optional global rate limit service.
    # rateLimitService:
    #   Identifies the extension service defining the rate limit service,
    #   formatted as <namespace>/<name>.
    #   extensionService: projectcontour/ratelimit
    #   Defines the rate limit domain to pass to the rate limit service.
    #   Acts as a container for a set of rate limit definitions within
    #   the RLS.
    #   domain: contour
    #   Defines whether to allow requests to proceed when the rate limit
    #   service fails to respond with a valid rate limit decision within
    #   the timeout defined on the extension service.
    #   failOpen: false
    #   Defines whether to include the X-RateLimit headers X-RateLimit-Limit,
    #   X-RateLimit-Remaining, and X-RateLimit-Reset (as defined by the IETF
    #   Internet-Draft linked below), on responses to clients when the Rate
    #   Limit Service is consulted for a request.
    #   ref. https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html
    #   enableXRateLimitHeaders: false
    #
    # Global Policy settings.
    # policy:
    #   # Default headers to set on all requests (unless set/removed on the HTTPProxy object itself)
    #   request-headers:
    #     set:
    #       # example: the hostname of the Envoy instance that proxied the request
    #       X-Envoy-Hostname: %HOSTNAME%
    #       # example: add a l5d-dst-override header to instruct Linkerd what service the request is destined for
    #       l5d-dst-override: %CONTOUR_SERVICE_NAME%.%CONTOUR_NAMESPACE%.svc.cluster.local:%CONTOUR_SERVICE_PORT%
    #   # default headers to set on all responses (unless set/removed on the HTTPProxy object itself)
    #   response-headers:
    #     set:
    #       # example: Envoy flags that provide additional details about the response or connection
    #       X-Envoy-Response-Flags: %RESPONSE_FLAGS%
    #
    # metrics:
    #  contour:
    #    address: 0.0.0.0
    #    port: 8000
    #    server-certificate-path: /path/to/server-cert.pem
    #    server-key-path: /path/to/server-private-key.pem
    #    ca-certificate-path: /path/to/root-ca-for-client-validation.pem
    #  envoy:
    #    address: 0.0.0.0
    #    port: 8002
    #    server-certificate-path: /path/to/server-cert.pem
    #    server-key-path: /path/to/server-private-key.pem
    #    ca-certificate-path: /path/to/root-ca-for-client-validation.pem
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: contour
  namespace: cno-apigateway-internal
data:
  contour.yaml: |
    #
    # server:
    #   determine which XDS Server implementation to utilize in Contour.
    #   xds-server-type: contour
    #
    # Specify the Gateway API configuration.
    gateway:
      controllerName: projectcontour.io/projectcontour/contour-internal
    #
    # should contour expect to be running inside a k8s cluster
    # incluster: true
    #
    # path to kubeconfig (if not running inside a k8s cluster)
    # kubeconfig: /path/to/.kube/config
    #
    # Disable RFC-compliant behavior to strip "Content-Length" header if
    # "Tranfer-Encoding: chunked" is also set.
    # disableAllowChunkedLength: false
    #
    # Disable Envoy's non-standard merge_slashes path transformation option
    # that strips duplicate slashes from request URLs.
    # disableMergeSlashes: false
    #
    # Disable HTTPProxy permitInsecure field
    disablePermitInsecure: false
    tls:
    # minimum TLS version that Contour will negotiate
    # minimum-protocol-version: "1.2"
    # TLS ciphers to be supported by Envoy TLS listeners when negotiating
    # TLS 1.2.
    # cipher-suites:
    # - '[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305]'
    # - '[ECDHE-RSA-AES128-GCM-SHA256|ECDHE-RSA-CHACHA20-POLY1305]'
    # - 'ECDHE-ECDSA-AES256-GCM-SHA384'
    # - 'ECDHE-RSA-AES256-GCM-SHA384'
    # Defines the Kubernetes name/namespace matching a secret to use
    # as the fallback certificate when requests which don't match the
    # SNI defined for a vhost.
      fallback-certificate:
    #   name: fallback-secret-name
    #   namespace: cno-apigateway-internal
      envoy-client-certificate:
    #   name: envoy-client-cert-secret-name
    #   namespace: cno-apigateway-internal
    ####
    # ExternalName Services are disabled by default due to CVE-2021-XXXXX
    # You can re-enable them by setting this setting to `true`.
    # This is not recommended without understanding the security implications.
    # Please see the advisory at https://github.com/projectcontour/contour/security/advisories/GHSA-5ph6-qq5x-7jwc for the details.
    # enableExternalNameService: false
    ##
    # Address to be placed in status.loadbalancer field of Ingress objects.
    # May be either a literal IP address or a host name.
    # The value will be placed directly into the relevant field inside the status.loadBalancer struct.
    # ingress-status-address: local.projectcontour.io
    ### Logging options
    # Default setting
    accesslog-format: envoy
    # The default access log format is defined by Envoy but it can be customized by setting following variable.
    # accesslog-format-string: "...\n"
    # To enable JSON logging in Envoy
    # accesslog-format: json
    # accesslog-level: info
    # The default fields that will be logged are specified below.
    # To customise this list, just add or remove entries.
    # The canonical list is available at
    # https://godoc.org/github.com/projectcontour/contour/internal/envoy#JSONFields
    # json-fields:
    #   - "@timestamp"
    #   - "authority"
    #   - "bytes_received"
    #   - "bytes_sent"
    #   - "downstream_local_address"
    #   - "downstream_remote_address"
    #   - "duration"
    #   - "method"
    #   - "path"
    #   - "protocol"
    #   - "request_id"
    #   - "requested_server_name"
    #   - "response_code"
    #   - "response_flags"
    #   - "uber_trace_id"
    #   - "upstream_cluster"
    #   - "upstream_host"
    #   - "upstream_local_address"
    #   - "upstream_service_time"
    #   - "user_agent"
    #   - "x_forwarded_for"
    #   - "grpc_status"
    #
    # default-http-versions:
    # - "HTTP/2"
    # - "HTTP/1.1"
    #
    # The following shows the default proxy timeout settings.
    # timeouts:
    #   request-timeout: infinity
    #   connection-idle-timeout: 60s
    #   stream-idle-timeout: 5m
    #   max-connection-duration: infinity
    #   delayed-close-timeout: 1s
    #   connection-shutdown-grace-period: 5s
    #   connect-timeout: 2s
    #
    # Envoy cluster settings.
    # cluster:
    #   configure the cluster dns lookup family
    #   valid options are: auto (default), v4, v6
    #   dns-lookup-family: auto
    #
    # Envoy network settings.
    # network:
    #   Configure the number of additional ingress proxy hops from the
    #   right side of the x-forwarded-for HTTP header to trust.
    #   num-trusted-hops: 0
    #   Configure the port used to access the Envoy Admin interface.
    #   admin-port: 9001
    #
    # Configure an optional global rate limit service.
    # rateLimitService:
    #   Identifies the extension service defining the rate limit service,
    #   formatted as <namespace>/<name>.
    #   extensionService: projectcontour/ratelimit
    #   Defines the rate limit domain to pass to the rate limit service.
    #   Acts as a container for a set of rate limit definitions within
    #   the RLS.
    #   domain: contour
    #   Defines whether to allow requests to proceed when the rate limit
    #   service fails to respond with a valid rate limit decision within
    #   the timeout defined on the extension service.
    #   failOpen: false
    #   Defines whether to include the X-RateLimit headers X-RateLimit-Limit,
    #   X-RateLimit-Remaining, and X-RateLimit-Reset (as defined by the IETF
    #   Internet-Draft linked below), on responses to clients when the Rate
    #   Limit Service is consulted for a request.
    #   ref. https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html
    #   enableXRateLimitHeaders: false
    #
    # Global Policy settings.
    # policy:
    #   # Default headers to set on all requests (unless set/removed on the HTTPProxy object itself)
    #   request-headers:
    #     set:
    #       # example: the hostname of the Envoy instance that proxied the request
    #       X-Envoy-Hostname: %HOSTNAME%
    #       # example: add a l5d-dst-override header to instruct Linkerd what service the request is destined for
    #       l5d-dst-override: %CONTOUR_SERVICE_NAME%.%CONTOUR_NAMESPACE%.svc.cluster.local:%CONTOUR_SERVICE_PORT%
    #   # default headers to set on all responses (unless set/removed on the HTTPProxy object itself)
    #   response-headers:
    #     set:
    #       # example: Envoy flags that provide additional details about the response or connection
    #       X-Envoy-Response-Flags: %RESPONSE_FLAGS%
    #
    # metrics:
    #  contour:
    #    address: 0.0.0.0
    #    port: 8000
    #    server-certificate-path: /path/to/server-cert.pem
    #    server-key-path: /path/to/server-private-key.pem
    #    ca-certificate-path: /path/to/root-ca-for-client-validation.pem
    #  envoy:
    #    address: 0.0.0.0
    #    port: 8002
    #    server-certificate-path: /path/to/server-cert.pem
    #    server-key-path: /path/to/server-private-key.pem
    #    ca-certificate-path: /path/to/root-ca-for-client-validation.pem
---
# Source: cno-agent/templates/prometheus/prometheus.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
  namespace: cno-monitoring
data:
  prometheus.rules: |-
    groups:
    - name: devopscube demo alert
      rules:
      - alert: High Pod Memory
        expr: sum(container_memory_usage_bytes) > 1
        for: 1m
        labels:
          severity: slack
        annotations:
          summary: High Memory Usage
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    rule_files:
      - /etc/prometheus/prometheus.rules
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.cno-monitoring.svc:9093"

    scrape_configs:
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_endpoints_name]
          regex: 'node-exporter'
          action: keep
      
      - job_name: 'kubernetes-apiservers'

        kubernetes_sd_configs:
        - role: endpoints
        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
        - role: node

        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics     
      
      - job_name: 'kubernetes-pods'

        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
      
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']

      - job_name: 'kubernetes-cadvisor'

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
        - role: node

        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      
      - job_name: 'kubernetes-service-endpoints'

        kubernetes_sd_configs:
        - role: endpoints

        relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name
---
# Source: cno-agent/templates/prometheus/prometheus.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-cno-monitoring-pvc
  namespace: cno-monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
---
# Source: cno-agent/templates/cd/cno-cd-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: workloads.cnocd.beopenit.com
spec:
  group: cnocd.beopenit.com
  names:
    kind: Workload
    listKind: WorkloadList
    plural: workloads
    singular: workload
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Workload is the Schema for the workloads API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadSpec defines the desired state of Workload
            properties:
              bascule:
                type: string
              containers:
                items:
                  properties:
                    autoDeploy:
                      type: boolean
                    filter:
                      type: string
                    image:
                      type: string
                    name:
                      type: string
                    version:
                      type: string
                  required:
                  - image
                  type: object
                type: array
              deploymentStrategy:
                type: string
              replicas:
                format: int32
                type: integer
              strategySpec:
                properties:
                  blue:
                    items:
                      properties:
                        image:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - version
                      type: object
                    type: array
                  green:
                    items:
                      properties:
                        image:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - version
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: WorkloadStatus defines the observed state of Workload
            properties:
              ContainerStatus:
                items:
                  properties:
                    image:
                      type: string
                    name:
                      type: string
                    otherVersion:
                      items:
                        properties:
                          createdAt:
                            type: string
                          name:
                            type: string
                        required:
                        - createdAt
                        - name
                        type: object
                      type: array
                    version:
                      type: string
                    versionHistory:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              desiredReplicas:
                format: int32
                type: integer
              endpoints:
                properties:
                  current:
                    properties:
                      ingress:
                        items:
                          properties:
                            address:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            host:
                              type: string
                            ingressName:
                              type: string
                            path:
                              type: string
                            serviceName:
                              type: string
                            tls:
                              type: boolean
                          type: object
                        type: array
                      loadBalancer:
                        items:
                          properties:
                            loadBalancerStatus:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                      nodePort:
                        items:
                          properties:
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                    type: object
                  staging:
                    properties:
                      ingress:
                        items:
                          properties:
                            address:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            host:
                              type: string
                            ingressName:
                              type: string
                            path:
                              type: string
                            serviceName:
                              type: string
                            tls:
                              type: boolean
                          type: object
                        type: array
                      loadBalancer:
                        items:
                          properties:
                            loadBalancerStatus:
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                      nodePort:
                        items:
                          properties:
                            ports:
                              items:
                                description: ServicePort contains information on service's
                                  port.
                                properties:
                                  appProtocol:
                                    description: The application protocol for this
                                      port. This field follows standard Kubernetes
                                      label syntax. Un-prefixed names are reserved
                                      for IANA standard service names (as per RFC-6335
                                      and https://www.iana.org/assignments/service-names).
                                      Non-standard protocols should use prefixed names
                                      such as mycompany.com/my-custom-protocol.
                                    type: string
                                  name:
                                    description: The name of this port within the
                                      service. This must be a DNS_LABEL. All ports
                                      within a ServiceSpec must have unique names.
                                      When considering the endpoints for a Service,
                                      this must match the 'name' field in the EndpointPort.
                                      Optional if only one ServicePort is defined
                                      on this service.
                                    type: string
                                  nodePort:
                                    description: 'The port on each node on which this
                                      service is exposed when type is NodePort or
                                      LoadBalancer.  Usually assigned by the system.
                                      If a value is specified, in-range, and not in
                                      use it will be used, otherwise the operation
                                      will fail.  If not specified, a port will be
                                      allocated if this Service requires one.  If
                                      this field is specified when creating a Service
                                      which does not need it, creation will fail.
                                      This field will be wiped when updating a Service
                                      to no longer need it (e.g. changing type from
                                      NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                    format: int32
                                    type: integer
                                  port:
                                    description: The port that will be exposed by
                                      this service.
                                    format: int32
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: The IP protocol for this port. Supports
                                      "TCP", "UDP", and "SCTP". Default is TCP.
                                    type: string
                                  targetPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: 'Number or name of the port to access
                                      on the pods targeted by the service. Number
                                      must be in the range 1 to 65535. Name must be
                                      an IANA_SVC_NAME. If this is a string, it will
                                      be looked up as a named port in the target Pod''s
                                      container ports. If this is not specified, the
                                      value of the ''port'' field is used (an identity
                                      map). This field is ignored for services with
                                      clusterIP=None, and should be omitted or set
                                      equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              type: array
                            serviceName:
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              readWriteOncePvc:
                type: boolean
              readyBlueReplicas:
                format: int32
                type: integer
              readyGreenReplicas:
                format: int32
                type: integer
              readyReplicas:
                format: int32
                type: integer
              services:
                items:
                  type: string
                type: array
              status:
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Workload is the Schema for the workloads API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkloadSpec defines the desired state of Workload
            properties:
              deploymentStrategy:
                enum:
                - default
                - blue/green
                - canary
                - ab/testing
                type: string
              replicas:
                format: int32
                type: integer
              resourceType:
                enum:
                - Deployment
                - StatefulSet
                - DaemonSet
                - CronJob
                - DeploymentConfig
                type: string
              strategySpec:
                description: StrategySpec defines the desired state of Workload
                properties:
                  autoDeploy:
                    type: boolean
                  autoProgression:
                    properties:
                      enabled:
                        type: boolean
                      increment:
                        format: int32
                        type: integer
                      interval:
                        type: string
                      maxWeight:
                        format: int32
                        type: integer
                      metrics:
                        additionalProperties:
                          properties:
                            max:
                              format: int32
                              type: integer
                            min:
                              format: int32
                              type: integer
                          type: object
                        type: object
                      minRequest:
                        format: int32
                        type: integer
                      steps:
                        items:
                          format: int32
                          type: integer
                        type: array
                      webhooks:
                        items:
                          properties:
                            metadata:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                            url:
                              type: string
                          type: object
                        type: array
                    type: object
                  bascule:
                    enum:
                    - blue
                    - green
                    type: string
                  headers:
                    additionalProperties:
                      type: string
                    type: object
                  live:
                    items:
                      description: Container defines the desired state of Workload
                      properties:
                        filter:
                          type: string
                        image:
                          type: string
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - name
                      - version
                      type: object
                    type: array
                  staging:
                    items:
                      description: Container defines the desired state of Workload
                      properties:
                        filter:
                          type: string
                        image:
                          type: string
                        name:
                          type: string
                        version:
                          type: string
                      required:
                      - image
                      - name
                      - version
                      type: object
                    type: array
                  trafficSplitting:
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                required:
                - live
                type: object
            required:
            - deploymentStrategy
            - replicas
            - resourceType
            - strategySpec
            type: object
          status:
            description: WorkloadStatus defines the observed state of Workload
            properties:
              containerStatus:
                items:
                  description: ContainerStatus defines the observed state of Workload
                  properties:
                    image:
                      type: string
                    name:
                      type: string
                    othersVersion:
                      items:
                        description: Tag defines
                        properties:
                          createdAt:
                            type: string
                          name:
                            type: string
                          sha265:
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    stagingVersion:
                      type: string
                    version:
                      type: string
                    versionHistory:
                      items:
                        type: string
                      type: array
                  required:
                  - image
                  - name
                  - version
                  type: object
                type: array
              desiredReplicas:
                format: int32
                type: integer
              ingresses:
                description: IngressSpec  defines the observed state of Workload
                properties:
                  live:
                    items:
                      description: IngressEndpoint defines the observed state of Workload
                      properties:
                        address:
                          items:
                            description: 'LoadBalancerIngress represents the status
                              of a load-balancer ingress point: traffic intended for
                              the service should be sent to an ingress point.'
                            properties:
                              hostname:
                                description: Hostname is set for load-balancer ingress
                                  points that are DNS based (typically AWS load-balancers)
                                type: string
                              ip:
                                description: IP is set for load-balancer ingress points
                                  that are IP based (typically GCE or OpenStack load-balancers)
                                type: string
                              ports:
                                description: Ports is a list of records of service
                                  ports If used, every port defined in the service
                                  should have an entry in it
                                items:
                                  properties:
                                    error:
                                      description: 'Error is to record the problem
                                        with the service port The format of the error
                                        shall comply with the following rules: - built-in
                                        error values shall be specified in this file
                                        and those shall use CamelCase names - cloud
                                        provider specific error values must have names
                                        that comply with the format foo.example.com/CamelCase.
                                        --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                      maxLength: 316
                                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                      type: string
                                    port:
                                      description: Port is the port number of the
                                        service port of which status is recorded here
                                      format: int32
                                      type: integer
                                    protocol:
                                      default: TCP
                                      description: 'Protocol is the protocol of the
                                        service port of which status is recorded here
                                        The supported values are: "TCP", "UDP", "SCTP"'
                                      type: string
                                  required:
                                  - port
                                  - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          type: array
                        host:
                          type: string
                        name:
                          type: string
                        path:
                          type: string
                        serviceName:
                          type: string
                        servicePort:
                          format: int32
                          type: integer
                        tls:
                          type: boolean
                      required:
                      - host
                      - name
                      - serviceName
                      type: object
                    type: array
                  staging:
                    items:
                      description: IngressEndpoint defines the observed state of Workload
                      properties:
                        address:
                          items:
                            description: 'LoadBalancerIngress represents the status
                              of a load-balancer ingress point: traffic intended for
                              the service should be sent to an ingress point.'
                            properties:
                              hostname:
                                description: Hostname is set for load-balancer ingress
                                  points that are DNS based (typically AWS load-balancers)
                                type: string
                              ip:
                                description: IP is set for load-balancer ingress points
                                  that are IP based (typically GCE or OpenStack load-balancers)
                                type: string
                              ports:
                                description: Ports is a list of records of service
                                  ports If used, every port defined in the service
                                  should have an entry in it
                                items:
                                  properties:
                                    error:
                                      description: 'Error is to record the problem
                                        with the service port The format of the error
                                        shall comply with the following rules: - built-in
                                        error values shall be specified in this file
                                        and those shall use CamelCase names - cloud
                                        provider specific error values must have names
                                        that comply with the format foo.example.com/CamelCase.
                                        --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                      maxLength: 316
                                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                      type: string
                                    port:
                                      description: Port is the port number of the
                                        service port of which status is recorded here
                                      format: int32
                                      type: integer
                                    protocol:
                                      default: TCP
                                      description: 'Protocol is the protocol of the
                                        service port of which status is recorded here
                                        The supported values are: "TCP", "UDP", "SCTP"'
                                      type: string
                                  required:
                                  - port
                                  - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          type: array
                        host:
                          type: string
                        name:
                          type: string
                        path:
                          type: string
                        serviceName:
                          type: string
                        servicePort:
                          format: int32
                          type: integer
                        tls:
                          type: boolean
                      required:
                      - host
                      - name
                      - serviceName
                      type: object
                    type: array
                type: object
              lastAutoProgressDate:
                format: date-time
                type: string
              lastReconciledStragegy:
                type: string
              liveReadyReplicas:
                format: int32
                type: integer
              liveVersion:
                type: string
              readWriteOncePvc:
                type: boolean
              services:
                description: Services defines the observed state of Workload
                properties:
                  live:
                    items:
                      description: ServiceEndpoint defines the observed state of Workload
                      properties:
                        address:
                          description: LoadBalancerStatus represents the status of
                            a load-balancer.
                          properties:
                            ingress:
                              description: Ingress is a list containing ingress points
                                for the load-balancer. Traffic intended for the service
                                should be sent to these ingress points.
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                          type: object
                        name:
                          type: string
                        port:
                          items:
                            description: ServicePort contains information on service's
                              port.
                            properties:
                              appProtocol:
                                description: The application protocol for this port.
                                  This field follows standard Kubernetes label syntax.
                                  Un-prefixed names are reserved for IANA standard
                                  service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).
                                  Non-standard protocols should use prefixed names
                                  such as mycompany.com/my-custom-protocol.
                                type: string
                              name:
                                description: The name of this port within the service.
                                  This must be a DNS_LABEL. All ports within a ServiceSpec
                                  must have unique names. When considering the endpoints
                                  for a Service, this must match the 'name' field
                                  in the EndpointPort. Optional if only one ServicePort
                                  is defined on this service.
                                type: string
                              nodePort:
                                description: 'The port on each node on which this
                                  service is exposed when type is NodePort or LoadBalancer.  Usually
                                  assigned by the system. If a value is specified,
                                  in-range, and not in use it will be used, otherwise
                                  the operation will fail.  If not specified, a port
                                  will be allocated if this Service requires one.  If
                                  this field is specified when creating a Service
                                  which does not need it, creation will fail. This
                                  field will be wiped when updating a Service to no
                                  longer need it (e.g. changing type from NodePort
                                  to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                format: int32
                                type: integer
                              port:
                                description: The port that will be exposed by this
                                  service.
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: The IP protocol for this port. Supports
                                  "TCP", "UDP", and "SCTP". Default is TCP.
                                type: string
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: 'Number or name of the port to access
                                  on the pods targeted by the service. Number must
                                  be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  If this is a string, it will be looked up as a named
                                  port in the target Pod''s container ports. If this
                                  is not specified, the value of the ''port'' field
                                  is used (an identity map). This field is ignored
                                  for services with clusterIP=None, and should be
                                  omitted or set equal to the ''port'' field. More
                                  info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          type: array
                        type:
                          enum:
                          - ClusterIP
                          - LoadBalancer
                          - NodePort
                          type: string
                      required:
                      - address
                      - name
                      - port
                      - type
                      type: object
                    type: array
                  staging:
                    items:
                      description: ServiceEndpoint defines the observed state of Workload
                      properties:
                        address:
                          description: LoadBalancerStatus represents the status of
                            a load-balancer.
                          properties:
                            ingress:
                              description: Ingress is a list containing ingress points
                                for the load-balancer. Traffic intended for the service
                                should be sent to these ingress points.
                              items:
                                description: 'LoadBalancerIngress represents the status
                                  of a load-balancer ingress point: traffic intended
                                  for the service should be sent to an ingress point.'
                                properties:
                                  hostname:
                                    description: Hostname is set for load-balancer
                                      ingress points that are DNS based (typically
                                      AWS load-balancers)
                                    type: string
                                  ip:
                                    description: IP is set for load-balancer ingress
                                      points that are IP based (typically GCE or OpenStack
                                      load-balancers)
                                    type: string
                                  ports:
                                    description: Ports is a list of records of service
                                      ports If used, every port defined in the service
                                      should have an entry in it
                                    items:
                                      properties:
                                        error:
                                          description: 'Error is to record the problem
                                            with the service port The format of the
                                            error shall comply with the following
                                            rules: - built-in error values shall be
                                            specified in this file and those shall
                                            use CamelCase names - cloud provider specific
                                            error values must have names that comply
                                            with the format foo.example.com/CamelCase.
                                            --- The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                          maxLength: 316
                                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                          type: string
                                        port:
                                          description: Port is the port number of
                                            the service port of which status is recorded
                                            here
                                          format: int32
                                          type: integer
                                        protocol:
                                          default: TCP
                                          description: 'Protocol is the protocol of
                                            the service port of which status is recorded
                                            here The supported values are: "TCP",
                                            "UDP", "SCTP"'
                                          type: string
                                      required:
                                      - port
                                      - protocol
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                              type: array
                          type: object
                        name:
                          type: string
                        port:
                          items:
                            description: ServicePort contains information on service's
                              port.
                            properties:
                              appProtocol:
                                description: The application protocol for this port.
                                  This field follows standard Kubernetes label syntax.
                                  Un-prefixed names are reserved for IANA standard
                                  service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).
                                  Non-standard protocols should use prefixed names
                                  such as mycompany.com/my-custom-protocol.
                                type: string
                              name:
                                description: The name of this port within the service.
                                  This must be a DNS_LABEL. All ports within a ServiceSpec
                                  must have unique names. When considering the endpoints
                                  for a Service, this must match the 'name' field
                                  in the EndpointPort. Optional if only one ServicePort
                                  is defined on this service.
                                type: string
                              nodePort:
                                description: 'The port on each node on which this
                                  service is exposed when type is NodePort or LoadBalancer.  Usually
                                  assigned by the system. If a value is specified,
                                  in-range, and not in use it will be used, otherwise
                                  the operation will fail.  If not specified, a port
                                  will be allocated if this Service requires one.  If
                                  this field is specified when creating a Service
                                  which does not need it, creation will fail. This
                                  field will be wiped when updating a Service to no
                                  longer need it (e.g. changing type from NodePort
                                  to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                                format: int32
                                type: integer
                              port:
                                description: The port that will be exposed by this
                                  service.
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: The IP protocol for this port. Supports
                                  "TCP", "UDP", and "SCTP". Default is TCP.
                                type: string
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: 'Number or name of the port to access
                                  on the pods targeted by the service. Number must
                                  be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  If this is a string, it will be looked up as a named
                                  port in the target Pod''s container ports. If this
                                  is not specified, the value of the ''port'' field
                                  is used (an identity map). This field is ignored
                                  for services with clusterIP=None, and should be
                                  omitted or set equal to the ''port'' field. More
                                  info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          type: array
                        type:
                          enum:
                          - ClusterIP
                          - LoadBalancer
                          - NodePort
                          type: string
                      required:
                      - address
                      - name
                      - port
                      - type
                      type: object
                    type: array
                type: object
              stagingReadyReplicas:
                format: int32
                type: integer
              status:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: apps.helm.cloudoor.com
spec:
  group: helm.cloudoor.com
  names:
    kind: App
    listKind: AppList
    plural: apps
    singular: app
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: App is the Schema for the apps API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of App
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of App
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: observabilities.helm.cloudoor.com
spec:
  group: helm.cloudoor.com
  names:
    kind: Observability
    listKind: ObservabilityList
    plural: observabilities
    singular: observability
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Observability is the Schema for the observabilities API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Observability
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of Observability
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: cno-agent/templates/onboard/cno-onboard-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: environments.onboarding.beopenit.com
spec:
  group: onboarding.beopenit.com
  names:
    kind: Environment
    listKind: EnvironmentList
    plural: environments
    singular: environment
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Environment is the Schema for the environments API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: EnvironmentSpec defines the desired state of Environment
              properties:
                name:
                  type: string
                isprod:
                  type: boolean
                resources:
                  description: Resources describes requests and limits for the cluster
                    resources.
                  properties:
                    limits:
                      description: ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                          type: string
                        ephemeral-storage:
                          pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                          type: string
                        memory:
                          pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                          type: string
                      required:
                        - cpu
                        - ephemeral-storage
                        - memory
                      type: object
                    requests:
                      description: ResourceDescription describes CPU and memory resources
                        defined for a cluster.
                      properties:
                        cpu:
                          pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                          type: string
                        ephemeral-storage:
                          pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                          type: string
                        memory:
                          pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                          type: string
                      required:
                        - cpu
                        - ephemeral-storage
                        - memory
                      type: object
                  type: object
                storage:
                  pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                  type: string
                users:
                  items:
                    properties:
                      email:
                        type: string
                      environmentId:
                        type: string
                      userId:
                        type: string
                      role:
                        type: string
                      userFullName:
                        type: string
                      username:
                        type: string
                    required:
                      - email
                      - environmentId
                      - userId
                      - role
                      - userFullName
                      - username
                    type: object
                  type: array
              required:
                - name
                - users
              type: object
            status:
              description: EnvironmentStatus defines the observed state of Environment
                (success, failed)
              properties:
                environmentStatus:
                  type: string
              required:
                - environmentStatus
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: cno-agent/charts/metrics-server/templates/clusterrole-aggregated-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:metrics-server-aggregated-reader
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
  - apiGroups:
      - metrics.k8s.io
    resources:
      - pods
      - nodes
    verbs:
      - get
      - list
      - watch
---
# Source: cno-agent/charts/metrics-server/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:my-release-metrics-server
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - ""
    resources:
    - nodes/metrics
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
      - pods
      - nodes
      - namespaces
      - configmaps
    verbs:
      - get
      - list
      - watch
---
# Source: cno-agent/templates/cd/cno-cd.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cno-cd-operator
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling.k8s.io
  resources:
  - verticalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - daemonsets/finalizers
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  - deployments/finalizers
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - statefulsets
  - statefulsets/finalizers
  verbs:
  - '*'
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs
  - deploymentconfigs/finalizers
  verbs:
  - '*'
- apiGroups:
  - cnocd.beopenit.com
  resources:
  - workloads
  - workloads/finalizers
  - workloads/status
  verbs:
  - '*'
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  - httproutes
  - tcproutes
  verbs:
  - '*'
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  - imagestreams/finalizers
  verbs:
  - '*'
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingresses/finalizers
  - ingresses/status
  verbs:
  - '*'
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  - routes/finalizers
  verbs:
  - '*'
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
# Source: cno-agent/templates/cd/cno-cd.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cno-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: contour
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - secrets
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  - httproutes
  - referencegrants
  - referencepolicies
  - tlsroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  - gateways/status
  - httproutes/status
  - tlsroutes/status
  verbs:
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - create
  - get
  - update
- apiGroups:
  - projectcontour.io
  resources:
  - contourconfigurations
  - extensionservices
  - httpproxies
  - tlscertificatedelegations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - projectcontour.io
  resources:
  - contourconfigurations/status
  - extensionservices/status
  - httpproxies/status
  verbs:
  - create
  - get
  - update
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: door-helm-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - helm.cloudoor.com
  resources:
  - apps
  - apps/status
  - apps/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - services
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
- apiGroups:
  - helm.cloudoor.com
  resources:
  - observabilities
  - observabilities/status
  - observabilities/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - services
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: door-helm
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: door-helm
    app: door-helm
  name: door-helm-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: door-helm
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: door-helm
    app: door-helm
  name: door-helm-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: cno-agent/templates/onboard/cno-onboard-user-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: cno-admin-cluster-role
rules:
- apiGroups:
  - cnocd.beopenit.com
  resources:
  - workloads
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addonoperators
  verbs:
  - '*'
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addons
  verbs:
  - '*'
- apiGroups:
  - operators.coreos.com
  resources:
  - subscriptions
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - catalogsources
  - installplans
  - subscriptions
  verbs:
  - delete
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - catalogsources
  - installplans
  - subscriptions
  - operatorgroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  - packagemanifests/icon
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monitoring.openshift.io
  resources:
  - clusterurlmonitors
  verbs:
  - '*'
- apiGroups:
  - managed.openshift.io
  resources:
  - customdomains
  verbs:
  - '*'
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addonoperators
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addons
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - monitoring.openshift.io
  resources:
  - clusterurlmonitors
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - managed.openshift.io
  resources:
  - customdomains
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - managednotifications
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - managed.openshift.io
  resources:
  - mustgathers
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - ocmagents
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreamimages
  - imagestreammappings
  - imagestreams
  - imagestreams/secrets
  - imagestreamtags
  - imagetags
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreamimports
  verbs:
  - create
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams/layers
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  - project.openshift.io
  resources:
  - projects
  verbs:
  - get
- apiGroups:
  - monitoring.openshift.io
  resources:
  - routemonitors
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - splunkforwarder.managed.openshift.io
  resources:
  - splunkforwarders
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - managed.openshift.io
  resources:
  - subjectpermissions
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/attach
  - pods/exec
  - pods/portforward
  - pods/proxy
  - secrets
  - services/proxy
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - impersonate
- apiGroups:
  - ""
  resources:
  - pods
  - pods/attach
  - pods/exec
  - pods/portforward
  - pods/proxy
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - persistentvolumeclaims
  - replicationcontrollers
  - replicationcontrollers/scale
  - secrets
  - serviceaccounts
  - services
  - services/proxy
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - deployments/rollback
  - deployments/scale
  - replicasets
  - replicasets/scale
  - statefulsets
  - statefulsets/scale
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - deployments/rollback
  - deployments/scale
  - ingresses
  - networkpolicies
  - replicasets
  - replicasets/scale
  - replicationcontrollers/scale
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - networkpolicies
  verbs:
  - create
  - delete
  - deletecollection
  - patch
  - update
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams
  verbs:
  - create
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - builds/details
  verbs:
  - update
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - builds
  verbs:
  - get
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
  - deletecollection
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildconfigs
  - buildconfigs/webhooks
  - builds
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - builds/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildconfigs/instantiate
  - buildconfigs/instantiatebinary
  - builds/clone
  verbs:
  - create
- apiGroups:
  - build.openshift.io
  resources:
  - jenkins
  verbs:
  - edit
  - view
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigs
  - deploymentconfigs/scale
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigrollbacks
  - deploymentconfigs/instantiate
  - deploymentconfigs/rollback
  verbs:
  - create
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigs/log
  - deploymentconfigs/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - quota.openshift.io
  resources:
  - appliedclusterresourcequotas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes/custom-host
  verbs:
  - create
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - template.openshift.io
  resources:
  - processedtemplates
  - templateconfigs
  - templateinstances
  - templates
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildlogs
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - resourcequotausages
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - upgrade.managed.openshift.io
  resources:
  - upgradeconfigs
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - managed.openshift.io
  resources:
  - veleroinstalls
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - addonoperators.addons.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addonoperators
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - addons.addons.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addons
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - clusterurlmonitors.monitoring.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - monitoring.openshift.io
  resources:
  - clusterurlmonitors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - customdomains.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - customdomains
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - managednotifications.ocmagent.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - managednotifications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - mustgathers.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - mustgathers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ocmagents.ocmagent.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - ocmagents
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreamimages
  - imagestreammappings
  - imagestreams
  - imagestreamtags
  - imagetags
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams/layers
  verbs:
  - get
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - routemonitors.monitoring.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - monitoring.openshift.io
  resources:
  - routemonitors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - splunkforwarders.splunkforwarder.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - splunkforwarder.managed.openshift.io
  resources:
  - splunkforwarders
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - subjectpermissions.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - subjectpermissions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  - pods
  - replicationcontrollers
  - replicationcontrollers/scale
  - serviceaccounts
  - services
  - services/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - bindings
  - events
  - limitranges
  - namespaces/status
  - pods/log
  - pods/status
  - replicationcontrollers/status
  - resourcequotas
  - resourcequotas/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - controllerrevisions
  - daemonsets
  - daemonsets/status
  - deployments
  - deployments/scale
  - deployments/status
  - replicasets
  - replicasets/scale
  - replicasets/status
  - statefulsets
  - statefulsets/scale
  - statefulsets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  - horizontalpodautoscalers/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - cronjobs/status
  - jobs
  - jobs/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - daemonsets/status
  - deployments
  - deployments/scale
  - deployments/status
  - ingresses
  - ingresses/status
  - networkpolicies
  - replicasets
  - replicasets/scale
  - replicasets/status
  - replicationcontrollers/scale
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  - poddisruptionbudgets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingresses/status
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildconfigs
  - buildconfigs/webhooks
  - builds
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - build.openshift.io
  resources:
  - jenkins
  verbs:
  - view
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigs
  - deploymentconfigs/scale
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - template.openshift.io
  resources:
  - processedtemplates
  - templateconfigs
  - templateinstances
  - templates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildlogs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - upgradeconfigs.upgrade.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - upgrade.managed.openshift.io
  resources:
  - upgradeconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - veleroinstalls.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - veleroinstalls
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - managednotifications
  verbs:
  - '*'
- apiGroups:
  - managed.openshift.io
  resources:
  - mustgathers
  verbs:
  - '*'
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - ocmagents
  verbs:
  - '*'
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  verbs:
  - '*'
- apiGroups:
  - ""
  - authorization.openshift.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  - authorization.openshift.io
  resources:
  - localresourceaccessreviews
  - localsubjectaccessreviews
  - subjectrulesreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - localsubjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  - project.openshift.io
  resources:
  - projects
  verbs:
  - delete
  - get
- apiGroups:
  - ""
  - authorization.openshift.io
  resources:
  - resourceaccessreviews
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - monitoring.openshift.io
  resources:
  - routemonitors
  verbs:
  - '*'
- apiGroups:
  - splunkforwarder.managed.openshift.io
  resources:
  - splunkforwarders
  verbs:
  - '*'
- apiGroups:
  - managed.openshift.io
  resources:
  - subjectpermissions
  verbs:
  - '*'
- apiGroups:
  - ""
  - security.openshift.io
  resources:
  - podsecuritypolicyreviews
  - podsecuritypolicyselfsubjectreviews
  - podsecuritypolicysubjectreviews
  verbs:
  - create
- apiGroups:
  - ""
  - authorization.openshift.io
  resources:
  - rolebindingrestrictions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - build.openshift.io
  resources:
  - jenkins
  verbs:
  - admin
  - edit
  - view
- apiGroups:
  - ""
  - project.openshift.io
  resources:
  - projects
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes/status
  verbs:
  - update
- apiGroups:
  - upgrade.managed.openshift.io
  resources:
  - upgradeconfigs
  verbs:
  - '*'
- apiGroups:
  - managed.openshift.io
  resources:
  - veleroinstalls
  verbs:
  - '*'
---
# Source: cno-agent/templates/onboard/cno-onboard-user-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: cno-viewer-cluster-role
rules:
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - addonoperators.addons.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addonoperators
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - addons.addons.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - addons.managed.openshift.io
  resources:
  - addons
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - catalogsources
  - installplans
  - subscriptions
  - operatorgroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  - packagemanifests/icon
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - clusterurlmonitors.monitoring.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - monitoring.openshift.io
  resources:
  - clusterurlmonitors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - customdomains.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - customdomains
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - managednotifications.ocmagent.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - managednotifications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - mustgathers.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - mustgathers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ocmagents.ocmagent.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - ocmagent.managed.openshift.io
  resources:
  - ocmagents
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreamimages
  - imagestreammappings
  - imagestreams
  - imagestreamtags
  - imagetags
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams/layers
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  - project.openshift.io
  resources:
  - projects
  verbs:
  - get
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - routemonitors.monitoring.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - monitoring.openshift.io
  resources:
  - routemonitors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - splunkforwarders.splunkforwarder.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - splunkforwarder.managed.openshift.io
  resources:
  - splunkforwarders
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - subjectpermissions.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - subjectpermissions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  - pods
  - replicationcontrollers
  - replicationcontrollers/scale
  - serviceaccounts
  - services
  - services/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - bindings
  - events
  - limitranges
  - namespaces/status
  - pods/log
  - pods/status
  - replicationcontrollers/status
  - resourcequotas
  - resourcequotas/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - controllerrevisions
  - daemonsets
  - daemonsets/status
  - deployments
  - deployments/scale
  - deployments/status
  - replicasets
  - replicasets/scale
  - replicasets/status
  - statefulsets
  - statefulsets/scale
  - statefulsets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  - horizontalpodautoscalers/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - cronjobs/status
  - jobs
  - jobs/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - daemonsets/status
  - deployments
  - deployments/scale
  - deployments/status
  - ingresses
  - ingresses/status
  - networkpolicies
  - replicasets
  - replicasets/scale
  - replicasets/status
  - replicationcontrollers/scale
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  - poddisruptionbudgets/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingresses/status
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildconfigs
  - buildconfigs/webhooks
  - builds
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - builds/log
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - build.openshift.io
  resources:
  - jenkins
  verbs:
  - view
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigs
  - deploymentconfigs/scale
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - apps.openshift.io
  resources:
  - deploymentconfigs/log
  - deploymentconfigs/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - image.openshift.io
  resources:
  - imagestreams/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - quota.openshift.io
  resources:
  - appliedclusterresourcequotas
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - route.openshift.io
  resources:
  - routes/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - template.openshift.io
  resources:
  - processedtemplates
  - templateconfigs
  - templateinstances
  - templates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - build.openshift.io
  resources:
  - buildlogs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - resourcequotausages
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - upgradeconfigs.upgrade.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - upgrade.managed.openshift.io
  resources:
  - upgradeconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - veleroinstalls.managed.openshift.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
- apiGroups:
  - managed.openshift.io
  resources:
  - veleroinstalls
  verbs:
  - get
  - list
  - watch
---
# Source: cno-agent/templates/prometheus/prometheus.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cno-monitoring
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
# Source: cno-agent/charts/metrics-server/templates/clusterrolebinding-auth-delegator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-metrics-server:system:auth-delegator
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: my-release-metrics-server
    namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/charts/metrics-server/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:my-release-metrics-server
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:my-release-metrics-server
subjects:
  - kind: ServiceAccount
    name: my-release-metrics-server
    namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/agent/serviceaccount.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cno-agent
subjects:
  - kind: ServiceAccount
    name: cno-agent
    namespace: cno-agent-v2.0.6.tgz
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno-agent/templates/cd/cno-cd.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cno-cd-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cno-cd-operator
subjects:
  - kind: ServiceAccount
    name: cno-cd-operator
    namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/cd/cno-cd.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cno-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cno-proxy-role
subjects:
- kind: ServiceAccount
  name: cno-cd-operator
  namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: contour
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: contour
subjects:
- kind: ServiceAccount
  name: contour
  namespace: cno-apigateway
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: contour-internal
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: contour
subjects:
- kind: ServiceAccount
  name: contour
  namespace: cno-apigateway-internal
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: door-helm
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: door-helm
    app: door-helm
  name: door-helm-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: door-helm
  namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: door-helm
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: door-helm
    app: door-helm
  name: door-helm-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: door-helm-proxy-role
subjects:
- kind: ServiceAccount
  name: door-helm
  namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/onboard/cno-onboard.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cno-onboarding-operator
subjects:
  - kind: ServiceAccount
    name: cno-onboarding-operator
    namespace: cno-agent-v2.0.6.tgz
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# Source: cno-agent/templates/prometheus/prometheus.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cno-monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cno-monitoring
subjects:
- kind: ServiceAccount
  name: default
  namespace: cno-monitoring
---
# Source: cno-agent/templates/cd/cno-cd.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cno-cd-operator-leader-election-role
  namespace: cno-agent-v2.0.6.tgz
rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: contour-certgen
  namespace: cno-apigateway
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: contour
  namespace: cno-apigateway
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: contour-certgen
  namespace: cno-apigateway-internal
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: contour
  namespace: cno-apigateway-internal
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: door-helm
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: door-helm
    app: door-helm
  name: door-helm-leader-election-role
  namespace: cno-agent-v2.0.6.tgz
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: cno-agent/charts/metrics-server/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-metrics-server-auth-reader
  namespace: kube-system
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: my-release-metrics-server
    namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/cd/cno-cd.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cno-cd-operator-leader-election-rolebinding
  namespace: cno-agent-v2.0.6.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cno-cd-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    name: cno-cd-operator
    namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: contour
  namespace: cno-apigateway
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: contour-certgen
subjects:
- kind: ServiceAccount
  name: contour-certgen
  namespace: cno-apigateway
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: contour-rolebinding
  namespace: cno-apigateway
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: contour
subjects:
- kind: ServiceAccount
  name: contour
  namespace: cno-apigateway
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: contour
  namespace: cno-apigateway-internal
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: contour-certgen
subjects:
- kind: ServiceAccount
  name: contour-certgen
  namespace: cno-apigateway-internal
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: contour-rolebinding
  namespace: cno-apigateway-internal
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: contour
subjects:
- kind: ServiceAccount
  name: contour
  namespace: cno-apigateway-internal

# The following ClusterRole and Role are generated from kubebuilder RBAC tags by
# generate-rbac.sh. Do not edit this file directly but instead edit the source
# files and re-render.
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: door-helm
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: door-helm
    app: door-helm
  name: door-helm-leader-election-rolebinding
  namespace: cno-agent-v2.0.6.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: door-helm-leader-election-role
subjects:
- kind: ServiceAccount
  name: door-helm
  namespace: cno-agent-v2.0.6.tgz
---
# Source: cno-agent/charts/metrics-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-metrics-server
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
---
# Source: cno-agent/templates/cd/cno-cd.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: cno-cd-operator
  name: controller-manager-metrics-service
  namespace: cno-agent-v2.0.6.tgz
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app: cno-cd-operator
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: v1
kind: Service
metadata:
  name: contour
  namespace: cno-apigateway
spec:
  ports:
  - port: 8001
    name: xds
    protocol: TCP
    targetPort: 8001
  selector:
    app: contour
  type: ClusterIP
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: v1
kind: Service
metadata:
  name: envoy
  namespace: cno-apigateway
  annotations:
    # This annotation puts the AWS ELB into "TCP" mode so that it does not
    # do HTTP negotiation for HTTPS connections at the ELB edge.
    # The downside of this is the remote IP address of all connections will
    # appear to be the internal address of the ELB. See docs/proxy-proto.md
    # for information about enabling the PROXY protocol on the ELB to recover
    # the original remote IP address.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
spec:
  # externalTrafficPolicy: Local
  ports:
  - port: 80
    name: http
    protocol: TCP
    targetPort: 8080
  - port: 443
    name: https
    protocol: TCP
    targetPort: 8443
  selector:
    app: envoy
  type: LoadBalancer
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: v1
kind: Service
metadata:
  name: contour
  namespace: cno-apigateway-internal
spec:
  ports:
  - port: 8001
    name: xds
    protocol: TCP
    targetPort: 8001
  selector:
    app: contour
  type: ClusterIP
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: v1
kind: Service
metadata:
  name: envoy
  namespace: cno-apigateway-internal
  annotations:
    # This annotation puts the AWS ELB into "TCP" mode so that it does not
    # do HTTP negotiation for HTTPS connections at the ELB edge.
    # The downside of this is the remote IP address of all connections will
    # appear to be the internal address of the ELB. See docs/proxy-proto.md
    # for information about enabling the PROXY protocol on the ELB to recover
    # the original remote IP address.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
spec:
  # externalTrafficPolicy: Local
  ports:
  - port: 80
    name: http
    protocol: TCP
    targetPort: 8080
  - port: 443
    name: https
    protocol: TCP
    targetPort: 8443
  selector:
    app: envoy
  type: LoadBalancer
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: door-helm
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: door-helm
    control-plane: controller-manager
    app: door-helm
  name: door-helm-metrics-service
  namespace: cno-agent-v2.0.6.tgz
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app: door-helm
---
# Source: cno-agent/templates/prometheus/prometheus.yaml
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: cno-monitoring
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9090'
spec:
  selector: 
    app: prometheus-server
  type: ClusterIP  
  ports:
    - port: 80
      targetPort: 9090
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: envoy
  name: envoy
  namespace: cno-apigateway
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002"
        prometheus.io/path: "/stats/prometheus"
      labels:
        app: envoy
    spec:
      containers:
      - command:
        - /bin/contour
        args:
          - envoy
          - shutdown-manager
        image: ghcr.io/projectcontour/contour:v1.23.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
                - /bin/contour
                - envoy
                - shutdown
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8090
          initialDelaySeconds: 3
          periodSeconds: 10
        name: shutdown-manager
        volumeMounts:
          - name: envoy-admin
            mountPath: /admin
      - args:
        - -c
        - /config/envoy.json
        - --service-cluster $(CONTOUR_NAMESPACE)
        - --service-node $(ENVOY_POD_NAME)
        - --log-level info
        command:
        - envoy
        image: docker.io/envoyproxy/envoy:v1.24.0
        imagePullPolicy: IfNotPresent
        name: envoy
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ENVOY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 8080
          #hostPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          #hostPort: 8443
          name: https
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8002
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 3
          periodSeconds: 4
        volumeMounts:
          - name: envoy-config
            mountPath: /config
            readOnly: true
          - name: envoycert
            mountPath: /certs
            readOnly: true
          - name: envoy-admin
            mountPath: /admin
        lifecycle:
          preStop:
            httpGet:
              path: /shutdown
              port: 8090
              scheme: HTTP
      initContainers:
      - args:
        - bootstrap
        - /config/envoy.json
        - --xds-address=contour
        - --xds-port=8001
        - --xds-resource-version=v3
        - --resources-dir=/config/resources
        - --envoy-cafile=/certs/ca.crt
        - --envoy-cert-file=/certs/tls.crt
        - --envoy-key-file=/certs/tls.key
        command:
        - contour
        image: ghcr.io/projectcontour/contour:v1.23.0
        imagePullPolicy: IfNotPresent
        name: envoy-initconfig
        volumeMounts:
        - name: envoy-config
          mountPath: /config
        - name: envoycert
          mountPath: /certs
          readOnly: true
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      automountServiceAccountToken: false
      serviceAccountName: envoy
      terminationGracePeriodSeconds: 300
      volumes:
        - name: envoy-admin
          emptyDir: {}
        - name: envoy-config
          emptyDir: {}
        - name: envoycert
          secret:
            secretName: envoycert
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: envoy
  name: envoy
  namespace: cno-apigateway-internal
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002"
        prometheus.io/path: "/stats/prometheus"
      labels:
        app: envoy
    spec:
      containers:
      - command:
        - /bin/contour
        args:
          - envoy
          - shutdown-manager
        image: ghcr.io/projectcontour/contour:v1.23.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
                - /bin/contour
                - envoy
                - shutdown
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8090
          initialDelaySeconds: 3
          periodSeconds: 10
        name: shutdown-manager
        volumeMounts:
          - name: envoy-admin
            mountPath: /admin
      - args:
        - -c
        - /config/envoy.json
        - --service-cluster $(CONTOUR_NAMESPACE)
        - --service-node $(ENVOY_POD_NAME)
        - --log-level info
        command:
        - envoy
        image: docker.io/envoyproxy/envoy:v1.24.0
        imagePullPolicy: IfNotPresent
        name: envoy
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ENVOY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8002
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 3
          periodSeconds: 4
        volumeMounts:
          - name: envoy-config
            mountPath: /config
            readOnly: true
          - name: envoycert
            mountPath: /certs
            readOnly: true
          - name: envoy-admin
            mountPath: /admin
        lifecycle:
          preStop:
            httpGet:
              path: /shutdown
              port: 8090
              scheme: HTTP
      initContainers:
      - args:
        - bootstrap
        - /config/envoy.json
        - --xds-address=contour
        - --xds-port=8001
        - --xds-resource-version=v3
        - --resources-dir=/config/resources
        - --envoy-cafile=/certs/ca.crt
        - --envoy-cert-file=/certs/tls.crt
        - --envoy-key-file=/certs/tls.key
        command:
        - contour
        image: ghcr.io/projectcontour/contour:v1.23.0
        imagePullPolicy: IfNotPresent
        name: envoy-initconfig
        volumeMounts:
        - name: envoy-config
          mountPath: /config
        - name: envoycert
          mountPath: /certs
          readOnly: true
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      automountServiceAccountToken: false
      serviceAccountName: envoy
      terminationGracePeriodSeconds: 300
      volumes:
        - name: envoy-admin
          emptyDir: {}
        - name: envoy-config
          emptyDir: {}
        - name: envoycert
          secret:
            secretName: envoycert
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
---
# Source: cno-agent/charts/metrics-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-metrics-server
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: metrics-server
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metrics-server
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-metrics-server
      priorityClassName: "system-cluster-critical"
      containers:
        - name: metrics-server
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1
          imagePullPolicy: IfNotPresent
          args:
            - --secure-port=4443
            - --cert-dir=/tmp
            - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
            - --kubelet-use-node-status-port
            - --metric-resolution=15s
          ports:
          - name: https
            protocol: TCP
            containerPort: 4443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 0
            periodSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
---
# Source: cno-agent/templates/agent/agent-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    fluxcd.io/automated: 'true'
  labels:
    app: cno-agent
  name: cno-agent
  namespace: cno-agent-v2.0.6.tgz
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: cno-agent
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cno-agent
    spec:
      containers:
        - image: docker.io/beopenit/cno-agent:v2.0.2
          imagePullPolicy: Always
          name: cno-agent
          resources:
          env:
            - name: IN_CLUSTER
              value: "true"
            - name: CNO_NAMESPACE
              value: cno-agent-v2.0.6.tgz
            - name: KAFKA_TlS_ENABLED
              value: "true"
            - name: KAFKA_BROKERS
              value: cno-kafka-cluster-kafka-external-bootstrap:9094
            - name: KAFKA_CA_CERT
              value: /kafka/user/ca.crt
            - name: KAFKA_CLIENT_CERT
              value: /kafka/user/user.crt
            - name: KAFKA_CLIENT_KEY
              value: /kafka/user/user.key
            - name: LICENCE
              valueFrom:
                secretKeyRef:
                  name: my-licence
                  key: uuid
          volumeMounts:
            - name: kafka-user
              mountPath: /kafka/user
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      serviceAccountName: cno-agent
      volumes:
        - name: kafka-user
          secret:
            secretName: my-licence
---
# Source: cno-agent/templates/cd/cno-cd.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
  name: cno-cd-operator
  namespace: cno-agent-v2.0.6.tgz
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cno-cd-operator
  template:
    metadata:
      annotations:
         kubectl.kubernetes.io/default-container: manager
      labels:
        app: cno-cd-operator
    spec:
      securityContext:
        runAsNonRoot: true
      serviceAccountName: cno-cd-operator
      containers:
        - command:
          - /manager
          args:
          - --leader-elect
          name: cno-cd-operator
          image: docker.io/beopenit/cno-cd-operator:v2.0.2
          securityContext:
            allowPrivilegeEscalation: false
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CLUSTER_TYPE
              value: gke
            - name: DEFAULT_GATEWAY_NAMESPACE
              value: "cno-apigateway"
            - name: DEFAULT_GATEWAY_NAME
              value: "cno"
              
            - name: MAX_STAGING_REPLICAS
              value: "-1"
            - name: CNO_AUTO_GEN_LISTENER
              value: "false"
            - name: INSECURE_REGISTRIES
              value: ""
            - name: DEFAULT_INTERNAL_GATEWAY_DOMAIN
              value: cno.local
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: contour
  name: contour
  namespace: cno-apigateway
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # This value of maxSurge means that during a rolling update
      # the new ReplicaSet will be created first.
      maxSurge: 50%
  selector:
    matchLabels:
      app: contour
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
      labels:
        app: contour
    spec:
      containers:
      - args:
        - serve
        - --incluster
        - --xds-address=0.0.0.0
        - --xds-port=8001
        - --contour-cafile=/certs/ca.crt
        - --contour-cert-file=/certs/tls.crt
        - --contour-key-file=/certs/tls.key
        - --config-path=/config/contour.yaml
        command: ["contour"]
        image: ghcr.io/projectcontour/contour:v1.23.0
        imagePullPolicy: IfNotPresent
        name: contour
        ports:
        - containerPort: 8001
          name: xds
          protocol: TCP
        - containerPort: 8000
          name: metrics
          protocol: TCP
        - containerPort: 6060
          name: debug
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
        readinessProbe:
          tcpSocket:
            port: 8001
          initialDelaySeconds: 15
          periodSeconds: 10
        volumeMounts:
          - name: contourcert
            mountPath: /certs
            readOnly: true
          - name: contour-config
            mountPath: /config
            readOnly: true
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      dnsPolicy: ClusterFirst
      serviceAccountName: contour
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
      volumes:
        - name: contourcert
          secret:
            secretName: contourcert
        - name: contour-config
          configMap:
            name: contour
            defaultMode: 0644
            items:
            - key: contour.yaml
              path: contour.yaml
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: contour
  name: contour
  namespace: cno-apigateway-internal
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # This value of maxSurge means that during a rolling update
      # the new ReplicaSet will be created first.
      maxSurge: 50%
  selector:
    matchLabels:
      app: contour
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
      labels:
        app: contour
    spec:
      containers:
      - args:
        - serve
        - --incluster
        - --xds-address=0.0.0.0
        - --xds-port=8001
        - --contour-cafile=/certs/ca.crt
        - --contour-cert-file=/certs/tls.crt
        - --contour-key-file=/certs/tls.key
        - --config-path=/config/contour.yaml
        command: ["contour"]
        image: ghcr.io/projectcontour/contour:v1.23.0
        imagePullPolicy: IfNotPresent
        name: contour
        ports:
        - containerPort: 8001
          name: xds
          protocol: TCP
        - containerPort: 8000
          name: metrics
          protocol: TCP
        - containerPort: 6060
          name: debug
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
        readinessProbe:
          tcpSocket:
            port: 8001
          initialDelaySeconds: 15
          periodSeconds: 10
        volumeMounts:
          - name: contourcert
            mountPath: /certs
            readOnly: true
          - name: contour-config
            mountPath: /config
            readOnly: true
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      dnsPolicy: ClusterFirst
      serviceAccountName: contour
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
      volumes:
        - name: contourcert
          secret:
            secretName: contourcert
        - name: contour-config
          configMap:
            name: contour
            defaultMode: 0644
            items:
            - key: contour.yaml
              path: contour.yaml
---
# Source: cno-agent/templates/helm-operator/manifest.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: door-helm
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: door-helm
    control-plane: controller-manager
    app: door-helm
  name: door-helm
  namespace: cno-agent-v2.0.6.tgz
spec:
  replicas: 1
  selector:
    matchLabels:
      app: door-helm
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app: door-helm
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --leader-election-id=door-helm
        image: beopenit/door-helm:0.0.3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: door-helm
      terminationGracePeriodSeconds: 10
---
# Source: cno-agent/templates/onboard/cno-onboard.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cno-onboarding-operator
  namespace: cno-agent-v2.0.6.tgz
  labels:
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cno-onboarding-operator
  template:
    metadata:
      labels:
        app: cno-onboarding-operator
    spec:
      serviceAccountName: cno-onboarding-operator
      containers:
        - name: cno-onboarding-operator
          image: docker.io/beopenit/onboarding-operator-kubernetes:v2.0.2
          imagePullPolicy: Always
          resources:
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: CNO_NAMESPACE
              value:  cno-agent-v2.0.6.tgz
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "cno-onboarding-operator"
---
# Source: cno-agent/templates/prometheus/prometheus.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: cno-monitoring
  labels:
    app: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
            - '--storage.tsdb.retention.time=7d'
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
  
        - name: prometheus-storage-volume
          persistentVolumeClaim:
            claimName: my-cno-monitoring-pvc
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: contour-certgen-v1.23.0
  namespace: cno-apigateway
spec:
  template:
    metadata:
      labels:
        app: "contour-certgen"
    spec:
      containers:
      - name: contour
        image: ghcr.io/projectcontour/contour:v1.23.0
        imagePullPolicy: IfNotPresent
        command:
        - contour
        - certgen
        - --kube
        - --incluster
        - --overwrite
        - --secrets-format=compact
        - --namespace=$(CONTOUR_NAMESPACE)
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      restartPolicy: Never
      serviceAccountName: contour-certgen
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
  parallelism: 1
  completions: 1
  backoffLimit: 1
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: contour-certgen-v1.23.0
  namespace: cno-apigateway-internal
spec:
  template:
    metadata:
      labels:
        app: "contour-certgen"
    spec:
      containers:
      - name: contour
        image: ghcr.io/projectcontour/contour:v1.23.0
        imagePullPolicy: IfNotPresent
        command:
        - contour
        - certgen
        - --kube
        - --incluster
        - --overwrite
        - --secrets-format=compact
        - --namespace=$(CONTOUR_NAMESPACE)
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      restartPolicy: Never
      serviceAccountName: contour-certgen
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
  parallelism: 1
  completions: 1
  backoffLimit: 1
---
# Source: cno-agent/charts/metrics-server/templates/apiservice.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.metrics.k8s.io
  labels:
    helm.sh/chart: metrics-server-3.8.2
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.1"
    app.kubernetes.io/managed-by: Helm
spec:
  group: metrics.k8s.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: my-release-metrics-server
    namespace: cno-agent-v2.0.6.tgz
  version: v1beta1
  versionPriority: 100
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
# This file is generated from the individual YAML files by generate-deployment.sh. Do not
# edit this file directly but instead edit the source files and re-render.
#
# Generated from:
#       examples/contour/00-common.yaml
#       examples/contour/01-contour-config.yaml
#       examples/contour/01-crds.yaml
#       examples/contour/02-job-certgen.yaml
#       examples/contour/02-rbac.yaml
#       examples/contour/02-role-contour.yaml
#       examples/contour/02-service-contour.yaml
#       examples/contour/02-service-envoy.yaml
#       examples/contour/03-contour.yaml
#       examples/contour/03-envoy.yaml
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
# This file is generated from the individual YAML files by generate-deployment.sh. Do not
# edit this file directly but instead edit the source files and re-render.
#
# Generated from:
#       examples/contour/00-common.yaml
#       examples/contour/01-contour-config.yaml
#       examples/contour/01-crds.yaml
#       examples/contour/02-job-certgen.yaml
#       examples/contour/02-rbac.yaml
#       examples/contour/02-role-contour.yaml
#       examples/contour/02-service-contour.yaml
#       examples/contour/02-service-envoy.yaml
#       examples/contour/03-contour.yaml
#       examples/contour/03-envoy.yaml
---
# Source: cno-agent/templates/gateway/contour-internal.yaml
# This file is generated from the individual YAML files by generate-deployment.sh. Do not
# edit this file directly but instead edit the source files and re-render.
#
# Generated from:
#       examples/contour/00-common.yaml
#       examples/contour/01-contour-config.yaml
#       examples/contour/01-crds.yaml
#       examples/contour/02-job-certgen.yaml
#       examples/contour/02-rbac.yaml
#       examples/contour/02-role-contour.yaml
#       examples/contour/02-service-contour.yaml
#       examples/contour/02-service-envoy.yaml
#       examples/contour/03-contour.yaml
#       examples/contour/03-envoy.yaml
---
# Source: cno-agent/templates/gateway/contour.yaml
# This file is generated from the individual YAML files by generate-deployment.sh. Do not
# edit this file directly but instead edit the source files and re-render.
#
# Generated from:
#       examples/contour/00-common.yaml
#       examples/contour/01-contour-config.yaml
#       examples/contour/01-crds.yaml
#       examples/contour/02-job-certgen.yaml
#       examples/contour/02-rbac.yaml
#       examples/contour/02-role-contour.yaml
#       examples/contour/02-service-contour.yaml
#       examples/contour/02-service-envoy.yaml
#       examples/contour/03-contour.yaml
#       examples/contour/03-envoy.yaml
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: cno
  namespace: cno-apigateway
  annotations:
spec:
  gatewayClassName: cno-gateway
  listeners:
  - name: http
    protocol: HTTP
    port: 80
    allowedRoutes:
      namespaces:
        from: All
  - name: https
    protocol: HTTPS
    port: 443
    allowedRoutes:
      namespaces:
        from: All
    tls:
      certificateRefs:
      - kind: Secret
        group: ""
        name: cno-apigateway-tls
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: cno-internal
  namespace: cno-apigateway-internal
  annotations:
spec:
  gatewayClassName: cno-gateway-internal
  listeners:
  - name: http
    protocol: HTTP
    port: 80
    allowedRoutes:
      namespaces:
        from: All
  - name: https
    protocol: HTTPS
    port: 443
    allowedRoutes:
      namespaces:
        from: All
    tls:
      certificateRefs:
      - kind: Secret
        group: ""
        name: cno-apigateway-internal-tls
---
# Source: cno-agent/templates/gateway/contour-LB.yaml
kind: GatewayClass
apiVersion: gateway.networking.k8s.io/v1beta1
metadata:
  name: cno-gateway
spec:
  controllerName: projectcontour.io/projectcontour/contour
---
# Source: cno-agent/templates/gateway/contour-internal-LB.yaml
kind: GatewayClass
apiVersion: gateway.networking.k8s.io/v1beta1
metadata:
  name: cno-gateway-internal
spec:
  controllerName: projectcontour.io/projectcontour/contour-internal
