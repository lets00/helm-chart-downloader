---
# Source: capi-ops-manager/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-capi-ops-manager
  namespace: capi-ops-manager-v2024.5.14.tgz
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: capi-ops-manager/templates/webhook/cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-capi-ops-manager-webhook-cert
  namespace: capi-ops-manager-v2024.5.14.tgz
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRVS9kTnNyMnJsNzZNOVRjS3FUNk1IREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUxTWpSYUZ3MHpOREEyTVRneE5EVTFNalJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUExd2puCnFhTDZMakN3S1FldERCZFVUZ0RQOCtDM1d5Z1pRQkJPKzhWdW5LcUoxVzRwY3lmdjZ1L0xLQnJkbnhBUXdnQk4KNWQ3RmxVaExhNVhRTC9pRUtKWWwva3lHaU9DSWFlUzZXeDNCRlF5WGZ4QUxoQ09BMWlUVUVVdjhKSUQvYk5NYgpLN1BBY2VMTzRvaHprbTREN2dPZ1pZYk1oWFpXbjFFNG5LcklyKytEUTRlUkhJT01KbjFHNkd1VTlBTm9PWTkzClZsVEFLQXdtQ0VUeXM2d3lwMnh3U3l0MC8vbG5IMmFjdnkvdStzQWxGemJSd2FjQmVxYzZrY1hzc2EzOHhCaUkKb051MW9qWnBwWXFUMVJkRVBRTGNOeS9IdTI1NmZVWEZnZy9IZWtoTlRmSGdkaXA5V0VEVmZvNXp1VDR3a1JQWApyTGptQ0ovR25BMU9BTG1DeXdJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRk5GNmY5ajhmVjdDRG41T1RleXJuK052K1FZWU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUo4MDgzRTNTawpFOWpaa3NUS1NmaFdUeWxoUVJ4RkFkOGEwd0pXd1hzTUJZVHBGL1FoZXpnay9ZU3labFlSTVUzdGtYZ256dklGCnNTbGxsWUdsNm00d3dORWVzYkEwWlVEdVB5alJNTnNGK3NhcmIxYnpBYXRjdDlEa1k0NjFLbmlpb3B4Rm5HTmkKck1tWnBXUDZUdjhGeU5veVVtZXRtZjE1djJvKzVlR2E2dGZSOUpLNFlITHRHUnBLeDlobmp6Q2ZGbUZmUW81UQp5T3N6QW5QOXRvaW9hem1iWlpVZWlkUzZkZjNMcE9BK05STndLeFhyRmkwL3pYY25YWkpqVnV6TGdWaDhnSjR1CmpSOFNTTFIvT21tV2d1aTJNdTJlY240cm9FNUZldnlTSFdJZWpxNGFaY1B1RGl4cTlvMG1SNWdVZjhseHJ0eTUKOHdScDlwUFpMYndJCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR4RENDQXF5Z0F3SUJBZ0lSQUp2S1I1Z3pFRkh3VlhsRERySXR6Qmt3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTlRJMVdoY05NelF3TmpFNE1UUTFOVEkxV2pBdQpNU3d3S2dZRFZRUURFeU50ZVMxeVpXeGxZWE5sTFdOaGNHa3RiM0J6TFcxaGJtRm5aWEl0ZDJWaWFHOXZhekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTJxbWlTYTdjdUVDSkFCYzRoQy84R24KaWMxbHcyOW5VSTdnRDRzU01DQzBQTE8wNEtKTlBIM1VmR1hWVE56NHB3ZExDTi91RE5ZYm1teWh5RE1vdDdmTApPU3l3ZnBnQ0tsUUFVNW4yZkI1WVgxN3ora1BGdmdPV3F1enZmUnVaSERldXB1NWFRaDJSV01MRVdSRnh3czB4ClRybHlkUXFOWWdKSlg3SXNHTDJza294b0o5Y0pwanR4d1JyN0RmUEl6cEpmME1FMWU4Q3dVVnd4b3JudHpkYkcKWTdYNEdKd2dna3kwb1cxODhEQ3ZuekpUZ0VjVnVuMCtNUGZIU2U1U1ZkbUhHYXJubXVMTk42M2ozZjJ1bmpldQpVYjJ6U3hyZ0psNUtBRnFCc0liNzBlb2JaYTcxcUZUTkhWdXk3MS92RmxUMWpMdmtHT2VFczlSQ2NOR1lCdHNDCkF3RUFBYU9CL1RDQitqQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVMFhwLzJQeDlYc0lPZms1Tgo3S3VmNDIvNUJoZ3dnWmtHQTFVZEVRU0JrVENCam9KRGJYa3RjbVZzWldGelpTMWpZWEJwTFc5d2N5MXRZVzVoCloyVnlMWGRsWW1odmIyc3VZMkZ3YVMxdmNITXRiV0Z1WVdkbGNpMTJNakF5TkM0MUxqRTBMblJuZW9KSGJYa3QKY21Wc1pXRnpaUzFqWVhCcExXOXdjeTF0WVc1aFoyVnlMWGRsWW1odmIyc3VZMkZ3YVMxdmNITXRiV0Z1WVdkbApjaTEyTWpBeU5DNDFMakUwTG5SbmVpNXpkbU13RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZPL1hNWHJUSEx2CjB3V1JoVGh6WFpVQlNZTmpXdUY5NU1LcmJxTVNoVjgreFBURHJmem03QjBTQ2lDV3VLa3lneFcyWCtOaFZGWEIKTU1sbnZhQUlFKzJXMktRYnhqZllrWkJRWVhlbmlSSitUUXVxK2ppK1dDQlRkNHpDZlpkNjBidzhIVXhlMEFaQwpGVVJSLzJxVzYrWDEwd01KekczZnRzQVBGeENWVjlqU0J4RTgzazZvb3lBV1orZXllMkJWVjJnZEdROHFpWFF0CkJJckdFbFBoZTZ3SUVYSy9HLzlaMG1wNWp4UHRFOC8wdlBJaHMxY3hEbnUreDh5ZG9sWTV6dDBKVE4rclJzcG4KYmFXWGEwNVVNdlIvcm9wY0V2c3plM0JrcFVGUDU3eXBlLzBETDNjQk02K2dzd1dxN2RKT056TFVWRzJsd1g3dgpsWVMxQXJISlExdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBemFxYUpKcnR5NFFJa0FGemlFTC93YWVKeldYRGIyZFFqdUFQaXhJd0lMUThzN1RnCm9rMDhmZFI4WmRWTTNQaW5CMHNJMys0TTFodWFiS0hJTXlpM3Q4czVMTEIrbUFJcVZBQlRtZlo4SGxoZlh2UDYKUThXK0E1YXE3Tzk5RzVrY042Nm03bHBDSFpGWXdzUlpFWEhDelRGT3VYSjFDbzFpQWtsZnNpd1l2YXlTakdnbgoxd21tTzNIQkd2c044OGpPa2wvUXdUVjd3TEJSWERHaXVlM04xc1pqdGZnWW5DQ0NUTFNoYlh6d01LK2ZNbE9BClJ4VzZmVDR3OThkSjdsSlYyWWNacXVlYTRzMDNyZVBkL2E2ZU42NVJ2Yk5MR3VBbVhrb0FXb0d3aHZ2UjZodGwKcnZXb1ZNMGRXN0x2WCs4V1ZQV011K1FZNTRTejFFSncwWmdHMndJREFRQUJBb0lCQUZ2VkZIVEoxT290cjJFVgp0TStnRXZFV2JQcVF1TjR5aEk3M1R4bHE2cUIvdWljSDJkRytxUWNLYk8xUGU3MmpMWG1kTUg1RW5laXdkSmlTCitJQ1hhc2tmYmcwZFZibHNKaGhSK1FKalEvS014VER4d2Nxbkxmd09ONDRLTlpPd0h5QmgxTm5TNVhpc1lMUysKMVlKcmlHNzAyRkVINFdqdnpsWjFDc3pVMGN0R3lINlJzcVNoTDRBOStmRmdlTXZCU1phUmlyd3VLMFFUdm10WQpJUVFpVldXVCswcFN3bFhxRlUxNU5IdnUwNjRwaTFWQWxUNWY2UXVsMFJ5TytDSkcwTHB5RDNZQTdlb0szMFAzClJYMzJlVkplM2FjMUpYZENJcllnM0RZUUFOM2toYjNNQ3pPUnM5Q2tPV1cyTUYvYXZZdU5zMFp5VURGcVgyeVoKeTFDdUptRUNnWUVBK3hBalpqSjV4L3RsbnBzdHgxZHhnR2dSTzNqaCtLMURHN29WaklnQ0sxZVpXQS9ENUZXZQpZVzlqdnNua3VvbkZFVmVkSUpyTzNEK3RqSmJvUm84ZzRlNndRNzk3Q1NIMjZBZjZ3WWlsUDBmOVE1K3FubTkyClY4cDJ6VDY5b3JyNlphOHpoQXpVc2F3LzlGUS95VmI5Q1R3S3BqQmhMN0RXZ3FRZ3k3TExWcEVDZ1lFQTBiWHYKYzB5a3dnSFJJb3h5dlJxUFhxN25MUm9ncDVBTG1kZjZCSkxmelc4WDV2S2FHUmp6MkU5M3FHMVBHRmh4UmRjdAp5SEUrQjFvMVBoVDBBTDdHNkdnZjdaVkVseStwYmc3MGNlUDVNNXVLWXo3eVVSdGNBS0h5eTV2TnByNVI1SEliCjd2Z1NpTWNETVBrYk5kNXZ6Lzg3QnZ0d3FCT1dGVmV5cGVDVDlLc0NnWUJGalpjQS9RTFg4RUdheXdySHF1WDYKMk5uTlRCUHVQTEhXd0pxdnNBNUp5NTdqMHBwR2E2SFJCSGJ4cUNVQnVLRXJ5TVh5L25CSWZDdXNRekplT2RDMgpSdFgyTHRuN0VibkJWbFNWd1RGbWNwOHJXTlIveUFsVkVQWVFyazBEQkNIU2dkTVh4aVkyZ3EzRkZvSUZXV0FJCmF1WFlYSmJRQzRHaDk2NU9RRjRzd1FLQmdRQ29ITG9rNnVjVkk1RzhxV3g5amVJcTIvazBuY0pac1U2cmVJalQKeTg0ZmlKUlhybG04RHRYRHJRaldlekl4NlF4OUdWOTVWTmFOM0ZIY1A3M1BMeUNUUkkxN3p2SmFaSG5sWVpXeQpDemhGbDhYYmc2V0xRV3lDa1ZEcXlpNlZJZkxTT0d1T0tVM3FXZWVFQmQ0N1UrSzhrZldHeG1Cc1RLOCswcnZDCjRBS2Iyd0tCZ0JjYStDUWV4V2hqN2pMWEdnS0RvL2pFOTRJczJLQlVUeGtMZHlMQzhKS0MvYkpkN25VRU15ekMKamFDMGNYR2VSRDl6VEU5U3FoNnIwbnVhb3Y0ZlZMUm1lZUF2SmRQS3g0bmM1a2hGTWlHbzZBL2R3VThPeVVELwpxU3NPTnJ4MEhsbzJrUzVnSU1CN2JKRmg2WnhMYlpCb2lUUUlqM3pXeHp6eEJUYkt4RmgwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: capi-ops-manager/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-capi-ops-manager-auth-proxy
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: capi-ops-manager/templates/rbac/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-capi-ops-manager
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs: ["get", "create", "patch", "update"]
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["*"]
  - apiGroups:
      - catalog.klusters.dev
      - ops.klusters.dev
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - ""
    resources:
      - events
    verbs: ["create", "patch"]
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs: ["get", "list", "watch"]
  - nonResourceURLs:
    - '*'
    verbs: ["get"]
---
# Source: capi-ops-manager/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-capi-ops-manager-auth-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-capi-ops-manager-auth-proxy
subjects:
  - kind: ServiceAccount
    name: my-release-capi-ops-manager
    namespace: capi-ops-manager-v2024.5.14.tgz
---
# Source: capi-ops-manager/templates/rbac/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-capi-ops-manager
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-capi-ops-manager
subjects:
- kind: ServiceAccount
  name: my-release-capi-ops-manager
  namespace: capi-ops-manager-v2024.5.14.tgz
---
# Source: capi-ops-manager/templates/webhook/monitoring/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-capi-ops-manager
  namespace: capi-ops-manager-v2024.5.14.tgz
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
---
# Source: capi-ops-manager/templates/webhook/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-capi-ops-manager-webhook
  namespace: capi-ops-manager-v2024.5.14.tgz
  labels:
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: capi-ops-manager/templates/operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-capi-ops-manager-operator
  namespace: capi-ops-manager-v2024.5.14.tgz
  labels:
    app.kubernetes.io/component: operator
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: capi-ops-manager
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: capi-ops-manager
        app.kubernetes.io/instance: my-release
      annotations:
    spec:
      
      serviceAccountName: my-release-capi-ops-manager
      containers:
      - name: operator
        image: "ghcr.io/appscode/capi-ops-manager:v0.0.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
          - operator
        resources:
          requests:
            cpu: 100m
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: capi-ops-manager/templates/webhook/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-capi-ops-manager-webhook-server
  namespace: capi-ops-manager-v2024.5.14.tgz
  labels:
    app.kubernetes.io/component: webhook-server
    helm.sh/chart: capi-ops-manager-v2024.5.14
    app.kubernetes.io/name: capi-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook-server
      app.kubernetes.io/name: capi-ops-manager
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webhook-server
        app.kubernetes.io/name: capi-ops-manager
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: eeb512626100a8c37a44cb5592817e992e5d205781ddecc53316a3408c09d382
    spec:
      
      serviceAccountName: my-release-capi-ops-manager
      containers:
      - name: webhook-server
        image: "ghcr.io/appscode/capi-ops-manager:v0.0.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
          - webhook
          - --webhook-name=my-release-capi-ops-manager
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: serving-cert
          mountPath: /var/serving-cert
          readOnly: true
      - name: kube-rbac-proxy
        image: "ghcr.io/appscode/kube-rbac-proxy:v0.11.0"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 100m
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-capi-ops-manager-webhook-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: capi-ops-manager/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-release-capi-ops-manager:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - catalog.klusters.dev
  - ops.klusters.dev
  resources:
  - "*"
  verbs: ["*"]
---
# Source: capi-ops-manager/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-release-capi-ops-manager:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - catalog.klusters.dev
  - ops.klusters.dev
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
