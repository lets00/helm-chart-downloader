---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/proxy/netpol.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: proxy
  labels:
    component: proxy
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
spec:
  podSelector:
    matchLabels:
      component: proxy
      app: jupyterhub
      release: my-release
  policyTypes:
    - Ingress
    - Egress

  # IMPORTANT:
  # NetworkPolicy's ingress "from" and egress "to" rule specifications require
  # great attention to detail. A quick summary is:
  #
  # 1. You can provide "from"/"to" rules that provide access either ports or a
  #    subset of ports.
  # 2. You can for each "from"/"to" rule provide any number of
  #    "sources"/"destinations" of four different kinds.
  #    - podSelector                        - targets pods with a certain label in the same namespace as the NetworkPolicy
  #    - namespaceSelector                  - targets all pods running in namespaces with a certain label
  #    - namespaceSelector and podSelector  - targets pods with a certain label running in namespaces with a certain label
  #    - ipBlock                            - targets network traffic from/to a set of IP address ranges
  #
  # Read more at: https://kubernetes.io/docs/concepts/services-networking/network-policies/#behavior-of-to-and-from-selectors
  #
  ingress:
    # allow incoming traffic to these ports independent of source
    - ports:
      - port: http
      - port: https

    # allowed pods (hub.jupyter.org/network-access-proxy-http) --> proxy (http/https port)
    - ports:
        - port: http
      from:
        # source 1 - labeled pods
        - podSelector:
            matchLabels:
              hub.jupyter.org/network-access-proxy-http: "true"

    # allowed pods (hub.jupyter.org/network-access-proxy-api) --> proxy (api port)
    - ports:
        - port: api
      from:
        # source 1 - labeled pods
        - podSelector:
            matchLabels:
              hub.jupyter.org/network-access-proxy-api: "true"

  egress:
    # proxy --> hub
    - ports:
        - port: 8081
      to:
        - podSelector:
            matchLabels:
              component: hub
              app: jupyterhub
              release: my-release

    # proxy --> singleuser-server
    - ports:
        - port: 8888
      to:
        - podSelector:
            matchLabels:
              component: singleuser-server
              app: jupyterhub
              release: my-release

    # proxy --> Kubernetes internal DNS
    - ports:
      - protocol: UDP
        port: 53
      - protocol: TCP
        port: 53
    # proxy --> depends, but the default is everything
    - to:
      - ipBlock:
          cidr: 0.0.0.0/0
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/scheduling/user-placeholder/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: user-placeholder
  labels:
    component: user-placeholder
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
spec:
  minAvailable: 0
  selector:
    matchLabels:
      component: user-placeholder
      app: jupyterhub
      release: my-release
---
# Source: sciencebox/charts/mariadb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-mariadb
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.4.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
automountServiceAccountToken: false
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/hub/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hub
  labels:
    component: hub
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
---
# Source: sciencebox/charts/ldap/templates/secret-ltb.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-ldap-ltb-passwd
  labels:
    app: ldap
    chart: ldap-2.0.4
    release: my-release
    heritage: Helm
type: Opaque
data:
  LDAP_ADMIN_PASSWORD: "YWRtaW4="
---
# Source: sciencebox/charts/ldap/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-ldap
  labels:
    app: ldap
    chart: ldap-2.0.4
    release: my-release
    heritage: Helm
type: Opaque
data:
  LDAP_ADMIN_PASSWORD: "YWRtaW4="
  LDAP_CONFIG_PASSWORD: "Y29uZmln"
---
# Source: sciencebox/charts/mariadb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-mariadb
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.4.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: "cmV2YQ=="
  mariadb-password: "cmV2YQ=="
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/hub/secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: hub
  labels:
    component: hub
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
type: Opaque
data:
  values.yaml: ""

  # Any JupyterHub Services api_tokens are exposed in this k8s Secret as a
  # convinience for external services running in the k8s cluster that could
  # mount them directly from this k8s Secret.

  # During Helm template rendering, these values that can be autogenerated for
  # users are set using the following logic:
  #
  # 1. Use chart configuration's value
  # 2. Use k8s Secret's value
  # 3. Use a new autogenerated value
  #
  # hub.config.ConfigurableHTTPProxy.auth_token: for hub to proxy-api authorization (JupyterHub.proxy_auth_token is deprecated)
  # hub.config.JupyterHub.cookie_secret:         for cookie encryption
  # hub.config.CryptKeeper.keys:                 for auth state encryption
  #
  hub.config.ConfigurableHTTPProxy.auth_token: "MTFkZjM1ZGFiNzUyN2IzNzk4ZGU1MjI0ZjA2NDU4ZGIxZTA1MjZmYTY1NzAwZTgxZTE4ZjE3Zjg5ODIyZTBjZg=="
  hub.config.JupyterHub.cookie_secret: "MDcwMDZiNDk3NWYwNjE2NmM5ODgxMjJlNzg2MDM3NDA3ODhlOTM4NDYyNjViMGFlYzc5MWMzODdhOWE4MzkyNQ=="
  hub.config.CryptKeeper.keys: "ZWRiOWIxODA4OTYyYzc5MDg0MzRjMjM2YTBmN2FlMmFlMTIyNWQxNGQ0Njk2NTJjNzlhZWVmYjQ0YjUzNTY5Nw=="
---
# Source: sciencebox/charts/swan/templates/secrets.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: swan
  namespace: sciencebox-0.0.7.tgz
data:
---
# Source: sciencebox/templates/eos_sss_keytab.yaml
apiVersion: v1
kind: Secret
metadata:
  name: sciencebox-eos-sss-keytab
type: Opaque
data:
  eos.keytab: |-
    MCB1OmRhZW1vbiBnOmRhZW1vbiBuOnNjaWVuY2Vib3grIE46Njk3NzQyODM3NjcxNzg4NTQ0MSBjOjE2MjQ1NTkxNDAgZTowIGY6MCBrOjU3NTU5MjliMzRjNDNkNDUxMmI3MzliZTFiOTA5MDRmNWNiMTdkYTU4ODViOTFkODdkOWY3OTI1MDA0YTU0ZjYK
---
# Source: sciencebox/charts/cernbox/charts/ocis/templates/configmap-configfiles.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-ocis-configfiles
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
data:
  # indentifier_registration.yaml - used by IDP to register the oidc clients
  identifier_registration.yaml: |-
      clients:
        - id: swan
          secret: 4a045535-6b99-49d3-bf41-8b410cd965a6
          name: SWAN
          application_type: native
        - id: web
          name: ownCloud web app
          trusted: yes
          redirect_uris:
            - https://https://ocis-idp.local/
            - https://https://ocis-idp.local//oidc-callback.html
            - https://https://ocis-idp.local//oidc-silent-redirect.html
          origins:
            - https://https://ocis-idp.local/
  # proxy.yaml - routing configuration for ocis proxy
  proxy.yaml:  |-
    policies:  
    - name: ocis
      routes:
      - type: ""
        endpoint: /
        backend: http://my-release-cernbox-web
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /.well-known/
        backend: http://localhost:9130
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /konnect/
        backend: http://localhost:9130
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /signin/
        backend: http://localhost:9130
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /archiver # gateway
        backend: http://localhost:9140
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /ocs/
        backend: http://my-release-gateway:9143
        service: ""
        apache-vhost: false
      - type: query
        endpoint: /remote.php/?preview=1 # gateway
        backend: http://my-release-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /remote.php/ # gateway
        backend: http://my-release-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /dav/ # gateway
        backend: http://my-release-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /webdav/ # gateway
        backend: http://my-release-gateway:9143 
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /status.php # gateway
        backend: http://my-release-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /index.php/
        backend: http://my-release-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /apps/
        backend: http://my-release-gateway:9143
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /data
        backend: http://localhost:9140
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /app/
        backend: http://localhost:9140
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /graph/
        backend: http://localhost:9120
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /graph-explorer
        backend: http://localhost:9135
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /api/v0/accounts
        backend: http://localhost:9181
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /accounts.js
        backend: http://localhost:9181
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /api/v0/settings
        backend: http://localhost:9190
        service: ""
        apache-vhost: false
      - type: ""
        endpoint: /settings.js
        backend: http://localhost:9190
        service: ""
        apache-vhost: false
      ingress:
        enabled: true
        hosts:
        exposeIdp: true
---
# Source: sciencebox/charts/cernbox/charts/ocis/templates/configmap-supervisord.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-ocis-supervisord-conf
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
data:
  supervisord.conf: |
    ; Directives for supervisord
    [supervisord]
    ;logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
    ;logfile_maxbytes=50MB                       ; (max main logfile bytes b4 rotation;default 50MB)
    ;logfile_backups=10                          ; (num of main logfile rotation backups;default 10)
    loglevel=info                                ; (log level;default info; others: debug,warn,trace)
    pidfile=/var/run/supervisord.pid             ; (supervisord pidfile;default supervisord.pid)
    nodaemon=true                                ; (start in foreground if true;default false)
    minfds=1024                                  ; (min. avail startup file descriptors;default 1024)
    minprocs=200                                 ; (min. avail process descriptors;default 200)
    ;umask=022                                   ; (process file creation umask;default 022)
    user=root                                    ; (default is current user, required if root)
    ;identifier=supervisor                       ; (supervisord identifier, default is 'supervisor')
    ;directory=/tmp                              ; (default is not to cd during start)
    ;nocleanup=true                              ; (don't clean up tempfiles at start;default false)
    ;childlogdir=/tmp                            ; ('AUTO' child log dir, default $TEMP)
    ;environment=KEY=value                       ; (key value pairs to add to environment)
    ;strip_ansi=false                            ; (strip ansi escape codes in logs; def. false)

    ; Allow using supervisorctl to interact with supervisord
    [unix_http_server]
    file=/var/run/supervisor.sock                ; (the path to the socket file)
    ;chmod=0700                                  ; sockef file mode (default 0700)
    ;chown=nobody:nogroup                        ; socket file uid:gid owner
    username=admin                               ; (default is no username (open server))
    password=admin                               ; (default is no password (open server))
    [rpcinterface:supervisor]
    supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface
    [supervisorctl]
    serverurl=unix:///var/run/supervisor.sock    ; use a unix:// URL  for a unix socket
    username=admin                               ; should be same as http_username if set
    password=admin                               ; should be same as http_password if set
    ;prompt=mysupervisor                         ; cmd line prompt (default "supervisor")
    ;history_file=~/.sc_history                  ; use readline history if available

    ; Load additional configuration files
    [include]
    files = /etc/supervisord.d/*.ini

    ; Quit supervisord if all controlled processes enter a failed state
    [eventlistener:watch_processes]
    command=sh -c "printf 'READY\n' && while read line; do kill -SIGQUIT $PPID; done < /dev/stdin"
    events=PROCESS_STATE_EXITED,PROCESS_STATE_FATAL
---
# Source: sciencebox/charts/cernbox/charts/ocis/templates/configmap-supervisord.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-ocis-supervisord-procs
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
data:
  ocis-proxy.ini: |
    [program:ocis-proxy]
    command=/usr/bin/ocis proxy server
    startsecs=10
    startretries=5
    ;exitcodes=0,2
    ;stopsignal=QUIT
    ;stopwaitsecs=10
    user=root
    redirect_stderr=true
    stdout_logfile=/var/log/ocis-proxy.log
    stdout_logfile_maxbytes=10MB
    ;stdout_logfile_backups=10
    ;environment=A=1,B=2
  ocis-idp.ini: |
    [program:ocis-idp]
    command=/usr/bin/ocis idp server
    startsecs=10
    startretries=5
    ;exitcodes=0,2
    ;stopsignal=QUIT
    ;stopwaitsecs=10
    user=root
    redirect_stderr=true
    stdout_logfile=/var/log/ocis-idp.log
    stdout_logfile_maxbytes=10MB
    ;stdout_logfile_backups=10
    ;environment=A=1,B=2
---
# Source: sciencebox/charts/cernbox/templates/authprovider-bearer.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: authprovider-bearer-config
  labels:
    helm.sh/chart: cernbox-0.0.4
    app.kubernetes.io/name: cernbox
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
data:
  revad.toml: |-
    [shared]
    gatewaysvc = "my-release-gateway:9142"
    jwt_secret = "POZSOrlP7AgnTxH7MJebWV8ohvsApgbd4u3Joen30c"

    [grpc]
    address = "0.0.0.0:9158"

    [grpc.services.authprovider]
    auth_manager = "oidc"

    [grpc.services.authprovider.auth_managers.oidc]
    insecure = true
    issuer = 
    id_claim = "name"
    uid_claim = "uid"
    gid_claim = "gid"
    gatewaysvc = "my-release-gateway:9142"
---
# Source: sciencebox/charts/cernbox/templates/authprovider-machine.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: authprovider-machine-config
  labels:
    helm.sh/chart: cernbox-0.0.4
    app.kubernetes.io/name: cernbox
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
data:
  revad.toml: |-
    [shared]
    gatewaysvc = "localhost:9142"
    jwt_secret = "POZSOrlP7AgnTxH7MJebWV8ohvsApgbd4u3Joen30c"

    [grpc]
    address = "0.0.0.0:9166"

    [grpc.services.authprovider]
    auth_manager = "machine"

    [grpc.services.authprovider.auth_managers.machine]
    api_key = "random_api_key"
    gateway_addr = "my-release-gateway:9142"
---
# Source: sciencebox/charts/cernbox/templates/gateway.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-config
  labels:
    helm.sh/chart: cernbox-0.0.4
    app.kubernetes.io/name: cernbox
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
data:
  revad.toml: |-
    [shared]
    gatewaysvc = "localhost:9142"
    jwt_secret = "POZSOrlP7AgnTxH7MJebWV8ohvsApgbd4u3Joen30c"

    [grpc]
    address = "0.0.0.0:9142"

    [grpc.services.gateway]
    commit_share_to_storage_grant = true
    commit_share_to_storage_ref = true
    disable_home_creation_on_login = false
    transfer_shared_secret = "replace-me-with-a-transfer-secret"
    transfer_expires = 86400
    share_folder = "MyShares"
    usershareprovidersvc = "localhost:9142"
    publicshareprovidersvc = "localhost:9142"
    datagateway = "http://localhost:9143/data"

    [grpc.services.authprovider]
    auth_manager = "ldap"

    [grpc.services.authprovider.auth_managers.ldap]
    hostname = "my-release-ldap"
    port = 636
    insecure = true
    base_dn = "dc=owncloud,dc=com"
    loginfilter = "(&(objectclass=inetOrgPerson)(objectclass=owncloud)(|(uid={{login}})(mail={{login}})))"
    bind_username = "cn=readuser,dc=owncloud,dc=com"
    bind_password = "readuser"
    schema = { dn = "dn", uid = "cn", mail = "mail", displayName = "displayname", cn = "cn" }
    gatewaysvc = "localhost:9142"

    [grpc.services.authregistry]
    driver = "static"

    [grpc.services.authregistry.drivers.static.rules]
    basic = "localhost:9142"
    publicshares = "my-release-storageproviderpublic:9278"
    machine = "my-release-authprovidermachine:9166"
    bearer = "my-release-authproviderbearer:9158"

    [grpc.services.userprovider]
    driver = "ldap"

    [grpc.services.userprovider.drivers.ldap]
    hostname="my-release-ldap"
    port = 636
    insecure = true
    base_dn = "dc=owncloud,dc=com"
    userfilter="(&(objectclass=owncloud)(cn=%s))"
    findfilter="(&(objectclass=owncloud)(|(uid={{query}}*)(cn={{query}}*)(displayname={{query}}*)(mail={{query}}*)(description={{query}}*)))"
    attributefilter="(&(objectclass=owncloud)({{attr}}={{value}}))"
    groupfilter="(objectclass=owncloud)"
    bind_username = "cn=readuser,dc=owncloud,dc=com"
    bind_password = "readuser"

    [grpc.services.userprovider.drivers.ldap.schema]
    uid="uid"
    displayName="displayName"
    dn="dn"
    cn="cn"
    mail="mail"

    [grpc.services.groupprovider]
    driver = "ldap"

    [grpc.services.groupprovider.drivers.ldap]
    hostname="my-release-ldap"
    port = 636
    insecure = true
    base_dn = "dc=owncloud,dc=com"
    groupfilter="(objectclass=owncloud)"
    findfilter="(&(objectclass=posixGroup)(|(cn={{query}}*)(displayname={{query}}*)(mail={{query}}*)))"
    attributefilter="(&(objectclass=posixGroup)({{attr}}={{value}}))"
    memberfilter="(&(objectclass=posixAccount)(cn={{.OpaqueId}}))"
    bind_username = "cn=readuser,dc=owncloud,dc=com"
    # needs to be templated (for local dev purposes, idp should be ${HOSTNAME})
    bind_password = "readuser"

    [grpc.services.groupprovider.drivers.ldap.schema]
    gid="cn"
    displayName="cn"
    dn="dn"
    cn="cn"

    [grpc.services.storageregistry]
    driver = "static"

    [grpc.services.storageregistry.drivers.static]
    home_provider = "/home"

    [grpc.services.storageregistry.drivers.static.rules]
    "/home" = { address = "my-release-storageproviderhome:18000" }
    "/eos/user" = { address = "my-release-storageprovideruser:16000" }
    "eos" = { address = "my-release-storageprovideruser:16000" }
    "/public" = { address = "my-release-storageproviderpublic:9278" }
    "public-storage" = { address = "my-release-storageproviderpublic:9278" }

    [grpc.services.publicshareprovider]
    driver = "sql"
    allowed_paths_for_shares = ["^/eos/user/[a-z]/[0-9a-z\\-]+/.+", "^/eos/project/[a-z]/[0-9a-z\\-]+/.+"]

    [grpc.services.publicshareprovider.drivers.sql]
    db_username = "root"
    db_password = "reva"
    db_host = "my-release-mariadb"
    db_port = 3306
    db_name = "my_database"
    password_hash_cost = 11
    enable_expired_shares_cleanup = false
    janitor_run_interval = 60

    [grpc.services.usershareprovider]
    driver = "sql"
    allowed_paths_for_shares = ["^/eos/user/[a-z]/[0-9a-z\\-]+/.+", "^/eos/project/[a-z]/[0-9a-z\\-]+/.+"]

    [grpc.services.usershareprovider.drivers.sql]
    db_username = "root"
    db_password = "reva"
    db_host = "my-release-mariadb"
    db_port = 3306
    db_name = "my_database"
    password_hash_cost = 11
    enable_expired_shares_cleanup = false
    janitor_run_interval = 60

    [http]
    address = "0.0.0.0:9143"

    [http.services.datagateway]
    transfer_shared_secret = "replace-me-with-a-transfer-secret"
    timeout = 86400
    insecure = true
    prefix = "data"

    [http.services.ocdav]
    files_namespace = "/eos/{{substr 0 1 .Username}}"
    timeout = 86400
    insecure = true

    [http.services.ocs]
    share_prefix = "/"
    home_namespace = "/"

    [http.services.ocs.config]
    version = "1.8"
    website = "reva"
    # needs to templated
    # host = "https://jimil-nuc.dyndns.cern.ch"
    host = ""
    contact = "admin@localhost"
    ssl = "false"

    [http.services.ocs.capabilities.capabilities.core]
    poll_interval = 60
    webdav_root = "remote.php/webdav"
    status = { installed = true, maintenance = false, nwwsaDbUpgrade = false, version = "10.0.11.5", versionstring = "10.0.11", edition = "community", productname = "reva", hostname = "" }
    support_url_signing = false

    [http.services.ocs.capabilities.capabilities.checksums]
    supported_types = ["sha1", "md5", "adler32"]

    [http.services.ocs.capabilities.capabilities.files]
    private_links = false
    bigfilechunking = false
    blacklisted_files = []
    undelete = true
    versioning = false
    favorites = true

    [http.services.ocs.capabilities.capabilities.dav]

    [http.services.ocs.capabilities.capabilities.files_sharing]
    api_enabled = true
    resharing = false
    group_sharing = true
    auto_accept_share = true
    share_with_group_members_only = true
    share_with_membership_groups_only = true
    default_permissions = 22
    search_min_length = 3

    [http.services.ocs.capabilities.capabilities.files_sharing.public]
    enabled = true
    send_mail = true
    social_share = true
    upload = true
    multiple = true
    supports_upload_only = true
    password = { enforced = false, enforced_for = { read_only = false, read_write = false, upload_only = false } }
    expire_date = { enabled = true }
    can_edit = true

    [http.services.ocs.capabilities.capabilities.files_sharing.user]
    send_mail = true
    profile_picture = false
    settings = [{ enabled = true, version = "1.0.0" }]

    [http.services.ocs.capabilities.capabilities.files_sharing.user_enumeration]
    enabled = true
    group_members_only = true
---
# Source: sciencebox/charts/cernbox/templates/storageprovider-home.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: storageprovider-home-config
  labels:
    helm.sh/chart: cernbox-0.0.4
    app.kubernetes.io/name: cernbox
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
data:
  revad.toml: |-
    [shared]
    gatewaysvc = "my-release-gateway:9142"
    jwt_secret = "POZSOrlP7AgnTxH7MJebWV8ohvsApgbd4u3Joen30c"

    [grpc]
    address = "0.0.0.0:18000"

    [grpc.services.storageprovider]
    driver = "eoshome"
    mount_path = "/home"
    mount_id = "eos"
    data_server_url = "http://my-release-storageproviderhome:17000/data"

    [grpc.services.storageprovider.drivers.eoshome]
    namespace = "/eos/user/"
    quota_node = "/eos/user/"
    master_url = "root://my-release-mgm.default.svc.cluster.local:1094"
    slave_url = "root://my-release-mgm.default.svc.cluster.local:1094"
    user_layout = "{{substr 0 1 .Username}}/{{.Username}}"
    xrdcopy_binary = "/opt/eos/xrootd/bin/xrdcopy"
    cache_directory = "/tmp/reva"
    use_keytab = true
    keytab = "/etc/eos.keytab"
    sec_protocol = "sss"

    [http]
    address = "0.0.0.0:17000"

    [http.services.dataprovider]
    driver = "eoshome"

    [http.services.dataprovider.drivers.eoshome]
    namespace = "/eos/user/"
    quota_node = "/eos/user/"
    master_url = "root://my-release-mgm.default.svc.cluster.local:1094"
    slave_url = "root://my-release-mgm.default.svc.cluster.local:1094"
    user_layout = "{{substr 0 1 .Username}}/{{.Username}}"
    xrdcopy_binary = "/opt/eos/xrootd/bin/xrdcopy"
    cache_directory = "/tmp/reva"
    use_keytab = true
    keytab = "/etc/eos.keytab"
    sec_protocol = "sss"
---
# Source: sciencebox/charts/cernbox/templates/storageprovider-public.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: storageprovider-public-config
  labels:
    helm.sh/chart: cernbox-0.0.4
    app.kubernetes.io/name: cernbox
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
data:
  revad.toml: |-
    [shared]
    gatewaysvc = "my-release-gateway:9142"
    jwt_secret = "POZSOrlP7AgnTxH7MJebWV8ohvsApgbd4u3Joen30c"

    [grpc]
    address = "0.0.0.0:9278"

    [grpc.services.publicstorageprovider]
    mount_path = "/public"
    mount_id = "public-storage"
    gateway_addr = "my-release-gateway:9142"

    [grpc.services.authprovider]
    auth_manager = "publicshares"

    [grpc.services.authprovider.auth_managers.publicshares]
    gateway_addr = "my-release-gateway:9142"
---
# Source: sciencebox/charts/cernbox/templates/storageprovider-user.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: storageprovider-user-config
  labels:
    helm.sh/chart: cernbox-0.0.4
    app.kubernetes.io/name: cernbox
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.4.1"
    app.kubernetes.io/managed-by: Helm
data:
  revad.toml: |-
    [shared]
    gatewaysvc = "my-release-gateway:9142"
    jwt_secret = "POZSOrlP7AgnTxH7MJebWV8ohvsApgbd4u3Joen30c"

    [grpc]
    address = "0.0.0.0:16000"

    [grpc.services.storageprovider]
    driver = "eos"
    mount_path = "/eos/user"
    mount_id = "eos"
    data_server_url = "http://my-release-storageprovideruser:15000/data"

    [grpc.services.storageprovider.drivers.eos]
    namespace = "/eos/user/"
    quota_node = "/eos/user/"
    master_url = "root://my-release-mgm.default.svc.cluster.local:1094"
    slave_url = "root://my-release-mgm.default.svc.cluster.local:1094"
    user_layout = "{{substr 0 1 .Username}}/{{.Username}}"
    xrdcopy_binary = "/opt/eos/xrootd/bin/xrdcopy"
    cache_directory = "/tmp/reva"
    use_keytab = true
    keytab = "/etc/eos.keytab"
    sec_protocol = "sss"

    [http]
    address = "0.0.0.0:15000"

    [http.services.dataprovider]
    driver = "eos"

    [http.services.dataprovider.drivers.eos]
    namespace = "/eos/user/"
    quota_node = "/eos/user/"
    master_url = "root://my-release-mgm.default.svc.cluster.local:1094"
    slave_url = "root://my-release-mgm.default.svc.cluster.local:1094"
    user_layout = "{{substr 0 1 .Username}}/{{.Username}}"
    xrdcopy_binary = "/opt/eos/xrootd/bin/xrdcopy"
    cache_directory = "/tmp/reva"
    use_keytab = true
    keytab = "/etc/eos.keytab"
    sec_protocol = "sss"
---
# Source: sciencebox/charts/cernbox/templates/web-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cernbox-web-config
data:
  config.json: |-
    {
      "server": ,
      "version": "0.1.0",
      "theme": "/theme.json",
      "openIdConnect": {
        "metadata_url": "/.well-known/openid-configuration",
        "authority": ,
        "client_id": "web",
        "response_type": "code",
        "scope":  "openid profile email"
      },
      "apps": ["files"],
      "external_apps": [
      ],
      "options": {
        "hideSearchBar": true,
        "homeFolder": "/eos/user/{{substr 0 1 .Id}}/{{.Id}}"
      }
    }
---
# Source: sciencebox/charts/cernbox/templates/web-init.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cernbox-web-init
data:
  cbox_init.sh: |
    #!/bin/bash
    set -x

    wget -O /var/www/web/web-tar.gz $WEB_ASSET
    tar -xf /var/www/web/web-tar.gz -C /var/www/web/
    rm -r /var/www/web/web-tar.gz

    wget -O /var/www/web/theme-cernbox.tar.gz $WEB_THEME
    tar -xf /var/www/web/theme-cernbox.tar.gz -C /var/www/web/
    rm -f /var/www/web/theme-cernbox.tar.gz

    mkdir -p /var/www/web/cernbox/theme-cernbox/
    mv /var/www/web/assets /var/www/web/cernbox/theme-cernbox/assets
---
# Source: sciencebox/charts/cernbox/templates/web-nginx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cernbox-web-nginx
data:
  nginx.conf: |-
    daemon off;
    worker_processes  auto;

    error_log  /opt/bitnami/nginx/logs/error.log debug;
    pid        /opt/bitnami/nginx/tmp/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /opt/bitnami/nginx/conf/mime.types;
        default_type  application/octet-stream;
        log_format    main '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status  $body_bytes_sent "$http_referer" '
                           '"$http_user_agent" "$http_x_forwarded_for"';
        access_log    "/opt/bitnami/nginx/logs/access.log" main;
        add_header    X-Frame-Options SAMEORIGIN;

        client_body_temp_path  "/opt/bitnami/nginx/tmp/client_body" 1 2;
        proxy_temp_path        "/opt/bitnami/nginx/tmp/proxy" 1 2;
        fastcgi_temp_path      "/opt/bitnami/nginx/tmp/fastcgi" 1 2;
        scgi_temp_path         "/opt/bitnami/nginx/tmp/scgi" 1 2;
        uwsgi_temp_path        "/opt/bitnami/nginx/tmp/uwsgi" 1 2;

        sendfile             on;
        tcp_nopush           on;
        tcp_nodelay          off;
        gzip                 on;
        gzip_http_version    1.0;
        gzip_comp_level      2;
        gzip_proxied         any;
        gzip_types           text/plain text/css application/javascript text/xml application/xml+rss;
        keepalive_timeout    65;
        ssl_protocols        TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers          HIGH:!aNULL:!MD5;
        client_max_body_size 80M;
        server_tokens        off;

        absolute_redirect    off;
        port_in_redirect     off;

        server {
            listen 8080;

            location ~ ^/(js|css)/
            {
                root /var/www/web;
                add_header Cache-Control "public, max-age=31536000, immutable";
                etag off;
                gzip_static on;
            }

            location /
            {
                root /var/www/web;
                add_header Cache-Control "no-cache";
                etag on;
                gzip_static on;
                try_files $uri /index.html;
            }
        }
    }
---
# Source: sciencebox/charts/eos-instance-config/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-eos-instance-config-script
  labels:
    helm.sh/chart: eos-instance-config-0.0.5
    app.kubernetes.io/name: eos-instance-config
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
data:
  instance_config.sh: |
    #!/bin/bash
    set -x
    alias eos='eos -r 0 0'
    shopt -s expand_aliases

    init_probe() {
      local cmd=$@
      local max_wait=60
      local sleep=5
      start_time=$(date +%s)
      rc=-1
      while [ $rc -ne 0 ];
      do
        timeout --preserve-status $sleep $cmd >/dev/null 2>&1
        rc=$?

        # Bail out after max_wait
        tot_wait=$(($(date +%s)-start_time))
        echo "        $tot_wait seconds... (timeout at $max_wait)"
        if [ $tot_wait -ge $max_wait ]; then
          echo "ERROR: cmd \`$cmd\` failed after $tot_wait secs. Giving up."
          exit 1
        fi
        sleep $sleep
      done
    }

    # Wait for the MGM to be online
    echo "INFO: Checking the MGM is online..."
    init_probe eos ns
    echo "INFO: MGM is online."

    # Check if a previous configuration already exists. If so, don't touch.
    echo "INFO: Looking for previous EOS configurations..."
    if [ $(eos config ls | grep -w 'sciencebox_bootstrap' | wc -l) -eq 1 ]; then
      echo "  ✓ EOS configurations found. Exiting."
      exit 0
    fi
    echo "  ✓ None found. Configuring..."


    ## Space
    echo "INFO: Configuring space..."
    echo "INFO: Defining space spare..."
    eos space define spare

    echo "INFO: Defining space default..."
    eos space define default 8 1
    echo "INFO: Activating space default..."
    eos space set default on


    ## OAuth2


    ## System Attributes
    echo "INFO: Configuring system attributes..."
    eos attr -r set sys.recycle=/eos/user/proc/recycle/ /eos
    eos attr -r set sys.versioning=10 /eos
    eos attr -r set sys.forced.blockchecksum=crc32c /eos
    eos attr -r set sys.forced.blocksize=4k /eos
    eos attr -r set sys.forced.checksum=adler /eos
    eos attr -r set sys.forced.layout=replica /eos
    eos attr -r set sys.forced.maxsize=10000000000 /eos
    eos attr -r set sys.forced.nstripes=2 /eos
    eos attr -r set sys.forced.space=default /eos


    ## EOS root ownership and mode
    # eos chmod 2755 /eos


    ## Recycle bin
    echo "INFO: Configuring recycle bin..."
    eos recycle config --inodes 10M
    eos recycle config --lifetime 2592000
    eos recycle config --ratio 0.2
    eos recycle config --size 10G
    # eos chmod 3711 /eos/user/proc/recycle


    ## EOS directory tree
    echo "INFO: Configuring directory tree..."
    eos mkdir -p /eos/user
    #eos attr set sys.mask="700" /eos/user
    #eos attr set sys.owner.auth="*" /eos/user
    for letter in {a..z}
    do
      eos mkdir -p /eos/user/$letter
    done


    ## EOS demo users
    create_eos_homedir () {
      if [ $# -lt 3 ]; then
        echo "ERR: Unable to create homedir: Wrong number of parameters."
        return
      fi

      local homedir=$1
      local uid=$2
      local gid=$3

      eos mkdir -p $homedir
      eos chown $uid:$gid $homedir
      eos chmod 2700 $homedir
      eos attr set sys.acl=u:$uid:rwx $homedir
      eos attr set sys.mask="700" $homedir
      eos attr set sys.allow.oc.sync="1" $homedir
      eos attr set sys.mtime.propagation="1" $homedir
      eos attr set sys.forced.atomic="1" $homedir
      eos attr set sys.versioning="10" $homedir
      ###
      # TODO: `error: you cannot set quota from storage node with 'sss' authentication!`
      #eos quota set -u $uid -v 1T -i 1M -p /eos/user
      ###
      eos access allow user $uid
      sleep 3
    }

    echo "INFO: Configuring demo users..."
    echo "INFO:   Users from list..."
    uname=admin
    uname_initial=$(echo $uname | cut -c 1)
    homedir=/eos/user/$uname_initial/$uname
    create_eos_homedir $homedir 20004 30000
    uname=einstein
    uname_initial=$(echo $uname | cut -c 1)
    homedir=/eos/user/$uname_initial/$uname
    create_eos_homedir $homedir 20000 30000
    uname=marie
    uname_initial=$(echo $uname | cut -c 1)
    homedir=/eos/user/$uname_initial/$uname
    create_eos_homedir $homedir 20001 30000
    uname=moss
    uname_initial=$(echo $uname | cut -c 1)
    homedir=/eos/user/$uname_initial/$uname
    create_eos_homedir $homedir 20003 30000
    uname=reva
    uname_initial=$(echo $uname | cut -c 1)
    homedir=/eos/user/$uname_initial/$uname
    create_eos_homedir $homedir 10001 15000
    uname=richard
    uname_initial=$(echo $uname | cut -c 1)
    homedir=/eos/user/$uname_initial/$uname
    create_eos_homedir $homedir 20002 30000
    echo "INFO:   Users in bulk..."
    gid=100
    uid_start=1000
    uname_prefix=user
    uname_initial=$(echo $uname_prefix | cut -c 1)
    for i in $(seq 10)
    do
      i=$(($i-1))  # Start from 0
      uid=$(echo $uid_start + $i | bc -l)
      uname="$uname_prefix$i"
      homedir=/eos/user/$uname_initial/$uname
      create_eos_homedir $homedir $uid $gid
    done


    ### Save config and leave
    echo "INFO: Saving configuration..."
    eos config save sciencebox_bootstrap -f
    eos config save default -f

    exit 0
---
# Source: sciencebox/charts/eos-user-cache-refresher/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-eos-user-cache-refresher-script
  labels:
    helm.sh/chart: eos-user-cache-refresher-0.0.1
    app.kubernetes.io/name: eos-user-cache-refresher
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
data:
  user_cache_refresh.sh: |
    #!/bin/bash
    set -x
    alias eos='eos -r 0 0'
    shopt -s expand_aliases

    init_probe() {
      local cmd=$@
      local max_wait=60
      local sleep=5
      start_time=$(date +%s)
      rc=-1
      while [ $rc -ne 0 ];
      do
        timeout --preserve-status $sleep $cmd >/dev/null 2>&1
        rc=$?

        # Bail out after max_wait
        tot_wait=$(($(date +%s)-start_time))
        echo "        $tot_wait seconds... (timeout at $max_wait)"
        if [ $tot_wait -ge $max_wait ]; then
          echo "ERROR: cmd \`$cmd\` failed after $tot_wait secs. Giving up."
          exit 1
        fi
        sleep $sleep
      done
    }

    run_eos_access_ls() {
      date --iso-8601=seconds
      timeout --preserve-status 10 eos access ls 2>&1
      if [ $? -ne 0 ];
      then
        echo "Warning: `eos access ls` timed out"
      fi
      echo
    }

    # Wait for the MGM to be online
    echo "INFO: Checking the MGM is online..."
    echo "INFO: EOS_MGM_URL="$EOS_MGM_URL
    init_probe eos ns
    echo "INFO: MGM is online."

    # Refresh cached user info

    while true
    do
      # Check the condition to exit
      echo "Checking the exit condition"
      echo "  type: user.allowed"
      echo "  identity: reva"
      eos access ls -m | grep ^user.allowed | cut -d '=' -f 2 | grep -q -w reva
      if [ $? -eq 0 ];
      then
        exit 0
      fi

      run_eos_access_ls
      sleep 30
    done

    exit 0
---
# Source: sciencebox/charts/eos/charts/fst/templates/configmap-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-fst-cfgmap-sysconfig-eos
  labels:
    helm.sh/chart: fst-0.1.1
    app.kubernetes.io/name: fst
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
data:
  # ************************************************************************ #
  # EOS, the CERN Disk Storage System - Copyright (C) 2011 CERN/Switzerland  #
  # ************************************************************************ #
  # Environment variables from /etc/sysconfig/eos                            #
  # ************************************************************************ #
  # Should we run with another limit on the core file size other than the default?
  DAEMON_COREFILE_LIMIT: unlimited
  # Disable the KRB5 replay cache
  KRB5RCACHETYPE: none
  # Skip hostname match for SSS authentication in k8s setup
  # TODO: work around k8s setup issues. This should *NOT* be enabled in production
  EOS_SKIP_SSS_HOSTNAME_MATCH: !!integer 1
  # What roles should the xroot daemon run for.
  XRD_ROLES: "fst"

  # ------------------------------------------------------------------
  # EOS Configuration
  # ------------------------------------------------------------------
  # User std::shared_timed_mutex instead of the pthread_rwlock_*
  EOS_USE_SHARED_MUTEX: !!integer 1
  # The EOS host geo location tag used to sort hosts into geographical (rack) locations
  EOS_GEOTAG: docker::k8s
  # The fully qualified hostname of MGM master1
  EOS_MGM_MASTER1: my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
  # The fully qualified hostname of MGM master2
  EOS_MGM_MASTER2: my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
  # The alias which selects master 1 or 2
  EOS_MGM_ALIAS: my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
  # The mail notification in case of fail-over
  #EOS_MAIL_CC: "apeters@mail.cern.ch"
  #EOS_NOTIFY: "mail -s `date +%s`-`hostname`-eos-notify $EOS_MAIL_CC"
  # Allow UTF-8 path names excluding only CR,LF
  EOS_UTF8: "1"
  # Enable QoS support
  EOS_ENABLE_QOS: ""
  # Enable Converter Engine
  EOS_CONVERTER_DRIVER: !!integer 1
  # Enable core dumps initiated internally
  #EOS_CORE_DUMP
  # Disable shutdown/signal handlers for debugging
  #EOS_NO_SHUTDOWN

  #-------------------------------------------------------------------------------
  # FST Configuration
  #-------------------------------------------------------------------------------
  # Stream timeout for operations
  #EOS_FST_STREAM_TIMEOUT: 300
  # Specify in seconds how often FSTs should query for new delete operations
  # Set the polling interval for deletions to 5 seconds for the rm tests to
  # run faster. This controls how often the FTS request deletions from the MGM.
  EOS_FST_DELETE_QUERY_INTERVAL: !!integer 5
  # Number of threads for transfer operations (Balance, Drain or Transfer actions)
  EOS_FST_TRANSFER_THREAD_POOL: !!integer 20

  #-------------------------------------------------------------------------------
  # FST External Storage Configuration
  #-------------------------------------------------------------------------------
  # Set number of connection retries
  EOS_FST_CONNECTION_RETRY: !!integer 1
  # Set S3 access credentials
  #EOS_FST_S3_ACCESS_KEY: ""
  #EOS_FST_S3_SECRET_KEY: ""
  # Set S3 theoretical storage size
  EOS_FST_S3_STORAGE_SIZE: !!integer 20000000000
  # Set HTTPS X509 certificate path
  #EOS_FST_HTTPS_X509_CERTIFICATE_PATH: ""

  # ------------------------------------------------------------------
  # FUSE Configuration
  # ------------------------------------------------------------------
  # The mount directory for 'eosd'
  EOS_FUSE_MOUNTDIR: /eos/
  # The MGM host from where to do the initial mount
  EOS_FUSE_MGM_ALIAS: my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
  # Enable FUSE debugging mode (default off)
  #EOS_FUSE_DEBUG: 1
  # Disable parallel IO mode (default on)
  #EOS_FUSE_NOPIO: 1
  # Disable multi-threading in FUSE (default on)
  #EOS_FUSE_NO_MT: 1

  # ------------------------------------------------------------------
  # HTTPD Configuration
  # ------------------------------------------------------------------
  # Enable multi-threaded httpd
  EOS_HTTP_THREADPOOL: "epoll"
  EOS_HTTP_THREADPOOL_SIZE: !!integer 16

  #-------------------------------------------------------------------------------
  # GRPC Configuration
  #-------------------------------------------------------------------------------
  # GRPC port - set to 0 to disable GRPC
  EOS_MGM_GRPC_PORT: !!integer 50051

  # ------------------------------------------------------------------
  # Federation Configuration
  # ------------------------------------------------------------------
  # The host[:port] name of the meta manager (global redirector)
  #EOS_FED_MANAGER: eos.cern.ch:1094
  # The port of the PSS xrootd server
  #EOS_PSS_PORT: 1098
  # The hostname[:port] of the EOS MGM service
  #EOS_PSS_MGM: $EOS_MGM_ALIAS:1094
  # The path which should be proxied (/ for all)
  #EOS_PSS_PATH: /

  # ------------------------------------------------------------------
  # Test Configuration
  # ------------------------------------------------------------------
  # mail notification for failed tests
  #EOS_TEST_MAILNOTIFY: apeters@mail.cern.ch
  # SMS notification for failed tests
  #EOS_TEST_GSMNOTIFY: "0041764875002@mail2sms.cern.ch"
  # Instance name :  name of directory at deepness 2 /eos/<instance>/
  #EOS_TEST_INSTANCE: "dev"
  # MGM host redirector
  #EOS_TEST_REDIRECTOR: my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
  # local test output directory
  #EOS_TEST_TESTSYS: /tmp/eos-instance-test
  # time to lock re-sending of SMS for consecutively failing tests
  #EOS_TEST_GSMLOCKTIME: 3600
  # max. time given to the test to finish
  #EOS_TEST_TESTTIMESLICE: 300
---
# Source: sciencebox/charts/eos/charts/fst/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-fst-cfgmap-xrd-cf-fst
  labels:
    helm.sh/chart: fst-0.1.1
    app.kubernetes.io/name: fst
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
data:
  xrd.cf.fst: |
    ###########################################################
    xrootd.fslib -2 libXrdEosFst.so
    xrootd.async off nosf
    xrd.network keepalive
    ###########################################################
    xrootd.seclib libXrdSec.so
    sec.protocol unix
    sec.protocol sss -c /etc/eos.keytab -s /etc/eos.keytab
    sec.protbind * only unix sss
    ###########################################################
    all.export / nolock
    all.trace none
    all.manager localhost 2131
    #ofs.trace open
    ###########################################################
    xrd.port 1095
    ofs.persist off
    ofs.osslib libEosFstOss.so
    ofs.tpc pgm /opt/eos/xrootd/bin/xrdcp
    ###########################################################
    fstofs.broker root://my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local:1097//eos/
    fstofs.autoboot true
    fstofs.quotainterval 10
    fstofs.metalog /var/eos/md/
    fstofs.fmddict /var/eos/md/fstfmd.dict
    ##### QuarkDB #############################################
    fstofs.qdbcluster my-release-qdb.sciencebox-0.0.7.tgz.svc.cluster.local:7777
    fstofs.qdbpassword_file /etc/eos.keytab
    ###########################################################
---
# Source: sciencebox/charts/eos/charts/fst/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-fst-cfgmap-fst-init
  labels:
    helm.sh/chart: fst-0.1.1
    app.kubernetes.io/name: fst
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
data:
  fst_init.sh: |
    #!/bin/bash
    set -x
    alias eos='eos -r 0 0'
    shopt -s expand_aliases

    init_probe() {
      local cmd=$@
      local max_wait=180
      local sleep=5
      start_time=$(date +%s)
      rc=-1
      while [ $rc -ne 0 ];
      do
        timeout --preserve-status $sleep $cmd >/dev/null 2>&1
        rc=$?

        # Bail out after max_wait
        tot_wait=$(($(date +%s)-start_time))
        echo "        $tot_wait seconds... (timeout at $max_wait)"
        if [ $tot_wait -ge $max_wait ]; then
          echo "ERROR: cmd \`$cmd\` failed after $tot_wait secs. Giving up."
          exit 1
        fi
        sleep $sleep
      done
    }

    # Wait for the MGM to be online before registering the node and the filesystem
    echo "INFO: Checking the MGM is online..."
    init_probe eos ns
    echo "INFO: MGM is online."

    # Start the FST process in background so that we can run other commands
    echo "INFO: Starting FST..."
    /opt/eos/xrootd/bin/xrootd -n fst -c /etc/xrd.cf.fst -m -b -Rdaemon >/dev/null 2>&1

    # Local variables
    DATADIR=/fst_storage
    UUID=$(uuidgen)
    HOSTNAME=$(hostname -f)
    SPACE=default
    GROUPSIZE=0
    GROUPMOD=24
    CONFIG=rw

    # If there is an eos fsid || fsuuid, bail out
    if [ -f $DATADIR/.eosfsid ] || [ -f $DATADIR/.eosfsuuid ]; then
      echo "INFO: FS IDs already exist. Not cofiguring any further"
      echo "INFO: FS uuid is "$(cat $DATADIR/.eosfsuuid)
      exit 0
    fi

    # Write filesystem identifier
    echo "INFO: FS uuid is $UUID"
    echo "$UUID" > $DATADIR/.eosfsuuid

    # If needed, create the EOS space
    if [ $(eos space ls $SPACE -m | wc -l) -eq 0 ]; then
      echo "INFO: Space $SPACE does not exist. Creating..."
      eos space define $SPACE $GROUPSIZE $GROUPMOD
      eos space set $SPACE on
    fi

    # Set this node on
    echo "INFO: Enabling node..."
    eos node set $HOSTNAME:1095 on

    # Register filesystem
    echo "INFO: Registering filesystem..."
    eos fs add $UUID $HOSTNAME:1095 $DATADIR $SPACE $CONFIG

    # @note Enable the scheduling group the fst has been added to.
    #       ref. https://gitlab.cern.ch/eos/eos-charts/-/issues/41
    echo "INFO: Enabling scheduling group..."
    eos group set $(eos fs ls -m | grep $UUID | grep -o "schedgroup=[^,' ']*" | cut -d= -f2) on
    exit 0
---
# Source: sciencebox/charts/eos/charts/mgm/templates/configmap-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mgm-cfgmap-sysconfig-eos
  labels:
    helm.sh/chart: mgm-0.1.4
    app.kubernetes.io/name: mgm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.80"
    app.kubernetes.io/managed-by: Helm
data:
  # ************************************************************************ #
  # EOS, the CERN Disk Storage System - Copyright (C) 2011 CERN/Switzerland  #
  # ************************************************************************ #
  # Environment variables from /etc/sysconfig/eos                            #
  # ************************************************************************ #
  # Should we run with another limit on the core file size other than the default?
  DAEMON_COREFILE_LIMIT: unlimited
  # Disable the KRB5 replay cache
  KRB5RCACHETYPE: none
  # Skip hostname match for SSS authentication in k8s setup
  # TODO: work around k8s setup issues. This should *NOT* be enabled in production
  EOS_SKIP_SSS_HOSTNAME_MATCH: !!integer 1
  # What roles should the xroot daemon run for.
  XRD_ROLES: "mgm"

  # ------------------------------------------------------------------
  # EOS Configuration
  # ------------------------------------------------------------------
  # User std::shared_timed_mutex instead of the pthread_rwlock_*
  EOS_USE_SHARED_MUTEX: !!integer 1
  # The EOS host geo location tag used to sort hosts into geographical (rack) locations
  EOS_GEOTAG: "docker::k8s"
  # The fully qualified hostname of MGM master1
  EOS_MGM_MASTER1: my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
  # The fully qualified hostname of MGM master2
  EOS_MGM_MASTER2: my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
  # The alias which selects master 1 or 2
  EOS_MGM_ALIAS: my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
  # The mail notification in case of fail-over
  #EOS_MAIL_CC: "apeters@mail.cern.ch"
  #EOS_NOTIFY: "mail -s `date +%s`-`hostname`-eos-notify $EOS_MAIL_CC"
  # Allow UTF-8 path names excluding only CR,LF
  EOS_UTF8: "1"
  # Enable QoS support
  # @note (faluchet) requires mgmofs.qos* path to exists.
  # By default, they are on /var/eos/ with all the "rest"; but they are shadowed if /var/eos is an emptyDir{}!
  # And, btw, why do we accept to shadow them in the first place?
  # Disable QoS support (for the moment)
  # EOS_ENABLE_QOS: ""
  # Enable Converter Engine
  EOS_CONVERTER_DRIVER: !!integer 1
  # Enable core dumps initiated internally
  #EOS_CORE_DUMP
  # Disable shutdown/signal handlers for debugging
  #EOS_NO_SHUTDOWN

  #-------------------------------------------------------------------------------
  # FST Configuration
  #-------------------------------------------------------------------------------
  # Stream timeout for operations
  #EOS_FST_STREAM_TIMEOUT: 300
  # Specify in seconds how often FSTs should query for new delete operations
  # Set the polling interval for deletions to 5 seconds for the rm tests to
  # run faster. This controls how often the FTS request deletions from the MGM.
  EOS_FST_DELETE_QUERY_INTERVAL: !!integer 5
  # Number of threads for transfer operations (Balance, Drain or Transfer actions)
  EOS_FST_TRANSFER_THREAD_POOL: !!integer 20

  #-------------------------------------------------------------------------------
  # FST External Storage Configuration
  #-------------------------------------------------------------------------------
  # Set number of connection retries
  EOS_FST_CONNECTION_RETRY: !!integer 1
  # Set S3 access credentials
  #EOS_FST_S3_ACCESS_KEY: ""
  #EOS_FST_S3_SECRET_KEY: ""
  # Set S3 theoretical storage size
  EOS_FST_S3_STORAGE_SIZE: !!integer 20000000000
  # Set HTTPS X509 certificate path
  #EOS_FST_HTTPS_X509_CERTIFICATE_PATH: ""

  # ------------------------------------------------------------------
  # FUSE Configuration
  # ------------------------------------------------------------------
  # The mount directory for 'eosd'
  EOS_FUSE_MOUNTDIR: /eos/
  # The MGM host from where to do the initial mount
  EOS_FUSE_MGM_ALIAS: my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
  # Enable FUSE debugging mode (default off)
  #EOS_FUSE_DEBUG: 1
  # Disable parallel IO mode (default on)
  #EOS_FUSE_NOPIO: 1
  # Disable multi-threading in FUSE (default on)
  #EOS_FUSE_NO_MT: 1

  # ------------------------------------------------------------------
  # HTTPD Configuration
  # ------------------------------------------------------------------
  # Enable multi-threaded httpd
  EOS_HTTP_THREADPOOL: "epoll"
  EOS_HTTP_THREADPOOL_SIZE: !!integer 16

  #-------------------------------------------------------------------------------
  # GRPC Configuration
  #-------------------------------------------------------------------------------
  # GRPC port - set to 0 to disable GRPC
  EOS_MGM_GRPC_PORT: !!integer 50051

  # ------------------------------------------------------------------
  # Federation Configuration
  # ------------------------------------------------------------------
  # The host[:port] name of the meta manager (global redirector)
  #EOS_FED_MANAGER: eos.cern.ch:1094
  # The port of the PSS xrootd server
  #EOS_PSS_PORT: 1098
  # The hostname[:port] of the EOS MGM service
  #EOS_PSS_MGM: $EOS_MGM_ALIAS:1094
  # The path which should be proxied (/ for all)
  #EOS_PSS_PATH: /

  # ------------------------------------------------------------------
  # Test Configuration
  # ------------------------------------------------------------------
  # mail notification for failed tests
  #EOS_TEST_MAILNOTIFY: apeters@mail.cern.ch
  # SMS notification for failed tests
  #EOS_TEST_GSMNOTIFY: "0041764875002@mail2sms.cern.ch"
  # Instance name :  name of directory at deepness 2 /eos/<instance>/
  #EOS_TEST_INSTANCE: "dev"
  # MGM host redirector
  #EOS_TEST_REDIRECTOR: my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
  # local test output directory
  #EOS_TEST_TESTSYS: /tmp/eos-instance-test
  # time to lock re-sending of SMS for consecutively failing tests
  #EOS_TEST_GSMLOCKTIME: 3600
  # max. time given to the test to finish
  #EOS_TEST_TESTTIMESLICE: 300
---
# Source: sciencebox/charts/eos/charts/mgm/templates/configmap-nslcd.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mgm-cfgmap-nslcd-conf
  labels:
    helm.sh/chart: mgm-0.1.4
    app.kubernetes.io/name: mgm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.80"
    app.kubernetes.io/managed-by: Helm
data:
  nslcd.conf: |
    # This is the configuration file for the LDAP nameservice
    # switch library's nslcd daemon. It configures the mapping
    # between NSS names (see /etc/nsswitch.conf) and LDAP
    # information in the directory.
    # See the manual page nslcd.conf(5) for more information.

    # The uri pointing to the LDAP server to use for name lookups.
    # Multiple entries may be specified. The address that is used
    # here should be resolvable without using LDAP (obviously).
    #uri ldap://127.0.0.1/
    #uri ldaps://127.0.0.1/
    #uri ldapi://%2fvar%2frun%2fldapi_sock/
    # Note: %2f encodes the '/' used as directory separator

    # This comment prevents repeated auto-migration of settings.
    #uri ldap://ldap
    uri ldap://sciencebox-ldap:389

    # The LDAP version to use (defaults to 3
    # if supported by client library)
    #ldap_version 3

    # The distinguished name of the search base.
    #base dc=example,dc=com
    base dc=owncloud,dc=com

    # The distinguished name to bind to the server with.
    # Optional: default is to bind anonymously.
    binddn cn=readuser,dc=owncloud,dc=com

    # The credentials to bind with.
    # Optional: default is no credentials.
    # Note that if you set a bindpw you should check the permissions of this file.
    bindpw readuser

    # The distinguished name to perform password modifications by root by.
    #rootpwmoddn cn=admin,dc=example,dc=com

    # The default search scope.
    #scope sub
    #scope one
    #scope base

    # Customize certain database lookups.
    base group ou=groups,dc=owncloud,dc=com
    base passwd ou=users,dc=owncloud,dc=com
    #base   shadow ou=People,dc=example,dc=com
    #scope  group  onelevel
    #scope  hosts  sub

    # Bind/connect timelimit.
    #bind_timelimit 30

    # Search timelimit.
    timelimit 30

    # Idle timelimit. nslcd will close connections if the
    # server has not been contacted for the number of seconds.
    #idle_timelimit 3600

    # Use StartTLS without verifying the server certificate.
    #ssl start_tls
    #tls_reqcert never

    # CA certificates for server certificate verification
    #tls_cacertdir /etc/ssl/certs
    #tls_cacertfile /etc/ssl/ca.cert
    tls_cacertdir /etc/pki/tls/certs/

    # Seed the PRNG if /dev/urandom is not provided
    #tls_randfile /var/run/egd-pool

    # SSL cipher suite
    # See man ciphers for syntax
    #tls_ciphers TLSv1

    # Client certificate and key
    # Use these, if your server requires client authentication.
    #tls_cert
    #tls_key

    # Mappings for Active Directory
    pagesize 1000
    referrals off
    #filter passwd (&(objectClass=account)(uidNumber=*)(homeDirectory=*))
    filter passwd (objectClass=posixAccount)
    map    passwd uid              uid
    map    passwd homeDirectory    homeDirectory
    map    passwd gecos            gecos

    filter shadow (&(objectClass=account)(uidNumber=*)(homeDirectory=*))
    map    shadow uid              uid
    map    shadow shadowLastChange shadowLastChange

    #filter group  (objectClass=group)
    filter group (objectClass=posixGroup)
    #map    group  uniqueMember     member

    # NDS mappings
    #map group uniqueMember member

    # Mappings for Services for UNIX 3.5
    #filter passwd (objectClass=User)
    #map    passwd uid              msSFU30Name
    #map    passwd userPassword     msSFU30Password
    #map    passwd homeDirectory    msSFU30HomeDirectory
    #map    passwd homeDirectory    msSFUHomeDirectory
    #filter shadow (objectClass=User)
    #map    shadow uid              msSFU30Name
    #map    shadow userPassword     msSFU30Password
    #filter group  (objectClass=Group)
    #map    group  uniqueMember     msSFU30PosixMember

    # Mappings for Services for UNIX 2.0
    #filter passwd (objectClass=User)
    #map    passwd uid              msSFUName
    #map    passwd userPassword     msSFUPassword
    #map    passwd homeDirectory    msSFUHomeDirectory
    #map    passwd gecos            msSFUName
    #filter shadow (objectClass=User)
    #map    shadow uid              msSFUName
    #map    shadow userPassword     msSFUPassword
    #map    shadow shadowLastChange pwdLastSet
    #filter group  (objectClass=Group)
    #map    group  uniqueMember     posixMember

    # Mappings for Active Directory
    #pagesize 1000
    #referrals off
    #filter passwd (&(objectClass=user)(!(objectClass=computer))(uidNumber=*)(unixHomeDirectory=*))
    #map    passwd uid              sAMAccountName
    #map    passwd homeDirectory    unixHomeDirectory
    #map    passwd gecos            displayName
    #filter shadow (&(objectClass=user)(!(objectClass=computer))(uidNumber=*)(unixHomeDirectory=*))
    #map    shadow uid              sAMAccountName
    #map    shadow shadowLastChange pwdLastSet
    #filter group  (objectClass=group)
    #map    group  uniqueMember     member

    # Mappings for AIX SecureWay
    #filter passwd (objectClass=aixAccount)
    #map    passwd uid              userName
    #map    passwd userPassword     passwordChar
    #map    passwd uidNumber        uid
    #map    passwd gidNumber        gid
    #filter group  (objectClass=aixAccessGroup)
    #map    group  cn               groupName
    #map    group  uniqueMember     member
    #map    group  gidNumber        gid
    uid nslcd
    gid ldap
---
# Source: sciencebox/charts/eos/charts/mgm/templates/configmap-nsswitch.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mgm-cfgmap-nsswitch-conf
  labels:
    helm.sh/chart: mgm-0.1.4
    app.kubernetes.io/name: mgm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.80"
    app.kubernetes.io/managed-by: Helm
data:
  nsswitch.conf: |
    #
    # /etc/nsswitch.conf
    #
    # An example Name Service Switch config file. This file should be
    # sorted with the most-used services at the beginning.
    #
    # The entry '[NOTFOUND=return]' means that the search for an
    # entry should stop if the search in the previous entry turned
    # up nothing. Note that if the search failed due to some other reason
    # (like no NIS server responding) then the search continues with the
    # next entry.
    #
    # Valid entries include:
    #
    #      nisplus                 Use NIS+ (NIS version 3)
    #      nis                     Use NIS (NIS version 2), also called YP
    #      dns                     Use DNS (Domain Name Service)
    #      files                   Use the local files
    #      db                      Use the local database (.db) files
    #      compat                  Use NIS on compat mode
    #      hesiod                  Use Hesiod for user lookups
    #      [NOTFOUND=return]       Stop searching if not found so far
    #

    # To use db, put the "db" in front of "files" for entries you want to be
    # looked up first in the databases
    #
    # Example:
    #passwd:    db files nisplus nis
    #shadow:    db files nisplus nis
    #group:     db files nisplus nis

    passwd:     files ldap
    shadow:     files
    group:      files ldap
    hosts:      files dns

    # Example - obey only what nisplus tells us...
    #services:   nisplus [NOTFOUND=return] files
    #networks:   nisplus [NOTFOUND=return] files
    #protocols:  nisplus [NOTFOUND=return] files
    #rpc:        nisplus [NOTFOUND=return] files
    #ethers:     nisplus [NOTFOUND=return] files
    #netmasks:   nisplus [NOTFOUND=return] files

    bootparams: nisplus [NOTFOUND=return] files
    ethers:     files
    netmasks:   files
    networks:   files
    protocols:  files
    rpc:        files
    services:   files
    netgroup:   files
    publickey:  nisplus
    automount:  files
    aliases:    files nisplus
---
# Source: sciencebox/charts/eos/charts/mgm/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mgm-cfgmap-xrd-cf-mgm
  labels:
    helm.sh/chart: mgm-0.1.4
    app.kubernetes.io/name: mgm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.80"
    app.kubernetes.io/managed-by: Helm
data:
  xrd.cf.mgm: |
    ###########################################################
    xrootd.fslib libXrdEosMgm.so
    xrootd.seclib libXrdSec.so
    xrootd.async off nosf
    xrootd.chksum eos
    ###########################################################

    xrd.sched mint 8 maxt 256 idle 64
    ###########################################################
    all.export / nolock
    all.role manager
    ###########################################################
    oss.fdlimit 16384 32768
    ###########################################################
    # UNIX authentication
    sec.protocol unix
    # SSS authentication
    sec.protocol sss -c /etc/eos.keytab -s /etc/eos.keytab

    # GSI authentication
    #sec.protocol gsi -crl:0 -cert:/etc/grid-security/daemon/hostcert.pem -key:/etc/grid-security/daemon/hostkey.pem -gridmap:/etc/grid-security/grid-mapfile -d:0 -gmapopt:2

    ###########################################################
    sec.protbind localhost.localdomain unix sss
    sec.protbind localhost unix sss
    sec.protbind * only sss unix
    ###########################################################
    mgmofs.instance user
    mgmofs.fs /
    mgmofs.targetport 1095
    #mgmofs.authlib libXrdAliceTokenAcc.so
    #mgmofs.authorize 1
    ###########################################################
    #mgmofs.trace all debug
    mgmofs.broker root://my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local:1097//eos/

    # configuration and namespace location
    mgmofs.configdir /var/eos/config
    mgmofs.metalog /var/eos/md
    mgmofs.txdir /var/eos/tx
    mgmofs.authdir /var/eos/auth
    # mgmofs.qosdir /var/eos/qos # @note (faluchet) see note on Qos Support (grep EOS_ENABLE_QOS)

    # QoS configuration file
    # mgmofs.qoscfg /var/eos/qos/qos.conf # @note (faluchet) see note on Qos Support (grep EOS_ENABLE_QOS)

    # report store path
    mgmofs.reportstorepath /var/eos/report

    # record store is enabled by default
    mgmofs.reportstore true

    # record namespace is disabled by default - can be enabled on the fly with the 'io' command
    mgmofs.reportnamespace false

    # this defines the default config to load
    mgmofs.autoloadconfig default

    # this enables that every change get's immedeatly stored to the active configuration - can be overwritten by EOS_AUTOSAVE_CONFIG defined in /etc/sysconfig/eos
    mgmofs.autosaveconfig true

    # this has to be defined if we have a failover configuration via alias - can be overwritten by EOS_MGM_ALIAS in /etc/sysconfig/eos
    #mgmofs.alias eosdev.cern.ch

    # Set the number of authentication worker threads running on the mgm
    mgmofs.auththreads 10

    # Set the front end port number for incoming authentication requests
    mgmofs.authport 15555

    ##### Namespace plugin implementation #####################
    #mgmofs.nslib /usr/lib64/libEosNsInMemory.so
    mgmofs.nslib /usr/lib64/libEosNsQuarkdb.so
    mgmofs.qdbcluster my-release-qdb.sciencebox-0.0.7.tgz.svc.cluster.local:7777
    mgmofs.qdbpassword_file /etc/eos.keytab
    mgmofs.cfgtype quarkdb
---
# Source: sciencebox/charts/eos/charts/mgm/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mgm-cfgmap-mgm-init
  labels:
    helm.sh/chart: mgm-0.1.4
    app.kubernetes.io/name: mgm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.80"
    app.kubernetes.io/managed-by: Helm
data:
  mgm_init.sh: |
    #!/bin/bash
    set -x

    init_probe() {
      local cmd=$@
      local max_wait=180
      local sleep=5
      start_time=$(date +%s)
      rc=-1
      while [ $rc -ne 0 ];
      do
        timeout --preserve-status $sleep $cmd >/dev/null 2>&1
        rc=$?

        # Bail out after max_wait
        tot_wait=$(($(date +%s)-start_time))
        echo "        $tot_wait seconds... (timeout at $max_wait)"
        if [ $tot_wait -ge $max_wait ]; then
          echo "ERROR: cmd \`$cmd\` failed after $tot_wait secs. Giving up."
          exit 1
        fi
        sleep $sleep
      done
    }

    # Check QDB backend is running
    echo "INFO: Checking QDB is running..."
    init_probe redis-cli -h my-release-qdb.sciencebox-0.0.7.tgz.svc.cluster.local -p 7777 ping
    echo "INFO: QDB is online."

    # Start the MGM process in background so that we can run other commands
    echo "INFO: Starting MGM..."
    /opt/eos/xrootd/bin/xrootd -n mgm -c /etc/xrd.cf.mgm -m -b -Rdaemon >/dev/null 2>&1

    # Wait for the MGM to be online
    echo "INFO: Checking the MGM is online..."
    echo "INFO: EOS_MGM_URL="$EOS_MGM_URL
    init_probe eos -r 0 0 ns
    echo "INFO: MGM is online."

    # Check if a previous configuration already exists. If so, don't touch.
    echo "INFO: Looking for previous EOS configurations..."
    if [ $(eos -b config ls | grep -w 'enable_sss' | wc -l) -eq 1 ]; then
      echo "  ✓ EOS configurations found. Exiting."
      exit 0
    fi
    echo "  ✓ None found."

    # Enable SSS
    echo "INFO: Enabling mapping via SSS..."
    eos -b vid enable sss


    # Add daemon to sudoers list
    echo "INFO: Adding daemon to sudoers list..."
    eos -b vid set membership daemon +sudo

    ### Save config and leave
    echo "INFO: Saving configuration..."
    eos -b config save enable_sss -f
    eos -b config save default -f
---
# Source: sciencebox/charts/eos/charts/mgm/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mgm-cfgmap-xrd-cf-mq
  labels:
    helm.sh/chart: mgm-0.1.4
    app.kubernetes.io/name: mgm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.80"
    app.kubernetes.io/managed-by: Helm
data:
  xrd.cf.mq: |
    ##### Broker OFS ##########################################
    xrootd.fslib libXrdMqOfs.so
    all.export /eos/ nolock
    all.role server
    xrootd.async off nosf

    ##### SSS authentication ##################################
    xrootd.seclib libXrdSec.so
    sec.protocol sss -c /etc/eos.keytab -s /etc/eos.keytab
    sec.protbind * only sss

    ##### Allow up to 1024 threads ############################
    xrd.sched mint 16 maxt 1024 idle 128

    ##### Run on port 1097 ####################################
    xrd.port 1097

    ##### Keep-alive + idle timeout ###########################
    xrd.network keepalive
    xrd.timeout idle 120

    ##### Queueing ############################################
    mq.maxmessagebacklog 100000
    mq.maxqueuebacklog 50000
    mq.rejectqueuebacklog 100000

    ##### Trace levels (low|medium|high) ######################
    mq.trace low

    ###########################################################
    mq.queue /eos/

    ##### QuarkDB #############################################
    mq.qdbcluster my-release-qdb.sciencebox-0.0.7.tgz.svc.cluster.local:7777
    mq.qdbpassword_file /etc/eos.keytab
    ###########################################################
---
# Source: sciencebox/charts/eos/charts/qdb/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-qdb-xrd-cf-quarkdb-partial
  labels:
    helm.sh/chart: qdb-0.1.1
    app.kubernetes.io/name: qdb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
data:
  xrd.cf.quarkdb.partial: |
    xrd.port 7777
    xrd.protocol redis:7777 /usr/lib64/libXrdQuarkDB.so
    redis.password_file /etc/eos.keytab
    #redis.database#to_be_configured
    #redis.mode#to_be_configured
---
# Source: sciencebox/charts/eos/charts/qdb/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-qdb-cfgmap-qdb-create
  labels:
    helm.sh/chart: qdb-0.1.1
    app.kubernetes.io/name: qdb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
data:
  qdb_create.sh: |
    #!/bin/bash
    set -x

    # Number of replicas of QuarkDB
    #   Determines whether it should run in stanalone mode or as part of a raft cluster.
    #   This is set by Helm in values.yaml
    REPLICA_COUNT=3
    echo "INFO: Number of desired replicas is $REPLICA_COUNT"

    if [ $REPLICA_COUNT -eq 2 ]; then
      echo "ERROR: Cannot start QaurkDB with two replicas. Please choose 1 for standalone or 3+ for raft cluster".
      exit 1
    fi

    if [ $REPLICA_COUNT -eq 1 ]; then
      echo "INFO: Initializing QuarkDB in standalone mode"
      STORAGE_PATH='/var/quarkdb/node-0'
      if [ ! -d "$STORAGE_PATH" ]; then
        # Prepare configuration file
        #   This is not used by quarkdb-create, but will be needed at runtime
        cat /root/qdb-config/input/xrd.cf.quarkdb.partial | \
          sed 's@#redis.mode#to_be_configured@redis.mode standalone@' | \
          sed "s@#redis.database#to_be_configured@redis.database $STORAGE_PATH@" > /root/qdb-config/output/xrd.cf.quarkdb
        # Create QuarkDB in standalone mode
        quarkdb-create --path $STORAGE_PATH
        chown -R daemon:daemon $STORAGE_PATH
      fi
    fi
    if [ $REPLICA_COUNT -ge 3 ]; then
      echo "INFO: Initializing QuarkDB in raft cluster mode ($REPLICA_COUNT nodes)"

      # Cluster ID of QuarkDB (used only in raft mode)
      #   This is set by Helm in values.yaml
      #   Docs: https://quarkdb.web.cern.ch/quarkdb/docs/master/configuration/
      CLUSTER_ID=24964842-7852-48fd-bbb9-43beb5bfeea9

      THIS_FQDN=$(hostname -f)
      echo "INFO: My FQDN is $THIS_FQDN"

      # Infer the replica number of this container
      #   This is based on the last field of the hostname being the ordinal for this container
      #   (`hostname -s` and split using '-' as delimiter)
      #   Docs: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#stable-network-id
      THIS_REPLICA=$(hostname -s | rev | cut -d '-' -f 1 | rev)
      echo "INFO: I am replica no. $THIS_REPLICA"

      # Create the cluster in raft mode
      #   1. Define storage path
      PATH_PREFIX="/var/quarkdb/node-"
      STORAGE_PATH="$PATH_PREFIX$THIS_REPLICA"
      echo "INFO: My storage path is $STORAGE_PATH"

      # 2. Prepare configuration file
      #   This is not used by quarkdb-create, but will be needed at runtime
      cat /root/qdb-config/input/xrd.cf.quarkdb.partial | \
        sed "s@#redis.mode#to_be_configured@redis.mode raft\n  redis.myself `hostname -f`:7777@g" | \
        sed "s@#redis.database#to_be_configured@redis.database $STORAGE_PATH@" > /root/qdb-config/output/xrd.cf.quarkdb

      # 3. Define cluster peers
      NODES=""
      for i in $(seq 0 $((REPLICA_COUNT-1)))
      do
        PEER=$(echo $THIS_FQDN | sed "s@-$THIS_REPLICA.@-$i.@")
        NODES=$(echo $NODES,$PEER:7777)
      done
      NODES=$(echo $NODES | cut -c 2-)  # Trim the leading comma

      # 4. Create the cluster
      quarkdb-create --path $STORAGE_PATH --clusterID $CLUSTER_ID --nodes $NODES
      chown -R daemon:daemon $STORAGE_PATH
    fi

    echo "INFO: Printing QuarkDB configuration from /etc/xrd.cf.quarkdb"
    cat /root/qdb-config/output/xrd.cf.quarkdb
    exit 0
---
# Source: sciencebox/charts/ldap-instance-config/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-ldap-instance-config-script
  labels:
    helm.sh/chart: ldap-instance-config-0.0.1
    app.kubernetes.io/name: ldap-instance-config
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.5.0"
    app.kubernetes.io/managed-by: Helm
data:
  instance_config.sh: |
    #!/bin/bash
    set -x
    shopt -s expand_aliases

    init_probe() {
      local cmd=$@
      local max_wait=60
      local sleep=5
      start_time=$(date +%s)
      rc=-1
      while [ $rc -ne 0 ];
      do
        timeout --preserve-status $sleep $cmd >/dev/null 2>&1
        rc=$?

        # Bail out after max_wait
        tot_wait=$(($(date +%s)-start_time))
        echo "        $tot_wait seconds... (timeout at $max_wait)"
        if [ $tot_wait -ge $max_wait ]; then
          echo "ERROR: cmd \`$cmd\` failed after $tot_wait secs. Giving up."
          exit 1
        fi
        sleep $sleep
      done
    }

    # Dump the environment for debug
    echo "INFO: Dumping environment..."
    env | sort

    # Wait for the LDAP server to be online
    echo "INFO: Checking the LDAP server is online..."
    init_probe ldapwhoami -x -H $LDAP_URI -D $LDAP_BIND_DN -w $LDAP_BIND_PASSWORD
    echo "INFO: LDAP server is online."

    # ldapadd all the ldif files in /root/ldif-files
    for ldif in $(find /root/ldif-files -type l -name "*.ldif" | sort)  # k8s configMaps are projected as links
    do
      echo "INFO: Found $ldif -- Adding to ldap..."
      ldapadd -x -H $LDAP_URI -D $LDAP_BIND_DN -w $LDAP_BIND_PASSWORD -f $ldif
      sleep 3
    done
    echo "INFO: No other ldif files found..."
    echo "INFO: Done!"

    exit 0
---
# Source: sciencebox/charts/ldap-instance-config/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-ldap-instance-config-ldif-files
  labels:
    helm.sh/chart: ldap-instance-config-0.0.1
    app.kubernetes.io/name: ldap-instance-config
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.5.0"
    app.kubernetes.io/managed-by: Helm
data:
  10_users.ldif: |-
    dn: ou=users,dc=owncloud,dc=com
    objectClass: organizationalUnit
    ou: users
    
    # Start dn with uid (user identifier / login), not cn (Firstname + Surname)
    dn: uid=einstein,ou=users,dc=owncloud,dc=com
    objectClass: inetOrgPerson
    objectClass: organizationalPerson
    objectClass: ownCloud
    objectClass: person
    objectClass: posixAccount
    objectClass: top
    uid: einstein
    givenName: Albert
    sn: Einstein
    cn: einstein
    displayName: Albert Einstein
    description: A German-born theoretical physicist who developed the theory of relativity, one of the two pillars of modern physics (alongside quantum mechanics).
    mail: einstein@example.org
    uidNumber: 20000
    gidNumber: 30000
    homeDirectory: /home/einstein
    ownCloudUUID:: NGM1MTBhZGEtYzg2Yi00ODE1LTg4MjAtNDJjZGY4MmMzZDUx
    userPassword:: e1NTSEF9TXJEcXpFNGdKbXZxbVRVTGhvWEZ1VzJBbkV3NWFLK3J3WTIvbHc9PQ==
    
    dn: uid=marie,ou=users,dc=owncloud,dc=com
    objectClass: inetOrgPerson
    objectClass: organizationalPerson
    objectClass: ownCloud
    objectClass: person
    objectClass: posixAccount
    objectClass: top
    uid: marie
    givenName: Marie
    sn: Curie
    cn: marie
    displayName: Marie Skłodowska Curie
    description: A Polish and naturalized-French physicist and chemist who conducted pioneering research on radioactivity.
    mail: marie@example.org
    uidNumber: 20001
    gidNumber: 30000
    homeDirectory: /home/marie
    ownCloudUUID:: ZjdmYmY4YzgtMTM5Yi00Mzc2LWIzMDctY2YwYThjMmQwZDlj
    userPassword:: e1NTSEF9UmFvQWs3TU9jRHBIUWY3bXN3MGhHNnVraFZQWnRIRlhOSUNNZEE9PQ==
    
    dn: uid=richard,ou=users,dc=owncloud,dc=com
    objectClass: inetOrgPerson
    objectClass: organizationalPerson
    objectClass: ownCloud
    objectClass: person
    objectClass: posixAccount
    objectClass: top
    uid: richard
    givenName: Richard
    sn: Feynman
    cn: richard
    displayName: Richard Phillips Feynman
    description: An American theoretical physicist, known for his work in the path integral formulation of quantum mechanics, the theory of quantum electrodynamics, the physics of the superfluidity of supercooled liquid helium, as well as his work in particle physics for which he proposed the parton model.
    mail: richard@example.org
    uidNumber: 20002
    gidNumber: 30000
    homeDirectory: /home/richard
    ownCloudUUID:: OTMyYjQ1NDAtOGQxNi00ODFlLThlZjQtNTg4ZTRiNmIxNTFj
    userPassword:: e1NTSEF9Z05LZTRreHdmOGRUREY5eHlhSmpySTZ3MGxSVUM1d1RGcWROTVE9PQ==
    
    dn: uid=moss,ou=users,dc=owncloud,dc=com
    objectClass: inetOrgPerson
    objectClass: organizationalPerson
    objectClass: ownCloud
    objectClass: person
    objectClass: posixAccount
    objectClass: top
    uid: moss
    givenName: Maurice
    sn: Moss
    cn: moss
    displayName: Maurice Moss
    description: A worker in the IT Department of Reynholm Industries. Of all the working staff in the IT Department, he is the most hard-working, the most experienced, and the most capable of doing his job well. He puts a lot of effort into his work, however he does not get the credit he deserves.
    mail: moss@example.org
    uidNumber: 20003
    gidNumber: 30000
    homeDirectory: /home/moss
    ownCloudUUID:: MDU4YmZmOTUtNjcwOC00ZmU1LTkxZTQtOWVhM2QzNzc1ODhi
    userPassword:: e1NTSEF9N0hEdTRoMkFDVExFWWt4U0RtSDZVQjhmUlpKRExDZDc=
    
    dn: uid=admin,ou=users,dc=owncloud,dc=com
    objectClass: inetOrgPerson
    objectClass: organizationalPerson
    objectClass: ownCloud
    objectClass: person
    objectClass: posixAccount
    objectClass: top
    uid: admin
    givenName: Admin
    sn: Admin
    cn: admin
    displayName: Admin
    description: An admin for this oCIS instance.
    mail: admin@example.org
    uidNumber: 20004
    gidNumber: 30000
    homeDirectory: /home/admin
    ownCloudUUID:: ZGRjMjAwNGMtMDk3Ny0xMWViLTlkM2YtYTc5Mzg4OGNkMGY4
    userPassword:: e1NTSEF9UWhmaFB3dERydTUydURoWFFObDRMbzVIckI3TkI5Nmo=
    
    dn: uid=reva,ou=users,dc=owncloud,dc=com
    objectClass: inetOrgPerson
    objectClass: organizationalPerson
    objectClass: ownCloud
    objectClass: person
    objectClass: posixAccount
    objectClass: top
    uid: reva
    givenName: reva
    sn: Reva
    cn: reva
    displayName: Reva
    description: The reva user for this oCIS instance.
    mail: reva@example.org
    uidNumber: 10001
    gidNumber: 15000
    homeDirectory: /home/reva
    ownCloudUUID:: NzJmMjM3ZGMtNjViNi00ZTIwLTkzZTEtNzRhYjY1ZjRjM2Iz
    userPassword:: e1NTSEF9ZTRQUEFpSUtxQ3JERWcrc2Y3MlZBRTU1Nk1FcGZVN1UK
  20_groups.ldif: |-
    dn: ou=groups,dc=owncloud,dc=com
    objectClass: organizationalUnit
    ou: groups
    
    dn: cn=users,ou=groups,dc=owncloud,dc=com
    objectClass: groupOfUniqueNames
    objectClass: posixGroup
    objectClass: ownCloud
    objectClass: top
    cn: users
    description: Users
    gidNumber: 30000
    ownCloudUUID:: NTA5YTlkY2QtYmIzNy00ZjRmLWEwMWEtMTlkY2EyN2Q5Y2Zh
    uniqueMember: uid=einstein,ou=users,dc=owncloud,dc=com
    uniqueMember: uid=marie,ou=users,dc=owncloud,dc=com
    uniqueMember: uid=richard,ou=users,dc=owncloud,dc=com
    uniqueMember: uid=moss,ou=users,dc=owncloud,dc=com
    uniqueMember: uid=admin,ou=users,dc=owncloud,dc=com
    
    dn: cn=sailing-lovers,ou=groups,dc=owncloud,dc=com
    objectClass: groupOfUniqueNames
    objectClass: posixGroup
    objectClass: ownCloud
    objectClass: top
    cn: sailing-lovers
    description: Sailing lovers
    gidNumber: 30001
    ownCloudUUID:: NjA0MGFhMTctOWM2NC00ZmVmLTliZDAtNzcyMzRkNzFiYWQw
    uniqueMember: uid=einstein,ou=users,dc=owncloud,dc=com
    
    dn: cn=violin-haters,ou=groups,dc=owncloud,dc=com
    objectClass: groupOfUniqueNames
    objectClass: posixGroup
    objectClass: ownCloud
    objectClass: top
    cn: violin-haters
    description: Violin haters
    gidNumber: 30002
    ownCloudUUID:: ZGQ1OGU1ZWMtODQyZS00OThiLTg4MDAtNjFmMmVjNmY5MTFm
    uniqueMember: uid=einstein,ou=users,dc=owncloud,dc=com
    
    dn: cn=radium-lovers,ou=groups,dc=owncloud,dc=com
    objectClass: groupOfUniqueNames
    objectClass: posixGroup
    objectClass: ownCloud
    objectClass: top
    cn: radium-lovers
    description: Radium lovers
    gidNumber: 30003
    ownCloudUUID:: N2I4N2ZkNDktMjg2ZS00YTVmLWJhZmQtYzUzNWQ1ZGQ5OTdh
    uniqueMember: uid=marie,ou=users,dc=owncloud,dc=com
    
    dn: cn=polonium-lovers,ou=groups,dc=owncloud,dc=com
    objectClass: groupOfUniqueNames
    objectClass: posixGroup
    objectClass: ownCloud
    objectClass: top
    cn: polonium-lovers
    description: Polonium lovers
    gidNumber: 30004
    ownCloudUUID:: Y2VkYzIxYWEtNDA3Mi00NjE0LTg2NzYtZmE5MTY1ZjU5OGZm
    uniqueMember: uid=marie,ou=users,dc=owncloud,dc=com
    
    dn: cn=quantum-lovers,ou=groups,dc=owncloud,dc=com
    objectClass: groupOfUniqueNames
    objectClass: posixGroup
    objectClass: ownCloud
    objectClass: top
    cn: quantum-lovers
    description: Quantum lovers
    gidNumber: 30005
    ownCloudUUID:: YTE3MjYxMDgtMDFmOC00YzMwLTg4ZGYtMmIxYTlkMWNiYTFh
    uniqueMember: uid=richard,ou=users,dc=owncloud,dc=com
    
    dn: cn=philosophy-haters,ou=groups,dc=owncloud,dc=com
    objectClass: groupOfUniqueNames
    objectClass: posixGroup
    objectClass: ownCloud
    objectClass: top
    cn: philosophy-haters
    description: Philosophy haters
    gidNumber: 30006
    ownCloudUUID:: MTY3Y2JlZTItMDUxOC00NTVhLWJmYjItMDMxZmUwNjIxZTVk
    uniqueMember: uid=richard,ou=users,dc=owncloud,dc=com
    
    dn: cn=physics-lovers,ou=groups,dc=owncloud,dc=com
    objectClass: groupOfUniqueNames
    objectClass: posixGroup
    objectClass: ownCloud
    objectClass: top
    cn: physics-lovers
    description: Physics lovers
    gidNumber: 30007
    ownCloudUUID:: MjYyOTgyYzEtMjM2Mi00YWZhLWJmZGYtOGNiZmVmNjRhMDZl
    uniqueMember: uid=einstein,ou=users,dc=owncloud,dc=com
    uniqueMember: uid=marie,ou=users,dc=owncloud,dc=com
    uniqueMember: uid=richard,ou=users,dc=owncloud,dc=com
  readme: |-
    # This is a README file.
---
# Source: sciencebox/charts/ldap/templates/configmap-customldif.yaml
#
# A ConfigMap spec for openldap slapd that map directly to files under
# /container/service/slapd/assets/config/bootstrap/ldif/custom
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-ldap-customldif
  labels:
    app: ldap
    chart: ldap-2.0.4
    release: my-release
    heritage: Helm
data:
  10_owncloud_schema.ldif: |-
    # This LDIF files describes the ownCloud schema and can be used to add two optional attributes: ownCloudQuota and ownCloudUUID
    # The ownCloudUUID is used to store a unique, non-reassignable, persistent identifier for users and groups
    #
    dn: cn=owncloud,cn=schema,cn=config
    objectClass: olcSchemaConfig
    cn: owncloud
    olcAttributeTypes: ( 1.3.6.1.4.1.39430.1.1.1 NAME 'ownCloudQuota' DESC 'User Quota (e.g. 2 GB)' EQUALITY caseExactMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 SINGLE-VALUE )
    olcAttributeTypes: ( 1.3.6.1.4.1.39430.1.1.2 NAME 'ownCloudUUID' DESC 'A non-reassignable and persistent account ID)' EQUALITY uuidMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.1.16.1 SINGLE-VALUE )
    olcObjectClasses: ( 1.3.6.1.4.1.39430.1.2.1 NAME 'ownCloud' DESC 'ownCloud LDAP Schema' AUXILIARY MAY ( ownCloudQuota $ ownCloudUUID ) )
  readme.warning: |-
    #
    # WARNING:
    #   The ability to "seed LDAP database with ldif" (https://github.com/osixia/docker-openldap#seed-ldap-database-with-ldif) in osixia/docker-openldap is buggy,
    #   and so is the resulting `customLdifFiles` in the OpenLDAP Helm Chart --> https://github.com/jp-gouin/helm-openldap#boostrap-custom-ldif.
    #
    #   Please, don't waste your time trying to make it work.
    #
    #   The ldap-instance-config chart (https://github.com/sciencebox/charts/tree/master/ldap-instance-config) was created to workaround this problem.
    #   Check its README for further details and pointers to upstream issues.
    #
---
# Source: sciencebox/charts/ldap/templates/configmap-env.yaml
#
# A ConfigMap spec for openldap slapd that map directly to env variables in the Pod.
# List of environment variables supported is from the docker image:
# https://github.com/osixia/docker-openldap#beginner-guide
# Note that passwords are defined as secrets
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-ldap-env
  labels:
    app: ldap
    chart: ldap-2.0.4
    release: my-release
    heritage: Helm
data:
  CONTAINER_LOG_LEVEL: "4"
  KEEP_EXISTING_CONFIG: "false"
  LDAP_BACKEND: mdb
  LDAP_BASE_DN: dc=owncloud,dc=com
  LDAP_DOMAIN: owncloud.com
  LDAP_LOG_LEVEL: "256"
  LDAP_ORGANISATION: ownCloud
  LDAP_READONLY_USER: "true"
  LDAP_READONLY_USER_PASSWORD: readuser
  LDAP_READONLY_USER_USERNAME: readuser
  LDAP_REMOVE_CONFIG_AFTER_SETUP: "false"
  LDAP_RFC2307BIS_SCHEMA: "true"
  LDAP_SSL_HELPER_PREFIX: ldap
  LDAP_TLS: "true"
  LDAP_TLS_CA_CRT_FILENAME: ca.crt
  LDAP_TLS_CIPHER_SUITE: NORMAL
  LDAP_TLS_CRT_FILENAME: ldap.crt
  LDAP_TLS_DH_PARAM_FILENAME: dhparam.pem
  LDAP_TLS_ENFORCE: "false"
  LDAP_TLS_KEY_FILENAME: ldap.key
  LDAP_TLS_PROTOCOL_MIN: "3.0"
  LDAP_TLS_REQCERT: never
  LDAP_TLS_VERIFY_CLIENT: try
  LDAP_REPLICATION: "true"
  LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn=\"cn=admin,cn=config\" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase=\"cn=config\" type=refreshAndPersist retry=\"60 +\" timeout=1 starttls=critical tls_reqcert=never"
  LDAP_REPLICATION_DB_SYNCPROV: "binddn=\"cn=admin,$LDAP_BASE_DN\" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase=\"$LDAP_BASE_DN\" type=refreshAndPersist interval=00:00:00:10 retry=\"60 +\" timeout=1 starttls=critical tls_reqcert=never"
  LDAP_REPLICATION_HOSTS: "#PYTHON2BASH:['ldap://my-release-ldap-0.my-release-ldap-headless.sciencebox-0.0.7.tgz.svc.cluster.local','ldap://my-release-ldap-1.my-release-ldap-headless.sciencebox-0.0.7.tgz.svc.cluster.local','ldap://my-release-ldap-2.my-release-ldap-headless.sciencebox-0.0.7.tgz.svc.cluster.local']"
---
# Source: sciencebox/charts/mariadb/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mariadb
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.4.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=*
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    slow_query_log=0
    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
    long_query_time=10.0
    
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
---
# Source: sciencebox/charts/mariadb/templates/primary/initialization-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mariadb-init-scripts
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.4.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my_init_script.sql: |
    CREATE TABLE `oc_share` (
    `id` int(11) NOT NULL AUTO_INCREMENT,
    `share_type` smallint(6) NOT NULL DEFAULT '0',
    `share_with` varchar(255) COLLATE utf8_bin DEFAULT NULL,
    `uid_owner` varchar(64) COLLATE utf8_bin NOT NULL DEFAULT '',
    `uid_initiator` varchar(64) COLLATE utf8_bin DEFAULT NULL,
    `parent` int(11) DEFAULT NULL,
    `item_type` varchar(64) COLLATE utf8_bin NOT NULL DEFAULT '',
    `item_source` varchar(255) COLLATE utf8_bin DEFAULT NULL,
    `item_target` varchar(255) COLLATE utf8_bin DEFAULT NULL,
    `file_source` bigint(20) unsigned DEFAULT NULL,
    `file_target` varchar(512) COLLATE utf8_bin DEFAULT NULL,
    `permissions` smallint(6) NOT NULL DEFAULT '0',
    `stime` bigint(20) NOT NULL DEFAULT '0',
    `accepted` smallint(6) NOT NULL DEFAULT '0',
    `expiration` datetime DEFAULT NULL,
    `token` varchar(32) COLLATE utf8_bin DEFAULT NULL,
    `mail_send` smallint(6) NOT NULL DEFAULT '0',
    `fileid_prefix` varchar(255) COLLATE utf8_bin DEFAULT NULL,
    `orphan` tinyint(4) DEFAULT NULL,
    `share_name` varchar(255) COLLATE utf8_bin DEFAULT NULL,
    PRIMARY KEY (`id`),
    KEY `item_share_type_index` (`item_type`,`share_type`),
    KEY `file_source_index` (`file_source`),
    KEY `token_index` (`token`)
    ) ENGINE=InnoDB AUTO_INCREMENT=333566 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
  
    CREATE TABLE `oc_share_status` (
    `id` int(11) NOT NULL,
    `recipient` varchar(255) NOT NULL,
    `state` int(11) DEFAULT '0',
    PRIMARY KEY (`id`,`recipient`)
    ) ENGINE=InnoDB DEFAULT CHARSET=latin1;
  
    CREATE INDEX fileid_prefix_index ON oc_share(fileid_prefix) USING BTREE;
    CREATE INDEX item_source ON oc_share(item_source) USING BTREE;
---
# Source: sciencebox/charts/nginx-welcome-page/templates/server-block-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-nginx-welcome-page-server-block
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: nginx-welcome-page
    helm.sh/chart: nginx-welcome-page-13.2.19
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  server-block.conf: |-
    server {
      listen 8080;
      location /sciencebox {
        alias /app/;
      }
    }
---
# Source: sciencebox/charts/swan/charts/cvmfs/templates/configmap-cvmfs.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-cvmfs-cfgmap-default-local
  labels:
    helm.sh/chart: cvmfs-0.0.5
    app.kubernetes.io/name: cvmfs
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
data:
  default.local: |
    CVMFS_CACHE_BASE='/var/lib/cvmfs'
    CVMFS_DNS_MIN_TTL='300'
    CVMFS_HTTP_PROXY='DIRECT'
    CVMFS_QUOTA_LIMIT='20000'
    CVMFS_REPOSITORIES='cvmfs-config.cern.ch,sft.cern.ch,sft-nightlies.cern.ch'
---
# Source: sciencebox/charts/swan/charts/cvmfs/templates/configmap-cvmfs.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-cvmfs-cfgmap-config-d
  labels:
    helm.sh/chart: cvmfs-0.0.5
    app.kubernetes.io/name: cvmfs
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: sciencebox/charts/swan/charts/cvmfs/templates/configmap-prefetcher-crontab.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-cvmfs-prefetcher-crontab
  labels:
    helm.sh/chart: cvmfs-0.0.5
    app.kubernetes.io/name: cvmfs
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
data:
  prefetcher: |
    # Run the CVMFS prefetcher jobs
    SHELL=/bin/bash
    PATH=/sbin:/bin:/usr/sbin:/usr/bin
    MAILTO=""
    */15 * * * * root source /cvmfs/sft.cern.ch/lcg/views/LCG_101swan/x86_64-centos7-gcc8-opt/setup.sh && ( timeout 20s python -m ipykernel > /dev/null 2>&1 || true )
---
# Source: sciencebox/charts/swan/charts/cvmfs/templates/configmap-supervisord.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-cvmfs-cfgmap-supervisord-conf
  labels:
    helm.sh/chart: cvmfs-0.0.5
    app.kubernetes.io/name: cvmfs
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
data:
  supervisord.conf: |
    ; Directives for supervisord
    [supervisord]
    ;logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
    ;logfile_maxbytes=50MB                       ; (max main logfile bytes b4 rotation;default 50MB)
    ;logfile_backups=10                          ; (num of main logfile rotation backups;default 10)
    ;loglevel=info                               ; (log level;default info; others: debug,warn,trace)
    pidfile=/var/run/supervisord.pid             ; (supervisord pidfile;default supervisord.pid)
    nodaemon=true                                ; (start in foreground if true;default false)
    minfds=1024                                  ; (min. avail startup file descriptors;default 1024)
    minprocs=200                                 ; (min. avail process descriptors;default 200)
    ;umask=022                                   ; (process file creation umask;default 022)
    user=root                                    ; (default is current user, required if root)
    ;identifier=supervisor                       ; (supervisord identifier, default is 'supervisor')
    ;directory=/tmp                              ; (default is not to cd during start)
    ;nocleanup=true                              ; (don't clean up tempfiles at start;default false)
    ;childlogdir=/tmp                            ; ('AUTO' child log dir, default $TEMP)
    ;environment=KEY=value                       ; (key value pairs to add to environment)
    ;strip_ansi=false                            ; (strip ansi escape codes in logs; def. false)

    ; Allow using supervisorctl to interact with supervisord
    [unix_http_server]
    file=/var/run/supervisor/supervisor.sock     ; (the path to the socket file)
    ;chmod=0700                                  ; sockef file mode (default 0700)
    ;chown=nobody:nogroup                        ; socket file uid:gid owner
    username=admin                               ; (default is no username (open server))
    password=admin                               ; (default is no password (open server))
    [rpcinterface:supervisor]
    supervisor.rpcinterface_factory=supervisor.rpcinterface:make_main_rpcinterface
    [supervisorctl]
    serverurl=unix:///var/run/supervisor/supervisor.sock ; use a unix:// URL  for a unix socket
    username=admin                                       ; should be same as http_username if set
    password=admin                                       ; should be same as http_password if set
    ;prompt=mysupervisor                                 ; cmd line prompt (default "supervisor")
    ;history_file=~/.sc_history                          ; use readline history if available

    ; Load additional configuration files
    [include]
    files = /etc/supervisord.d/*.ini

    ; Quit supervisord if all controlled processes enter a failed state
    [eventlistener:watch_processes]
    command=bash -c "printf 'READY\n' && while read line; do kill -SIGQUIT $PPID; done < /dev/stdin"
    events=PROCESS_STATE_EXITED,PROCESS_STATE_FATAL
---
# Source: sciencebox/charts/swan/charts/cvmfs/templates/configmap-supervisord.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-cvmfs-cfgmap-supervisord-procs
  labels:
    helm.sh/chart: cvmfs-0.0.5
    app.kubernetes.io/name: cvmfs
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
data:

  mount-cvmfs-config.cern.ch.ini: |
    [program:cvmfs-cvmfs-config.cern.ch]
    command=/usr/bin/cvmfs2 -o rw,nodev,_netdev,fsname=cvmfs2,system_mount,allow_other,foreground,uid=998,gid=996 cvmfs-config.cern.ch /cvmfs/cvmfs-config.cern.ch
    startsecs=10
    startretries=5
    ;exitcodes=0,2
    ;stopsignal=QUIT
    ;stopwaitsecs=10
    ;user=cvmfs
    redirect_stderr=true
    stdout_logfile=/var/log/supervisor/cvmfs-cvmfs-config.cern.ch.log
    stdout_logfile_maxbytes=10MB
    ;stdout_logfile_backups=10
    ;environment=A=1,B=2

  mount-sft.cern.ch.ini: |
    [program:cvmfs-sft.cern.ch]
    command=/usr/bin/cvmfs2 -o rw,nodev,_netdev,fsname=cvmfs2,system_mount,allow_other,foreground,uid=998,gid=996 sft.cern.ch /cvmfs/sft.cern.ch
    startsecs=10
    startretries=5
    ;exitcodes=0,2
    ;stopsignal=QUIT
    ;stopwaitsecs=10
    ;user=cvmfs
    redirect_stderr=true
    stdout_logfile=/var/log/supervisor/cvmfs-sft.cern.ch.log
    stdout_logfile_maxbytes=10MB
    ;stdout_logfile_backups=10
    ;environment=A=1,B=2

  mount-sft-nightlies.cern.ch.ini: |
    [program:cvmfs-sft-nightlies.cern.ch]
    command=/usr/bin/cvmfs2 -o rw,nodev,_netdev,fsname=cvmfs2,system_mount,allow_other,foreground,uid=998,gid=996 sft-nightlies.cern.ch /cvmfs/sft-nightlies.cern.ch
    startsecs=10
    startretries=5
    ;exitcodes=0,2
    ;stopsignal=QUIT
    ;stopwaitsecs=10
    ;user=cvmfs
    redirect_stderr=true
    stdout_logfile=/var/log/supervisor/cvmfs-sft-nightlies.cern.ch.log
    stdout_logfile_maxbytes=10MB
    ;stdout_logfile_backups=10
    ;environment=A=1,B=2
---
# Source: sciencebox/charts/swan/charts/fusex/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-fusex-cfgmap-fuse-conf
  labels:
    helm.sh/chart: fusex-0.1.3
    app.kubernetes.io/name: fusex
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.86"
    app.kubernetes.io/managed-by: Helm
data:
  #
  # Helm interprets a value set to 0 as null and hence uses the default
  # This is buggy for us as it does not allow to override a 1 default with a 0.
  #
  # Here we check if the type of the values is int64 and, if so, we use it instead of the default.
  # Upstream tracker: https://github.com/helm/helm/issues/3164
  #
  fuse.eos.conf: |
    {
      "name": "eos",
      "hostport": "sciencebox-mgm.default.svc.cluster.local",
      "remotemountdir": "/eos",
      "localmountdir": "/eos",
      "auth": {
        "shared-mount": 1,
        "sss": 1,
        "ssskeytab": "/etc/eos.keytab",
        "gsi-first": 0,
        "krb5": 0,
        "oauth2": 1
      },
      "options": {
        "hide-versions": 0
      }
    }
---
# Source: sciencebox/charts/swan/charts/fusex/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-fusex-cfgmap-fusex-waitformgm
  labels:
    helm.sh/chart: fusex-0.1.3
    app.kubernetes.io/name: fusex
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.86"
    app.kubernetes.io/managed-by: Helm
data:
  fusex_waitformgm.sh: |
    #!/bin/bash
    set -x
    alias eos='eos -r 0 0'
    shopt -s expand_aliases

    init_probe() {
      local cmd=$@
      local max_wait=60
      local sleep=5
      start_time=$(date +%s)
      rc=-1
      while [ $rc -ne 0 ];
      do
        timeout --preserve-status $sleep $cmd >/dev/null 2>&1
        rc=$?

        # Bail out after max_wait
        tot_wait=$(($(date +%s)-start_time))
        echo "        $tot_wait seconds... (timeout at $max_wait)"
        if [ $tot_wait -ge $max_wait ]; then
          echo "ERROR: cmd \`$cmd\` failed after $tot_wait secs. Giving up."
          exit 1
        fi
        sleep $sleep
      done
    }

    # Wait for the MGM to be online
    echo "INFO: Checking the MGM is online..."
    echo "INFO: EOS_MGM_URL="$EOS_MGM_URL
    init_probe eos ns
    echo "INFO: MGM is online."
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/hub/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: hub
  labels:
    component: hub
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
data:
  fullname: ""
  fullname-dash: ""
  hub: "hub"
  hub-existing-secret: ""
  hub-existing-secret-or-default: "hub"
  hub-pvc: "hub-db-dir"
  proxy: "proxy"
  proxy-api: "proxy-api"
  proxy-http: "proxy-http"
  proxy-public: "proxy-public"
  proxy-public-tls: "proxy-public-tls-acme"
  proxy-public-manual-tls: "proxy-public-manual-tls"
  autohttps: "autohttps"
  user-scheduler-deploy: "user-scheduler"
  user-scheduler-lock: "user-scheduler-lock"
  user-placeholder: "user-placeholder"
  hook-image-awaiter: "hook-image-awaiter"
  hook-image-puller: "hook-image-puller"
  continuous-image-puller: "continuous-image-puller"
  singleuser: "singleuser"
  image-pull-secret: "image-pull-secret"
  ingress: "jupyterhub"
  priority: "my-release-default-priority"
  user-placeholder-priority: "my-release-user-placeholder-priority"
  user-scheduler: "my-release-user-scheduler"
  jupyterhub_config.py: |
    import glob
    import os
    import re
    import sys
  
    from binascii import a2b_hex
  
    from tornado.httpclient import AsyncHTTPClient
    from kubernetes import client
    from jupyterhub.utils import url_path_join
  
    # Make sure that modules placed in the same directory as the jupyterhub config are added to the pythonpath
    configuration_directory = os.path.dirname(os.path.realpath(__file__))
    sys.path.insert(0, configuration_directory)
  
    from z2jh import (
        get_config,
        set_config_if_not_none,
        get_name,
        get_name_env,
        get_secret_value,
    )
  
  
    def camelCaseify(s):
        """convert snake_case to camelCase
  
        For the common case where some_value is set from someValue
        so we don't have to specify the name twice.
        """
        return re.sub(r"_([a-z])", lambda m: m.group(1).upper(), s)
  
  
    # Configure JupyterHub to use the curl backend for making HTTP requests,
    # rather than the pure-python implementations. The default one starts
    # being too slow to make a large number of requests to the proxy API
    # at the rate required.
    AsyncHTTPClient.configure("tornado.curl_httpclient.CurlAsyncHTTPClient")
  
    c.JupyterHub.spawner_class = "kubespawner.KubeSpawner"
  
    # Connect to a proxy running in a different pod. Note that *_SERVICE_*
    # environment variables are set by Kubernetes for Services
    c.ConfigurableHTTPProxy.api_url = (
        f'http://{get_name("proxy-api")}:{get_name_env("proxy-api", "_SERVICE_PORT")}'
    )
    c.ConfigurableHTTPProxy.should_start = False
  
    # Do not shut down user pods when hub is restarted
    c.JupyterHub.cleanup_servers = False
  
    # Check that the proxy has routes appropriately setup
    c.JupyterHub.last_activity_interval = 60
  
    # Don't wait at all before redirecting a spawning user to the progress page
    c.JupyterHub.tornado_settings = {
        "slow_spawn_timeout": 0,
    }
  
  
    # configure the hub db connection
    db_type = get_config("hub.db.type")
    if db_type == "sqlite-pvc":
        c.JupyterHub.db_url = "sqlite:///jupyterhub.sqlite"
    elif db_type == "sqlite-memory":
        c.JupyterHub.db_url = "sqlite://"
    else:
        set_config_if_not_none(c.JupyterHub, "db_url", "hub.db.url")
    db_password = get_secret_value("hub.db.password", None)
    if db_password is not None:
        if db_type == "mysql":
            os.environ["MYSQL_PWD"] = db_password
        elif db_type == "postgres":
            os.environ["PGPASSWORD"] = db_password
        else:
            print(f"Warning: hub.db.password is ignored for hub.db.type={db_type}")
  
  
    # c.JupyterHub configuration from Helm chart's configmap
    for trait, cfg_key in (
        ("concurrent_spawn_limit", None),
        ("active_server_limit", None),
        ("base_url", None),
        ("allow_named_servers", None),
        ("named_server_limit_per_user", None),
        ("authenticate_prometheus", None),
        ("redirect_to_server", None),
        ("shutdown_on_logout", None),
        ("template_paths", None),
        ("template_vars", None),
    ):
        if cfg_key is None:
            cfg_key = camelCaseify(trait)
        set_config_if_not_none(c.JupyterHub, trait, "hub." + cfg_key)
  
    # hub_bind_url configures what the JupyterHub process within the hub pod's
    # container should listen to.
    hub_container_port = 8081
    c.JupyterHub.hub_bind_url = f"http://:{hub_container_port}"
  
    # hub_connect_url is the URL for connecting to the hub for use by external
    # JupyterHub services such as the proxy. Note that *_SERVICE_* environment
    # variables are set by Kubernetes for Services.
    c.JupyterHub.hub_connect_url = (
        f'http://{get_name("hub")}:{get_name_env("hub", "_SERVICE_PORT")}'
    )
  
    # implement common labels
    # this duplicates the jupyterhub.commonLabels helper
    common_labels = c.KubeSpawner.common_labels = {}
    common_labels["app"] = get_config(
        "nameOverride",
        default=get_config("Chart.Name", "jupyterhub"),
    )
    common_labels["heritage"] = "jupyterhub"
    chart_name = get_config("Chart.Name")
    chart_version = get_config("Chart.Version")
    if chart_name and chart_version:
        common_labels["chart"] = "{}-{}".format(
            chart_name,
            chart_version.replace("+", "_"),
        )
    release = get_config("Release.Name")
    if release:
        common_labels["release"] = release
  
    c.KubeSpawner.namespace = os.environ.get("POD_NAMESPACE", "default")
  
    # Max number of consecutive failures before the Hub restarts itself
    # requires jupyterhub 0.9.2
    set_config_if_not_none(
        c.Spawner,
        "consecutive_failure_limit",
        "hub.consecutiveFailureLimit",
    )
  
    for trait, cfg_key in (
        ("pod_name_template", None),
        ("start_timeout", None),
        ("image_pull_policy", "image.pullPolicy"),
        # ('image_pull_secrets', 'image.pullSecrets'), # Managed manually below
        ("events_enabled", "events"),
        ("extra_labels", None),
        ("extra_annotations", None),
        ("uid", None),
        ("fs_gid", None),
        ("service_account", "serviceAccountName"),
        ("storage_extra_labels", "storage.extraLabels"),
        # ("tolerations", "extraTolerations"), # Managed manually below
        ("node_selector", None),
        ("node_affinity_required", "extraNodeAffinity.required"),
        ("node_affinity_preferred", "extraNodeAffinity.preferred"),
        ("pod_affinity_required", "extraPodAffinity.required"),
        ("pod_affinity_preferred", "extraPodAffinity.preferred"),
        ("pod_anti_affinity_required", "extraPodAntiAffinity.required"),
        ("pod_anti_affinity_preferred", "extraPodAntiAffinity.preferred"),
        ("lifecycle_hooks", None),
        ("init_containers", None),
        ("extra_containers", None),
        ("mem_limit", "memory.limit"),
        ("mem_guarantee", "memory.guarantee"),
        ("cpu_limit", "cpu.limit"),
        ("cpu_guarantee", "cpu.guarantee"),
        ("extra_resource_limits", "extraResource.limits"),
        ("extra_resource_guarantees", "extraResource.guarantees"),
        ("environment", "extraEnv"),
        ("profile_list", None),
        ("extra_pod_config", None),
    ):
        if cfg_key is None:
            cfg_key = camelCaseify(trait)
        set_config_if_not_none(c.KubeSpawner, trait, "singleuser." + cfg_key)
  
    image = get_config("singleuser.image.name")
    if image:
        tag = get_config("singleuser.image.tag")
        if tag:
            image = "{}:{}".format(image, tag)
  
        c.KubeSpawner.image = image
  
    # Combine imagePullSecret.create (single), imagePullSecrets (list), and
    # singleuser.image.pullSecrets (list).
    image_pull_secrets = []
    if get_config("imagePullSecret.automaticReferenceInjection") and get_config(
        "imagePullSecret.create"
    ):
        image_pull_secrets.append(get_name("image-pull-secret"))
    if get_config("imagePullSecrets"):
        image_pull_secrets.extend(get_config("imagePullSecrets"))
    if get_config("singleuser.image.pullSecrets"):
        image_pull_secrets.extend(get_config("singleuser.image.pullSecrets"))
    if image_pull_secrets:
        c.KubeSpawner.image_pull_secrets = image_pull_secrets
  
    # scheduling:
    if get_config("scheduling.userScheduler.enabled"):
        c.KubeSpawner.scheduler_name = get_name("user-scheduler")
    if get_config("scheduling.podPriority.enabled"):
        c.KubeSpawner.priority_class_name = get_name("priority")
  
    # add node-purpose affinity
    match_node_purpose = get_config("scheduling.userPods.nodeAffinity.matchNodePurpose")
    if match_node_purpose:
        node_selector = dict(
            matchExpressions=[
                dict(
                    key="hub.jupyter.org/node-purpose",
                    operator="In",
                    values=["user"],
                )
            ],
        )
        if match_node_purpose == "prefer":
            c.KubeSpawner.node_affinity_preferred.append(
                dict(
                    weight=100,
                    preference=node_selector,
                ),
            )
        elif match_node_purpose == "require":
            c.KubeSpawner.node_affinity_required.append(node_selector)
        elif match_node_purpose == "ignore":
            pass
        else:
            raise ValueError(
                "Unrecognized value for matchNodePurpose: %r" % match_node_purpose
            )
  
    # Combine the common tolerations for user pods with singleuser tolerations
    scheduling_user_pods_tolerations = get_config("scheduling.userPods.tolerations", [])
    singleuser_extra_tolerations = get_config("singleuser.extraTolerations", [])
    tolerations = scheduling_user_pods_tolerations + singleuser_extra_tolerations
    if tolerations:
        c.KubeSpawner.tolerations = tolerations
  
    # Configure dynamically provisioning pvc
    storage_type = get_config("singleuser.storage.type")
    if storage_type == "dynamic":
        pvc_name_template = get_config("singleuser.storage.dynamic.pvcNameTemplate")
        c.KubeSpawner.pvc_name_template = pvc_name_template
        volume_name_template = get_config("singleuser.storage.dynamic.volumeNameTemplate")
        c.KubeSpawner.storage_pvc_ensure = True
        set_config_if_not_none(
            c.KubeSpawner, "storage_class", "singleuser.storage.dynamic.storageClass"
        )
        set_config_if_not_none(
            c.KubeSpawner,
            "storage_access_modes",
            "singleuser.storage.dynamic.storageAccessModes",
        )
        set_config_if_not_none(
            c.KubeSpawner, "storage_capacity", "singleuser.storage.capacity"
        )
  
        # Add volumes to singleuser pods
        c.KubeSpawner.volumes = [
            {
                "name": volume_name_template,
                "persistentVolumeClaim": {"claimName": pvc_name_template},
            }
        ]
        c.KubeSpawner.volume_mounts = [
            {
                "mountPath": get_config("singleuser.storage.homeMountPath"),
                "name": volume_name_template,
            }
        ]
    elif storage_type == "static":
        pvc_claim_name = get_config("singleuser.storage.static.pvcName")
        c.KubeSpawner.volumes = [
            {"name": "home", "persistentVolumeClaim": {"claimName": pvc_claim_name}}
        ]
  
        c.KubeSpawner.volume_mounts = [
            {
                "mountPath": get_config("singleuser.storage.homeMountPath"),
                "name": "home",
                "subPath": get_config("singleuser.storage.static.subPath"),
            }
        ]
  
    # Inject singleuser.extraFiles as volumes and volumeMounts with data loaded from
    # the dedicated k8s Secret prepared to hold the extraFiles actual content.
    extra_files = get_config("singleuser.extraFiles", {})
    if extra_files:
        volume = {
            "name": "files",
        }
        items = []
        for file_key, file_details in extra_files.items():
            # Each item is a mapping of a key in the k8s Secret to a path in this
            # abstract volume, the goal is to enable us to set the mode /
            # permissions only though so we don't change the mapping.
            item = {
                "key": file_key,
                "path": file_key,
            }
            if "mode" in file_details:
                item["mode"] = file_details["mode"]
            items.append(item)
        volume["secret"] = {
            "secretName": get_name("singleuser"),
            "items": items,
        }
        c.KubeSpawner.volumes.append(volume)
  
        volume_mounts = []
        for file_key, file_details in extra_files.items():
            volume_mounts.append(
                {
                    "mountPath": file_details["mountPath"],
                    "subPath": file_key,
                    "name": "files",
                }
            )
        c.KubeSpawner.volume_mounts.extend(volume_mounts)
  
    # Inject extraVolumes / extraVolumeMounts
    c.KubeSpawner.volumes.extend(get_config("singleuser.storage.extraVolumes", []))
    c.KubeSpawner.volume_mounts.extend(
        get_config("singleuser.storage.extraVolumeMounts", [])
    )
  
    c.JupyterHub.services = []
  
    if get_config("cull.enabled", False):
        cull_cmd = ["python3", "-m", "jupyterhub_idle_culler"]
        base_url = c.JupyterHub.get("base_url", "/")
        cull_cmd.append("--url=http://localhost:8081" + url_path_join(base_url, "hub/api"))
  
        cull_timeout = get_config("cull.timeout")
        if cull_timeout:
            cull_cmd.append("--timeout=%s" % cull_timeout)
  
        cull_every = get_config("cull.every")
        if cull_every:
            cull_cmd.append("--cull-every=%s" % cull_every)
  
        cull_concurrency = get_config("cull.concurrency")
        if cull_concurrency:
            cull_cmd.append("--concurrency=%s" % cull_concurrency)
  
        if get_config("cull.users"):
            cull_cmd.append("--cull-users")
  
        if get_config("cull.removeNamedServers"):
            cull_cmd.append("--remove-named-servers")
  
        cull_max_age = get_config("cull.maxAge")
        if cull_max_age:
            cull_cmd.append("--max-age=%s" % cull_max_age)
  
        c.JupyterHub.services.append(
            {
                "name": "cull-idle",
                "admin": True,
                "command": cull_cmd,
            }
        )
  
    for key, service in get_config("hub.services", {}).items():
        # c.JupyterHub.services is a list of dicts, but
        # hub.services is a dict of dicts to make the config mergable
        service.setdefault("name", key)
  
        # As the api_token could be exposed in hub.existingSecret, we need to read
        # it it from there or fall back to the chart managed k8s Secret's value.
        service.pop("apiToken", None)
        service["api_token"] = get_secret_value(f"hub.services.{key}.apiToken")
  
        c.JupyterHub.services.append(service)
  
  
    set_config_if_not_none(c.Spawner, "cmd", "singleuser.cmd")
    set_config_if_not_none(c.Spawner, "default_url", "singleuser.defaultUrl")
  
    cloud_metadata = get_config("singleuser.cloudMetadata", {})
  
    if cloud_metadata.get("blockWithIptables") == True:
        # Use iptables to block access to cloud metadata by default
        network_tools_image_name = get_config("singleuser.networkTools.image.name")
        network_tools_image_tag = get_config("singleuser.networkTools.image.tag")
        ip_block_container = client.V1Container(
            name="block-cloud-metadata",
            image=f"{network_tools_image_name}:{network_tools_image_tag}",
            command=[
                "iptables",
                "-A",
                "OUTPUT",
                "-d",
                cloud_metadata.get("ip", "169.254.169.254"),
                "-j",
                "DROP",
            ],
            security_context=client.V1SecurityContext(
                privileged=True,
                run_as_user=0,
                capabilities=client.V1Capabilities(add=["NET_ADMIN"]),
            ),
        )
  
        c.KubeSpawner.init_containers.append(ip_block_container)
  
  
    if get_config("debug.enabled", False):
        c.JupyterHub.log_level = "DEBUG"
        c.Spawner.debug = True
  
    # load /usr/local/etc/jupyterhub/jupyterhub_config.d config files
    config_dir = "/usr/local/etc/jupyterhub/jupyterhub_config.d"
    if os.path.isdir(config_dir):
        for file_path in sorted(glob.glob(f"{config_dir}/*.py")):
            file_name = os.path.basename(file_path)
            print(f"Loading {config_dir} config: {file_name}")
            with open(file_path) as f:
                file_content = f.read()
            # compiling makes debugging easier: https://stackoverflow.com/a/437857
            exec(compile(source=file_content, filename=file_name, mode="exec"))
  
    # load potentially seeded secrets
    #
    # NOTE: ConfigurableHTTPProxy.auth_token is set through an environment variable
    #       that is set using the chart managed secret.
    c.JupyterHub.cookie_secret = get_secret_value("hub.config.JupyterHub.cookie_secret")
    # NOTE: CryptKeeper.keys should be a list of strings, but we have encoded as a
    #       single string joined with ; in the k8s Secret.
    #
    c.CryptKeeper.keys = get_secret_value("hub.config.CryptKeeper.keys").split(";")
  
    # load hub.config values, except potentially seeded secrets already loaded
    for app, cfg in get_config("hub.config", {}).items():
        if app == "JupyterHub":
            cfg.pop("proxy_auth_token", None)
            cfg.pop("cookie_secret", None)
            cfg.pop("services", None)
        elif app == "ConfigurableHTTPProxy":
            cfg.pop("auth_token", None)
        elif app == "CryptKeeper":
            cfg.pop("keys", None)
        c[app].update(cfg)
  
    # execute hub.extraConfig entries
    for key, config_py in sorted(get_config("hub.extraConfig", {}).items()):
        print("Loading extra config: %s" % key)
        exec(config_py)
  z2jh.py: |
    """
    Utility methods for use in jupyterhub_config.py and dynamic subconfigs.
  
    Methods here can be imported by extraConfig in values.yaml
    """
    from collections import Mapping
    from functools import lru_cache
    import os
  
    import yaml
  
    # memoize so we only load config once
    @lru_cache()
    def _load_config():
        """Load the Helm chart configuration used to render the Helm templates of
        the chart from a mounted k8s Secret, and merge in values from an optionally
        mounted secret (hub.existingSecret)."""
  
        cfg = {}
        for source in ("secret/values.yaml", "existing-secret/values.yaml"):
            path = f"/usr/local/etc/jupyterhub/{source}"
            if os.path.exists(path):
                print(f"Loading {path}")
                with open(path) as f:
                    values = yaml.safe_load(f)
                cfg = _merge_dictionaries(cfg, values)
            else:
                print(f"No config at {path}")
        return cfg
  
  
    @lru_cache()
    def _get_config_value(key):
        """Load value from the k8s ConfigMap given a key."""
  
        path = f"/usr/local/etc/jupyterhub/config/{key}"
        if os.path.exists(path):
            with open(path) as f:
                return f.read()
        else:
            raise Exception(f"{path} not found!")
  
  
    @lru_cache()
    def get_secret_value(key, default="never-explicitly-set"):
        """Load value from the user managed k8s Secret or the default k8s Secret
        given a key."""
  
        for source in ("existing-secret", "secret"):
            path = f"/usr/local/etc/jupyterhub/{source}/{key}"
            if os.path.exists(path):
                with open(path) as f:
                    return f.read()
        if default != "never-explicitly-set":
            return default
        raise Exception(f"{key} not found in either k8s Secret!")
  
  
    def get_name(name):
        """Returns the fullname of a resource given its short name"""
        return _get_config_value(name)
  
  
    def get_name_env(name, suffix=""):
        """Returns the fullname of a resource given its short name along with a
        suffix, converted to uppercase with dashes replaced with underscores. This
        is useful to reference named services associated environment variables, such
        as PROXY_PUBLIC_SERVICE_PORT."""
        env_key = _get_config_value(name) + suffix
        env_key = env_key.upper().replace("-", "_")
        return os.environ[env_key]
  
  
    def _merge_dictionaries(a, b):
        """Merge two dictionaries recursively.
  
        Simplified From https://stackoverflow.com/a/7205107
        """
        merged = a.copy()
        for key in b:
            if key in a:
                if isinstance(a[key], Mapping) and isinstance(b[key], Mapping):
                    merged[key] = _merge_dictionaries(a[key], b[key])
                else:
                    merged[key] = b[key]
            else:
                merged[key] = b[key]
        return merged
  
  
    def get_config(key, default=None):
        """
        Find a config item of a given name & return it
  
        Parses everything as YAML, so lists and dicts are available too
  
        get_config("a.b.c") returns config['a']['b']['c']
        """
        value = _load_config()
        # resolve path in yaml
        for level in key.split("."):
            if not isinstance(value, dict):
                # a parent is a scalar or null,
                # can't resolve full path
                return default
            if level not in value:
                return default
            else:
                value = value[level]
        return value
  
  
    def set_config_if_not_none(cparent, name, key):
        """
        Find a config item of a given name, set the corresponding Jupyter
        configuration item if not None
        """
        data = get_config(key)
        if data is not None:
            setattr(cparent, name, data)
  checksum_hook-image-puller: "8b31f335c1589552c364d3af6df9d43b48701925c8085d4b96fcd563c600ff67"
---
# Source: sciencebox/charts/swan/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: swan-scripts
  namespace: sciencebox-0.0.7.tgz
data:
  options_form_config.json: |
    {
      "header": "Specify the parameters that will be used to contextualise the container which is created for you. See <a target='_blank' href='https://swan.web.cern.ch'>SWAN service website</a> for more details and contact to administrators.",
      "options": [
        {
          "type": "label",
          "label": {
            "value": "label-rr",
            "text": "Recommended releases (General Purpose)"
          }
        },
        {
          "type": "selection",
          "lcg": {
            "value": "LCG_99",
            "text": "99"
          },
          "platforms": [
            {
              "value": "x86_64-centos7-gcc10-opt",
              "text": "CentOS 7 (gcc10)"
            },
            {
              "value": "x86_64-centos7-gcc8-opt",
              "text": "CentOS 7 (gcc8)"
            }
          ],
          "cores": [
            {
              "value": "2",
              "text": "2"
            },
            {
              "value": "4",
              "text": "4"
            }
          ],
          "memory": [
            {
              "value": "8",
              "text": "8 GB"
            },
            {
              "value": "10",
              "text": "10 GB"
            }
          ],
          "clusters": [
            {
              "value": "none",
              "text": "None"
            }
          ]
        },
        {
          "type": "selection",
          "lcg": {
            "value": "LCG_99python2",
            "text": "99 Python2"
          },
          "platforms": [
            {
              "value": "x86_64-centos7-gcc8-opt",
              "text": "CentOS 7 (gcc8)"
            }
          ],
          "cores": [
            {
              "value": "2",
              "text": "2"
            },
            {
              "value": "4",
              "text": "4"
            }
          ],
          "memory": [
            {
              "value": "8",
              "text": "8 GB"
            },
            {
              "value": "10",
              "text": "10 GB"
            }
          ],
          "clusters": [
            {
              "value": "none",
              "text": "None"
            }
          ]
        },
        {
          "type": "label",
          "label": {
            "value": "empty-drg",
            "text": ""
          }
        },
        {
          "type": "label",
          "label": {
            "value": "label-drg",
            "text": "Development releases (GPU)"
          }
        },
        {
          "type": "selection",
          "lcg": {
            "value": "LCG_99cuda",
            "text": "99 Cuda 10.1 Python3"
          },
          "platforms": [
            {
              "value": "x86_64-centos7-gcc8-opt",
              "text": "CentOS 7 (gcc8)"
            }
          ],
          "cores": [
            {
              "value": "2",
              "text": "2CPU, 1GPU"
            }
          ],
          "memory": [
            {
              "value": "16",
              "text": "16 GB"
            }
          ],
          "clusters": [
            {
              "value": "none",
              "text": "None"
            }
          ]
        },
        {
          "type": "selection",
          "lcg": {
            "value": "dev4cuda/latest",
            "text": "Bleeding Edge Cuda 10"
          },
          "platforms": [
            {
              "value": "x86_64-centos7-gcc8-opt",
              "text": "CentOS 7 (gcc8)"
            }
          ],
          "cores": [
            {
              "value": "2",
              "text": "2CPU, 1GPU"
            }
          ],
          "memory": [
            {
              "value": "16",
              "text": "16 GB"
            }
          ],
          "clusters": [
            {
              "value": "none",
              "text": "None"
            }
          ]
        },
        {
          "type": "label",
          "label": {
            "value": "empty-dr",
            "text": ""
          }
        },
        {
          "type": "label",
          "label": {
            "value": "label-dr",
            "text": "Development releases (might be unstable)"
          }
        },
        {
          "type": "selection",
          "lcg": {
            "value": "dev3/latest",
            "text": "Bleeding Edge Python3"
          },
          "platforms": [
            {
              "value": "x86_64-centos7-gcc8-opt",
              "text": "CentOS 7 (gcc8)"
            }
          ],
          "cores": [
            {
              "value": "2",
              "text": "2"
            }
          ],
          "memory": [
            {
              "value": "8",
              "text": "8 GB"
            }
          ],
          "clusters": [
            {
              "value": "none",
              "text": "None"
            },
            {
              "value": "analytix",
              "text": "General Purpose (Analytix)"
            },
            {
              "value": "k8s",
              "text": "Cloud Containers (K8s)"
            },
            {
              "value": "hadoop-qa",
              "text": "QA"
            }
          ]
        },
        {
          "type": "selection",
          "lcg": {
            "value": "dev3python2/latest",
            "text": "Bleeding Edge Python2"
          },
          "platforms": [
            {
              "value": "x86_64-centos7-gcc8-opt",
              "text": "CentOS 7 (gcc8)"
            }
          ],
          "cores": [
            {
              "value": "2",
              "text": "2"
            }
          ],
          "memory": [
            {
              "value": "8",
              "text": "8 GB"
            }
          ],
          "clusters": [
            {
              "value": "none",
              "text": "None"
            },
            {
              "value": "analytix",
              "text": "General Purpose (Analytix)"
            },
            {
              "value": "k8s",
              "text": "Cloud Containers (K8s)"
            },
            {
              "value": "hadoop-qa",
              "text": "QA"
            }
          ]
        },
        {
          "type": "label",
          "label": {
            "value": "empty2",
            "text": ""
          }
        },
        {
          "type": "label",
          "label": {
            "value": "label3",
            "text": "Other releases"
          }
        },
        {
          "type": "selection",
          "lcg": {
            "value": "LCG_97a",
            "text": "97a"
          },
          "platforms": [
            {
              "value": "x86_64-centos7-gcc9-opt",
              "text": "CentOS 7 (gcc9)"
            },
            {
              "value": "x86_64-centos7-gcc8-opt",
              "text": "CentOS 7 (gcc8)"
            }
          ],
          "cores": [
            {
              "value": "2",
              "text": "2"
            },
            {
              "value": "4",
              "text": "4"
            }
          ],
          "memory": [
            {
              "value": "8",
              "text": "8 GB"
            },
            {
              "value": "10",
              "text": "10 GB"
            }
          ],
          "clusters": [
            {
              "value": "none",
              "text": "None"
            },
            {
              "value": "analytix",
              "text": "General Purpose (Analytix)"
            },
            {
              "value": "k8s",
              "text": "Cloud Containers (K8s)"
            },
            {
              "value": "hadoop-qa",
              "text": "QA"
            }
          ]
        },
        {
          "type": "selection",
          "lcg": {
            "value": "LCG_97apython3",
            "text": "97a Python3"
          },
          "platforms": [
            {
              "value": "x86_64-centos7-gcc9-opt",
              "text": "CentOS 7 (gcc9)"
            },
            {
              "value": "x86_64-centos7-gcc8-opt",
              "text": "CentOS 7 (gcc8)"
            }
          ],
          "cores": [
            {
              "value": "2",
              "text": "2"
            },
            {
              "value": "4",
              "text": "4"
            }
          ],
          "memory": [
            {
              "value": "8",
              "text": "8 GB"
            },
            {
              "value": "10",
              "text": "10 GB"
            }
          ],
          "clusters": [
            {
              "value": "none",
              "text": "None"
            },
            {
              "value": "analytix",
              "text": "General Purpose (Analytix)"
            },
            {
              "value": "k8s",
              "text": "Cloud Containers (K8s)"
            },
            {
              "value": "hadoop-qa",
              "text": "QA"
            }
          ]
        }
      ]
    }
  jupyterhub_form.html: |-
    <style> .nb{ font-weight:normal } </style>
    <style> .nbs{ font-weight:normal; font-size:small } </style>
    <script type="text/javascript">
    <!--
       function toggle_visibility(id) {
          var e = document.getElementById(id);
          if(e.style.display == 'block')
             e.style.display = 'none';
          else
             e.style.display = 'block';
       }
    //-->
    </script>
    <br>
    <label for="placeholder">
    <span class='nb'>Specify the parameters that will be used to contextualise the container which is created for you. See <a target="_blank" href="https://swan.docs.cern.ch/">the online SWAN Help</a> for more details.</span>
    </label>
    <br><br>
    <label for="LCG-rel">Software stack <a href="#" onclick="toggle_visibility('lcgReleaseDetails');"><span class='nbs'>more...</span></a>
    <div style="display:none;" id="lcgReleaseDetails">
       <span class='nb'>The software stack to associate to the container. See the <a target="_blank" href="http://lcginfo.cern.ch/">LCG package info</a> page.</span>
    </div>
    </label>
    <select name="LCG-rel">
        <option disabled="" value="label1" style="border-bottom: 1px solid rgba(153, 153, 153, 0.3); margin: -10px 0px 4px;">
            Recommended releases (General Purpose)</option>
        <option value="LCG_99">99</option>
        <option value="LCG_99python2">99 Python2</option>
        <option disabled="" value="empty1" style="border-bottom: 1px solid rgba(153, 153, 153, 0.3); margin: -10px 0px 4px;">
        </option>
        <option disabled="" value="label2" style="border-bottom: 1px solid rgba(153, 153, 153, 0.3); margin: -10px 0px 4px;">
            Development releases (might be unstable)</option>
        <option value="dev3/latest">Bleeding Edge</option>
        <option value="dev3python2/latest">Bleeding Edge Python2</option>
        <option disabled="" value="empty2" style="border-bottom: 1px solid rgba(153, 153, 153, 0.3); margin: -10px 0px 4px;">
        </option>
    </select>
    <br>
    <label for="scriptenv">Environment script <a href="#" onclick="toggle_visibility('scriptenvDetails');"><span class='nbs'>more...</span></a>
    <div style="display:none;" id="scriptenvDetails">
       <span class='nb'>User-provided bash script to define custom environment variables. The variable CERNBOX_HOME is resolved to the proper /eos/user/u/username directory.</span>
    </div>
    </label>
    <input type="text" name="scriptenv" placeholder="e.g. $CERNBOX_HOME/MySWAN/myscript.sh">
    <br>
  
    <input type="hidden" name="platform" value="x86_64-centos7-gcc8-opt"/>
    <input type="hidden" name="ncores" value="2"/>
    <input type="hidden" name="memory" value="8"/>
    <input type="hidden" name="spark-cluster" value="none"/>
  swan_config.py: "import logging, os, subprocess\n\nfrom kubernetes import client\nfrom
    kubernetes.client.rest import ApiException\n\n\"\"\"\nClass handling KubeSpawner.modify_pod_hook(spawner,pod)
    call\n\"\"\"\n\nclass SwanPodHookHandler:\n    def __init__(self, spawner, pod):\n
    \       \"\"\"\n        :type spawner: swanspawner.SwanKubeSpawner\n        :type
    pod: client.V1Pod\n        \"\"\"\n        self.spawner = spawner\n        self.pod
    = pod\n\n    def get_swan_user_pod(self):\n\n        # pod labels\n        pod_labels
    = dict(\n            lcg_release = self.spawner.user_options[self.spawner.lcg_rel_field].split('/')[0],\n
    \           swan_user = self.spawner.user.name\n        )\n\n        # update pod
    labels\n        self.pod.metadata.labels.update(\n            pod_labels\n        )\n\n
    \       # init pod affinity\n        self.pod.spec.affinity = self._init_pod_affinity(pod_labels)\n\n
    \       if self._gpu_enabled():\n            # currently no cern customisation required\n
    \           self.pod.spec.volumes.append(\n                client.V1Volume(\n                    host_path=client.V1HostPathVolumeSource(path=\"/opt/nvidia-driver\"),\n
    \                   name='nvidia-driver'\n                )\n            )\n\n            notebook_container
    = self._get_pod_container('notebook')\n\n            notebook_container.volume_mounts.append(\n
    \               client.V1VolumeMount(\n                name='nvidia-driver',\n                mount_path='/opt/nvidia-driver'\n
    \               )\n            )\n\n            notebook_container.env = self._add_or_replace_by_name(\n
    \               notebook_container.env,\n                client.V1EnvVar(\n                    name='NVIDIA_LIB_PATH',\n
    \                   value='/opt/nvidia-driver/lib64'\n                ),\n            )\n\n
    \           notebook_container.env = self._add_or_replace_by_name(\n                notebook_container.env,\n
    \               client.V1EnvVar(\n                    name='NVIDIA_PATH',\n                    value='/opt/nvidia-driver/bin'\n
    \               ),\n            )\n\n        # Disable adding environment variables
    from Kubernetes services in the same namespace\n        self.pod.spec.enable_service_links
    = False\n\n        return self.pod\n\n    def _gpu_enabled(self):\n        \"\"\"\n
    \       Helper function to determine if gpu is allowed for given spawn\n        raise
    exception if user has not access to the gpu\n        return True if gpu is selected
    and user has access to gpu\n        return False if gpu is not selected\n        \"\"\"\n\n
    \       user_roles = self.spawner.user_roles\n        lcg_rel = self.spawner.user_options[self.spawner.lcg_rel_field]\n\n
    \       if \"cu\" in lcg_rel:\n            return True\n        else:\n            return
    False\n\n    def _init_pod_affinity(self, pod_labels):\n        \"\"\"\n        schedule
    pods to nodes that satisfy the specified label/affinity expressions \n        \"\"\"\n
    \       try:\n            del pod_labels[\"swan_user\"]\n        except KeyError:\n
    \           pass\n        aff = client.V1Affinity()\n        pod_affinity = client.V1PodAffinity(\n
    \           preferred_during_scheduling_ignored_during_execution=[client.V1WeightedPodAffinityTerm(\n
    \               pod_affinity_term=client.V1PodAffinityTerm(\n                    label_selector=client.V1LabelSelector(\n
    \                       match_labels=pod_labels\n                    ),\n                    topology_key=\"kubernetes.io/hostname\"\n
    \               ),\n                weight=100\n            )]\n        )\n        aff.pod_affinity
    = pod_affinity\n        return aff\n\n    def _get_pod_container(self, container_name):\n
    \       \"\"\"\n        :returns: required container from pod spec\n        :rtype:
    client.V1Container\n        \"\"\"\n        for container in self.pod.spec.containers:\n
    \           if container.name == container_name:\n                return container\n\n
    \       return None\n\n    def _add_or_replace_by_name(self, list, element):\n        found
    = False\n        for list_index in range(0, len(list)):\n            if list[list_index].to_dict().get(\"name\")
    == element.to_dict().get(\"name\"):\n                list[list_index] = element\n
    \               found = True\n                break\n\n        if not found:\n            list.append(element)\n\n
    \       return list\n\n# https://jupyterhub-kubespawner.readthedocs.io/en/latest/spawner.html\n#
    This is defined in the configuration to allow overring iindependently \n# of which
    config file is loaded first\n# c.SwanKubeSpawner.modify_pod_hook = swan_pod_hook\ndef
    swan_pod_hook(spawner, pod):\n    \"\"\"\n    :param spawner: Swan Kubernetes Spawner\n
    \   :type spawner: swanspawner.SwanKubeSpawner\n    :param pod: default pod definition
    set by jupyterhub\n    :type pod: client.V1Pod\n\n    :returns: dynamically customized
    pod specification for user session\n    :rtype: client.V1Pod\n    \"\"\"\n    pod_hook_handler
    = SwanPodHookHandler(spawner, pod)\n    return pod_hook_handler.get_swan_user_pod()\n\n\"\"\"\nConfiguration
    for JupyterHub\n\"\"\"\nc.SwanKubeSpawner.modify_pod_hook = swan_pod_hook\n\n\n#
    Hub services\n# FIXME port is not exposed so it cannot be accessed. Maybe we should
    run this separately?\n# if get_config(\"custom.notificationsService\", True):\n#
    \    c.JupyterHub.services.append(\n#         {\n#             'name': 'notifications',\n#
    \            'command': 'swannotificationsservice --port 8989'.split(),\n#             'url':
    'http://hub:8989'\n#         }\n#     )\n\n# Culling of users and ticket refresh\nif
    get_config(\"custom.cull.enabled\", False):\n    cull_cmd = [\"swanculler\"]\n    base_url
    = c.JupyterHub.get(\"base_url\", \"/\")\n    cull_cmd.append(\"--url=http://localhost:8081\"
    + url_path_join(base_url, \"hub/api\"))\n\n    cull_timeout = get_config(\"custom.cull.timeout\")\n
    \   if cull_timeout:\n        cull_cmd.append(\"--timeout=%s\" % cull_timeout)\n\n
    \   cull_every = get_config(\"custom.cull.every\")\n    if cull_every:\n        cull_cmd.append(\"--cull-every=%s\"
    % cull_every)\n\n    if get_config(\"custom.cull.users\"):\n        cull_cmd.append(\"--cull-users=True\")\n\n
    \   if get_config(\"custom.cull.removeNamedServers\"):\n        cull_cmd.append(\"--remove-named-servers\")\n\n
    \   cull_max_age = get_config(\"custom.cull.maxAge\")\n    if cull_max_age:\n        cull_cmd.append(\"--max-age=%s\"
    % cull_max_age)\n    \n    check_eos = get_config('custom.cull.checkEosAuth', False)\n
    \   if not check_eos:\n        cull_cmd.append(\"--disable-hooks=True\")\n    \n
    \   hooks_dir = get_config('custom.cull.hooksDir')\n    if hooks_dir:\n        cull_cmd.append(f\"--hooks-dir={hooks_dir}\")\n\n
    \   c.JupyterHub.services.append(\n        {\n            \"name\": \"cull-idle\",\n
    \           \"admin\": True,\n            \"command\": cull_cmd,\n        }\n    )\n\n\n#
    Init lists for volumes and volume_mounts\nc.SwanKubeSpawner.volumes = []\nc.SwanKubeSpawner.volume_mounts
    = []\n\n# add /dev/shm (for pyTorch and others)\nc.SwanKubeSpawner.volumes.append(\n
    \   client.V1Volume(\n        name='devshm',\n       empty_dir=client.V1EmptyDirVolumeSource(\n
    \           medium='Memory'\n        )\n    )\n)\nc.SwanKubeSpawner.volume_mounts.append(\n
    \   client.V1VolumeMount(\n        name='devshm',\n        mount_path='/dev/shm',\n
    \   )\n)\n\n# Manage EOS access\nif get_config(\"custom.eos.deployDaemonSet\", False):\n
    \   # Access via bind-mount from the host\n    logging.info(\"EOS access via DaemonSet\")\n
    \   c.SwanKubeSpawner.volume_mounts.append(\n        client.V1VolumeMount(\n            name='eos',\n
    \           mount_path='/eos',\n            mount_propagation='HostToContainer'\n
    \       ),\n    )\n    c.SwanKubeSpawner.volumes.append(\n        client.V1Volume(\n
    \           name='eos',\n            host_path=client.V1HostPathVolumeSource(\n
    \               path='/var/eos'\n            )\n        ),\n    )\nelif (get_config(\"custom.eos.deployCsiDriver\",
    False) or \\\n        get_config(\"custom.eos.useCsiDriver\", False)):\n    # Access
    via CSI driver (still a bind-mount in practical terms)\n    logging.info(\"EOS access
    via CSI driver\")\n    c.SwanKubeSpawner.volume_mounts.append(\n        client.V1VolumeMount(\n
    \           name='eos',\n            mount_path='/eos',\n            mount_propagation='HostToContainer'\n
    \       ),\n    )\n    c.SwanKubeSpawner.volumes.append(\n        client.V1Volume(\n
    \           name='eos',\n            host_path=client.V1HostPathVolumeSource(\n
    \               path='/var/eos'\n            )\n        ),\n    )\nelse:\n    #
    No access to EOS provided\n    logging.warn(\"EOS access not provided. Make sure
    you use a scratch space as home directory (local_home: true)\")\n    pass\n\n# Manage
    CVMFS access\nif get_config(\"custom.cvmfs.deployDaemonSet\", False):\n    # Access
    via bind-mount from the host\n    logging.info(\"CVMFS access via DaemonSet\")\n
    \   c.SwanKubeSpawner.volumes.append(\n        client.V1Volume(\n            name='cvmfs',\n
    \           host_path=client.V1HostPathVolumeSource(\n                path='/var/cvmfs'\n
    \           )\n        )\n    )\n    c.SwanKubeSpawner.volume_mounts.append(\n        client.V1VolumeMount(\n
    \           name='cvmfs',\n            mount_path='/cvmfs',\n            mount_propagation='HostToContainer'\n
    \       )\n    )\nelif (get_config(\"custom.cvmfs.deployCsiDriver\", False) or \\\n
    \       get_config(\"custom.cvmfs.useCsiDriver\", False)):\n    # Access via CSI
    driver (persistent volume claims)\n    logging.info(\"CVMFS access via CSI driver\")\n
    \   cvmfs_repos = get_config('custom.cvmfs.repositories', [])\n    for cvmfs_repo_path
    in cvmfs_repos:\n        cvmfs_repo_id = cvmfs_repo_path['mount'].replace('.', '-')\n
    \       c.SwanKubeSpawner.volumes.append(\n            client.V1Volume(\n                name='cvmfs-'+cvmfs_repo_id,\n
    \               persistent_volume_claim=client.V1PersistentVolumeClaimVolumeSource(\n
    \                   claim_name='cvmfs-'+cvmfs_repo_id+'-pvc'\n                )\n
    \           )\n        )\n        c.SwanKubeSpawner.volume_mounts.append(\n            client.V1VolumeMount(\n
    \               name='cvmfs-'+cvmfs_repo_id,\n                mount_path='/cvmfs/'+cvmfs_repo_path['mount'],\n
    \               read_only=True\n            )\n        )\nelse:\n    # No access
    to CVMFS provided -- Nothing will work.\n    logging.warning(\"CVMFS access not
    provided -- singleuser session will fail. Please review your configuration.\")\n
    \   pass\n\n# Required for swan systemuser.sh\nc.SwanKubeSpawner.cmd = None\n"
---
# Source: sciencebox/templates/sciencebox-landing-page.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sciencebox-landing-page-cfgmap
  labels:
data:
  index.html: |-
    
    <!DOCTYPE html>
    <!--[if IEMobile 7]><html class="iem7"  lang="en" dir="ltr"><![endif]-->
    <!--[if lte IE 6]><html class="ie6 ie6-7 ie6-8"  lang="en" dir="ltr"><![endif]-->
    <!--[if (IE 7)&(!IEMobile)]><html class="ie7 ie6-7 ie6-8"  lang="en" dir="ltr"><![endif]-->
    <!--[if IE 8]><html class="ie8 ie6-8"  lang="en" dir="ltr"><![endif]-->
    <!--[if (gte IE 9)|(gt IEMobile 7)]><!--><html  lang="en" dir="ltr"
      xmlns:content="//purl.org/rss/1.0/modules/content/"
      xmlns:dc="//purl.org/dc/terms/"
      xmlns:foaf="//xmlns.com/foaf/0.1/"
      xmlns:og="//ogp.me/ns#"
      xmlns:rdfs="//www.w3.org/2000/01/rdf-schema#"
      xmlns:sioc="//rdfs.org/sioc/ns#"
      xmlns:sioct="//rdfs.org/sioc/types#"
      xmlns:skos="//www.w3.org/2004/02/skos/core#"
      xmlns:xsd="//www.w3.org/2001/XMLSchema#"><!--<![endif]-->
    
    <head profile="//www.w3.org/1999/xhtml/vocab">
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="shortcut icon" href="//swan.web.cern.ch/sites/all/themes/cern/favicon.ico" type="image/vnd.microsoft.icon" />
    <link rel="shortlink" href="/node/1" />
    <link rel="canonical" href="/content/swan-service" />
    <meta name="Generator" content="Drupal 7 (//drupal.org)" />
      <title> &#9744 Science Box &#9744 || Containerized CERNBox, EOS, and SWAN </title>
    
      <meta name="viewport" content="width=device-width, target-densityDpi=160dpi, initial-scale=1">
      <meta name="MobileOptimized" content="width">
      <meta name="HandheldFriendly" content="true">
      <meta name="apple-mobile-web-app-capable" content="yes">
      <meta http-equiv="cleartype" content="on">
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    
      <!--[if (lt IE 9) & (!IEMobile)]>
        <script src="/sites/all/themes/cern_base/js/ie/html5-shiv.js"></script>
        <script src="/sites/all/themes/cern_base/js/ie/respond.min.js"></script>
      <![endif]-->
    
      <!-- Type from Google Fonts -->
      <!--<link href='//fonts.googleapis.com/css?family=PT+Sans:400,400italic,700' rel='stylesheet' type='text/css' /> -->
    
      <!-- Type from CERN Framework -->
      <!--<link href='//framework.web.cern.ch/framework/2.0/fonts/PTSansWeb/PTSansWeb.css' rel='stylesheet' type='text/css' /> -->
      
      <!-- Originally: link type="text/css" rel="stylesheet" href="//swan.web.cern.ch/sites/swan.web.cern.ch/files/css/css_ywqYrtSodM0qVMzAkOSnqZ_iBnAVpkSeD_yPtUN9tBk.css" media="all" / -->
    <style media="screen" type="text/css">
    #autocomplete{border:1px solid;overflow:hidden;position:absolute;z-index:100;}#autocomplete ul{list-style:none;list-style-image:none;margin:0;padding:0;}#autocomplete li{background:#fff;color:#000;cursor:default;white-space:pre;zoom:1;}html.js input.form-autocomplete{background-image:url(/misc/throbber-inactive.png);background-position:100% center;background-repeat:no-repeat;}html.js input.throbbing{background-image:url(/misc/throbber-active.gif);background-position:100% center;}html.js fieldset.collapsed{border-bottom-width:0;border-left-width:0;border-right-width:0;height:1em;}html.js fieldset.collapsed .fieldset-wrapper{display:none;}fieldset.collapsible{position:relative;}fieldset.collapsible .fieldset-legend{display:block;}.form-textarea-wrapper textarea{display:block;margin:0;width:100%;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;}.resizable-textarea .grippie{background:#eee url(/misc/grippie.png) no-repeat center 2px;border:1px solid #ddd;border-top-width:0;cursor:s-resize;height:9px;overflow:hidden;}body.drag{cursor:move;}.draggable a.tabledrag-handle{cursor:move;float:left;height:1.7em;margin-left:-1em;overflow:hidden;text-decoration:none;}a.tabledrag-handle:hover{text-decoration:none;}a.tabledrag-handle .handle{background:url(/misc/draggable.png) no-repeat 6px 9px;height:13px;margin:-0.4em 0.5em;padding:0.42em 0.5em;width:13px;}a.tabledrag-handle-hover .handle{background-position:6px -11px;}div.indentation{float:left;height:1.7em;margin:-0.4em 0.2em -0.4em -0.4em;padding:0.42em 0 0.42em 0.6em;width:20px;}div.tree-child{background:url(/misc/tree.png) no-repeat 11px center;}div.tree-child-last{background:url(/misc/tree-bottom.png) no-repeat 11px center;}div.tree-child-horizontal{background:url(/misc/tree.png) no-repeat -11px center;}.tabledrag-toggle-weight-wrapper{text-align:right;}table.sticky-header{background-color:#fff;margin-top:0;}.progress .bar{background-color:#fff;border:1px solid;}.progress .filled{background-color:#000;height:1.5em;width:5px;}.progress .percentage{float:right;}.ajax-progress{display:inline-block;}.ajax-progress .throbber{background:transparent url(/misc/throbber-active.gif) no-repeat 0px center;float:left;height:15px;margin:2px;width:15px;}.ajax-progress .message{padding-left:20px;}tr .ajax-progress .throbber{margin:0 2px;}.ajax-progress-bar{width:16em;}.container-inline div,.container-inline label{display:inline;}.container-inline .fieldset-wrapper{display:block;}.nowrap{white-space:nowrap;}html.js .js-hide{display:none;}.element-hidden{display:none;}.element-invisible{position:absolute !important;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px);overflow:hidden;height:1px;}.element-invisible.element-focusable:active,.element-invisible.element-focusable:focus{position:static !important;clip:auto;overflow:visible;height:auto;}.clearfix:after{content:".";display:block;height:0;clear:both;visibility:hidden;}* html .clearfix{height:1%;}*:first-child + html .clearfix{min-height:1%;}
    fieldset{margin-bottom:1em;padding:0.5em;}form{margin:0;padding:0;}hr{border:1px solid gray;height:1px;}img{border:0;}table{border-collapse:collapse;}th{border-bottom:3px solid #ccc;padding-right:1em;text-align:left;}tbody{border-top:1px solid #ccc;}tr.even,tr.odd{background-color:#eee;border-bottom:1px solid #ccc;padding:0.1em 0.6em;}th.active img{display:inline;}td.active{background-color:#ddd;}.item-list .title{font-weight:bold;}.item-list ul{margin:0 0 0.75em 0;padding:0;}.item-list ul li{margin:0 0 0.25em 1.5em;padding:0;}.form-item,.form-actions{margin-top:1em;margin-bottom:1em;}tr.odd .form-item,tr.even .form-item{margin-top:0;margin-bottom:0;white-space:nowrap;}.form-item .description{font-size:0.85em;}label{display:block;font-weight:bold;}label.option{display:inline;font-weight:normal;}.form-checkboxes .form-item,.form-radios .form-item{margin-top:0.4em;margin-bottom:0.4em;}.form-type-radio .description,.form-type-checkbox .description{margin-left:2.4em;}input.form-checkbox,input.form-radio{vertical-align:middle;}.marker,.form-required{color:#f00;}.form-item input.error,.form-item textarea.error,.form-item select.error{border:2px solid red;}.container-inline .form-actions,.container-inline.form-actions{margin-top:0;margin-bottom:0;}.more-link{text-align:right;}.more-help-link{text-align:right;}.more-help-link a{background:url(/misc/help.png) 0 50% no-repeat;padding:1px 0 1px 20px;}.item-list .pager{clear:both;text-align:center;}.item-list .pager li{background-image:none;display:inline;list-style-type:none;padding:0.5em;}.pager-current{font-weight:bold;}#autocomplete li.selected{background:#0072b9;color:#fff;}html.js fieldset.collapsible .fieldset-legend{background:url(/misc/menu-expanded.png) 5px 65% no-repeat;padding-left:15px;}html.js fieldset.collapsed .fieldset-legend{background-image:url(/misc/menu-collapsed.png);background-position:5px 50%;}.fieldset-legend span.summary{color:#999;font-size:0.9em;margin-left:0.5em;}tr.drag{background-color:#fffff0;}tr.drag-previous{background-color:#ffd;}.tabledrag-toggle-weight{font-size:0.9em;}body div.tabledrag-changed-warning{margin-bottom:0.5em;}tr.selected td{background:#ffc;}td.checkbox,th.checkbox{text-align:center;}.progress{font-weight:bold;}.progress .bar{background:#ccc;border-color:#666;margin:0 0.2em;-moz-border-radius:3px;-webkit-border-radius:3px;border-radius:3px;}.progress .filled{background:#0072b9 url(/misc/progress.gif);}
    </style>
    
    <!--
    <link type="text/css" rel="stylesheet" href="//swan.web.cern.ch/sites/swan.web.cern.ch/files/css/css_qCcwBlWa1XA9zfAD73oZpceBIwGNrQPSGbRiGq2FXgA.css" media="all" />
    <link type="text/css" rel="stylesheet" href="//swan.web.cern.ch/sites/swan.web.cern.ch/files/css/css_i0sYiRb2G5IvzoKplbGV65FyzD9xjuvVGqJpatYCGC0.css" media="print" />
    -->
    
    <!-- Text Style -->
    <link type="text/css" rel="stylesheet" href="//framework.web.cern.ch/framework/2.0/fonts/PTSansWeb/PTSansWeb.css" media="all" / >
    
    <!-- Header -->
    <!-- Originally: link type="text/css" rel="stylesheet" href="//swan.web.cern.ch/sites/swan.web.cern.ch/files/css/css_g9eJET_QLncO1_tLtHruWozPRxx03lrdBXyecNOo6Fo.css" media="all" / -->
    <style media="screen" type="text/css">
    #cern-toolbar{background-color:#222;background-color:rgba(30,30,30,0.95);font-family:'PT Sans','Trebuchet MS',Tahoma,sans-serif;color:#999;font-size:14px;line-height:1;padding:0 5%;overflow:hidden;-moz-box-shadow:inset 0 -1px 0 rgba(100,100,100,0.2);-webkit-box-shadow:inset 0 -1px 0 rgba(100,100,100,0.2);box-shadow:inset 0 -1px 0 rgba(100,100,100,0.2);height:40px;}#cern-toolbar a{color:#ccc;text-decoration:none;padding:6px 8px;-moz-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;display:inline-block;}#cern-toolbar a:hover{background-color:#000;color:#fff;}#cern-toolbar .active a{background-color:#f6f6f6;color:#000;padding-bottom:20px;}#cern-toolbar .active .cern-account{background-color:#fff;}#cern-toolbar h1{float:left;font-size:14px;font-weight:400;line-height:1;position:relative;left:-8px;padding:6px 0;letter-spacing:0.08em;margin:0;}#cern-toolbar h1 a{color:#fff;}#cern-toolbar h1 span{color:#999;letter-spacing:normal;padding:0;}#cern-toolbar h1 a:hover span{color:#fff;}#cern-toolbar ul{float:right;list-style:none;position:relative;right:-8px;margin:0;}#cern-toolbar li{float:left;display:block;margin-left:1em;padding:6px 0;}#cern-toolbar .cern-multifactor{padding-left:32px;background-image:url(/sites/all/modules/cern_toolbar/img/toolbarsprite.png);background-repeat:no-repeat;background-position:0 -120px;}#cern-toolbar .cern-signout{margin-left:1em;}#cern-toolbar a,#cern-toolbar a span{-moz-transition:background-color 0.1s ease-out;-webkit-transition:background-color 0.1s ease-out;-ms-transition:background-color 0.1s ease-out;-o-transition:background-color 0.1s ease-out;transition:background-color 0.1s ease-out;}@media only screen and (max-width:750px){#cern-toolbar h1 span{display:none;}#cern-toolbar ul{border-right:1px solid #000;-moz-box-shadow:1px 0 0 #444;-webkit-box-shadow:1px 0 0 #444;box-shadow:1px 0 0 #444;}#cern-toolbar li{padding:0;margin:0;border-left:1px solid #000;}#cern-toolbar li a{background-image:url(/sites/all/modules/cern_toolbar/img/toolbarsprite.png);background-repeat:no-repeat;height:40px;width:40px;-moz-border-radius:0;-webkit-border-radius:0;border-radius:0;text-indent:-5000px;overflow:hidden;border-left:1px solid #444;}#cern-toolbar .cern-account{background-position:9px 0;}#cern-toolbar .cern-directory{background-position:9px -40px;}#cern-toolbar .cern-signout{background-position:9px -80px;margin-left:0;}#cern-toolbar .active .cern-account{background-position:-31px 0;}#cern-toolbar .active .cern-directory{background-position:-31px -40px;}#cern-toolbar .cern-accountlinks span{display:none;}#cern-toolbar .cern-multifactor{background-image:none;padding:0;}}
    </style>
    
    <!-- Page Layout -->
    <!-- Originally: link type="text/css" rel="stylesheet" href="//swan.web.cern.ch/sites/swan.web.cern.ch/files/css/css_XaCCCqP26bWgsihFO-5aUWKC5DAlN2OT7MpUl-z9KNw.css" media="all" / -->
    <style media="screen" type="text/css">
    html,body,div,span,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,abbr,address,cite,code,del,dfn,em,img,ins,kbd,q,samp,small,strong,sub,sup,var,b,i,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,figcaption,figure,footer,header,hgroup,menu,nav,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent}html{font-size:62.5%;overflow-x:hidden}body{line-height:1}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}nav ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}a{margin:0;padding:0;font-size:100%;vertical-align:baseline;background:transparent}ins{background-color:#ff9;color:#000;text-decoration:none}mark{background-color:#ff9;color:#000;font-style:italic;font-weight:bold}del{text-decoration:line-through}abbr[title],dfn[title]{border-bottom:1px dotted;cursor:help}table{border-collapse:collapse;border-spacing:0}input,select{vertical-align:middle}label{display:block;margin-bottom:0.2em;clear:both;font-weight:normal}img{vertical-align:bottom}.clearfix:before,.views-row:before,.blurb:before,.search-results .search-result:before,.promo:before,.clearfix:after,.views-row:after,.blurb:after,.search-results .search-result:after,.promo:after{content:"";display:table}.clearfix:after,.views-row:after,.blurb:after,.search-results .search-result:after,.promo:after{clear:both}.clearfix,.views-row,.blurb,.search-results .search-result,.promo{zoom:1}.clearfix:before,.views-row:before,.blurb:before,.search-results .search-result:before,.promo:before,.clearfix:after,.views-row:after,.blurb:after,.search-results .search-result:after,.promo:after{content:"";display:table}.clearfix:after,.views-row:after,.blurb:after,.search-results .search-result:after,.promo:after{clear:both}.clearfix,.views-row,.blurb,.search-results .search-result,.promo{zoom:1}.overlay-modal-background{background-image:none;background:rgba(0,0,0,0.5)}ul.menu{line-height:1;list-style-type:none;margin:0;padding:0}ul.menu li{margin:0;padding:0}ul.menu a{line-height:1.4em}.contextual-links-trigger{padding:0 !important}ul.primary,ul.secondary{border-bottom:1px solid #ddd;list-style:none;padding:0 2px;white-space:nowrap;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif}#content ul.primary,#content ul.secondary{margin:1em 0 1.5em}ul.primary:after,ul.secondary:after{content:".";display:block;height:0;clear:both;visibility:hidden}ul.primary a,ul.secondary a{border-right:0;border-bottom:0;display:block;line-height:1.5em;text-decoration:none}ul.primary li{border-bottom:0;margin:0.5em 0.1em 0 0;display:block;float:left}ul.primary li.active{margin-bottom:-1px;border-bottom:1px solid #FFFFFF}ul.primary a:link,ul.primary a:visited{-moz-transition:background-color 0.3s;-webkit-transition:background-color 0.3s;-o-transition:background-color 0.3s;transition:background-color 0.3s;color:#626262;background-color:#f2f2f2;letter-spacing:1px;padding:0.2em 1em;text-align:center;font-size:14px;border:1px solid #e0e0e0;border-bottom:none}ul.primary a:hover,ul.primary a:focus{background-color:#f8f8f8;border-color:#e0e0e0;font-size:14px}ul.primary a.active{background-color:#fff;font-size:14px}ul.secondary{font-size:.9em;margin-top:-1.5em;padding-bottom:.5em}ul.secondary a:link,ul.secondary a:visited{-moz-transition:background-color 0.3s;-webkit-transition:background-color 0.3s;-o-transition:background-color 0.3s;transition:background-color 0.3s;text-shadow:white 1px 1px 0;background-color:#f2f2f2;color:#666;padding:0 .5em}ul.secondary a:hover,ul.secondary a:focus{background-color:#dedede;border-color:#999;color:#333}ul.secondary a.active,ul.secondary a:active{text-shadow:#333333 1px 1px 0;background-color:#666;border-color:#000;color:#fff}ul.inline,ul.links.inline{display:inline;padding-left:0;margin:0}ul.inline li{display:inline;list-style-type:none;padding:0 0.5em}ul.inline li.first{padding-left:0;margin-left:0}.breadcrumb{padding-bottom:0.5em}div.messages{background-position:8px 8px;background-repeat:no-repeat;border:1px solid;margin-bottom:2em;padding:10px}div.status{border-color:#be7}div.status,.ok{color:#234600}div.status,table tr.ok{background-color:#f8fff0;background-image:none}div.warning{border-color:#ed5}div.warning,.warning{color:#840}div.warning,table tr.warning{background-color:#fffce5;background-image:none}div.error{border-color:#ed541d;background-image:none}div.error,.error{color:#8c2e0b}div.error,table tr.error{background-color:#fef5f1;background-image:none}div.error p.error{color:#333}div.messages ul{margin:0 0 0 1em;padding:0}div.messages ul li{list-style-image:none}div.workbench-info-block{border:1px solid;margin-bottom:2em;padding:10px;background-color:#fffce5;border-color:#ed5}html.js input.form-autocomplete{background-image:url(/sites/all/themes/cern_base/img/throbber-active.gif);background-image:url(/sites/all/themes/cern_base/img/throbber.gif);background-position:99% 0.7em;background-repeat:no-repeat}html.js input.throbbing{background-image:url(/sites/all/themes/cern_base/img/throbber-active.gif);background-position:99% 0.7em}label,.field .field-label{font-weight:normal}#content img.file-icon,#content img.print-icon{margin-top:0;margin-bottom:0;display:inline-block}#content .field-body{margin-bottom:1.5em}ul.views-view-grid{padding-left:0;list-style:none;list-style-image:none}ul.views-view-grid span[class*=row]{display:block;width:100%}ul.views-view-grid li{float:left;padding:0.5em;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}.ie6-8 ul.views-view-grid li{padding:0.5em 0}ul.views-view-grid.views-view-grid li+li{margin-top:0}ul.views-view-grid li.col-first{padding-left:0}ul.views-view-grid li.col-last{padding-right:0}.view ul.cols-2 li{width:50%}.view ul.cols-3 li{width:33.3333%}.view ul.cols-4 li{width:25%}.view ul.cols-5 li{width:20%}.view ul.cols-6 li{width:16.6666%}.view ul.cols-7 li{width:14.2857%}.view ul.cols-8 li{width:12.5%}.view ul.cols-9 li{width:11.1111%}.view ul.cols-10 li{width:10%}.pane-content ul,.pane-content ol{margin-bottom:1em;margin-left:0}.pane-content li{list-style:disc outside;margin-left:1em;display:list-item;margin-bottom:1ex}.view .date-nav-wrapper .date-prev a,.view .date-nav-wrapper .date-next a{color:#fff}.view .date-nav{padding-bottom:0}.view .date-nav-wrapper .date-prev,.view .date-nav-wrapper .date-next{background:#777;margin-top:0px}.view .date-nav-wrapper ul.pager{border-top:none;margin-top:0 !important;margin-bottom:0 !important}.clearfix:before,.views-row:before,.blurb:before,.search-results .search-result:before,.promo:before,.clearfix:after,.views-row:after,.blurb:after,.search-results .search-result:after,.promo:after{content:"";display:table}.clearfix:after,.views-row:after,.blurb:after,.search-results .search-result:after,.promo:after{clear:both}.clearfix,.views-row,.blurb,.search-results .search-result,.promo{zoom:1}body{font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif;font-size:14px;font-size:1.4rem;line-height:1.6;color:#333}#content{font-size:16px;font-size:1.6rem;font-family:"PT Serif",Georgia,"Times New Roman","DejaVu Serif",serif}#content .sidebars{font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif}.page .field-name-body,.page .field-body,.page article.node,#page .field-name-body,#page .field-body,#page article.node{font-family:"PT Serif",Georgia,"Times New Roman","DejaVu Serif",serif}h1,h2,h3,h4,h5,h6{font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif;color:#333;font-weight:600}h1{font-size:2.5em;margin:0 0 0.5em 0}h1#site-name{margin-top:0}h2{font-size:1.5em}h3,h4,h5,h6{margin-bottom:0}h4,h5,h6{font-weight:400;font-size:1em}h4{font-style:italic}h5{text-transform:uppercase;letter-spacing:0.05em}h6{color:#999}p+p,p+ul,p+ol{margin-top:1ex}p.standfirst{font-size:1.5em;line-height:28px;margin-bottom:1em;color:#333}blockquote{margin:0 2em 1em;color:#999}cite{display:inline}code{font-family:'PT Mono',monospace;margin:1em 0.5em 1em;color:#999;display:block;margin-bottom:1em}p code,dd code{display:inline}sup{font-size:0.7em;top:-0.6em;position:relative;margin:0 2px 0 2px;font-family:"PT Sans Caption",Verdana,Tahoma,"DejaVu Sans",sans-serif}sub{font-size:0.7em;bottom:-0.3em;position:relative;margin:0 2px 0 2px;font-family:"PT Sans Caption",Verdana,Tahoma,"DejaVu Sans",sans-serif}small{font-size:0.8em;font-style:italic;font-family:"PT Sans Caption",Verdana,Tahoma,"DejaVu Sans",sans-serif}del{color:#999}ins,mark{background-color:#f1f2ee;padding:0 0.01em 0 0.01em;font-style:normal;font-weight:normal}li ol{list-style:outside lower-alpha}ul.links{list-style:none}ol{margin-left:1.7em}.translation_fr:before,.translation_en:before{content:"Voir en "}.translation_en:before{content:"View in "}a{color:#4d94cc;text-decoration:none;-moz-transition:color 0.2s ease-out;-webkit-transition:color 0.2s ease-out;transition:color 0.2s ease-out}a:hover{color:#256ca4}a:active{color:#256ca4}a:focus{color:#256ca4}a:visited{color:#915ec9}a.active-trail{color:#999;text-decoration:none}a:link{-webkit-tap-highlight-color:#d6ecfe}::-webkit-selection{background:#d6ecfe;text-shadow:none}::-moz-selection{background:#d6ecfe;text-shadow:none}::selection{background:#d6ecfe;text-shadow:none}table{font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif;margin-top:1em;margin-bottom:1em;display:table;width:100%}caption{font-family:"PT Sans Caption",Verdana,Tahoma,"DejaVu Sans",sans-serif;font-size:0.8em;font-weight:600;color:#333;margin-bottom:1em;text-align:left;padding:0 0 0 2%}tbody,thead,tfoot{display:table-row-group}tr{display:table-row}tr:nth-child(2n){background:#f6f6f6}th,td{text-align:left;padding:0.5em 1em}th{border-bottom:1px solid #ddd;border-top:2px solid #ddd;font-weight:400;color:#999;padding-top:0.5em}tfoot td{font-weight:bold}td.head{font-style:italic}.clearfix:before,.views-row:before,.blurb:before,.search-results .search-result:before,.promo:before,.clearfix:after,.views-row:after,.blurb:after,.search-results .search-result:after,.promo:after{content:"";display:table}.clearfix:after,.views-row:after,.blurb:after,.search-results .search-result:after,.promo:after{clear:both}.clearfix,.views-row,.blurb,.search-results .search-result,.promo{zoom:1}.views-row,.blurb,.search-results .search-result,.promo{clear:both;display:block}.views-row img,.views-row .field-image,.blurb img,.blurb .field-image,.search-results .search-result img,.search-results .search-result .field-image,.promo img,.promo .field-image{clear:none;display:block;float:left;margin:0 1em 1em 0}.views-row .field-image img,.blurb .field-image img,.search-results .search-result .field-image img,.promo .field-image img{width:100%}.views-row .strap,.blurb .strap,.search-results .search-result .strap,.promo .strap{padding-bottom:1em}.views-row h2,.blurb h2,.search-results .search-result h2,.promo h2{font-size:1.2em}.views-row p,.blurb p,.search-results .search-result p,.promo p{font-family:"PT Serif",Georgia,"Times New Roman","DejaVu Serif",serif}.views-row .field-item img,.blurb .field-item img,.search-results .search-result .field-item img,.promo .field-item img{float:none}.blurb,.promo{padding-top:1em}.blurb h1,.promo h1{font-size:1.2em;margin:-0.3em 0 0}.blurb h3,.promo h3{font-weight:400;margin-top:0.5em;padding-bottom:1em}div.views-row+div.views-row,.search-result.search-result+.search-result.search-result{margin-top:1.5em}div.views-row h2,.search-result.search-result h2{font-size:1.2em;margin-top:0;margin-bottom:1ex}div.views-row h3,.search-result.search-result h3{margin-top:0}.ie6-8 div.views-row,.ie6-8 .search-result.search-result{display:block}#block-views-topics-block-1 h3{font-size:1.2em}.item-list.item-list ul,.menu ul,.view-content ul{margin:0}.item-list.item-list li,.menu li,.view-content li{list-style:none;display:block;margin:0}.item-list.item-list li+li,.menu li+li,.view-content li+li{margin-top:0.5em}.item-list.item-list h3,.menu h3,.view-content h3{font-weight:400}#content-meta .view-content ul{margin:0}#content-meta .view-content li{display:list-item;list-style:disc outside;margin-left:1em}#content-meta .view-content li+li{margin-top:1em}#content-meta .view-content h3{font-weight:400}.page ul,.page ol,.page .item-list ul,.node ul,.node ol,.node .item-list ul{margin-bottom:1em;margin-left:0}.page article ul,.page article ol,.node article ul,.node article ol{margin-left:1em}.page article p+ul,.page article p+ol,.node article p+ul,.node article p+ol{margin-top:1ex}.page li,.page .item-list li,.node li,.node .item-list li{margin-left:1em;display:list-item;margin-bottom:1ex}.page .item-list li,.page .view-content li,.node .item-list li,.node .view-content li{font-size:14px;font-size:1.4rem;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif}.page .links.inline,.node .links.inline{padding-top:1em;display:block;font-size:0.9em;font-style:italic;text-align:left;color:#999;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif;margin:0}.page li ul,.page li ol,.page li .item-list ul,.node li ul,.node li ol,.node li .item-list ul{margin:0.5em 0 0 2em}.page dl,.node dl{margin-bottom:1em}.page dt,.node dt{font-weight:600}.page dd,.node dd{margin-bottom:1ex}#footer ul li{list-style:none;margin-left:0}.view-content li+li,.view-content p+ul{margin-top:1em}.block{width:100%;padding-top:1.5em;padding-bottom:1.5em}#sidebar .block h2,#footer .block h2,.page>.region .block h2,.node>.region .block h2,.sidebars .block h2{font-weight:600;color:#999999;font-family:"PT Sans Caption",Verdana,Tahoma,"DejaVu Sans",sans-serif;font-size:13px;font-size:1.3rem;letter-spacing:1px;line-height:1.4;margin-bottom:1em;text-transform:uppercase}.view-header p{font-weight:600;color:#999999;font-family:"PT Sans Caption",Verdana,Tahoma,"DejaVu Sans",sans-serif;font-size:13px;font-size:1.3rem;letter-spacing:1px;line-height:1.4;margin-bottom:1em;text-transform:uppercase}.view-filters{margin-bottom:2em;border-bottom:1px solid #ddd}.view-filters input[type=submit]{width:100%;margin:0.25em 0 0 !important}.view-filters .views-exposed-widgets{margin:0}.view-filters .views-exposed-widget{padding:0 1em 0.5em;border-right:1px solid #ddd}.view-filters .views-exposed-widget:first-child{padding-left:0}.view-filters .views-submit-button{padding:0;border:none;float:right}.view-filters label{font-weight:600;color:#999999;font-family:"PT Sans Caption",Verdana,Tahoma,"DejaVu Sans",sans-serif;font-size:13px;font-size:1.3rem;letter-spacing:1px;line-height:1.4;margin-bottom:1em;text-transform:uppercase;margin-bottom:0.25em}input[type=text],textarea{border:1px solid #ccc;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;color:#000;display:block;float:left;font-size:14px;font-size:1.4rem;height:40px;padding:0;text-indent:1em;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif;width:100%;max-width:50em}.form-item,#content fieldset{overflow:hidden;padding-top:0.5em}.form-item .description{clear:left;font-size:0.85em;max-width:51.5em;width:100%}.resizable-textarea .grippie{clear:left;display:block;max-width:43.6em;width:100%}input[type=submit]{-webkit-appearance:none;background-color:#0086CF;border:none;-webkit-border-radius:8px;-moz-border-radius:8px;border-radius:8px;-webkit-box-shadow:0 0 10px rgba(0,0,0,0.2) inset;box-shadow:0 0 10px rgba(0,0,0,0.2) inset;color:#fff;cursor:pointer;display:block;font-size:12px;font-size:1.2rem;font-weight:400;float:left;line-height:40px;height:36px;position:relative;text-align:center;margin:1em 0 1.6em}input[type=submit]:hover{background-color:#2fa5e0;-webkit-box-shadow:none;box-shadow:none}.recaptchatable{width:auto}.pager.pager{padding-top:1em;border-top:1px solid #ddd;margin:2em 0 !important;text-align:left;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif;font-size:14px;font-size:1.4rem;color:#ddd}.pager.pager li{background-image:none;display:inline;list-style-type:none;padding:0.5em;margin-left:1.5em}.pager.pager .first{margin-left:0}.custom-search-filter{display:block;padding-bottom:0.5em;float:left;width:100%}.custom-search-filter h3{float:left;clear:both;display:block;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif;color:#999;font-weight:400;margin:0 1em 0.5em 0;font-size:14px;font-size:1.4rem;line-height:1.2}.custom-search-filter .item-list ul{border-top:1px solid #ddd;padding-top:0.5em;float:left;clear:both;margin:0}.custom-search-filter .item-list li{float:left;margin:0 0.5em 0 0;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif;font-size:14px;font-size:1.4rem;list-style:none}.custom-search-filter .item-list li a{display:block}.custom-search-filter .item-list li a:before{content:"|";margin-right:0.5em;color:#ddd}.custom-search-filter .item-list li .active{color:#999}.custom-search-filter .item-list li+li{margin-top:0}.custom-search-filter .item-list .first a:before{display:none}ol.search-results{margin:0}ol.search-results .meta.meta.meta{display:inline}ol.search-results li{margin:0}.clearfix:before,.views-row:before,.blurb:before,.search-results .search-result:before,.promo:before,.clearfix:after,.views-row:after,.blurb:after,.search-results .search-result:after,.promo:after{content:"";display:table}.clearfix:after,.views-row:after,.blurb:after,.search-results .search-result:after,.promo:after{clear:both}.clearfix,.views-row,.blurb,.search-results .search-result,.promo{zoom:1}.page h2,.node h2{font-weight:600;margin-bottom:1ex;margin-top:1em;font-size:1.5em}.page h2:first-child,.node h2:first-child{margin-top:0}.page h3,.node h3{margin-top:1em}.page cite,.page figcaption,.page .field-caption,.node cite,.node figcaption,.node .field-caption{color:#999;display:block;font-family:"PT Sans Caption",Verdana,Tahoma,"DejaVu Sans",sans-serif;font-size:12px;margin-top:0.5em}.page blockquote,.node blockquote{font-size:1.2em;font-style:italic;margin:1em 0;padding:0.5em 2em;position:relative;color:#333}.page .field-image img,.node .field-image img{border:none}.page .pullquote,.node .pullquote{border-top:1px solid #ddd;font-family:"PT Sans Caption",Verdana,Tahoma,"DejaVu Sans",sans-serif;font-size:1.3em;margin:1em 0;padding:1em 0;position:relative}[class*="icon"]{width:auto;border:none !important}[class*="icon"] img{width:auto;border:none !important}.more-link{text-align:left;font-style:italic;margin-top:1em;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif}.more-link a:after{content:"â€º";margin-left:0.2em}.meta.meta.meta{color:#999;display:inline-block;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif;font-size:0.9em}span.ext{background-image:url(/sites/all/themes/cern_base/images/icon-link.png)}img{width:100%;max-width:100%;height:auto;padding:0 !important}img[alt^=sort]{border:none;vertical-align:middle;margin-left:0.5em;width:auto}#main img{border:1px solid #ddd}hr{height:0;width:100%;display:block;border:none;border-top:1px solid #ddd;margin:2em 0}.page figure,.page iframe,.page embed,.page video,.node figure,.node iframe,.node embed,.node video{width:100%;margin-top:1.5em;margin-bottom:1.5em}.page .field-image,.node .field-image{margin-bottom:1.5em}.page figure iframe,.page figure embed,.page figure video,.node figure iframe,.node figure embed,.node figure video{margin-top:0;margin-bottom:0}.page figure+.field-caption,.page .field-image+.field-caption,.node figure+.field-caption,.node .field-image+.field-caption{margin-top:-2em}.timeline{min-height:200px;border:1px solid #ddd}#tl-overlay{background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;z-index:10000}.ie6-8 #tl-overlay{background-color:#333}.timeline-frame{position:relative;margin:4% auto 0;width:76%;max-width:990px;height:86%;min-height:600px;border:1px solid #fff;background:#fff;border:2px solid #fff;overflow:hidden}#dev-status-message{z-index:10000}.breadcrumb{clear:both;display:block;float:left;font-size:12px;font-size:1.2rem;margin-top:3em;padding-bottom:1em;width:60%}.line code{display:inline}
    .clearfix:before,.panel-pane .view:before,.region-sub-navigation .menu:before,#content .block:before,.clearfix:after,.panel-pane .view:after,.region-sub-navigation .menu:after,#content .block:after{content:"";display:table}.clearfix:after,.panel-pane .view:after,.region-sub-navigation .menu:after,#content .block:after{clear:both}.clearfix,.panel-pane .view,.region-sub-navigation .menu,#content .block{zoom:1}.sidebars .block{overflow:hidden;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;padding-left:4.15153%;padding-right:4.15153%;border:1px solid #ddd;width:100%;padding-top:1em;padding-bottom:1em;margin-bottom:1.5em}.sidebars .block.noborder{border:none}@media only screen and (max-width:1023px){.sidebars .block{-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;left:-7.46826%;position:relative;padding-left:7.46826%;padding-right:7.46826%}}@media only screen and (max-width:749px){.sidebars .block{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;padding-left:2.63158%;padding-right:2.63158%;left:auto}}.sidebars .block h2,.sidebars .region > h2{font-weight:600;color:#999999;font-family:"PT Sans Caption",Verdana,Tahoma,"DejaVu Sans",sans-serif;font-size:1.3rem;letter-spacing:1px;line-height:1.4;margin-bottom:1em;text-transform:uppercase}.ui-accordion .ui-accordion-header .ui-icon{left:0.5em;margin-top:-8px;position:absolute;top:50%}html.js fieldset.collapsible{margin-bottom:1em}html.js fieldset.collapsible legend{width:100%;background-color:#eee;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif}html.js fieldset.collapsible legend .fieldset-legend{padding:0.2em 2em;border:1px solid #E0E0E0;background-position:1em 0.8em}html.js fieldset.collapsible legend a{color:#333}html.js fieldset.collapsible .fieldset-wrapper{padding:0.5em 1em;overflow:hidden;border:1px solid #E0E0E0;border-top:none}html.js fieldset.collapsible .field-name-field-tags{color:#999;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif}html.js fieldset.collapsible .field-label{float:left;padding-right:12px;padding-right:1.2rem;font-weight:normal}html.js fieldset.collapsible .field-name-field-tags .field-item{float:left;padding-right:1.2rem;white-space:nowrap}table{font-size:0.875em}form.webform-client-form .webform-component{margin:0 0 2em}form.webform-client-form label:first-child{font-weight:bold}form.webform-client-form input[type="text"]{float:none}form.webform-client-form .form-item,form.webform-client-form .form-actions{margin-bottom:1em;margin-top:1em}form.webform-client-form .webform-container-inline div,form.webform-client-form .webform-container-inline div.form-item{display:inline}.views-exposed-form .views-reset-button{float:right;border:none}.views-exposed-form .views-reset-button input[type="submit"]{background:none;color:#1581c6;-webkit-box-shadow:none;box-shadow:none}.panel-pane .view{display:block;clear:both}@media only screen and (max-width:1023px){.panel-pane .view [class*="col"]{width:100%;padding:0 0 1em}}@media only screen and (max-width:1023px){.panels-flexible-region{width:100%;margin-bottom:1em}.panels-flexible-region-inside{padding:0}}.quicktabs-wrapper .quicktabs-tabs.quicktabs-tabs li{margin-top:0}.clearfix:before,.panel-pane .view:before,.region-sub-navigation .menu:before,#content .block:before,.clearfix:after,.panel-pane .view:after,.region-sub-navigation .menu:after,#content .block:after{content:"";display:table}.clearfix:after,.panel-pane .view:after,.region-sub-navigation .menu:after,#content .block:after{clear:both}.clearfix,.panel-pane .view,.region-sub-navigation .menu,#content .block{zoom:1}body{background-color:#eee}#header{background:url(/sites/all/themes/cern/img/bg-shadow.png) repeat-x left bottom;padding-top:21px;border-top-style:solid;border-top-width:4px;border-bottom:1px solid #b8b8b8;color:#565656;z-index:100;position:relative}#header .header-group{margin-bottom:2em}@media only screen and (max-width:749px){#header .header-group{margin-bottom:0}}#header h2{font-weight:600;font-size:30px;font-size:3rem;margin:0;clear:none}#header h3{font-weight:400;line-height:1.2em}#header #block-multiblock-1{position:absolute;bottom:1em}.inner,.region-sub-navigation{margin-left:auto;margin-right:auto;width:90%;max-width:1100px;position:relative}.ie6-8 .inner,.ie6-8 .region-sub-navigation{width:960px}.region-sub-navigation .block{padding-bottom:0;padding-top:0}.region-sub-navigation .menu{background:none repeat scroll 0 0 transparent;display:block;padding:1em 0 0;line-height:1;font-size:14px;font-size:1.4rem}@media only screen and (max-width:1023px){.region-sub-navigation .menu{font-size:12px;font-size:1.2rem;padding:2em 0 0}}.region-sub-navigation .menu li{margin-top:0}.region-sub-navigation .menu a{display:block;float:left;margin-right:2em}.region-sub-navigation .menu a.active{border-radius:3px;padding:0.3em 0.5em;color:#333;background-color:#ddd;margin-top:-0.3em;margin-left:-0.5em}.ie6-8 .region-sub-navigation .menu a.active{background-color:transparent}.region-sub-navigation .menu .item-list.item-list li + li,.menu li + li{margin-top:0}#logo{margin-bottom:0.5em}.logobanner #logo{width:100%}.logofloat #logo{min-height:60px;float:left;margin-right:1em}#header .region-header{position:absolute;width:200px;top:0;right:0}#block-locale-language{text-align:right;font-size:12px;font-size:1.2rem;margin:0 0 1em}#block-locale-language .language-switcher-locale-url{display:block;list-style-type:none;overflow:hidden}#block-locale-language li{margin:0;padding:0;display:inline;line-height:1}#block-locale-language li a{display:block;float:right;margin-left:2em;line-height:1.4em}#navmobile{display:none;margin-top:0}#main-navigation{margin:0 auto -1px;background:none;padding:0;display:block;font-size:14px;font-size:1.4rem}@media only screen and (max-width:1023px){#main-navigation{font-size:12px;font-size:1.2rem}}#main-navigation ul{margin:0}#main-navigation li{margin:0;list-style:none}#main-navigation a{color:#fff;border-style:solid;border-width:1px;border-bottom:none;font-weight:700;display:block;float:left;margin-right:0.3em;padding:0.5em 1em}#main-navigation a:hover{background:#256ca4;text-decoration:none}#main-navigation a.active-trail{background:#fff;border:1px solid #b8b8b8;border-bottom:none;color:#686868}#main{padding-top:3em;padding-bottom:5em}@media only screen and (max-width:749px){#main{padding-top:1.5em;padding-bottom:3em}}.sidebar-first #content{display:block;float:left;margin-left:25.47607%;margin-right:-100%;width:74.4751%}.sidebar-first .region-sidebar-first{display:block;float:left;margin-left:0;margin-right:-100%;width:23.52295%}.sidebar-second #content{display:block;float:left;margin-left:0;margin-right:-100%;width:74.4751%;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;padding-left:1.95313%;padding-right:1.95313%;padding-left:0}.sidebar-second .region-sidebar-second{display:block;float:left;margin-left:76.42822%;margin-right:-100%;width:23.52295%}.two-sidebars #content{display:block;float:left;margin-left:20.38086%;margin-right:-100%;width:59.18945%;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;padding-left:1.95313%;padding-right:1.95313%}.two-sidebars .region-sidebar-first{display:block;float:left;margin-left:0;margin-right:-100%;width:18.42773%}.two-sidebars .region-sidebar-second{display:block;float:left;margin-left:81.52344%;margin-right:-100%;width:18.42773%}@media only screen and (max-width:1023px){.sidebar-first #content{display:block;float:left;margin-left:34.2%;margin-right:-100%;width:65.73333%}.sidebar-first .region-sidebar-first{display:block;float:left;margin-left:0;margin-right:-100%;width:31.53333%}.sidebar-second #content,.no-sidebars #content{display:block;float:left;margin-left:0;margin-right:-100%;width:65.73333%;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;padding-left:2.66667%;padding-right:2.66667%;padding-left:0}.sidebar-second .region-sidebar-second,.no-sidebars .region-sidebar-second{display:block;float:left;margin-left:68.4%;margin-right:-100%;width:31.53333%}.two-sidebars #content{display:block;float:left;margin-left:20.52%;margin-right:-100%;width:58.89333%;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;padding-left:2.66667%;padding-right:2.66667%}.two-sidebars .region-sidebar-first{display:block;float:left;margin-left:0;margin-right:-100%;width:17.85333%}.two-sidebars .region-sidebar-second{display:block;float:left;margin-left:82.08%;margin-right:-100%;width:17.85333%}}@media only screen and (max-width:749px){.sidebar-first #content,.sidebar-first .region-sidebar-first,.sidebar-first .region-sidebar-second,.sidebar-second #content,.sidebar-second .region-sidebar-first,.sidebar-second .region-sidebar-second,.two-sidebars #content,.two-sidebars .region-sidebar-first,.two-sidebars .region-sidebar-second{width:100%;clear:both;float:none;margin-left:0;margin-right:0;padding-left:0;padding-right:0}}.no-sidebars #content{width:100%;clear:both;display:block}#content article header{margin-bottom:1em}#content img[style*="float"][style*="left"][style*="width"]{margin-right:1em}#content .submitted{color:#999;font-size:0.8em;font-family:"PT Sans",Verdana,Tahoma,"DejaVu Sans",sans-serif;margin-bottom:1em}#content .submitted-below{margin-top:1em}#content label{font-weight:bold}@media only screen and (max-width:749px){#page-title{font-size:1.8em}}article{border-bottom:1px solid #E0E0E0;margin-bottom:2em;padding-bottom:1em}#content ul.links{display:block;margin:0}.sidebars .block2{border:none}.sidebars .menu{margin:0}.sidebars .menu li{display:block}.sidebars .menu li + li{margin-top:1em}.sidebars .menu .menu{margin-left:1em}.sidebars .region > .menu{margin-bottom:3em}.sidebars li.active-trail .active{border-radius:3px;padding:0.3em 0.5em;color:#333;background-color:#ddd;position:relative;left:-0.5em}.ie6-8 .sidebars li.active-trail .active{background-color:transparent}.sidebars ul,.sidebars ol{margin-left:1.7em}#search-block-form,.block-cernsearchbox{margin:0}#search-block-form .form-item-search-block-form,#search-block-form .form-item-cernsearchboxtext,.block-cernsearchbox .form-item-search-block-form,.block-cernsearchbox .form-item-cernsearchboxtext{padding-right:60px;display:block;overflow:hidden;margin-bottom:0}#search-block-form input[type=text],.block-cernsearchbox input[type=text]{height:24px;font-size:12px;font-size:1.2rem;line-height:25px;width:100%}#search-block-form input[type=submit],.block-cernsearchbox input[type=submit]{width:50px;height:26px;line-height:22px;font-size:11px;font-size:1.1rem;margin-top:-26px;float:right}#footer{font-size:12px;font-size:1.2rem;padding:2em 0;background:#eee;border-top:1px solid #ccc}#footer img{width:auto}#footer .inner{min-height:130px;min-height:13rem;margin-bottom:1em;position:relative}#footer .region-footer-first,#footer .region-footer-second{margin-bottom:1em}#footer .cern-logo{float:right;width:100px;opacity:0.6}#footer .cern-logo img{margin-right:0;float:right}#footer .region-footer-first{display:block;float:left;margin-left:0;margin-right:-100%;width:38.80859%}#footer .region-footer-second{display:block;float:left;margin-left:40.76172%;margin-right:-100%;width:38.80859%}@media only screen and (max-width:749px){#header{border-bottom:none}#header #site-name{font-size:20px;font-size:2rem;line-height:1.4;margin-bottom:0.5em}#header #site-slogan{margin-bottom:1.5em}#header #block-locale-language{padding:0;margin:0}#header .region-header{top:auto;bottom:0.4em;font-size:11px;font-size:1.1rem}#header .region-header a{color:#fff;padding:0.3em 0.5em;margin-left:1em}#header .region-header a.active{border-radius:3px;padding:0.3em 0.5em;background-color:rgba(255,255,255,0.2);color:#eee;text-shadow:0 0 5px #000;text-shadow:none}.ie6-8 #header .region-header a.active{color:#fff}.ie6-8 #header .region-header a.active{background-color:transparent}#main-navigation,.region-sub-navigation{display:none}#navmobile{display:block;font-size:12px;font-size:1.2rem;padding:0 5.5555%;left:-5.5555%;width:100%;overflow:hidden}#navmobile a{color:#fff;padding:0.5em 5.5555%;left:-5.5555%;width:100%;position:relative;display:block;background-color:#333;background-color:rgba(255,255,255,0.2);margin-bottom:1px}#navmobile a:hover{background-color:#fff;color:#333}#navmobile ul ul{margin-left:1.5em}#navdrop{display:none}#navdrop > ul > .last a{margin-bottom:0}#navlinks{font-weight:700;border-bottom:1px solid rgba(0,0,0,0.1) !important;margin-bottom:0 !important}#navlinks:hover{background-color:#333 !important;color:#fff !important;border-bottom-color:#111 !important}#navlinks:after{content:"";margin:0 0 0 0.5em;height:0;width:0;border:4px solid transparent;border-top-color:#fff;position:relative;top:0.7em}}img{width:auto}#main img{border:none}.field-image-caption{font-size:smaller;color:#999;font-family:"PT Sans Caption",Verdana,Tahoma,"DejaVu Sans",sans-serif;margin-bottom:1em;padding-left:20px;background-image:url(/sites/all/themes/cern/img/pictures.png);background-repeat:no-repeat;background-position:0 0.1em}.gridoverlay{max-width:1100px !important;margin:0 auto !important;width:90% !important}@media only screen and (max-width:749px){#navmobile{width:unset}}
    body{color:#444444}#wrapper{background:#ffffff}a,a:hover{color:#4d94cd}a:visited{color:#85228c}#site-name a,#header h3{color:#333333}#main-navigation a.active-trail{background:#ffffff}#main-navigation a{background:#4d94ce;border-color:#4d94ce;color:#fefefe}#main-navigation a:hover{background:#ffffff;color:#444444}#header{border-top-color:#4d94cc;background-color:#eaeaea}.sidebars .block{border-color:#e0e0e0}#navlinks.button,#navmobile,#search-block-form input[type=submit],#cernsearch-block-form input[type=submit]{color:#fefefe;background-color:#4d94ce}#footer{background-color:#eeeeee;}#footer .block h2{color:#999999;}
    </style>
    
    
    <!--[if lt IE 8]>
    <!-- Originally: link type="text/css" rel="stylesheet" href="//swan.web.cern.ch/sites/swan.web.cern.ch/files/css/css_IJ5Z0j6pyxnr4TEmO0hiXWrh8FMpT6aq_hWn1LpRNOY.css" media="all" / -->
    <style media="screen" type="text/css">
    #cern-toolbar a{display:inline;vertical-align:middle;}
    </style>
    <![endif]-->
    </head>
    
    <body id="index" class="html front not-logged-in one-sidebar sidebar-second page-node page-node- page-node-1 node-type-page cern-toolbar i18n-en logofloat" >
        <div class="region region-page-top">
        
    
    <div id="cern-toolbar" class="user-not-authenticated">
      <h1><a href="//home.cern" title="CERN">CERN <span>Accelerating science</span></a></h1>
    </div><!-- /.region -->
    
      <div id="page">
      <style>
        @media only screen and (min-width: 750px){
          .header-items-wrapper{
                }
        }
        @media only screen and (max-width: 749px){
          .header-items-wrapper{
                }
        }
      </style>
    
      <style media="screen" type="text/css">
        #left-block {
          float: left;
          width: 33%;
          top: 0;
        }
    
        #center-block {
          display: inline-block;
          margin: 0 auto;
          width: 33%;
          top: 0;
        }
      
        #right-block {
          float: right;
          width: 33%;
          top: 0;
        }
      </style>
    
    
    
      <!-- EOS, CERNBox & SWAN-->
      <header id="header" class="clearfix" role="banner">
        <div class="header-inner inner">
          <div class="header-group clearfix">
            <div class="header-items-wrapper">
    
              <!-- Left block for EOS -->
              <div id="left-block">
                <h1 id="logo">
                  <a href="http://eos.web.cern.ch/" title="EOS" >
                    <img src="logo-eos.png" alt="eos-logo" />
                  </a>
                </h1>
                <br clear="all" />
                <h2 id="site-name">EOS</h2>
                <h3 id="site-slogan">Disk-based storage service.</h3>
              </div>
    
              <!-- Center block for CERNBox -->
              <div id="center-block">
                <h1 id="logo">
                  <a href="/" title="CERNBox" >
                    <img src="logo-cernbox.png" alt="cernbox-logo"/>
                  </a>
                </h1>
                <br clear="all" />
                <h2 id="site-name">CERNBox</h2>
                <h3 id="site-slogan">Cloud Storage with Sync&Share.</h3>
              </div>
      
              <!-- Right block for SWAN -->
              <div id="right-block">
                <h1 id="logo">
                  <a href="/swan" title="SWAN" >
                    <img src="logo-swan.png" alt="swan-logo" />
                  </a>
                </h1>
                <br clear="all" />
                <h2 id="site-name">SWAN</h2>
                <h3 id="site-slogan">Interactive Data Analysis in the Cloud.</h3>
              </div>
    
            </div>
          </div><!-- /.header-group -->
    
        <div id="left-block">
        <nav id="main-navigation" role="navigation">
          <a href="http://eos-docs.web.cern.ch/eos-docs/">Docs</a>
          <a href="http://eos.web.cern.ch/" class="active">More Info</a>
        </nav>
        </div>
    
        <div id="left-block">
        <nav id="main-navigation" role="navigation">
          <a href="/" class="active">Try it!</a> 
          <a href="http://cernbox.web.cern.ch/">More Info</a>
        </nav>
        </div>
    
        <div id="right-block">
        <nav id="main-navigation" role="navigation">
          <a href="/swan" class="active">Try it!</a>
          <a href="http://swan.web.cern.ch/">More Info</a>
        </nav>
        </div>
          
        </div>
    	</header>
    	
    	
        <!--white background-->
    	<!-- Body -->
        <div id="wrapper" class="clearfix">
        <div id="main" class="inner clearfix">
        
          <div id="content" class="column" role="main">
          <article class="node-1 node node-page view-mode-full view-mode-full clearfix" about="/content/swan-service" typeof="foaf:Document">
    
          <h2><strong>User information</strong></h2>
            <h3>The following accounts have been pre-created (username:password)</h3>
            <h4>
            <ul>
              <li>reva:reva
              <li>einstein:relativity
              <li>marie:radioactivity
              <li>moss:vista
              <li>richard:superfluidity
            </ul>
    
          <p>
    
          <h2>More on Technology</h2>
    
          <h3><a href="https://sciencebox.web.cern.ch/">https://sciencebox.web.cern.ch/</a></h3>
    
          </article>
        </div>
    
        <!--Side bar-->
        <aside class="sidebars">
          <div class="region region-sidebar-second">
          <section id="block-views-news-block" class="block block-views">
            <h2>Feedback</h2>
            <div class="views-field views-field-title">
              <span class="field-content"><h3>Get in touch with us at:</h3></span>
              <span class="field-content"><h4>&nbsp sciencebox-talk (at) cern (dot) ch</h3></span>
            </div>
          </div>
        </aside>
      
        </div><!-- /#main -->
        </div><!-- /#wrapper -->
    
    
    
        <!-- footer -->
        <footer id="footer" class="page">
          <div class="inner clearfix">
            <div class="cern-logo">
              <a href="//home.cern" title="CERN" rel="CERN" >
                <img src="logo-cern-large.png" alt="CERN" />
              </a>
            </div>
          </div>
        </footer>
    
    
      </div><!-- /#page -->
    
      
      <!--[if (lt IE 9) & (!IEMobile)]>
        <script src="/sites/all/themes/cern_base/js/ie/imgsizer.js"></script>
        <script src="/sites/all/themes/cern_base/js/ie/selectivizr-min.js"></script>
        <script src="/sites/all/themes/cern_base/js/ie/jquery-extra-selectors.js"></script>
      <![endif]-->
      
      <!-- Prompts all IE6 users to install Google Chromeframe -->
      <!--[if lt IE 7]>
       <script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1/CFInstall.min.js"></script>
       <script>CFInstall.check();</script>
      <![endif]-->
      
      <!--<script src="//get.gridsetapp.com/125/overlay/"></script>-->
    
    </body>
    </html>
    
    
binaryData:
  logo-cern-large.png: |-
    
    iVBORw0KGgoAAAANSUhEUgAAAIEAAAB+CAYAAAADZHKcAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyRpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYxIDY0LjE0MDk0OSwgMjAxMC8xMi8wNy0xMDo1NzowMSAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNS4xIE1hY2ludG9zaCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo4N0U2QkJGQzE1NDMxMUUyOTkxOUIzOEY0QzNDMURENCIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDo4N0U2QkJGRDE1NDMxMUUyOTkxOUIzOEY0QzNDMURENCI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjg3RTZCQkZBMTU0MzExRTI5OTE5QjM4RjRDM0MxREQ0IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjg3RTZCQkZCMTU0MzExRTI5OTE5QjM4RjRDM0MxREQ0Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+1BY30gAAG39JREFUeNrsXQmY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
  logo-cernbox.png: |-
    
  logo-eos.png: |-
    
  logo-swan.png: |-
    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
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/hub/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hub
  labels:
    component: hub
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
rules:
  - apiGroups: [""]       # "" indicates the core API group
    resources: ["pods", "persistentvolumeclaims", "secrets", "services"]
    verbs: ["get", "watch", "list", "create", "delete"]
  - apiGroups: [""]       # "" indicates the core API group
    resources: ["events"]
    verbs: ["get", "watch", "list"]
---
# Source: sciencebox/charts/swan/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: swan
  namespace: sciencebox-0.0.7.tgz
rules:
  - apiGroups: [""]       # "" indicates the core API group
    resources: ["secrets", "services"]
    verbs: ["get", "watch", "list", "create", "delete", "update"]
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/hub/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hub
  labels:
    component: hub
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: hub
    namespace: "sciencebox-0.0.7.tgz"
roleRef:
  kind: Role
  name: hub
  apiGroup: rbac.authorization.k8s.io
---
# Source: sciencebox/charts/swan/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: swan
  namespace: sciencebox-0.0.7.tgz
subjects:
  - kind: ServiceAccount
    name: hub
roleRef:
  kind: Role
  name: swan
  apiGroup: rbac.authorization.k8s.io
---
# Source: sciencebox/charts/cernbox/charts/authproviderbearer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-authproviderbearer
  labels:
    helm.sh/chart: authproviderbearer-1.4.1
    app.kubernetes.io/name: authproviderbearer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 19001
      targetPort: http
      protocol: TCP
      name: http
    - port: 9158
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: authproviderbearer
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/cernbox/charts/authprovidermachine/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-authprovidermachine
  labels:
    helm.sh/chart: authprovidermachine-1.4.1
    app.kubernetes.io/name: authprovidermachine
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 19001
      targetPort: http
      protocol: TCP
      name: http
    - port: 9166
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: authprovidermachine
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/cernbox/charts/cernbox-web/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-cernbox-web
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: cernbox-web
    helm.sh/chart: cernbox-web-13.2.21
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: LoadBalancer
  sessionAffinity: None
  externalTrafficPolicy: "Cluster"
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/name: cernbox-web
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/cernbox/charts/gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-gateway
  labels:
    helm.sh/chart: gateway-1.4.1
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9143
      targetPort: http
      protocol: TCP
      name: http
    - port: 9142
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/cernbox/charts/ocis/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-ocis
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9130
      targetPort: 9130
      protocol: TCP
      name: idp
    - port: 443
      targetPort: 9200
      protocol: TCP
      name: proxy
  selector:
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/cernbox/charts/storageproviderhome/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-storageproviderhome
  labels:
    helm.sh/chart: storageproviderhome-1.4.1
    app.kubernetes.io/name: storageproviderhome
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 17000
      targetPort: http
      protocol: TCP
      name: http
    - port: 18000
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: storageproviderhome
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/cernbox/charts/storageproviderpublic/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-storageproviderpublic
  labels:
    helm.sh/chart: storageproviderpublic-1.4.1
    app.kubernetes.io/name: storageproviderpublic
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 19001
      targetPort: http
      protocol: TCP
      name: http
    - port: 9278
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: storageproviderpublic
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/cernbox/charts/storageprovideruser/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-storageprovideruser
  labels:
    helm.sh/chart: storageprovideruser-1.4.1
    app.kubernetes.io/name: storageprovideruser
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 15000
      targetPort: http
      protocol: TCP
      name: http
    - port: 16000
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: storageprovideruser
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/eos/charts/fst/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-fst
  labels:
    helm.sh/chart: fst-0.1.1
    app.kubernetes.io/name: fst
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 1095
      targetPort: 1095
      protocol: TCP
      name: xrootd-fst
    - port: 8001
      targetPort: 8001
      protocol: TCP
      name: microhttp
  selector:
    app.kubernetes.io/name: fst
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/eos/charts/mgm/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-mgm
  labels:
    helm.sh/chart: mgm-0.1.4
    app.kubernetes.io/name: mgm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.80"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 1094
      targetPort: 1094
      protocol: TCP
      name: xrootd-mgm
    - port: 1096
      targetPort: 1096
      protocol: TCP
      name: xrootd-sync
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: xrootd-http
    - port: 1100
      targetPort: 1100
      protocol: TCP
      name: fusex
    - port: 1097
      targetPort: 1097
      protocol: TCP
      name: xrtood-mq
  selector:
    app.kubernetes.io/name: mgm
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/eos/charts/qdb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-qdb
  labels:
    helm.sh/chart: qdb-0.1.1
    app.kubernetes.io/name: qdb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 7777
      targetPort: 7777
      protocol: TCP
      name: xrootd-qdb
  selector:
    app.kubernetes.io/name: qdb
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/ldap/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-ldap
  namespace: sciencebox-0.0.7.tgz
  labels:
    app: my-release-ldap
    chart: ldap-2.0.4
    release: my-release
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: ldap-port
      protocol: TCP
      port: 389
      targetPort: ldap-port
      nodePort: null
    - name: ssl-ldap-port
      protocol: TCP
      port: 636
      targetPort: ssl-ldap-port
      nodePort: null
  selector:
    app: my-release-ldap
    release: my-release
---
# Source: sciencebox/charts/ldap/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-ldap-headless
  labels:
    app: my-release-ldap
    chart: ldap-2.0.4
    release: my-release
    heritage: Helm
spec:
  ports:
  - port: 389
    name: ldap-port
    targetPort: ldap-port
  clusterIP: None
  selector:
    app: my-release-ldap
    release: my-release  
  type: ClusterIP
  sessionAffinity: None
---
# Source: sciencebox/charts/mariadb/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-mariadb
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.4.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: primary
---
# Source: sciencebox/charts/nginx-welcome-page/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-nginx-welcome-page
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: nginx-welcome-page
    helm.sh/chart: nginx-welcome-page-13.2.19
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/name: nginx-welcome-page
    app.kubernetes.io/instance: my-release
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/hub/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hub
  labels:
    component: hub
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /hub/metrics
    prometheus.io/port: "8081"
spec:
  type: ClusterIP
  selector:
    component: hub
    app: jupyterhub
    release: my-release
  ports:
    - name: hub
      port: 8081
      targetPort: http
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/proxy/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: proxy-api
  labels:
    component: proxy-api
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
spec:
  selector:
    component: proxy
    app: jupyterhub
    release: my-release
  ports:
    - port: 8001
      targetPort: api
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/proxy/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: proxy-public
  labels:
    component: proxy-public
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
spec:
  selector:
    component: proxy
    release: my-release
  ports:
    - name: http
      port: 80
      targetPort: http
  type: ClusterIP
---
# Source: sciencebox/charts/swan/charts/cvmfs/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-release-cvmfs
  labels:
    helm.sh/chart: cvmfs-0.0.5
    app.kubernetes.io/name: cvmfs
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cvmfs
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cvmfs
        app.kubernetes.io/instance: my-release
        component: swan-users
        service: swan
    spec:
      #hostPID: true
      terminationGracePeriodSeconds: 60
      initContainers:
        - name: cvmfs-init0-create-varruncvmfs
          image: "gitlab-registry.cern.ch/sciencebox/docker-images/cvmfs:2.9.0"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args: ["mkdir -p /var/run/cvmfs; chown cvmfs:cvmfs /var/run/cvmfs"]
          volumeMounts:
            - name: cvmfs-run-sockets
              mountPath: /var/run/cvmfs
        - name: cvmfs-init1-create-mountpoints
          image: "gitlab-registry.cern.ch/sciencebox/docker-images/cvmfs:2.9.0"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args: ["for repo in $CVMFS_REPOSITORIES; do mkdir -p /cvmfs/$repo; chown cvmfs:cvmfs /cvmfs/$repo; done"]
          env:
            - name: CVMFS_REPOSITORIES
              value: cvmfs-config.cern.ch sft.cern.ch sft-nightlies.cern.ch
          volumeMounts:
            - name: cvmfs-export
              mountPath: /cvmfs
      containers:
        - name: cvmfs
          image: "gitlab-registry.cern.ch/sciencebox/docker-images/cvmfs:2.9.0"
          imagePullPolicy: IfNotPresent
          command: ["/usr/bin/supervisord", "-c", "/etc/supervisord.conf"]
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
          lifecycle:
            preStop:
              exec:
                command: ["/usr/bin/supervisorctl", "shutdown"]
          volumeMounts:
            - name: cvmfs-dev-fuse
              mountPath: /dev/fuse
            - name: cvmfs-run-sockets
              mountPath: /var/run/cvmfs
            - name: cvmfs-cfgmap-supervisord-conf
              mountPath: /etc/supervisord.conf
              subPath: supervisord.conf
            - name: cvmfs-cfgmap-supervisord-procs 
              mountPath: /etc/supervisord.d
            - name: cvmfs-cfgmap-default-local
              mountPath: /etc/cvmfs/default.local
              subPath: default.local
            - name: cvmfs-cfgmap-config-d
              mountPath: /etc/cvmfs/config.d
            - name: cvmfs-export
              mountPath: /cvmfs
              mountPropagation: Bidirectional
        - name: cvmfs-prefetcher
          image: "gitlab-registry.cern.ch/sciencebox/docker-images/cvmfs:2.9.0"
          imagePullPolicy: IfNotPresent
          command: ["/usr/sbin/crond", "-n", "-s", "-x", "ext,sch,proc,pars,misc,bit"]
          volumeMounts:
            - name: cvmfs-prefetcher-crontab
              mountPath: /etc/cron.d
            - name: cvmfs-export
              mountPath: /cvmfs
              mountPropagation: HostToContainer
      volumes:
        - name: cvmfs-dev-fuse
          hostPath:
            path: /dev/fuse
            type: CharDevice
        - name: cvmfs-run-sockets
          emptyDir:
            medium: Memory
        - name: cvmfs-cfgmap-supervisord-conf
          configMap:
            name: my-release-cvmfs-cfgmap-supervisord-conf
        - name: cvmfs-cfgmap-supervisord-procs
          configMap:
            name: my-release-cvmfs-cfgmap-supervisord-procs
        - name: cvmfs-cfgmap-default-local
          configMap:
            name: my-release-cvmfs-cfgmap-default-local
        - name: cvmfs-cfgmap-config-d
          configMap:
            name: my-release-cvmfs-cfgmap-config-d
        - name: cvmfs-prefetcher-crontab
          configMap:
            name: my-release-cvmfs-prefetcher-crontab
        - name: cvmfs-export
          hostPath:
            path: /var/cvmfs
            type: DirectoryOrCreate
---
# Source: sciencebox/charts/swan/charts/fusex/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-release-fusex
  labels:
    helm.sh/chart: fusex-0.1.3
    app.kubernetes.io/name: fusex
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.86"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fusex
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fusex
        app.kubernetes.io/instance: my-release
        component: swan-users
        service: swan
    spec:
      hostPID: true
      hostNetwork: false
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 60
      initContainers:
        - name: eos-fusex-init0-waitformgm
          image: gitlab-registry.cern.ch/dss/eos/eos-fusex:5.0.31
          imagePullPolicy: Always
          env:
            - name: EOS_MGM_URL
              value: root://my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
          command: ["/bin/bash", "/root/fusex_waitformgm.sh"]
          volumeMounts:
            - name: fusex-cfgmap-fusex-waitformgm
              mountPath: /root/fusex_waitformgm.sh
              subPath: fusex_waitformgm.sh
            - name: fusex-sss-keytab
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
      #  - name: eos-fusex-init0-cleanup
      #    image: gitlab-registry.cern.ch/dss/eos/eos-fusex:5.0.31
      #    imagePullPolicy: Always
      #    command: ["/bin/sleep", "infinity"]
      containers:
        - name: eos-fusex
          image: gitlab-registry.cern.ch/dss/eos/eos-fusex:5.0.31
          imagePullPolicy: Always
          command: ["/usr/bin/eosxd"]
          args: ["-f", "-ofsname=eos"]
          env:
            - name: EOS_MGM_URL
              value: root://my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
          livenessProbe:
            exec:
              command:
              - /bin/ps
              - -C
              - eosxd
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: fusex-cfgmap-fuse-conf
              mountPath: /etc/eos/fuse.eos.conf
              subPath: fuse.eos.conf
            - name: fusex-sss-keytab
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
            - name: fusex-eos-mount
              mountPath: /eos
              mountPropagation: Bidirectional
      volumes:
        - name: fusex-cfgmap-fuse-conf
          configMap:
            name: my-release-fusex-cfgmap-fuse-conf
            defaultMode: 0644
        - name: fusex-cfgmap-fusex-waitformgm
          configMap:
            name: my-release-fusex-cfgmap-fusex-waitformgm
            defaultMode: 0755
        - name: fusex-sss-keytab
          secret:
            secretName: sciencebox-eos-sss-keytab
            defaultMode: 0400
        - name: fusex-eos-mount
          hostPath:
            path: /var/eos
            type: DirectoryOrCreate
---
# Source: sciencebox/charts/cernbox/charts/authproviderbearer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-authproviderbearer
  labels:
    helm.sh/chart: authproviderbearer-1.4.1
    app.kubernetes.io/name: authproviderbearer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: authproviderbearer
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/name: authproviderbearer
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: authproviderbearer
          image: "gitlab-registry.cern.ch/sciencebox/hotfixes/revad:latest-20220815"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 19001
              protocol: TCP
            - name: grpc
              containerPort: 9158
              protocol: TCP
          command:
            - /usr/bin/revad
          args:
              - "-c"
              - "/etc/revad/revad.toml"
              - "-p"
              - "/var/run/revad.pid"
          volumeMounts:
            - name: my-release-authproviderbearer-configfiles
              mountPath: /etc/revad/
            - name: my-release-authproviderbearer-datadir
              mountPath: /var/tmp/reva
              subPath: ""
      volumes:
        - name: my-release-authproviderbearer-configfiles
          configMap:
            name: authprovider-bearer-config
        - name: my-release-authproviderbearer-datadir
          emptyDir:
            {}
---
# Source: sciencebox/charts/cernbox/charts/authprovidermachine/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-authprovidermachine
  labels:
    helm.sh/chart: authprovidermachine-1.4.1
    app.kubernetes.io/name: authprovidermachine
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: authprovidermachine
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/name: authprovidermachine
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: authprovidermachine
          image: "gitlab-registry.cern.ch/sciencebox/hotfixes/revad:latest-20220815"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 19001
              protocol: TCP
            - name: grpc
              containerPort: 9166
              protocol: TCP
          command:
            - /usr/bin/revad
          args:
              - "-c"
              - "/etc/revad/revad.toml"
              - "-p"
              - "/var/run/revad.pid"
          volumeMounts:
            - name: my-release-authprovidermachine-configfiles
              mountPath: /etc/revad/
            - name: my-release-authprovidermachine-datadir
              mountPath: /var/tmp/reva
              subPath: ""
      volumes:
        - name: my-release-authprovidermachine-configfiles
          configMap:
            name: authprovider-machine-config
        - name: my-release-authprovidermachine-datadir
          emptyDir:
            {}
---
# Source: sciencebox/charts/cernbox/charts/cernbox-web/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-cernbox-web
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: cernbox-web
    helm.sh/chart: cernbox-web-13.2.21
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: cernbox-web
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cernbox-web
        helm.sh/chart: cernbox-web-13.2.21
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      automountServiceAccountToken: false
      shareProcessNamespace: false
      serviceAccountName: default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: cernbox-web
                    app.kubernetes.io/instance: my-release
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      hostNetwork: false
      hostIPC: false
      initContainers:
        - command:
          - /bin/sh
          - /root/cbox_init.sh
          env:
          - name: WEB_ASSET
            value: https://github.com/cernbox/web-release/releases/download/v0.0.9/web.tar.gz
          - name: WEB_THEME
            value: https://github.com/cernbox/web-extensions/releases/download/theme-cernbox/v0.1.7/theme-cernbox.tar.gz
          image: busybox:stable
          name: cernbox-web-init
          volumeMounts:
          - mountPath: /root/cbox_init.sh
            name: web-init
            subPath: cbox_init.sh
          - mountPath: /var/www/web/
            name: web-content
      containers:
        - name: nginx
          image: docker.io/bitnami/nginx:1.23.3-debian-11-r8
          imagePullPolicy: "IfNotPresent"
          command:
            - /opt/bitnami/nginx/sbin/nginx
          args:
            - -c
            - /etc/nginx/nginx.conf
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: NGINX_HTTP_PORT_NUMBER
              value: "8080"
          envFrom:
          ports:
            - name: http
              containerPort: 8080
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: web-nginx
              subPath: nginx.conf
            - mountPath: /var/www/web/config.json
              name: web-config
              subPath: config.json
            - mountPath: /var/www/web/
              name: web-content
      volumes:
        - configMap:
            name: cernbox-web-nginx
          name: web-nginx
        - configMap:
            name: cernbox-web-config
          name: web-config
        - configMap:
            defaultMode: 493
            name: cernbox-web-init
          name: web-init
        - emptyDir: {}
          name: web-content
---
# Source: sciencebox/charts/cernbox/charts/gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-gateway
  labels:
    helm.sh/chart: gateway-1.4.1
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/name: gateway
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: gateway
          image: "cs3org/revad:v1.19.0"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 9143
              protocol: TCP
            - name: grpc
              containerPort: 9142
              protocol: TCP
          command:
            - /usr/bin/revad
          args:
              - "-c"
              - "/etc/revad/revad.toml"
              - "-p"
              - "/var/run/revad.pid"
          volumeMounts:
            - name: my-release-gateway-configfiles
              mountPath: /etc/revad/
            - name: my-release-gateway-datadir
              mountPath: /var/tmp/reva
              subPath: ""
          env:
            - name: "XrdSecPROTOCOL"
              value: "sss"
      volumes:
        - name: my-release-gateway-configfiles
          configMap:
            name: gateway-config
        - name: my-release-gateway-datadir
          emptyDir:
            {}
---
# Source: sciencebox/charts/cernbox/charts/ocis/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ocis
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ocis
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: ocis
          image: "gitlab-registry.cern.ch/sciencebox/docker-images/ocis:1.20.0"
          imagePullPolicy: Always
          command: ["/usr/bin/supervisord", "-c", "/etc/supervisord.conf"]
          volumeMounts:
            - name: ocis-configfiles
              mountPath: /etc/ocis/
            - name: ocis-supervisord-conf
              mountPath: /etc/supervisord.conf
              subPath: supervisord.conf
            - name: ocis-supervisord-procs
              mountPath: /etc/supervisord.d
            - name: ocis-data
              mountPath: "/var/tmp"
              subPath: ""
          env:
            - name: "ACCOUNTS_DEMO_USERS_AND_GROUPS"
              value: "false"
            - name: "IDM_CREATE_DEMO_USERS"
              value: "false"
            - name: "IDP_ACCESS_TOKEN_EXPIRATION"
              value: "28800"
            - name: "IDP_HTTP_ADDR"
              value: "0.0.0.0:9130"
            - name: "IDP_INSECURE"
              value: "true"
            - name: "IDP_ISS"
              value: "https://sciencebox.local"
            - name: "IDP_LDAP_LOGIN_ATTRIBUTE"
              value: "uid"
            - name: "IDP_LDAP_UUID_ATTRIBUTE"
              value: "ownclouduuid"
            - name: "IDP_LDAP_UUID_ATTRIBUTE_TYPE"
              value: "binary"
            - name: "LDAP_BIND_DN"
              value: "cn=readuser,dc=owncloud,dc=com"
            - name: "LDAP_BIND_PASSWORD"
              value: "readuser"
            - name: "LDAP_GROUPFILTER"
              value: "(objectclass=owncloud)"
            - name: "LDAP_GROUP_BASE_DN"
              value: "dc=owncloud,dc=com"
            - name: "LDAP_GROUP_OBJECTCLASS"
              value: "groupOfUniqueNames"
            - name: "LDAP_INSECURE"
              value: "true"
            - name: "LDAP_LOGIN_ATTRIBUTES"
              value: "uid,mail"
            - name: "LDAP_URI"
              value: "ldaps://sciencebox-ldap:636"
            - name: "LDAP_USERFILTER"
              value: "(objectclass=owncloud)"
            - name: "LDAP_USER_BASE_DN"
              value: "dc=owncloud,dc=com"
            - name: "LDAP_USER_OBEJECTCLASS"
              value: "inetOrgPerson"
            - name: "OCIS_INSECURE"
              value: "true"
            - name: "OCIS_JWT_SECRET"
              value: "Pive-Fumkiu4"
            - name: "OCIS_LOG_LEVEL"
              value: "debug"
            - name: "OCIS_MACHINE_AUTH_API_KEY"
              value: "random_api_key"
            - name: "PROXY_ACCOUNT_BACKEND_TYPE"
              value: "cs3"
            - name: "PROXY_ENABLE_BASIC_AUTH"
              value: "false"
            - name: "PROXY_TLS"
              value: "true"
            - name: "REVA_GATEWAY"
              value: "sciencebox-gateway.default.svc.cluster.local:9142"
            - name: "STORAGE_TRANSFER_SECRET"
              value: "replace-me-with-a-transfer-secret"
          resources:
            {}
      volumes:
        - name: ocis-configfiles
          configMap:
            name: my-release-ocis-configfiles
            defaultMode: 0777
        - name: ocis-supervisord-conf
          configMap:
            name: my-release-ocis-supervisord-conf
        - name: ocis-supervisord-procs
          configMap:
            name: my-release-ocis-supervisord-procs
        - name: ocis-data
          emptyDir:
            {}
---
# Source: sciencebox/charts/cernbox/charts/storageproviderhome/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-storageproviderhome
  labels:
    helm.sh/chart: storageproviderhome-1.4.1
    app.kubernetes.io/name: storageproviderhome
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: storageproviderhome
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/name: storageproviderhome
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: storageproviderhome
          image: "cs3org/revad:v1.19.0-eos"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 17000
              protocol: TCP
            - name: grpc
              containerPort: 18000
              protocol: TCP
          command:
            - /usr/bin/revad
          args:
              - "-c"
              - "/etc/revad/revad.toml"
              - "-p"
              - "/var/run/revad.pid"
          volumeMounts:
            - name: my-release-storageproviderhome-configfiles
              mountPath: /etc/revad/
            - name: my-release-storageproviderhome-datadir
              mountPath: /var/tmp/reva
              subPath: ""
              
            - mountPath: /tmp/reva
              name: tmp-volume
            - mountPath: /etc/eos.keytab
              name: eos-keytab
              readOnly: true
              subPath: eos.keytab
          env:
            - name: "XrdSecPROTOCOL"
              value: "sss"
      volumes:
        - name: my-release-storageproviderhome-configfiles
          configMap:
            name: storageprovider-home-config
        - name: my-release-storageproviderhome-datadir
          emptyDir:
            {}
          
        - emptyDir: {}
          name: tmp-volume
        - name: eos-keytab
          secret:
            defaultMode: 256
            secretName: sciencebox-eos-sss-keytab
---
# Source: sciencebox/charts/cernbox/charts/storageproviderpublic/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-storageproviderpublic
  labels:
    helm.sh/chart: storageproviderpublic-1.4.1
    app.kubernetes.io/name: storageproviderpublic
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: storageproviderpublic
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/name: storageproviderpublic
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: storageproviderpublic
          image: "cs3org/revad:v1.19.0-eos"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 19001
              protocol: TCP
            - name: grpc
              containerPort: 9278
              protocol: TCP
          command:
            - /usr/bin/revad
          args:
              - "-c"
              - "/etc/revad/revad.toml"
              - "-p"
              - "/var/run/revad.pid"
          volumeMounts:
            - name: my-release-storageproviderpublic-configfiles
              mountPath: /etc/revad/
            - name: my-release-storageproviderpublic-datadir
              mountPath: /var/tmp/reva
              subPath: ""
              
            - mountPath: /tmp/reva
              name: tmp-volume
            - mountPath: /etc/eos.keytab
              name: eos-keytab
              readOnly: true
              subPath: eos.keytab
          env:
            - name: "XrdSecPROTOCOL"
              value: "sss"
      volumes:
        - name: my-release-storageproviderpublic-configfiles
          configMap:
            name: storageprovider-public-config
        - name: my-release-storageproviderpublic-datadir
          emptyDir:
            {}
          
        - emptyDir: {}
          name: tmp-volume
        - name: eos-keytab
          secret:
            defaultMode: 256
            secretName: sciencebox-eos-sss-keytab
---
# Source: sciencebox/charts/cernbox/charts/storageprovideruser/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-storageprovideruser
  labels:
    helm.sh/chart: storageprovideruser-1.4.1
    app.kubernetes.io/name: storageprovideruser
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: storageprovideruser
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/name: storageprovideruser
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: storageprovideruser
          image: "cs3org/revad:v1.19.0-eos"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 15000
              protocol: TCP
            - name: grpc
              containerPort: 16000
              protocol: TCP
          command:
            - /usr/bin/revad
          args:
              - "-c"
              - "/etc/revad/revad.toml"
              - "-p"
              - "/var/run/revad.pid"
          volumeMounts:
            - name: my-release-storageprovideruser-configfiles
              mountPath: /etc/revad/
            - name: my-release-storageprovideruser-datadir
              mountPath: /var/tmp/reva
              subPath: ""
              
            - mountPath: /tmp/reva
              name: tmp-volume
            - mountPath: /etc/eos.keytab
              name: eos-keytab
              readOnly: true
              subPath: eos.keytab
          env:
            - name: "XrdSecPROTOCOL"
              value: "sss"
      volumes:
        - name: my-release-storageprovideruser-configfiles
          configMap:
            name: storageprovider-user-config
        - name: my-release-storageprovideruser-datadir
          emptyDir:
            {}
          
        - emptyDir: {}
          name: tmp-volume
        - name: eos-keytab
          secret:
            defaultMode: 256
            secretName: sciencebox-eos-sss-keytab
---
# Source: sciencebox/charts/nginx-welcome-page/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-nginx-welcome-page
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: nginx-welcome-page
    helm.sh/chart: nginx-welcome-page-13.2.19
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-welcome-page
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-welcome-page
        helm.sh/chart: nginx-welcome-page-13.2.19
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/server-block-configuration: 735ae794cece5b4c40b71b26fd52b416484fdf54f47d41cccd6a252b81e1d524
    spec:
      
      automountServiceAccountToken: false
      shareProcessNamespace: false
      serviceAccountName: default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: nginx-welcome-page
                    app.kubernetes.io/instance: my-release
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      hostNetwork: false
      hostIPC: false
      initContainers:
      containers:
        - name: nginx
          image: docker.io/bitnami/nginx:1.23.3-debian-11-r2
          imagePullPolicy: "IfNotPresent"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: NGINX_HTTP_PORT_NUMBER
              value: "8080"
          envFrom:
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
            tcpSocket:
              port: http
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: nginx-server-block
              mountPath: /opt/bitnami/nginx/conf/server_blocks
            - name: staticsite
              mountPath: /app
      volumes:
        - name: nginx-server-block
          configMap:
            name: my-release-nginx-welcome-page-server-block
        - name: staticsite
          
          configMap:
            name: sciencebox-landing-page-cfgmap
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/hub/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hub
  labels:
    component: hub
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      component: hub
      app: jupyterhub
      release: my-release
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: hub
        app: jupyterhub
        release: my-release
        hub.jupyter.org/network-access-proxy-api: "true"
        hub.jupyter.org/network-access-proxy-http: "true"
        hub.jupyter.org/network-access-singleuser: "true"
      annotations:
        checksum/config-map: 7d7e47bfbc326f5ef86f75a40b76983635aac195e2014f0e68c06b11571dcc30
        checksum/secret: 37b813763e0f1c0799fca031877d87746d2bbfb5814ef0a5a2a4e17e7610d4df
    spec:
      nodeSelector: {}
      tolerations:
        - effect: NoSchedule
          key: hub.jupyter.org/dedicated
          operator: Equal
          value: core
        - effect: NoSchedule
          key: hub.jupyter.org_dedicated
          operator: Equal
          value: core
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: hub.jupyter.org/node-purpose
                    operator: In
                    values: [core]
      volumes:
        - name: config
          configMap:
            name: hub
        - name: secret
          secret:
            secretName: hub
        - configMap:
            items:
            - key: options_form_config.json
              path: options_form_config.json
            - key: jupyterhub_form.html
              path: jupyterhub_form.html
            - key: swan_config.py
              path: swan_config.py
            name: swan-scripts
          name: swan-jh
      serviceAccountName: hub
      securityContext:
        fsGroup: 0
      containers:
        - name: hub
          image: gitlab-registry.cern.ch/swan/docker-images/jupyterhub:v1.23
          args:
            - jupyterhub
            - --config
            - /usr/local/etc/jupyterhub/jupyterhub_config.py
            - --debug
          volumeMounts:
            - mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.py
              subPath: jupyterhub_config.py
              name: config
            - mountPath: /usr/local/etc/jupyterhub/z2jh.py
              subPath: z2jh.py
              name: config
            - mountPath: /usr/local/etc/jupyterhub/config/
              name: config
            - mountPath: /usr/local/etc/jupyterhub/secret/
              name: secret
            - mountPath: /srv/jupyterhub/options_form_config.json
              name: swan-jh
              subPath: options_form_config.json
            - mountPath: /srv/jupyterhub/jupyterhub_form.html
              name: swan-jh
              subPath: jupyterhub_form.html
            - mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/1_swan_config.py
              name: swan-jh
              subPath: swan_config.py
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 0
            runAsUser: 0
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: HELM_RELEASE_NAME
              value: "my-release"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIGPROXY_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hub
                  key: hub.config.ConfigurableHTTPProxy.auth_token
            - name: "JUPYTERHUB_CRYPT_KEY"
              value: "8b9fa8fc38c56eb4b3194d875924bb27062635b038b75ffbc91d9a6212bd3e55"
          ports:
            - name: http
              containerPort: 8081
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/proxy/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy
  labels:
    component: proxy
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      component: proxy
      app: jupyterhub
      release: my-release
  strategy:
    rollingUpdate: null
    type: Recreate
  template:
    metadata:
      labels:
        component: proxy
        app: jupyterhub
        release: my-release
        hub.jupyter.org/network-access-hub: "true"
        hub.jupyter.org/network-access-singleuser: "true"
      annotations:
        # We want to restart proxy only if the auth token changes
        # Other changes to the hub config should not restart.
        # We truncate to 4 chars to avoid leaking auth token info,
        # since someone could brute force the hash to obtain the token
        #
        # Note that if auth_token has to be generated at random, it will be
        # generated at random here separately from being generated at random in
        # the k8s Secret template. This will cause this annotation to change to
        # match the k8s Secret during the first upgrade following an auth_token
        # was generated.
        checksum/auth-token: "134f"
        checksum/proxy-secret: "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b"
    spec:
      terminationGracePeriodSeconds: 60
      nodeSelector: {}
      tolerations:
        - effect: NoSchedule
          key: hub.jupyter.org/dedicated
          operator: Equal
          value: core
        - effect: NoSchedule
          key: hub.jupyter.org_dedicated
          operator: Equal
          value: core
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: hub.jupyter.org/node-purpose
                    operator: In
                    values: [core]
      containers:
        - name: chp
          image: jupyterhub/configurable-http-proxy:4.5.0
          command:
            - configurable-http-proxy
            - "--ip="
            - "--api-ip="
            - --api-port=8001
            - --default-target=http://hub:$(HUB_SERVICE_PORT)
            - --error-target=http://hub:$(HUB_SERVICE_PORT)/hub/error
            - --port=8000
            - --log-level=debug
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
          env:
            - name: CONFIGPROXY_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  # NOTE: References the chart managed k8s Secret even if
                  #       hub.existingSecret is specified to avoid using the
                  #       lookup function on the user managed k8s Secret.
                  name: hub
                  key: hub.config.ConfigurableHTTPProxy.auth_token
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
            - name: api
              containerPort: 8001
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 10
            httpGet:
              path: /_chp_healthz
              port: http
              scheme: HTTP
          readinessProbe:
            initialDelaySeconds: 0
            periodSeconds: 2
            httpGet:
              path: /_chp_healthz
              port: http
              scheme: HTTP
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 65534
            runAsUser: 65534
---
# Source: sciencebox/charts/eos/charts/fst/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-fst
  labels:
    helm.sh/chart: fst-0.1.1
    app.kubernetes.io/name: fst
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: my-release-fst
  replicas: 4
  selector:
    matchLabels:
      app.kubernetes.io/name: fst
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fst
        app.kubernetes.io/instance: my-release
        component: eos-fst
        service: eos
    spec:
      hostNetwork: false
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - eos-fst
                - key: service
                  operator: In
                  values:
                  - eos
              topologyKey: "kubernetes.io/hostname"
      initContainers:
        # Required until https://github.com/kubernetes/kubernetes/issues/81089 is merged
        - name: eos-fst-init0-sss-keytab-ownership
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/bash", "-c"]
          args: ["cp /root/sss_keytab/input/eos.keytab /root/sss_keytab/output/eos.keytab; chown daemon:daemon /root/sss_keytab/output/eos.keytab; chmod 400 /root/sss_keytab/output/eos.keytab"]
          volumeMounts:
            - name: eos-sss-keytab
              mountPath: /root/sss_keytab/input/eos.keytab
              subPath: eos.keytab
            - name: eos-sss-keytab-fixedownership
              mountPath: /root/sss_keytab/output
        - name: eos-fst-init1-chown-storage
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args: ["chown daemon:daemon /fst_storage"]
          volumeMounts:
            - name: fst-storage
              mountPath: /fst_storage
        - name: eos-fst-init2-fst-init
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          env:
            - name: EOS_MGM_URL
              value: root://my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
          envFrom:
            - configMapRef:
                name: my-release-fst-cfgmap-sysconfig-eos
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - SYS_PTRACE
          command: ["/bin/bash", "/root/fst_init.sh"]
          volumeMounts:
            - name: fst-cfgmap-xrd-cf-fst
              mountPath: /etc/xrd.cf.fst
              subPath: xrd.cf.fst
            - name: eos-sss-keytab-fixedownership
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
            - name: fst-storage
              mountPath: /fst_storage
            - name: fst-cfgmap-fst-init
              mountPath: /root/fst_init.sh
              subPath: fst_init.sh
      containers:
        - name: eos-fst
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args: ["/opt/eos/xrootd/bin/xrootd -n fst -c /etc/xrd.cf.fst -l /var/log/eos/xrdlog.fst -Rdaemon"]
          env:
            - name: EOS_MGM_URL
              value: root://my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
            - name: EOS_FS_FULL_SIZE_IN_GB
              value: "5"
          envFrom:
            - configMapRef:
                name: my-release-fst-cfgmap-sysconfig-eos
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - SYS_PTRACE
          livenessProbe:
            tcpSocket:
              port: 1095
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: fst-cfgmap-xrd-cf-fst
              mountPath: /etc/xrd.cf.fst
              subPath: xrd.cf.fst
            ## TODO: What about the data at /var/eos/md/... ?
            ##   Should this be persisted?
            ## - name: fst-data
            ##   mountPath: /var/eos
            - name: eos-sss-keytab-fixedownership
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
            - name: fst-storage
              mountPath: /fst_storage
            - name: fst-logs
              mountPath: /var/log/eos
      volumes:
        - name: fst-cfgmap-xrd-cf-fst
          configMap:
            name: my-release-fst-cfgmap-xrd-cf-fst
            defaultMode: 0755
        - name: fst-cfgmap-fst-init
          configMap:
            name: my-release-fst-cfgmap-fst-init
            defaultMode: 0755
        - name: eos-sss-keytab
          secret:
            secretName: sciencebox-eos-sss-keytab
            defaultMode: 0400
        - name: eos-sss-keytab-fixedownership
          emptyDir: {}
        - name: fst-logs
          emptyDir: {}
        - name: fst-storage
          emptyDir: {}
---
# Source: sciencebox/charts/eos/charts/mgm/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-mgm
  labels:
    helm.sh/chart: mgm-0.1.4
    app.kubernetes.io/name: mgm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.80"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: my-release-mgm
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mgm
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mgm
        app.kubernetes.io/instance: my-release
        component: eos-mgm
        service: eos
    spec:
      hostNetwork: false
      dnsPolicy: ClusterFirst
      initContainers:
        - name: eos-mgm-init0-logfolder-create
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args: ["for fld in mgm tx; do mkdir -p /var/log/eos/$fld; done && chown -R daemon:daemon /var/log/eos"]
          volumeMounts:
            - name: mgm-logs
              mountPath: /var/log/eos
        - name: eos-mgm-init1-vareos-create
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args: ["for fld in ns-queue; do mkdir -p /var/eos/$fld; done && chown -R daemon:daemon /var/eos"]
          volumeMounts:
            - name: mgm-data
              mountPath: /var/eos
        # Required until https://github.com/kubernetes/kubernetes/issues/81089 is merged
        - name: eos-mgm-init2-sss-keytab-ownership
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/bash", "-c"]
          args: ["cp /root/sss_keytab/input/eos.keytab /root/sss_keytab/output/eos.keytab; chown daemon:daemon /root/sss_keytab/output/eos.keytab; chmod 400 /root/sss_keytab/output/eos.keytab"]
          volumeMounts:
            - name: eos-sss-keytab
              mountPath: /root/sss_keytab/input/eos.keytab
              subPath: eos.keytab
            - name: eos-sss-keytab-fixedownership
              mountPath: /root/sss_keytab/output
        - name: eos-mgm-init3-mgm-init
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: my-release-mgm-cfgmap-sysconfig-eos
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - SYS_PTRACE
          command: ["/bin/bash", "/root/mgm_init.sh"]
          volumeMounts:
            - name: mgm-cfgmap-xrd-cf-mgm
              mountPath: /etc/xrd.cf.mgm
              subPath: xrd.cf.mgm
            - name: eos-sss-keytab-fixedownership
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
            - name: mgm-data
              mountPath: /var/eos
            - name: mgm-logs
              mountPath: /var/log/eos
            - name: mgm-cfgmap-mgm-init
              mountPath: /root/mgm_init.sh
              subPath: mgm_init.sh
      containers:
        - name: eos-mgm
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args: ["/opt/eos/xrootd/bin/xrootd -n mgm -c /etc/xrd.cf.mgm -l /var/log/eos/xrdlog.mgm -Rdaemon"]
          env:
            - name: LD_PRELOAD
              value: "/usr/lib64/libjemalloc.so.1"
            - name: "EOS_MGM_OIDC_INSECURE"
              value: "true"
            - name: "EOS_MGM_OIDC_MAP_FIELD"
              value: "preferred_username"
          envFrom:
            - configMapRef:
                name: my-release-mgm-cfgmap-sysconfig-eos
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - SYS_PTRACE
          startupProbe:
            tcpSocket:
              port: 1094
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6  # Totals to 60 (6*10s) startup delay
          livenessProbe:
            tcpSocket:
              port: 1094
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - /usr/bin/eos
              - ns
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: nscd-socket
              mountPath: /run/nscd
            - name: cfgmap-nsswitch-conf
              mountPath: /etc/nsswitch.conf
              subPath: nsswitch.conf
            - name: mgm-cfgmap-xrd-cf-mgm
              mountPath: /etc/xrd.cf.mgm
              subPath: xrd.cf.mgm
            - name: eos-sss-keytab-fixedownership
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
            - name: mgm-data
              mountPath: /var/eos
            - name: mgm-logs
              mountPath: /var/log/eos
        - name: eos-mq
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args: ["/opt/eos/xrootd/bin/xrootd -n mq -c /etc/xrd.cf.mq -l /var/log/eos/xrdlog.mq -Rdaemon"]
          env:
            - name: "EOS_MGM_OIDC_INSECURE"
              value: "true"
            - name: "EOS_MGM_OIDC_MAP_FIELD"
              value: "preferred_username"
          envFrom:
            - configMapRef:
                name: my-release-mgm-cfgmap-sysconfig-eos
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - SYS_PTRACE
          livenessProbe:
            tcpSocket:
              port: 1097
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: mq-cfgmap-xrd-cf-mq
              mountPath: /etc/xrd.cf.mq
              subPath: xrd.cf.mq
            - name: eos-sss-keytab-fixedownership
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
            - name: mq-logs
              mountPath: /var/log/eos
        - name: nslcd
          image: "gitlab-registry.cern.ch/sciencebox/docker-images/nslcd:stable"
          imagePullPolicy: Always
          volumeMounts:
            - name: nslcd-cfgmap-nslcd-conf
              mountPath: /etc/nslcd.conf
              subPath: nslcd.conf
            - name: nslcd-socket
              mountPath: /run/nslcd
        - name: nscd
          image: "gitlab-registry.cern.ch/sciencebox/docker-images/nscd:stable"
          imagePullPolicy: Always
          volumeMounts:
            - name: cfgmap-nsswitch-conf
              mountPath: /etc/nsswitch.conf
              subPath: nsswitch.conf
            - name: nslcd-socket
              mountPath: /run/nslcd
            - name: nscd-socket
              mountPath: /run/nscd
      volumes:
        - name: nslcd-cfgmap-nslcd-conf
          configMap:
            name: my-release-mgm-cfgmap-nslcd-conf
            defaultMode: 0600
        - name: cfgmap-nsswitch-conf
          configMap:
            name: my-release-mgm-cfgmap-nsswitch-conf
            defaultMode: 0600
        - name: nslcd-socket
          emptyDir:
            medium: Memory
        - name: nscd-socket
          emptyDir:
            medium: Memory
        - name: mgm-cfgmap-xrd-cf-mgm
          configMap:
            name: my-release-mgm-cfgmap-xrd-cf-mgm
            defaultMode: 0755
        - name: mgm-cfgmap-mgm-init
          configMap:
            name: my-release-mgm-cfgmap-mgm-init
            defaultMode: 0755
        - name: eos-sss-keytab
          secret:
            secretName: sciencebox-eos-sss-keytab
            defaultMode: 0400
        - name: eos-sss-keytab-fixedownership
          emptyDir: {}
        - name: mq-cfgmap-xrd-cf-mq
          configMap:
            name: my-release-mgm-cfgmap-xrd-cf-mq
            defaultMode: 0644
        - name: mq-logs
          emptyDir: {}
        - name: mgm-logs
          emptyDir: {}
        - name: mgm-data
          emptyDir: {}
---
# Source: sciencebox/charts/eos/charts/qdb/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-qdb
  labels:
    helm.sh/chart: qdb-0.1.1
    app.kubernetes.io/name: qdb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: my-release-qdb
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: qdb
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: qdb
        app.kubernetes.io/instance: my-release
        component: eos-qdb
        service: eos
    spec:
      hostNetwork: false
      dnsPolicy: ClusterFirst
      initContainers:
        # Required until https://github.com/kubernetes/kubernetes/issues/81089 is merged
        - name: eos-qdb-init0-sss-keytab-ownership
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/bash", "-c"]
          args: ["cp /root/sss_keytab/input/eos.keytab /root/sss_keytab/output/eos.keytab; chown daemon:daemon /root/sss_keytab/output/eos.keytab; chmod 400 /root/sss_keytab/output/eos.keytab"]
          volumeMounts:
            - name: eos-sss-keytab
              mountPath: /root/sss_keytab/input/eos.keytab
              subPath: eos.keytab
            - name: eos-sss-keytab-fixedownership
              mountPath: /root/sss_keytab/output
        - name: eos-qdb-init1-quarkdb-create
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/bash", "/root/qdb_create.sh"]
          volumeMounts:
            - name: quarkdb-data
              mountPath: /var/quarkdb   # `quarkdb-create` fails if the folder already exists, hence we mount the parent.
            - name: quarkdb-cfgmap-qdb-create
              mountPath: /root/qdb_create.sh
              subPath: qdb_create.sh
            - name: quarkdb-cfgmap-xrd-cf-quarkdb-partial
              mountPath: /root/qdb-config/input/xrd.cf.quarkdb.partial
              subPath: xrd.cf.quarkdb.partial
            - name: quarkdb-cfgmap-xrd-cf-quarkdb-final
              mountPath: /root/qdb-config/output
            - name: eos-sss-keytab-fixedownership
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
      containers:
        - name: eos-qdb
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args: ["/opt/eos/xrootd/bin/xrootd -n qdb -c /etc/xrd.cf.quarkdb -l /var/log/eos/xrdlog.qdb -Rdaemon"]
          env:
            # work around current Kubernetes setup issues. This should *NOT* be enabled in production
            - name: EOS_SKIP_SSS_HOSTNAME_MATCH
              value: "true"
            - name: LD_PRELOAD
              value: "/usr/lib64/libjemalloc.so.1"
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - SYS_PTRACE
          livenessProbe:
            tcpSocket:
              port: 7777
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - /usr/bin/redis-cli
              - -p
              - "7777"
              - ping
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: quarkdb-cfgmap-xrd-cf-quarkdb-final
              mountPath: /etc/xrd.cf.quarkdb
              subPath: xrd.cf.quarkdb
            - name: eos-sss-keytab-fixedownership
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
            - name: quarkdb-data
              mountPath: /var/quarkdb
            - name: quarkdb-logs
              mountPath: /var/log/eos
      volumes:
        - name: quarkdb-cfgmap-qdb-create
          configMap:
            name: my-release-qdb-cfgmap-qdb-create
            defaultMode: 0755
        - name: quarkdb-cfgmap-xrd-cf-quarkdb-partial
          configMap:
            name: my-release-qdb-xrd-cf-quarkdb-partial
        - name: quarkdb-cfgmap-xrd-cf-quarkdb-final
          emptyDir: {}
        - name: eos-sss-keytab
          secret:
            secretName: sciencebox-eos-sss-keytab
            defaultMode: 0400
        - name: eos-sss-keytab-fixedownership
          emptyDir: {}
        - name: quarkdb-logs
          emptyDir: {}
        - name: quarkdb-data
          emptyDir: {}
---
# Source: sciencebox/charts/ldap/templates/statefullset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  my-release-ldap
  labels:
    app: my-release-ldap
    chart: ldap-2.0.4
    release: my-release
    heritage: Helm
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-release-ldap
      release: my-release
  serviceName: my-release-ldap-headless
  template:
    metadata:
      annotations:
        checksum/configmap-env: 14689cab9fac32118750a4d6a5860feb9cc28751500ed5c73c1abbfd5bccc0dc
        checksum/configmap-customldif: 53eed2aed71c6bab79ead20195b53de22bea5925585d4251b1c0e87641d33268
      labels:
        app: my-release-ldap
        release: my-release
    spec:
      containers:
        - name: ldap
          image: "osixia/openldap:1.5.0"
          imagePullPolicy: Always
          args:
            - -l
            - info
            - --copy-service
          ports:
            - name: ldap-port
              containerPort: 389
            - name: ssl-ldap-port
              containerPort: 636
          envFrom:
            - configMapRef:
                name: my-release-ldap-env
            - secretRef:
                name: my-release-ldap
          volumeMounts:
            - name: data
              mountPath: /var/lib/ldap
              subPath: data
            - name: data
              mountPath: /etc/ldap/slapd.d
              subPath: config-data
            - name: data
              mountPath: /container/service/slapd/assets/certs
            - name: custom-ldif-files
              mountPath: /container/service/slapd/assets/config/bootstrap/ldif/custom
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            #- name: HOSTNAME
            #  value: $(POD_NAME).my-release-ldap-headless
            - name: LDAP_TLS_CRT_FILENAME
              value: tls.crt
            - name: LDAP_TLS_KEY_FILENAME
              value: tls.key
          livenessProbe:
            tcpSocket:
              port: ldap-port
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            tcpSocket:
              port: ldap-port
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 10
          resources:
            {}
      affinity: 
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: my-release
                app.kubernetes.io/instance: my-release
      imagePullSecrets: 
        - name: harbor
      volumes:
        - name: custom-ldif-files
          configMap:
            name: my-release-ldap-customldif
        - name: data
          emptyDir: {}
---
# Source: sciencebox/charts/mariadb/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-mariadb
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: mariadb
    helm.sh/chart: mariadb-11.4.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels: 
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: primary
  serviceName: my-release-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: fe820d9572aa4be3e588dced1b30785eca1f3da50a77a85f1780f218c4ead4a8
      labels:
        app.kubernetes.io/name: mariadb
        helm.sh/chart: mariadb-11.4.2
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: my-release-mariadb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mariadb
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mariadb
          image: docker.io/bitnami/mariadb:10.6.11-debian-11-r12
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-mariadb
                  key: mariadb-root-password
            - name: MARIADB_USER
              value: "reva"
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-mariadb
                  key: mariadb-password
            - name: MARIADB_DATABASE
              value: "my_database"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mariadb
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d
            - name: config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: my-release-mariadb
        - name: custom-init-scripts
          configMap:
            name: my-release-mariadb-init-scripts
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/instance: my-release
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/scheduling/user-placeholder/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: user-placeholder
  labels:
    component: user-placeholder
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
spec:
  podManagementPolicy: Parallel
  replicas: 0
  selector:
    matchLabels:
      component: user-placeholder
      app: jupyterhub
      release: my-release
  serviceName: user-placeholder
  template:
    metadata:
      labels:
        component: user-placeholder
        app: jupyterhub
        release: my-release
    spec:
      nodeSelector: {}
      tolerations:
        - effect: NoSchedule
          key: hub.jupyter.org/dedicated
          operator: Equal
          value: user
        - effect: NoSchedule
          key: hub.jupyter.org_dedicated
          operator: Equal
          value: user
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: hub.jupyter.org/node-purpose
                    operator: In
                    values: [user]
      terminationGracePeriodSeconds: 0
      automountServiceAccountToken: false
      containers:
        - name: pause
          image: k8s.gcr.io/pause:3.5
          resources:
            requests:
              cpu: 0.5
              memory: 1G
            limits:
              cpu: 0.5
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 65534
            runAsUser: 65534
---
# Source: sciencebox/charts/eos-instance-config/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-eos-instance-config
  labels:
    helm.sh/chart: eos-instance-config-0.0.5
    app.kubernetes.io/name: eos-instance-config
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
spec:
  template:
    metadata:
      labels:
        component: eos-mgm
        service: eos
    spec:
      restartPolicy: OnFailure
      containers:
        - name: eos-instance-config
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/bash", "/root/instance_config.sh"]
          env:
            - name: XrdSecPROTOCOL
              value: sss
            - name: XrdSecsssKT
              value: /etc/eos.keytab
            - name: EOS_MGM_URL
              value: root://my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
          volumeMounts:
            - name: eos-sss-keytab
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
            - name: eos-instance-config-script
              mountPath: /root/instance_config.sh
              subPath: instance_config.sh
      volumes:
        - name: eos-sss-keytab
          secret:
            secretName: sciencebox-eos-sss-keytab
            defaultMode: 0400
        - name: eos-instance-config-script
          configMap:
            name: my-release-eos-instance-config-script
            defaultMode: 0755
---
# Source: sciencebox/charts/eos-user-cache-refresher/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-eos-user-cache-refresher
  labels:
    helm.sh/chart: eos-user-cache-refresher-0.0.1
    app.kubernetes.io/name: eos-user-cache-refresher
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.8.78"
    app.kubernetes.io/managed-by: Helm
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: eos-user-cache-refresher
        app.kubernetes.io/instance: my-release
        component: eos-mgm
        service: eos
    spec:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - eos-mgm
              topologyKey: "kubernetes.io/hostname"
      restartPolicy: OnFailure
      containers:
        - name: eos-user-cache-refresher
          image: gitlab-registry.cern.ch/dss/eos/eos-all:5.0.31
          imagePullPolicy: Always
          command: ["/bin/bash", "/root/user_cache_refresh.sh"]
          env:
            - name: XrdSecPROTOCOL
              value: sss
            - name: XrdSecsssKT
              value: /etc/eos.keytab
            - name: EOS_MGM_URL
              value: root://my-release-mgm-0.my-release-mgm.sciencebox-0.0.7.tgz.svc.cluster.local
          volumeMounts:
            - name: eos-sss-keytab
              mountPath: /etc/eos.keytab
              subPath: eos.keytab
            - name: eos-user-cache-refresher-script
              mountPath: /root/user_cache_refresh.sh
              subPath: user_cache_refresh.sh
      volumes:
        - name: eos-sss-keytab
          secret:
            secretName: sciencebox-eos-sss-keytab
            defaultMode: 0400
        - name: eos-user-cache-refresher-script
          configMap:
            name: my-release-eos-user-cache-refresher-script
            defaultMode: 0755
---
# Source: sciencebox/charts/ldap-instance-config/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-ldap-instance-config
  labels:
    helm.sh/chart: ldap-instance-config-0.0.1
    app.kubernetes.io/name: ldap-instance-config
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ldap-instance-config
        app.kubernetes.io/instance: my-release
        component: ldap
        service: ldap
    spec:
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - ldap
              topologyKey: "kubernetes.io/hostname"
      restartPolicy: OnFailure
      containers:
        - name: ldap-instance-config
          image: "osixia/openldap:1.5.0"
          imagePullPolicy: Always
          command: ["/bin/bash", "/root/instance_config.sh"]
          env:
            - name: LDAP_URI
              value: ldap://sciencebox-ldap:389
            - name: LDAP_BIND_DN
              value: cn=admin,dc=owncloud,dc=com
            - name: LDAP_BIND_PASSWORD
              value: admin
          volumeMounts:
            - name: ldap-instance-config-script
              mountPath: /root/instance_config.sh
              subPath: instance_config.sh
            - name: ldap-ldif-files
              mountPath: /root/ldif-files
      volumes:
        - name: ldap-instance-config-script
          configMap:
            name: my-release-ldap-instance-config-script
            defaultMode: 0755
        - name: ldap-ldif-files
          configMap:
            name: my-release-ldap-instance-config-ldif-files
---
# Source: sciencebox/charts/cernbox/charts/ocis/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-ocis
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: ocis-idp.local
      http:
        paths:
          - path: /.well-known
            pathType: Prefix
            backend:
              service:
                name: my-release-ocis
                port:
                  number: 9130
          - path: /konnect
            pathType: Prefix
            backend:
              service:
                name: my-release-ocis
                port:
                  number: 9130
          - path: /signin
            pathType: Prefix
            backend:
              service:
                name: my-release-ocis
                port:
                  number: 9130
---
# Source: sciencebox/charts/cernbox/charts/ocis/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-ocis-https
  labels:
    helm.sh/chart: ocis-0.0.9
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.20.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  rules:
    - host: ocis-idp.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-ocis
                port:
                  number: 443
---
# Source: sciencebox/charts/nginx-welcome-page/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-nginx-welcome-page
  namespace: "sciencebox-0.0.7.tgz"
  labels:
    app.kubernetes.io/name: nginx-welcome-page
    helm.sh/chart: nginx-welcome-page-13.2.19
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  rules:
    - host: "nginx.local"
      http:
        paths:
          - path: /sciencebox
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-release-nginx-welcome-page
                port:
                  name: http
---
# Source: sciencebox/charts/swan/charts/jupyterhub/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: jupyterhub
  labels:
    component: ingress
    app: jupyterhub
    release: my-release
    chart: jupyterhub-1.2.0
    heritage: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - http:
        paths:
          - path: /swan
            backend:
              serviceName: proxy-public
              servicePort: 80
---
# Source: sciencebox/charts/eos/charts/mgm/templates/configmap-krb5.yaml
#
# kerberos client configuration configmap
#
#   Reads file at the location given by '.Values.kerberos.clientConfig.file' and creates a configMap out of it.
#   If the source file does not exist (or it is empty), no configMap will be created.
#
---
# Source: sciencebox/charts/swan/charts/fusex/templates/krb5-conf.yaml
#
# kerberos client configuration configmap
#
#   Reads file at the location given by '.Values.fusex.kerberos.clientConfig.file' and creates a configMap out of it.
#   If the source file does not exist (or it is empty), no configMap will be created.
#
---
# Source: sciencebox/charts/swan/charts/fusex/templates/sss_keytab.yaml
#
# SSS keytab configmap
#
#   Example of keytab:
#     '0 u:daemon g:daemon n:eos-test+ N:6927582626958016513 c:1612953522 e:0 f:0 k:4d6faa5829d44b32a19c74e2915d94dd86125bfe7dfffb7c2badcb000f9a8327'
#

#  Reads file at the location given by '.Values.fusex.keytab.file' and creates a secret out of it.
#  If the source file does not exist (or it is empty), no secrets will be created.
