---
# Source: core/charts/elasticsearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "core-elasticsearch-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "core-elasticsearch-master"
---
# Source: core/charts/influxdb2/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-influxdb2
  labels:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: influxdb2-2.1.1
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb2
      app.kubernetes.io/instance: my-release
---
# Source: core/charts/influxdb2/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-influxdb2
  labels:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: influxdb2-2.1.1
---
# Source: core/charts/jaeger/templates/agent-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-jaeger-agent
  labels:
    helm.sh/chart: jaeger-0.71.2
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.45.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: agent
automountServiceAccountToken: false
---
# Source: core/charts/jaeger/templates/collector-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-jaeger-collector
  labels:
    helm.sh/chart: jaeger-0.71.2
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.45.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: collector
automountServiceAccountToken: false
---
# Source: core/charts/jaeger/templates/query-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-jaeger-query
  labels:
    helm.sh/chart: jaeger-0.71.2
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.45.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query
automountServiceAccountToken: false
---
# Source: core/charts/kuberay-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuberay-operator
  labels:
    app.kubernetes.io/name: kuberay-operator
    helm.sh/chart: kuberay-operator-1.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: core/charts/opentelemetry-collector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.59.1
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.78.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: core/charts/influxdb2/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: influxdb2-2.1.1
  name: my-release-influxdb2-auth
data:
  admin-token: "aS1sb3ZlLWluc3RpbGwtYWk="
  admin-password: "cGFzc3dvcmQ="
---
# Source: core/templates/database/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-core-database
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: database
type: Opaque
data:
  POSTGRES_PASSWORD: "cGFzc3dvcmQ="
---
# Source: core/templates/temporal/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-core-temporal-default-store
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
type: Opaque
data:
  password: "cGFzc3dvcmQ="
---
# Source: core/templates/temporal/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-core-temporal-visibility-store
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
type: Opaque
data:
  password: "cGFzc3dvcmQ="
---
# Source: core/charts/elasticsearch/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: core-elasticsearch-master-config
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "elasticsearch"
    app: "core-elasticsearch-master"
data:
  elasticsearch.yml: |
    xpack.security.enabled: false
---
# Source: core/charts/influxdb2/templates/init-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-influxdb2-init
  labels:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: influxdb2-2.1.1
data:
  init.sh: |
    #!/bin/bash
    BUCKET_ID=$(influx bucket list | grep "$DOCKER_INFLUXDB_INIT_BUCKET" | awk '{print $1}')
    influx v1 dbrp create --db ${DOCKER_INFLUXDB_INIT_BUCKET} --rp ${DOCKER_INFLUXDB_INIT_RETENTION} --bucket-id ${BUCKET_ID} --default
    influx v1 auth create --username ${DOCKER_INFLUXDB_INIT_USERNAME} --password ${DOCKER_INFLUXDB_INIT_PASSWORD} --write-bucket ${BUCKET_ID} --org ${DOCKER_INFLUXDB_INIT_ORG}
    influx bucket create --name ${DOCKER_INFLUXDB_BUCKET_VDP} --org ${DOCKER_INFLUXDB_INIT_ORG} --token ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN} --retention ${DOCKER_INFLUXDB_INIT_RETENTION}
---
# Source: core/charts/opentelemetry-collector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.59.1
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.78.0"
    app.kubernetes.io/managed-by: Helm
data:
  relay: |
    exporters:
      jaeger:
        endpoint: core-jaeger-collector:14250
        tls:
          insecure: true
      logging: {}
      prometheus:
        enable_open_metrics: true
        endpoint: ${env:MY_POD_IP}:9001
        namespace: instill-ai
        send_timestamps: true
    extensions:
      health_check: {}
      memory_ballast:
        size_in_percentage: 40
    processors:
      batch:
        send_batch_size: 8192
      memory_limiter:
        check_interval: 1s
        limit_percentage: 50
        spike_limit_percentage: 30
    receivers:
      jaeger:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:14250
          thrift_compact:
            endpoint: ${env:MY_POD_IP}:6831
          thrift_http:
            endpoint: ${env:MY_POD_IP}:14268
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:8095
          http:
            endpoint: ${env:MY_POD_IP}:4318
      prometheus:
        config:
          scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
            - targets:
              - ${env:MY_POD_IP}:8888
      zipkin:
        endpoint: ${env:MY_POD_IP}:9411
    service:
      extensions:
      - health_check
      - memory_ballast
      pipelines:
        logs:
          exporters:
          - logging
          processors:
          - memory_limiter
          - batch
          receivers:
          - otlp
        metrics:
          exporters:
          - logging
          - prometheus
          processors:
          - memory_limiter
          - batch
          receivers:
          - otlp
        traces:
          exporters:
          - logging
          - jaeger
          processors:
          - memory_limiter
          - batch
          receivers:
          - otlp
      telemetry:
        metrics:
          address: ${env:MY_POD_IP}:8888
---
# Source: core/templates/api-gateway/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-api-gateway
data:
  .env: |-
    LOG_LEVEL=INFO

    # api-gateway
    API_GATEWAY_HOST=my-release-core-api-gateway
    API_GATEWAY_PORT=8080
    API_GATEWAY_STATS_PORT=8070
    API_GATEWAY_METRICS_PORT=8071

    # mgmt-backend
    MGMT_BACKEND_HOST=my-release-core-mgmt-backend
    MGMT_BACKEND_PUBLICPORT=8084
    MGMT_BACKEND_PRIVATEPORT=3084

    # pipeline-backend
    PIPELINE_BACKEND_HOST=my-release-core-pipeline-backend
    PIPELINE_BACKEND_PUBLICPORT=8081

    # model-backend
    MODEL_BACKEND_HOST=my-release-core-model-backend
    MODEL_BACKEND_PUBLICPORT=8083
    MODEL_BACKEND_PRIVATEPORT=3083

    # artifact-backend
    ARTIFACT_BACKEND_HOST=my-release-core-artifact-backend
    ARTIFACT_BACKEND_PUBLICPORT=8082
    ARTIFACT_BACKEND_PRIVATEPORT=3082

    # influxdb
    INFLUXDB_HOST=my-release-core-influxdb2
    INFLUXDB_PORT=8086

    # jaeger
    JAEGER_ENABLED=true
    JAEGER_HOST=my-release-core-jaeger-collector
    JAEGER_PORT=14268

    # registry
    REGISTRY_HOST=my-release-core-registry
    REGISTRY_PORT=5000
---
# Source: core/templates/artifact-backend/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-artifact-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: artifact-backend
data:
  config.yaml: |+
    server:
      privateport: 3082
      publicport: 8082
      edition: k8s-ce
      usage:
        enabled: true
        host: usage.instill.tech
        port: 443
        tlsenabled: true
        usageidentifieruid: null
      debug: false
    database:
      username: postgres
      password: password
      host: my-release-core-database
      port: 5432
      replica:
        username: 
        password: 
        host: 
        port: 
        replicationtimeframe: 1
      name: artifact
      version: 2
      timezone: Etc/UTC
      pool:
        idleconnections: 5
        maxconnections: 10
        connlifetime: 30m
    cache:
      redis:
        redisoptions:
          addr: my-release-core-redis:6379
    influxdb:
      url: http://core-influxdb2:8086
      token: i-love-instill-ai
      org: instill-ai
      bucket: instill-ai
      flushinterval: 10 # In seconds for non-blocking batch mode
      https:
        cert:
        key:
    log:
      external: true
      otelcollector:
        host: my-release-core-opentelemetry-collector
        port: 8095
    openfga:
      host: my-release-core-openfga
      port: 8080
      replica:
        host: my-release-core-openfga
        port: 8082
        replicationtimeframe: 1
    registry:
      host: my-release-core-registry
      port: 5000
---
# Source: core/templates/grafana/configmap.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: dashboards
  labels:
    app.kubernetes.io/component: grafana
data:
  data_grafana_dashboard.json: |
    {
        "annotations": {
            "list": [
                {
                    "builtIn": 1,
                    "datasource": "-- Grafana --",
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "type": "dashboard"
                }
            ]
        },
        "editable": true,
        "gnetId": null,
        "graphTooltip": 0,
        "iteration": 1667344411089,
        "links": [],
        "panels": [
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Amount spilled by dataset operators. DataContext.enable_get_object_locations_for_metrics must be set to True to report this metric",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 0
                },
                "hiddenSeries": false,
                "id": 1,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_data_spilled_bytes{dataset=~\"$DatasetID\",SessionName=~\"$SessionName\",}) by (dataset, operator)",
                        "interval": "",
                        "legendFormat": "Bytes Spilled: {{dataset}}, {{operator}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Bytes Spilled",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "bytes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Amount allocated by dataset operators.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 0
                },
                "hiddenSeries": false,
                "id": 2,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_data_allocated_bytes{dataset=~\"$DatasetID\",SessionName=~\"$SessionName\",}) by (dataset, operator)",
                        "interval": "",
                        "legendFormat": "Bytes Allocated: {{dataset}}, {{operator}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Bytes Allocated",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "bytes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Amount freed by dataset operators.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 1
                },
                "hiddenSeries": false,
                "id": 3,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_data_freed_bytes{dataset=~\"$DatasetID\",SessionName=~\"$SessionName\",}) by (dataset, operator)",
                        "interval": "",
                        "legendFormat": "Bytes Freed: {{dataset}}, {{operator}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Bytes Freed",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "bytes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Amount of memory store used by dataset operators.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 1
                },
                "hiddenSeries": false,
                "id": 4,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_data_current_bytes{dataset=~\"$DatasetID\",SessionName=~\"$SessionName\",}) by (dataset, operator)",
                        "interval": "",
                        "legendFormat": "Current Usage: {{dataset}}, {{operator}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Object Store Memory",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "bytes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Logical CPUs allocated to dataset operators.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 2
                },
                "hiddenSeries": false,
                "id": 5,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_data_cpu_usage_cores{dataset=~\"$DatasetID\",SessionName=~\"$SessionName\",}) by (dataset, operator)",
                        "interval": "",
                        "legendFormat": "CPU Usage: {{dataset}}, {{operator}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "CPUs (logical slots)",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "cores",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Logical GPUs allocated to dataset operators.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 2
                },
                "hiddenSeries": false,
                "id": 6,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_data_gpu_usage_cores{dataset=~\"$DatasetID\",SessionName=~\"$SessionName\",}) by (dataset, operator)",
                        "interval": "",
                        "legendFormat": "GPU Usage: {{dataset}}, {{operator}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "GPUs (logical slots)",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "cores",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Total bytes outputted by dataset operators.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 3
                },
                "hiddenSeries": false,
                "id": 7,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_data_output_bytes{dataset=~\"$DatasetID\",SessionName=~\"$SessionName\",}) by (dataset, operator)",
                        "interval": "",
                        "legendFormat": "Bytes Outputted: {{dataset}}, {{operator}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Bytes Outputted",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "bytes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Total rows outputted by dataset operators.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 3
                },
                "hiddenSeries": false,
                "id": 11,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_data_output_rows{dataset=~\"$DatasetID\",SessionName=~\"$SessionName\",}) by (dataset, operator)",
                        "interval": "",
                        "legendFormat": "Rows Outputted: {{dataset}}, {{operator}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Rows Outputted",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "rows",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Time spent generating blocks.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 4
                },
                "hiddenSeries": false,
                "id": 8,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_data_block_generation_seconds{dataset=~\"$DatasetID\",SessionName=~\"$SessionName\",}) by (dataset, operator)",
                        "interval": "",
                        "legendFormat": "Block Generation Time: {{dataset}}, {{operator}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Block Generation Time",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "seconds",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Seconds user thread is blocked by iter_batches()",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 4
                },
                "hiddenSeries": false,
                "id": 9,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_data_iter_total_blocked_seconds{dataset=~\"$DatasetID\",SessionName=~\"$SessionName\",}) by (dataset)",
                        "interval": "",
                        "legendFormat": "Seconds: {{dataset}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Iteration Blocked Time",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "seconds",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Seconds spent in user code",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 5
                },
                "hiddenSeries": false,
                "id": 10,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_data_iter_user_seconds{dataset=~\"$DatasetID\",SessionName=~\"$SessionName\",}) by (dataset)",
                        "interval": "",
                        "legendFormat": "Seconds: {{dataset}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Iteration User Time",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "seconds",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            }
        ],
        "refresh": false,
        "schemaVersion": 27,
        "style": "dark",
        "tags": [
            "rayVersion:2.9.0"
        ],
        "templating": {
            "list": [
                {
                    "current": {
                        "selected": false
                    },
                    "description": "Filter queries of a specific Prometheus type.",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "datasource",
                    "options": [],
                    "query": "prometheus",
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "type": "datasource"
                },
                {
                    "allValue": ".+",
                    "current": {
                        "selected": false
                    },
                    "datasource": "${datasource}",
                    "definition": "label_values(ray_data_allocated_bytes{}, SessionName)",
                    "description": "Filter queries to specific ray sessions.",
                    "error": null,
                    "hide": 0,
                    "includeAll": true,
                    "label": null,
                    "multi": false,
                    "name": "SessionName",
                    "options": [],
                    "query": {
                        "query": "label_values(ray_data_allocated_bytes{}, SessionName)",
                        "refId": "StandardVariableQuery"
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 2,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                },
                {
                    "allValue": ".+",
                    "current": {
                        "selected": true,
                        "text": [
                            "All"
                        ],
                        "value": [
                            "$__all"
                        ]
                    },
                    "datasource": "${datasource}",
                    "definition": "label_values(ray_data_allocated_bytes{}, dataset)",
                    "description": null,
                    "error": null,
                    "hide": 0,
                    "includeAll": true,
                    "label": null,
                    "multi": true,
                    "name": "DatasetID",
                    "options": [],
                    "query": {
                        "query": "label_values(ray_data_allocated_bytes{}, dataset)",
                        "refId": "Prometheus-Dataset-Variable-Query"
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                }
            ]
        },
        "rayMeta": [
            "excludesSystemRoutes",
            "supportsGlobalFilterOverride"
        ],
        "time": {
            "from": "now-30m",
            "to": "now"
        },
        "timepicker": {},
        "timezone": "",
        "title": "Data Dashboard",
        "uid": "rayDataDashboard",
        "version": 1
    }
    
  default_grafana_dashboard.json: |
    {
        "annotations": {
            "list": [
                {
                    "builtIn": 1,
                    "datasource": "-- Grafana --",
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "type": "dashboard"
                }
            ]
        },
        "editable": true,
        "gnetId": null,
        "graphTooltip": 0,
        "iteration": 1667344411089,
        "links": [],
        "panels": [
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Current number of tasks in a particular state.\n\nState: the task state, as described by rpc::TaskState proto in common.proto. Task resubmissions due to failures or object reconstruction are shown with (retry) in the label.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 0
                },
                "hiddenSeries": false,
                "id": 26,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(max_over_time(ray_tasks{IsRetry=\"0\",State=~\"FINISHED|FAILED\",SessionName=~\"$SessionName\",}[14d])) by (State) or clamp_min(sum(ray_tasks{IsRetry=\"0\",State!~\"FINISHED|FAILED\",SessionName=~\"$SessionName\",}) by (State), 0)",
                        "interval": "",
                        "legendFormat": "{{State}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(max_over_time(ray_tasks{IsRetry!=\"0\",State=~\"FINISHED|FAILED\",SessionName=~\"$SessionName\",}[14d])) by (State) or clamp_min(sum(ray_tasks{IsRetry!=\"0\",State!~\"FINISHED|FAILED\",SessionName=~\"$SessionName\",}) by (State), 0)",
                        "interval": "",
                        "legendFormat": "{{State}} (retry)",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Scheduler Task State",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "tasks",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Current number of (live) tasks with a particular name. Task resubmissions due to failures or object reconstruction are shown with (retry) in the label.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 0
                },
                "hiddenSeries": false,
                "id": 35,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_tasks{IsRetry=\"0\",State!~\"FINISHED|FAILED\",SessionName=~\"$SessionName\",}) by (Name)",
                        "interval": "",
                        "legendFormat": "{{Name}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_tasks{IsRetry!=\"0\",State!~\"FINISHED|FAILED\",SessionName=~\"$SessionName\",}) by (Name)",
                        "interval": "",
                        "legendFormat": "{{Name}} (retry)",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Active Tasks by Name",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "tasks",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Current number of actors in a particular state.\n\nState: the actor state, as described by rpc::ActorTableData proto in gcs.proto.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 1
                },
                "hiddenSeries": false,
                "id": 33,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_actors{SessionName=~\"$SessionName\",}) by (State)",
                        "interval": "",
                        "legendFormat": "{{State}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Scheduler Actor State",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "actors",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Current number of (live) actors with a particular name.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 1
                },
                "hiddenSeries": false,
                "id": 36,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_actors{State!=\"DEAD\",SessionName=~\"$SessionName\",}) by (Name)",
                        "interval": "",
                        "legendFormat": "{{Name}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Active Actors by Name",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "actors",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Logical CPU usage of Ray. The dotted line indicates the total number of CPUs. The logical CPU is allocated by `num_cpus` arguments from tasks and actors. PENDING means the number of CPUs that will be available when new nodes are up after the autoscaler scales up.\n\nNOTE: Ray's logical CPU is different from physical CPU usage. Ray's logical CPU is allocated by `num_cpus` arguments.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 2
                },
                "hiddenSeries": false,
                "id": 27,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_resources{Name=\"CPU\",State=\"USED\",SessionName=~\"$SessionName\",}) by (instance)",
                        "interval": "",
                        "legendFormat": "CPU Usage: {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_resources{Name=\"CPU\",SessionName=~\"$SessionName\",})",
                        "interval": "",
                        "legendFormat": "MAX",
                        "queryType": "randomWalk",
                        "refId": "B"
                    },
                    {
                        "exemplar": true,
                        "expr": "((sum(autoscaler_cluster_resources{resource=\"CPU\",SessionName=~\"$SessionName\",}) or vector(0)) + (sum(autoscaler_pending_resources{resource=\"CPU\",SessionName=~\"$SessionName\",}) or vector(0)) and (sum(autoscaler_cluster_resources{resource=\"CPU\",SessionName=~\"$SessionName\",}) or vector(0)) + (sum(autoscaler_pending_resources{resource=\"CPU\",SessionName=~\"$SessionName\",}) or vector(0)) > (sum(autoscaler_cluster_resources{resource=\"CPU\",SessionName=~\"$SessionName\",}) or vector(0)))",
                        "interval": "",
                        "legendFormat": "MAX + PENDING",
                        "queryType": "randomWalk",
                        "refId": "C"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Scheduler CPUs (logical slots)",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "cores",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Object store memory usage by location. The dotted line indicates the object store memory capacity.\n\nLocation: where the memory was allocated, which is MMAP_SHM or MMAP_DISK to indicate memory-mapped page, SPILLED to indicate spillage to disk, and WORKER_HEAP for objects small enough to be inlined in worker memory. Refer to metric_defs.cc for more information.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 2
                },
                "hiddenSeries": false,
                "id": 29,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_object_store_memory{SessionName=~\"$SessionName\",}) by (Location)",
                        "interval": "",
                        "legendFormat": "{{Location}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_resources{Name=\"object_store_memory\",SessionName=~\"$SessionName\",})",
                        "interval": "",
                        "legendFormat": "MAX",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Object Store Memory",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "bytes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Logical GPU usage of Ray. The dotted line indicates the total number of GPUs. The logical GPU is allocated by `num_gpus` arguments from tasks and actors. PENDING means the number of GPUs that will be available when new nodes are up after the autoscaler scales up.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 3
                },
                "hiddenSeries": false,
                "id": 28,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "ray_resources{Name=\"GPU\",State=\"USED\",SessionName=~\"$SessionName\",}",
                        "interval": "",
                        "legendFormat": "GPU Usage: {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_resources{Name=\"GPU\",SessionName=~\"$SessionName\",})",
                        "interval": "",
                        "legendFormat": "MAX",
                        "queryType": "randomWalk",
                        "refId": "B"
                    },
                    {
                        "exemplar": true,
                        "expr": "((sum(autoscaler_cluster_resources{resource=\"GPU\",SessionName=~\"$SessionName\",}) or vector(0)) + (sum(autoscaler_pending_resources{resource=\"GPU\",SessionName=~\"$SessionName\",}) or vector(0)) and (sum(autoscaler_cluster_resources{resource=\"GPU\",SessionName=~\"$SessionName\",}) or vector(0)) + (sum(autoscaler_pending_resources{resource=\"GPU\",SessionName=~\"$SessionName\",}) or vector(0)) > (sum(autoscaler_cluster_resources{resource=\"GPU\",SessionName=~\"$SessionName\",}) or vector(0)))",
                        "interval": "",
                        "legendFormat": "MAX + PENDING",
                        "queryType": "randomWalk",
                        "refId": "C"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Scheduler GPUs (logical slots)",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "GPUs",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Current number of placement groups in a particular state.\n\nState: the placement group state, as described by the rpc::PlacementGroupTable proto in gcs.proto.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 3
                },
                "hiddenSeries": false,
                "id": 40,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_placement_groups{SessionName=~\"$SessionName\",}) by (State)",
                        "interval": "",
                        "legendFormat": "{{State}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Scheduler Placement Groups",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "placement groups",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 4
                },
                "hiddenSeries": false,
                "id": 2,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "ray_node_cpu_utilization{instance=~\"$Instance\",SessionName=~\"$SessionName\",} * ray_node_cpu_count{instance=~\"$Instance\",SessionName=~\"$SessionName\",} / 100",
                        "interval": "",
                        "legendFormat": "CPU Usage: {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_cpu_count{SessionName=~\"$SessionName\",})",
                        "interval": "",
                        "legendFormat": "MAX",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node CPU (hardware utilization)",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "cores",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Node's physical (hardware) GPU usage. The dotted line means the total number of hardware GPUs from the cluster. ",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 4
                },
                "hiddenSeries": false,
                "id": 8,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "ray_node_gpus_utilization{instance=~\"$Instance\",SessionName=~\"$SessionName\",} / 100",
                        "interval": "",
                        "legendFormat": "GPU Usage: {{instance}}, gpu.{{GpuIndex}}, {{GpuDeviceName}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_gpus_available{SessionName=~\"$SessionName\",})",
                        "interval": "",
                        "legendFormat": "MAX",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node GPU (hardware utilization)",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "GPUs",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Node's physical (hardware) disk usage. The dotted line means the total amount of disk space from the cluster.\n\nNOTE: When Ray is deployed within a container, this shows the disk usage from the host machine. ",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 5
                },
                "hiddenSeries": false,
                "id": 6,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "ray_node_disk_usage{instance=~\"$Instance\",SessionName=~\"$SessionName\",}",
                        "interval": "",
                        "legendFormat": "Disk Used: {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_disk_free{SessionName=~\"$SessionName\",}) + sum(ray_node_disk_usage{SessionName=~\"$SessionName\",})",
                        "interval": "",
                        "legendFormat": "MAX",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node Disk",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "bytes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Disk IO per node.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 5
                },
                "hiddenSeries": false,
                "id": 32,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "ray_node_disk_io_write_speed{instance=~\"$Instance\",SessionName=~\"$SessionName\",}",
                        "interval": "",
                        "legendFormat": "Write: {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "ray_node_disk_io_read_speed{instance=~\"$Instance\",SessionName=~\"$SessionName\",}",
                        "interval": "",
                        "legendFormat": "Read: {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node Disk IO Speed",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "Bps",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "The physical (hardware) memory usage for each node. The dotted line means the total amount of memory from the cluster. Node memory is a sum of object store memory (shared memory) and heap memory.\n\nNote: If Ray is deployed within a container, the total memory could be lower than the host machine because Ray may reserve some additional memory space outside the container.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 6
                },
                "hiddenSeries": false,
                "id": 4,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "ray_node_mem_used{instance=~\"$Instance\",SessionName=~\"$SessionName\",}",
                        "interval": "",
                        "legendFormat": "Memory Used: {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_mem_total{SessionName=~\"$SessionName\",})",
                        "interval": "",
                        "legendFormat": "MAX",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node Memory (heap + object store)",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "bytes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "The number of tasks and actors killed by the Ray Out of Memory killer due to high memory pressure. Metrics are broken down by IP and the name. https://docs.ray.io/en/master/ray-core/scheduling/ray-oom-prevention.html.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 6
                },
                "hiddenSeries": false,
                "id": 44,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "ray_memory_manager_worker_eviction_total{instance=~\"$Instance\",SessionName=~\"$SessionName\",}",
                        "interval": "",
                        "legendFormat": "OOM Killed: {{Name}}, {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node Out of Memory Failures by Name",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "failures",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "The physical (hardware) memory usage across the cluster, broken down by component. This reports the summed RSS-SHM per Ray component, which corresponds to an approximate memory usage per proc. Ray components consist of system components (e.g., raylet, gcs, dashboard, or agent) and the process (that contains method names) names of running tasks/actors.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 7
                },
                "hiddenSeries": false,
                "id": 34,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "(sum(ray_component_rss_mb{SessionName=~\"$SessionName\",} * 1e6) by (Component)) - (sum(ray_component_mem_shared_bytes{SessionName=~\"$SessionName\",}) by (Component))",
                        "interval": "",
                        "legendFormat": "{{Component}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_mem_shared_bytes{SessionName=~\"$SessionName\",})",
                        "interval": "",
                        "legendFormat": "shared_memory",
                        "queryType": "randomWalk",
                        "refId": "B"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_mem_total{SessionName=~\"$SessionName\",})",
                        "interval": "",
                        "legendFormat": "MAX",
                        "queryType": "randomWalk",
                        "refId": "C"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node Memory by Component",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "bytes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "The physical (hardware) CPU usage across the cluster, broken down by component. This reports the summed CPU usage per Ray component. Ray components consist of system components (e.g., raylet, gcs, dashboard, or agent) and the process (that contains method names) names of running tasks/actors.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 7
                },
                "hiddenSeries": false,
                "id": 37,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_component_cpu_percentage{SessionName=~\"$SessionName\",}) by (Component) / 100",
                        "interval": "",
                        "legendFormat": "{{Component}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_cpu_count{SessionName=~\"$SessionName\",})",
                        "interval": "",
                        "legendFormat": "MAX",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node CPU by Component",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "cores",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "The physical (hardware) GPU memory usage for each node. The dotted line means the total amount of GPU memory from the cluster.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 8
                },
                "hiddenSeries": false,
                "id": 18,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "ray_node_gram_used{instance=~\"$Instance\",SessionName=~\"$SessionName\",} * 1024 * 1024",
                        "interval": "",
                        "legendFormat": "Used GRAM: {{instance}}, gpu.{{GpuIndex}}, {{GpuDeviceName}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "(sum(ray_node_gram_available{SessionName=~\"$SessionName\",}) + sum(ray_node_gram_used{SessionName=~\"$SessionName\",})) * 1024 * 1024",
                        "interval": "",
                        "legendFormat": "MAX",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node GPU Memory (GRAM)",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "bytes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Network speed per node",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 8
                },
                "hiddenSeries": false,
                "id": 20,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "ray_node_network_receive_speed{instance=~\"$Instance\",SessionName=~\"$SessionName\",}",
                        "interval": "",
                        "legendFormat": "Recv: {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "ray_node_network_send_speed{instance=~\"$Instance\",SessionName=~\"$SessionName\",}",
                        "interval": "",
                        "legendFormat": "Send: {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node Network",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "Bps",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "A total number of active failed, and pending nodes from the cluster. \n\nACTIVE: A node is alive and available.\n\nFAILED: A node is dead and not available. The node is considered dead when the raylet process on the node is terminated. The node will get into the failed state if it cannot be provided (e.g., there's no available node from the cloud provider) or failed to setup (e.g., setup_commands have errors). \n\nPending: A node is being started by the Ray cluster launcher. The node is unavailable now because it is being provisioned and initialized.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 0,
                    "y": 9
                },
                "hiddenSeries": false,
                "id": 24,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(autoscaler_active_nodes{SessionName=~\"$SessionName\",}) by (NodeType)",
                        "interval": "",
                        "legendFormat": "Active Nodes: {{NodeType}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(autoscaler_recently_failed_nodes{SessionName=~\"$SessionName\",}) by (NodeType)",
                        "interval": "",
                        "legendFormat": "Failed Nodes: {{NodeType}}",
                        "queryType": "randomWalk",
                        "refId": "B"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(autoscaler_pending_nodes{SessionName=~\"$SessionName\",}) by (NodeType)",
                        "interval": "",
                        "legendFormat": "Pending Nodes: {{NodeType}}",
                        "queryType": "randomWalk",
                        "refId": "C"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node Count",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "nodes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Aggregated utilization of all physical resources (CPU, GPU, memory, disk, or etc.) across the cluster.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "h": 8,
                    "w": 12,
                    "x": 12,
                    "y": 9
                },
                "hiddenSeries": false,
                "id": 41,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "avg(ray_node_cpu_utilization{SessionName=~\"$SessionName\",})",
                        "interval": "",
                        "legendFormat": "CPU (physical)",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_gpus_utilization{SessionName=~\"$SessionName\",}) / on() (sum(autoscaler_cluster_resources{resource='GPU',SessionName=~\"$SessionName\",}) or vector(0))",
                        "interval": "",
                        "legendFormat": "GPU (physical)",
                        "queryType": "randomWalk",
                        "refId": "B"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_mem_used{SessionName=~\"$SessionName\",}) / on() (sum(ray_node_mem_total{SessionName=~\"$SessionName\",})) * 100",
                        "interval": "",
                        "legendFormat": "Memory (RAM)",
                        "queryType": "randomWalk",
                        "refId": "C"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_gram_used{SessionName=~\"$SessionName\",}) / on() (sum(ray_node_gram_available{SessionName=~\"$SessionName\",}) + sum(ray_node_gram_used{SessionName=~\"$SessionName\",})) * 100",
                        "interval": "",
                        "legendFormat": "GRAM",
                        "queryType": "randomWalk",
                        "refId": "D"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_object_store_memory{SessionName=~\"$SessionName\",}) / on() sum(ray_resources{Name=\"object_store_memory\",SessionName=~\"$SessionName\",}) * 100",
                        "interval": "",
                        "legendFormat": "Object Store Memory",
                        "queryType": "randomWalk",
                        "refId": "E"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_disk_usage{SessionName=~\"$SessionName\",}) / on() (sum(ray_node_disk_free{SessionName=~\"$SessionName\",}) + sum(ray_node_disk_usage{SessionName=~\"$SessionName\",})) * 100",
                        "interval": "",
                        "legendFormat": "Disk",
                        "queryType": "randomWalk",
                        "refId": "F"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Cluster Utilization",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "%",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            }
        ],
        "refresh": false,
        "schemaVersion": 27,
        "style": "dark",
        "tags": [
            "rayVersion:2.9.0"
        ],
        "templating": {
            "list": [
                {
                    "current": {
                        "selected": false
                    },
                    "description": "Filter queries of a specific Prometheus type.",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "datasource",
                    "options": [],
                    "query": "prometheus",
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "type": "datasource"
                },
                {
                    "allValue": ".+",
                    "current": {
                        "selected": false
                    },
                    "datasource": "${datasource}",
                    "definition": "label_values(ray_node_network_receive_speed{}, SessionName)",
                    "description": "Filter queries to specific ray sessions.",
                    "error": null,
                    "hide": 0,
                    "includeAll": true,
                    "label": null,
                    "multi": false,
                    "name": "SessionName",
                    "options": [],
                    "query": {
                        "query": "label_values(ray_node_network_receive_speed{}, SessionName)",
                        "refId": "StandardVariableQuery"
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 2,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                },
                {
                    "allValue": ".+",
                    "current": {
                        "selected": true,
                        "text": [
                            "All"
                        ],
                        "value": [
                            "$__all"
                        ]
                    },
                    "datasource": "${datasource}",
                    "definition": "label_values(ray_node_network_receive_speed{SessionName=\"$SessionName\",}, instance)",
                    "description": null,
                    "error": null,
                    "hide": 0,
                    "includeAll": true,
                    "label": null,
                    "multi": true,
                    "name": "Instance",
                    "options": [],
                    "query": {
                        "query": "label_values(ray_node_network_receive_speed{SessionName=\"$SessionName\",}, instance)",
                        "refId": "Prometheus-Instance-Variable-Query"
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                }
            ]
        },
        "time": {
            "from": "now-30m",
            "to": "now"
        },
        "timepicker": {},
        "timezone": "",
        "title": "Default Dashboard",
        "uid": "rayDefaultDashboard",
        "version": 4,
        "rayMeta": [
            "supportsGlobalFilterOverride"
        ]
    }
    
  serve_deployment_grafana_dashboard.json: |
    {
        "annotations": {
            "list": [
                {
                    "builtIn": 1,
                    "datasource": "-- Grafana --",
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "type": "dashboard"
                }
            ]
        },
        "editable": true,
        "gnetId": null,
        "graphTooltip": 0,
        "iteration": 1667344411089,
        "links": [],
        "panels": [
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Number of replicas per deployment. Ignores \"Route\" variable.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "x": 0,
                    "y": 0,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 1,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_serve_deployment_replica_healthy{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}) by (application, deployment)",
                        "interval": "",
                        "legendFormat": "{{application, deployment}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Replicas per deployment",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "replicas",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "QPS for each replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "x": 8,
                    "y": 0,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 2,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(rate(ray_serve_deployment_request_counter{route=~\"$Route\",route!~\"/-/.*\",application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m])) by (application, deployment, replica)",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "QPS per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "qps",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Error QPS for each replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "x": 16,
                    "y": 0,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 3,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(rate(ray_serve_deployment_error_counter{route=~\"$Route\",route!~\"/-/.*\",application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m])) by (application, deployment, replica)",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Error QPS per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "qps",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "P50 latency per replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 0,
                    "y": 1,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 4,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.5, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{route=~\"$Route\",route!~\"/-/.*\",application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m])) by (application, deployment, replica, le))",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.5, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{route=~\"$Route\",route!~\"/-/.*\",application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m])) by (le))",
                        "interval": "",
                        "legendFormat": "Total",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "P50 latency per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "ms",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "P90 latency per replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 8,
                    "y": 1,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 5,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.9, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{route=~\"$Route\",route!~\"/-/.*\",application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m])) by (application, deployment, replica, le))",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.9, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{route=~\"$Route\",route!~\"/-/.*\",application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m])) by (le))",
                        "interval": "",
                        "legendFormat": "Total",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "P90 latency per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "ms",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "P99 latency per replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 16,
                    "y": 1,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 6,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.99, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{route=~\"$Route\",route!~\"/-/.*\",application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m])) by (application, deployment, replica, le))",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.99, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{route=~\"$Route\",application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m])) by (le))",
                        "interval": "",
                        "legendFormat": "Total",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "P99 latency per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "ms",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Number of requests queued per deployment. Ignores \"Replica\" and \"Route\" variable.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 0,
                    "y": 2,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 7,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_serve_deployment_queued_queries{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}) by (application, deployment)",
                        "interval": "",
                        "legendFormat": "{{application, deployment}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Queue size per deployment",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "requests",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Pending requests for each replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 8,
                    "y": 2,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 8,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_serve_replica_pending_queries{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}) by (application, deployment, replica)",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Pending requests per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "requests",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Current running requests for each replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 16,
                    "y": 2,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 9,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_serve_replica_processing_queries{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}) by (application, deployment, replica)",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Running requests per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "requests",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "The number of multiplexed models for each replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 0,
                    "y": 3,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 10,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_serve_num_multiplexed_models{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}) by (application, deployment, replica)",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Multiplexed models per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "models",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "The number of times of multiplexed models loaded for each replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 8,
                    "y": 3,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 11,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_serve_multiplexed_models_load_counter{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}) by (application, deployment, replica)",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Multiplexed model loads per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "times",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "The number of times of multiplexed models unloaded for each replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 16,
                    "y": 3,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 12,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_serve_multiplexed_models_unload_counter{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}) by (application, deployment, replica)",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Multiplexed model unloads per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "times",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "P99 latency of mutliplexed model load per replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 0,
                    "y": 4,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 13,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.99, sum(rate(ray_serve_multiplexed_model_load_latency_ms_bucket{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m])) by (application, deployment, replica, le))",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "P99 latency of multiplexed model loads per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "ms",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "P99 latency of mutliplexed model unload per replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 8,
                    "y": 4,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 14,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.99, sum(rate(ray_serve_multiplexed_model_unload_latency_ms_bucket{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m])) by (application, deployment, replica, le))",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "P99 latency of multiplexed model unloads per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "ms",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "The ids of multiplexed models for each replica.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "x": 16,
                    "y": 4,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 15,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "ray_serve_registered_multiplexed_model_id{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}",
                        "interval": "",
                        "legendFormat": "{{replica}}:{{model_id}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Multiplexed model ids per replica",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "model",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "The cache hit rate of multiplexed models for the deployment.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "x": 0,
                    "y": 5,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 16,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "(1 - sum(rate(ray_serve_multiplexed_models_load_counter{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m]))/sum(rate(ray_serve_multiplexed_get_model_requests_counter{application=~\"$Application\",deployment=~\"$Deployment\",replica=~\"$Replica\",}[5m])))",
                        "interval": "",
                        "legendFormat": "{{replica}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Multiplexed model cache hit rate",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "%",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            }
        ],
        "refresh": false,
        "schemaVersion": 27,
        "style": "dark",
        "tags": [
            "rayVersion:2.9.0"
        ],
        "templating": {
            "list": [
                {
                    "current": {
                        "selected": false
                    },
                    "description": "Filter queries to specific prometheus type.",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "datasource",
                    "options": [],
                    "query": "prometheus",
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "type": "datasource"
                },
                {
                    "allValue": ".*",
                    "current": {
                        "selected": true,
                        "text": [
                            "All"
                        ],
                        "value": [
                            "$__all"
                        ]
                    },
                    "datasource": "${datasource}",
                    "definition": "label_values(ray_serve_deployment_replica_healthy{}, application)",
                    "description": null,
                    "error": null,
                    "hide": 0,
                    "includeAll": true,
                    "label": null,
                    "multi": true,
                    "name": "Application",
                    "options": [],
                    "query": {
                        "query": "label_values(ray_serve_deployment_replica_healthy{}, application)",
                        "refId": "Prometheus-Instance-Variable-Query"
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                },
                {
                    "allValue": ".*",
                    "current": {
                        "selected": true,
                        "text": [
                            "All"
                        ],
                        "value": [
                            "$__all"
                        ]
                    },
                    "datasource": "${datasource}",
                    "definition": "label_values(ray_serve_deployment_replica_healthy{application=~\"$Application\",}, deployment)",
                    "description": null,
                    "error": null,
                    "hide": 0,
                    "includeAll": true,
                    "label": null,
                    "multi": true,
                    "name": "Deployment",
                    "options": [],
                    "query": {
                        "query": "label_values(ray_serve_deployment_replica_healthy{application=~\"$Application\",}, deployment)",
                        "refId": "Prometheus-Instance-Variable-Query"
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                },
                {
                    "allValue": ".*",
                    "current": {
                        "selected": true,
                        "text": [
                            "All"
                        ],
                        "value": [
                            "$__all"
                        ]
                    },
                    "datasource": "${datasource}",
                    "definition": "label_values(ray_serve_deployment_replica_healthy{application=~\"$Application\",deployment=~\"$Deployment\",}, replica)",
                    "description": null,
                    "error": null,
                    "hide": 0,
                    "includeAll": true,
                    "label": null,
                    "multi": true,
                    "name": "Replica",
                    "options": [],
                    "query": {
                        "query": "label_values(ray_serve_deployment_replica_healthy{application=~\"$Application\",deployment=~\"$Deployment\",}, replica)",
                        "refId": "Prometheus-Instance-Variable-Query"
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                },
                {
                    "allValue": ".*",
                    "current": {
                        "selected": true,
                        "text": [
                            "All"
                        ],
                        "value": [
                            "$__all"
                        ]
                    },
                    "datasource": "${datasource}",
                    "definition": "label_values(ray_serve_deployment_request_counter{deployment=~\"$Deployment\",}, route)",
                    "description": null,
                    "error": null,
                    "hide": 0,
                    "includeAll": true,
                    "label": null,
                    "multi": true,
                    "name": "Route",
                    "options": [],
                    "query": {
                        "query": "label_values(ray_serve_deployment_request_counter{deployment=~\"$Deployment\",}, route)",
                        "refId": "Prometheus-Instance-Variable-Query"
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                }
            ]
        },
        "rayMeta": [
            "excludesSystemRoutes",
            "supportsGlobalFilterOverride"
        ],
        "time": {
            "from": "now-30m",
            "to": "now"
        },
        "timepicker": {},
        "timezone": "",
        "title": "Serve Deployment Dashboard",
        "uid": "rayServeDeploymentDashboard",
        "version": 1
    }
    
  serve_grafana_dashboard.json: |
    {
        "annotations": {
            "list": [
                {
                    "builtIn": 1,
                    "datasource": "-- Grafana --",
                    "enable": true,
                    "hide": true,
                    "iconColor": "rgba(0, 211, 255, 1)",
                    "name": "Annotations & Alerts",
                    "type": "dashboard"
                }
            ]
        },
        "editable": true,
        "gnetId": null,
        "graphTooltip": 0,
        "iteration": 1667344411089,
        "links": [],
        "panels": [
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Aggregated utilization of all physical resources (CPU, GPU, memory, disk, or etc.) across the cluster. Ignores application variable.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 0,
                    "y": 0,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 5,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "avg(ray_node_cpu_utilization{})",
                        "interval": "",
                        "legendFormat": "CPU (physical)",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_gpus_utilization{}) / on() (sum(autoscaler_cluster_resources{resource='GPU',}) or vector(0))",
                        "interval": "",
                        "legendFormat": "GPU (physical)",
                        "queryType": "randomWalk",
                        "refId": "B"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_mem_used{}) / on() (sum(ray_node_mem_total{})) * 100",
                        "interval": "",
                        "legendFormat": "Memory (RAM)",
                        "queryType": "randomWalk",
                        "refId": "C"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_gram_used{}) / on() (sum(ray_node_gram_available{}) + sum(ray_node_gram_used{})) * 100",
                        "interval": "",
                        "legendFormat": "GRAM",
                        "queryType": "randomWalk",
                        "refId": "D"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_object_store_memory{}) / on() sum(ray_resources{Name=\"object_store_memory\",}) * 100",
                        "interval": "",
                        "legendFormat": "Object Store Memory",
                        "queryType": "randomWalk",
                        "refId": "E"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_disk_usage{}) / on() (sum(ray_node_disk_free{}) + sum(ray_node_disk_usage{})) * 100",
                        "interval": "",
                        "legendFormat": "Disk",
                        "queryType": "randomWalk",
                        "refId": "F"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Cluster Utilization",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "%",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "QPS for each selected application.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "x": 8,
                    "y": 0,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 7,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(rate(ray_serve_num_http_requests{application=~\"$Application\",application!~\"\",route=~\"$HTTP_Route\",route!~\"/-/.*\",}[5m])) by (application, route)",
                        "interval": "",
                        "legendFormat": "{{application, route}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(rate(ray_serve_num_grpc_requests{application=~\"$Application\",application!~\"\",method=~\"$gRPC_Method\",}[5m])) by (application, method)",
                        "interval": "",
                        "legendFormat": "{{application, method}}",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "QPS per application",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "qps",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Error QPS for each selected application.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "x": 16,
                    "y": 0,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 8,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(rate(ray_serve_num_http_error_requests{application=~\"$Application\",application!~\"\",route=~\"$HTTP_Route\",route!~\"/-/.*\",}[5m])) by (application, route)",
                        "interval": "",
                        "legendFormat": "{{application, route}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(rate(ray_serve_num_grpc_error_requests{application=~\"$Application\",application!~\"\",method=~\"$gRPC_Method\",}[5m])) by (application, method)",
                        "interval": "",
                        "legendFormat": "{{application, method}}",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Error QPS per application",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "qps",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "P50 latency for selected applications.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 0,
                    "y": 1,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 12,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.5, sum(rate(ray_serve_http_request_latency_ms_bucket{application=~\"$Application\",application!~\"\",route=~\"$HTTP_Route\",route!~\"/-/.*\",}[5m])) by (application, route, le))",
                        "interval": "",
                        "legendFormat": "{{application, route}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.5, sum(rate(ray_serve_grpc_request_latency_ms_bucket{application=~\"$Application\",application!~\"\",method=~\"$gRPC_Method\",}[5m])) by (application, method, le))",
                        "interval": "",
                        "legendFormat": "{{application, method}}",
                        "queryType": "randomWalk",
                        "refId": "B"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.5, sum(rate({__name__=~ \"ray_serve_(http|grpc)_request_latency_ms_bucket\",application=~\"$Application\",application!~\"\",}[5m])) by (le))",
                        "interval": "",
                        "legendFormat": "Total",
                        "queryType": "randomWalk",
                        "refId": "C"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "P50 latency per application",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "ms",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "P90 latency for selected applications.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 8,
                    "y": 1,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 15,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.9, sum(rate(ray_serve_http_request_latency_ms_bucket{application=~\"$Application\",application!~\"\",route=~\"$HTTP_Route\",route!~\"/-/.*\",}[5m])) by (application, route, le))",
                        "interval": "",
                        "legendFormat": "{{application, route}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.9, sum(rate(ray_serve_grpc_request_latency_ms_bucket{application=~\"$Application\",application!~\"\",method=~\"$gRPC_Method\",}[5m])) by (application, method, le))",
                        "interval": "",
                        "legendFormat": "{{application, method}}",
                        "queryType": "randomWalk",
                        "refId": "B"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.9, sum(rate({__name__=~ \"ray_serve_(http|grpc)_request_latency_ms_bucket|ray_serve_grpc_request_latency_ms_bucket\",application=~\"$Application\",application!~\"\",}[5m])) by (le))",
                        "interval": "",
                        "legendFormat": "Total",
                        "queryType": "randomWalk",
                        "refId": "C"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "P90 latency per application",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "ms",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "P99 latency for selected applications.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 16,
                    "y": 1,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 16,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.99, sum(rate(ray_serve_http_request_latency_ms_bucket{application=~\"$Application\",application!~\"\",route=~\"$HTTP_Route\",route!~\"/-/.*\",}[5m])) by (application, route, le))",
                        "interval": "",
                        "legendFormat": "{{application, route}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.99, sum(rate(ray_serve_grpc_request_latency_ms_bucket{application=~\"$Application\",application!~\"\",method=~\"$gRPC_Method\",}[5m])) by (application, method, le))",
                        "interval": "",
                        "legendFormat": "{{application, method}}",
                        "queryType": "randomWalk",
                        "refId": "B"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.99, sum(rate({__name__=~ \"ray_serve_(http|grpc)_request_latency_ms_bucket|ray_serve_grpc_request_latency_ms_bucket\",application=~\"$Application\",application!~\"\",}[5m])) by (le))",
                        "interval": "",
                        "legendFormat": "Total",
                        "queryType": "randomWalk",
                        "refId": "C"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "P99 latency per application",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "ms",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Number of replicas per deployment. Ignores \"Application\" variable.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "x": 0,
                    "y": 2,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 2,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_serve_deployment_replica_healthy{}) by (application, deployment)",
                        "interval": "",
                        "legendFormat": "{{application, deployment}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Replicas per deployment",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "replicas",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "QPS for each deployment.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "x": 8,
                    "y": 2,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 13,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(rate(ray_serve_deployment_request_counter{application=~\"$Application\",application!~\"\",}[5m])) by (application, deployment)",
                        "interval": "",
                        "legendFormat": "{{application, deployment}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "QPS per deployment",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "qps",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Error QPS for each deplyoment.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "x": 16,
                    "y": 2,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 14,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(rate(ray_serve_deployment_error_counter{application=~\"$Application\",application!~\"\",}[5m])) by (application, deployment)",
                        "interval": "",
                        "legendFormat": "{{application, deployment}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Error QPS per deployment",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "qps",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "P50 latency per deployment.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 0,
                    "y": 3,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 9,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.5, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{application=~\"$Application\",application!~\"\",}[5m])) by (application, deployment, le))",
                        "interval": "",
                        "legendFormat": "{{application, deployment}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.5, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{application=~\"$Application\",application!~\"\",}[5m])) by (le))",
                        "interval": "",
                        "legendFormat": "Total",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "P50 latency per deployment",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "ms",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "P90 latency per deployment.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 8,
                    "y": 3,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 10,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.9, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{application=~\"$Application\",application!~\"\",}[5m])) by (application, deployment, le))",
                        "interval": "",
                        "legendFormat": "{{application, deployment}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.9, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{application=~\"$Application\",application!~\"\",}[5m])) by (le))",
                        "interval": "",
                        "legendFormat": "Total",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "P90 latency per deployment",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "ms",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "P99 latency per deployment.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 16,
                    "y": 3,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 11,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.99, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{application=~\"$Application\",application!~\"\",}[5m])) by (application, deployment, le))",
                        "interval": "",
                        "legendFormat": "{{application, deployment}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "histogram_quantile(0.99, sum(rate(ray_serve_deployment_processing_latency_ms_bucket{application=~\"$Application\",application!~\"\",}[5m])) by (le))",
                        "interval": "",
                        "legendFormat": "Total",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "P99 latency per deployment",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "ms",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Number of requests queued per deployment. Ignores \"Application\" variable.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 0,
                "fillGradient": 0,
                "gridPos": {
                    "x": 0,
                    "y": 4,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 3,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_serve_deployment_queued_queries{}) by (application, deployment)",
                        "interval": "",
                        "legendFormat": "{{application, deployment}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Queue size per deployment",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "requests",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Number of nodes in this cluster. Ignores \"Application\" variable.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 10,
                "fillGradient": 0,
                "gridPos": {
                    "x": 8,
                    "y": 4,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 4,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": true,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(autoscaler_active_nodes{}) by (NodeType)",
                        "interval": "",
                        "legendFormat": "Active Nodes: {{NodeType}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(autoscaler_recently_failed_nodes{}) by (NodeType)",
                        "interval": "",
                        "legendFormat": "Failed Nodes: {{NodeType}}",
                        "queryType": "randomWalk",
                        "refId": "B"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(autoscaler_pending_nodes{}) by (NodeType)",
                        "interval": "",
                        "legendFormat": "Pending Nodes: {{NodeType}}",
                        "queryType": "randomWalk",
                        "refId": "C"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node count",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "nodes",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            },
            {
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "${datasource}",
                "description": "Network speed per node. Ignores \"Application\" variable.",
                "fieldConfig": {
                    "defaults": {},
                    "overrides": []
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                    "x": 16,
                    "y": 4,
                    "w": 8,
                    "h": 8
                },
                "hiddenSeries": false,
                "id": 6,
                "legend": {
                    "alignAsTable": true,
                    "avg": false,
                    "current": true,
                    "hideEmpty": false,
                    "hideZero": true,
                    "max": false,
                    "min": false,
                    "rightSide": false,
                    "show": true,
                    "sort": "current",
                    "sortDesc": true,
                    "total": false,
                    "values": true
                },
                "lines": true,
                "linewidth": 2,
                "nullPointMode": "null",
                "options": {
                    "alertThreshold": true
                },
                "percentage": false,
                "pluginVersion": "7.5.17",
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX",
                        "dashes": true,
                        "color": "#1F60C4",
                        "fill": 0,
                        "stack": false
                    },
                    {
                        "$$hashKey": "object:78",
                        "alias": "/FINISHED|FAILED|DEAD|REMOVED|Failed Nodes:/",
                        "hiddenSeries": true
                    },
                    {
                        "$$hashKey": "object:2987",
                        "alias": "MAX + PENDING",
                        "dashes": true,
                        "color": "#777777",
                        "fill": 0,
                        "stack": false
                    }
                ],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_network_receive_speed{}) by (instance)",
                        "interval": "",
                        "legendFormat": "Recv: {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "A"
                    },
                    {
                        "exemplar": true,
                        "expr": "sum(ray_node_network_send_speed{}) by (instance)",
                        "interval": "",
                        "legendFormat": "Send: {{instance}}",
                        "queryType": "randomWalk",
                        "refId": "B"
                    }
                ],
                "thresholds": [],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Node network",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "$$hashKey": "object:628",
                        "format": "Bps",
                        "label": "",
                        "logBase": 1,
                        "max": null,
                        "min": "0",
                        "show": true
                    },
                    {
                        "$$hashKey": "object:629",
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            }
        ],
        "refresh": false,
        "schemaVersion": 27,
        "style": "dark",
        "tags": [
            "rayVersion:2.9.0"
        ],
        "templating": {
            "list": [
                {
                    "current": {
                        "selected": false
                    },
                    "description": "Filter queries of a specific Prometheus type.",
                    "hide": 2,
                    "includeAll": false,
                    "multi": false,
                    "name": "datasource",
                    "options": [],
                    "query": "prometheus",
                    "refresh": 1,
                    "regex": "",
                    "skipUrlSync": false,
                    "type": "datasource"
                },
                {
                    "allValue": ".*",
                    "current": {
                        "selected": true,
                        "text": [
                            "All"
                        ],
                        "value": [
                            "$__all"
                        ]
                    },
                    "datasource": "${datasource}",
                    "definition": "label_values(ray_serve_deployment_replica_healthy{}, application)",
                    "description": null,
                    "error": null,
                    "hide": 0,
                    "includeAll": true,
                    "label": null,
                    "multi": true,
                    "name": "Application",
                    "options": [],
                    "query": {
                        "query": "label_values(ray_serve_deployment_replica_healthy{}, application)",
                        "refId": "Prometheus-Instance-Variable-Query"
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                },
                {
                    "allValue": ".*",
                    "current": {
                        "selected": true,
                        "text": [
                            "All"
                        ],
                        "value": [
                            "$__all"
                        ]
                    },
                    "datasource": "${datasource}",
                    "definition": "label_values(ray_serve_num_http_requests{}, route)",
                    "description": null,
                    "error": null,
                    "hide": 0,
                    "includeAll": true,
                    "label": "HTTP Route",
                    "multi": true,
                    "name": "HTTP_Route",
                    "options": [],
                    "query": {
                        "query": "label_values(ray_serve_num_http_requests{}, route)",
                        "refId": "Prometheus-Instance-Variable-Query"
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                },
                {
                    "allValue": ".*",
                    "current": {
                        "selected": true,
                        "text": [
                            "All"
                        ],
                        "value": [
                            "$__all"
                        ]
                    },
                    "datasource": "${datasource}",
                    "definition": "label_values(ray_serve_num_grpc_requests{}, method)",
                    "description": null,
                    "error": null,
                    "hide": 0,
                    "includeAll": true,
                    "label": "gRPC Service Method",
                    "multi": true,
                    "name": "gRPC_Method",
                    "options": [],
                    "query": {
                        "query": "label_values(ray_serve_num_grpc_requests{}, method)",
                        "refId": "Prometheus-Instance-Variable-Query"
                    },
                    "refresh": 2,
                    "regex": "",
                    "skipUrlSync": false,
                    "sort": 0,
                    "tagValuesQuery": "",
                    "tags": [],
                    "tagsQuery": "",
                    "type": "query",
                    "useTags": false
                }
            ]
        },
        "rayMeta": [
            "excludesSystemRoutes",
            "supportsGlobalFilterOverride"
        ],
        "time": {
            "from": "now-30m",
            "to": "now"
        },
        "timepicker": {},
        "timezone": "",
        "title": "Serve Dashboard",
        "uid": "rayServeDashboard",
        "version": 1
    }
---
# Source: core/templates/mgmt-backend/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-mgmt-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: mgmt-backend
data:
  config.yaml: |+
    server:
      privateport: 3084
      publicport: 8084
      edition: k8s-ce
      usage:
        enabled: true
        host: usage.instill.tech
        port: 443
        tlsenabled: true
        usageidentifieruid: null
      debug: false
      instillcorehost: 
    pipelinebackend:
      host: my-release-core-pipeline-backend
      publicport: 8081
    database:
      username: postgres
      password: password
      host: my-release-core-database
      port: 5432
      replica:
        username: 
        password: 
        host: 
        port: 
        replicationtimeframe: 1
      name: mgmt
      version: 5
      timezone: Etc/UTC
      pool:
        idleconnections: 5
        maxconnections: 10
        connlifetime: 30m
    cache:
      redis:
        redisoptions:
          addr: my-release-core-redis:6379
    influxdb:
      url: http://core-influxdb2:8086
      token: i-love-instill-ai
      org: instill-ai
      bucket: instill-ai
      flushinterval: 10 # In seconds for non-blocking batch mode
      https:
        cert:
        key:
    log:
      external: true
      otelcollector:
        host: my-release-core-opentelemetry-collector
        port: 8095
    openfga:
      host: my-release-core-openfga
      port: 8080
      replica:
        host: my-release-core-openfga
        port: 8082
        replicationtimeframe: 1
    temporal:
      hostport: my-release-core-temporal-frontend-headless:7233
      namespace: mgmt-backend
      ca: 
      cert: 
      key: 
      serverName:
---
# Source: core/templates/model-backend/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-model-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: model-backend
data:
  config.yaml: |+
    server:
      privateport: 3083
      publicport: 8083
      edition: k8s-ce
      usage:
        enabled: true
        host: usage.instill.tech
        port: 443
        tlsenabled: true
        usageidentifieruid: null
      debug: false
      maxdatasize: 32
      workflow:
        maxworkflowtimeout: 3600
        maxworkflowretry: 3
        maxactivityretry: 1
      instillcorehost: 
    log:
      external: true
      otelcollector:
        host: my-release-core-opentelemetry-collector
        port: 8095
    mgmtbackend:
      host: my-release-core-mgmt-backend
      publicport: 8084
      privateport: 3084
    artifactbackend:
      host: my-release-core-artifact-backend
      publicport: 8082
      privateport: 3082
    rayserver:
      grpcuri: my-release-core-ray-head-svc:9000
      modelstore: /model-config
      vram: 
    database:
      username: postgres
      password: password
      host: my-release-core-database
      port: 5432
      replica:
        username: 
        password: 
        host: 
        port: 
        replicationtimeframe: 1
      name: model
      version: 5
      timezone: Etc/UTC
      pool:
        idleconnections: 5
        maxconnections: 10
        connlifetime: 30m
    cache:
      redis:
        redisoptions:
          addr: my-release-core-redis:6379
    maxbatchsizelimitation:
      unspecified: 2
      classification: 16
      detection: 8
      keypoint: 8
      ocr: 2
      instancesegmentation: 8
      semanticsegmentation: 8
      textgeneration: 1
    temporal:
      hostport: my-release-core-temporal-frontend-headless:7233
      namespace: model-backend
      retention: 1d
      ca: 
      cert: 
      key: 
      serverName: 
    initmodel:
      enabled: false
      path: https://raw.githubusercontent.com/instill-ai/instill-core/main/model-hub/model_hub_test.json
    openfga:
      host: my-release-core-openfga
      port: 8081
      replica:
        host: my-release-core-openfga
        port: 8083
        replicationtimeframe: 1
    registry:
      host: my-release-core-registry
      port: 5000
---
# Source: core/templates/pipeline-backend/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-pipeline-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: pipeline-backend
data:
  config.yaml: |+
    server:
      privateport: 3081
      publicport: 8081
      edition: k8s-ce
      usage:
        enabled: true
        host: usage.instill.tech
        port: 443
        tlsenabled: true
        usageidentifieruid: null
      debug: false
      maxdatasize: 32
      workflow:
        maxworkflowtimeout: 3600
        maxworkflowretry: 3
        maxactivityretry: 1
    connector:
      instill:
        usestaticmodellist: false
    mgmtbackend:
      host: my-release-core-mgmt-backend
      publicport: 8084
      privateport: 3084
    modelbackend:
      host: my-release-core-model-backend
      publicport: 8083
    database:
      username: postgres
      password: password
      host: my-release-core-database
      port: 5432
      replica:
        username: 
        password: 
        host: 
        port: 
        replicationtimeframe: 1
      name: pipeline
      version: 15
      timezone: Etc/UTC
      pool:
        idleconnections: 5
        maxconnections: 10
        connlifetime: 30m
    influxdb:
      url: http://core-influxdb2:8086
      token: i-love-instill-ai
      org: instill-ai
      bucket: instill-ai
      flushinterval: 10 # In seconds for non-blocking batch mode
      https:
        cert:
        key:
    cache:
      redis:
        redisoptions:
          addr: my-release-core-redis:6379
    temporal:
      hostport: my-release-core-temporal-frontend-headless:7233
      namespace: pipeline-backend
      ca: 
      cert: 
      key: 
      serverName: 
    log:
      external: true
      otelcollector:
        host: my-release-core-opentelemetry-collector
        port: 8095
    openfga:
      host: my-release-core-openfga
      port: 8081
      replica:
        host: my-release-core-openfga
        port: 8083
        replicationtimeframe: 1
---
# Source: core/templates/ray-service/ray-service.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: podman
data:
  registries.conf: |
    unqualified-search-registries = ["my-release-core-registry:5000", "docker.io", "quay.io"]

    [[registry]]
    location = "my-release-core-registry:5000"
    insecure = true
  policy.json: |
    {
      "default": [
        {
          "type": "insecureAcceptAnything"
        }
      ],
      "transports": {
        "docker-daemon": {
          "": [{ "type": "insecureAcceptAnything" }]
        }
      }
    }
  storage.conf: |
    [storage]
    driver = "overlay"
---
# Source: core/templates/registry/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-registry
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: registry
data:
  config.yaml: |+
    version: 0.1
    log:
      fields:
        environment: k8s:ce
        service: registry
      formatter: text
      level: Info
    storage:
      filesystem:
        maxthreads: 100
        rootdirectory: /var/lib/registry
    http:
      addr: 0.0.0.0:5000
      debug:
        addr: 0.0.0.0:5001
        prometheus:
          enabled: true
          path: /metrics
      draintimeout: 60s
      h2c:
        enabled: false
      headers:
        X-Content-Type-Options:
        - nosniff
      http2:
        disabled: false
      prefix: /
      relativeurls: false
      secret: i-love-instill-ai
      tls:
        certificate: null
        key: null
    redis:
      addr: core-redis:6379
      dialtimeout: 100ms
      pool:
        idletimeout: 300s
        maxactive: 128
        maxidle: 16
      readtimeout: 100ms
      tls:
        enabled: false
      writetimeout: 100ms
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
      tcp:
        - addr: my-release-core-redis:6379
          timeout: 3s
          interval: 30s
          threshold: 3
---
# Source: core/templates/temporal/server-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-temporal-frontend-config
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-frontend
data:
  config_template.yaml: |-
    log:
      stdout: true
      level: "debug,info"

    persistence:
      defaultStore: default
      visibilityStore: visibility
      advancedVisibilityStore: es-visibility
      numHistoryShards: 512
      datastores:
        default:
          sql:
            pluginName: postgres
            driverName: postgres
            databaseName: temporal
            connectAddr: my-release-core-database:5432
            connectProtocol: "tcp"
            user: postgres
            password: "{{ .Env.TEMPORAL_STORE_PASSWORD }}"
            existingSecret: ""
            maxConnLifetime: 1h
            maxConns: 20
            secretName: ""
        visibility:
          sql:
            pluginName: postgres
            driverName: postgres
            databaseName: temporal
            connectAddr: my-release-core-database:5432
            connectProtocol: "tcp"
            user: postgres
            password: "{{ .Env.TEMPORAL_VISIBILITY_STORE_PASSWORD }}"
            existingSecret: ""
            maxConnLifetime: 1h
            maxConns: 20
            secretName: ""
        es-visibility:
          elasticsearch:
            version: "v7"
            url:
              scheme: "http"
              host: "core-elasticsearch-master:9200"
            username: "elastic"
            password: "password"
            logLevel: "debug"
            indices:
              visibility: "temporal_visibility_v1_dev"

    global:
      membership:
        name: temporal
        maxJoinDuration: 30s
        broadcastAddress: {{ default .Env.POD_IP "0.0.0.0" }}

      pprof:
        port: 7936

      metrics:
        tags:
          type: frontend
        prometheus:
          timerType: histogram
          listenAddress: "0.0.0.0:9090"

    services:
      frontend:
        rpc:
          grpcPort: 7233
          membershipPort: 6933
          bindOnIP: "0.0.0.0"

      history:
        rpc:
          grpcPort: 7234
          membershipPort: 6934
          bindOnIP: "0.0.0.0"

      matching:
        rpc:
          grpcPort: 7235
          membershipPort: 6935
          bindOnIP: "0.0.0.0"

      worker:
        rpc:
          grpcPort: 7239
          membershipPort: 6939
          bindOnIP: "0.0.0.0"

    clusterMetadata:
      enableGlobalDomain: false
      failoverVersionIncrement: 10
      masterClusterName: "active"
      currentClusterName: "active"
      clusterInformation:
        active:
          enabled: true
          initialFailoverVersion: 1
          rpcName: "my-release-core-temporal-frontend"
          rpcAddress: "127.0.0.1:7933"

    dcRedirectionPolicy:
      policy: "noop"
      toDC: ""

    archival:
      status: "disabled"

    publicClient:
      hostPort: my-release-core-temporal-frontend:7233

    dynamicConfigClient:
      filepath: "/etc/temporal/dynamic_config/dynamic_config.yaml"
      pollInterval: "10s"
---
# Source: core/templates/temporal/server-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-temporal-history-config
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-history
data:
  config_template.yaml: |-
    log:
      stdout: true
      level: "debug,info"

    persistence:
      defaultStore: default
      visibilityStore: visibility
      advancedVisibilityStore: es-visibility
      numHistoryShards: 512
      datastores:
        default:
          sql:
            pluginName: postgres
            driverName: postgres
            databaseName: temporal
            connectAddr: my-release-core-database:5432
            connectProtocol: "tcp"
            user: postgres
            password: "{{ .Env.TEMPORAL_STORE_PASSWORD }}"
            existingSecret: ""
            maxConnLifetime: 1h
            maxConns: 20
            secretName: ""
        visibility:
          sql:
            pluginName: postgres
            driverName: postgres
            databaseName: temporal
            connectAddr: my-release-core-database:5432
            connectProtocol: "tcp"
            user: postgres
            password: "{{ .Env.TEMPORAL_VISIBILITY_STORE_PASSWORD }}"
            existingSecret: ""
            maxConnLifetime: 1h
            maxConns: 20
            secretName: ""
        es-visibility:
          elasticsearch:
            version: "v7"
            url:
              scheme: "http"
              host: "core-elasticsearch-master:9200"
            username: "elastic"
            password: "password"
            logLevel: "debug"
            indices:
              visibility: "temporal_visibility_v1_dev"

    global:
      membership:
        name: temporal
        maxJoinDuration: 30s
        broadcastAddress: {{ default .Env.POD_IP "0.0.0.0" }}

      pprof:
        port: 7936

      metrics:
        tags:
          type: history
        prometheus:
          timerType: histogram
          listenAddress: "0.0.0.0:9090"

    services:
      frontend:
        rpc:
          grpcPort: 7233
          membershipPort: 6933
          bindOnIP: "0.0.0.0"

      history:
        rpc:
          grpcPort: 7234
          membershipPort: 6934
          bindOnIP: "0.0.0.0"

      matching:
        rpc:
          grpcPort: 7235
          membershipPort: 6935
          bindOnIP: "0.0.0.0"

      worker:
        rpc:
          grpcPort: 7239
          membershipPort: 6939
          bindOnIP: "0.0.0.0"

    clusterMetadata:
      enableGlobalDomain: false
      failoverVersionIncrement: 10
      masterClusterName: "active"
      currentClusterName: "active"
      clusterInformation:
        active:
          enabled: true
          initialFailoverVersion: 1
          rpcName: "my-release-core-temporal-frontend"
          rpcAddress: "127.0.0.1:7933"

    dcRedirectionPolicy:
      policy: "noop"
      toDC: ""

    archival:
      status: "disabled"

    publicClient:
      hostPort: my-release-core-temporal-frontend:7233

    dynamicConfigClient:
      filepath: "/etc/temporal/dynamic_config/dynamic_config.yaml"
      pollInterval: "10s"
---
# Source: core/templates/temporal/server-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-temporal-matching-config
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-matching
data:
  config_template.yaml: |-
    log:
      stdout: true
      level: "debug,info"

    persistence:
      defaultStore: default
      visibilityStore: visibility
      advancedVisibilityStore: es-visibility
      numHistoryShards: 512
      datastores:
        default:
          sql:
            pluginName: postgres
            driverName: postgres
            databaseName: temporal
            connectAddr: my-release-core-database:5432
            connectProtocol: "tcp"
            user: postgres
            password: "{{ .Env.TEMPORAL_STORE_PASSWORD }}"
            existingSecret: ""
            maxConnLifetime: 1h
            maxConns: 20
            secretName: ""
        visibility:
          sql:
            pluginName: postgres
            driverName: postgres
            databaseName: temporal
            connectAddr: my-release-core-database:5432
            connectProtocol: "tcp"
            user: postgres
            password: "{{ .Env.TEMPORAL_VISIBILITY_STORE_PASSWORD }}"
            existingSecret: ""
            maxConnLifetime: 1h
            maxConns: 20
            secretName: ""
        es-visibility:
          elasticsearch:
            version: "v7"
            url:
              scheme: "http"
              host: "core-elasticsearch-master:9200"
            username: "elastic"
            password: "password"
            logLevel: "debug"
            indices:
              visibility: "temporal_visibility_v1_dev"

    global:
      membership:
        name: temporal
        maxJoinDuration: 30s
        broadcastAddress: {{ default .Env.POD_IP "0.0.0.0" }}

      pprof:
        port: 7936

      metrics:
        tags:
          type: matching
        prometheus:
          timerType: histogram
          listenAddress: "0.0.0.0:9090"

    services:
      frontend:
        rpc:
          grpcPort: 7233
          membershipPort: 6933
          bindOnIP: "0.0.0.0"

      history:
        rpc:
          grpcPort: 7234
          membershipPort: 6934
          bindOnIP: "0.0.0.0"

      matching:
        rpc:
          grpcPort: 7235
          membershipPort: 6935
          bindOnIP: "0.0.0.0"

      worker:
        rpc:
          grpcPort: 7239
          membershipPort: 6939
          bindOnIP: "0.0.0.0"

    clusterMetadata:
      enableGlobalDomain: false
      failoverVersionIncrement: 10
      masterClusterName: "active"
      currentClusterName: "active"
      clusterInformation:
        active:
          enabled: true
          initialFailoverVersion: 1
          rpcName: "my-release-core-temporal-frontend"
          rpcAddress: "127.0.0.1:7933"

    dcRedirectionPolicy:
      policy: "noop"
      toDC: ""

    archival:
      status: "disabled"

    publicClient:
      hostPort: my-release-core-temporal-frontend:7233

    dynamicConfigClient:
      filepath: "/etc/temporal/dynamic_config/dynamic_config.yaml"
      pollInterval: "10s"
---
# Source: core/templates/temporal/server-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-temporal-worker-config
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-worker
data:
  config_template.yaml: |-
    log:
      stdout: true
      level: "debug,info"

    persistence:
      defaultStore: default
      visibilityStore: visibility
      advancedVisibilityStore: es-visibility
      numHistoryShards: 512
      datastores:
        default:
          sql:
            pluginName: postgres
            driverName: postgres
            databaseName: temporal
            connectAddr: my-release-core-database:5432
            connectProtocol: "tcp"
            user: postgres
            password: "{{ .Env.TEMPORAL_STORE_PASSWORD }}"
            existingSecret: ""
            maxConnLifetime: 1h
            maxConns: 20
            secretName: ""
        visibility:
          sql:
            pluginName: postgres
            driverName: postgres
            databaseName: temporal
            connectAddr: my-release-core-database:5432
            connectProtocol: "tcp"
            user: postgres
            password: "{{ .Env.TEMPORAL_VISIBILITY_STORE_PASSWORD }}"
            existingSecret: ""
            maxConnLifetime: 1h
            maxConns: 20
            secretName: ""
        es-visibility:
          elasticsearch:
            version: "v7"
            url:
              scheme: "http"
              host: "core-elasticsearch-master:9200"
            username: "elastic"
            password: "password"
            logLevel: "debug"
            indices:
              visibility: "temporal_visibility_v1_dev"

    global:
      membership:
        name: temporal
        maxJoinDuration: 30s
        broadcastAddress: {{ default .Env.POD_IP "0.0.0.0" }}

      pprof:
        port: 7936

      metrics:
        tags:
          type: worker
        prometheus:
          timerType: histogram
          listenAddress: "0.0.0.0:9090"

    services:
      frontend:
        rpc:
          grpcPort: 7233
          membershipPort: 6933
          bindOnIP: "0.0.0.0"

      history:
        rpc:
          grpcPort: 7234
          membershipPort: 6934
          bindOnIP: "0.0.0.0"

      matching:
        rpc:
          grpcPort: 7235
          membershipPort: 6935
          bindOnIP: "0.0.0.0"

      worker:
        rpc:
          grpcPort: 7239
          membershipPort: 6939
          bindOnIP: "0.0.0.0"

    clusterMetadata:
      enableGlobalDomain: false
      failoverVersionIncrement: 10
      masterClusterName: "active"
      currentClusterName: "active"
      clusterInformation:
        active:
          enabled: true
          initialFailoverVersion: 1
          rpcName: "my-release-core-temporal-frontend"
          rpcAddress: "127.0.0.1:7933"

    dcRedirectionPolicy:
      policy: "noop"
      toDC: ""

    archival:
      status: "disabled"

    publicClient:
      hostPort: my-release-core-temporal-frontend:7233

    dynamicConfigClient:
      filepath: "/etc/temporal/dynamic_config/dynamic_config.yaml"
      pollInterval: "10s"
---
# Source: core/templates/temporal/server-dynamicconfigmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-temporal-dynamic-config
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
data:
  dynamic_config.yaml: |-
---
# Source: core/templates/temporal/ui-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-core-temporal
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-ui
data:
  config.yml: |
    auth:
      enabled: false
    routing:
      default_to_namespace: default
      issue_report_link: https://github.com/temporalio/web/issues/new/choose
---
# Source: core/charts/influxdb2/templates/persistent-volume-claim.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "my-release-influxdb2"
  labels:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: influxdb2-2.1.1
  annotations:
    helm.sh/resource-policy: "keep"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "50Gi"
---
# Source: core/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-core-model-config-data-volume
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: model-backend
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 512Mi
---
# Source: core/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-core-registry-data-volume
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: registry
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 250Gi
---
# Source: core/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-core-database-data-volume
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 128Mi
---
# Source: core/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-core-redis-data-volume
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: redis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 128Mi
---
# Source: core/charts/kuberay-operator/templates/ray_rayjob_editor_role.yaml
# permissions for end users to edit rayjobs.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels: 
    app.kubernetes.io/name: kuberay-operator
    helm.sh/chart: kuberay-operator-1.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: rayjob-editor-role
rules:
- apiGroups:
  - ray.io
  resources:
  - rayjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ray.io
  resources:
  - rayjobs/status
  verbs:
  - get
---
# Source: core/charts/kuberay-operator/templates/ray_rayjob_viewer_role.yaml
# permissions for end users to view rayjobs.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels: 
    app.kubernetes.io/name: kuberay-operator
    helm.sh/chart: kuberay-operator-1.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: rayjob-viewer-role
rules:
- apiGroups:
  - ray.io
  resources:
  - rayjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ray.io
  resources:
  - rayjobs/status
  verbs:
  - get
---
# Source: core/charts/kuberay-operator/templates/ray_rayservice_editor_role.yaml
# permissions for end users to edit rayservices.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rayservice-editor-role
rules:
- apiGroups:
  - ray.io
  resources:
  - rayservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ray.io
  resources:
  - rayservices/status
  verbs:
  - get
---
# Source: core/charts/kuberay-operator/templates/ray_rayservice_viewer_role.yaml
# permissions for end users to view rayservices.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rayservice-viewer-role
rules:
- apiGroups:
  - ray.io
  resources:
  - rayservices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ray.io
  resources:
  - rayservices/status
  verbs:
  - get
---
# Source: core/charts/kuberay-operator/templates/role.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: kuberay-operator
    helm.sh/chart: kuberay-operator-1.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: my-release-kuberay-operator
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ray.io
  resources:
  - rayclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ray.io
  resources:
  - rayclusters/finalizers
  verbs:
  - update
- apiGroups:
  - ray.io
  resources:
  - rayclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ray.io
  resources:
  - rayjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ray.io
  resources:
  - rayjobs/finalizers
  verbs:
  - update
- apiGroups:
  - ray.io
  resources:
  - rayjobs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ray.io
  resources:
  - rayservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ray.io
  resources:
  - rayservices/finalizers
  verbs:
  - update
- apiGroups:
  - ray.io
  resources:
  - rayservices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: core/charts/kuberay-operator/templates/rolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: kuberay-operator
    helm.sh/chart: kuberay-operator-1.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: my-release-kuberay-operator
subjects:
- kind: ServiceAccount
  name: kuberay-operator
  namespace: core-0.1.36-beta.tgz
roleRef:
  kind: ClusterRole
  name: my-release-kuberay-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: core/charts/kuberay-operator/templates/leader_election_role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels: 
    app.kubernetes.io/name: kuberay-operator
    helm.sh/chart: kuberay-operator-1.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: my-release-kuberay-operator-leader-election
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
---
# Source: core/charts/kuberay-operator/templates/leader_election_role_binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels: 
    app.kubernetes.io/name: kuberay-operator
    helm.sh/chart: kuberay-operator-1.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: my-release-kuberay-operator-leader-election
subjects:
- kind: ServiceAccount
  name: kuberay-operator
  namespace: core-0.1.36-beta.tgz
roleRef:
  kind: Role
  name: my-release-kuberay-operator-leader-election
  apiGroup: rbac.authorization.k8s.io
---
# Source: core/charts/elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: core-elasticsearch-master
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "elasticsearch"
    app: "core-elasticsearch-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    release: "my-release"
    chart: "elasticsearch"
    app: "core-elasticsearch-master"
  publishNotReadyAddresses: false
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: core/charts/elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: core-elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "elasticsearch"
    app: "core-elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "core-elasticsearch-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: core/charts/influxdb2/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-influxdb2
  labels:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: influxdb2-2.1.1
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8086
      protocol: TCP
      targetPort: 8086
  selector:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: my-release
---
# Source: core/charts/jaeger/templates/agent-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-jaeger-agent
  labels:
    helm.sh/chart: jaeger-0.71.2
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.45.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: agent
spec:
  ports:
  - name: zipkin-compact
    port: 5775
    protocol: UDP
    targetPort: zipkin-compact
  - name: jaeger-compact
    port: 6831
    protocol: UDP
    targetPort: jaeger-compact
  - name: jaeger-binary
    port: 6832
    protocol: UDP
    targetPort: jaeger-binary
  - name: http
    port: 5778
    protocol: TCP
    targetPort: http
  - name: admin
    port: 14271
    protocol: TCP
    targetPort: admin
  type: ClusterIP
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: agent
---
# Source: core/charts/jaeger/templates/collector-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-jaeger-collector
  labels:
    helm.sh/chart: jaeger-0.71.2
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.45.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: collector
spec:
  ports:
  - name: grpc
    port: 14250
    protocol: TCP
    targetPort: grpc
  - name: http
    port: 14268
    protocol: TCP
    targetPort: http
  - name: admin
    port: 14269
    targetPort: admin
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: collector
  type: ClusterIP
---
# Source: core/charts/jaeger/templates/query-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-jaeger-query
  labels:
    helm.sh/chart: jaeger-0.71.2
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.45.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query
spec:
  ports:
  - name: query
    port: 80
    protocol: TCP
    targetPort: query
  - name: grpc
    port: 16685
    protocol: TCP
    targetPort: grpc
  - name: admin
    port: 16687
    protocol: TCP
    targetPort: admin
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: query
  type: ClusterIP
---
# Source: core/charts/kuberay-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kuberay-operator
  labels:
    app.kubernetes.io/name: kuberay-operator
    helm.sh/chart: kuberay-operator-1.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kuberay-operator
    app.kubernetes.io/instance: my-release
---
# Source: core/charts/opentelemetry-collector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.59.1
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.78.0"
    app.kubernetes.io/managed-by: Helm
    component: standalone-collector
spec:
  type: ClusterIP
  ports: 
    
    - name: metrics
      port: 9001
      targetPort: 9001
      protocol: TCP
    - name: otlp
      port: 8095
      targetPort: 8095
      protocol: TCP
      appProtocol: grpc
  selector:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: my-release
    component: standalone-collector
  internalTrafficPolicy: Cluster
---
# Source: core/templates/api-gateway/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-api-gateway
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: api-gateway
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: stats
      port: 8070
      targetPort: 8070
    - name: metrics
      port: 8071
      targetPort: 8071
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: api-gateway
---
# Source: core/templates/artifact-backend/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-artifact-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: artifact-backend
spec:
  ports:
    - name: http-private
      port: 3082
      targetPort: 3082
    - name: http-public
      port: 8082
      targetPort: 8082
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: artifact-backend
---
# Source: core/templates/console/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-console
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: console
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: console
---
# Source: core/templates/database/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-database
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: database
spec:
  ports:
    - port: 5432
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: database
---
# Source: core/templates/mgmt-backend/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-mgmt-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: mgmt-backend
spec:
  ports:
    - name: http-private
      port: 3084
      targetPort: 3084
    - name: http-public
      port: 8084
      targetPort: 8084
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: mgmt-backend
---
# Source: core/templates/model-backend/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-model-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: model-backend
spec:
  ports:
    - name: http-private
      port: 3083
      targetPort: 3083
    - name: http-public
      port: 8083
      targetPort: 8083
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: model-backend
---
# Source: core/templates/openfga/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-openfga
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: openfga
spec:
  ports:
    - name: openfga
      port: 8080
      targetPort: 8080
    - name: openfga-grpc
      port: 8081
      targetPort: 8081
    - name: openfga-read-replica
      port: 8082
      targetPort: 8082
    - name: openfga-read-replica-grpc
      port: 8083
      targetPort: 8083
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: openfga
---
# Source: core/templates/pipeline-backend/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-pipeline-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: pipeline-backend
spec:
  ports:
    - name: http-private
      port: 3081
      targetPort: 3081
    - name: http-public
      port: 8081
      targetPort: 8081
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: pipeline-backend
---
# Source: core/templates/redis/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-redis
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: redis
spec:
  ports:
    - port: 6379
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: redis
---
# Source: core/templates/registry/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-registry
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: registry
spec:
  ports:
    - name: http
      port: 5000
      targetPort: 5000
    - name: metrics
      port: 5001
      targetPort: 5001
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: registry
---
# Source: core/templates/temporal/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-temporal-frontend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-frontend
spec:
  type: ClusterIP
  ports:
    - port: 7233
      targetPort: rpc
      protocol: TCP
      name: grpc-rpc
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: temporal-frontend
---
# Source: core/templates/temporal/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-temporal-frontend-headless
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-frontend
    app.kubernetes.io/headless: 'true'
    prometheus.io/job: core-temporal-frontend
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: http
    prometheus.io/port: "9090"

  annotations:
    # Use this annotation in addition to the actual field below because the
    # annotation will stop being respected soon but the field is broken in
    # some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 7233
      targetPort: rpc
      protocol: TCP
      name: grpc-rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: temporal-frontend
---
# Source: core/templates/temporal/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-temporal-matching-headless
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-matching
    app.kubernetes.io/headless: 'true'
    prometheus.io/job: core-temporal-matching
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: http
    prometheus.io/port: "9090"

  annotations:
    # Use this annotation in addition to the actual field below because the
    # annotation will stop being respected soon but the field is broken in
    # some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 7235
      targetPort: rpc
      protocol: TCP
      name: grpc-rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: temporal-matching
---
# Source: core/templates/temporal/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-temporal-history-headless
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-history
    app.kubernetes.io/headless: 'true'
    prometheus.io/job: core-temporal-history
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: http
    prometheus.io/port: "9090"

  annotations:
    # Use this annotation in addition to the actual field below because the
    # annotation will stop being respected soon but the field is broken in
    # some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 7234
      targetPort: rpc
      protocol: TCP
      name: grpc-rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: temporal-history
---
# Source: core/templates/temporal/server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-temporal-worker-headless
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-worker
    app.kubernetes.io/headless: 'true'
    prometheus.io/job: core-temporal-worker
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: http
    prometheus.io/port: "9090"

  annotations:
    # Use this annotation in addition to the actual field below because the
    # annotation will stop being respected soon but the field is broken in
    # some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 7239
      targetPort: rpc
      protocol: TCP
      name: grpc-rpc
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: temporal-worker
---
# Source: core/templates/temporal/ui-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-core-temporal-ui
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-ui
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8088
      targetPort: 8080
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: core
    app.kubernetes.io/component: temporal-ui
---
# Source: core/charts/jaeger/templates/agent-ds.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-release-jaeger-agent
  labels:
    helm.sh/chart: jaeger-0.71.2
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.45.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: agent
    spec:
      securityContext:
        {}
      dnsPolicy: ClusterFirst
      serviceAccountName: my-release-jaeger-agent
      containers:
      - name: my-release-jaeger-agent
        securityContext:
          {}
        image: jaegertracing/jaeger-agent:1.45.0
        imagePullPolicy: IfNotPresent
        args:
          
          
        env:
          - name: REPORTER_GRPC_HOST_PORT
            value: my-release-jaeger-collector:14250
        ports:
        - name: zipkin-compact
          containerPort: 5775
          protocol: UDP
        - name: jaeger-compact
          containerPort: 6831
          protocol: UDP
        - name: jaeger-binary
          containerPort: 6832
          protocol: UDP
        - name: http
          containerPort: 5778
          protocol: TCP
        - name: admin
          containerPort: 14271
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: admin
        readinessProbe:
          httpGet:
            path: /
            port: admin
        resources:
          {}
        volumeMounts:
      volumes:
---
# Source: core/charts/jaeger/templates/collector-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-jaeger-collector
  labels:
    helm.sh/chart: jaeger-0.71.2
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.45.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: collector
  template:
    metadata:
      annotations:
        checksum/config-env: 75a11da44c802486bc6f65640aa48a730f0f684c5c07a42ba3cd1735eb3fb070
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: collector
    spec:
      securityContext:
        {}
      serviceAccountName: my-release-jaeger-collector
      initContainers:
        - args:
          - |
            while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://core-elasticsearch-master:9200)" != "200" ]]; do echo waiting for elasticsearch; sleep 1; done
          command:
          - sh
          - -c
          image: curlimages/curl:8.00.1
          name: wait-for-elasticsearch
      containers:
      - name: my-release-jaeger-collector
        securityContext:
          {}
        image: jaegertracing/jaeger-collector:1.45.0
        imagePullPolicy: IfNotPresent
        args:
          
          
          
        env:
          - name: SPAN_STORAGE_TYPE
            value: elasticsearch
          - name: ES_SERVER_URLS
            value: http://core-elasticsearch-master:9200
          - name: ES_USERNAME
            value: elastic
          - name: ES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-release-jaeger-elasticsearch
                key: password
        ports:
        - containerPort: 14250
          name: grpc
          protocol: TCP
        - containerPort: 14268
          name: http
          protocol: TCP
        - containerPort: 14269
          name: admin
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: admin
        livenessProbe:
          httpGet:
            path: /
            port: admin
        resources:
          {}
        volumeMounts:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
---
# Source: core/charts/jaeger/templates/query-deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-jaeger-query
  labels:
    helm.sh/chart: jaeger-0.71.2
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.45.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: query
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: query
    spec:
      securityContext:
        {}
      serviceAccountName: my-release-jaeger-query
      containers:
      - name: my-release-jaeger-query
        securityContext:
          {}
        image: jaegertracing/jaeger-query:1.45.0
        imagePullPolicy: IfNotPresent
        args:
          
          
          
        env:
          - name: SPAN_STORAGE_TYPE
            value: elasticsearch
          - name: ES_SERVER_URLS
            value: http://core-elasticsearch-master:9200
          - name: ES_USERNAME
            value: elastic
          - name: ES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-release-jaeger-elasticsearch
                key: password
          - name: QUERY_BASE_PATH
            value: "/"
          - name: JAEGER_AGENT_PORT
            value: "6831"
        ports:
        - name: query
          containerPort: 16686
          protocol: TCP
        - name: grpc
          containerPort: 16685
          protocol: TCP
        - name: admin
          containerPort: 16687
          protocol: TCP
        resources:
          {}
        volumeMounts:
        livenessProbe:
          httpGet:
            path: /
            port: admin
        readinessProbe:
          httpGet:
            path: /
            port: admin
      - name: my-release-jaeger-agent-sidecar
        securityContext:
          {}
        image: jaegertracing/jaeger-agent:1.45.0
        imagePullPolicy: IfNotPresent
        args:
        env:
        - name: REPORTER_GRPC_HOST_PORT
          value: my-release-jaeger-collector:14250
        ports:
        - name: admin
          containerPort: 14271
          protocol: TCP
        resources:
          null
        volumeMounts:
        livenessProbe:
          httpGet:
            path: /
            port: admin
        readinessProbe:
          httpGet:
            path: /
            port: admin
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
---
# Source: core/charts/kuberay-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kuberay-operator
  labels:
    app.kubernetes.io/name: kuberay-operator
    helm.sh/chart: kuberay-operator-1.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: kuberay-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kuberay-operator
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: kuberay-operator
    spec:
      serviceAccountName: kuberay-operator
      securityContext:
        null
      containers:
        - name: kuberay-operator
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: "quay.io/kuberay/operator:v1.1.1"
          imagePullPolicy: IfNotPresent
          command:
            - /manager
          args:
            - --watch-namespace
            - instill-ai
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            null
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 5
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
---
# Source: core/charts/opentelemetry-collector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-opentelemetry-collector
  labels:
    helm.sh/chart: opentelemetry-collector-0.59.1
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.78.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-collector
      app.kubernetes.io/instance: my-release
      component: standalone-collector
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 9270baaf009c3ca77048d42762e43ce1657ec27b1ed004b05c5e7e4de8d3d825
        
      labels:
        app.kubernetes.io/name: opentelemetry-collector
        app.kubernetes.io/instance: my-release
        component: standalone-collector
        
    spec:
      
      serviceAccountName: my-release-opentelemetry-collector
      securityContext:
        {}
      containers:
        - name: opentelemetry-collector
          command:
            - /otelcol-contrib
            - --config=/conf/relay.yaml
          securityContext:
            {}
          image: "otel/opentelemetry-collector-contrib:0.78.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              containerPort: 9001
              protocol: TCP
            - name: otlp
              containerPort: 8095
              protocol: TCP
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          volumeMounts:
            - mountPath: /conf
              name: opentelemetry-collector-configmap
      volumes:
        - name: opentelemetry-collector-configmap
          configMap:
            name: my-release-opentelemetry-collector
            items:
              - key: relay
                path: relay.yaml
      hostNetwork: false
---
# Source: core/templates/api-gateway/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-core-api-gateway
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: api-gateway
  annotations:
    rollme: "vsS5W"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: api-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: api-gateway
      annotations:
        checksum/config: a7639a55fbd3914a95a2c7a72c903cc09de577c72017ab63317bda33f425589e
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: wait-for-dependencies
          image: curlimages/curl:8.00.1
          command: ['sh', '-c']
          args:
          - >
            while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' ${MGMT_BACKEND_HOST}:${MGMT_BACKEND_PORT}/v1beta/health/mgmt)" != "200" ]]; do echo waiting for mgmt-backend; sleep 1; done &&
            while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' ${PIPELINE_BACKEND_HOST}:${PIPELINE_BACKEND_PORT}/v1beta/health/pipeline)" != "200" ]]; do echo waiting for pipeline-backend; sleep 1; done &&
            while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' ${INFLUXDB_HOST}:${INFLUXDB_PORT}/health)" != "200" ]]; do echo waiting for influxdb; sleep 1; done
          env:
            - name: MGMT_BACKEND_HOST
              value: "my-release-core-mgmt-backend"
            - name: MGMT_BACKEND_PORT
              value: "8084"
            - name: PIPELINE_BACKEND_HOST
              value: "my-release-core-pipeline-backend"
            - name: PIPELINE_BACKEND_PORT
              value: "8081"
            - name: INFLUXDB_HOST
              value: "my-release-core-influxdb2"
            - name: INFLUXDB_PORT
              value: "8086"
        - name: temporal-admin-tools
          securityContext:
            runAsUser: 0
          image: temporalio/admin-tools:1.22.3
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash", "-c"]
          args:
            - >
              until tctl cluster health 2>&1 > /dev/null; do echo waiting for Temporal; sleep 2; done
          env:
            - name: TEMPORAL_CLI_ADDRESS
              value: "my-release-core-temporal-frontend:7233"
      containers:
        - name: api-gateway
          image: instill/api-gateway:0.17.0-beta
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /__health
              scheme: HTTP
              port: http
            periodSeconds: 10
            initialDelaySeconds: 60
          livenessProbe:
            httpGet:
              path: /__health
              scheme: HTTP
              port: http
            periodSeconds: 10
            initialDelaySeconds: 60
          command: ["/bin/bash", "-c"]
          args:
            - |
              make config && \
              krakend run \
              --config krakend.json
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: stats
              containerPort: 8070
              protocol: TCP
            - name: metrics
              containerPort: 8071
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /api-gateway/config/.env
              subPath: ".env"
      volumes:
        - name: config
          configMap:
            name: my-release-core-api-gateway
---
# Source: core/templates/artifact-backend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-core-artifact-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: artifact-backend
  annotations:
    rollme: "HlJ2o"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: artifact-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: artifact-backend
      annotations:
        checksum/config: 2af3fe62d6273d630a8259ce8a565ebfd1eb3592a81dc98abbcb636d82214257
    spec:
      # Distroless nonroot:nonroot is 65532:65532
      securityContext:
        runAsUser: 65532
        runAsGroup: 65532
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: wait-for-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', "until pg_isready; do echo waiting for db; sleep 2; done"]
          env:
            - name: PGHOST
              value: my-release-core-database
            - name: PGUSER
              value: postgres
        - name: artifact-backend-migration
          image: instill/artifact-backend:0.2.1-alpha
          imagePullPolicy: IfNotPresent
          command: [./artifact-backend-migrate]
          volumeMounts:
            - name: config
              mountPath: /artifact-backend/config/config.yaml
              subPath: config.yaml
      containers:
        - name: artifact-backend
          image: instill/artifact-backend:0.2.1-alpha
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /v1alpha/__readiness
              scheme: HTTP
              port: http-public
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /v1alpha/__liveness
              scheme: HTTP
              port: http-public
            periodSeconds: 10
          command: [./artifact-backend]
          ports:
            - name: http-admin
              containerPort: 3082
              protocol: TCP
            - name: http-public
              containerPort: 8082
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /artifact-backend/config/config.yaml
              subPath: config.yaml
      volumes:
        - name: config
          configMap:
            name: my-release-core-artifact-backend
---
# Source: core/templates/console/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-core-console
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: console
  annotations:
    rollme: "coxAZ"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: console
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: console
      annotations:
    spec:
      # Node image nodejs:nodejs is 1001:1001
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
      containers:
        - name: console
          image: instill/console:0.48.0-beta
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /api/health
              scheme: HTTP
              port: http
            periodSeconds: 10
            initialDelaySeconds: 60
          livenessProbe:
            httpGet:
              path: /api/health
              scheme: HTTP
              port: http
            periodSeconds: 10
            initialDelaySeconds: 60
          command: ["./entrypoint.sh"]
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          volumeMounts:
          env:
            - name: NEXT_PUBLIC_GENERAL_API_VERSION
              value: "v1beta"
            - name: NEXT_PUBLIC_MODEL_API_VERSION
              value: "v1alpha"
            - name: NEXT_PUBLIC_USAGE_COLLECTION_ENABLED
              value: "true"
            - name: NEXT_PUBLIC_CONSOLE_EDITION
              value: "k8s-ce"
            - name: NEXT_PUBLIC_CONSOLE_BASE_URL
              value: "http://localhost:3000"
            - name: NEXT_PUBLIC_API_GATEWAY_URL
              value: "http://localhost:8080"
            - name: NEXT_SERVER_API_GATEWAY_URL
              value: http://my-release-core-api-gateway:8080
            - name: NEXT_PUBLIC_INSTILL_AI_USER_COOKIE_NAME
              value: "instill-ai-user"
            - name: NEXT_PUBLIC_SELF_SIGNED_CERTIFICATION
              value: "false"
            - name: NODE_ENV
              value: "production"
      volumes:
---
# Source: core/templates/mgmt-backend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-core-mgmt-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: mgmt-backend
  annotations:
    rollme: "srTad"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: mgmt-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: mgmt-backend
      annotations:
        checksum/config: fb11355e651b208eec417bc02580d0ae8a527b550aee6b7ca6407583fa4db4e5
    spec:
      # Distroless nonroot:nonroot is 65532:65532
      securityContext:
        runAsUser: 65532
        runAsGroup: 65532
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: wait-for-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', "until pg_isready; do echo waiting for db; sleep 2; done"]
          env:
            - name: PGHOST
              value: my-release-core-database
            - name: PGUSER
              value: postgres
        - name: temporal-admin-tools
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          image: temporalio/admin-tools:1.22.3
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash", "-c"]
          args:
            - >
              until tctl cluster health 2>&1 > /dev/null; do echo waiting for Temporal; sleep 2; done &&
              if [[ ! $(tctl --namespace mgmt-backend namespace list | grep mgmt-backend) ]]; then tctl --namespace mgmt-backend namespace register; fi
          env:
            - name: TEMPORAL_CLI_ADDRESS
              value: "my-release-core-temporal-frontend:7233"
        - name: mgmt-backend-migration
          image: instill/mgmt-backend:0.16.0-beta
          imagePullPolicy: IfNotPresent
          command: [./mgmt-backend-migrate]
          volumeMounts:
            - name: config
              mountPath: /mgmt-backend/config/config.yaml
              subPath: config.yaml
        - name: mgmt-backend-init
          image: instill/mgmt-backend:0.16.0-beta
          imagePullPolicy: IfNotPresent
          command: [./mgmt-backend-init]
          volumeMounts:
            - name: config
              mountPath: /mgmt-backend/config/config.yaml
              subPath: config.yaml
      containers:
        - name: mgmt-backend
          image: instill/mgmt-backend:0.16.0-beta
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /v1beta/__readiness
              scheme: HTTP
              port: http-public
            periodSeconds: 10
            initialDelaySeconds: 60
          livenessProbe:
            httpGet:
              path: /v1beta/__liveness
              scheme: HTTP
              port: http-public
            periodSeconds: 10
            initialDelaySeconds: 60
          command: [./mgmt-backend]
          ports:
            - name: http-admin
              containerPort: 3084
              protocol: TCP
            - name: http-public
              containerPort: 8084
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /mgmt-backend/config/config.yaml
              subPath: config.yaml
        - name: mgmt-backend-worker
          image: instill/mgmt-backend:0.16.0-beta
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: rpc
          command: [./mgmt-backend-worker]
          volumeMounts:
            - name: config
              mountPath: /mgmt-backend/config/config.yaml
              subPath: config.yaml
      volumes:
        - name: config
          configMap:
            name: my-release-core-mgmt-backend
---
# Source: core/templates/model-backend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-core-model-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: model-backend
  annotations:
    rollme: "BcRCo"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: model-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: model-backend
      annotations:
        checksum/config: 7f7dc47ff817e8acf3d541680ee2d050dbe66fd914d2f707eee4842c1bfb232f
    spec:
      # Ubuntu nobody:nogroup is 65534:65534
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: wait-for-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', "until pg_isready; do echo waiting for db; sleep 2; done"]
          env:
            - name: PGHOST
              value: my-release-core-database
            - name: PGUSER
              value: postgres
        - name: temporal-admin-tools
          securityContext:
            runAsUser: 0
          image: temporalio/admin-tools:1.22.3
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash", "-c"]
          args:
            - >
              until tctl cluster health 2>&1 > /dev/null; do echo waiting for Temporal; sleep 2; done &&
              if [[ ! $(tctl --namespace model-backend namespace list | grep model-backend) ]]; then tctl --namespace model-backend namespace register; fi
          env:
            - name: TEMPORAL_CLI_ADDRESS
              value: "my-release-core-temporal-frontend:7233"
        - name: model-backend-migration
          image: instill/model-backend:0.24.0-alpha
          imagePullPolicy: IfNotPresent
          command: [./model-backend-migrate]
          volumeMounts:
            - name: config
              mountPath: /model-backend/config/config.yaml
              subPath: config.yaml
        - name: model-backend-init
          image: instill/model-backend:0.24.0-alpha
          imagePullPolicy: IfNotPresent
          command: [./model-backend-init]
          volumeMounts:
            - name: config
              mountPath: /model-backend/config/config.yaml
              subPath: config.yaml
        - name: wait-for-mgmt-backend
          image: curlimages/curl:8.00.1
          command: ['sh', '-c']
          args:
          - >
            while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' ${MGMT_BACKEND_HOST}:${MGMT_BACKEND_PORT}/v1beta/health/mgmt)" != "200" ]]; do echo waiting for mgmt-backend; sleep 1; done
          env:
            - name: MGMT_BACKEND_HOST
              value: "my-release-core-mgmt-backend"
            - name: MGMT_BACKEND_PORT
              value: "8084"
        - name: wait-for-ray-server
          image: curlimages/curl:8.00.1
          command: ['sh', '-c']
          args:
          - >
            while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' ${RAY_SERVER_HOST}:${RAY_SERVER_SERVE_PORT}/-/routes)" != "200" ]]; do echo waiting for ray-server; sleep 1; done
          env:
            - name: RAY_SERVER_HOST
              value: "my-release-core-ray-head-svc"
            - name: RAY_SERVER_SERVE_PORT
              value: "8000"
        - name: chmod-model-config
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          image: busybox
          command: ["sh", "-c", "chmod -R 777 /model-config"]
          volumeMounts:
          - name: model-config
            mountPath: /model-config
      containers:
        - name: model-backend-worker
          image: instill/model-backend:0.24.0-alpha
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: rpc
          command: [./model-backend-worker]
          volumeMounts:
            - name: config
              mountPath: /model-backend/config/config.yaml
              subPath: config.yaml
            - name: model-config
              mountPath: /model-config
        - name: model-backend
          image: instill/model-backend:0.24.0-alpha
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /v1alpha/__readiness
              scheme: HTTP
              port: http-public
            periodSeconds: 10
            initialDelaySeconds: 60
          livenessProbe:
            httpGet:
              path: /v1alpha/__liveness
              scheme: HTTP
              port: http-public
            periodSeconds: 10
            initialDelaySeconds: 60
          command: [./model-backend]
          ports:
            - name: http-public
              containerPort: 8083
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /model-backend/config/config.yaml
              subPath: config.yaml
            - name: model-config
              mountPath: /model-config
      volumes:
        - name: config
          configMap:
            name: my-release-core-model-backend
        - name: model-config
          persistentVolumeClaim:
            claimName: core-model-config-data-volume
---
# Source: core/templates/openfga/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-core-openfga
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: openfga
  annotations:
    rollme: "1M7y6"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: openfga
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: openfga
      annotations:
    spec:
      # Distroless nonroot:nonroot is 65532:65532
      securityContext:
        runAsUser: 65532
        runAsGroup: 65532
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: wait-for-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', "until pg_isready; do echo waiting for db; sleep 2; done"]
          env:
            - name: PGHOST
              value: my-release-core-database
            - name: PGUSER
              value: postgres
        - name: openfga-createdb
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
          - >
            createdb || true
          env:
            - name: PGDATABASE
              value: openfga
            - name: PGHOST
              value: "my-release-core-database"
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              value: "password"
        - name: openfga-migration
          image: openfga/openfga:v1.5.1
          imagePullPolicy: IfNotPresent
          args: ['migrate']
          env:
            - name: OPENFGA_DATASTORE_ENGINE
              value: postgres
            - name: OPENFGA_DATASTORE_URI
              value: postgres://postgres:password@my-release-core-database:5432/openfga?sslmode=disable
      containers:
        - name: openfga
          image: openfga/openfga:v1.5.1
          imagePullPolicy: IfNotPresent
          args: ['run']
          env:
            - name: OPENFGA_PLAYGROUND_ENABLED
              value: "false"
            - name: OPENFGA_METRICS_ENABLED
              value: "false"
            - name: OPENFGA_DATASTORE_METRICS_ENABLED
              value: "false"
            - name: OPENFGA_DATASTORE_ENGINE
              value: postgres
            - name: PGDATABASE
              value: openfga
            - name: PGHOST
              value: "my-release-core-database"
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              value: "password"
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8081
              protocol: TCP
        - name: openfga-read-replica
          image: openfga/openfga:v1.5.1
          imagePullPolicy: IfNotPresent
          args: ['run']
          env:
            - name: OPENFGA_HTTP_ADDR
              value: 0.0.0.0:8082
            - name: OPENFGA_GRPC_ADDR
              value: 0.0.0.0:8083
            - name: OPENFGA_PLAYGROUND_ENABLED
              value: "false"
            - name: OPENFGA_METRICS_ENABLED
              value: "false"
            - name: OPENFGA_DATASTORE_METRICS_ENABLED
              value: "false"
            - name: OPENFGA_DATASTORE_ENGINE
              value: postgres
            - name: PGDATABASE
              value: openfga
            - name: PGHOST
              value: "my-release-core-database"
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              value: "password"
          ports:
            - containerPort: 8082
              protocol: TCP
            - containerPort: 8083
              protocol: TCP
---
# Source: core/templates/pipeline-backend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-core-pipeline-backend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: pipeline-backend
  annotations:
    rollme: "ulbQF"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: pipeline-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: pipeline-backend
      annotations:
        checksum/config: 48289c273c1c8a16dc68ae1e750f5ac5e1bcab11251ef6e4d9a35d436528eee4
    spec:
      # Distroless nonroot:nonroot is 65532:65532
      securityContext:
        runAsUser: 65532
        runAsGroup: 65532
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: wait-for-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', "until pg_isready; do echo waiting for db; sleep 2; done"]
          env:
            - name: PGHOST
              value: my-release-core-database
            - name: PGUSER
              value: postgres
        - name: temporal-admin-tools
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          image: temporalio/admin-tools:1.22.3
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash", "-c"]
          args:
            - >
              until tctl cluster health 2>&1 > /dev/null; do echo waiting for Temporal; sleep 2; done &&
              if [[ ! $(tctl --namespace pipeline-backend namespace list | grep pipeline-backend) ]]; then tctl --namespace pipeline-backend namespace register; fi
          env:
            - name: TEMPORAL_CLI_ADDRESS
              value: "my-release-core-temporal-frontend:7233"
        - name: pipeline-backend-migration
          image: instill/pipeline-backend:0.29.0-beta
          imagePullPolicy: IfNotPresent
          command: [./pipeline-backend-migrate]
          volumeMounts:
            - name: config
              mountPath: /pipeline-backend/config/config.yaml
              subPath: config.yaml
        - name: pipeline-backend-init
          image: instill/pipeline-backend:0.29.0-beta
          imagePullPolicy: IfNotPresent
          command: [./pipeline-backend-init]
          volumeMounts:
            - name: config
              mountPath: /pipeline-backend/config/config.yaml
              subPath: config.yaml
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            privileged: true
          env:
        - name: wait-for-dependencies
          image: curlimages/curl:8.00.1
          command: ['sh', '-c']
          args:
          - >
            while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' ${MGMT_BACKEND_HOST}:${MGMT_BACKEND_PORT}/v1beta/health/mgmt)" != "200" ]]; do echo waiting for mgmt-backend; sleep 1; done
          env:
            - name: MGMT_BACKEND_HOST
              value: "my-release-core-mgmt-backend"
            - name: MGMT_BACKEND_PORT
              value: "8084"
      containers:
        - name: pipeline-backend-worker
          image: instill/pipeline-backend:0.29.0-beta
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: rpc
          command: [./pipeline-backend-worker]
          env:
          volumeMounts:
            - name: config
              mountPath: /pipeline-backend/config/config.yaml
              subPath: config.yaml
        - name: pipeline-backend
          image: instill/pipeline-backend:0.29.0-beta
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /v1beta/__readiness
              scheme: HTTP
              port: http-public
            periodSeconds: 10
            initialDelaySeconds: 60
          livenessProbe:
            httpGet:
              path: /v1beta/__liveness
              scheme: HTTP
              port: http-public
            periodSeconds: 10
            initialDelaySeconds: 60
          command: [./pipeline-backend]
          ports:
            - name: http-public
              containerPort: 8081
              protocol: TCP
          env:
          volumeMounts:
            - name: config
              mountPath: /pipeline-backend/config/config.yaml
              subPath: config.yaml
      volumes:
        - name: config
          configMap:
            name: my-release-core-pipeline-backend
---
# Source: core/templates/registry/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-core-registry
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: registry
  annotations:
    rollme: "pISNs"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: registry
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: registry
      annotations:
        checksum/config: fb252dfdb5f65fd4eb0a29ad408be94d86d9438e51092be1a062702d8b697f34
    spec:
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: wait-for-redis
          image:  redis:7.0-alpine3.16
          command: ['redis-cli', '-h']
          args:
            - '$(REDIS_HOST)'
            - 'ping'
          env:
            - name: REDIS_HOST
              value: "core-redis"
      containers:
        - name: registry
          image: registry:2.8.3
          imagePullPolicy: IfNotPresent
          command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          readinessProbe:
            httpGet:
              path: /
              scheme: HTTP
              port: 5000
            periodSeconds: 10
            initialDelaySeconds: 10
          livenessProbe:
            httpGet:
              path: /
              scheme: HTTP
              port: 5000
            periodSeconds: 10
            initialDelaySeconds: 10
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
            - name: metrics
              containerPort: 5001
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/docker/registry/config.yml
              subPath: config.yaml
            - name: data-volume
              mountPath: /var/lib/registry
      volumes:
        - name: config
          configMap:
            name: my-release-core-registry
        - name: data-volume
          persistentVolumeClaim:
            claimName: my-release-core-registry-data-volume
---
# Source: core/templates/temporal/admintools-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-core-temporal-admintools
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-admintools
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: temporal-admintools
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: temporal-admintools
    spec:
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: wait-for-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', "until pg_isready; do echo waiting for db; sleep 2; done"]
          env:
          - name: PGHOST
            value: my-release-core-database
          - name: PGUSER
            value: postgres
      containers:
        - name: temporal-admin-tools
          image: temporalio/admin-tools:1.22.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - ls
              - /
            periodSeconds: 5
          command: ["/bin/bash", "-c"]
          args:
            - >
              if ! psql -h ${SQL_HOST} -p ${SQL_PORT} -U ${SQL_USER} -W ${SQL_PASSWORD} -c "SELECT datname FROM pg_catalog.pg_database WHERE datname='temporal'" | grep -q "1 row"; then
                SQL_DATABASE=temporal temporal-sql-tool drop -f &&
                SQL_DATABASE=temporal temporal-sql-tool create &&
                SQL_DATABASE=temporal temporal-sql-tool setup -v 0.0 &&
                SQL_DATABASE=temporal temporal-sql-tool update-schema -d schema/postgresql/v96/temporal/versioned &&
                SQL_DATABASE=temporal_visibility temporal-sql-tool drop -f &&
                SQL_DATABASE=temporal_visibility temporal-sql-tool create &&
                SQL_DATABASE=temporal_visibility temporal-sql-tool setup -v 0.0 &&
                SQL_DATABASE=temporal_visibility temporal-sql-tool setup-schema -v 0.0 &&
                SQL_DATABASE=temporal_visibility temporal-sql-tool update -schema-dir schema/postgresql/v96/visibility/versioned
              fi &&
              tail -f /dev/null
          ports:
            - name: http
              containerPort: 22
              protocol: TCP
          env:
            - name: TEMPORAL_CLI_ADDRESS
              value: "my-release-core-temporal-frontend:7233"
            - name:  SQL_PLUGIN
              value: "postgres"
            - name:  SQL_HOST
              value: "my-release-core-database"
            - name:  SQL_PORT
              value: "5432"
            - name:  SQL_USER
              value: "postgres"
            - name:  SQL_PASSWORD
              value: "password"
---
# Source: core/templates/temporal/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  my-release-core-temporal-frontend
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-frontend
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: temporal-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: temporal-frontend
      annotations:
        checksum/config: e0c3070d751c18436d7fb909d090f497d0e2a4cdb3e898ea82aacef5544dd3b8
        prometheus.io/job: core-frontend
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
    spec:
      securityContext:
        runAsUser: 1000 #temporal user
        runAsGroup: 1000 #temporal group
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: check-elasticsearch-index
          image: temporalio/admin-tools:1.22.3
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
            - >
              until curl --silent --fail --user ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD} -k http://core-elasticsearch-master:9200/temporal_visibility_v1_dev 2>&1 > /dev/null; do echo waiting for elasticsearch index to become ready; sleep 1; done;
          env:
            - name: ELASTIC_USERNAME
              value: "elastic"
            - name: ELASTIC_PASSWORD
              value: "password"
        - name: wait-for-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
            - >
              until pg_isready; do echo waiting for db; sleep 2; done &&
              sleep 2 &&
              until psql -c "SELECT datname FROM pg_catalog.pg_database WHERE datname='temporal'" | grep -q "1 row"; do echo waiting for db; sleep 2; done &&
              until psql -c "SELECT datname FROM pg_catalog.pg_database WHERE datname='temporal_visibility'" | grep -q "1 row"; do echo waiting for db; sleep 2; done
          env:
            - name: PGHOST
              value: "my-release-core-database.instill-ai.svc.cluster.local"
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              value: "password"
            - name: TEMPORAL_FRONTEND_HOST
              value: "my-release-core-temporal-frontend"
            - name: TEMPORAL_FRONTEND_GRPCPORT
              value: "7233"
      containers:
        - name: temporal-frontend
          image: temporalio/server:1.22.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: rpc
          resources:
            {}
          ports:
            - name: rpc
              containerPort: 7233
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/temporal/config/config_template.yaml
              subPath: config_template.yaml
            - name: dynamic-config
              mountPath: /etc/temporal/dynamic_config
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ELASTIC_USERNAME
              value: "elastic"
            - name: ELASTIC_PASSWORD
              value: "password"
            - name: TEMPORAL_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-core-temporal-default-store
                  key: password
            - name: TEMPORAL_VISIBILITY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-core-temporal-visibility-store
                  key: password
            - name: ENABLE_ES
              value: "true"
            - name: ES_SEEDS
              value: "core-elasticsearch-master"
            - name: ES_PORT
              value: "9200"
            - name: ES_VERSION
              value: "v7"
            - name: ES_SCHEME
              value: "http"
            - name: ES_VIS_INDEX
              value: "temporal_visibility_v1_dev"
            - name: ES_USER
              value: $(ELASTIC_USERNAME)
            - name: ES_PWD
              value: $(ELASTIC_PASSWORD)
            - name: SERVICES
              value: "frontend"
      volumes:
        - name: config
          configMap:
            name: my-release-core-temporal-frontend-config
        - name: dynamic-config
          configMap:
            name: my-release-core-temporal-dynamic-config
            items:
            - key: dynamic_config.yaml
              path: dynamic_config.yaml
---
# Source: core/templates/temporal/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  my-release-core-temporal-history
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-history
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: temporal-history
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: temporal-history
      annotations:
        checksum/config: e0c3070d751c18436d7fb909d090f497d0e2a4cdb3e898ea82aacef5544dd3b8
        prometheus.io/job: core-history
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
    spec:
      securityContext:
        runAsUser: 1000 #temporal user
        runAsGroup: 1000 #temporal group
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: check-elasticsearch-index
          image: temporalio/admin-tools:1.22.3
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
            - >
              until curl --silent --fail --user ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD} -k http://core-elasticsearch-master:9200/temporal_visibility_v1_dev 2>&1 > /dev/null; do echo waiting for elasticsearch index to become ready; sleep 1; done;
          env:
            - name: ELASTIC_USERNAME
              value: "elastic"
            - name: ELASTIC_PASSWORD
              value: "password"
        - name: wait-for-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
            - >
              until pg_isready; do echo waiting for db; sleep 2; done &&
              sleep 2 &&
              until psql -c "SELECT datname FROM pg_catalog.pg_database WHERE datname='temporal'" | grep -q "1 row"; do echo waiting for db; sleep 2; done &&
              until psql -c "SELECT datname FROM pg_catalog.pg_database WHERE datname='temporal_visibility'" | grep -q "1 row"; do echo waiting for db; sleep 2; done
              && until nc -z ${TEMPORAL_FRONTEND_HOST} ${TEMPORAL_FRONTEND_GRPCPORT}; do echo waiting for ${TEMPORAL_FRONTEND_HOST}:${TEMPORAL_FRONTEND_GRPCPORT}; sleep 2; done
          env:
            - name: PGHOST
              value: "my-release-core-database.instill-ai.svc.cluster.local"
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              value: "password"
            - name: TEMPORAL_FRONTEND_HOST
              value: "my-release-core-temporal-frontend"
            - name: TEMPORAL_FRONTEND_GRPCPORT
              value: "7233"
      containers:
        - name: temporal-history
          image: temporalio/server:1.22.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: rpc
          resources:
            {}
          ports:
            - name: rpc
              containerPort: 7234
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/temporal/config/config_template.yaml
              subPath: config_template.yaml
            - name: dynamic-config
              mountPath: /etc/temporal/dynamic_config
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ELASTIC_USERNAME
              value: "elastic"
            - name: ELASTIC_PASSWORD
              value: "password"
            - name: TEMPORAL_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-core-temporal-default-store
                  key: password
            - name: TEMPORAL_VISIBILITY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-core-temporal-visibility-store
                  key: password
            - name: ENABLE_ES
              value: "true"
            - name: ES_SEEDS
              value: "core-elasticsearch-master"
            - name: ES_PORT
              value: "9200"
            - name: ES_VERSION
              value: "v7"
            - name: ES_SCHEME
              value: "http"
            - name: ES_VIS_INDEX
              value: "temporal_visibility_v1_dev"
            - name: ES_USER
              value: $(ELASTIC_USERNAME)
            - name: ES_PWD
              value: $(ELASTIC_PASSWORD)
            - name: SERVICES
              value: "history"
      volumes:
        - name: config
          configMap:
            name: my-release-core-temporal-history-config
        - name: dynamic-config
          configMap:
            name: my-release-core-temporal-dynamic-config
            items:
            - key: dynamic_config.yaml
              path: dynamic_config.yaml
---
# Source: core/templates/temporal/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  my-release-core-temporal-matching
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-matching
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: temporal-matching
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: temporal-matching
      annotations:
        checksum/config: e0c3070d751c18436d7fb909d090f497d0e2a4cdb3e898ea82aacef5544dd3b8
        prometheus.io/job: core-matching
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
    spec:
      securityContext:
        runAsUser: 1000 #temporal user
        runAsGroup: 1000 #temporal group
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: check-elasticsearch-index
          image: temporalio/admin-tools:1.22.3
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
            - >
              until curl --silent --fail --user ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD} -k http://core-elasticsearch-master:9200/temporal_visibility_v1_dev 2>&1 > /dev/null; do echo waiting for elasticsearch index to become ready; sleep 1; done;
          env:
            - name: ELASTIC_USERNAME
              value: "elastic"
            - name: ELASTIC_PASSWORD
              value: "password"
        - name: wait-for-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
            - >
              until pg_isready; do echo waiting for db; sleep 2; done &&
              sleep 2 &&
              until psql -c "SELECT datname FROM pg_catalog.pg_database WHERE datname='temporal'" | grep -q "1 row"; do echo waiting for db; sleep 2; done &&
              until psql -c "SELECT datname FROM pg_catalog.pg_database WHERE datname='temporal_visibility'" | grep -q "1 row"; do echo waiting for db; sleep 2; done
              && until nc -z ${TEMPORAL_FRONTEND_HOST} ${TEMPORAL_FRONTEND_GRPCPORT}; do echo waiting for ${TEMPORAL_FRONTEND_HOST}:${TEMPORAL_FRONTEND_GRPCPORT}; sleep 2; done
          env:
            - name: PGHOST
              value: "my-release-core-database.instill-ai.svc.cluster.local"
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              value: "password"
            - name: TEMPORAL_FRONTEND_HOST
              value: "my-release-core-temporal-frontend"
            - name: TEMPORAL_FRONTEND_GRPCPORT
              value: "7233"
      containers:
        - name: temporal-matching
          image: temporalio/server:1.22.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: rpc
          resources:
            {}
          ports:
            - name: rpc
              containerPort: 7235
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/temporal/config/config_template.yaml
              subPath: config_template.yaml
            - name: dynamic-config
              mountPath: /etc/temporal/dynamic_config
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ELASTIC_USERNAME
              value: "elastic"
            - name: ELASTIC_PASSWORD
              value: "password"
            - name: TEMPORAL_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-core-temporal-default-store
                  key: password
            - name: TEMPORAL_VISIBILITY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-core-temporal-visibility-store
                  key: password
            - name: ENABLE_ES
              value: "true"
            - name: ES_SEEDS
              value: "core-elasticsearch-master"
            - name: ES_PORT
              value: "9200"
            - name: ES_VERSION
              value: "v7"
            - name: ES_SCHEME
              value: "http"
            - name: ES_VIS_INDEX
              value: "temporal_visibility_v1_dev"
            - name: ES_USER
              value: $(ELASTIC_USERNAME)
            - name: ES_PWD
              value: $(ELASTIC_PASSWORD)
            - name: SERVICES
              value: "matching"
      volumes:
        - name: config
          configMap:
            name: my-release-core-temporal-matching-config
        - name: dynamic-config
          configMap:
            name: my-release-core-temporal-dynamic-config
            items:
            - key: dynamic_config.yaml
              path: dynamic_config.yaml
---
# Source: core/templates/temporal/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  my-release-core-temporal-worker
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-worker
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: temporal-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: temporal-worker
      annotations:
        checksum/config: e0c3070d751c18436d7fb909d090f497d0e2a4cdb3e898ea82aacef5544dd3b8
        prometheus.io/job: core-worker
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
    spec:
      securityContext:
        runAsUser: 1000 #temporal user
        runAsGroup: 1000 #temporal group
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: check-elasticsearch-index
          image: temporalio/admin-tools:1.22.3
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
            - >
              until curl --silent --fail --user ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD} -k http://core-elasticsearch-master:9200/temporal_visibility_v1_dev 2>&1 > /dev/null; do echo waiting for elasticsearch index to become ready; sleep 1; done;
          env:
            - name: ELASTIC_USERNAME
              value: "elastic"
            - name: ELASTIC_PASSWORD
              value: "password"
        - name: wait-for-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
            - >
              until pg_isready; do echo waiting for db; sleep 2; done &&
              sleep 2 &&
              until psql -c "SELECT datname FROM pg_catalog.pg_database WHERE datname='temporal'" | grep -q "1 row"; do echo waiting for db; sleep 2; done &&
              until psql -c "SELECT datname FROM pg_catalog.pg_database WHERE datname='temporal_visibility'" | grep -q "1 row"; do echo waiting for db; sleep 2; done
              && until nc -z ${TEMPORAL_FRONTEND_HOST} ${TEMPORAL_FRONTEND_GRPCPORT}; do echo waiting for ${TEMPORAL_FRONTEND_HOST}:${TEMPORAL_FRONTEND_GRPCPORT}; sleep 2; done
          env:
            - name: PGHOST
              value: "my-release-core-database.instill-ai.svc.cluster.local"
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: "postgres"
            - name: PGPASSWORD
              value: "password"
            - name: TEMPORAL_FRONTEND_HOST
              value: "my-release-core-temporal-frontend"
            - name: TEMPORAL_FRONTEND_GRPCPORT
              value: "7233"
      containers:
        - name: temporal-worker
          image: temporalio/server:1.22.3
          imagePullPolicy: IfNotPresent
          resources:
            {}
          ports:
            - name: rpc
              containerPort: 7239
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/temporal/config/config_template.yaml
              subPath: config_template.yaml
            - name: dynamic-config
              mountPath: /etc/temporal/dynamic_config
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ELASTIC_USERNAME
              value: "elastic"
            - name: ELASTIC_PASSWORD
              value: "password"
            - name: TEMPORAL_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-core-temporal-default-store
                  key: password
            - name: TEMPORAL_VISIBILITY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-core-temporal-visibility-store
                  key: password
            - name: ENABLE_ES
              value: "true"
            - name: ES_SEEDS
              value: "core-elasticsearch-master"
            - name: ES_PORT
              value: "9200"
            - name: ES_VERSION
              value: "v7"
            - name: ES_SCHEME
              value: "http"
            - name: ES_VIS_INDEX
              value: "temporal_visibility_v1_dev"
            - name: ES_USER
              value: $(ELASTIC_USERNAME)
            - name: ES_PWD
              value: $(ELASTIC_PASSWORD)
            - name: SERVICES
              value: "worker"
      volumes:
        - name: config
          configMap:
            name: my-release-core-temporal-worker-config
        - name: dynamic-config
          configMap:
            name: my-release-core-temporal-dynamic-config
            items:
            - key: dynamic_config.yaml
              path: dynamic_config.yaml
---
# Source: core/templates/temporal/ui-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-core-temporal-ui
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-ui
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: temporal-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: temporal-ui
      annotations:
    spec:
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      containers:
        - name: temporal-web
          image: temporalio/ui:2.9.0
          imagePullPolicy: IfNotPresent
          env:
            - name: TEMPORAL_ADDRESS
              value: my-release-core-temporal-frontend.core-0.1.36-beta.tgz.svc:7233
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
---
# Source: core/charts/elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: core-elasticsearch-master
  labels:
    heritage: "Helm"
    release: "my-release"
    chart: "elasticsearch"
    app: "core-elasticsearch-master"
  annotations:
    esMajorVersion: "7"
spec:
  serviceName: core-elasticsearch-master-headless
  selector:
    matchLabels:
      app: "core-elasticsearch-master"
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: "core-elasticsearch-master"
      labels:
        release: "my-release"
        chart: "elasticsearch"
        app: "core-elasticsearch-master"
      annotations:
        
        configchecksum: e64481987d3df745c9426f72a35f41b16bf9c85f4871ab655b9cc2814e11745
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "core-elasticsearch-master"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
        - name: esconfig
          configMap:
            name: core-elasticsearch-master-config
      enableServiceLinks: true
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.3"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          {}

      containers:
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.3"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          exec:
            command:
              - bash
              - -c
              - |
                set -e
                # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=1s" )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Elasticsearch Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                  local path="${1}"
                  local args="${2}"
                  set -- -XGET -s

                  if [ "$args" != "" ]; then
                    set -- "$@" $args
                  fi

                  if [ -n "${ELASTIC_PASSWORD}" ]; then
                    set -- "$@" -u "elastic:${ELASTIC_PASSWORD}"
                  fi

                  curl --output /dev/null -k "$@" "http://127.0.0.1:9200${path}"
                }

                if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  HTTP_CODE=$(http "/" "-w %{http_code}")
                  RC=$?
                  if [[ ${RC} -ne 0 ]]; then
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} http://127.0.0.1:9200/ failed with RC ${RC}"
                    exit ${RC}
                  fi
                  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
                  if [[ ${HTTP_CODE} == "200" ]]; then
                    exit 0
                  elif [[ ${HTTP_CODE} == "503" && "7" == "6" ]]; then
                    exit 0
                  else
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} http://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
                    exit 1
                  fi

                else
                  echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" "--fail" ; then
                    touch ${START_FILE}
                    exit 0
                  else
                    echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                    exit 1
                  fi
                fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "core-elasticsearch-master-0,"
          - name: discovery.seed_hosts
            value: "core-elasticsearch-master-headless"
          - name: cluster.name
            value: "core-elasticsearch"
          - name: network.host
            value: "0.0.0.0"
          - name: cluster.deprecation_indexing.enabled
            value: "false"
          - name: node.data
            value: "true"
          - name: node.ingest
            value: "true"
          - name: node.master
            value: "true"
          - name: node.ml
            value: "true"
          - name: node.remote_cluster_client
            value: "true"
          - name: ELASTIC_PASSWORD
            value: password
        volumeMounts:

          - name: esconfig
            mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
            subPath: elasticsearch.yml
---
# Source: core/charts/influxdb2/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-influxdb2
  labels:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: influxdb2-2.1.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb2
      app.kubernetes.io/instance: my-release
  serviceName: "my-release-influxdb2"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb2
        app.kubernetes.io/instance: my-release
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: my-release-influxdb2
        - name: init
          configMap:
            name: my-release-influxdb2-init
            defaultMode: 0744
      serviceAccountName: my-release-influxdb2
      containers:
        - name: influxdb2
          image: "influxdb:2.3.0-alpine"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8086
              protocol: TCP
          env:
            # Automated setup will not run if an existing boltdb file is found at the configured path.
            # This behavior allows for the InfluxDB container to reboot post-setup without encountering "DB is already set up" errors.
            - name: DOCKER_INFLUXDB_INIT_MODE
              value: setup
            # The username to set for the system's initial super-user (Required).
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              value: admin
            # The password to set for the system's inital super-user (Required).
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-influxdb2-auth
                  key: admin-password
            # The name to set for the system's initial organization (Required).
            - name: DOCKER_INFLUXDB_INIT_ORG
              value: instill-ai
            # The name to set for the system's initial bucket (Required).
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              value: krakend
            # The duration the system's initial bucket should retain data. If not set, the initial bucket will retain data forever.
            - name: DOCKER_INFLUXDB_INIT_RETENTION
              value: 1w
            # The authentication token to associate with the system's initial super-user. If not set, a token will be auto-generated by the system.
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: my-release-influxdb2-auth
                  key: admin-token
            # Path to the BoltDB database.
            - name: INFLUXD_BOLT_PATH
              value: /var/lib/influxdb2/influxd.bolt
            # Path to persistent storage engine files where InfluxDB stores all Time-Structure Merge Tree (TSM) data on disk.
            - name: INFLUXD_ENGINE_PATH
              value: /var/lib/influxdb2
            # Extra environment variables from .Values.env
            - name: DOCKER_INFLUXDB_BUCKET_VDP
              value: instill-ai
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
          - name: data
            mountPath: /var/lib/influxdb2
            subPath: 
          - name: init
            mountPath: /docker-entrypoint-initdb.d
          resources:
            {}
---
# Source: core/templates/database/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-core-database
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: database
spec:
  replicas: 1
  serviceName: "my-release-core-database"
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: core
        helm.sh/chart: core-0.1.36-beta
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: 0.33.0-beta
        app.kubernetes.io/part-of: core
        app.kubernetes.io/component: database
      annotations:
        checksum/secret: 187a86493a844def891922c6b6e1a9e59390178a9167200872746b5edbdcf22e
    spec:
      # 70 is the standard uid/gid for "postgres" in Alpine
      # https://github.com/docker-library/postgres/blob/master/11/alpine/Dockerfile#L9-L15
      securityContext:
        runAsUser: 70
        runAsGroup: 70
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      containers:
        - name: database
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - pg_isready
            periodSeconds: 10
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - pg_isready
            periodSeconds: 10
            timeoutSeconds: 1
          envFrom:
            - secretRef:
                name: my-release-core-database
          env:
            # put the data into a sub directory to avoid the permission issue in k8s with restricted psp enabled
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
          - name: data
            mountPath: /var/lib/postgresql/data
            subPath: 
          - name: shm-volume
            mountPath: /dev/shm
      volumes:
        - name: shm-volume
          emptyDir:
            medium: Memory
            sizeLimit: 512Mi
        - name: data
          persistentVolumeClaim:
            claimName: my-release-core-database-data-volume
---
# Source: core/templates/redis/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-core-redis
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  serviceName: my-release-core-redis
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: core
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: core
        app.kubernetes.io/component: redis
    spec:
      # alpine already has a gid 999, so group is assigned as 1000 and user remains as 999
      # https://github.com/docker-library/redis/blob/787f47c4bda6943e29d85fa45e080bd55b2c08fa/7.0/alpine/Dockerfile#L3-L5
      securityContext:
        runAsUser: 999
        runAsGroup: 1000
      containers:
        - name: redis
          image: redis:7.0-alpine3.16
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: 6379
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6379
            periodSeconds: 10
          volumeMounts:
          - name: data
            mountPath: /var/lib/redis
            subPath: 
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: my-release-core-redis-data-volume
---
# Source: core/templates/temporal/server-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name:  my-release-core-temporal-es
  labels:
    app.kubernetes.io/name: core
    helm.sh/chart: core-0.1.36-beta
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: 0.33.0-beta
    app.kubernetes.io/part-of: core
    app.kubernetes.io/component: temporal-es
spec:
  ttlSecondsAfterFinished: 0
  template:
    metadata:
      name:  my-release-core-temporal-es
      labels:
        app.kubernetes.io/name: core
        helm.sh/chart: core-0.1.36-beta
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: 0.33.0-beta
        app.kubernetes.io/part-of: core
        app.kubernetes.io/component: temporal-es
    spec:
      restartPolicy: "OnFailure"
      initContainers:
        - name: check-elasticsearch
          image: temporalio/admin-tools:1.22.3
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'until curl --silent --fail --user ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD} -k http://core-elasticsearch-master:9200 2>&1 > /dev/null; do echo waiting for elasticsearch to start; sleep 1; done;']
          env:
            - name: ELASTIC_USERNAME
              value: "elastic"
            - name: ELASTIC_PASSWORD
              value: "password"
      containers:
        - name: create-elasticsearch-index
          image: temporalio/admin-tools:1.22.3
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
            - >
              curl -X PUT --fail --user ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD} -k http://core-elasticsearch-master:9200/_template/temporal_visibility_v1_template -H "Content-Type: application/json" --data-binary "@schema/elasticsearch/visibility/index_template_v7.json" 2>&1 &&
              curl -X PUT --fail --user ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD} -k http://core-elasticsearch-master:9200/temporal_visibility_v1_dev 2>&1
          env:
            - name: ELASTIC_USERNAME
              value: "elastic"
            - name: ELASTIC_PASSWORD
              value: "password"
---
# Source: core/charts/kuberay-operator/templates/multiple_namespaces_role.yaml
# Install Role for namespaces listed in watchNamespace.
# This should be consistent with `role.yaml`, except for the `kind` field.
---
# Source: core/charts/kuberay-operator/templates/multiple_namespaces_rolebinding.yaml
# Install RoleBinding for namespaces listed in watchNamespace.
# This should be consistent with `rolebinding.yaml`, except for the `kind` field.
---
# Source: core/templates/ray-service/ray-service.yaml
apiVersion: ray.io/v1
kind: RayCluster
metadata:
  name: my-release-core-ray
  # annotations:
  #   ray.io/ft-enabled: "true"
spec:
  rayVersion: 2.21.0
  ## raycluster autoscaling config
  enableInTreeAutoscaling: true
  autoscalerOptions:
    upscalingMode: Default
    # idleTimeoutSeconds is the number of seconds to wait before scaling down a worker pod which is not using Ray resources.
    idleTimeoutSeconds: 60
    imagePullPolicy: IfNotPresent
    securityContext: {}
    env: []
    envFrom: []
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 512Mi
  headGroupSpec:
    rayStartParams:
      num-cpus: "0"
      num-gpus: "0"
      disable-usage-stats: "true"
    template:
      spec:
        volumes:
          - name: podman-configmap
            configMap:
              name: podman
              defaultMode: 0666
              items:
                - key: registries.conf
                  path: registries.conf
                - key: policy.json
                  path: policy.json
                - key: storage.conf
                  path: storage.conf
        containers:
          - name: ray-head
            # ray-head need to have access to GPU for some reason in order to `podman run` gpu container in ray-worker node
            image: instill/ray:0.4.0-alpha
            securityContext:
              # for mounting /dev/fuse
              # TODO: maybe implement a fuse-device-plugin-daemonset
              privileged: true
            imagePullPolicy: IfNotPresent
            resources:
              limits:
                cpu: "1"
                memory: 4Gi
                nvidia.com/gpu: 0
              requests:
                cpu: "1"
                memory: 4Gi
                nvidia.com/gpu: 0
            env:
              - name: RAY_GRAFANA_IFRAME_HOST
                value: http://127.0.0.1:3002
              - name: RAY_GRAFANA_HOST
                value: http://core-grafana:80
              - name: RAY_PROMETHEUS_HOST
                value: http://core-prometheus:9090
              - name: RAY_worker_register_timeout_seconds
                value: "3600"
              # - name: RAY_REDIS_ADDRESS
              #   value: my-release-core-redis:6379
            volumeMounts:
              - mountPath: /etc/containers/
                name: podman-configmap
            ports:
              - containerPort: 6379
                name: gcs-server
              - containerPort: 8265
                name: dashboard
              - containerPort: 10001
                name: client
              - containerPort: 8000
                name: serve
              - containerPort: 9000
                name: serve-grpc
              - containerPort: 44217
                name: as-metrics # autoscaler
              - containerPort: 44227
                name: dash-metrics # dashboard
            lifecycle:
              postStart:
                exec:
                  command:
                    - "/bin/bash"
                    - "-c"
                    - >
                      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu;
                      if [[ -n ${NVIDIA_VISIBLE_DEVICES} ]]; then
                        sudo env PATH=$PATH LD_LIBRARY_PATH=$LD_LIBRARY_PATH nvidia-ctk cdi generate --library-search-path=$LD_LIBRARY_PATH --output=/etc/cdi/nvidia.yaml;
                      fi;
              preStop:
                exec:
                  command: ["/bin/sh","-c","ray stop"]
  workerGroupSpecs:
    - replicas: 1
      minReplicas: 1
      maxReplicas: 1
      groupName: cpu-group
      rayStartParams:
        num-cpus: "2"
        disable-usage-stats: "true"
      # pod template
      template:
        spec:
          volumes:
            - name: podman-configmap
              configMap:
                name: podman
                defaultMode: 0666
                items:
                  - key: registries.conf
                    path: registries.conf
                  - key: policy.json
                    path: policy.json
          containers:
            - name: ray-worker
              image: instill/ray:0.4.0-alpha
              securityContext:
                # for newuidmap
                privileged: true
              imagePullPolicy: IfNotPresent
              env:
                - name: RAY_worker_register_timeout_seconds
                  value: "3600"
              lifecycle:
                postStart:
                  exec:
                    command:
                      - "/bin/bash"
                      - "-c"
                      - >
                        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu;
                        if [[ -n ${NVIDIA_VISIBLE_DEVICES} ]]; then
                          sudo env PATH=$PATH LD_LIBRARY_PATH=$LD_LIBRARY_PATH nvidia-ctk cdi generate --library-search-path=$LD_LIBRARY_PATH --output=/etc/cdi/nvidia.yaml;
                        fi;
                        while true; do
                          ray health-check 2>/dev/null;
                          if [ "$?" = "0" ]; then
                              break;
                          fi;
                          sleep 1;
                        done;
                        serve start --http-host=0.0.0.0 --grpc-port 9000 --grpc-servicer-functions ray_pb2_grpc.add_RayServiceServicer_to_server
                preStop:
                  exec:
                    command: ["/bin/sh","-c","ray stop"]
              # TODO: determine how big the head node should be
              # Optimal resource allocation will depend on our Kubernetes infrastructure and might
              # require some experimentation.
              # Setting requests=limits is recommended with Ray. K8s limits are used for Ray-internal
              # resource accounting. K8s requests are not used by Ray.
              # this also apply to the workerGroup
              resources:
                limits:
                  cpu: "2"
                  memory: 8Gi
                requests:
                  cpu: "2"
                  memory: 8Gi
              volumeMounts:
                - mountPath: /etc/containers/
                  name: podman-configmap
---
# Source: core/charts/jaeger/templates/elasticsearch-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-jaeger-elasticsearch
  labels:
    helm.sh/chart: jaeger-0.71.2
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.45.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/resource-policy": keep
type: Opaque
data:
  password: "cGFzc3dvcmQ="
---
# Source: core/charts/elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-fzwxf-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  containers:
  - name: "my-release-nayaz-test"
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.3"
    imagePullPolicy: "IfNotPresent"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail 'core-elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
  restartPolicy: Never
