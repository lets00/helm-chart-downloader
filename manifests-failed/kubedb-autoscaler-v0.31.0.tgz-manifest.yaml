---
# Source: kubedb-autoscaler/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-autoscaler
  namespace: kubedb-autoscaler-v0.31.0.tgz
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb-autoscaler/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-autoscaler
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - ops.kubedb.com
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - elasticsearchautoscalers/finalizers
  - etcdautoscalers/finalizers
  - kafkaautoscalers/finalizers
  - mariadbautoscalers/finalizers
  - memcachedautoscalers/finalizers
  - mongodbautoscalers/finalizers
  - mysqlautoscalers/finalizers
  - perconaxtradbautoscalers/finalizers
  - pgbouncerautoscalers/finalizers
  - postgresautoscalers/finalizers
  - proxysqlautoscalers/finalizers
  - redisautoscalers/finalizers
  - rabbitmqautoscalers/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - apps.k8s.appscode.com
  resources:
  - petsets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - nodes
  - limitranges
  - persistentvolumeclaims
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "watch", "create"]
- apiGroups:
  - "metrics.k8s.io"
  resources:
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - "node.k8s.appscode.com"
  resources:
  - nodetopologies
  verbs: ["get", "list", "watch"]
---
# Source: kubedb-autoscaler/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-autoscaler
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-autoscaler
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-autoscaler
  namespace: kubedb-autoscaler-v0.31.0.tgz
---
# Source: kubedb-autoscaler/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-autoscaler-license-checker
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-autoscaler
  namespace: kubedb-autoscaler-v0.31.0.tgz
---
# Source: kubedb-autoscaler/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-autoscaler-license-reader
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-autoscaler
  namespace: kubedb-autoscaler-v0.31.0.tgz
---
# Source: kubedb-autoscaler/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubedb-autoscaler
  namespace: kubedb-autoscaler-v0.31.0.tgz
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  selector:
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
---
# Source: kubedb-autoscaler/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubedb-autoscaler
  namespace: kubedb-autoscaler-v0.31.0.tgz
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-autoscaler
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-autoscaler
        app.kubernetes.io/instance: my-release
      annotations:
        reload: oBwCldiR
    spec:
      
      serviceAccountName: my-release-kubedb-autoscaler
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubedb/kubedb-autoscaler:v0.31.0
        imagePullPolicy: IfNotPresent
        args:
        - operator
        - --v=5
        - --use-kubeapiserver-fqdn-for-aks=true
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        - --update-interval=1m
        - --prometheus-address=http://prometheus-operated.monitoring.svc:9090
        - --memory-aggregation-interval=4m0s
        - --memory-aggregation-interval-count=3
        - --memory-histogram-decay-half-life=5m0s
        - --cpu-histogram-decay-half-life=5m0s
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: metrics
          containerPort: 8080
        - name: probes
          containerPort: 8081
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        readinessProbe:
          httpGet:
            path: /readyz
            port: probes
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: probes
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb-autoscaler/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb-autoscaler/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb-autoscaler/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb-autoscaler addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb-autoscaler/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:autoscaler:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb-autoscaler/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:autoscaler:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
---
# Source: kubedb-autoscaler/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:autoscaler:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
