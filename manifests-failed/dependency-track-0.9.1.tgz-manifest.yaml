---
# Source: dependency-track/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-dependency-track
  labels:
    helm.sh/chart: dependency-track-0.9.1
    app.kubernetes.io/part-of: dependency-track
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
automountServiceAccountToken: false
---
# Source: dependency-track/templates/api-server/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-dependency-track-api-server
  namespace: dependency-track-0.9.1.tgz
  labels:
    helm.sh/chart: dependency-track-0.9.1
    app.kubernetes.io/part-of: dependency-track
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: dependency-track-api-server
    app.kubernetes.io/component: api-server
    app.kubernetes.io/version: "4.11.3"
spec:
  type: "ClusterIP"
  ports:
  - name: web
    port: 8080
    targetPort: web
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: dependency-track-api-server
    app.kubernetes.io/component: api-server
---
# Source: dependency-track/templates/frontend/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-dependency-track-frontend
  namespace: dependency-track-0.9.1.tgz
  labels:
    helm.sh/chart: dependency-track-0.9.1
    app.kubernetes.io/part-of: dependency-track
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: dependency-track-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/version: "4.11.3"
spec:
  type: "ClusterIP"
  ports:
  - name: web
    port: 8080
    targetPort: web
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: dependency-track-frontend
    app.kubernetes.io/component: frontend
---
# Source: dependency-track/templates/frontend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-dependency-track-frontend
  namespace: dependency-track-0.9.1.tgz
  labels:
    helm.sh/chart: dependency-track-0.9.1
    app.kubernetes.io/part-of: dependency-track
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: dependency-track-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/version: "4.11.3"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: dependency-track-frontend
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: dependency-track-frontend
        app.kubernetes.io/component: frontend
    spec:
      initContainers:
      serviceAccount: my-release-dependency-track
      containers:
      - name: dependency-track-frontend
        image: docker.io/dependencytrack/frontend:4.11.3
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          readOnlyRootFilesystem: false # RO filesystems are not supported by the frontend
          seccompProfile:
            type: RuntimeDefault
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 150m
            memory: 64Mi
        env:
        - name: API_BASE_URL
          value: ""
        ports:
        - name: web
          containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            scheme: HTTP
            port: web
            path: /
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            scheme: HTTP
            port: web
            path: /
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
      volumes:
      - name: tmp
        emptyDir: { }
---
# Source: dependency-track/templates/api-server/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-dependency-track-api-server
  namespace: dependency-track-0.9.1.tgz
  labels:
    helm.sh/chart: dependency-track-0.9.1
    app.kubernetes.io/part-of: dependency-track
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: dependency-track-api-server
    app.kubernetes.io/component: api-server
    app.kubernetes.io/version: "4.11.3"
spec:
  serviceName: my-release-dependency-track-api-server
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: dependency-track-api-server
      app.kubernetes.io/component: api-server
  template:
    metadata:
      labels: 
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: dependency-track-api-server
        app.kubernetes.io/component: api-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
    spec:
      initContainers:
      serviceAccount: my-release-dependency-track
      containers:
      - name: dependency-track-api-server
        image: docker.io/dependencytrack/apiserver:4.11.3
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        resources:
          limits:
            cpu: "4"
            memory: 5Gi
          requests:
            cpu: "2"
            memory: 5Gi
        env:
        - name: ALPINE_METRICS_ENABLED
          value: "true"
        ports:
        - name: web
          containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /data
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            scheme: HTTP
            port: web
            path: /health/live
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            scheme: HTTP
            port: web
            path: /health/ready
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
      volumes:
      - name: data
        emptyDir: { }
      - name: tmp
        emptyDir: { }
