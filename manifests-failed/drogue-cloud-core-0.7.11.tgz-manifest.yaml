---
# Source: drogue-cloud-core/templates/cert-gen/service-accoun-certgen.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: certgen
---
# Source: drogue-cloud-core/templates/service/console/service-account-backend.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: console-backend
  labels:
    app.kubernetes.io/name: console-backend
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
---
# Source: drogue-cloud-core/templates/service/registry/knative-operator/service-account.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: knative-operator
  labels:
    app.kubernetes.io/name: topic-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
---
# Source: drogue-cloud-core/templates/service/registry/topic-operator/strimzi/service-account.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: topic-operator
  labels:
    app.kubernetes.io/name: topic-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
---
# Source: drogue-cloud-core/templates/service/registry/ttn-operator/service-account.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: ttn-operator
  labels:
    app.kubernetes.io/name: ttn-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
---
# Source: drogue-cloud-core/templates/infrastructure/kafka/external-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: external-kafka-secret
  labels:
    app.kubernetes.io/name: external-kafka-secret
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
data:
  
  
  mechanism: U0NSQU0tU0hBLTUxMg==
  username: ZHJvZ3VlLWlvdA==
---
# Source: drogue-cloud-core/templates/infrastructure/postgres/secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: postgres-secret
  labels:
    app.kubernetes.io/name: postgres-secret
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
type: Opaque
data:
  admin.username: "YWRtaW4="
  admin.password: "YWRtaW4xMjM0NTY="
---
# Source: drogue-cloud-core/templates/infrastructure/sso/clients.yaml
kind: Secret
apiVersion: v1
metadata:
  name: keycloak-client-secret-drogue
  labels:
    app.kubernetes.io/name: keycloak-client-secret-drogue
    app.kubernetes.io/component: sso
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
data:
  CLIENT_ID: "ZHJvZ3Vl"
  CLIENT_SECRET: ""
---
# Source: drogue-cloud-core/templates/infrastructure/sso/clients.yaml
kind: Secret
apiVersion: v1
metadata:
  name: keycloak-client-secret-services
  labels:
    app.kubernetes.io/name: keycloak-client-secret-services
    app.kubernetes.io/component: sso
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
data:
  CLIENT_ID: "c2VydmljZXM="
  CLIENT_SECRET: "dlVwdTdlZ3JQSzNHZ2QwR0hyZkF6dmlUS1JaZ2pHM3U="
---
# Source: drogue-cloud-core/templates/infrastructure/sso/database.yaml
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-db-secret
  labels:
    app.kubernetes.io/name: keycloak-db-secret
    app.kubernetes.io/component: sso
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

data:

  database: "cmVnaXN0cnk="
  username: "YWRtaW4="
  password: "YWRtaW4xMjM0NTY="
  
  host: "cG9zdGdyZXMuZHJvZ3VlLWNsb3VkLWNvcmUtMC43LjExLnRnei5zdmMuY2x1c3Rlci5sb2NhbA=="
  port: "NTQzMg=="
---
# Source: drogue-cloud-core/templates/infrastructure/sso/initial-admin.yaml
apiVersion: v1
kind: Secret
metadata:
  name: sso-initial-admin # sso- is from the name of the instance metadata name
  labels:
    app.kubernetes.io/name: sso-initial-admin
    app.kubernetes.io/component: sso
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
type: kubernetes.io/basic-auth
data:
  username: "YWRtaW4="
  password: "YWRtaW4xMjM0NTY="
---
# Source: drogue-cloud-core/templates/infrastructure/sso/post-install-job.yaml
kind: Secret
apiVersion: v1
metadata:
  name: post-install-drogue-admin
  labels:
    app.kubernetes.io/name: post-install-keycloak
    app.kubernetes.io/component: sso
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
data:
  username: "YWRtaW4="
  password: "YWRtaW4xMjM0NTY="
---
# Source: drogue-cloud-core/templates/infrastructure/sso/sso-service-credentials.yaml
apiVersion: v1
kind: Secret
metadata:
  name: sso-service-credentials
  labels:
    app.kubernetes.io/name: sso-service-credentials
    app.kubernetes.io/component: sso
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
type: kubernetes.io/basic-auth
data:
  username: "YWRtaW4="
  password: "YWRtaW4xMjM0NTY="
---
# Source: drogue-cloud-core/templates/configuration/configuration.yaml
apiVersion: v1
kind: ConfigMap

metadata:
  name: configuration
  labels:
    app.kubernetes.io/name: configuration
    app.kubernetes.io/component: global
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

data:
  instance: drogue
---
# Source: drogue-cloud-core/templates/infrastructure/sso/post-install-job.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: post-install-keycloak-config
  labels:
    app.kubernetes.io/name: post-install-keycloak
    app.kubernetes.io/component: sso
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
data:
  client.json: |
    {
      "clientId": "drogue",
      "clientAuthenticatorType": "client-secret",
      "enabled": true,
      "publicClient": true,
      "implicitFlowEnabled": true,
      "standardFlowEnabled": true,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "fullScopeAllowed": true,
      "webOrigins": [
        "*"
      ],
      "defaultClientScopes": [
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "defaultRoles": [
        "drogue-user"
      ],
      "protocolMappers": [
        {
          "name": "add-audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "config": {
            "included.client.audience": "drogue",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        }
      ]
    }
  client-services.json: |
    {
      "clientId": "services",
      "clientAuthenticatorType": "client-secret",
      "enabled": true,
      "publicClient": false,
      "implicitFlowEnabled": false,
      "standardFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "fullScopeAllowed": true,
      "defaultClientScopes": [
        "email",
        "profile",
        "roles",
        "web-origins"
      ],
      "optionalClientScopes": [
        "address",
        "microprofile-jwt",
        "offline_access",
        "phone"
      ],
      "defaultRoles": [
        "drogue-user",
        "drogue-admin"
      ],
      "protocolMappers": [
        {
          "name": "add-audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "config": {
            "included.client.audience": "services",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        }
      ]
    }
---
# Source: drogue-cloud-core/templates/infrastructure/postgres/persistent-volume-claim.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pvc
  labels:
    app.kubernetes.io/name: postgres-pvc
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "1G"
---
# Source: drogue-cloud-core/templates/cert-gen/role-certgen.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role

metadata:
  name: certgen

rules:
  - apiGroups: [ "" ]
    resources: [ "secrets", "configmaps" ]
    verbs: [ "get", "create", "patch" ]
---
# Source: drogue-cloud-core/templates/service/console/role-backend.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role

metadata:
  name: console-backend
  labels:
    app.kubernetes.io/name: console-backend
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

rules:
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    verbs: [ "get", "watch", "list" ]
---
# Source: drogue-cloud-core/templates/service/registry/knative-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: knative-operator
  
  namespace: drogue-cloud-core-0.7.11.tgz
  labels:
    app.kubernetes.io/name: topic-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
rules:
  - apiGroups: [ "apps" ]
    resources: [ "deployments" ]
    verbs: [ "get", "watch", "list", "create", "update", "delete", "patch" ]
---
# Source: drogue-cloud-core/templates/service/registry/topic-operator/strimzi/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: topic-operator
  labels:
    app.kubernetes.io/name: topic-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
rules:
  - apiGroups: [ "kafka.strimzi.io" ]
    resources: [ "kafkatopics" ]
    verbs: [ "get", "watch", "list", "create", "update", "delete", "patch" ]
  - apiGroups: [ "kafka.strimzi.io" ]
    resources: [ "kafkausers" ]
    verbs: [ "get", "watch", "list", "create", "update", "delete", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "get", "watch", "list", "create", "update", "delete", "patch" ]
---
# Source: drogue-cloud-core/templates/service/registry/ttn-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ttn-operator
  labels:
    app.kubernetes.io/name: ttn-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
rules:
  - apiGroups: [ "route.openshift.io" ]
    resources: [ "routes" ]
    verbs: [ "get", "watch", "list" ]
  - apiGroups: [ "networking.k8s.io" ]
    resources: [ "ingresses" ]
    verbs: [ "get", "watch", "list" ]
  - apiGroups: [ "serving.knative.dev" ]
    resources: [ "services" ]
    verbs: [ "get", "watch", "list" ]
---
# Source: drogue-cloud-core/templates/cert-gen/role-binding-certgen.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: certgen

subjects:
  - kind: ServiceAccount
    name: certgen

roleRef:
  kind: Role
  name: certgen
  apiGroup: rbac.authorization.k8s.io
---
# Source: drogue-cloud-core/templates/service/console/role-binding-backend.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: console-backend
  labels:
    app.kubernetes.io/name: console-backend
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

subjects:
  - kind: ServiceAccount
    name: console-backend

roleRef:
  kind: Role
  name: console-backend
  apiGroup: rbac.authorization.k8s.io
---
# Source: drogue-cloud-core/templates/service/registry/knative-operator/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: knative-operator
  
  namespace: drogue-cloud-core-0.7.11.tgz
  labels:
    app.kubernetes.io/name: topic-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
subjects:
  - kind: ServiceAccount
    name: knative-operator
    
    namespace: drogue-cloud-core-0.7.11.tgz
roleRef:
  kind: Role
  name: knative-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: drogue-cloud-core/templates/service/registry/topic-operator/strimzi/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: topic-operator
  labels:
    app.kubernetes.io/name: topic-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
subjects:
  - kind: ServiceAccount
    name: topic-operator
roleRef:
  kind: Role
  name: topic-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: drogue-cloud-core/templates/service/registry/ttn-operator/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ttn-operator
  labels:
    app.kubernetes.io/name: ttn-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
subjects:
  - kind: ServiceAccount
    name: ttn-operator
roleRef:
  kind: Role
  name: ttn-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: drogue-cloud-core/templates/infrastructure/postgres/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: postgres
  annotations:
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release

  type: ClusterIP

  ports:
    - name: postgres
      port: 5432
      protocol: TCP
      targetPort: 5432
---
# Source: drogue-cloud-core/templates/integration/mqtt/service-ws-browser.yaml
kind: Service
apiVersion: v1
metadata:
  name: mqtt-integration-ws-browser
  labels:
    app.kubernetes.io/name: mqtt-integration-ws-browser
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  selector:
    app.kubernetes.io/name: mqtt-integration-ws-browser
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
  type: LoadBalancer

  ports:
    - name: service
      protocol: TCP
      port: 1883
      targetPort: service
---
# Source: drogue-cloud-core/templates/integration/mqtt/service-ws.yaml
kind: Service
apiVersion: v1
metadata:
  name: mqtt-integration-ws
  labels:
    app.kubernetes.io/name: mqtt-integration-ws
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  selector:
    app.kubernetes.io/name: mqtt-integration-ws
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
  type: LoadBalancer

  ports:
    - name: service
      protocol: TCP
      port: 1883
      targetPort: service
---
# Source: drogue-cloud-core/templates/integration/mqtt/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: mqtt-integration
  labels:
    app.kubernetes.io/name: mqtt-integration
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  selector:
    app.kubernetes.io/name: mqtt-integration
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
  type: LoadBalancer

  ports:
    - name: service
      protocol: TCP
      port: 1883
      targetPort: service
---
# Source: drogue-cloud-core/templates/integration/websocket/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: websocket-integration
  annotations:
    
  labels:
    app.kubernetes.io/name: websocket-integration
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:
  selector:
    app.kubernetes.io/name: websocket-integration
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
  type: LoadBalancer

  ports:
    - name: service
      protocol: TCP
      port: 443
      targetPort: service
---
# Source: drogue-cloud-core/templates/service/console/service-api.yaml
kind: Service
apiVersion: v1
metadata:
  name: console-api
  labels:
    app.kubernetes.io/name: console-api
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:

  selector:
    app.kubernetes.io/name: console-api
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release

  type: ClusterIP

  ports:
    - name: service
      protocol: TCP
      port: 8080
      targetPort: service
---
# Source: drogue-cloud-core/templates/service/console/service-backend.yaml
kind: Service
apiVersion: v1
metadata:
  name: console-backend
  annotations:
    
  labels:
    app.kubernetes.io/name: console-backend
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:

  selector:
    app.kubernetes.io/name: console-backend
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release

  type: ClusterIP

  ports:
    - name: service
      protocol: TCP
      port: 443
      targetPort: service
---
# Source: drogue-cloud-core/templates/service/console/service-frontend.yaml
kind: Service
apiVersion: v1
metadata:
  name: console
  labels:
    app.kubernetes.io/name: console-frontend
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:

  selector:
    app.kubernetes.io/name: console-frontend
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release

  type: ClusterIP

  ports:
    - name: service
      protocol: TCP
      port: 8080
      targetPort: service
---
# Source: drogue-cloud-core/templates/service/registry/auth/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: authentication-service
  annotations:
    
  labels:
    app.kubernetes.io/name: authentication-service
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:

  selector:
    app.kubernetes.io/name: authentication-service
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release

  type: ClusterIP

  ports:
    - name: service
      port: 443
      protocol: TCP
      targetPort: service
---
# Source: drogue-cloud-core/templates/service/registry/registry/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: device-management-service
  annotations:
    
  labels:
    app.kubernetes.io/name: device-management-service
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:

  selector:
    app.kubernetes.io/name: device-management-service
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release

  type: ClusterIP

  ports:
    - name: service
      port: 443
      protocol: TCP
      targetPort: service
---
# Source: drogue-cloud-core/templates/service/registry/user-auth/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: user-auth-service
  annotations:
    
  labels:
    app.kubernetes.io/name: user-auth-service
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:

  selector:
    app.kubernetes.io/name: user-auth-service
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release

  type: ClusterIP

  ports:
    - name: service
      port: 443
      protocol: TCP
      targetPort: service
---
# Source: drogue-cloud-core/templates/service/state/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: device-state-service
  annotations:
    
  labels:
    app.kubernetes.io/name: device-state-service
    app.kubernetes.io/component: device-state
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:

  selector:
    app.kubernetes.io/name: device-state-service
    app.kubernetes.io/component: device-state
    app.kubernetes.io/instance: my-release

  type: ClusterIP

  ports:
    - name: service
      port: 443
      protocol: TCP
      targetPort: service
---
# Source: drogue-cloud-core/templates/source/coap/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: coap-endpoint
  labels:
    app.kubernetes.io/name: coap-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  selector:
    app.kubernetes.io/name: coap-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
  type: LoadBalancer

  ports:
    - name: endpoint
      port: 5684
      protocol: UDP
      targetPort: endpoint
---
# Source: drogue-cloud-core/templates/source/command/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: command-endpoint
  annotations:
    
  labels:
    app.kubernetes.io/name: command-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  selector:
    app.kubernetes.io/name: command-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release

  type: ClusterIP

  ports:
    - name: service
      protocol: TCP
      port: 443
      targetPort: service
---
# Source: drogue-cloud-core/templates/source/http/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: http-endpoint
  labels:
    app.kubernetes.io/name: http-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  selector:
    app.kubernetes.io/name: http-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
  type: LoadBalancer

  ports:
    - name: service
      port: 443
      protocol: TCP
      targetPort: service
---
# Source: drogue-cloud-core/templates/source/mqtt/service-ws-browser.yaml
kind: Service
apiVersion: v1
metadata:
  name: mqtt-endpoint-ws-browser
  labels:
    app.kubernetes.io/name: mqtt-endpoint-ws-browser
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  selector:
    app.kubernetes.io/name: mqtt-endpoint-ws-browser
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
  type: LoadBalancer

  ports:
    - name: endpoint
      protocol: TCP
      port: 1883
      targetPort: endpoint
---
# Source: drogue-cloud-core/templates/source/mqtt/service-ws.yaml
kind: Service
apiVersion: v1
metadata:
  name: mqtt-endpoint-ws
  labels:
    app.kubernetes.io/name: mqtt-endpoint-ws
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  selector:
    app.kubernetes.io/name: mqtt-endpoint-ws
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
  type: LoadBalancer

  ports:
    - name: endpoint
      protocol: TCP
      port: 1883
      targetPort: endpoint
---
# Source: drogue-cloud-core/templates/source/mqtt/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: mqtt-endpoint
  labels:
    app.kubernetes.io/name: mqtt-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  selector:
    app.kubernetes.io/name: mqtt-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
  type: LoadBalancer

  ports:
    - name: endpoint
      protocol: TCP
      port: 1883
      targetPort: endpoint
---
# Source: drogue-cloud-core/templates/infrastructure/postgres/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/component: device-registry
      app.kubernetes.io/instance: my-release
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/component: device-registry
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
    spec:
      

      containers:
        - name: postgres
          image: docker.io/bitnami/postgresql:15
          imagePullPolicy: IfNotPresent
          

          env:
            - name: POSTGRES_DB
              value: "registry"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            - name: PGPASSWORD # used in combination with psql
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password

          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          ports:
            - containerPort: 5432
              name: postgres
              protocol: TCP
          resources:
            limits:
              memory: 512Mi

          volumeMounts:
            - mountPath: /bitnami/postgresql
              name: storage

      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
# Source: drogue-cloud-core/templates/integration/mqtt/deployment-ws-browser.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: "mqtt-integration-ws-browser"
  annotations:
    
  labels:
    app.kubernetes.io/name: mqtt-integration-ws-browser
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mqtt-integration-ws-browser
      app.kubernetes.io/component: integrations
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mqtt-integration-ws-browser
        app.kubernetes.io/component: integrations
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/mqtt-integration:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: MQTT__BIND_ADDR
              value: "0.0.0.0:1883"
            - name: MQTT__TRANSPORT
              value: "websocket"
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            
            
             
            - name: OAUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: OAUTH__TLS_INSECURE
              value: "false"
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            - name: USER_AUTH__URL
              value: https://user-auth-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: USER_AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: USER_AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: USER_AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: USER_AUTH__TLS_INSECURE
              value: "false"
            - name: REGISTRY__URL
              value: https://device-management-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: REGISTRY__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: REGISTRY__TLS_INSECURE
              value: "false"
            - name: SERVICE__KAFKA__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: SERVICE__KAFKA__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: SERVICE__KAFKA__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: SERVICE__KAFKA__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: SERVICE__KAFKA__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            - name: COMMAND_KAFKA_SINK__TOPIC
              value: iot-commands
            - name: COMMAND_KAFKA_SINK__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            

            
            - name: DISABLE_CLIENT_CERTIFICATES
              value: "true"
            
            
            - name: CERT_BUNDLE_FILE # TLS
              value: /etc/endpoint/tls.crt
            - name: KEY_FILE # TLS
              value: /etc/endpoint/tls.key
            

          ports:
            - containerPort: 1883
              name: service
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness

          volumeMounts:
            - mountPath: /etc/endpoint
              name: endpoint-tls

      volumes:
        - name: endpoint-tls
          secret:
            secretName: "mqtt-endpoint-tls"

        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/integration/mqtt/deployment-ws.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: "mqtt-integration-ws"
  annotations:
    
  labels:
    app.kubernetes.io/name: mqtt-integration-ws
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mqtt-integration-ws
      app.kubernetes.io/component: integrations
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mqtt-integration-ws
        app.kubernetes.io/component: integrations
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/mqtt-integration:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: MQTT__BIND_ADDR
              value: "0.0.0.0:1883"
            - name: MQTT__TRANSPORT
              value: "websocket"
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            
            
             
            - name: OAUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: OAUTH__TLS_INSECURE
              value: "false"
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            - name: USER_AUTH__URL
              value: https://user-auth-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: USER_AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: USER_AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: USER_AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: USER_AUTH__TLS_INSECURE
              value: "false"
            - name: REGISTRY__URL
              value: https://device-management-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: REGISTRY__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: REGISTRY__TLS_INSECURE
              value: "false"
            - name: SERVICE__KAFKA__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: SERVICE__KAFKA__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: SERVICE__KAFKA__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: SERVICE__KAFKA__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: SERVICE__KAFKA__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            - name: COMMAND_KAFKA_SINK__TOPIC
              value: iot-commands
            - name: COMMAND_KAFKA_SINK__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            

            
            
            - name: CERT_BUNDLE_FILE # TLS
              value: /etc/endpoint/tls.crt
            - name: KEY_FILE # TLS
              value: /etc/endpoint/tls.key
            

          ports:
            - containerPort: 1883
              name: service
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness

          volumeMounts:
            - mountPath: /etc/endpoint
              name: endpoint-tls

      volumes:
        - name: endpoint-tls
          secret:
            secretName: "mqtt-endpoint-tls"

        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/integration/mqtt/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: "mqtt-integration"
  annotations:
    
  labels:
    app.kubernetes.io/name: mqtt-integration
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mqtt-integration
      app.kubernetes.io/component: integrations
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mqtt-integration
        app.kubernetes.io/component: integrations
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/mqtt-integration:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: MQTT__BIND_ADDR
              value: "0.0.0.0:1883"
            - name: MQTT__TRANSPORT
              value: "mqtt"
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            
            
             
            - name: OAUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: OAUTH__TLS_INSECURE
              value: "false"
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            - name: USER_AUTH__URL
              value: https://user-auth-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: USER_AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: USER_AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: USER_AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: USER_AUTH__TLS_INSECURE
              value: "false"
            - name: REGISTRY__URL
              value: https://device-management-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: REGISTRY__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: REGISTRY__TLS_INSECURE
              value: "false"
            - name: SERVICE__KAFKA__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: SERVICE__KAFKA__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: SERVICE__KAFKA__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: SERVICE__KAFKA__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: SERVICE__KAFKA__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            - name: COMMAND_KAFKA_SINK__TOPIC
              value: iot-commands
            - name: COMMAND_KAFKA_SINK__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            

            
            
            - name: CERT_BUNDLE_FILE # TLS
              value: /etc/endpoint/tls.crt
            - name: KEY_FILE # TLS
              value: /etc/endpoint/tls.key
            

          ports:
            - containerPort: 1883
              name: service
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness

          volumeMounts:
            - mountPath: /etc/endpoint
              name: endpoint-tls

      volumes:
        - name: endpoint-tls
          secret:
            secretName: "mqtt-endpoint-tls"

        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/integration/websocket/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: websocket-integration
  annotations:
    
  labels:
    app.kubernetes.io/name: websocket-integration
    app.kubernetes.io/component: integrations
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: websocket-integration
      app.kubernetes.io/component: integrations
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: websocket-integration
        app.kubernetes.io/component: integrations
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/websocket-integration:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            
            
            - name: HTTP__BIND_ADDR
              value: "0.0.0.0:8443"
            - name: HTTP__CERT_BUNDLE_FILE
              value: /etc/tls/service/tls.crt
            - name: HTTP__KEY_FILE
              value: /etc/tls/service/tls.key
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            
            
             
            - name: OAUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: OAUTH__TLS_INSECURE
              value: "false"
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: USER_AUTH__URL
              value: https://user-auth-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: USER_AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: USER_AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: USER_AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: USER_AUTH__TLS_INSECURE
              value: "false"
            - name: REGISTRY__URL
              value: https://device-management-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: REGISTRY__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: REGISTRY__TLS_INSECURE
              value: "false"

            - name: KAFKA__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            - name: COMMAND_KAFKA_SINK__TOPIC
              value: iot-commands
            - name: COMMAND_KAFKA_SINK__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
             
            
            

          ports:
            
            - containerPort: 8443
              name: service
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
          
          resources:
            limits:
              memory: 64Mi
          

          volumeMounts:
            

      volumes:
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/service/console/deployment-api.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: console-api
  labels:
    app.kubernetes.io/name: console-api
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: console-api
      app.kubernetes.io/component: console
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: console-api
        app.kubernetes.io/component: console
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
    spec:
      containers:
        - name: endpoint
          image: docker.io/swaggerapi/swagger-ui:v4.12.0
          imagePullPolicy: IfNotPresent

          env:
            - name: BASE_URL
              value: /api
            - name: OAUTH2_REDIRECT_URL
              value: https://console.my-cluster.dns/api/oauth2-redirect.html
            - name: VALIDATOR_URL
              value: none
            - name: URL
              value: "https://api.my-cluster.dns"
            - name: OAUTH_CLIENT_ID
              value: drogue
            - name: OAUTH_SCOPES
              value: openid
            - name: OAUTH_ADDITIONAL_PARAMS
              value: '{nonce: "1"}'
          ports:
            - containerPort: 8080
              name: service
              protocol: TCP
          

          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 8080
              path: /api/
---
# Source: drogue-cloud-core/templates/service/console/deployment-backend.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: console-backend
  annotations:
    
  labels:
    app.kubernetes.io/name: console-backend
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: console-backend
      app.kubernetes.io/component: console
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: console-backend
        app.kubernetes.io/component: console
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      serviceAccountName: console-backend
      

      containers:
        - name: endpoint
          image: "ghcr.io/drogue-iot/console-backend:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            
            
            - name: HTTP__BIND_ADDR
              value: "0.0.0.0:8443"
            - name: HTTP__CERT_BUNDLE_FILE
              value: /etc/tls/service/tls.crt
            - name: HTTP__KEY_FILE
              value: /etc/tls/service/tls.key
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: ENABLE_AUTH
              value: "true"
            - name: KAFKA__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            - name: SSO_URL
              value: https://sso.my-cluster.dns
            
            
            - name: KAFKA__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            
            - name: UI__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: UI__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            
            - name: UI__ISSUER_URL
              value: "https://sso.my-cluster.dns/realms/drogue"
            
            - name: UI__TLS_INSECURE
              value: "false"
            
            
             
            - name: OAUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: OAUTH__TLS_INSECURE
              value: "false"
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: USER_AUTH__URL
              value: https://user-auth-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: USER_AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: USER_AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: USER_AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: USER_AUTH__TLS_INSECURE
              value: "false"
            - name: REGISTRY__URL
              value: https://device-management-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
                  optional: true
             
            - name: REGISTRY__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: REGISTRY__TLS_INSECURE
              value: "false"
            
            - name: KEYCLOAK__URL
              value: "https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443"
            - name: KEYCLOAK__ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: sso-service-credentials
            - name: KEYCLOAK__ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: sso-service-credentials
            - name: "KEYCLOAK__TLS_INSECURE"
              value: "false"

            - name: ENDPOINTS__LOCAL_CERTS
              value: "false"
            - name: ENDPOINTS__API_URL
              value: https://api.my-cluster.dns
            - name: ENDPOINTS__SSO_URL
              value: $(SSO_URL)
            - name: ENDPOINTS__CONSOLE_URL
              value: https://console.my-cluster.dns
            - name: ENDPOINTS__REDIRECT_URL
              value: https://console.my-cluster.dns
            - name: ENDPOINTS__DEVICE_REGISTRY_URL
              value: https://api.my-cluster.dns
            - name: ENDPOINTS__COMMAND_ENDPOINT_URL
              value: https://api.my-cluster.dns
            - name: ENDPOINTS__COAP_ENDPOINT_URL
              value: coaps://coap-endpoint.my-cluster.dns
            - name: ENDPOINTS__HTTP_ENDPOINT_URL
              value: https://http-endpoint.my-cluster.dns
            - name: ENDPOINTS__MQTT_ENDPOINT_HOST
              value: mqtt-endpoint.my-cluster.dns
            - name: ENDPOINTS__MQTT_ENDPOINT_PORT
              value: "8883"
            - name: ENDPOINTS__MQTT_ENDPOINT_WS_HOST
              value: mqtt-endpoint-ws.my-cluster.dns
            - name: ENDPOINTS__MQTT_ENDPOINT_WS_PORT
              value: "443"
            - name: ENDPOINTS__MQTT_ENDPOINT_WS_URL
              value: wss://mqtt-endpoint-ws.my-cluster.dns
            - name: ENDPOINTS__MQTT_ENDPOINT_WS_BROWSER_HOST
              value: mqtt-endpoint-ws-browser.my-cluster.dns
            - name: ENDPOINTS__MQTT_ENDPOINT_WS_BROWSER_PORT
              value: "443"
            - name: ENDPOINTS__MQTT_ENDPOINT_WS_BROWSER_URL
              value: wss://mqtt-endpoint-ws-browser.my-cluster.dns
            - name: ENDPOINTS__MQTT_INTEGRATION_HOST
              value: mqtt-integration.my-cluster.dns
            - name: ENDPOINTS__MQTT_INTEGRATION_PORT
              value: "8883"
            - name: ENDPOINTS__MQTT_INTEGRATION_WS_HOST
              value: mqtt-integration-ws.my-cluster.dns
            - name: ENDPOINTS__MQTT_INTEGRATION_WS_PORT
              value: "443"
            - name: ENDPOINTS__MQTT_INTEGRATION_WS_URL
              value: wss://mqtt-integration-ws.my-cluster.dns
            - name: ENDPOINTS__MQTT_INTEGRATION_WS_BROWSER_HOST
              value: mqtt-integration-ws-browser.my-cluster.dns
            - name: ENDPOINTS__MQTT_INTEGRATION_WS_BROWSER_PORT
              value: "443"
            - name: ENDPOINTS__MQTT_INTEGRATION_WS_BROWSER_URL
              value: wss://mqtt-integration-ws-browser.my-cluster.dns
            - name: ENDPOINTS__WEBSOCKET_INTEGRATION_URL
              value: wss://websocket-integration.my-cluster.dns
            - name: ENDPOINTS__KAFKA_BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
             
            
            

          ports:
            
            - containerPort: 8443
              name: service
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness

          volumeMounts:
            

      volumes:
        - name: client-secret-drogue
          secret:
            secretName: keycloak-client-secret-drogue
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/service/console/deployment-frontend.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: console-frontend
  labels:
    app.kubernetes.io/name: console-frontend
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: console-frontend
      app.kubernetes.io/component: console
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: console-frontend
        app.kubernetes.io/component: console
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
    spec:
      

      containers:
        - name: endpoint
          image: "ghcr.io/drogue-iot/console-frontend:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            - name: API_URL
              value: "https://api.my-cluster.dns"
            - name: ISSUER_URL
              value: "https://sso.my-cluster.dns/realms/drogue"
            

          ports:
            - containerPort: 8080
              name: service
              protocol: TCP

          

          volumeMounts:
            - mountPath: /run
              name: run
            - mountPath: /endpoints
              name: endpoints
            - mountPath: /etc/config/login
              name: login-config
              readOnly: true

          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 8080
              path: /

      volumes:
        - name: run
          emptyDir: {}
        - name: endpoints
          emptyDir: {}
        - name: login-config
          configMap:
            optional: true
            name: login-config
---
# Source: drogue-cloud-core/templates/service/registry/auth/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: authentication-service
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"postgres"}]'
    
  labels:
    app.kubernetes.io/name: authentication-service
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: authentication-service
      app.kubernetes.io/component: device-registry
      app.kubernetes.io/instance: my-release
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: authentication-service
        app.kubernetes.io/component: device-registry
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/authentication-service:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            
            
            - name: HTTP__BIND_ADDR
              value: "0.0.0.0:8443"
            - name: HTTP__CERT_BUNDLE_FILE
              value: /etc/tls/service/tls.crt
            - name: HTTP__KEY_FILE
              value: /etc/tls/service/tls.key
            
            - name: PG__DB__HOST
              value: postgres.drogue-cloud-core-0.7.11.tgz.svc
            - name: PG__DB__PORT
              value: "5432" 
            
            - name: PG__DB__DBNAME
              value: "registry"
            - name: PG__DB__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: PG__DB__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            
             
            
            
             
            - name: OAUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: OAUTH__TLS_INSECURE
              value: "false"
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
            
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness

          ports:
            
            - containerPort: 8443
              name: service
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          

          volumeMounts:
            

      volumes:
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/service/registry/events-controller/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: device-management-controller
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"postgres"}]'
    
  labels:
    app.kubernetes.io/name: device-management-controller
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: device-management-controller
      app.kubernetes.io/component: device-registry
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: device-management-controller
        app.kubernetes.io/component: device-registry
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/device-management-controller:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: REGISTRY__URL
              value: https://device-management-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: REGISTRY__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: REGISTRY__TLS_INSECURE
              value: "false"
            - name: WORK_QUEUE__INSTANCE
              value: ttn-operator
            
            - name: WORK_QUEUE__PG__DB__HOST
              value: postgres.drogue-cloud-core-0.7.11.tgz.svc
            - name: WORK_QUEUE__PG__DB__PORT
              value: "5432" 
            
            - name: WORK_QUEUE__PG__DB__DBNAME
              value: "registry"
            - name: WORK_QUEUE__PG__DB__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: WORK_QUEUE__PG__DB__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            
             
            - name: KAFKA_SOURCE__TOPIC
              value: registry
            - name: KAFKA_SOURCE__CONSUMER_GROUP
              value: device-management-controller
            - name: KAFKA_SOURCE__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_SOURCE__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_SOURCE__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_SOURCE__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_SOURCE__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KAFKA_DOWNSTREAM_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness

          ports:
            - containerPort: 9090
              name: health
              protocol: TCP
          

      volumes:
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/service/registry/knative-operator/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: knative-operator
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"device-management-service"}]'
    
  labels:
    app.kubernetes.io/name: knative-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: knative-operator
      app.kubernetes.io/component: device-registry
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: knative-operator
        app.kubernetes.io/component: device-registry
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      serviceAccountName: knative-operator
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/knative-operator:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

            - name: REGISTRY__URL
              value: https://device-management-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: REGISTRY__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: REGISTRY__TLS_INSECURE
              value: "false"

            - name: CONTROLLER__TARGET_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONTROLLER__TEMPLATE__IMAGE
              value: ghcr.io/drogue-iot/drogue-event-source:0.2.3
            - name: CONTROLLER__KAFKA__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: CONTROLLER__KAFKA__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: CONTROLLER__KAFKA__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: CONTROLLER__KAFKA__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: CONTROLLER__KAFKA__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password

            - name: WORK_QUEUE__INSTANCE
              value: knative-operator
            
            - name: WORK_QUEUE__PG__DB__HOST
              value: postgres.drogue-cloud-core-0.7.11.tgz.svc
            - name: WORK_QUEUE__PG__DB__PORT
              value: "5432" 
            
            - name: WORK_QUEUE__PG__DB__DBNAME
              value: "registry"
            - name: WORK_QUEUE__PG__DB__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: WORK_QUEUE__PG__DB__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            
             

            - name: KAFKA_SOURCE__TOPIC
              value: registry
            - name: KAFKA_SOURCE__CONSUMER_GROUP
              value: knative-operator
            - name: KAFKA_SOURCE__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_SOURCE__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_SOURCE__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_SOURCE__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_SOURCE__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            

          ports:
            - containerPort: 9090
              name: health
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
          

      volumes:
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/service/registry/outbox/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: outbox-controller
  labels:
    app.kubernetes.io/name: outbox-controller
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"postgres"}]'
    
    core.drogue.io/secret-hash: c023873674afa083b122e99a9125b7690a87707b3e61a3eeb25ebd21845623ae
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: outbox-controller
      app.kubernetes.io/component: device-registry
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: outbox-controller
        app.kubernetes.io/component: device-registry
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"

    spec:
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/outbox-controller:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            
            - name: PG__DB__HOST
              value: postgres.drogue-cloud-core-0.7.11.tgz.svc
            - name: PG__DB__PORT
              value: "5432" 
            
            - name: PG__DB__DBNAME
              value: "registry"
            - name: PG__DB__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: PG__DB__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            
             
            - name: KAFKA_SENDER__TOPIC
              value: registry
            - name: KAFKA_SENDER__QUEUE_TIMEOUT
              value: 15s
            - name: KAFKA_SENDER__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_SENDER__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_SENDER__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_SENDER__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_SENDER__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            - name: KAFKA_SOURCE__TOPIC
              value: registry
            - name: KAFKA_SOURCE__CONSUMER_GROUP
              value: outbox-controller
            - name: KAFKA_SOURCE__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_SOURCE__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_SOURCE__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_SOURCE__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_SOURCE__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness

          ports:
            - containerPort: 9090
              name: health
              protocol: TCP
          

          volumeMounts:
          

      volumes:
---
# Source: drogue-cloud-core/templates/service/registry/registry/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: device-management-service
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"postgres"}]'
    
  labels:
    app.kubernetes.io/name: device-management-service
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: device-management-service
      app.kubernetes.io/component: device-registry
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: device-management-service
        app.kubernetes.io/component: device-registry
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/device-management-service:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            
            
            - name: HTTP__BIND_ADDR
              value: "0.0.0.0:8443"
            - name: HTTP__CERT_BUNDLE_FILE
              value: /etc/tls/service/tls.crt
            - name: HTTP__KEY_FILE
              value: /etc/tls/service/tls.key
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            
            - name: PG__DB__HOST
              value: postgres.drogue-cloud-core-0.7.11.tgz.svc
            - name: PG__DB__PORT
              value: "5432" 
            
            - name: PG__DB__DBNAME
              value: "registry"
            - name: PG__DB__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: PG__DB__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            
             
            
            
             
            - name: OAUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: OAUTH__TLS_INSECURE
              value: "false"
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
            - name: USER_AUTH__URL
              value: https://user-auth-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: USER_AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: USER_AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: USER_AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: USER_AUTH__TLS_INSECURE
              value: "false"
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KAFKA_SENDER__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            - name: KAFKA_SENDER__TOPIC
              value: registry
            - name: KAFKA_SENDER__QUEUE_TIMEOUT
              value: 15s
            
            
            - name: KAFKA_SENDER__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_SENDER__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_SENDER__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_SENDER__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            
            - name: KEYCLOAK__URL
              value: "https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443"
            - name: KEYCLOAK__ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: sso-service-credentials
            - name: KEYCLOAK__ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: sso-service-credentials
            - name: "KEYCLOAK__TLS_INSECURE"
              value: "false"
             
            
            
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness

          ports:
            
            - containerPort: 8443
              name: service
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          

          volumeMounts:
            

      volumes:
        - name: client-secret-drogue
          secret:
            secretName: keycloak-client-secret-drogue
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/service/registry/topic-operator/strimzi/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: topic-operator
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"device-management-service"}]'
    
  labels:
    app.kubernetes.io/name: topic-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: topic-operator
      app.kubernetes.io/component: device-registry
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: topic-operator
        app.kubernetes.io/component: device-registry
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      serviceAccountName: topic-operator
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/topic-strimzi-operator:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REGISTRY__URL
              value: https://device-management-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: REGISTRY__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: REGISTRY__TLS_INSECURE
              value: "false"
            - name: CONTROLLER__TOPIC_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONTROLLER__CLUSTER_NAME
              value: drogue-iot
            - name: WORK_QUEUE__INSTANCE
              value: topic-operator
            
            - name: WORK_QUEUE__PG__DB__HOST
              value: postgres.drogue-cloud-core-0.7.11.tgz.svc
            - name: WORK_QUEUE__PG__DB__PORT
              value: "5432" 
            
            - name: WORK_QUEUE__PG__DB__DBNAME
              value: "registry"
            - name: WORK_QUEUE__PG__DB__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: WORK_QUEUE__PG__DB__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            
             
            - name: KAFKA_SOURCE__TOPIC
              value: registry
            - name: KAFKA_SOURCE__CONSUMER_GROUP
              value: topic-operator
            - name: KAFKA_SOURCE__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_SOURCE__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_SOURCE__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_SOURCE__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_SOURCE__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            

          ports:
            - containerPort: 9090
              name: health
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
          

      volumes:
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/service/registry/ttn-operator/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ttn-operator
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"device-management-service"}]'
    
  labels:
    app.kubernetes.io/name: ttn-operator
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ttn-operator
      app.kubernetes.io/component: device-registry
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ttn-operator
        app.kubernetes.io/component: device-registry
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      serviceAccountName: ttn-operator
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/ttn-operator:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REGISTRY__URL
              value: https://device-management-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: REGISTRY__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: REGISTRY__TLS_INSECURE
              value: "false"
            - name: ENDPOINTS__HTTP_ENDPOINT_URL
              value: https://http-endpoint.my-cluster.dns
            - name: WORK_QUEUE__INSTANCE
              value: ttn-operator
            
            - name: WORK_QUEUE__PG__DB__HOST
              value: postgres.drogue-cloud-core-0.7.11.tgz.svc
            - name: WORK_QUEUE__PG__DB__PORT
              value: "5432" 
            
            - name: WORK_QUEUE__PG__DB__DBNAME
              value: "registry"
            - name: WORK_QUEUE__PG__DB__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: WORK_QUEUE__PG__DB__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            
             
            - name: KAFKA_SOURCE__TOPIC
              value: registry
            - name: KAFKA_SOURCE__CONSUMER_GROUP
              value: ttn-operator
            - name: KAFKA_SOURCE__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_SOURCE__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_SOURCE__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_SOURCE__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_SOURCE__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            

          ports:
            - containerPort: 9090
              name: health
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
          

      volumes:
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/service/registry/user-auth/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: user-auth-service
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"postgres"}]'
    
  labels:
    app.kubernetes.io/name: user-auth-service
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"

spec:

  replicas: 1

  selector:
    matchLabels:
      app.kubernetes.io/name: user-auth-service
      app.kubernetes.io/component: device-registry
      app.kubernetes.io/instance: my-release

  strategy:
    type: RollingUpdate

  template:
    metadata:
      labels:
        app.kubernetes.io/name: user-auth-service
        app.kubernetes.io/component: device-registry
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/user-auth-service:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            
            
            - name: HTTP__BIND_ADDR
              value: "0.0.0.0:8443"
            - name: HTTP__CERT_BUNDLE_FILE
              value: /etc/tls/service/tls.crt
            - name: HTTP__KEY_FILE
              value: /etc/tls/service/tls.key
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            
            - name: SERVICE__PG__DB__HOST
              value: postgres.drogue-cloud-core-0.7.11.tgz.svc
            - name: SERVICE__PG__DB__PORT
              value: "5432" 
            
            - name: SERVICE__PG__DB__DBNAME
              value: "registry"
            - name: SERVICE__PG__DB__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: SERVICE__PG__DB__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            
             
            
            
             
            - name: OAUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: OAUTH__TLS_INSECURE
              value: "false"
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
            
            - name: KEYCLOAK__URL
              value: "https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443"
            - name: KEYCLOAK__ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: sso-service-credentials
            - name: KEYCLOAK__ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: sso-service-credentials
            - name: "KEYCLOAK__TLS_INSECURE"
              value: "false"
            
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness

          ports:
            
            - containerPort: 8443
              name: service
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          

          volumeMounts:
            

      volumes:
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/service/state/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: device-state-service
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"postgres"}]'
    
  labels:
    app.kubernetes.io/name: device-state-service
    app.kubernetes.io/component: device-state
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: device-state-service
      app.kubernetes.io/component: device-state
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: device-state-service
        app.kubernetes.io/component: device-state
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: service
          image: "ghcr.io/drogue-iot/device-state-service:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            
            
            - name: HTTP__BIND_ADDR
              value: "0.0.0.0:8443"
            - name: HTTP__CERT_BUNDLE_FILE
              value: /etc/tls/service/tls.crt
            - name: HTTP__KEY_FILE
              value: /etc/tls/service/tls.key
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            
            - name: SERVICE__PG__DB__HOST
              value: postgres.drogue-cloud-core-0.7.11.tgz.svc
            - name: SERVICE__PG__DB__PORT
              value: "5432" 
            
            - name: SERVICE__PG__DB__DBNAME
              value: "registry"
            - name: SERVICE__PG__DB__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: SERVICE__PG__DB__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            
             
            - name: REGISTRY__URL
              value: https://device-management-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: REGISTRY__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: REGISTRY__TLS_INSECURE
              value: "false"
            
            
             
            - name: OAUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: OAUTH__TLS_INSECURE
              value: "false"
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KAFKA_DOWNSTREAM_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness

          ports:
            
            - containerPort: 8443
              name: service
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          

          volumeMounts:
            

      volumes:
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/source/coap/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: coap-endpoint
  annotations:
    
  labels:
    app.kubernetes.io/name: coap-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: coap-endpoint
      app.kubernetes.io/component: endpoints
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coap-endpoint
        app.kubernetes.io/component: endpoints
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: endpoint
          image: "ghcr.io/drogue-iot/coap-endpoint:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: BIND_ADDR_COAP
              value: "0.0.0.0:5684"
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: AUTH__URL
              value: https://authentication-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: AUTH__TLS_INSECURE
              value: "false"
            - name: COMMAND_SOURCE_KAFKA__TOPIC
              value: iot-commands
            - name: COMMAND_SOURCE_KAFKA__CONSUMER_GROUP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_COMMAND_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            - name: KAFKA_DOWNSTREAM_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password

            
            - name: CERT_BUNDLE_FILE # TLS
              value: /etc/endpoint/tls.crt
            - name: KEY_FILE # TLS
              value: /etc/endpoint/tls.key
            
            

          ports:
            - containerPort: 5684
              name: endpoint
              protocol: UDP
            - containerPort: 9090
              name: health
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
          

          volumeMounts:
          
            - mountPath: /etc/endpoint
              name: endpoint-tls
          

      volumes:

        
        - name: endpoint-tls
          secret:
            secretName: "coap-endpoint-tls"
        

        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/source/command/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: command-endpoint
  annotations:
    
  labels:
    app.kubernetes.io/name: command-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: command-endpoint
      app.kubernetes.io/component: endpoints
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: command-endpoint
        app.kubernetes.io/component: endpoints
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: endpoint
          image: "ghcr.io/drogue-iot/command-endpoint:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            
            
            - name: HTTP__BIND_ADDR
              value: "0.0.0.0:8443"
            - name: HTTP__CERT_BUNDLE_FILE
              value: /etc/tls/service/tls.crt
            - name: HTTP__KEY_FILE
              value: /etc/tls/service/tls.key
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            
            
             
            - name: OAUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: OAUTH__TLS_INSECURE
              value: "false"
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__DROGUE__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: OAUTH__CLIENTS__SERVICES__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
            - name: REGISTRY__URL
              value: https://device-management-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: REGISTRY__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: REGISTRY__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: REGISTRY__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: REGISTRY__TLS_INSECURE
              value: "false"
            - name: USER_AUTH__URL
              value: https://user-auth-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: USER_AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: USER_AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: USER_AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: USER_AUTH__TLS_INSECURE
              value: "false"
            - name: COMMAND_KAFKA_SINK__TOPIC
              value: iot-commands
            - name: COMMAND_KAFKA_SINK__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: COMMAND_KAFKA_SINK__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
             
            
            

          ports:
            
            - containerPort: 8443
              name: service
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
          

          volumeMounts:
            

      volumes:
        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/source/http/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: http-endpoint
  annotations:
    
  labels:
    app.kubernetes.io/name: http-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: http-endpoint
      app.kubernetes.io/component: endpoints
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: http-endpoint
        app.kubernetes.io/component: endpoints
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: endpoint
          image: "ghcr.io/drogue-iot/http-endpoint:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            
            
            - name: HTTP__BIND_ADDR
              value: "0.0.0.0:8443"
            - name: HTTP__CERT_BUNDLE_FILE
              value: /etc/tls/service/tls.crt
            - name: HTTP__KEY_FILE
              value: /etc/tls/service/tls.key
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: AUTH__URL
              value: https://authentication-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: AUTH__TLS_INSECURE
              value: "false"
            - name: COMMAND_SOURCE_KAFKA__TOPIC
              value: iot-commands
            - name: COMMAND_SOURCE_KAFKA__CONSUMER_GROUP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_COMMAND_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            - name: KAFKA_DOWNSTREAM_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
             
            
            

          ports:
            
            - containerPort: 8443
              name: service
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
          

          volumeMounts:
          
            - mountPath: /etc/tls/service
              name: service-tls
          

      volumes:

        
        - name: service-tls
          secret:
            secretName: "http-endpoint-tls"
        

        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/source/mqtt/deployment-ws-browser.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: "mqtt-endpoint-ws-browser"
  annotations:
    
  labels:
    app.kubernetes.io/name: mqtt-endpoint-ws-browser
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mqtt-endpoint-ws-browser
      app.kubernetes.io/component: endpoints
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mqtt-endpoint-ws-browser
        app.kubernetes.io/component: endpoints
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: endpoint
          image: "ghcr.io/drogue-iot/mqtt-endpoint:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: MQTT__BIND_ADDR
              value: "0.0.0.0:1883"
            - name: MQTT__TRANSPORT
              value: "websocket"
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: STATE__ENDPOINT
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STATE__CLIENT__URL
              value: https://device-state-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: STATE__CLIENT__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: STATE__CLIENT__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: STATE__CLIENT__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: STATE__CLIENT__TLS_INSECURE
              value: "false"
            - name: AUTH__URL
              value: https://authentication-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: AUTH__TLS_INSECURE
              value: "false"
            - name: COMMAND_SOURCE_KAFKA__TOPIC
              value: iot-commands
            - name: COMMAND_SOURCE_KAFKA__CONSUMER_GROUP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_COMMAND_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            - name: KAFKA_DOWNSTREAM_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password

            
            - name: DISABLE_CLIENT_CERTIFICATES
              value: "true"
            
            
            - name: CERT_BUNDLE_FILE # TLS
              value: /etc/endpoint/tls.crt
            - name: KEY_FILE # TLS
              value: /etc/endpoint/tls.key
            
            

          ports:
            - containerPort: 1883
              name: endpoint
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
          

          volumeMounts:
            - mountPath: /etc/endpoint
              name: endpoint-tls

      volumes:
        - name: endpoint-tls
          secret:
            secretName: "mqtt-endpoint-tls"

        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/source/mqtt/deployment-ws.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: "mqtt-endpoint-ws"
  annotations:
    
  labels:
    app.kubernetes.io/name: mqtt-endpoint-ws
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mqtt-endpoint-ws
      app.kubernetes.io/component: endpoints
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mqtt-endpoint-ws
        app.kubernetes.io/component: endpoints
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: endpoint
          image: "ghcr.io/drogue-iot/mqtt-endpoint:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: MQTT__BIND_ADDR
              value: "0.0.0.0:1883"
            - name: MQTT__TRANSPORT
              value: "websocket"
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: STATE__ENDPOINT
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STATE__CLIENT__URL
              value: https://device-state-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: STATE__CLIENT__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: STATE__CLIENT__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: STATE__CLIENT__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: STATE__CLIENT__TLS_INSECURE
              value: "false"
            - name: AUTH__URL
              value: https://authentication-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: AUTH__TLS_INSECURE
              value: "false"
            - name: COMMAND_SOURCE_KAFKA__TOPIC
              value: iot-commands
            - name: COMMAND_SOURCE_KAFKA__CONSUMER_GROUP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_COMMAND_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            - name: KAFKA_DOWNSTREAM_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password

            
            
            - name: CERT_BUNDLE_FILE # TLS
              value: /etc/endpoint/tls.crt
            - name: KEY_FILE # TLS
              value: /etc/endpoint/tls.key
            
            

          ports:
            - containerPort: 1883
              name: endpoint
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
          

          volumeMounts:
            - mountPath: /etc/endpoint
              name: endpoint-tls

      volumes:
        - name: endpoint-tls
          secret:
            secretName: "mqtt-endpoint-tls"

        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/source/mqtt/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: "mqtt-endpoint"
  annotations:
    
  labels:
    app.kubernetes.io/name: mqtt-endpoint
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
    drogue.io/metrics: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mqtt-endpoint
      app.kubernetes.io/component: endpoints
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mqtt-endpoint
        app.kubernetes.io/component: endpoints
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.11.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: drogue-iot
        drogue.io/metrics: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
        checksum/clients: de1ae3611d86c0db4e0b8541b64c898f6f3fb17b04edafc40fe390167eb2339c

    spec:
      

      containers:
        - name: endpoint
          image: "ghcr.io/drogue-iot/mqtt-endpoint:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            
            
            
            
            - name: RUST_LOG
              value: info
            
            - name: RUNTIME__HEALTH__ENABLED
              value: "true"
            - name: RUNTIME__HEALTH__BIND_ADDR
              value: "0.0.0.0:9090"
            - name: MQTT__BIND_ADDR
              value: "0.0.0.0:1883"
            - name: MQTT__TRANSPORT
              value: "mqtt"
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
            - name: STATE__ENDPOINT
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: STATE__CLIENT__URL
              value: https://device-state-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: STATE__CLIENT__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: STATE__CLIENT__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: STATE__CLIENT__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: STATE__CLIENT__TLS_INSECURE
              value: "false"
            - name: AUTH__URL
              value: https://authentication-service.drogue-cloud-core-0.7.11.tgz.svc
            - name: AUTH__CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_ID
            - name: AUTH__CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-services
                  key: CLIENT_SECRET
             
            - name: AUTH__ISSUER_URL
              value: https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443/realms/drogue
            
            - name: AUTH__TLS_INSECURE
              value: "false"
            - name: COMMAND_SOURCE_KAFKA__TOPIC
              value: iot-commands
            - name: COMMAND_SOURCE_KAFKA__CONSUMER_GROUP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_COMMAND_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_COMMAND_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password
            - name: KAFKA_DOWNSTREAM_CONFIG__BOOTSTRAP_SERVERS
              value: drogue-iot-kafka-bootstrap.drogue-cloud-core-0.7.11.tgz.svc.cluster.local.:9092
            
            
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SECURITY_PROTOCOL
              value: sasl_plaintext
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_MECHANISM
              value: SCRAM-SHA-512
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_USERNAME
              value: drogue-iot
            - name: KAFKA_DOWNSTREAM_CONFIG__PROPERTIES__SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: drogue-iot
                  key: password

            
            
            - name: CERT_BUNDLE_FILE # TLS
              value: /etc/endpoint/tls.crt
            - name: KEY_FILE # TLS
              value: /etc/endpoint/tls.key
            
            

          ports:
            - containerPort: 1883
              name: endpoint
              protocol: TCP
            - containerPort: 9090
              name: health
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /readiness
          livenessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 3
            httpGet:
              port: 9090
              path: /liveness
          

          volumeMounts:
            - mountPath: /etc/endpoint
              name: endpoint-tls

      volumes:
        - name: endpoint-tls
          secret:
            secretName: "mqtt-endpoint-tls"

        - name: client-secret-services
          secret:
            secretName: keycloak-client-secret-services
---
# Source: drogue-cloud-core/templates/api/ingress.yaml
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: api
  annotations:
    
  labels:
    app.kubernetes.io/name: api
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  
  rules:
    - host: api.my-cluster.dns
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: console-backend
                port:
                  name: service
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: console-backend
                port:
                  name: service
          - path: /.well-known/
            pathType: Prefix
            backend:
              service:
                name: console-backend
                port:
                  name: service
          - path: /api/console/
            pathType: Prefix
            backend:
              service:
                name: console-backend
                port:
                  name: service
          - path: /api/tokens/
            pathType: Prefix
            backend:
              service:
                name: console-backend
                port:
                  name: service
          - path: /api/admin/v1alpha1/user
            pathType: Prefix
            backend:
              service:
                name: console-backend
                port:
                  name: service
          - path: /api/admin/v1alpha1/apps
            pathType: Prefix
            backend:
              service:
                name: device-management-service
                port:
                  name: service
          - path: /api/registry/
            pathType: Prefix
            backend:
              service:
                name: device-management-service
                port:
                  name: service
          - path: /api/command/
            pathType: Prefix
            backend:
              service:
                name: command-endpoint
                port:
                  name: service
---
# Source: drogue-cloud-core/templates/infrastructure/sso/ingress.yaml
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: sso 
  annotations:
  
  
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
  
  labels:
    app.kubernetes.io/name: sso-ingress
    app.kubernetes.io/component: sso
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  
  rules:
    - host: sso.my-cluster.dns
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: sso-service
                port:
                  number: 8443
---
# Source: drogue-cloud-core/templates/service/console/ingress.yaml
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: console
  annotations:
    
  labels:
    app.kubernetes.io/name: console
    app.kubernetes.io/component: console
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:
  
  rules:
    - host: "console.my-cluster.dns"
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: console-api
                port:
                  name: service
          - path: /
            pathType: Prefix
            backend:
              service:
                name: console
                port:
                  name: service
---
# Source: drogue-cloud-core/templates/infrastructure/kafka/kafka.yaml
kind: Kafka
apiVersion: kafka.strimzi.io/v1beta2
metadata:
  name: drogue-iot
  labels:
    app.kubernetes.io/name: drogue-iot
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:

  kafka:

    authorization:
      type: simple
      superUsers:
        - drogue-iot
    config:
      auto.create.topics.enable: false
      
      default.replication.factor: 1
      min.insync.replicas: 1
      offsets.topic.replication.factor: 1
      transaction.state.log.min.isr: 1
      transaction.state.log.replication.factor: 1
    listeners:
      - name: plain
        tls: false
        port: 9092
        type: internal
        authentication:
          type: scram-sha-512
      - name: tls
        tls: true
        port: 9093
        type: internal
        authentication:
          type: scram-sha-512
      - name: external
        port: 9094
        type: nodeport
        authentication:
          type: scram-sha-512
        tls: true

    replicas: 1
    storage:
      deleteClaim: true
      size: 10Gi
      type: persistent-claim
    template:
      pod:
        {}

  zookeeper:
    replicas: 1
    storage:
      deleteClaim: true
      size: 1Gi
      type: persistent-claim
    template:
      pod:
        {}

  entityOperator:

    topicOperator:
      watchedNamespace: drogue-cloud-core-0.7.11.tgz

    userOperator:
      watchedNamespace: drogue-cloud-core-0.7.11.tgz

    tlsSidecar:
---
# Source: drogue-cloud-core/templates/infrastructure/kafka/topics.yaml
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: iot-commands
  labels:
    strimzi.io/cluster: drogue-iot
    app.kubernetes.io/name: iot-commands
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  config: {}
  partitions: 3
  replicas: 1
  topicName: iot-commands
---
# Source: drogue-cloud-core/templates/infrastructure/kafka/topics.yaml
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: registry
  labels:
    strimzi.io/cluster: drogue-iot
    app.kubernetes.io/name: registry
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  config: {}
  partitions: 3
  replicas: 1
  topicName: registry
---
# Source: drogue-cloud-core/templates/infrastructure/kafka/kafka-user.yaml
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: drogue-iot
  labels:
    strimzi.io/cluster: drogue-iot
    app.kubernetes.io/name: drogue-iot
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  authentication:
    type: scram-sha-512
  authorization:
    type: simple
    acls: []
---
# Source: drogue-cloud-core/templates/infrastructure/sso/instance.yaml
apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: sso
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: sso
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  instances: 1

  additionalOptions:
    - name: db
      value: postgres
    - name: db-url-database
      secret:
        name: keycloak-db-secret
        key: database
    - name: db-url-host
      secret:
        name: keycloak-db-secret
        key: host
    - name: db-url-port
      secret:
        name: keycloak-db-secret
        key: port
    - name: db-username
      secret:
        name: keycloak-db-secret
        key: username
    - name: db-password
      secret:
        name: keycloak-db-secret
        key: password
    - name: proxy
      value: passthrough

  hostname:
    hostname: sso.my-cluster.dns
  ingress:
    enabled: false

  http:
    tlsSecret:
---
# Source: drogue-cloud-core/templates/cert-gen/post-install-certgen.yaml
kind: Job
apiVersion: batch/v1
metadata:
  name: cert-gen-job
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/name: post-install-certgen
    app.kubernetes.io/component: endpoints
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  backoffLimit: 1000
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 600
  template:
    spec:
      serviceAccountName: certgen
      restartPolicy: OnFailure
      

      containers:
        - name: post-install
          image: "ghcr.io/drogue-iot/test-cert-generator:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            - name: CERT_ALTNAMES
              value: "DNS:mqtt-endpoint.my-cluster.dns, DNS:mqtt-endpoint-ws.my-cluster.dns, DNS:http-endpoint.my-cluster.dns, DNS:coap-endpoint.my-cluster.dns, DNS:mqtt-integration.my-cluster.dns, DNS:mqtt-integration-ws.my-cluster.dns"
            - name: DROGUE_NS
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

          command: ["make", "deploy"]

          volumeMounts:
            - mountPath: /etc/drogue-certs
              name: certs

      volumes:
        - name: certs
          emptyDir: {}
---
# Source: drogue-cloud-core/templates/infrastructure/postgres/migrate.yaml
kind: Job
apiVersion: batch/v1
metadata:
  name: migrate-database
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/name: migrate-database
    app.kubernetes.io/component: device-registry
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot

spec:
  backoffLimit: 1000
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 600
  template:
    spec:
      

      restartPolicy: OnFailure
      containers:
        - name: diesel-migrate
          image: "ghcr.io/drogue-iot/database-migration:0.11.0"
          imagePullPolicy: IfNotPresent
          

          env:
            
            - name: PG__DB__HOST
              value: postgres.drogue-cloud-core-0.7.11.tgz.svc
            - name: PG__DB__PORT
              value: "5432" 
            
            - name: PG__DB__DBNAME
              value: "registry"
            - name: PG__DB__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: PG__DB__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            
             
            # now we map that from our deadpool based configuration to diesel
            - name: DATABASE_URL
              value: postgres://$(PG__DB__USER):$(PG__DB__PASSWORD)@$(PG__DB__HOST):$(PG__DB__PORT)/$(PG__DB__DBNAME)
---
# Source: drogue-cloud-core/templates/infrastructure/sso/post-install-job.yaml
kind: Job
apiVersion: batch/v1
metadata:
  name: post-install-keycloak
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: "0"
    helm.sh/hook-weight: "5"
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/name: post-install-keycloak
    app.kubernetes.io/component: sso
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.11.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: drogue-iot
spec:
  backoffLimit: 1000
  completions: 1
  parallelism: 1
  ttlSecondsAfterFinished: 600
  template:
    spec:
      

      restartPolicy: OnFailure

      volumes:
        - name: init-data
          configMap:
            name: post-install-keycloak-config

      containers:
        - name: post-install
          image: quay.io/keycloak/keycloak:20.0
          imagePullPolicy: IfNotPresent
          

          env:
            - name: ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sso-service-credentials
                  key: username
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sso-service-credentials
                  key: password

            - name: KEYCLOAK_URL
              value: "https://sso-service.drogue-cloud-core-0.7.11.tgz.svc:8443"

            - name: KCADM_PATH
              value: /opt/keycloak/bin/kcadm.sh

            - name: REALM
              value: drogue

          volumeMounts:
            - mountPath: /etc/init-data
              name: init-data

          command:
            - bash
            - -exc
            - |

              kcadm() { local cmd="$1" ; shift ; "$KCADM_PATH" "$cmd" --config /tmp/kcadm.config "$@" ; }

              # set up trust store
              if [[ -n "${CUSTOM_TRUSTSTORE}" ]]; then
                keytool -importcert -noprompt -trustcacerts -file "${CUSTOM_TRUSTSTORE}" -keystore /tmp/truststore.jks -storepass temp1234 -storetype JKS
                kcadm config truststore /tmp/truststore.jks --trustpass temp1234
              fi

              # log in to keycloak
              kcadm config credentials config --server "$KEYCLOAK_URL" --realm master --user "$ADMIN_USERNAME" --password "$ADMIN_PASSWORD"

              # create realm
              REALM_OPTS=()
              REALM_OPTS+=(-s enabled=true)
              REALM_OPTS+=(-s "displayName=Drogue IoT")
              REALM_OPTS+=(-s registrationAllowed=true)
              REALM_OPTS+=(-s resetPasswordAllowed=true)
              REALM_OPTS+=(-s loginWithEmailAllowed=false)
              REALM_OPTS+=(-s identityProviders='[]')
              if kcadm get "realms/${REALM}" &> /dev/null ; then
                # exists -> update
                kcadm update "realms/${REALM}" "${REALM_OPTS[@]}"
              else
                # need to create
                kcadm create realms -s "realm=${REALM}" "${REALM_OPTS[@]}"
              fi

              # create realm roles
              kcadm create roles -r "${REALM}" -s name=drogue-user || true
              kcadm create roles -r "${REALM}" -s name=drogue-admin || true
              # add drogue-user as default role
              kcadm add-roles -r "${REALM}" --rname "default-roles-${REALM}" --rolename drogue-user

              # create clients - drogue
              ID=$(kcadm get clients -r "${REALM}" --query "clientId=drogue" --fields id --format csv --noquotes)
              CLIENT_OPTS=()
              CLIENT_OPTS+=(-s 'redirectUris=["https://console.my-cluster.dns","https://console.my-cluster.dns/*","http://localhost:*"]')
              if [[ -n "$ID" ]]; then
                # TODO: replace with update once https://github.com/keycloak/keycloak/issues/12484 is fixed
                # kcadm update "clients/${ID}" -r "${REALM}" -f /etc/init-data/client.json "${CLIENT_OPTS[@]}"
                kcadm delete "clients/${ID}" -r "${REALM}"
                kcadm create clients -r "${REALM}" -f /etc/init-data/client.json "${CLIENT_OPTS[@]}"
              else
                kcadm create clients -r "${REALM}" -f /etc/init-data/client.json "${CLIENT_OPTS[@]}"
              fi

              # client clients - services
              ID=$(kcadm get clients -r "${REALM}" --query "clientId=services" --fields id --format csv --noquotes)
              CLIENT_OPTS=()
              CLIENT_OPTS+=(-s 'secret="vUpu7egrPK3Ggd0GHrfAzviTKRZgjG3u"')
              if [[ -n "$ID" ]]; then
                # TODO: replace with update once https://github.com/keycloak/keycloak/issues/12484 is fixed
                # kcadm update "clients/${ID}" -r "${REALM}" -f /etc/init-data/client-services.json "${CLIENT_OPTS[@]}"
                kcadm delete "clients/${ID}" -r "${REALM}"
                kcadm create clients -r "${REALM}" -f /etc/init-data/client-services.json "${CLIENT_OPTS[@]}"
              else
                kcadm create clients -r "${REALM}" -f /etc/init-data/client-services.json "${CLIENT_OPTS[@]}"
              fi

              # default role for service account of services
              kcadm add-roles -r "${REALM}" --uusername service-account-services --rolename drogue-admin

              

              
              # create user
              ID=$(kcadm get users -r "${REALM}" --query "username=admin" --fields id --format csv --noquotes)
              if [[ -n "$ID" ]]; then
                kcadm update "users/$ID" -r "${REALM}" -s enabled=true
              else
                kcadm create users -r "${REALM}" -s "username=admin" -s enabled=true
              fi

              # set role
              kcadm add-roles -r "${REALM}" --uusername "admin" --rolename drogue-admin

              # set password
              ID=$(kcadm get users -r "${REALM}" --query "username=admin" --fields id --format csv --noquotes)
              kcadm update "users/${ID}/reset-password" -r "${REALM}" -s type=password -s "value=admin123456" -s temporary=false -n
