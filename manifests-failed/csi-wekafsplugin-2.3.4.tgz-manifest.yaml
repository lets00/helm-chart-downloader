---
# Source: csi-wekafsplugin/templates/controllerserver-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
imagePullSecrets:
  - name: my-release-creds
metadata:
  name: my-release-controller
  namespace: csi-wekafsplugin-2.3.4.tgz
  labels:
    app: my-release-controller
    component: my-release-controller
    release: my-release
---
# Source: csi-wekafsplugin/templates/nodeserver-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
imagePullSecrets:
  - name: my-release-creds
metadata:
  name: my-release-node
  namespace: csi-wekafsplugin-2.3.4.tgz
  labels:
    app: my-release-node
    component: my-release-node
    release: my-release
---
# Source: csi-wekafsplugin/templates/controllerserver-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-controller
  labels:
    app: my-release-controller
    component: my-release-controller
    release: my-release
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodeinfos"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "list", "watch", "delete", "get", "update"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["update", "create", "get", "list", "watch", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list", "watch", "update", "create", "delete", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots/status"]
    verbs: ["get", "list", "watch", "update", "create", "delete", "patch"]
---
# Source: csi-wekafsplugin/templates/nodeserver-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-node
  labels:
    app: my-release-node
    component: my-release-node
    release: my-release
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["create", "delete", "get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumesclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
---
# Source: csi-wekafsplugin/templates/controllerserver-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-controller
  labels:
    app: my-release-controller
    component: my-release-controller
    release: my-release
subjects:
  - kind: ServiceAccount
    name: my-release-controller
    namespace: csi-wekafsplugin-2.3.4.tgz
roleRef:
  kind: ClusterRole
  name: my-release-controller
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-wekafsplugin/templates/nodeserver-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-node
  labels:
    app: my-release-node
    component: my-release-node
    release: my-release
subjects:
  - kind: ServiceAccount
    name: my-release-node
    namespace: csi-wekafsplugin-2.3.4.tgz
roleRef:
  kind: ClusterRole
  name: my-release-node
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-wekafsplugin/templates/controllerserver-role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-controller
  labels:
    app: my-release-controller
    component: my-release-controller
    release: my-release
rules:
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: csi-wekafsplugin/templates/controllerserver-rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-controller
  labels:
    app: my-release-controller
    component: my-release-controller
    release: my-release
  namespace: csi-wekafsplugin-2.3.4.tgz
subjects:
  - kind: ServiceAccount
    name: my-release-controller
    namespace: csi-wekafsplugin-2.3.4.tgz
roleRef:
  kind: Role
  name: my-release-controller
  apiGroup: rbac.authorization.k8s.io
---
# Source: csi-wekafsplugin/templates/nodeserver-daemonset.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: my-release-node
  namespace: csi-wekafsplugin-2.3.4.tgz
spec:
  selector:
    matchLabels:
      app: my-release-node
  template:
    metadata:
      labels:
        app: my-release-node
        component: my-release-node
        release: my-release
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '9090'
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: csi.weka.io/selinux_enabled
                    operator: NotIn
                    values:
                      - "true"
      serviceAccountName: my-release-node
      hostNetwork: true
      containers:
        - name: wekafs
          securityContext:
            privileged: true
          image: quay.io/weka.io/csi-wekafs:v2.3.4
          imagePullPolicy: Always
          args:
            - "--v=5"
            - "--drivername=$(CSI_DRIVER_NAME)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--dynamic-path=$(CSI_DYNAMIC_PATH)"
            - "--csimode=$(X_CSI_MODE)"
            - "--newvolumeprefix=csivol-"
            - "--newsnapshotprefix=csisnp-"
            - "--seedsnapshotprefix=csisnp-seed-"
            - "--enablemetrics"
            - "--metricsport=9090"
            - "--mutuallyexclusivemountoptions=readcache,writecache,coherent,forcedirect"
            - "--grpcrequesttimeoutseconds=30"
            - "--concurrency.nodePublishVolume=5"
            - "--concurrency.nodeUnpublishVolume=5"
          ports:
            - containerPort: 9898
              name: healthz
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          env:
            - name: CSI_DRIVER_NAME
              value: csi.weka.io
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_DYNAMIC_PATH
              value: csi-volumes
            - name: X_CSI_MODE
              value: node
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath:  /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath:  /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
              name: plugins-dir
            - mountPath: /var/lib/csi-wekafs-data
              name: csi-data-dir
            - mountPath: /dev
              name: dev-dir
        - name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          image: registry.k8s.io/sig-storage/livenessprobe:v2.12.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--health-port=$(HEALTH_PORT)"
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
            - name: HEALTH_PORT
              value: "9898"

        - name: csi-registrar
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.10.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(KUBELET_REGISTRATION_PATH)"
            - "--timeout=60s"
            - "--health-port=9809"
          ports:
            - containerPort: 9809
              name: healthz
          livenessProbe:
            httpGet:
              port: healthz
              path: /healthz
            initialDelaySeconds: 5
            timeoutSeconds: 5
          securityContext:
            privileged: true
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
            - name: KUBELET_REGISTRATION_PATH
              value: "/var/lib/kubelet/plugins/csi-wekafs-node/csi.sock"
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /registration
              name: registration-dir
            - mountPath: /var/lib/csi-wekafs-data
              name: csi-data-dir
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
          name: plugins-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-wekafs-node
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            # 'path' is where PV data is persisted on host.
            # using /tmp is also possible while the PVs will not available after plugin container recreation or host reboot
            path: /var/lib/csi-wekafs-data/
            type: DirectoryOrCreate
          name: csi-data-dir
        - hostPath:
            path: /dev
            type: Directory
          name: dev-dir
---
# Source: csi-wekafsplugin/templates/controllerserver-statefulset.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: my-release-controller
  namespace: csi-wekafsplugin-2.3.4.tgz
  labels:
    app: my-release-controller
    component: my-release-controller
    release: my-release
spec:
  selector:
    matchLabels:
      app: my-release-controller
  serviceName: my-release-controller
  replicas: 2
  template:
    metadata:
      labels:
        app: my-release-controller
        component: my-release-controller
        release: my-release
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '9090'
    spec:
      serviceAccountName: my-release-controller
      containers:
        - name: csi-attacher
          image: registry.k8s.io/sig-storage/csi-attacher:v4.5.0
          securityContext:
            privileged: true
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--timeout=60s"
            - "--leader-election"
            - "--leader-election-namespace=csi-wekafsplugin-2.3.4.tgz"
            - "--worker-threads=5"
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v4.0.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--feature-gates=Topology=true"
            - "--timeout=60s"
            - "--prevent-volume-mode-conversion"
            - "--leader-election"
            - "--leader-election-namespace=csi-wekafsplugin-2.3.4.tgz"
            - "--worker-threads=5"
            - "--retry-interval-start=10s"
            - "--http-endpoint=:9091"
          livenessProbe:
            httpGet:
              port: 9091
              path: /healthz/leader-election
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: "/csi"
          ports:
            - containerPort: 9091
              name: pr-metrics
              protocol: TCP
        - name: csi-resizer
          image: registry.k8s.io/sig-storage/csi-resizer:v1.9.3
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--timeout=60s"
            - "--http-endpoint=:9092"
            - "--leader-election"
            - "--leader-election-namespace=csi-wekafsplugin-2.3.4.tgz"
            - "--workers=5"
            - "--retry-interval-start=10s"
          livenessProbe:
            httpGet:
              port: 9092
              path: /healthz/leader-election
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          ports:
            - containerPort: 9092
              name: rs-metrics
              protocol: TCP
        - name: csi-snapshotter
          image: registry.k8s.io/sig-storage/csi-snapshotter:v6.3.3
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--timeout=60s"
            - "--leader-election"
            - "--leader-election-namespace=csi-wekafsplugin-2.3.4.tgz"
            - "--worker-threads=5"
            - "--retry-interval-start=10s"
            - "--http-endpoint=:9093"
          livenessProbe:
            httpGet:
              port: 9093
              path: /healthz/leader-election
          ports:
            - containerPort: 9093
              name: sn-metrics
              protocol: TCP
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /csi

        - name: wekafs
          securityContext:
            privileged: true
          image: quay.io/weka.io/csi-wekafs:v2.3.4
          imagePullPolicy: Always
          args:
            - "--drivername=$(CSI_DRIVER_NAME)"
            - "--v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--dynamic-path=$(CSI_DYNAMIC_PATH)"
            - "--csimode=$(X_CSI_MODE)"
            - "--newvolumeprefix=csivol-"
            - "--newsnapshotprefix=csisnp-"
            - "--seedsnapshotprefix=csisnp-seed-"
            - "--allowautofscreation"
            - "--allowautofsexpansion"
            - "--enablemetrics"
            - "--metricsport=9090"
            - "--mutuallyexclusivemountoptions=readcache,writecache,coherent,forcedirect"
            - "--grpcrequesttimeoutseconds=30"
            - "--concurrency.createVolume=5"
            - "--concurrency.deleteVolume=1"
            - "--concurrency.expandVolume=5"
            - "--concurrency.createSnapshot=5"
            - "--concurrency.deleteSnapshot=5"
          ports:
            - containerPort: 9898
              name: healthz
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: CSI_DRIVER_NAME
              value: csi.weka.io
            - name: CSI_DRIVER_VERSION
              value: 2.3.4
            - name: X_CSI_MODE
              value: controller
            - name: CSI_DYNAMIC_PATH
              value: csi-volumes
            - name: X_CSI_DEBUG
              value: "false"
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
              name: plugins-dir
            - mountPath: /var/lib/csi-wekafs-data
              name: csi-data-dir
            - mountPath: /dev
              name: dev-dir
        - name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          image: registry.k8s.io/sig-storage/livenessprobe:v2.12.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--health-port=$(HEALTH_PORT)"
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
            - name: HEALTH_PORT
              value: "9898"
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-wekafs-controller
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
          name: plugins-dir
        - hostPath:
            # 'path' is where PV data is persisted on host.
            # using /tmp is also possible while the PVs will not available after plugin container recreation or host reboot
            path: /var/lib/csi-wekafs-data/
            type: DirectoryOrCreate
          name: csi-data-dir
        - hostPath:
            path: /dev
            type: Directory
          name: dev-dir
---
# Source: csi-wekafsplugin/templates/driver.yaml
apiVersion: storage.k8s.io/v1

kind: CSIDriver
metadata:
  name: csi.weka.io
spec:
  attachRequired: true
  podInfoOnMount: true
  volumeLifecycleModes:
    - Persistent
  fsGroupPolicy: File
