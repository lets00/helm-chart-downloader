---
# Source: ksoc-plugins/templates/ksoc-guard/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ksoc-guard
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
automountServiceAccountToken: false
---
# Source: ksoc-plugins/templates/ksoc-sbom/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ksoc-sbom
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
automountServiceAccountToken: false
---
# Source: ksoc-plugins/templates/ksoc-sync/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ksoc-sync
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sync
    app_version: "v1.1.4"
    maintained_by: ksoc
automountServiceAccountToken: false
---
# Source: ksoc-plugins/templates/ksoc-watch/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ksoc-watch
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-watch
    app_version: "v1.1.15"
    maintained_by: ksoc
automountServiceAccountToken: false
---
# Source: ksoc-plugins/templates/ksoc-guard/rbac.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ksoc-guard-api-token-secret
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
  annotations:
    kubernetes.io/service-account.name: ksoc-guard
type: kubernetes.io/service-account-token
---
# Source: ksoc-plugins/templates/ksoc-sbom/rbac.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ksoc-sbom-api-token-secret
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
  annotations:
    kubernetes.io/service-account.name: ksoc-sbom
type: kubernetes.io/service-account-token
---
# Source: ksoc-plugins/templates/ksoc-sync/rbac.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ksoc-sync-api-token-secret
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sync
    app_version: "v1.1.4"
    maintained_by: ksoc
  annotations:
    kubernetes.io/service-account.name: ksoc-sync
type: kubernetes.io/service-account-token
---
# Source: ksoc-plugins/templates/ksoc-watch/rbac.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ksoc-watch-api-token-secret
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-watch
    app_version: "v1.1.15"
    maintained_by: ksoc
  annotations:
    kubernetes.io/service-account.name: ksoc-watch
type: kubernetes.io/service-account-token
---
# Source: ksoc-plugins/templates/ksoc-guard/dynamic-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ksoc-guard-dynamic-configuration
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
data:
# Placeholder for dynamic configuration created via ksoc-sync
# Main purpose of this ConfigMap is to delete it when ksoc-plugins helm chart is uninstalled
---
# Source: ksoc-plugins/templates/ksoc-sbom/dynamic-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ksoc-sbom-dynamic-configuration
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
data:
# Placeholder for dynamic configuration created via ksoc-sync
# Main purpose of this ConfigMap is to delete it when ksoc-plugins helm chart is uninstalled
---
# Source: ksoc-plugins/templates/ksoc-sync/dynamic-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ksoc-sync-dynamic-configuration
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sync
    app_version: "v1.1.4"
    maintained_by: ksoc
data:
# Placeholder for dynamic configuration created via ksoc-sync
# Main purpose of this ConfigMap is to delete it when ksoc-plugins helm chart is uninstalled
---
# Source: ksoc-plugins/templates/ksoc-watch/dynamic-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ksoc-watch-dynamic-configuration
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-watch
    app_version: "v1.1.15"
    maintained_by: ksoc
data:
# Placeholder for dynamic configuration created via ksoc-sync
# Main purpose of this ConfigMap is to delete it when ksoc-plugins helm chart is uninstalled
---
# Source: ksoc-plugins/templates/ksoc-guard/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ksoc-guard
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
rules:
  - apiGroups: [ "apiextensions.k8s.io" ]
    resources: [ "customresourcedefinitions" ]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: [ "ksoc.com" ]
    resources: [ "guardpolicies" ]
    verbs: [ "get", "list", "watch", "update" ]
  - apiGroups: [ "ksoc.com" ]
    resources: [ "guardresults" ]
    verbs: [ "create", "delete", "list", "watch" ]
  - apiGroups: [ "ksoc.com" ]
    resources: [ "guardpolicies/status", "guardresults/status" ]
    verbs: [ "get" ]
---
# Source: ksoc-plugins/templates/ksoc-sbom/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ksoc-sbom
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
---
# Source: ksoc-plugins/templates/ksoc-sync/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ksoc-sync
  labels:
    app_name: ksoc-sync
    app_version: "v1.1.4"
    maintained_by: ksoc
rules:
  - apiGroups: [ "ksoc.com" ]
    resources: [ "guardpolicies" ]
    verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
---
# Source: ksoc-plugins/templates/ksoc-watch/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ksoc-watch
  labels:
    app_name: ksoc-watch
    app_version: "v1.1.15"
    maintained_by: ksoc
rules:
  - apiGroups: [""]
    resources: ["configmaps", "namespaces", "nodes", "pods", "services", "serviceaccounts"]
    verbs: ["get", "list", "watch"]

  - apiGroups: [ "apps" ]
    resources: [ "daemonsets", "deployments", "replicasets", "statefulsets"]
    verbs: [ "get", "list", "watch" ]

  - apiGroups: [ "batch" ]
    resources: [ "cronjobs", "jobs"]
    verbs: [ "get", "list", "watch" ]

  - apiGroups: [ "discovery.k8s.io" ]
    resources: [ "endpointslices" ]
    verbs: [ "get", "list", "watch" ]

  - apiGroups: [ "rbac.authorization.k8s.io" ]
    resources: [ "clusterrolebindings", "clusterroles", "rolebindings", "roles" ]
    verbs: [ "get", "list", "watch" ]

  - apiGroups: [ "ksoc.com" ]
    resources: [ "guardpolicies", "guardresults" ]
    verbs: [ "get", "list", "watch" ]

  - apiGroups: [ "networking.k8s.io" ]
    resources: [ "ingresses", "networkpolicies" ]
    verbs: [ "get", "list", "watch" ]

  - apiGroups: [ "apiextensions.k8s.io" ]
    resources: [ "customresourcedefinitions" ]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
# Source: ksoc-plugins/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ksoc-proxy-role
  labels:
    maintained_by: ksoc
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: ksoc-plugins/templates/ksoc-guard/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ksoc-guard
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ksoc-guard
subjects:
- kind: ServiceAccount
  name: ksoc-guard
  namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-guard/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ksoc-guard-proxy
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ksoc-proxy-role
subjects:
  - kind: ServiceAccount
    name: ksoc-guard
    namespace: system
---
# Source: ksoc-plugins/templates/ksoc-sbom/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ksoc-sbom
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ksoc-sbom
subjects:
  - kind: ServiceAccount
    name: ksoc-sbom
    namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-sbom/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ksoc-sbom-proxy
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ksoc-proxy-role
subjects:
- kind: ServiceAccount
  name: ksoc-sbom
  namespace: system
---
# Source: ksoc-plugins/templates/ksoc-sync/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ksoc-sync
  labels:
    app_name: ksoc-sync
    app_version: "v1.1.4"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ksoc-sync
subjects:
  - kind: ServiceAccount
    name: ksoc-sync
    namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-watch/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ksoc-watch
  labels:
    app_name: ksoc-watch
    app_version: "v1.1.15"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ksoc-watch
subjects:
  - kind: ServiceAccount
    name: ksoc-watch
    namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-guard/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ksoc-guard-configmap-reader
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: [ "ksoc-guard-dynamic-configuration" ]
    verbs: ["get", "list", "watch"]
---
# Source: ksoc-plugins/templates/ksoc-sbom/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ksoc-sbom-configmap-reader
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: [ "ksoc-sbom-dynamic-configuration" ]
    verbs: ["get", "list", "watch"]
---
# Source: ksoc-plugins/templates/ksoc-sync/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ksoc-sync-configmap-mutator
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sync
    app_version: "v1.1.4"
    maintained_by: ksoc
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: [ "ksoc-guard-dynamic-configuration", "ksoc-sbom-dynamic-configuration", "ksoc-sync-dynamic-configuration", "ksoc-watch-dynamic-configuration" ]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: ksoc-plugins/templates/ksoc-watch/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ksoc-watch-configmap-reader
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-watch
    app_version: "v1.1.15"
    maintained_by: ksoc
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: [ "ksoc-watch-dynamic-configuration" ]
    verbs: ["get", "list", "watch"]
---
# Source: ksoc-plugins/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ksoc-leader-election-role
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: ksoc-plugins/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ksoc-kube-root-ca-reader
  namespace: kube-system
  labels:
    maintained_by: ksoc
rules:
  - apiGroups: [""]
    resources: [ "configmaps" ]
    resourceNames: [ "kube-root-ca.crt" ]
    verbs: ["get", "watch", "list"]
---
# Source: ksoc-plugins/templates/ksoc-guard/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksoc-guard-configmap-reader
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksoc-guard-configmap-reader
subjects:
  - kind: ServiceAccount
    name: ksoc-guard
    namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-guard/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksoc-guard-leader-election
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksoc-leader-election-role
subjects:
  - kind: ServiceAccount
    name: ksoc-guard
    namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-guard/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksoc-guard-kube-root-ca-reader
  namespace: kube-system
  labels:
    app_name: ksoc-guard
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksoc-kube-root-ca-reader
subjects:
  - kind: ServiceAccount
    name: ksoc-guard
    namespace: ksoc
---
# Source: ksoc-plugins/templates/ksoc-sbom/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksoc-sbom-configmap-reader
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksoc-sbom-configmap-reader
subjects:
  - kind: ServiceAccount
    name: ksoc-sbom
    namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-sbom/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksoc-sbom-leader-election
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksoc-leader-election-role
subjects:
- kind: ServiceAccount
  name: ksoc-sbom
  namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-sbom/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksoc-sbom-kube-root-ca-reader
  namespace: kube-system
  labels:
    app_name: ksoc-sbom
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksoc-kube-root-ca-reader
subjects:
  - kind: ServiceAccount
    name: ksoc-sbom
    namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-sync/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksoc-sync-configmap-mutator
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sync
    app_version: "v1.1.4"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksoc-sync-configmap-mutator
subjects:
  - kind: ServiceAccount
    name: ksoc-sync
    namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-sync/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksoc-sync-kube-root-ca-reader
  namespace: kube-system
  labels:
    app_name: ksoc-sync
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksoc-kube-root-ca-reader
subjects:
  - kind: ServiceAccount
    name: ksoc-sync
    namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-watch/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksoc-watch-configmap-reader
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-watch
    app_version: "v1.1.15"
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksoc-watch-configmap-reader
subjects:
  - kind: ServiceAccount
    name: ksoc-watch
    namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-watch/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ksoc-watch-kube-root-ca-reader
  namespace: kube-system
  labels:
    app_name: ksoc-watch
    maintained_by: ksoc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ksoc-kube-root-ca-reader
subjects:
  - kind: ServiceAccount
    name: ksoc-watch
    namespace: ksoc-plugins-1.4.27.tgz
---
# Source: ksoc-plugins/templates/ksoc-guard/service.yaml
apiVersion: v1
kind: Service
metadata:
  name:  ksoc-guard
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
---
# Source: ksoc-plugins/templates/ksoc-sbom/service.yaml
apiVersion: v1
kind: Service
metadata:
  name:  ksoc-sbom
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
---
# Source: ksoc-plugins/templates/ksoc-guard/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksoc-guard
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
spec:
  minReadySeconds: 90
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app_name: ksoc-guard
  template:
    metadata:
      labels:
        app_name: ksoc-guard
        app_version: "v1.1.8"
        maintained_by: ksoc
      annotations:
        linkerd.io/inject: disabled
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: ksoc-guard
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: false
      initContainers:
        - name: ksoc-bootstrapper
          image: us.gcr.io/ksoc-public/ksoc-bootstrapper:v1.1.4
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: AGENT_VERSION
              value: "v1.1.4"
            - name: CHART_VERSION
              value: 1.4.27
            - name: KSOC_API_URL
              value: https://api.ksoc.com
            - name: KSOC_CLUSTER_NAME
              value: 
            - name: KSOC_NAMESPACE
              value: ksoc-plugins-1.4.27.tgz
            - name: KSOC_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: access-key-id
            - name: KSOC_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: secret-key
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: api-token
            readOnly: true
          resources:
            limits:
              cpu: 100m
              ephemeral-storage: 100Mi
              memory: 64Mi
            requests:
              cpu: 50m
              ephemeral-storage: 100Mi
              memory: 32Mi
      containers:
        - name: ksoc-guard
          image: us.gcr.io/ksoc-public/ksoc-guard:v1.1.8
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: AGENT_VERSION
              value: "v1.1.8"
            - name: CHART_VERSION
              value: 1.4.27
            - name: KSOC_API_URL
              value: https://api.ksoc.com
            - name: KSOC_NAMESPACE
              value: ksoc-plugins-1.4.27.tgz
            - name: KSOC_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: access-key-id
            - name: KSOC_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: secret-key
            - name: INSTALL_CRDS
              value: "true"
            - name: "BLOCK_ON_ERROR"
              value: "false"
            - name: "BLOCK_ON_POLICY_VIOLATION"
              value: "false"
            - name: "BLOCK_ON_TIMEOUT"
              value: "false"
            - name: "ENABLE_WARNING_LOGS"
              value: "false"
            - name: "LOG_LEVEL"
              value: "info"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8001
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8001
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: api-token
            readOnly: true
          resources:
            limits:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 500Mi
            requests:
              cpu: 100m
              ephemeral-storage: 100Mi
              memory: 100Mi
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: ksoc-guard-self-signed-cert
      - name: api-token
        secret:
          secretName: ksoc-guard-api-token-secret
---
# Source: ksoc-plugins/templates/ksoc-sbom/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksoc-sbom
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
spec:
  minReadySeconds: 90
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app_name: ksoc-sbom
  template:
    metadata:
      labels:
        app_name: ksoc-sbom
        app_version: "v1.1.12"
        maintained_by: ksoc
      annotations:
        linkerd.io/inject: disabled
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: ksoc-sbom
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: false
      initContainers:
        - name: ksoc-bootstrapper
          image: us.gcr.io/ksoc-public/ksoc-bootstrapper:v1.1.4
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: AGENT_VERSION
              value: "v1.1.4"
            - name: CHART_VERSION
              value: 1.4.27
            - name: KSOC_API_URL
              value: https://api.ksoc.com
            - name: KSOC_CLUSTER_NAME
              value: 
            - name: KSOC_NAMESPACE
              value: ksoc-plugins-1.4.27.tgz
            - name: KSOC_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: access-key-id
            - name: KSOC_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: secret-key
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: api-token
            readOnly: true
          resources:
            limits:
              cpu: 100m
              ephemeral-storage: 100Mi
              memory: 64Mi
            requests:
              cpu: 50m
              ephemeral-storage: 100Mi
              memory: 32Mi
      containers:
        - name: ksoc-sbom
          image: us.gcr.io/ksoc-public/ksoc-sbom:v1.1.12
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: AGENT_VERSION
              value: "v1.1.12"
            - name: CHART_VERSION
              value: 1.4.27
            - name: KSOC_API_URL
              value: https://api.ksoc.com
            - name: KSOC_NAMESPACE
              value: ksoc-plugins-1.4.27.tgz
            - name: KSOC_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: access-key-id
            - name: KSOC_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: secret-key
            - name: "LOG_LEVEL"
              value: "info"
            - name: "MUTATE_ANNOTATIONS"
              value: "false"
            - name: "MUTATE_IMAGE"
              value: "true"
            - name: "SBOM_FORMAT"
              value: "cyclonedx-json"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
          - mountPath: /tmp
            name: temp-image-dir
            readOnly: false
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: api-token
            readOnly: true
          resources:
            limits:
              cpu: 1000m
              ephemeral-storage: 25Gi
              memory: 2Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 1Gi
      volumes:
      - name: temp-image-dir
        emptyDir: {}
      - name: cert
        secret:
          defaultMode: 420
          secretName: ksoc-sbom-self-signed-cert
      - name: api-token
        secret:
          secretName: ksoc-sbom-api-token-secret
---
# Source: ksoc-plugins/templates/ksoc-sync/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksoc-sync
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sync
    app_version: "v1.1.4"
    maintained_by: ksoc
spec:
  minReadySeconds: 90
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app_name: ksoc-sync
  template:
    metadata:
      labels:
        app_name: ksoc-sync
        app_version: "v1.1.4"
        maintained_by: ksoc
      annotations:
        linkerd.io/inject: disabled
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: ksoc-sync
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: false
      initContainers:
        - name: ksoc-bootstrapper
          image: us.gcr.io/ksoc-public/ksoc-bootstrapper:v1.1.4
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: AGENT_VERSION
              value: "v1.1.4"
            - name: CHART_VERSION
              value: 1.4.27
            - name: KSOC_API_URL
              value: https://api.ksoc.com
            - name: KSOC_CLUSTER_NAME
              value: 
            - name: KSOC_NAMESPACE
              value: ksoc-plugins-1.4.27.tgz
            - name: KSOC_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: access-key-id
            - name: KSOC_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: secret-key
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: api-token
            readOnly: true
          resources:
            limits:
              cpu: 100m
              ephemeral-storage: 100Mi
              memory: 64Mi
            requests:
              cpu: 50m
              ephemeral-storage: 100Mi
              memory: 32Mi
      containers:
        - name: ksoc-sync
          image: us.gcr.io/ksoc-public/ksoc-sync:v1.1.4
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: AGENT_VERSION
              value: "v1.1.4"
            - name: CHART_VERSION
              value: 1.4.27
            - name: KSOC_API_URL
              value: https://api.ksoc.com
            - name: KSOC_NAMESPACE
              value: ksoc-plugins-1.4.27.tgz
            - name: KSOC_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: access-key-id
            - name: KSOC_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: secret-key
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: api-token
            readOnly: true
          resources:
            limits:
              cpu: 200m
              ephemeral-storage: 1Gi
              memory: 256Mi
            requests:
              cpu: 100m
              ephemeral-storage: 100Mi
              memory: 128Mi
      volumes:
      - name: api-token
        secret:
          secretName: ksoc-sync-api-token-secret
---
# Source: ksoc-plugins/templates/ksoc-watch/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksoc-watch
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-watch
    app_version: "v1.1.15"
    maintained_by: ksoc
spec:
  minReadySeconds: 90
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app_name: ksoc-watch
  template:
    metadata:
      labels:
        app_name: ksoc-watch
        app_version: "v1.1.15"
        maintained_by: ksoc
      annotations:
        linkerd.io/inject: disabled
        sidecar.istio.io/inject: "false"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      automountServiceAccountToken: false
      serviceAccountName: ksoc-watch
      initContainers:
        - name: ksoc-bootstrapper
          image: us.gcr.io/ksoc-public/ksoc-bootstrapper:v1.1.4
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: AGENT_VERSION
              value: "v1.1.4"
            - name: CHART_VERSION
              value: 1.4.27
            - name: KSOC_API_URL
              value: https://api.ksoc.com
            - name: KSOC_CLUSTER_NAME
              value: 
            - name: KSOC_NAMESPACE
              value: ksoc-plugins-1.4.27.tgz
            - name: KSOC_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: access-key-id
            - name: KSOC_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: secret-key
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: api-token
            readOnly: true
          resources:
            limits:
              cpu: 100m
              ephemeral-storage: 100Mi
              memory: 64Mi
            requests:
              cpu: 50m
              ephemeral-storage: 100Mi
              memory: 32Mi
      containers:
        - name: ksoc-watch
          image: us.gcr.io/ksoc-public/ksoc-watch:v1.1.15
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: AGENT_VERSION
              value: "v1.1.15"
            - name: CHART_VERSION
              value: 1.4.27
            - name: KSOC_API_URL
              value: https://api.ksoc.com
            - name: KSOC_NAMESPACE
              value: ksoc-plugins-1.4.27.tgz
            - name: KSOC_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: access-key-id
            - name: KSOC_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ksoc-access-key
                  key: secret-key
            - name: "RECONCILIATION_AT_START"
              value: "false"
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: api-token
            readOnly: true
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 100m
              ephemeral-storage: 100Mi
              memory: 128Mi
      volumes:
      - name: api-token
        secret:
          secretName: ksoc-watch-api-token-secret
---
# Source: ksoc-plugins/templates/ksoc-guard/cert.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ksoc-guard
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
spec:
  dnsNames:
  - ksoc-guard.ksoc-plugins-1.4.27.tgz.svc
  - ksoc-guard.ksoc-plugins-1.4.27.tgz.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: ksoc-selfsigned-issuer
  secretName: ksoc-guard-self-signed-cert
---
# Source: ksoc-plugins/templates/ksoc-sbom/cert.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ksoc-sbom
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
spec:
  dnsNames:
  - ksoc-sbom.ksoc-plugins-1.4.27.tgz.svc
  - ksoc-sbom.ksoc-plugins-1.4.27.tgz.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: ksoc-selfsigned-issuer
  secretName: ksoc-sbom-self-signed-cert
---
# Source: ksoc-plugins/templates/cert-manager-issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: ksoc-selfsigned-issuer
  namespace: ksoc-plugins-1.4.27.tgz
  labels:
    maintained_by: ksoc
spec:
  selfSigned: {}
---
# Source: ksoc-plugins/templates/ksoc-guard/mutating-webhook-config.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: ksoc-guard
  namespace: ksoc-plugins-1.4.27.tgz
  annotations:
    cert-manager.io/inject-ca-from: ksoc-plugins-1.4.27.tgz/ksoc-guard
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: ksoc-guard
        namespace: ksoc-plugins-1.4.27.tgz
        path: /mutate
    failurePolicy: Ignore
    timeoutSeconds: 10
    name: guard.ksoc.com
    rules:
      - apiGroups: [ "apps" ]
        apiVersions: [ "v1" ]
        operations: [ "CREATE", "UPDATE" ]
        resources: [ "daemonsets", "deployments", "statefulsets" ]
      - apiGroups: [ "batch" ]
        apiVersions: [ "v1" ]
        operations: [ "CREATE", "UPDATE" ]
        resources: [ "jobs", "cronjobs" ]
      - apiGroups: [ "rbac.authorization.k8s.io" ]
        apiVersions: [ "v1" ]
        operations: [ "CREATE", "UPDATE" ]
        resources: [ "rolebindings", "clusterrolebindings", "roles", "clusterroles" ]
      - apiGroups: [ "" ]
        apiVersions: [ "v1" ]
        operations: [ "CREATE", "UPDATE" ]
        resources: [ "pods", "namespaces" ]
    sideEffects: NoneOnDryRun
---
# Source: ksoc-plugins/templates/ksoc-sbom/mutating-webhook-config.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: ksoc-sbom
  namespace: ksoc-plugins-1.4.27.tgz
  annotations:
    cert-manager.io/inject-ca-from: ksoc-plugins-1.4.27.tgz/ksoc-sbom # needs to be cert name!
  labels:
    app_name: ksoc-sbom
    app_version: "v1.1.12"
    maintained_by: ksoc
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: ksoc-sbom
      namespace: ksoc-plugins-1.4.27.tgz
      path: /mutate-v1-pod
  failurePolicy: Ignore
  name: sbom.ksoc.com
  timeoutSeconds: 10
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - pods
  sideEffects: NoneOnDryRun
---
# Source: ksoc-plugins/templates/ksoc-guard/validating-webhook-config.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: ksoc-guard
  namespace: ksoc-plugins-1.4.27.tgz
  annotations:
    cert-manager.io/inject-ca-from: ksoc-plugins-1.4.27.tgz/ksoc-guard
  labels:
    app_name: ksoc-guard
    app_version: "v1.1.8"
    maintained_by: ksoc
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: ksoc-guard
        namespace: ksoc-plugins-1.4.27.tgz
        path: /validate
    failurePolicy: Ignore
    timeoutSeconds: 10
    name: guard.ksoc.com
    rules:
      - apiGroups: [ "apps" ]
        apiVersions: [ "v1" ]
        operations: [ "CREATE", "UPDATE" ]
        resources: [ "daemonsets", "deployments", "statefulsets" ]
      - apiGroups: [ "batch" ]
        apiVersions: [ "v1" ]
        operations: [ "CREATE", "UPDATE" ]
        resources: [ "jobs", "cronjobs" ]
      - apiGroups: [ "rbac.authorization.k8s.io" ]
        apiVersions: [ "v1" ]
        operations: [ "CREATE", "UPDATE" ]
        resources: [ "rolebindings", "clusterrolebindings", "roles", "clusterroles" ]
      - apiGroups: [ "" ]
        apiVersions: [ "v1" ]
        operations: [ "CREATE", "UPDATE" ]
        resources: [ "pods", "namespaces" ]
    sideEffects: NoneOnDryRun
