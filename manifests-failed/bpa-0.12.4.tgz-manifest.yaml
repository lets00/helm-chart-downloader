---
# Source: bpa/templates/bpa_serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-bpa-core
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-core
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
---
# Source: bpa/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  namespace: bpa-0.12.4.tgz
type: Opaque
data:
  postgresql-password: "Y2hhbmdlLW1l"
---
# Source: bpa/templates/acapy_secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-bpa-acapy
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-acapy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
  namespace: bpa-0.12.4.tgz
type: Opaque
data:
  seed: "NWE3ZGIwMTEwNzU0NDRhMTlkOWJjYWVkNTZhZDYyNGE="
---
# Source: bpa/templates/acapy_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-bpa-acapy
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-acapy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
data:
  acapy-static-args.yaml: |
    auto-accept-invites: false
    auto-accept-requests: false
    auto-respond-messages: false
    auto-respond-credential-proposal: false
    auto-respond-credential-offer: false
    auto-respond-credential-request: false
    auto-respond-presentation-proposal: true
    auto-respond-presentation-request: false
    auto-store-credential: true
    auto-verify-presentation: false
    auto-ping-connection: true
    auto-provision: true
    auto-disclose-features: true
    notify-revocation: true
    monitor-revocation-notification: true
    monitor-ping: true
    emit-new-didcomm-prefix: true
    emit-new-didcomm-mime-type: true
    enable-undelivered-queue: true
    exch-use-unencrypted-tags: true
    preserve-exchange-records: false
    public-invites: true
    plugin: 'aries_cloudagent.messaging.jsonld'
    outbound-transport: http
    wallet-type: askar
    log-level: info
  genesis-transaction-list.yaml: |
    - id: bcovrinTest
      is_production: true
      is_write: true
      genesis_url: 'http://test.bcovrin.vonx.io/genesis'
    - id: IDUnionTest
      is_production: false
      is_write: false
      genesis_url: 'https://raw.githubusercontent.com/IDunion/IDunion_TestNet_Genesis/master/pool_transactions_genesis'
    - id: SovrinBuilderNet
      is_production: false
      is_write: false
      genesis_url: 'https://raw.githubusercontent.com/sovrin-foundation/sovrin/stable/sovrin/pool_transactions_builder_genesis'
    - id: SuomiTestNet
      is_production: false
      is_write: false
      genesis_url: 'https://minisuomiledger.northeurope.cloudapp.azure.com/genesis'
    - id: iGrantTestNet
      is_production: false
      is_write: false
      genesis_url: 'https://indy.igrant.io/genesis'
---
# Source: bpa/templates/bpa_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-bpa-core
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-core
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
data:
  AGENT_NAME: "MyRelease"
  ACAPY_URL: "http://my-release-bpa-acapy:8031"
  ACAPY_ENDPOINT: "https://my-release-bpa-acapy.bpa"
  ACAPY_API_KEY: "2f9729eef0be49608c1cffd49ee3cc4a"
  BPA_PG_URL: "jdbc:postgresql://my-release-postgresql:5432/postgres"  
  POSTGRESQL_USER: "postgres"
  BPA_SECURITY_ENABLED: "true"
  BPA_LEDGER_BROWSER: "http://test.bcovrin.vonx.io"
  BPA_HOST: "my-release-bpa.bpa"
  BPA_SCHEME: "https"
  BPA_WEB_MODE: "false"
  BPA_BOOTSTRAP_UN: "admin"
  BPA_BOOTSTRAP_PW: "changeme"
  BPA_CREDDEF_REVOCATION_REGISTRY_SIZE: "3000"
  BPA_TITLE: "MyRelease"
  BPA_I18N_LOCALE: "en"
  BPA_I18N_FALLBACK_LOCALE: "en"
---
# Source: bpa/templates/bpa_configmap_schemas.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-bpa-core-schemas
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-core
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
data:
  schemas.yml: |-
    bpa:
      schemas:
        bank-account:
          ledgerId: "bcovrinTest"
          id: "F6dB7dMVHUQSC64qemnBi7:2:bank_account:1.0"
          label: "Bank Account"
          defaultAttributeName: "iban"
          restrictions:
            - issuerDid: "${bpa.did.prefix}F6dB7dMVHUQSC64qemnBi7"
              label: "Demo Bank"
        commercial-register:
          ledgerId: "bcovrinTest"
          id: "F6dB7dMVHUQSC64qemnBi7:2:commercialregister:1.0"
          label: "Commercial Register"
          defaultAttributeName: "companyName"
          restrictions:
            - issuerDid: "${bpa.did.prefix}F6dB7dMVHUQSC64qemnBi7"
              label: "Commercial Register"
        permanent-resident:
          id: "https://w3id.org/citizenship/v1"
          type: "json_ld"
          label: "Permanent Resident"
          defaultAttributeName: "givenName"
          ldType: "PermanentResident"
          attributes:
            - "givenName"
            - "familyName"
            - "gender"
            - "birthCountry"
            - "birthDate"
---
# Source: bpa/charts/postgresql/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: bpa-0.12.4.tgz
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: my-release
---
# Source: bpa/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
  namespace: bpa-0.12.4.tgz
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: my-release
    role: primary
---
# Source: bpa/templates/acapy_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-bpa-acapy
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-acapy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8030
      targetPort: http
      protocol: TCP
      name: http
    - port: 8031
      targetPort: admin
      protocol: TCP
      name: admin      
  selector:
    app.kubernetes.io/name: my-release-bpa-acapy
    app.kubernetes.io/instance: my-release
---
# Source: bpa/templates/bpa_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-bpa-core
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-core
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: my-release-bpa-core
    app.kubernetes.io/instance: my-release
---
# Source: bpa/templates/acapy_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-bpa-acapy
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-acapy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: my-release-bpa-acapy
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: b44ec5cf61ab4e5ee3c0b72bc09b888cb1200338d69538383617e822112a2de5
      labels:
        app.kubernetes.io/name: my-release-bpa-acapy
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      initContainers:
        - name: acapy-provision
          image: "bcgovimages/aries-cloudagent:py36-1.16-1_0.7.4"
          imagePullPolicy: IfNotPresent
          args: [
           "-c",
           "curl -d '{\"seed\":\"$(WALLET_SEED)\", \"role\":\"TRUST_ANCHOR\", \"alias\":\"my-release-bpa-core\"}' -X POST http://test.bcovrin.vonx.io/register; \
           sleep 15; \
           aca-py provision \
           --endpoint https://my-release-bpa-acapy.bpa \
           --wallet-type askar \
           --wallet-storage-type 'postgres_storage' \
           --wallet-name mywallet \
           --wallet-key 123 \
           --wallet-storage-config '{\"url\":\"my-release-postgresql:5432\",\"max_connections\":5}' \
           --wallet-storage-creds '{\"account\":\"postgres\",\"password\":\"$(POSTGRES_PASSWORD)\",\"admin_account\":\"postgres\",\"admin_password\":\"$(POSTGRES_PASSWORD)\"}' \
           --seed \"$(WALLET_SEED)\" \
           --genesis-transactions-list genesis-transaction-list.yaml \
           --log-level info \
           "
          ]
          command:
          - /bin/bash
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
            - name: WALLET_SEED
              valueFrom:
                secretKeyRef:
                  name: my-release-bpa-acapy
                  key: seed
          volumeMounts:
          - name: ledger
            mountPath: "/home/indy/genesis-transaction-list.yaml"
            subPath: "genesis-transaction-list.yaml"
            readOnly: true
      containers:
        - name: acapy
          securityContext:
            runAsUser: 1001
          image: "bcgovimages/aries-cloudagent:py36-1.16-1_0.7.4"
          imagePullPolicy: IfNotPresent
          args: [
           "-c",
           "aca-py start \
           --arg-file acapy-static-args.yml \
           --inbound-transport http '0.0.0.0' 8030 \
           --genesis-transactions-list genesis-transaction-list.yaml \
           --endpoint https://my-release-bpa-acapy.bpa \
           --wallet-storage-type 'postgres_storage' \
           --wallet-name mywallet \
           --wallet-key 123 \
           --wallet-storage-config '{\"url\":\"my-release-postgresql:5432\",\"max_connections\":5}' \
           --wallet-storage-creds '{\"account\":\"postgres\",\"password\":\"$(POSTGRES_PASSWORD)\"}' \
           --admin '0.0.0.0' 8031 \
           --admin-api-key 2f9729eef0be49608c1cffd49ee3cc4a \
           --label my-release \
           "
          ]
          command:
          - /bin/bash
          ports:
            - name: http
              containerPort: 8030
              protocol: TCP
            - name: admin
              containerPort: 8031
              protocol: TCP
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
          livenessProbe:
            httpGet:
              path: /status/live
              port: 8031
            initialDelaySeconds: 45
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /status/ready
              port: 8031
            initialDelaySeconds: 20
            periodSeconds: 10    
          volumeMounts:
          - name: config
            mountPath: "/home/indy/acapy-static-args.yml"
            subPath: "acapy-static-args.yml"
            readOnly: true
          - name: ledger
            mountPath: "/home/indy/genesis-transaction-list.yaml"
            subPath: "genesis-transaction-list.yaml"
            readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
      volumes:
        - name: config
          configMap:
            name: my-release-bpa-acapy
            items:
            - key: "acapy-static-args.yaml"
              path: "acapy-static-args.yml"
        - name: ledger
          configMap:
            name: my-release-bpa-acapy
            items:
            - key: "genesis-transaction-list.yaml"
              path: "genesis-transaction-list.yaml"
---
# Source: bpa/templates/bpa_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-bpa-core
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-core
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: my-release-bpa-core
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: 1337901795ad7a11fa9e7aa9fd22a479e80e51584cdfde346e8e835850902640
        checksum/configSchemas: 1d69fb77b6009b5b7c9de56180007c7b6828738b9bdf141c049fcd98a12dca6c
      labels:
        app.kubernetes.io/name: my-release-bpa-core
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-bpa-core
      securityContext:
        {}
      containers:
        - name: bpa
          securityContext:
            {}
          image: "ghcr.io/hyperledger-labs/business-partner-agent-new:sha-c2b76ca"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10  
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 20   
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
            
            - name: JAVA_OPTS
              value: |
                -Dbpa.pg.password=$(POSTGRES_PASSWORD)
                -Dmicronaut.config.files=classpath:application.yml,/home/indy/schemas.yml,classpath:strict-security.yml
                -Dlog4j2.configurationFile=log4j2-prod.xml
                
          envFrom:
            - configMapRef:
                name: my-release-bpa-core
            
          volumeMounts:
            - name: config-schemas
              mountPath: "/home/indy/schemas.yml"
              subPath: "schemas.yml"
              readOnly: true
            
            
          resources:
            limits:
              cpu: "2"
              memory: 384Mi
            requests:
              cpu: "0.2"
              memory: 384Mi
      volumes:
        - name: config-schemas
          configMap:
            name: my-release-bpa-core-schemas
            items:
            - key: "schemas.yml"
              path: "schemas.yml"
---
# Source: bpa/charts/postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.16.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
  namespace: bpa-0.12.4.tgz
spec:
  serviceName: my-release-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: my-release
      role: primary
  template:
    metadata:
      name: my-release-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.16.2
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/component: primary
                namespaces:
                  - "bpa-0.12.4.tgz"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      automountServiceAccountToken: false
      containers:
        - name: my-release-postgresql
          image: docker.io/bitnami/postgresql:12
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: "postgres"
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -d "dbname=postgres" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -d "dbname=postgres" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        - name: data
          emptyDir: {}
---
# Source: bpa/templates/acapy_ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-bpa-acapy
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-acapy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "my-release-bpa-acapy.bpa"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-bpa-acapy
                port:
                  number: 8030
---
# Source: bpa/templates/bpa_ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-bpa-core
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-core
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "my-release-bpa.bpa"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-bpa-core
                port:
                  number: 80
---
# Source: bpa/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-bpa-test-connection"
  labels:
    helm.sh/chart: bpa-0.12.4
    app.kubernetes.io/name: my-release-bpa-core
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "sha-c2b76ca"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-bpa-core:80/user/signin']
  restartPolicy: Never
