---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
---
# Source: botpress/charts/botpress/charts/botpress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
---
# Source: botpress/charts/botpress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
---
# Source: botpress/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.4
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "botpress-server-v12"
    app.kubernetes.io/managed-by: Helm
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  volumeMode: Filesystem
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  volumeMode: Filesystem
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  volumeMode: Filesystem
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  volumeMode: Filesystem
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  volumeMode: Filesystem
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  volumeMode: Filesystem
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: botpress/charts/botpress/charts/botpress/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  volumeMode: Filesystem
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: botpress/charts/botpress/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  volumeMode: Filesystem
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: botpress/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.4
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "botpress-server-v12"
    app.kubernetes.io/managed-by: Helm
spec:
  volumeMode: Filesystem
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
---
# Source: botpress/charts/botpress/charts/botpress/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
---
# Source: botpress/charts/botpress/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
---
# Source: botpress/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.4
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "botpress-server-v12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: botpress
      app.kubernetes.io/instance: my-release
      app.openshift.io/runtime: nodejs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: botpress
        app.kubernetes.io/instance: my-release
        app.openshift.io/runtime: nodejs
    spec:
      volumes:
        - name: bp-storage
          persistentVolumeClaim:
            claimName: my-release-botpress
      serviceAccountName: my-release-botpress
      securityContext:
        {}
      containers:
        - name: botpress
          securityContext:
            {}
          image: "quay.io/maximilianopizarro/botpress-server-v12:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: BP_CONFIG_HTTPSERVER_HOST
              value: "0.0.0.0"
            - name: BP_MODULE_NLU_DUCKLINGURL
              value: "http://localhost:8000"
            - name: BP_PRODUCTION
              value: "true"
            - name: EXTERNAL_URL
              value: "https://botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com"
          volumeMounts:
            - name: bp-storage
              mountPath: /botpress/data
            - name: bp-storage
              mountPath: /botpress/pre-trained
            - name: bp-storage
              mountPath: /botpress/stop-words
            - name: bp-storage
              mountPath: /botpress/log                         
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: botpress
      app.kubernetes.io/instance: my-release
      app.openshift.io/runtime: nodejs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: botpress
        app.kubernetes.io/instance: my-release
        app.openshift.io/runtime: nodejs
    spec:
      volumes:
        - name: bp-storage
          persistentVolumeClaim:
            claimName: my-release-botpress
      serviceAccountName: my-release-botpress
      securityContext:
        {}
      containers:
        - name: botpress
          securityContext:
            {}
          image: "quay.io/maximilianopizarro/botpress-server-v12:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: BP_CONFIG_HTTPSERVER_HOST
              value: "0.0.0.0"
            - name: BP_MODULE_NLU_DUCKLINGURL
              value: "http://localhost:8000"
            - name: BP_PRODUCTION
              value: "true"
            - name: EXTERNAL_URL
              value: "https://botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com"
          volumeMounts:
            - name: bp-storage
              mountPath: /botpress/data
            - name: bp-storage
              mountPath: /botpress/pre-trained
            - name: bp-storage
              mountPath: /botpress/stop-words
            - name: bp-storage
              mountPath: /botpress/log                         
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: botpress
      app.kubernetes.io/instance: my-release
      app.openshift.io/runtime: nodejs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: botpress
        app.kubernetes.io/instance: my-release
        app.openshift.io/runtime: nodejs
    spec:
      volumes:
        - name: bp-storage
          persistentVolumeClaim:
            claimName: my-release-botpress
      serviceAccountName: my-release-botpress
      securityContext:
        {}
      containers:
        - name: botpress
          securityContext:
            {}
          image: "quay.io/maximilianopizarro/botpress-server-v12:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: BP_CONFIG_HTTPSERVER_HOST
              value: "0.0.0.0"
            - name: BP_MODULE_NLU_DUCKLINGURL
              value: "http://localhost:8000"
            - name: BP_PRODUCTION
              value: "true"
            - name: EXTERNAL_URL
              value: "https://botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com"
          volumeMounts:
            - name: bp-storage
              mountPath: /botpress/data
            - name: bp-storage
              mountPath: /botpress/pre-trained
            - name: bp-storage
              mountPath: /botpress/stop-words
            - name: bp-storage
              mountPath: /botpress/log                         
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: botpress
      app.kubernetes.io/instance: my-release
      app.openshift.io/runtime: nodejs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: botpress
        app.kubernetes.io/instance: my-release
        app.openshift.io/runtime: nodejs
    spec:
      volumes:
        - name: bp-storage
          persistentVolumeClaim:
            claimName: my-release-botpress
      serviceAccountName: my-release-botpress
      securityContext:
        {}
      containers:
        - name: botpress
          securityContext:
            {}
          image: "quay.io/maximilianopizarro/botpress-server-v12:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: BP_CONFIG_HTTPSERVER_HOST
              value: "0.0.0.0"
            - name: BP_MODULE_NLU_DUCKLINGURL
              value: "http://localhost:8000"
            - name: BP_PRODUCTION
              value: "true"
            - name: EXTERNAL_URL
              value: "https://botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com"
          volumeMounts:
            - name: bp-storage
              mountPath: /botpress/data
            - name: bp-storage
              mountPath: /botpress/pre-trained
            - name: bp-storage
              mountPath: /botpress/stop-words
            - name: bp-storage
              mountPath: /botpress/log                         
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: botpress
      app.kubernetes.io/instance: my-release
      app.openshift.io/runtime: nodejs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: botpress
        app.kubernetes.io/instance: my-release
        app.openshift.io/runtime: nodejs
    spec:
      volumes:
        - name: bp-storage
          persistentVolumeClaim:
            claimName: my-release-botpress
      serviceAccountName: my-release-botpress
      securityContext:
        {}
      containers:
        - name: botpress
          securityContext:
            {}
          image: "quay.io/maximilianopizarro/botpress-server-v12:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: BP_CONFIG_HTTPSERVER_HOST
              value: "0.0.0.0"
            - name: BP_MODULE_NLU_DUCKLINGURL
              value: "http://localhost:8000"
            - name: BP_PRODUCTION
              value: "true"
            - name: EXTERNAL_URL
              value: "https://botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com"
          volumeMounts:
            - name: bp-storage
              mountPath: /botpress/data
            - name: bp-storage
              mountPath: /botpress/pre-trained
            - name: bp-storage
              mountPath: /botpress/stop-words
            - name: bp-storage
              mountPath: /botpress/log                         
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: botpress
      app.kubernetes.io/instance: my-release
      app.openshift.io/runtime: nodejs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: botpress
        app.kubernetes.io/instance: my-release
        app.openshift.io/runtime: nodejs
    spec:
      volumes:
        - name: bp-storage
          persistentVolumeClaim:
            claimName: my-release-botpress
      serviceAccountName: my-release-botpress
      securityContext:
        {}
      containers:
        - name: botpress
          securityContext:
            {}
          image: "quay.io/maximilianopizarro/botpress-server-v12:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: BP_CONFIG_HTTPSERVER_HOST
              value: "0.0.0.0"
            - name: BP_MODULE_NLU_DUCKLINGURL
              value: "http://localhost:8000"
            - name: BP_PRODUCTION
              value: "true"
            - name: EXTERNAL_URL
              value: "https://botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com"
          volumeMounts:
            - name: bp-storage
              mountPath: /botpress/data
            - name: bp-storage
              mountPath: /botpress/pre-trained
            - name: bp-storage
              mountPath: /botpress/stop-words
            - name: bp-storage
              mountPath: /botpress/log                         
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: botpress/charts/botpress/charts/botpress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: botpress
      app.kubernetes.io/instance: my-release
      app.openshift.io/runtime: nodejs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: botpress
        app.kubernetes.io/instance: my-release
        app.openshift.io/runtime: nodejs
    spec:
      volumes:
        - name: bp-storage
          persistentVolumeClaim:
            claimName: my-release-botpress
      serviceAccountName: my-release-botpress
      securityContext:
        {}
      containers:
        - name: botpress
          securityContext:
            {}
          image: "quay.io/maximilianopizarro/botpress-server-v12:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: BP_CONFIG_HTTPSERVER_HOST
              value: "0.0.0.0"
            - name: BP_MODULE_NLU_DUCKLINGURL
              value: "http://localhost:8000"
            - name: BP_PRODUCTION
              value: "true"
            - name: EXTERNAL_URL
              value: "https://botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com"
          volumeMounts:
            - name: bp-storage
              mountPath: /botpress/data
            - name: bp-storage
              mountPath: /botpress/pre-trained
            - name: bp-storage
              mountPath: /botpress/stop-words
            - name: bp-storage
              mountPath: /botpress/log                         
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: botpress/charts/botpress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: botpress
      app.kubernetes.io/instance: my-release
      app.openshift.io/runtime: nodejs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: botpress
        app.kubernetes.io/instance: my-release
        app.openshift.io/runtime: nodejs
    spec:
      volumes:
        - name: bp-storage
          persistentVolumeClaim:
            claimName: my-release-botpress
      serviceAccountName: my-release-botpress
      securityContext:
        {}
      containers:
        - name: botpress
          securityContext:
            {}
          image: "quay.io/maximilianopizarro/botpress-server-v12:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: BP_CONFIG_HTTPSERVER_HOST
              value: "0.0.0.0"
            - name: BP_MODULE_NLU_DUCKLINGURL
              value: "http://localhost:8000"
            - name: BP_PRODUCTION
              value: "true"
            - name: EXTERNAL_URL
              value: "https://botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com"
          volumeMounts:
            - name: bp-storage
              mountPath: /botpress/data
            - name: bp-storage
              mountPath: /botpress/pre-trained
            - name: bp-storage
              mountPath: /botpress/stop-words
            - name: bp-storage
              mountPath: /botpress/log                         
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: botpress/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.4
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "botpress-server-v12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: botpress
      app.kubernetes.io/instance: my-release
      app.openshift.io/runtime: nodejs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: botpress
        app.kubernetes.io/instance: my-release
        app.openshift.io/runtime: nodejs
    spec:
      volumes:
        - name: bp-storage
          persistentVolumeClaim:
            claimName: my-release-botpress
      serviceAccountName: my-release-botpress
      securityContext:
        {}
      containers:
        - name: botpress
          securityContext:
            {}
          image: "quay.io/maximilianopizarro/botpress-server-v12:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: BP_CONFIG_HTTPSERVER_HOST
              value: "0.0.0.0"
            - name: BP_MODULE_NLU_DUCKLINGURL
              value: "http://localhost:8000"
            - name: BP_PRODUCTION
              value: "true"
            - name: EXTERNAL_URL
              value: "https://botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com"
          volumeMounts:
            - name: bp-storage
              mountPath: /botpress/data
            - name: bp-storage
              mountPath: /botpress/pre-trained
            - name: bp-storage
              mountPath: /botpress/stop-words
            - name: bp-storage
              mountPath: /botpress/log                         
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  host: botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
  to:
    kind: Service
    name: my-release-botpress
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  host: botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
  to:
    kind: Service
    name: my-release-botpress
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  host: botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
  to:
    kind: Service
    name: my-release-botpress
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  host: botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
  to:
    kind: Service
    name: my-release-botpress
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  host: botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
  to:
    kind: Service
    name: my-release-botpress
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  host: botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
  to:
    kind: Service
    name: my-release-botpress
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: botpress/charts/botpress/charts/botpress/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  host: botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
  to:
    kind: Service
    name: my-release-botpress
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: botpress/charts/botpress/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
spec:
  host: botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
  to:
    kind: Service
    name: my-release-botpress
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: botpress/templates/route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: my-release-botpress
  labels:
    helm.sh/chart: botpress-0.1.4
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "botpress-server-v12"
    app.kubernetes.io/managed-by: Helm
spec:
  host: botpress-server-maximilianopizarro5-dev.apps.sandbox-m2.ll9k.p1.openshiftapps.com
  to:
    kind: Service
    name: my-release-botpress
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-botpress-test-connection"
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-botpress:3000']
  restartPolicy: Never
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-botpress-test-connection"
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-botpress:3000']
  restartPolicy: Never
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-botpress-test-connection"
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-botpress:3000']
  restartPolicy: Never
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-botpress-test-connection"
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-botpress:3000']
  restartPolicy: Never
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/charts/botpress/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-botpress-test-connection"
  labels:
    helm.sh/chart: botpress-0.1.0
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-botpress:3000']
  restartPolicy: Never
---
# Source: botpress/charts/botpress/charts/botpress/charts/botpress/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-botpress-test-connection"
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-botpress:3000']
  restartPolicy: Never
---
# Source: botpress/charts/botpress/charts/botpress/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-botpress-test-connection"
  labels:
    helm.sh/chart: botpress-0.1.2
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-botpress:3000']
  restartPolicy: Never
---
# Source: botpress/charts/botpress/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-botpress-test-connection"
  labels:
    helm.sh/chart: botpress-0.1.3
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "v12"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-botpress:3000']
  restartPolicy: Never
---
# Source: botpress/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-botpress-test-connection"
  labels:
    helm.sh/chart: botpress-0.1.4
    app.kubernetes.io/name: botpress
    app.kubernetes.io/instance: my-release
    app.openshift.io/runtime: nodejs
    app.kubernetes.io/version: "botpress-server-v12"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-botpress:3000']
  restartPolicy: Never
