---
# Source: parse/charts/mongodb/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-mongodb
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 7.0.11
    helm.sh/chart: mongodb-15.6.3
    app.kubernetes.io/component: mongodb
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/component: mongodb
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 27017
---
# Source: parse/templates/dashboard-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-parse-dashboard
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: parse
    app.kubernetes.io/version: 7.0.0
    helm.sh/chart: parse-23.2.5
    app.kubernetes.io/component: dashboard
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: parse
      app.kubernetes.io/component: dashboard
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 4040
---
# Source: parse/templates/server-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-parse-server
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: parse
    app.kubernetes.io/version: 7.0.0
    helm.sh/chart: parse-23.2.5
    app.kubernetes.io/component: server
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: parse
      app.kubernetes.io/component: server
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 1337
---
# Source: parse/charts/mongodb/templates/standalone/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-mongodb
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 7.0.11
    helm.sh/chart: mongodb-15.6.3
    app.kubernetes.io/component: mongodb
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/component: mongodb
---
# Source: parse/templates/server-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-parse-server
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: parse
    app.kubernetes.io/version: 7.0.0
    helm.sh/chart: parse-23.2.5
    app.kubernetes.io/component: server
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: parse
      app.kubernetes.io/component: server
---
# Source: parse/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-mongodb
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 7.0.11
    helm.sh/chart: mongodb-15.6.3
secrets:
  - name: my-release-mongodb
automountServiceAccountToken: false
---
# Source: parse/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-parse-server
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: parse
    app.kubernetes.io/version: 7.0.0
    helm.sh/chart: parse-23.2.5
    app.kubernetes.io/component: server
automountServiceAccountToken: false
---
# Source: parse/charts/mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-mongodb
  namespace: parse-23.2.5.tgz
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 7.0.11
    helm.sh/chart: mongodb-15.6.3
    app.kubernetes.io/component: mongodb
type: Opaque
data:
  mongodb-root-password: "YnAyTmdqVHJyQQ=="
  mongodb-passwords: "dzBUbHZKNWY0cg=="
---
# Source: parse/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-parse
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: parse
    app.kubernetes.io/version: 7.0.0
    helm.sh/chart: parse-23.2.5
type: Opaque
data:
  master-key: "bTJxdHdKelUySA=="
  
  parse-dashboard-password: "V3RZaDVEaW9QSA=="
---
# Source: parse/charts/mongodb/templates/common-scripts-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mongodb-common-scripts
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 7.0.11
    helm.sh/chart: mongodb-15.6.3
    app.kubernetes.io/component: mongodb
data:
  startup-probe.sh: |
    #!/bin/bash
    exec mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'if (!(db.hello().isWritablePrimary || db.hello().secondary)) { throw new Error("Not ready") }'
  readiness-probe.sh: |
    #!/bin/bash
    # Run the proper check depending on the version
    [[ $(mongod -version | grep "db version") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
    . /opt/bitnami/scripts/libversion.sh
    VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
    VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
    VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
    readiness_test='db.isMaster().ismaster || db.isMaster().secondary'
    if [[ ( "$VERSION_MAJOR" -ge 5 ) || ( "$VERSION_MAJOR" -ge 4 && "$VERSION_MINOR" -ge 4 && "$VERSION_PATCH" -ge 2 ) ]]; then
        readiness_test='db.hello().isWritablePrimary || db.hello().secondary'
    fi
    exec mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval "if (!(${readiness_test})) { throw new Error(\"Not ready\") }"
  ping-mongodb.sh: |
    #!/bin/bash
    exec mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval "db.adminCommand('ping')"
---
# Source: parse/charts/mongodb/templates/standalone/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-mongodb
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 7.0.11
    helm.sh/chart: mongodb-15.6.3
    app.kubernetes.io/component: mongodb
  annotations:
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: parse/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-parse
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: parse
    app.kubernetes.io/version: 7.0.0
    helm.sh/chart: parse-23.2.5
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: parse/charts/mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-mongodb
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 7.0.11
    helm.sh/chart: mongodb-15.6.3
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: "mongodb"
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: mongodb
---
# Source: parse/templates/server-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-parse
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: parse
    app.kubernetes.io/version: 7.0.0
    helm.sh/chart: parse-23.2.5
    app.kubernetes.io/component: dashboard
spec:
  type: LoadBalancer
  sessionAffinity: None
  externalTrafficPolicy: "Cluster"
  ports:
    - name: http-server
      port: 1337
      targetPort: http-server
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: parse
    app.kubernetes.io/component: server
---
# Source: parse/charts/mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-mongodb
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/version: 7.0.11
    helm.sh/chart: mongodb-15.6.3
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/version: 7.0.11
        helm.sh/chart: mongodb-15.6.3
        app.kubernetes.io/component: mongodb
    spec:
      
      automountServiceAccountToken: false
      serviceAccountName: my-release-mongodb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: mongodb
                    app.kubernetes.io/component: mongodb
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      
      enableServiceLinks: true
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:7.0.11-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MONGODB_EXTRA_USERNAMES
              value: "bn_parse"
            - name: MONGODB_EXTRA_DATABASES
              value: "bitnami_parse"
            - name: MONGODB_EXTRA_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: my-release-mongodb
                  key: mongodb-passwords
            - name: MONGODB_ROOT_USER
              value: "root"
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-mongodb
                  key: mongodb-root-password
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_PORT_NUMBER
              value: "27017"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
            exec:
              command:
                - /bitnami/scripts/ping-mongodb.sh
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bitnami/scripts/readiness-probe.sh
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 1024Mi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mongodb/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mongodb/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/mongodb/logs
              subPath: app-logs-dir
            - name: empty-dir
              mountPath: /.mongodb
              subPath: mongosh-home
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
            - name: common-scripts
              mountPath: /bitnami/scripts
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: common-scripts
          configMap:
            name: my-release-mongodb-common-scripts
            defaultMode: 0550
        - name: datadir
          persistentVolumeClaim:
            claimName: my-release-mongodb
---
# Source: parse/templates/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-parse-server
  namespace: "parse-23.2.5.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: parse
    app.kubernetes.io/version: 7.0.0
    helm.sh/chart: parse-23.2.5
    app.kubernetes.io/component: server
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: parse
      app.kubernetes.io/component: server
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: parse
        app.kubernetes.io/version: 7.0.0
        helm.sh/chart: parse-23.2.5
        app.kubernetes.io/component: server
    spec:
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: parse
                    app.kubernetes.io/component: server
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: my-release-parse-server
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      
      initContainers:
        - name: create-default-config
          image: docker.io/bitnami/parse:7.0.0-debian-12-r5
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          command:
            - /bin/bash
          args:
            - -ec
            - |
              #!/bin/bash

              # HACK: We need to create this file in the emptyDir volume to make it writable
              # in the
              touch /default-conf/config.json
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 1024Mi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /default-conf
              subPath: app-default-conf-dir
      containers:
        - name: parse
          image: docker.io/bitnami/parse:7.0.0-debian-12-r5
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: PARSE_HOST
              value: "0.0.0.0"
            - name: PARSE_SERVER_MASTER_KEY_IPS
              value: "0.0.0.0/0"
            - name: PARSE_PORT_NUMBER
              value: "1337"
            - name: PARSE_MOUNT_PATH
              value: "/parse"
            - name: PARSE_APP_ID
              value: "myappID"
            - name: PARSE_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: my-release-parse
                  key: master-key
            - name: PARSE_ENABLE_CLOUD_CODE
              value: "no"
            - name: PARSE_DATABASE_HOST
              value: my-release-mongodb
            - name: PARSE_DATABASE_PORT_NUMBER
              value: "27017"
            - name: PARSE_DATABASE_USER
              value: "bn_parse"
            - name: PARSE_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-mongodb
                  key: mongodb-passwords
            - name: PARSE_FORCE_OVERWRITE_CONF_FILE
              value: "yes"
          ports:
            - name: http-server
              containerPort: 1337
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            tcpSocket:
              port: http-server
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /parse/users
              port: http-server
              httpHeaders:
                - name: X-Parse-Application-Id
                  value: myappID
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 1024Mi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          volumeMounts:
            - name: parse-data
              mountPath: /bitnami/parse
            - name: empty-dir
              mountPath: /opt/bitnami/parse/config.json
              subPath: app-default-conf-dir/config.json
            - name: empty-dir
              mountPath: /opt/bitnami/parse/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/parse/logs
              subPath: app-logs-dir
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: parse-data
          persistentVolumeClaim:
            claimName: my-release-parse
