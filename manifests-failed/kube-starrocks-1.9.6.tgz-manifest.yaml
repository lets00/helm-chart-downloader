---
# Source: kube-starrocks/charts/operator/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: starrocks
  namespace: kube-starrocks-1.9.6.tgz
---
# Source: kube-starrocks/charts/starrocks/templates/beconfigmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-starrocks-be-cm
  namespace: kube-starrocks-1.9.6.tgz
  labels:
    cluster: kube-starrocks
    app: "be"
data:
  be.conf: |
    be_port = 9060
    webserver_port = 8040
    heartbeat_service_port = 9050
    brpc_port = 8060
    sys_log_level = INFO
    default_rowset_type = beta
---
# Source: kube-starrocks/charts/starrocks/templates/feconfigmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-starrocks-fe-cm
  namespace: kube-starrocks-1.9.6.tgz
  labels:
    cluster: kube-starrocks
    app: "fe"
data:
  fe.conf: |
    LOG_DIR = ${STARROCKS_HOME}/log
    DATE = "$(date +%Y%m%d-%H%M%S)"
    JAVA_OPTS="-Dlog4j2.formatMsgNoLookups=true -Xmx8192m -XX:+UseMembar -XX:SurvivorRatio=8 -XX:MaxTenuringThreshold=7 -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSClassUnloadingEnabled -XX:-CMSParallelRemarkEnabled -XX:CMSInitiatingOccupancyFraction=80 -XX:SoftRefLRUPolicyMSPerMB=0 -Xloggc:${LOG_DIR}/fe.gc.log.$DATE"
    JAVA_OPTS_FOR_JDK_9="-Dlog4j2.formatMsgNoLookups=true -Xmx8192m -XX:SurvivorRatio=8 -XX:MaxTenuringThreshold=7 -XX:+CMSClassUnloadingEnabled -XX:-CMSParallelRemarkEnabled -XX:CMSInitiatingOccupancyFraction=80 -XX:SoftRefLRUPolicyMSPerMB=0 -Xlog:gc*:${LOG_DIR}/fe.gc.log.$DATE:time"
    JAVA_OPTS_FOR_JDK_11="-Dlog4j2.formatMsgNoLookups=true -Xmx8192m -XX:+UseG1GC -Xlog:gc*:${LOG_DIR}/fe.gc.log.$DATE:time"
    http_port = 8030
    rpc_port = 9020
    query_port = 9030
    edit_log_port = 9010
    mysql_service_nio_enabled = true
    sys_log_level = INFO
---
# Source: kube-starrocks/charts/operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-starrocks-operator
  labels:
    app: kube-starrocks-operator
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  - serviceaccounts
  - services
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - starrocks.com
  resources:
  - starrocksclusters
  - starrockswarehouses
  verbs:
  - '*'
- apiGroups:
  - starrocks.com
  resources:
  - starrocksclusters/status
  - starrockswarehouses/status
  verbs:
  - get
  - patch
  - update
---
# Source: kube-starrocks/charts/operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-starrocks-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-starrocks-operator
subjects:
- kind: ServiceAccount
  name: starrocks
  namespace: kube-starrocks-1.9.6.tgz
---
# Source: kube-starrocks/charts/operator/templates/leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cn-leader-election-role
  namespace: kube-starrocks-1.9.6.tgz
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: kube-starrocks/charts/operator/templates/leader-election-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cn-leader-election-rolebinding
  namespace: kube-starrocks-1.9.6.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cn-leader-election-role
subjects:
- kind: ServiceAccount
  name: starrocks
  namespace: kube-starrocks-1.9.6.tgz
---
# Source: kube-starrocks/charts/operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-starrocks-operator
  namespace: kube-starrocks-1.9.6.tgz
  labels:
    app: kube-starrocks-operator
spec:
  selector:
    matchLabels:
      app: kube-starrocks-operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app: kube-starrocks-operator
        version: 1.9.6
    spec:
      automountServiceAccountToken: true
      containers:
      - command:
        - /sroperator
        args:
        - --leader-elect
        - --zap-time-encoding=iso8601
        - --zap-encoder=console
        env:
        - name: TZ
          value: Asia/Shanghai
        image: "starrocks/operator:v1.9.6"
        imagePullPolicy: Always
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 800Mi
          requests:
            cpu: 500m
            memory: 400Mi
      serviceAccountName: starrocks
      terminationGracePeriodSeconds: 10
---
# Source: kube-starrocks/charts/starrocks/templates/configmaps.yaml
---
---
# Source: kube-starrocks/charts/starrocks/templates/starrockscluster.yaml
apiVersion: starrocks.com/v1
kind: StarRocksCluster
metadata:
  name: kube-starrocks
  namespace: kube-starrocks-1.9.6.tgz
  labels:
    cluster: kube-starrocks
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  starRocksFeSpec:
    image: "starrocks/fe-ubuntu:3.2-latest"
    replicas: 1
    imagePullPolicy: IfNotPresent
    requests:
      cpu: 4
      memory: 4Gi
    limits:
      cpu: 8
      memory: 8Gi
    service:
      type: ClusterIP
    annotations:
      app.starrocks.io/fe-config-hash: "e615d940"
    runAsNonRoot: 
    feEnvVars:
      - name: TZ
        value: Asia/Shanghai
    terminationGracePeriodSeconds: 120
    configMapInfo:
      configMapName: kube-starrocks-fe-cm
      resolveKey: fe.conf
  starRocksBeSpec:
    image: "starrocks/be-ubuntu:3.2-latest"
    replicas: 1
    imagePullPolicy: IfNotPresent
    requests:
      cpu: 4
      memory: 4Gi
    limits:
      cpu: 8
      memory: 8Gi
    service:
      type: ClusterIP
    annotations:
      app.starrocks.io/be-config-hash: "951886d3"
    runAsNonRoot: 
    beEnvVars:
      - name: TZ
        value: Asia/Shanghai
    terminationGracePeriodSeconds: 120
    configMapInfo:
      configMapName: kube-starrocks-be-cm
      resolveKey: be.conf
