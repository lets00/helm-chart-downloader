---
# Source: cluster-logging/charts/operator/templates/operatorGroup.yaml
kind: OperatorGroup
apiVersion: operators.coreos.com/v1
metadata:
  name: "openshift-logging"
  namespace: "openshift-logging"
  labels:
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "default"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "operator"
    app.startx.fr/app: "crw-operator"
    app.startx.fr/version: "v2.3.0"
    helm.sh/chart: "operator"
    app.kubernetes.io/component: "operator"
    app.kubernetes.io/part-of: "crw-operator"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "v2.3.0"
    app.startx.fr/component: "operator"
    app.kubernetes.io/component: "operator"
    app.kubernetes.io/part-of: "default"
    app.kubernetes.io/instance: "myscope-myenv-crw-operator-v2.3.0"
    app.kubernetes.io/name: "openshift-logging-operatorgroup"
  annotations:
    openshift.io/generated-by: startx-helm-operator
    olm.providedAPIs: "ClusterLogForwarder.v1.logging.openshift.io,ClusterLogging.v1.logging.openshift.io,LogFileMetricExporter.v1alpha1.logging.openshift.io"
    argocd.argoproj.io/sync-wave: "-6"
spec: 
  targetNamespaces:
    - "openshift-logging"
---
# Source: cluster-logging/charts/operator/templates/subscription.yaml
kind: Subscription
apiVersion: operators.coreos.com/v1alpha1
metadata:
  name: "cluster-logging"
  namespace: "openshift-logging"
  labels:
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "default"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "operator"
    app.startx.fr/app: "crw-operator"
    app.startx.fr/version: "v2.3.0"
    helm.sh/chart: "operator"
    app.kubernetes.io/component: "operator"
    app.kubernetes.io/part-of: "crw-operator"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "v2.3.0"
    app.startx.fr/component: "operator"
    app.kubernetes.io/component: "operator"
    app.kubernetes.io/part-of: "default"
    app.kubernetes.io/instance: "myscope-myenv-crw-operator-v2.3.0"
    app.kubernetes.io/name: "cluster-logging-subscription"
  annotations:
    openshift.io/generated-by: startx-helm-operator
    argocd.argoproj.io/sync-wave: "-5"
spec:
  installPlanApproval: "Automatic"
  channel: "stable"
  name: "cluster-logging"
  source: "redhat-operators"
  sourceNamespace: "openshift-marketplace"
---
# Source: cluster-logging/templates/clusterLogging.yaml
apiVersion: "logging.openshift.io/v1"
kind: "ClusterLogging"
metadata:
  name: "instance"
  namespace: "logging-operator"
  labels:
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "default"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "mycomponent"
    app.startx.fr/app: "default-logging"
    app.startx.fr/version: "14.6.301"
    helm.sh/chart: "cluster-logging"
    app.kubernetes.io/component: "mycomponent"
    app.kubernetes.io/part-of: "default-logging"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "14.6.301"
    app.kubernetes.io/instance: "myscope-myenv-default-logging-14.6.301"
    app.kubernetes.io/name: "instance-clusterlogging"
  annotations:
    openshift.io/generated-by: startx-helm-cluster-logging
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "10"
    helm.sh/hook-delete-policy: hook-failed
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookFailed
    argocd.argoproj.io/sync-wave: "2"
spec:
  managementState: "Managed"
  logStore:
    type: "elasticsearch" 
    retentionPolicy: 
      application:
        maxAge: 1d
      infra:
        maxAge: 7d
      audit:
        maxAge: 7d
    elasticsearch:
      nodeCount: 3
      redundancyPolicy: SingleRedundancy
      resources:
        limits:
          cpu: 1
          memory: 500Mi
        requests:
          cpu: 500m
          memory: 100Mi
      storage:
        storageClassName: "gp3-csi"
        size: "200G"
  visualization:
    type: "kibana"
    kibana:
      replicas: 3
      resources:
        limits:
          cpu: 1
          memory: 500Mi
        requests:
          cpu: 500m
          memory: 100Mi
  curation:
    type: "curator"
    curator:
      schedule: "30 3 * * *"
  collection:
      type: "vector"
