---
# Source: bookstack/charts/mysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-mysql
  namespace: bookstack-0.1.5.tgz
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.5.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
secrets:
  - name: my-release-mysql
---
# Source: bookstack/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-mysql
  namespace: bookstack-0.1.5.tgz
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.5.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mysql-root-password: "cm9vdHBhc3N3b3Jk"
  mysql-password: "cGFzc3dvcmQ="
---
# Source: bookstack/charts/mysql/templates/primary/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-mysql
  namespace: bookstack-0.1.5.tgz
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.5.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
data:
  my.cnf: |-
    
    [mysqld]
    default_authentication_plugin=mysql_native_password
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mysql
    plugin_dir=/opt/bitnami/mysql/plugin
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    datadir=/bitnami/mysql/data
    tmpdir=/opt/bitnami/mysql/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
    log-error=/opt/bitnami/mysql/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci
    
    [client]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mysql/plugin
    
    [manager]
    port=3306
    socket=/opt/bitnami/mysql/tmp/mysql.sock
    pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
---
# Source: bookstack/templates/volume.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "my-release-data"
  namespace: bookstack-0.1.5.tgz
  labels:
    app: "my-release"
    chart: "bookstack-0.1.5"
    release: "my-release"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "50Gi"
---
# Source: bookstack/charts/mysql/templates/primary/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-mysql-headless
  namespace: bookstack-0.1.5.tgz
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.5.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: primary
---
# Source: bookstack/charts/mysql/templates/primary/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-mysql
  namespace: bookstack-0.1.5.tgz
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.5.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: mysql
      nodePort: null
  selector: 
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: primary
---
# Source: bookstack/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-bookstack"
spec:
  type: ClusterIP
  ports:
    - name: 80tcp
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: "my-release-bookstack"
    release: my-release
---
# Source: bookstack/charts/mysql/templates/primary/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-mysql
  namespace: bookstack-0.1.5.tgz
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-8.5.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  selector:
    matchLabels: 
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: primary
  serviceName: my-release-mysql
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configuration: 2d7f4b327db6138e288ae1a80cf7415843fbd2e5e6fd00c798a044eb032c511c
      labels:
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-8.5.1
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
    spec:
      
      serviceAccountName: my-release-mysql
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mysql
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/component: primary
                namespaces:
                  - "bookstack-0.1.5.tgz"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: mysql
          image: docker.io/bitnami/mysql:8.0.18-r70
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-mysql
                  key: mysql-root-password
            - name: MYSQL_USER
              value: "bookstack"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-mysql
                  key: mysql-password
            - name: MYSQL_DATABASE
              value: "bookstackapp"
          ports:
            - name: mysql
              containerPort: 3306
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                  fi
                  mysqladmin status -uroot -p"${password_aux}"
          resources: 
            limits: {}
            requests: {}
          volumeMounts:
            - name: data
              mountPath: /bitnami/mysql
            - name: config
              mountPath: /opt/bitnami/mysql/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: config
          configMap:
            name: my-release-mysql
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: 
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: my-release
          app.kubernetes.io/component: primary
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "20Gi"
---
# Source: bookstack/templates/statefullset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "my-release-bookstack"
  labels:
    app: "my-release-bookstack"
    chart: "bookstack-0.1.5"
    heritage: Helm
    release: my-release
    app.kubernetes.io/name: bookstack
    helm.sh/chart: bookstack-0.1.5
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "21.12.4"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: "my-release"  
  replicas: 1
  selector:
    matchLabels:
      app: "my-release-bookstack"
      release: my-release
  template:
    metadata:
      labels:
        app: "my-release-bookstack"
        release: my-release
      annotations:
        rollme: "CQiZy"
    spec:
      containers:
      - name: bookstack
        image: "lscr.io/linuxserver/bookstack:21.12.4"
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: APP_URL
          value: https://bookstack.compagny.com
        - name: DB_USER
          value: bookstack
        - name: DB_PASS
          value: password
        - name: DB_DATABASE
          value: bookstackapp
        - name: TZ
          value: Europe/Paris
        - name: FILE_UPLOAD_SIZE_LIMIT
          value: "50"
        - name: DB_HOST
          value: "my-release-mysql"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: 80tcp
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: "my-release-data"
      volumes:
      - name: "my-release-data"
        persistentVolumeClaim:
          claimName: "my-release-data"
---
# Source: bookstack/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bookstack
  labels:
    app: bookstack
    chart: "bookstack-0.1.5"
    heritage: Helm
    release: my-release
  annotations:
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/client-body-timeout: "3600"
    nginx.ingress.kubernetes.io/client-header-timeout: "3600"
    nginx.ingress.kubernetes.io/client_max_body_size: 5000m
    nginx.ingress.kubernetes.io/proxy-body-size: 5000m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/session-cookie-expires: "86400"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
spec:
  tls:
    - hosts:
      - bookstack.company.com
      secretName: bookstack
  rules:
  - host: "bookstack.compagny.com"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: my-release-bookstack
              port:
                name: 80tcp
