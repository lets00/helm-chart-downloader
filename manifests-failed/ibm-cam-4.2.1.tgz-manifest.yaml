---
# Source: ibm-cam/templates/cam-services-psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  labels:
    name: cam-services-ps-ibm-cam-4.2.1.tgz
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  name: cam-services-psp-ibm-cam-4.2.1.tgz
spec:
  privileged: false
  allowPrivilegeEscalation: false
  hostPID: false
  hostIPC: false
  hostNetwork: false
  allowedCapabilities:
  - SETPCAP
  - AUDIT_WRITE
  - CHOWN
  - NET_RAW
  - DAC_OVERRIDE
  - FOWNER
  - FSETID
  - KILL
  - SETGID
  - SETUID
  - NET_BIND_SERVICE
  - SYS_CHROOT
  - SETFCAP
  requiredDropCapabilities:
  - MKNOD
  readOnlyRootFilesystem: true
  runAsUser:
    ranges:
    - max: 1111
      min: 999
    rule: MustRunAs
  fsGroup:
    ranges:
    - max: 1111
      min: 999
    rule: MustRunAs
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
      - max: 1111
        min: 999
    rule: MustRunAs
  volumes:
    - configMap
    - emptyDir
    - secret
    - persistentVolumeClaim
    - nfs
    - downwardAPI
    - projected
---
# Source: ibm-cam/templates/cam-cipher-migration-secret.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
  apiVersion: v1
  kind: Secret
  metadata:
    name: cam-cipher-migration-secret
    namespace: ibm-cam-4.2.1.tgz
    labels:
      "app.kubernetes.io/name": my-release-ibm-cam
      "helm.sh/chart": "ibm-cam-4.2.1"
      release: "my-release"
      "app.kubernetes.io/instance": "my-release"
      "app.kubernetes.io/managed-by": "Helm"
  data:
    newpassword: ""
    timestampfile: ""
---
# Source: ibm-cam/templates/cam-secure-values-secret.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
  apiVersion: v1
  kind: Secret
  metadata:
    name: cam-secure-values-secret
    namespace: ibm-cam-4.2.1.tgz
    labels:
      "app.kubernetes.io/name": my-release-ibm-cam
      "helm.sh/chart": "ibm-cam-4.2.1"
      release: "my-release"
      "app.kubernetes.io/instance": "my-release"
      "app.kubernetes.io/managed-by": "Helm"
  data:
    httpProxy:  "aHR0cDovL3VzZXJuYW1lOnBhc3N3b3JkQHByb3h5X2hvc3Q6cHJveHlfcG9ydA=="    
    httpsProxy:  "aHR0cDovL3VzZXJuYW1lOnBhc3N3b3JkQHByb3h5X2hvc3Q6cHJveHlfcG9ydA=="
    noProxy:  ""
    mongoDbPassword:  "ZkZDWGI1WjlSNlg3TGhr"
    mongoDbUrl:  "bW9uZ29kYjovL2NhbXVzZXI6ZkZDWGI1WjlSNlg3TGhrQGNhbS1tb25nbzoyNzAxNy9jYW0/c3NsPXRydWU="
    encryptionPassword: "ZkZDWGI1WjlSNlg3TGhr"
    mariaDbUsername:  "dWNkcGFkbWlu"
    mariaDbPassword:  "YmNiMTllZTNkZWUw"
---
# Source: ibm-cam/templates/cam-ui-secret.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
  apiVersion: v1
  kind: Secret
  metadata:
    name: cam-ui-secret
    namespace: ibm-cam-4.2.1.tgz
    labels:
      "app.kubernetes.io/name": my-release-ibm-cam
      "helm.sh/chart": "ibm-cam-4.2.1"
      release: "my-release"
      "app.kubernetes.io/instance": "my-release"
      "app.kubernetes.io/managed-by": "Helm"
  data:
    sessionKey: "b3BzQ29uc29sZS5zaWQ="
    sessionSecret:  "aHg3UndnR2tycEk0VFN5ZFJ3Y000TTNtSHJpV3RJZjE="
    sessionTTL: "NDMyMDA="
---
# Source: ibm-cam/templates/cam-configmap-audit.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: ConfigMap
metadata:
  name: audit-config
  namespace: ibm-cam-4.2.1.tgz
  labels:
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
data:
  JOURNAL_PATH: /run/systemd/journal
  logrotate-conf: "\n # rotate log files weekly\ndaily\n\n# use the syslog group by
    default, since this is the owning group # of /var/log/syslog.\n#su root syslog\n\n#
    keep 4 weeks worth of backlogs\nrotate 4\n\n# create new (empty) log files after
    rotating old ones \ncreate\n\n# uncomment this if you want your log files compressed\n
    #compress\n\n# packages drop log rotation information into this directory\n include
    /etc/logrotate.d\n# no packages own wtmp, or btmp -- we'll rotate them here\n"
  logrotate: |-
    /var/log/audit/*.log {
      copytruncate
      rotate 24
      hourly
      missingok
      notifempty
    }
---
# Source: ibm-cam/templates/cam-configmap-common.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: ConfigMap
metadata:
  name: common-config
  namespace: ibm-cam-4.2.1.tgz
  labels:
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
data:
  NODE_ENV: production
  APP_TAXONOMY: cam
  LOG4JS_LEVEL: INFO
  IDENTITY_COOKIE_PROPERTY: com.ibm.bluemix.login.Identity.yp
  DISABLE_CSRF_AUTHENTICATION: "true"
  NODE_EXTRA_CA_CERTS: /tmp/ca.crt
  APP_ROOT: /usr/src/app
  CONSOLE_URL: http://localhost:30000
  PROXY_PORT: "30000"
  ORG_GUID: dummy-org-id
  SPACE_GUID: dummy-space-id
  SERVICE_ID: dummy-service-id
  ORPHEUS_AUTH_URL: https://cam-ui-basic:39002
  IAAS_URL: https://cam-iaas:4000/api/v1/
  ORPHEUS_IAAS_URL: https://cam-iaas:4000
  TENANT_MGMT_SERVICE_URL: https://cam-tenant-api:4500/api/v1/
  ORPHEUS_TENANT_URL: https://cam-tenant-api:4500
  ORPHEUS_PROXY_URL: https://cam-proxy:30000
  ORPHEUS_UI_URL: https://cam-ui-basic:39002
  ORPHEUS_UI_INSTANCE_URL: https://cam-ui-basic:39002
  ORPHEUS_UI_CONNECTION_URL: https://cam-ui-basic:39002
  ORPHEUS_UI_TEMPLATE_URL: https://cam-ui-basic:39002
  ORPHEUS_COMPOSER_API_URL: https://cam-service-composer-api:4000
  ORPHEUS_PORTAL_UI_URL: https://cam-portal-ui:39002
  ORPHEUS_COMPOSER_UI_URL: https://cam-service-composer-ui:39002
  CDS_URL: https://cam-bpd-cds:7575
  CAM_ORCHESTRATION: https://cam-orchestration:8000/api/v1
  COMPOSER_API_URL: https://cam-service-composer-api:4000/api/v1/
  PORTAL_API_URL: http://cam-portal-api:4000/api/v1/
  PROXY_HTTPS: https
  CAM_VERSION: "4.2.0.1"
  BPD_UI_URL: https://cam-bpd-ui:8443
  DOCS_URL: https://www.ibm.com/support/knowledgecenter/SS2L37_4.2.0.0
  CERT_PATH: /usr/src/app/certs
  ICP_CLUSTER_NAME: "mycluster"
  FIPS_ENABLED: "false"
  sslCiphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
  PLATFORM: icp
  ICP_PORT: "443"
  REINITIALIZE_SECURITY: "false"
---
# Source: ibm-cam/templates/cam-bpd-appdata-pvc.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: cam-bpd-appdata-pv
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
    ## disable dynamic provisioning
  storageClassName: ""
  selector:
    matchLabels:
      type: cam-bpd-appdata
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: "15Gi"
---
# Source: ibm-cam/templates/cam-logs-pvc.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

## Conditionally create second PersistentVolumeClaim based on persistence setting
  kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name:  cam-logs-pv
    annotations:
      "helm.sh/resource-policy": keep
    labels:
      "app.kubernetes.io/name": my-release-ibm-cam
      "helm.sh/chart": "ibm-cam-4.2.1"
      release: "my-release"
      "app.kubernetes.io/instance": "my-release"
      "app.kubernetes.io/managed-by": "Helm"
    namespace: ibm-cam-4.2.1.tgz
  spec:
    ## disable dynamic provisioning
    storageClassName: ""
    selector:
      matchLabels:
        type: cam-logs
    accessModes:
      - "ReadWriteMany"
    resources:
      requests:
        storage: "10Gi"
---
# Source: ibm-cam/templates/cam-mongo-pvc.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

## Conditionally create first PersistentVolumeClaim based on persistence setting
  kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: cam-mongo-pv
    annotations:
      "helm.sh/resource-policy": keep
    labels:
      "app.kubernetes.io/name": my-release-ibm-cam
      "helm.sh/chart": "ibm-cam-4.2.1"
      release: "my-release"
      "app.kubernetes.io/instance": "my-release"
      "app.kubernetes.io/managed-by": "Helm"
    namespace: ibm-cam-4.2.1.tgz
  spec:
    ## disable dynamic provisioning
    storageClassName: ""
    selector:
      matchLabels:
        type: cam-mongo
    accessModes:
      - "ReadWriteMany"
    resources:
      requests:
        storage: "15Gi"
---
# Source: ibm-cam/templates/cam-terraform-pvc.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

## Conditionally create first PersistentVolumeClaim based on persistence setting
  kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: cam-terraform-pv
    annotations:
      "helm.sh/resource-policy": keep
    labels:
      "app.kubernetes.io/name": my-release-ibm-cam
      "helm.sh/chart": "ibm-cam-4.2.1"
      release: "my-release"
      "app.kubernetes.io/instance": "my-release"
      "app.kubernetes.io/managed-by": "Helm"
    namespace: ibm-cam-4.2.1.tgz
  spec:
    ## disable dynamic provisioning
    storageClassName: ""
    selector:
      matchLabels:
        type: cam-terraform
    accessModes:
      - "ReadWriteMany"
    resources:
      requests:
        storage: "15Gi"
---
# Source: ibm-cam/templates/cam-controller-manager-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cam-controller-manager-role-ibm-cam-4.2.1.tgz
  labels:
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
rules:
- apiGroups:
  - cloudautomationmgr.ibm.com
  resources:
  - templates
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - cloudautomationmgr.ibm.com
  resources:
  - templates/status
  - services/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: ibm-cam/templates/cam-controller-manager-rb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: cam-controller-manager-rolebinding-ibm-cam-4.2.1.tgz
  labels:
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cam-controller-manager-role-ibm-cam-4.2.1.tgz
subjects:
- kind: ServiceAccount
  name: default
  namespace: ibm-cam-4.2.1.tgz
---
# Source: ibm-cam/templates/cam-services-sa-psp.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cam-services-sa-psp
  namespace: ibm-cam-4.2.1.tgz
  labels:
    name: cam-services-sa-psp
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
rules:
- apiGroups: ["extensions"]
  resources: ["podsecuritypolicies"]
  verbs: ["use"]
  resourceNames:
    - cam-services-psp-ibm-cam-4.2.1.tgz
---
# Source: ibm-cam/templates/cam-services-sa-psp-rb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cam-services-sa-psp-rb
  namespace: ibm-cam-4.2.1.tgz
  labels:
    name: cam-services-sa-psp-rb
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cam-services-sa-psp
subjects:
- kind: ServiceAccount
  name: default
  namespace: ibm-cam-4.2.1.tgz
---
# Source: ibm-cam/templates/cam-bpd-cds-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-bpd-cds
  labels:
    name: cam-bpd-cds
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": ibm-cam-4.2.1
    release: my-release
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": Helm
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
    - port: 7575
      targetPort: 7575
      name: cam-bpd-cds
  selector:
    name: cam-bpd-cds
---
# Source: ibm-cam/templates/cam-bpd-mariadb-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
apiVersion: v1
kind: Service
metadata:
  name: cam-bpd-mariadb
  labels:
    name: cam-bpd-mariadb
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 3306
    targetPort: 3306
    name: cam-bpd-mariadb
  selector:
    name: cam-bpd-mariadb
---
# Source: ibm-cam/templates/cam-bpd-mds-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-bpd-mds
  labels:
    name: cam-bpd-mds
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": ibm-cam-4.2.1
    release: my-release
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": Helm
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
    - port: 7578
      targetPort: 7578
      name: cam-bpd-mds
  selector:
    name: cam-bpd-mds
---
# Source: ibm-cam/templates/cam-bpd-ui-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-bpd-ui
  labels:
    name: cam-bpd-ui
    "app.kubernetes.io/name": ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: my-release
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": Helm
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
    - port: 8443
      targetPort: 8443
      name: cam-bpd-ui
  selector:
    name: cam-bpd-ui
---
# Source: ibm-cam/templates/cam-controller-manager-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  name: cam-controller-manager-service
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 8443
    targetPort: 8443
  selector:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
---
# Source: ibm-cam/templates/cam-iaas-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-iaas
  labels:
    name: cam-iaas
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 4000
    targetPort: 4000
    name: cam-iaas
  selector:
    name: cam-iaas
---
# Source: ibm-cam/templates/cam-mongo-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
apiVersion: v1
kind: Service
metadata:
  name: cam-mongo
  labels:
    name: cam-mongo
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 27017
    targetPort: 27017
    name: cam-mongo
  selector:
    name: cam-mongo
---
# Source: ibm-cam/templates/cam-orchestration-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-orchestration
  labels:
    name: cam-orchestration
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 8000
    targetPort: 8000
    name: cam-orchestration
  selector:
    name: cam-orchestration
---
# Source: ibm-cam/templates/cam-portal-ui-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-portal-ui
  labels:
    name: cam-portal-ui
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 39002
    targetPort: 39002
    name: cam-portal-ui
  selector:
    name: cam-portal-ui
---
# Source: ibm-cam/templates/cam-provider-ansible-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
  name: cam-provider-ansible
  labels:
    name: cam-provider-ansible
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 7060
    targetPort: 7060
    name: cam-provider-ansible
  selector:
    name: cam-provider-ansible
---
# Source: ibm-cam/templates/cam-provider-bpm-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-provider-bpm
  labels:
    name: cam-provider-bpm
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 7030
    targetPort: 7030
    name: cam-provider-bpm
  selector:
    name: cam-provider-bpm
---
# Source: ibm-cam/templates/cam-provider-broker-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-provider-broker
  labels:
    name: cam-provider-broker
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 7050
    targetPort: 7050
    name: cam-provider-broker
  selector:
    name: cam-provider-broker
---
# Source: ibm-cam/templates/cam-provider-helm-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-provider-helm
  labels:
    name: cam-provider-helm
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 7010
    targetPort: 7010
    name: cam-provider-helm
  selector:
    name: cam-provider-helm
---
# Source: ibm-cam/templates/cam-provider-ico-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-provider-ico
  labels:
    name: cam-provider-ico
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 7020
    targetPort: 7020
    name: cam-provider-ico
  selector:
    name: cam-provider-ico
---
# Source: ibm-cam/templates/cam-provider-terraform-api-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-provider-terraform-api
  labels:
    name: cam-provider-terraform-api
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 7000
    targetPort: 7000
    name: cam-provider-terraform-api
  selector:
    name: cam-provider-terraform-api
---
# Source: ibm-cam/templates/cam-proxy-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  name: cam-proxy
  labels:
    name: cam-proxy
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  type: NodePort
  ports:
  - port: 30000
    targetPort: 30000
    nodePort: 30000
    name: cam-proxy-https
  selector:
    name: cam-proxy
---
# Source: ibm-cam/templates/cam-service-composer-api-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-service-composer-api
  labels:
    name: cam-service-composer-api
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 4000
    targetPort: 4000
    name: cam-service-composer-api
  selector:
    name: cam-service-composer-api
---
# Source: ibm-cam/templates/cam-service-composer-ui-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-service-composer-ui
  labels:
    name: cam-service-composer-ui
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 39002
    targetPort: 39002
    name: cam-service-composer-ui
  selector:
    name: cam-service-composer-ui
---
# Source: ibm-cam/templates/cam-tenant-api-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-tenant-api
  labels:
    name: cam-tenant-api
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 4500
    targetPort: 4500
    name: cam-tenant-api
  selector:
    name: cam-tenant-api
---
# Source: ibm-cam/templates/cam-ui-basic-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/scheme: 'https'
  name: cam-ui-basic
  labels:
    name: cam-ui-basic
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  ports:
  - port: 39002
    targetPort: 39002
    name: cam-ui-basic
  selector:
    name: cam-ui-basic
---
# Source: ibm-cam/templates/cam-bpd-cds-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-bpd-cds
  labels:
    name: cam-bpd-cds
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": ibm-cam-4.2.1
    release: my-release
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": Helm
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-bpd-cds
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-bpd-cds
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": ibm-cam-4.2.1
        release: my-release
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": Helm
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-bpd-cds
      containers:
        - name: cam-bpd-cds
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - MKNOD
          image: "cp.icr.io/cp/icam-bpd-cds:4.2.0.1-x86_64"
          imagePullPolicy: IfNotPresent
          ports:
            - name: liveness-port
              containerPort: 7575
          env:
            - name: LICENSE
              value: "accept"
            - name: DEBUG
              value: "false"
            - name: CAM_ENABLED
              value: "true"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: LOG_LEVEL
              value: info
          livenessProbe:
            httpGet:
              path: /
              port: liveness-port
              scheme: HTTPS
            initialDelaySeconds: 15
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /
              port: liveness-port
              scheme: HTTPS
            initialDelaySeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: python-empty 
              mountPath: /usr/lib/python2.7/site-packages/clouddiscoveryservice
            - name: logging-setup 
              mountPath: /etc/supervisor/conf.d 
            - name: tmp-empty 
              mountPath: /tmp
            - name: cam-cert
              mountPath: /usr/src/app/certs
              readOnly: true
            - name:  cam-logs-pv
              mountPath: /var/camlog
      volumes:
        - name: python-empty
          emptyDir: {}
        - name: logging-setup 
          emptyDir: {}
        - name: tmp-empty 
          emptyDir: {}
        - name: cam-cert
          secret:
            secretName: cert
        - name:  cam-logs-pv
          persistentVolumeClaim:
            claimName:  cam-logs-pv
---
# Source: ibm-cam/templates/cam-bpd-mariadb-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-bpd-mariadb
  labels:
    name: cam-bpd-mariadb
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  selector:
    matchLabels:
      name: cam-bpd-mariadb
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: cam-bpd-mariadb
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-bpd-mariadb
      containers:
      - name: cam-bpd-mariadb
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-bpd-mariadb:4.2.0.1-x86_64"
        imagePullPolicy: "IfNotPresent"
        resources:
          limits:
            cpu: 200m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
           secretKeyRef:
            name: cam-secure-values-secret
            key: mariaDbPassword
        - name: MYSQL_PASSWORD
          valueFrom:
           secretKeyRef:
            name: cam-secure-values-secret
            key: mariaDbPassword
        - name: MYSQL_USER
          valueFrom:
           secretKeyRef:
            name: cam-secure-values-secret
            key: mariaDbUsername
        - name: MYSQL_DATABASE
          value: ibm_ucdp
        ports:
        - name: cam-bpd-mariadb
          containerPort: 3306
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 75
          timeoutSeconds: 20
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 75
          timeoutSeconds: 20
        volumeMounts:
        - name: data
          mountPath: /usr/local/mariadb-10.2.24-linux-s390x/data
        - name: tmp-empty 
          mountPath: /tmp
        - name: cam-bpd-appdata-pv
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: cam-cert
          mountPath: /usr/src/app/certs
          readOnly: true
        - name: cam-logs-pv
          mountPath: /var/camlog
      volumes:
      - name: data 
        emptyDir: {}
      - name: tmp-empty 
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name: "cam-bpd-appdata-pv"
        persistentVolumeClaim:
          claimName: cam-bpd-appdata-pv
      - name:  cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
---
# Source: ibm-cam/templates/cam-bpd-mds-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-bpd-mds
  labels:
    name: cam-bpd-mds
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": ibm-cam-4.2.1
    release: my-release
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": Helm
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-bpd-mds
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-bpd-mds
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": ibm-cam-4.2.1
        release: my-release
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": Helm
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-bpd-mds
      containers:
        - name: cam-bpd-mds
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - MKNOD
          image: "cp.icr.io/cp/icam-bpd-mds:4.2.0.1-x86_64"
          imagePullPolicy: IfNotPresent
          ports:
            - name: liveness-port
              containerPort: 7578
          envFrom:
          - configMapRef:
              name: common-config
          env:
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cam-secure-values-secret
                  key: mongoDbPassword
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: cam-secure-values-secret
                  key: mongoDbUrl
            - name: LICENSE
              value: "accept"
            - name: CAM_ENABLED
              value: "true"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: LOG_LEVEL
              value: info
          livenessProbe:
            httpGet:
              path: /
              port: liveness-port
              scheme: HTTPS
            initialDelaySeconds: 300
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /
              port: liveness-port
              scheme: HTTPS
            initialDelaySeconds: 300
            periodSeconds: 20
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: server-log 
              mountPath: /usr/src/app/logs
            - name: tmp-empty 
              mountPath: /tmp 
            - name: cam-cert
              mountPath: /usr/src/app/certs
              readOnly: true
            - name:  cam-logs-pv
              mountPath: /var/camlog
      volumes:
        - name: server-log
          emptyDir: {}
        - name: tmp-empty 
          emptyDir: {}
        - name: cam-cert
          secret:
            secretName: cert
        - name:  cam-logs-pv
          persistentVolumeClaim:
            claimName:  cam-logs-pv
---
# Source: ibm-cam/templates/cam-bpd-ui-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-bpd-ui
  labels:
    name: cam-bpd-ui
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: my-release
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": Helm
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-bpd-ui
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-bpd-ui
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: my-release
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": Helm
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-bpd-ui
      containers:
      - name: cam-bpd-ui
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-bpd-ui:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8443
        livenessProbe:
          httpGet:
            path: /landscaper/login
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 180
          periodSeconds: 5
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /landscaper/login
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
        envFrom:
        - configMapRef:
            name: common-config
        env:
          - name: DB_NAME
            value: ibm_ucdp
          - name: DB_USER
            valueFrom:
             secretKeyRef:
              name: cam-secure-values-secret
              key: mariaDbUsername
          - name: DB_PASSWORD
            valueFrom:
             secretKeyRef:
              name: cam-secure-values-secret
              key: mariaDbPassword             
          - name: DB_TCP_PORT
            value: "3306"
          - name: DB_TCP_URL
            value: cam-bpd-mariadb
          - name: DB_TYPE
            value: mariadb
          - name: DB_SECURE
            value: "true"
          - name: LICENSE
            value: "accept"
          - name: WEB_SERVER_HOSTNAME
            valueFrom:
              configMapKeyRef:
                name: oauth-client-map
                key: PROXY_IP
          - name: DISCOVERY_SERVER_URL
            value: https://cam-bpd-cds:7575
          - name: MODULE_SERVICE_URL
            value: https://cam-bpd-mds:7578
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: LOG_LEVEL
            value: info
          - name: ICP_MASTER_IP
            valueFrom:
              configMapKeyRef:
                name: oauth-client-map
                key: MASTER_IP
          - name: ICP_PORT
            valueFrom:
              configMapKeyRef:
                name: common-config
                key: ICP_PORT
          - name: ORPHEUS_IDENTITY_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: common-config
                key: ORPHEUS_TENANT_URL
          - name: ORPHEUS_IDENTITY_URL
            value: https://$(ICP_MASTER_IP):$(ICP_PORT)/idprovider
          - name: ORPHEUS_IDENTITY_API_URL
            value: $(ORPHEUS_IDENTITY_URL)
          - name: wlpClientId
            valueFrom:
              secretKeyRef:
                name: cam-api-secret
                key: wlp_client_id
          - name: wlpClientSecret
            valueFrom:
              secretKeyRef:
                name: cam-api-secret
                key: wlp_client_secret
          - name: wlp_scope
            value: openid+profile+email
          - name: ICP_PROXY_IP
            valueFrom:
              configMapKeyRef:
                name: oauth-client-map
                key: PROXY_IP
          - name: wlpCallbackUrl
            value: /cam/auth/liberty/callback
          - name: bpdCallbackUrl
            value: /landscaper/oauth/callback
          - name: PLATFORM
            valueFrom:
              configMapKeyRef:
                name: common-config
                key: PLATFORM
        volumeMounts:
          - name: java-config
            mountPath: /opt/ibm-ucd-patterns/java/jre/lib/security
          - name: tmp-empty 
            mountPath: /tmp
          - name: config-setup 
            mountPath: /opt/ibm-ucd-patterns/conf/server
          - name: tomcat-setup 
            mountPath: /opt/ibm-ucd-patterns/opt/tomcat
          - name: supervisord-setup
            mountPath: /etc/supervisor/conf.d
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name: "cam-bpd-appdata-pv"
            mountPath: "/opt/ibm-ucd-patterns/workspace"
            subPath: workspace
          - name: "cam-bpd-appdata-pv"
            mountPath: "/opt/ibm-ucd-patterns/repositories"
            subPath: repositories
          - name:  cam-logs-pv
            mountPath: /var/camlog
        resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 1000m
              memory: 1Gi
      volumes:
      - name: java-config
        emptyDir: {}
      - name: tmp-empty
        emptyDir: {}
      - name: tomcat-setup
        emptyDir: {}
      - name: config-setup
        emptyDir: {}
      - name: supervisord-setup 
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name: "cam-bpd-appdata-pv"
        persistentVolumeClaim:
          claimName: cam-bpd-appdata-pv
      - name:  cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
---
# Source: ibm-cam/templates/cam-iaas-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-iaas
  labels:
    name: cam-iaas
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-iaas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-iaas
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-iaas
      volumes:
      - name: tmp-empty
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name:  cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      imagePullSecrets:
      containers:
      - name: cam-iaas
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 4000
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/v1/ready
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name:  cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: CIPHER_PWD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: encryptionPassword
        - name: CIPHER_PWD_NEW
          valueFrom:
            secretKeyRef:
              name: cam-cipher-migration-secret
              key: newpassword
        - name: CIPHER_MIGRATION_TIMESTAMP_FILE
          valueFrom:
            secretKeyRef:
              name: cam-cipher-migration-secret
              key: timestampfile
        - name: CAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: token
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: PLUGIN_ENDPOINTURL_plugin_terraform
          value: https://cam-provider-terraform-api:7000/api
        - name: PLUGIN_ENDPOINTURL_plugin_helm
          value: https://cam-provider-helm:7010/api
        - name: PLUGIN_ENDPOINTURL_plugin_ico
          value: https://cam-provider-ico:7020/api
        - name: PLUGIN_ENDPOINTURL_plugin_bpm
          value: https://cam-provider-bpm:7030/api
        - name: PLUGIN_ENDPOINTURL_plugin_broker
          value: https://cam-provider-broker:7050/api
        - name: PLUGIN_ENDPOINTURL_plugin_ansible
          value: https://cam-provider-ansible:7060/api
        - name: STORE_PROXY_URL
          value: https://cam-provider-broker:7050/api/connector
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: info
        - name: ACTIVATE_BPM
          value: "false"
        - name: ACTIVATE_ICO
          value: "false"
        - name: ACTIVATE_BROKER
          value: "false"
        - name: ACTIVATE_ANSIBLE
          value: "false"
        - name: RETRY_SUBMIT_TIMEOUT
          value: "3600000"
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: ICP_CLUSTER_CA_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: CLUSTER_CA_DOMAIN
        - name: ICP_DEFAULT_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: oauth-client-secret
              key: DEFAULT_ADMIN_USER
        - name: AUDIT_ENABLED
          value: "false"
        - name: AUDIT_LOG_PATH
          value: /var/audit/cam-iaas-audit.log
        - name: AUDIT_INITIATOR_HOST_ADDRESS_HEADER
          value: X-Forwarded-For
        - name: SLM_TAG_PATH
          value: /var/camlog/cam.slmtag
        - name: SERVICE_NAME
          value: cam-iaas
        - name: CAM_OFFLINE
          value: "false"
---
# Source: ibm-cam/templates/cam-mongo-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-mongo
  labels:
    name: cam-mongo
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-mongo
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: cam-mongo
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-mongo
      volumes:
      - name: cam-cert
        secret:
          secretName: cert
      - name: tmp-empty 
        emptyDir: {}
      - name: cam-mongo-pv
        persistentVolumeClaim:
          claimName: cam-mongo-pv
      containers:
      - name: cam-mongo
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-mongo:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: 'root'
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: MONGODB_USERNAME
          value: 'camuser'
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: MONGODB_DATABASE
          value: 'cam'
        - name: MONGODB_SSL
          value: 'true'
        - name: CA_CERT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: NODE_EXTRA_CA_CERTS
        ports:
        - name: mongo
          containerPort: 27017
        livenessProbe:
          tcpSocket:
            port: mongo
          initialDelaySeconds: 30
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: mongo
          initialDelaySeconds: 30
          periodSeconds: 20
        resources:
          requests:
            memory: 2Gi
            cpu: 100m
          limits:
            memory: 4Gi
            cpu: 500m
        volumeMounts:
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name: "cam-mongo-pv"
            mountPath: /data/db
          - name: tmp-empty
            mountPath: /tmp
---
# Source: ibm-cam/templates/cam-orchestration-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-orchestration
  labels:
    name: cam-orchestration
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-orchestration
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-orchestration
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-orchestration
      volumes:
      - name: stacks-folder
        emptyDir: {}
      - name: tmp-empty 
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name:  cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      containers:
      - name: cam-orchestration
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-orchestration:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 8000
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: stacks-folder
            mountPath: /home/node/stacks
          - name: tmp-empty
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name:  cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: CAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: token
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT              
        - name: IAAS_POLLING_INTERVAL
          value: 20s
        - name: IAAS_POLLING_ON_ERROR_INTERVAL
          value: 30s
        - name: IAAS_DEFAULT_POLLING_TIMEOUT
          value: 12h
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: info
        # LOG_DIR is used by service blueprint provider
        - name: LOG_DIR
          value: /var/camlog/cam-orchestration
---
# Source: ibm-cam/templates/cam-portal-ui-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-portal-ui
  labels:
    name: cam-portal-ui
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-portal-ui
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-portal-ui
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-portal-ui
      volumes:
      - name: tmp-empty
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name:  cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      containers:
      - name: cam-portal-ui
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-portal-ui:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 39002
        livenessProbe:
          httpGet:
            path: /portal/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /portal/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name:  cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: APP_CONTEXT
          value: /portal
        - name: sessionKey
          valueFrom:
            secretKeyRef:
              name: cam-ui-secret
              key: sessionKey
        - name: sessionSecret
          valueFrom:
            secretKeyRef:
              name: cam-ui-secret
              key: sessionSecret
        - name: sessionTTL
          valueFrom:
            secretKeyRef:
              name: cam-ui-secret
              key: sessionTTL
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: wlpClientId
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: wlp_client_id
        - name: wlpClientSecret
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: wlp_client_secret
        - name: wlp_scope
          value: openid+profile+email
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: info
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: "0"
---
# Source: ibm-cam/templates/cam-provider-ansible-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-provider-ansible
  labels:
    name: cam-provider-ansible
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    productName: "Cloud Automation Manager"
    productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
    productVersion: "4.2.0.1"
spec:
  replicas: 0
  selector:
    matchLabels:
      name: cam-provider-ansible
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-provider-ansible
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-provider-ansible
      volumes:
      - name: tmp-empty
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name: cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      containers:
      - name: cam-provider-ansible
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-provider-ansible:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 7060
        livenessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty 
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name: cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: CAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: token
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: BLUEMIX_HOME
          value: /helmuser_common/.bluemix
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: info
---
# Source: ibm-cam/templates/cam-provider-bpm-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-provider-bpm
  labels:
    name: cam-provider-bpm
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    productName: "Cloud Automation Manager"
    productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
    productVersion: "4.2.0.1"
spec:
  progressDeadlineSeconds: 1800
  replicas: 0
  selector:
    matchLabels:
      name: cam-provider-bpm
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-provider-bpm
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-provider-bpm
      volumes:
      - name: tmp-empty 
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name: cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      containers:
      - name: cam-provider-bpm
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-provider-bpm:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 7030
        livenessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty 
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name: cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: CAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: token
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: BLUEMIX_HOME
          value: /helmuser_common/.bluemix
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: info
---
# Source: ibm-cam/templates/cam-provider-broker-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-provider-broker
  labels:
    name: cam-provider-broker
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    productName: "Cloud Automation Manager"
    productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
    productVersion: "4.2.0.1"
spec:
  progressDeadlineSeconds: 1800
  replicas: 0
  selector:
    matchLabels:
      name: cam-provider-broker
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-provider-broker
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-provider-broker
      volumes:
      - name: tmp-empty 
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name: cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      containers:
      - name: cam-provider-broker
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-provider-broker:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 7050
        livenessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty 
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name: cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: CAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: token
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: BLUEMIX_HOME
          value: /helmuser_common/.bluemix
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: info
        - name: CAM_PROVIDER_BROKER_NOTIFICATION_API
          value: https://cam-provider-broker:7050/api/connector/serviceNotification/
---
# Source: ibm-cam/templates/cam-provider-helm-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-provider-helm
  labels:
    name: cam-provider-helm
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    productName: "Cloud Automation Manager"
    productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
    productVersion: "4.2.0.1"
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-provider-helm
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-provider-helm
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-provider-helm
      volumes:
      - name: tmp-empty 
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name: cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      containers:
      - name: cam-provider-helm
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-provider-helm:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 7010
        livenessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty 
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name: cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: CAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: token
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: BLUEMIX_HOME
          value: /helmuser_common/.bluemix
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: info
---
# Source: ibm-cam/templates/cam-provider-ico-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-provider-ico
  labels:
    name: cam-provider-ico
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    productName: "Cloud Automation Manager"
    productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
    productVersion: "4.2.0.1"
spec:
  progressDeadlineSeconds: 1800
  replicas: 0
  selector:
    matchLabels:
      name: cam-provider-ico
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-provider-ico
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-provider-ico
      volumes:
      - name: tmp-empty
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name: cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      containers:
      - name: cam-provider-ico
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-provider-ico:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 7020
        livenessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name: cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: CAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: token
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: BLUEMIX_HOME
          value: /helmuser_common/.bluemix
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: info
---
# Source: ibm-cam/templates/cam-provider-terraform-api-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-provider-terraform-api
  labels:
    name: cam-provider-terraform-api
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-provider-terraform-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-provider-terraform-api
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1111
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-provider-terraform-api
      volumes:
      - name: tmp-empty
        emptyDir: {}
      - name: stacks-empty
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name: cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      - name: cam-terraform-pv
        persistentVolumeClaim:
          claimName:  cam-terraform-pv
      containers:
      - name: cam-provider-terraform-api
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-provider-terraform:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 7000
        livenessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name: cam-logs-pv
            mountPath: /var/camlog
          - name: cam-terraform-pv
            mountPath: /home/terraform
            subPath: cam-provider-terraform
          - name: stacks-empty
            mountPath: /stacks
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: CIPHER_PWD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: encryptionPassword
        - name: CIPHER_PWD_NEW
          valueFrom:
            secretKeyRef:
              name: cam-cipher-migration-secret
              key: newpassword
        - name: CIPHER_MIGRATION_TIMESTAMP_FILE
          valueFrom:
            secretKeyRef:
              name: cam-cipher-migration-secret
              key: timestampfile
        - name: IAM_CLIENT_ID
        - name: IAM_CLIENT_ID_STAGE1
        - name: IAM_SECRET
        - name: IAM_SECRET_STAGE1
        - name: TENANT_MGMT_SERVICE_TOKEN
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: token
        - name: CAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: token
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: TERRAFORM_HOME
          value: /home/terraform
        - name: TERRAFORM_UID
          value: "1111"
        - name: TERRAFORM_GID
          value: "1111"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: info
        - name: MAX_LOCAL_TERRAFORM_JOBS
          value: "100"
---
# Source: ibm-cam/templates/cam-proxy-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-proxy
  labels:
    name: cam-proxy
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-proxy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-proxy
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-proxy
      volumes:
      - name: nginx-empty
        emptyDir: {}
      - name: logrotate-setup
        emptyDir: {}
      - name: tmp-empty 
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name:  cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      containers:
      - name: cam-proxy
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-proxy:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 30000
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /cam/status
            port: liveness-port
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /cam/status
            port: liveness-port
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name:  cam-logs-pv
            mountPath: /var/camlog
          - name: tmp-empty
            mountPath: /usr/src/nginx
          - name: logrotate-setup
            mountPath: /usr/src/logrotate
          - name: nginx-empty
            mountPath: /var/lib/nginx
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: info
---
# Source: ibm-cam/templates/cam-service-composer-api-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-service-composer-api
  labels:
    name: cam-service-composer-api
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-service-composer-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-service-composer-api
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-service-composer-api
      volumes:
      - name: tmp-empty
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name:  cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      imagePullSecrets:
      containers:
      - name: cam-service-composer-api
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-service-composer-api:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 4000
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/v1/ready
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name:  cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: CAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: token
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_DEFAULT_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: oauth-client-secret
              key: DEFAULT_ADMIN_USER
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: FILE_LIMIT
          value: 3mb
        - name: CAM_PROVIDER_BROKER
          value: https://cam-provider-broker:7050/api/
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SCL_MIGRATION_REQUIRED
          value: "true"
        - name: SI_MIGRATION_REQUIRED
          value: "true"
        - name: SCL_Service_MIGRATION_REQUIRED
          value: "true"
        - name: COMPATIBILITY_MODE
          value: "false"
        - name: FEATURE_APPROVAL_FOR_EDIT
          value: "false"
        - name: FEATURE_APPROVAL_FOR_UPGRADE_DOWNGRADE
          value: "false"
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: info
        - name: SERVICE_NAME
          value: cam-service-composer-api
        - name: AUDIT_ENABLED
          value: "false"
        - name: AUDIT_LOG_PATH
          value: /var/audit/cam-service-composer-api-audit.log
        - name: AUDIT_INITIATOR_HOST_ADDRESS_HEADER
          value: X-Forwarded-For
---
# Source: ibm-cam/templates/cam-service-composer-ui-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-service-composer-ui
  labels:
    name: cam-service-composer-ui
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-service-composer-ui
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-service-composer-ui
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-service-composer-ui
      volumes:
      - name: tmp-empty 
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name:  cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      containers:
      - name: cam-service-composer-ui
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-service-composer-ui:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 39002
        livenessProbe:
          httpGet:
            path: /servicecomposer/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /servicecomposer/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty 
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name:  cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: APP_CONTEXT
          value: /servicecomposer
        - name: sessionKey
          valueFrom:
            secretKeyRef:
              name: cam-ui-secret
              key: sessionKey
        - name: sessionSecret
          valueFrom:
            secretKeyRef:
              name: cam-ui-secret
              key: sessionSecret
        - name: sessionTTL
          valueFrom:
            secretKeyRef:
              name: cam-ui-secret
              key: sessionTTL
        - name: CAM_ADMIN_USER
          value: bluemix.cam_user@cam.com
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: wlpClientId
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: wlp_client_id
        - name: wlpClientSecret
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: wlp_client_secret
        - name: wlp_scope
          value: openid+profile+email
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: info
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: "0"
---
# Source: ibm-cam/templates/cam-tenant-api-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-tenant-api
  labels:
    name: cam-tenant-api
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-tenant-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-tenant-api
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-tenant-api
      volumes:
      - name: tmp-empty 
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name:  cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      containers:
      - name: cam-tenant-api
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-tenant-api:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 4500
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/v1/ready
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name:  cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: CAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: token
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: ICP_CLUSTER_CA_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: CLUSTER_CA_DOMAIN
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: ORPHEUS_AUTH_DIRECTORY_URL
          value: http://cam-auth-service:3100
        - name: ICP_DEFAULT_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: oauth-client-secret
              key: DEFAULT_ADMIN_USER
        - name: CAM_HELM_RELEASE_NAME
          value: my-release
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG_LEVEL
          value: info
        - name: WLP_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: wlp_client_id
        - name: WLP_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: wlp_client_secret
        - name: IAM_DEPLOY_API_KEY
          value: 
        - name: ICP_WLP_CLIENT_REGISTRATION_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-client-secret
              key: WLP_CLIENT_REGISTRATION_SECRET
---
# Source: ibm-cam/templates/cam-ui-basic-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-ui-basic
  labels:
    name: cam-ui-basic
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
  namespace: ibm-cam-4.2.1.tgz
spec:
  progressDeadlineSeconds: 1800
  replicas: 1
  selector:
    matchLabels:
      name: cam-ui-basic
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-ui-basic
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "IBMCloudAutomationManager_5737E67_4200_CE_000"
        productVersion: "4.2.0.1"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      hostname: cam-ui-basic
      volumes:
      - name: tmp-empty
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: cert
      - name:  cam-logs-pv
        persistentVolumeClaim:
          claimName:  cam-logs-pv
      imagePullSecrets:
      containers:
      - name: cam-ui-basic
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "cp.icr.io/cp/icam-ui-basic:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        ports:
        - name: liveness-port
          containerPort: 39002
        livenessProbe:
          httpGet:
            path: /ui/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /ui/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1500Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
          - name: tmp-empty
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name:  cam-logs-pv
            mountPath: /var/camlog
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: cam-secure-values-secret
              key: mongoDbUrl
        - name: APP_CONTEXT
          value: /ui
        - name: sessionKey
          valueFrom:
            secretKeyRef:
              name: cam-ui-secret
              key: sessionKey
        - name: sessionSecret
          valueFrom:
            secretKeyRef:
              name: cam-ui-secret
              key: sessionSecret
        - name: sessionTTL
          valueFrom:
            secretKeyRef:
              name: cam-ui-secret
              key: sessionTTL
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        - name: wlpClientId
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: wlp_client_id
        - name: wlpClientSecret
          valueFrom:
            secretKeyRef:
              name: cam-api-secret
              key: wlp_client_secret
        - name: wlp_scope
          value: openid+profile+email
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: wlpCallbackUrl
          value: /cam/auth/liberty/callback
        - name: disableSectionIds
          value: '["monitor","servicecomposer"]'
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: "0"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: info
        - name: SERVICE_NAME
          value: cam-ui-basic
        - name: AUDIT_ENABLED
          value: "false"
        - name: AUDIT_LOG_PATH
          value: /var/audit/cam-ui-basic-audit.log
        - name: AUDIT_INITIATOR_HOST_ADDRESS_HEADER
          value: X-Forwarded-For
        - name: APP_CONTEXT_BASIC
          value: /ui
        - name: APP_CONTEXT_CONNECTIONS
          value: /connections
        - name: APP_CONTEXT_INSTANCES
          value: /instances
        - name: APP_CONTEXT_TEMPLATES
          value: /templates
---
# Source: ibm-cam/templates/cam-broker-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
---
# Source: ibm-cam/templates/cam-broker-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
---
# Source: ibm-cam/templates/cam-controller-statefulset.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2019. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
---
# Source: ibm-cam/templates/cam-hybrid-ui.yaml
# Licensed Materials - Property of IBM
# (C) Copyright IBM Corporation 2019 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
---
# Source: ibm-cam/templates/cam-provider-terraform-runtime-deployment.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
---
# Source: ibm-cam/templates/cam-provider-terraform-runtime-service.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
---
# Source: ibm-cam/templates/mcmp-certificate-secret.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
---
# Source: ibm-cam/templates/secret.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
---
# Source: ibm-cam/templates/cam-certificate.yaml
###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: cert
  namespace: ibm-cam-4.2.1.tgz
  labels:
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  secretName: cert
  issuerRef:
    name: icp-ca-issuer
    kind: ClusterIssuer
  commonName: cert
  dnsNames:
    - cam-bpd-cds
    - cam-bpd-mariadb
    - cam-bpd-mds
    - cam-bpd-ui
    - cam-broker
    - cam-iaas
    - cam-mongo
    - cam-orchestration
    - cam-portal-ui
    - cam-provider-helm
    - cam-provider-ico
    - cam-provider-terraform-api
    - cam-provider-terraform-runtime
    - cam-proxy
    - cam-service-composer-api
    - cam-service-composer-ui
    - cam-tenant-api
    - cam-ui-basic
    - cam-ui-connections
    - cam-ui-instances
    - cam-ui-templates
    - cam-controller-webhook-svc
    - cam-controller-webhook
    - cam-controller.webhook.com
    - controller.webhook.com
    - '*.ibm-cam-4.2.1.tgz.pod.cluster.local'
    - '*.ibm-cam-4.2.1.tgz.svc.cluster.local'
---
# Source: ibm-cam/templates/cam-services-sa-csb-patch.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cam-services-sa-csb-patch-ibm-cam-4.2.1.tgz
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-8"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    name: cam-services-sa-csb-patch-ibm-cam-4.2.1.tgz
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
rules: 
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - customresourcedefinitions
  verbs:
  - "*"
---
# Source: ibm-cam/templates/cam-services-sa-csb-patch-rb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cam-services-sa-csb-patch-rb-ibm-cam-4.2.1.tgz
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-7"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    name: cam-services-sa-csb-patch-rb-ibm-cam-4.2.1.tgz
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cam-services-sa-csb-patch-ibm-cam-4.2.1.tgz
subjects:
- kind: ServiceAccount
  name: default
  namespace: ibm-cam-4.2.1.tgz
---
# Source: ibm-cam/templates/cam-services-sa-view.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cam-services-sa-view
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-8"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    name: cam-services-sa-view
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
rules:
- apiGroups: [""]
  resources:
  - services
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - secrets
  verbs: ["get", "create", "patch", "delete"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get", "create", "patch", "delete"]
---
# Source: ibm-cam/templates/cam-services-sa-view-rb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cam-services-sa-view-rb
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-7"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
    name: cam-services-sa-view-rb
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cam-services-sa-view
subjects:
- kind: ServiceAccount
  name: default
  namespace: ibm-cam-4.2.1.tgz
---
# Source: ibm-cam/templates/tests/test-cam-bpd-cds.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-bpd-cds-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-bpd-cds-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-bpd-cds-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-bpd-cds:7575"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-cam-bpd-mds.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-bpd-mds-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-bpd-mds-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-bpd-cds-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-bpd-mds:7578"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-cam-bpd-ui.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-bpd-ui-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-bpd-ui-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-bpd-ui-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "sleep 180 && wget --no-check-certificate -O - https://cam-bpd-ui:8443/"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-cam-broker.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-broker-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-broker-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-broker-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-broker:4000/api/v2/health"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-cam-iaas.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-iaas-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-iaas-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-iaas-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-iaas:4000/api/v1/health"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-cam-orchestration.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-orchestration-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-orchestration-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-orchestration-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-orchestration:8000/api/v1/health"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-cam-portal-ui.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-portal-ui-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-portal-ui-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-portal-ui-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-portal-ui:39002/portal/health"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-cam-proxy.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-proxy-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-proxy-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-proxy-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-proxy:30000/cam/status"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-cam-service-composer-api.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-service-composer-api-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-service-composer-api-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-service-composer-api-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-service-composer-api:4000/api/v1/health"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-cam-service-composer-ui.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-service-composer-ui-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-service-composer-ui-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-service-composer-ui-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-service-composer-ui:39002/servicecomposer/health"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-cam-tenant-api.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-tenant-api-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-tenant-api-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-tenant-api-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-tenant-api:4500/api/v1/health"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-cam-ui-basic.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-ui-basic-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-ui-basic-test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-ui-basic-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-ui-basic:39002/ui/health"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/tests/test-provider-terraform-api-local.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-cam-provider-terraform-api-test"
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": test-success
  labels:
    name: "my-release-cam-provider-terraform-api--test"
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1111
    fsGroup: 1000
    supplementalGroups:
      - 1000
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
  containers:
  - name: my-release-cam-provider-terraform-api-test
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - MKNOD
    image: "cp.icr.io/cp/icam-iaas:4.2.0.1-x86_64"
    imagePullPolicy: IfNotPresent
    command: ["sh", "-c", "wget --no-check-certificate -O - https://cam-provider-terraform-api:7000/api/health"]
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: 50m
  restartPolicy: Never
---
# Source: ibm-cam/templates/cam-crd-gen-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: template-crd-gen-job
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    name: template-crd-gen-job
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  backoffLimit: 5 
  activeDeadlineSeconds: 600
  template:
    metadata:
      name: template-crd-gen-job
      labels:
        name: template-crd-gen-job
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      volumes:
      - name: tmp-empty 
        emptyDir: {}
      containers:
      - name: template-crd-gen
        volumeMounts:
          - name: tmp-empty
            mountPath: /tmp
        image: "cp.icr.io/cp/icam-tenant-api:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        command:
        - "/bin/bash" 
        - -c
        - |
          cat <<EOF | kubectl apply -f -
          apiVersion: apiextensions.k8s.io/v1beta1
          kind: CustomResourceDefinition
          metadata:
            creationTimestamp: null
            labels:
              controller-tools.k8s.io: "1.0"
            name: templates.cloudautomationmgr.ibm.com
          spec:
            additionalPrinterColumns:
            - JSONPath: .metadata.creationTimestamp
              name: Age
              type: date
            - JSONPath: .status.action
              description: Last Action Performed
              format: byte
              name: Action
              type: string
            - JSONPath: .status.status
              description: Status of Last Action
              format: byte
              name: Status
              type: string
            group: cloudautomationmgr.ibm.com
            names:
              kind: Template
              plural: templates
            scope: Namespaced
            subresources:
              status: {}
            validation:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      camAPIKey:
                        type: string
                      camApiPort:
                        format: int64
                        type: integer
                      camAuthPort:
                        format: int64
                        type: integer
                      camHost:
                        type: string
                      camPassword:
                        type: string
                      camUsername:
                        type: string
                      connection:
                        type: string
                      secrets:
                        properties:
                          env:
                            properties:
                              apikey:
                                type: string
                              password:
                                type: string
                              username:
                                type: string
                            type: object
                        type: object
                      template:
                        properties:
                          name:
                            type: string
                          parameters:
                            properties:
                              parameters:
                                type: object
                              parametersWithString:
                                type: object
                              parametersWithStringList:
                                type: object
                              parametersWithStringMap:
                                type: object
                              secretParameters:
                                items:
                                  properties:
                                    name:
                                      type: string
                                    secretKeyRef:
                                      properties:
                                        key:
                                          type: string
                                        name:
                                          type: string
                                      required:
                                      - name
                                      - key
                                      type: object
                                  required:
                                  - name
                                  - secretKeyRef
                                  type: object
                                type: array
                              sharedParameters:
                                items:
                                  properties:
                                    dataType:
                                      type: string
                                    name:
                                      type: string
                                  required:
                                  - name
                                  - dataType
                                  type: object
                                type: array
                            type: object
                          version:
                            type: string
                        required:
                        - name
                        - version
                        - parameters
                        type: object
                    required:
                    - connection
                    - template
                    type: object
                  status:
                    properties:
                      action:
                        type: string
                      conditions:
                        items:
                          properties:
                            lastTransitionTime:
                              description: The last time the condition transitioned from one
                                status to another.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details about
                                the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            status:
                              description: Status of the condition, one of True, False, Unknown.
                              type: string
                            type:
                              description: Type of condition, e.g Complete or Failed.
                              type: string
                          required:
                          - type
                          - status
                          type: object
                        type: array
                      message:
                        type: string
                      outputs:
                        items:
                          properties:
                            name:
                              type: string
                            type:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      stackID:
                        type: string
                      status:
                        type: string
                    required:
                    - status
                    - action
                    - message
                    - stackID
                    type: object
            version: v1alpha1
          status:
            acceptedNames:
              kind: ""
              plural: ""
            conditions: []
            storedVersions: []
          EOF
          cat <<EOF | kubectl apply -f -
          apiVersion: apiextensions.k8s.io/v1beta1
          kind: CustomResourceDefinition
          metadata:
            creationTimestamp: null
            labels:
              controller-tools.k8s.io: "1.0"
            name: services.cloudautomationmgr.ibm.com
          spec:
            additionalPrinterColumns:
            - JSONPath: .metadata.creationTimestamp
              name: Age
              type: date
            - JSONPath: .status.action
              description: Last Action Performed
              format: byte
              name: Action
              type: string
            - JSONPath: .status.status
              description: Status of Last Action
              format: byte
              name: Status
              type: string
            group: cloudautomationmgr.ibm.com
            names:
              kind: Service
              plural: services
            scope: Namespaced
            subresources:
              status: {}
            validation:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      camAPIKey:
                        type: string
                      camApiPort:
                        format: int64
                        type: integer
                      camAuthPort:
                        format: int64
                        type: integer
                      camHost:
                        type: string
                      camPassword:
                        type: string
                      camUsername:
                        type: string
                      secrets:
                        properties:
                          env:
                            properties:
                              apikey:
                                type: string
                              password:
                                type: string
                              username:
                                type: string
                            type: object
                        type: object
                      service:
                        properties:
                          action:
                            type: string
                          name:
                            type: string
                          parameters:
                            properties:
                              specifications:
                                properties:
                                  parameters:
                                    type: object
                                  secretParameters:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        secretKeyRef:
                                          properties:
                                            key:
                                              type: string
                                            name:
                                              type: string
                                          required:
                                          - name
                                          - key
                                          type: object
                                      required:
                                      - name
                                      - secretKeyRef
                                      type: object
                                    type: array
                                type: object
                            required:
                            - specifications
                            type: object
                        required:
                        - name
                        - action
                        - parameters
                        type: object
                    required:
                    - service
                    type: object
                  status:
                    properties:
                      action:
                        type: string
                      conditions:
                        items:
                          properties:
                            lastTransitionTime:
                              description: The last time the condition transitioned from one
                                status to another.
                              format: date-time
                              type: string
                            message:
                              description: A human readable message indicating details about
                                the transition.
                              type: string
                            reason:
                              description: The reason for the condition's last transition.
                              type: string
                            status:
                              description: Status of the condition, one of True, False, Unknown.
                              type: string
                            type:
                              description: Type of condition, e.g Complete or Failed.
                              type: string
                          required:
                          - type
                          - status
                          type: object
                        type: array
                      message:
                        type: string
                      outputs:
                        type: object
                      serviceID:
                        type: string
                      status:
                        type: string
                    required:
                    - status
                    - action
                    - message
                    - serviceID
                    type: object
            version: v1alpha1
          status:
            acceptedNames:
              kind: ""
              plural: ""
            conditions: []
            storedVersions: []
          EOF
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 256Mi
            cpu: 100m
      restartPolicy: Never
---
# Source: ibm-cam/templates/cam-job-cleanup.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: cam-api-secret-cleanup-job
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": "post-delete"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    name: cam-api-secret-cleanup-job
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  template:
    metadata:
      name: cam-api-secret-cleanup-job
      namespace: ibm-cam-4.2.1.tgz
      labels:
        name: cam-api-secret-cleanup-job
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      containers:
      - name: cleanup
        image:  "cp.icr.io/cp/icam-tenant-api:4.2.0.1-x86_64"
        imagePullPolicy:  IfNotPresent
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        command:
        - "/bin/bash"
        - -c
        - |
          set -ex
          if kubectl get    secret -n ibm-cam-4.2.1.tgz "cam-api-secret" ; then
             kubectl delete secret -n ibm-cam-4.2.1.tgz "cam-api-secret"
          fi
        resources:
          requests:
            memory: 256Mi
            cpu: 10m
          limits:
            memory: 256Mi
            cpu: 50m
      restartPolicy: Never
---
# Source: ibm-cam/templates/cam-job-gen.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: cam-api-secret-gen-job
  namespace: ibm-cam-4.2.1.tgz
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    name: cam-api-secret-gen-job
    "app.kubernetes.io/name": my-release-ibm-cam
    "helm.sh/chart": "ibm-cam-4.2.1"
    release: "my-release"
    "app.kubernetes.io/instance": "my-release"
    "app.kubernetes.io/managed-by": "Helm"
spec:
  backoffLimit: 5 
  activeDeadlineSeconds: 900
  template:
    metadata:
      name: cam-api-secret-gen-job
      namespace: ibm-cam-4.2.1.tgz
      labels:
        name: cam-api-secret-gen-job
        "app.kubernetes.io/name": my-release-ibm-cam
        "helm.sh/chart": "ibm-cam-4.2.1"
        release: "my-release"
        "app.kubernetes.io/instance": "my-release"
        "app.kubernetes.io/managed-by": "Helm"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      volumes:
      - name: tmp-empty 
        emptyDir: {}
      containers:
      - name: cred-gen
        volumeMounts:
          - name: tmp-empty
            mountPath: /tmp
        image: "cp.icr.io/cp/icam-tenant-api:4.2.0.1-x86_64"
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        command:
        - "/bin/bash"
        - -c
        - |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          metadata:
            name: cam-api-secret
            namespace: ibm-cam-4.2.1.tgz
            labels: 
              "app.kubernetes.io/name": my-release-ibm-cam
              "helm.sh/chart": "ibm-cam-4.2.1"
              release: "my-release"
              "app.kubernetes.io/instance": "my-release"
              "app.kubernetes.io/managed-by": "Helm"
          data:
            token: $(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c${1:-64} | base64 | tr -d '\n')
            wlp_client_id: $(cat /dev/urandom | tr -dc a-z-0-9 | head -c${1:-32} | base64 | tr -d '\n')
            wlp_client_secret: $(cat /dev/urandom | tr -dc a-z-0-9 | head -c${1:-32} | base64 | tr -d '\n')
          EOF
        resources:
          requests:
            memory: 256Mi
            cpu: 10m
          limits:
            memory: 256Mi
            cpu: 50m
      restartPolicy: Never
