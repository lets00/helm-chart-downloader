---
# Source: ks-core/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubesphere
  namespace: kubesphere-system
  labels:
    helm.sh/chart: ks-core-1.0.0
    app.kubernetes.io/name: ks-core
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v4.1.0"
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: kubesphere-sa-token
---
# Source: ks-core/templates/customresourcefilters.yaml
apiVersion: v1
stringData:
  configuration.yaml: |
    resource:
      group: "kubesphere.io"
      version: "v1alpha1"
      kind: "Extension"
    regoPolicy: |
      package filter
      
      import rego.v1
      
      default match := false
      
      match if {
      	not listAvailableExtension
      	not fuzzySearch
      	not installStatusSearch
      	not enabledStatusSearch
      }
      
      match if {
      	listAvailableExtension
      	isSubscribed
      }
      
      match if {
      	listAvailableExtension
      	alreadyInstalled
      }
      
      match if {
      	listAvailableExtension
      	not hasExtensionID
      }
      
      match if {
      	fuzzySearch
      	displayNameMatch
      }
      
      match if {
      	installStatusSearch
      	installStatusMatch
      }
      
      match if {
      	installStatusSearch
      	installedStatusMatch
      }
      
      match if {
      	enabledStatusSearch
      	enabledStatusMatch
      }
      
      match if {
      	installStatusSearch
      	notInstalledStatusMatch
      }
      
      fuzzySearch if "q" == input.filter.field
      
      installStatusSearch if "status" == input.filter.field
      
      enabledStatusSearch if "enabled" == input.filter.field
      
      listAvailableExtension if "available" == input.filter.field
      
      isSubscribed if input.object.metadata.labels["marketplace.kubesphere.io/subscribed"] == "true"
      
      alreadyInstalled if input.object.status.state != ""
      
      hasExtensionID if input.object.metadata.labels["marketplace.kubesphere.io/extension-id"] != ""
      
      displayNameMatch if {
      	contains(lower(input.object.spec.displayName[_]), lower(input.filter.value))
      }
      
      nameMatch if {
      	contains(lower(input.object.metadata.name), lower(input.filter.value))
      }
      
      installStatusMatch if {
      	lower(input.object.status.state) == lower(input.filter.value)
      }
      
      installedStatusMatch if {
      	input.filter.value == "installed"
      	"Installed" == input.object.status.state
      }
      
      enabledStatusMatch if {
      	alreadyInstalled
      	input.filter.value == "true"
      	input.object.status.enabled
      }
      
      enabledStatusMatch if {
      	alreadyInstalled
      	input.filter.value == "false"
      	not input.object.status.enabled
      }
      
      notInstalledStatusMatch if {
          input.filter.value == "notInstalled"
          not alreadyInstalled
      }
      
kind: Secret
metadata:
  name: extensions.customresourcefilters
  namespace: kubesphere-system
type: config.kubesphere.io/custom-resource-filter
---
# Source: ks-core/templates/marketplace-config.yaml
apiVersion: v1
stringData:
  configuration.yaml: |
    url: https://kubesphere.cloud
    oauth:
      clientID: "client-a5cdf64c-7f84-415e-a6b1-8dfbfad493c3"
      clientSecret: "66ce75fc-4a87-4f97-9963-92d1a19b137e"
    subscription:
      syncPeriod: 60m
    repository:
      url: https://app.kubesphere.cloud
      repoName: marketplace
      syncPeriod: 60m
kind: Secret
metadata:
  name: marketplace
  namespace: kubesphere-system
  labels:
    config.kubesphere.io/type: marketplace
type: config.kubesphere.io/marketplace
---
# Source: ks-core/templates/oauthclient-config.yaml
apiVersion: v1
stringData:
  configuration.yaml: |
    name: kubesphere
    secret: kubesphere
    grantMethod: auto
    trusted: true
    scopeRestrictions:
      - 'openid'
      - 'email'
      - 'profile'
kind: Secret
metadata:
  name: oauthclient-kubesphere
  namespace: kubesphere-system
  labels:
    config.kubesphere.io/type: oauthclient
type: config.kubesphere.io/oauthclient
---
# Source: ks-core/templates/serviceaccount.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kubesphere-sa-token
  labels:
    helm.sh/chart: ks-core-1.0.0
    app.kubernetes.io/name: ks-core
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v4.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/service-account.name: kubesphere
type: kubernetes.io/service-account-token
---
# Source: ks-core/templates/webhook.yaml
apiVersion: v1
data:
  ca.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
  tls.crt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURqVENDQW5XZ0F3SUJBZ0lRWkw1ck9jWlBhcGVpWi9CckRlVlNTekFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVEFlRncweU5EQTJNakF4TkRVM01qZGFGdzB6TkRBMgpNVGd4TkRVM01qZGFNQ2N4SlRBakJnTlZCQU1USEcxNUxYSmxiR1ZoYzJVdFlXUnRhWE56YVc5dUxYZGxZbWh2CmIyc3dnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDMnpSSWg0TDVXUGdGU3p2ZnUKY25QeU5uMDZCdzVwQU51c3BwZ2ZESDRaNEVydFE4bGVjRWNtb2lIdkpXSWN2TEpnNDYwSDM1YjNRSEZGRGMzego0ZjZIYW9DelNET25TUkVzenRUQ25jc0w0QnhkaHF5RTJZc2tCSzVzVFcvM001QXd6S0h6YTdxNm44dWsxYS96CkVFNVVibFlJMi93UGtUSU1jSzdTNDcvekpTMU5YU2hNZWt5eTdtc2NCQnE3SlQxZWNob1ExbHUzUnp6cnBDNnQKSSt2d2RzLzFjQmNKeXNtVGNuUDA5MTBCYkk4bFlNaEphdHNnYUVQNmNDMlI5Z24wYVJ0MUJ5N3MwaURMZml1aQo4MmRxbWkrN3Y2Ynp6WnpZc3dVTkI5R3lpMmxtM1lrbVowWnZpK1lqSjBadTg2MDRjS1F2THVVdURYY25NbjlMCjVZNW5BZ01CQUFHamdjSXdnYjh3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUYKQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZPcE10eTJVNnpxcwozUTRKdGVXdCtzUzc2a1pwTUY4R0ExVWRFUVJZTUZhQ0oydHpMV052Ym5SeWIyeHNaWEl0YldGdVlXZGxjaTVyCmN5MWpiM0psTFRFdU1DNHdMblJuZW9JcmEzTXRZMjl1ZEhKdmJHeGxjaTF0WVc1aFoyVnlMbXR6TFdOdmNtVXQKTVM0d0xqQXVkR2Q2TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFBNldUM2k2cCt4UWIxeTdqZkdYTQpDSEZuNFRENjBPTWlYbmZpMnlzUWlDa01rOUdWdGZNZGp1TEdHaHJyMjA0TnNicjBjcnkrcFcrdExDZXZqbEFqCkVCSjRxRjREUXZrZHY3N1VOemZJUEdLbjcxWWhiU1VNcmtsUnRtcnNNL0llN05qY20xSTlpWkRIaXhYcitBM3EKZVpWejJMU2k3eG9xRElLQnliN1IrNERMYnI0dERPMEx3T3FGNHhUV2gxZkNieHp2L2FsM0hJZHdlVWRLNnBURQplRXI3QzdaM2EzSXdKM1RSbWpBZk9nVDdOcmFsN1lGYzZIbXdvaDVNRlZzYmVkUkVZUy9hV1lIQzJCc2dKZmdUCmhGZ3VUaWVGRlU4UnVSeUxqakswNmwxOWUrTGFFcW9HdmVjQkhnLzdjcEI1WlRSemNxYlZ5M3NObkVyUUtuajEKcnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
  tls.key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdHMwU0llQytWajRCVXM3MzduSno4alo5T2djT2FRRGJyS2FZSHd4K0dlQks3VVBKClhuQkhKcUloN3lWaUhMeXlZT090QjkrVzkwQnhSUTNOOCtIK2gycUFzMGd6cDBrUkxNN1V3cDNMQytBY1hZYXMKaE5tTEpBU3ViRTF2OXpPUU1NeWg4MnU2dXAvTHBOV3Y4eEJPVkc1V0NOdjhENUV5REhDdTB1Ty84eVV0VFYwbwpUSHBNc3U1ckhBUWF1eVU5WG5JYUVOWmJ0MGM4NjZRdXJTUHI4SGJQOVhBWENjckprM0p6OVBkZEFXeVBKV0RJClNXcmJJR2hEK25BdGtmWUo5R2tiZFFjdTdOSWd5MzRyb3ZObmFwb3Z1NyttODgyYzJMTUZEUWZSc290cFp0MkoKSm1kR2I0dm1JeWRHYnZPdE9IQ2tMeTdsTGcxM0p6Si9TK1dPWndJREFRQUJBb0lCQVFDYnB5cVZaa1VzTWtmMgpOdjJ1TUE3Q1k5dGxtYlNQZkllUkQ1bmdka2E1eWQ2REFZRnB4TGtSRUdWTXVNdytJLzdQdVk0UWNqYWQrbVY0Cm96U0hRaHYxT3A2MENmclJxc25SR1p6WXludW1kUUl5TVFhZGFJK3Q3NzZGd2JwaEI2cnpvb3NVTnRzZEpndkYKSTU5YW5MdlY4TTJaWlpmUHVaYWdPU0xqdDhJdVNqeTRTa3dKVUxzbGpsTVZXN0lRbGZUREdIK1BJRFN6RmlyawpGcmxQeDZ0OGZTeTZJMkNldDJXcmM3cXNSSEllMlBMd3JEU3BIS0xzNWZKOURFWkY5WFZWWm9xTW1QVEJYUmZGCnhYYnY5YUNuZ2t4aG1vcWJBYjUvMk80SmVzYjVLTDhqZG94TmNYWVlnTjM1bU8zdEpzdFI0aHhvWFl6Q0x6am0KbVphUEQ3T0JBb0dCQU9UV3VXbmhuQVkvVjFYWG1mZVhSclJRbzIrS3dLd1JmdzhzajgvRHByN2w3aFJaYWwwagpCM1dGVHVRa0N5SmxQVkF0K09yU1p4dG5HeEpPYXAveHpLbjczYU81U2ZZNkw1ZWp0SnZBcmk0ZzVMcXJUMmdzClVxeWgvM3I5V1BiYkFqWFdjWkxpeDdWNkk5T0E3REE3d00waUJMVDJHdEZLeXdiNzRReXViaENYQW9HQkFNeC8KZlNKUStSVVVadndseTAyRzlYZHpscS9HQ1FzM2p4NmlVVndKdWEzV3NVZlh4UEF3ZE02aldxemRNL0tweVQreApaNVZ2Y3RJb2tsSXhVa0pUV1pvTnZWTWhFZDBRM3lpajA4ZWJLV3U2Q0pueXNybmh3WGYxajhqMExEZzA2NG1SCndPZW9XenV5SHorMVRTbmhRMUNSMFlKY0dYZW9Wb1JtblI0WG9WcXhBb0dBV3kvaE5IcnRWR1A3Smo3Q29MR00KUUIvOThGMm5CeW4xcXBORVB6TWtoOTlScnBRdTJTd3pOYlpJU0lyQVVSVnNpRDI1ZWNFYnl3U2IrZ0I3Wm43UQo0azkxODE3TFJTM01keTJKczZMbEJZYWYvbTV6TnZ5cWVSWVltdWJIZzU2ajA5WSs3Wndtbm44c05ZU2pHVmxHCks3ZkpqbDZmTXhVTnNCdkFndkFpOWNNQ2dZQnBCSy9HaDc3aXpHOTIzaEhoNW9UNHF5dWZhUndMM3FScEh3S1oKT1lWWmVQL2gzVFVPQkZSNEtmdk8rbXBMSEZaMWx5MlMySUVtM0I4SWhydXZ4QTRueHhhTE1saHlKcy96bHU2VAplMk55Sno5emorZW8vZjdWRkE2YkxJbm84NFJpU2ErL1IvNVNVYzhxY0hrSUlON282WG1tY0pYRGxYZVkxdm1wCkVvbVNnUUtCZ1FDVEdrOG1jNVJlNDVLakU5QnFQdzlvNTY4T243SE1LS1Mva3VSSXdxVjM0UlRBNnhZMTE1ZjUKZEtjZE8rTGNpWG1Lb0toSldpSUtSaUZUUlpsNnpmK2FZdWU5d1NiWU5nMFVEZTBuRm50WHFaU1ZMQ25KaXhFcQpTWm9jVnJIMnpSZEVkSWZKTVNvUmliUVdSNVNENGt3aGZCeGNCdjNjSklNVFRJSE0wc3Nuc1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
kind: Secret
metadata:
  name: ks-controller-manager-webhook-cert
type: Opaque
---
# Source: ks-core/templates/ks-console-config.yml
apiVersion: v1
data:
  local_config.yaml: |
    server:
      http:
        hostname: localhost
        port: 8000
        static:
          production:
            /public: server/public
            /assets: dist/assets
            /dist: dist
      redis:
        port: 6379
        host: redis.kubesphere-system.svc
      redisTimeout: 5000
      sessionTimeout: 7200000
      apiServer:
        url: http://ks-apiserver
        wsUrl: ws://ks-apiserver
    
    client:
      version:
        kubesphere: v4.1.0
        kubernetes: v1.30.0
      enableKubeConfig: true
kind: ConfigMap
metadata:
  name: ks-console-config
  namespace: kubesphere-system
---
# Source: ks-core/templates/kubesphere-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubesphere-config
data:
  kubesphere.yaml: |
    authentication:
      authenticateRateLimiterMaxTries: 10
      authenticateRateLimiterDuration: 10m0s
      loginHistoryRetentionPeriod: 168h
      multipleLogin: true
      issuer:
        host: "http://ks-console.kubesphere-system.svc:30880"
        jwtSecret: "s61QipHKH3AwBzIZj4fNHdevI7UMLyE8"
        maximumClockSkew: 10s
        accessTokenMaxAge: 2h
        accessTokenInactivityTimeout: 30m
    s3:
      endpoint: ""
      region: us-east-1
      disableSSL: true
      forcePathStyle: true
      accessKeyID: admin
      secretAccessKey: admin
      bucket: uploads
    multicluster:
      clusterRole: "host"
      hostClusterName: "host"
    terminal:
      kubectl:
        image: registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
      node:
        image:  registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
      uploadFileLimit: 100Mi
    helmExecutor:
      image: registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
      timout: 5m
      historyMax: 2
    extension:
      imageRegistry: ""
    composedApp:
      appSelector: ""
    kubesphere:
      tls: false
    telemetry:
      ksCloudURL: "https://kubesphere.cloud"
    auditing:
      auditLevel: Metadata
      enable: false
      logOptions:
        maxAge: 7
        maxBackups: 10
        maxSize: 100
        path: /etc/audit/audit.log
---
# Source: ks-core/templates/clusterroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    kubesphere.io/creator: system
    kubesphere.io/description: '{"zh": "管理集群中的所有资源。", "en": "Manage all resources in the cluster."}'
    iam.kubesphere.io/auto-aggregate: "true"
  name: cluster-admin
aggregationRoleTemplates:
  roleSelector:
    matchLabels:
      iam.kubesphere.io/scope: "cluster"
  templateNames: []
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'
---
# Source: ks-core/templates/clusterroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    kubesphere.io/creator: system
    kubesphere.io/description: '{"zh": "查看集群中的所有资源。", "en": "View all resources in the cluster."}'
    iam.kubesphere.io/auto-aggregate: "true"
  name: cluster-viewer
aggregationRoleTemplates:
  roleSelector:
    matchLabels:
      iam.kubesphere.io/aggregate-to-cluster-viewer: ""
  templateNames:
    - cluster-view-components
    - cluster-view-volume-snapshot-classes
    - cluster-view-volumes
    - cluster-view-roles
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - '*'
    verbs:
      - GET
---
# Source: ks-core/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubesphere
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubesphere
    namespace: kubesphere-system
---
# Source: ks-core/templates/ks-console.yml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-console
    tier: frontend
    version: v4.1.0
  annotations:
  name: ks-console
spec:
  ports:
    - name: nginx
      port: 80
      protocol: TCP
      targetPort: 8000
      nodePort: 30880
  selector:
    app: ks-console
    tier: frontend
  type: NodePort
---
# Source: ks-core/templates/services.yml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubernetes.io/created-by: kubesphere.io/ks-apiserver
  labels:
    app: ks-apiserver
    tier: backend
    version: v4.1.0
  name: ks-apiserver
  namespace: kubesphere-system
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9090
      nodePort: 30881
  selector:
    app: ks-apiserver
    tier: backend
    # version: v4.1.0
  type: NodePort
---
# Source: ks-core/templates/services.yml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ks-controller-manager
    tier: backend
    version: v4.1.0
  name: ks-controller-manager
  namespace: kubesphere-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    app: ks-controller-manager
    tier: backend
    # version: v4.1.0
  sessionAffinity: None
  type: ClusterIP
---
# Source: ks-core/templates/ks-apiserver.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-apiserver
    tier: backend
    version: v4.1.0
  name: ks-apiserver
  namespace: kubesphere-system
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  replicas:  1 
  selector:
    matchLabels:
      app: ks-apiserver
      tier: backend
  template:
    metadata:
      labels:
        app: ks-apiserver
        tier: backend
    spec:
      serviceAccountName: kubesphere
      
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
      containers:
        - name: ks-apiserver
          image: registry.cn-beijing.aliyuncs.com/kse/ks-apiserver:v4.1.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9090
              protocol: TCP
          command:
            - ks-apiserver
            - --logtostderr=true
          env:
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /version
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 15
          volumeMounts:
            - mountPath: /etc/kubesphere/
              name: kubesphere-config
            - mountPath: /etc/localtime
              name: host-time
              readOnly: true
          
      volumes:
        - configMap:
            defaultMode: 420
            name: kubesphere-config
          name: kubesphere-config
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
---
# Source: ks-core/templates/ks-console.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-console
    tier: frontend
    version: v4.1.0
  name: ks-console
  namespace: kubesphere-system
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  replicas:  1 
  selector:
    matchLabels:
      app: ks-console
      tier: frontend
  template:
    metadata:
      labels:
        app: ks-console
        tier: frontend
    spec:
      serviceAccount: kubesphere
      serviceAccountName: kubesphere
      
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
      containers:
        - name: ks-console
          image: registry.cn-beijing.aliyuncs.com/kse/ks-console:v4.1.0
          imagePullPolicy: IfNotPresent
          env:
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 15
            timeoutSeconds: 15
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 8
          volumeMounts:
            - name: ks-console-config
              mountPath: /opt/kubesphere/console/configs/local_config.yaml
              subPath: local_config.yaml
            - name: host-time
              mountPath: /etc/localtime
              readOnly: true
      volumes:
        - configMap:
            defaultMode: 420
            name: ks-console-config
            items:
              - key: local_config.yaml
                path: local_config.yaml
          name: ks-console-config
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
---
# Source: ks-core/templates/ks-controller-manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ks-controller-manager
    tier: backend
    version: v4.1.0
  name: ks-controller-manager
  namespace: kubesphere-system
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ks-controller-manager
      tier: backend
  template:
    metadata:
      labels:
        app: ks-controller-manager
        tier: backend
      annotations:
        kubesphere.io/update-time: "2024-06-20T14:28:28Z"
    spec:
      serviceAccountName: kubesphere
      
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      containers:
        - name: ks-controller-manager
          image: registry.cn-beijing.aliyuncs.com/kse/ks-controller-manager:v4.1.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          command:
            - controller-manager
            - --logtostderr=true
            - --leader-elect=true
            - --controllers=*
          env:
          resources:
            limits:
              cpu: 1
              memory: 1000Mi
            requests:
              cpu: 30m
              memory: 50Mi
          volumeMounts:
            - mountPath: /etc/kubesphere/
              name: kubesphere-config
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: webhook-secret
            - mountPath: /etc/localtime
              name: host-time
              readOnly: true
      volumes:
        - name: kubesphere-config
          configMap:
            name: kubesphere-config
            defaultMode: 420
        - name: webhook-secret
          secret:
            defaultMode: 420
            secretName: ks-controller-manager-webhook-cert
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
---
# Source: ks-core/templates/cert-manager.yaml
---
---
# Source: ks-core/templates/roletemplate-categories.yaml
# category
---
# Source: ks-core/templates/roletemplates.yaml
# global scope role templates
---
# Source: ks-core/templates/tls-secrets.yaml
---
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
  name: project-admin
targetSelector:
  matchLabels:
    kubesphere.io/managed: "true"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/scope: "namespace"
        kubesphere.io/managed: "true"
  apiVersion: iam.kubesphere.io/v1beta1
  kind: Role
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "管理项目中的所有资源。", "en": "Manage all resources in the project."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: admin
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
  name: project-operator
targetSelector:
  matchLabels:
    kubesphere.io/managed: "true"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-operator: ""
        kubesphere.io/managed: "true"
        iam.kubesphere.io/scope: "namespace"
  apiVersion: iam.kubesphere.io/v1beta1
  kind: Role
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "管理项目中除用户和角色之外的资源。", "en": "Manage resources other than users and roles in the project."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: operator
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - ""
        - apps
        - extensions
        - batch
        - autoscaling
        - app.k8s.io
        - operations.kubesphere.io
        - resources.kubesphere.io
        - config.istio.io
        - events.k8s.io
        - events.kubesphere.io
        - snapshot.storage.k8s.io
        - networking.k8s.io
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
  name: project-viewer
targetSelector:
  matchLabels:
    kubesphere.io/managed: "true"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-viewer: ""
        kubesphere.io/managed: "true"
        iam.kubesphere.io/scope: "namespace"
  apiVersion: iam.kubesphere.io/v1beta1
  kind: Role
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看项目中的所有资源。", "en": "View all resources in the project."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: viewer
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-admin
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/scope: 'workspace'
    templateNames:
      - workspace-manage-workspace-settings
      - workspace-view-workspace-settings
      - workspace-manage-projects
      - workspace-view-projects
      - workspace-create-projects
      - workspace-view-members
      - workspace-manage-members
      - workspace-manage-roles
      - workspace-view-roles
      - workspace-manage-groups
      - workspace-view-groups
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "管理企业空间中的所有资源。", "en": "Manage all resources in the workspace."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: admin
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-regular
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-regular: ""
        iam.kubesphere.io/scope: "workspace"
    templateNames:
      - workspace-view-workspace-settings
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看企业空间设置。", "en": "View workspace settings."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: regular
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
        - workspacemembers
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-self-provisioner
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/aggregate-to-self-provisioner: ""
        iam.kubesphere.io/scope: "workspace"
    templateNames:
      - workspace-create-projects
      - workspace-view-workspace-settings
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看企业设置、创建项目。", "en": "View workspace settings, create projects."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: self-provisioner
  rules: []
---
# Source: ks-core/templates/builtinroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: BuiltinRole
metadata:
  name: workspace-viewer
  labels:
    iam.kubesphere.io/scope: "workspace"
role:
  aggregationRoleTemplates:
    roleSelector:
      matchLabels:
        iam.kubesphere.io/scope: "workspace"
        iam.kubesphere.io/aggregate-to-viewer: ""
    templateNames:
      - workspace-view-projects
      - workspace-view-members
      - workspace-view-roles
      - workspace-view-groups
      - workspace-view-workspace-settings
  apiVersion: iam.kubesphere.io/v1beta1
  kind: WorkspaceRole
  metadata:
    annotations:
      kubesphere.io/creator: system
      kubesphere.io/description: '{"zh": "查看企业空间中的所有资源。", "en": "View all resources in the workspace."}'
      iam.kubesphere.io/auto-aggregate: "true"
    name: viewer
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: ai-machine-learning
spec:
  displayName:
    en: AI / Machine learning
    zh: AI / 机器学习
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: database
spec:
  displayName:
    en: Database
    zh: 数据库
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: integration-delivery
spec:
  displayName:
    en: Integration and delivery
    zh: 集成和交付
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: observability
spec:
  displayName:
    en: Observability
    zh: 可观测性
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: networking
spec:
  displayName:
    en: Networking
    zh: 网络
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: security
spec:
  displayName:
    en: Security
    zh: 安全
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: storage
spec:
  displayName:
    en: Storage
    zh: 存储
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: streaming-messaging
spec:
  displayName:
    en: Streaming and messaging
    zh: 流平台和消息中间件
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: dev-tools
spec:
  displayName:
    en: Developer tools
    zh: 开发者工具
---
# Source: ks-core/templates/extension-categories.yaml
apiVersion: kubesphere.io/v1alpha1
kind: Category
metadata:
  name: computing
spec:
  displayName:
    en: Computing
    zh: 计算
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-platform-settings
spec:
  displayName:
    en: 'Platform Settings'
    zh: '平台设置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-workspace-management
spec:
  displayName:
    en: Workspace
    zh: '企业空间'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: 'true'
  name: global-cluster-management
spec:
  displayName:
    en: Cluster Management
    zh: '集群管理'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-resource-management
spec:
  displayName:
    en: Cluster Resources
    zh: '集群资源'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-settings
spec:
  displayName:
    en: Cluster Settings
    zh: '集群设置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-app-workloads-management
spec:
  displayName:
    en: Application Workloads
    zh: '应用负载'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-project-management
spec:
  displayName:
    en: Project
    zh: '项目'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-storage-management
spec:
  displayName:
    en: Storage
    zh: '存储'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-settings
spec:
  displayName:
    en: Workspace Settings
    zh: '企业空间设置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-project-management
spec:
  displayName:
    en: Projects
    zh: '项目'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-access-control
spec:
  displayName:
    en: Access Control
    zh: '访问控制'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-configuration-management
spec:
  displayName:
    en: Configuration
    zh: '配置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-storage-management
spec:
  displayName:
    en: Storage
    zh: '存储'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-application-workloads
spec:
  displayName:
    en: Application Workloads
    zh: '应用负载'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-settings
spec:
  displayName:
    en: Project Settings
    zh: '项目设置'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: manage-app
spec:
  displayName:
    en: 'AppStore Manage'
    zh: '应用商店管理'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: "true"
  name: workspace-app
spec:
  displayName:
    en: 'Workspace Apps'
    zh: '应用管理'
---
# Source: ks-core/templates/roletemplate-categories.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: Category
metadata:
  labels:
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-app
spec:
  displayName:
    en: 'App Releases'
    zh: '应用'
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  name: anonymous
rules:
  - apiGroups:
      - config.kubesphere.io
    resources:
      - configs
    verbs:
      - get
      - list
  - nonResourceURLs:
      - '/static/images/*'
    verbs:
      - GET
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    iam.kubesphere.io/auto-aggregate: "true"
    iam.kubesphere.io/rego-override: |-
      package authz
      default allow = false
      allow = true {
        input.Resource == "users"
        input.User.Name == input.Name
      }
      allow = true {
        allowedResources := ["clustermembers","workspacemembers","namespacemembers"]
        allowedResources[_] == input.Resource
        input.User.Name == input.Name
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
      allow = true {
        allowedNoneResources := ["/api","/api/v1"]
        allowedNoneResources[_] == input.Path
        input.Verb == "GET"
      }
      allow = true {
        input.APIGroup == "tenant.kubesphere.io"
        input.KubernetesRequest == false
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
      allow = true {
        input.Resource == "pods"
        input.Subresource == "exec"
        allowedVerbs := ["get","create"]
        allowedVerbs[_] == input.Verb
        podName := input.Name
        prefix := "ks-managed-kubectl-"
        startswith(podName, prefix) == true
        input.Namespace == "kubesphere-system"
        input.User.Name == trim_prefix(podName, prefix)
      }
  name: authenticated
aggregationRoleTemplates:
  roleSelector:
    matchLabels:
      iam.kubesphere.io/aggregate-to-authenticated: ""
      iam.kubesphere.io/scope: "global"
rules:
  - apiGroups:
      - config.kubesphere.io
    resources:
      - configs
    verbs:
      - get
      - list
  - apiGroups:
      - iam.kubesphere.io
    resources:
      - users
      - roletemplates
      - categories
    verbs:
      - list
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - registry
      - git
    verbs:
      - get
      - create
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - clusters
    verbs:
      - get
      - list
  - apiGroups:
      - '*'
    resources:
      - storageclasses
      - storageclasscapabilities
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - resources.kubesphere.io
    resources:
      - namespaces
      - services
    verbs:
      - list
  - apiGroups:
      - tenant.kubesphere.io
    resources:
      - workspacetemplates
    verbs:
      - patch
  - apiGroups:
      - extensions.kubesphere.io
    resources:
      - jsbundles
    verbs:
      - get
      - list
  - apiGroups:
      - kubesphere.io
    resources:
      - extensions
    verbs:
      - get
      - list
  - apiGroups:
      - application.kubesphere.io
    resources:
      - 'apps'
      - 'categories'
      - 'apps/versions'
      - 'applications'
    verbs:
      - get
      - list
  - apiGroups:
      - license.kubesphere.io
    resources:
      - licenses
    verbs:
      - get
      - list
  - apiGroups:
      - cluster.kubesphere.io
    resources:
      - 'labels'
    verbs:
      - get
      - list
  - nonResourceURLs:
      - '/static/images/*'
    verbs:
      - GET
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: '{"zh": "管理 KubeSphere 平台上的所有资源。", "en": "Manage all resources on the KubeSphere platform."}'
    iam.kubesphere.io/rego-override: >-
      package authz
      default allow = false
      allow = true {
        allowedScopes := ["Workspace","Namespace","Cluster"]
        allowedScopes[_] == input.ResourceScope
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
      allow = true {
        allowedScopes := ["Workspace","Namespace","Cluster"]
        allowedScopes[_] == input.ResourceScope
      }
    iam.kubesphere.io/auto-aggregate: "true"
  name: platform-admin
aggregationRoleTemplates:
  roleSelector:
    matchLabels:
      iam.kubesphere.io/scope: "global"
  templateNames:
    - global-manage-clusters
    - global-view-clusters
    - global-create-workspaces
    - global-view-basic
    - global-manage-app-templates
    - global-manage-users
    - global-view-roles
    - global-manage-platform-settings
    - global-manage-workspaces
    - global-view-app-templates
    - global-view-users
    - global-manage-roles
    - global-view-workspaces
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    kubesphere.io/description: '{"zh": "被邀请加入企业空间之前无法访问任何资源。", "en": "Cannot access any resources before joining a workspace."}'
    kubesphere.io/creator: admin
  name: platform-regular
rules: []
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: '{"zh": "创建企业空间并成为所创建的企业空间的管理员。", "en": "Create workspaces and become an administrator of the created workspaces."}'
  name: platform-self-provisioner
aggregationRoleTemplates:
  templateNames:
    - global-create-workspaces
rules:
  - apiGroups:
      - tenant.kubesphere.io
    resources:
      - workspaces
      - workspacetemplates
    verbs:
      - create
      - watch
---
# Source: ks-core/templates/globalroles.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRole
metadata:
  name: pre-registration
rules:
  - apiGroups:
      - iam.kubesphere.io
    resources:
      - users
    verbs:
      - create
      - list
---
# Source: ks-core/templates/globalrolebingings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  labels:
    iam.kubesphere.io/role-ref: platform-admin
    iam.kubesphere.io/user-ref: admin
  name: admin
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: platform-admin
subjects:
  - apiGroup: iam.kubesphere.io
    kind: User
    name: admin
---
# Source: ks-core/templates/globalrolebingings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  name: anonymous
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: anonymous
subjects:
  - apiGroup: iam.kubesphere.io
    kind: Group
    name: system:unauthenticated
---
# Source: ks-core/templates/globalrolebingings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  name: authenticated
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: authenticated
subjects:
  - apiGroup: iam.kubesphere.io
    kind: Group
    name: system:authenticated
---
# Source: ks-core/templates/globalrolebingings.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: GlobalRoleBinding
metadata:
  name: pre-registration
roleRef:
  apiGroup: iam.kubesphere.io
  kind: GlobalRole
  name: pre-registration
subjects:
  - apiGroup: iam.kubesphere.io
    kind: Group
    name: pre-registration
  - apiGroup: iam.kubesphere.io
    kind: User
    name: system:pre-registration
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: defaulter.installplan.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /mutate-kubesphere-io-v1alpha1-installplan
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: installplans.kubesphere.io
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: app.kubernetes.io/managed-by
          operator: NotIn
          values:
            - Helm
    rules:
      - apiGroups:
          - kubesphere.io
        apiVersions:
          - 'v1alpha1'
        operations:
          - CREATE
          - UPDATE
        resources:
          - installplans
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: extensions.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /mutate-extensions-kubesphere-io-v1alpha1-jsbundle
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: jsbundles.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jsbundles
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: serviceaccount.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /serviceaccount-pod-injector
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    name: serviceaccount-pod-injector.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: defaulter.config.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /mutate--v1-secret
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    name: defaulter.config.kubesphere.io
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: config.kubesphere.io/type
          operator: Exists
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - secrets
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspaces": "create"}'
  labels:
    iam.kubesphere.io/category: global-workspace-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-create-workspaces
spec:
  description:
    en: 'Create workspaces and become an administrator of the created projects.'
    zh: '创建企业空间。'
  displayName:
    en: Workspace Creation
    zh: '企业空间创建'
  rules:
    - apiGroups:
        - tenant.kubesphere.io
      resources:
        - workspaces
        - workspacetemplates
      verbs:
        - create
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspaces": "view"}'
  labels:
    iam.kubesphere.io/category: global-workspace-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-workspaces
spec:
  description:
    en: 'View all workspaces and workspace resources.'
    zh: '查看所有工作空间和企业空间下的资源。'
  displayName:
    en: Workspace Viewing
    zh: 企业空间查看
  rules:
    - apiGroups:
        - '*'
      resources:
        - abnormalworkloads
        - quotas
        - workloads
        - configmaps
        - endpoints
        - events
        - limitranges
        - namespaces
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - meshpolicies
        - cronjobs
        - jobs
        - horizontalpodautoscalers
        - events
        - ingresses
        - router
        - filters
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - namespacenetworkpolicies
        - workspacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - workspacetemplates
        - workspaceroles
        - workspacemembers
        - workspacemembers/namespaces
        - workspacerolebindings
        - workloads
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - list
        - get
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspaces": "manage"}'
  labels:
    iam.kubesphere.io/category: global-workspace-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-workspaces
spec:
  description:
    en: 'Manage all workspaces and workspace resources.'
    zh: '管理所有企业空间和企业空间下的资源。'
  displayName:
    en: Workspace Management
    zh: '企业空间管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - abnormalworkloads
        - quotas
        - workloads
        - configmaps
        - endpoints
        - events
        - limitranges
        - namespaces
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - meshpolicies
        - cronjobs
        - jobs
        - horizontalpodautoscalers
        - events
        - ingresses
        - router
        - filters
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - namespacenetworkpolicies
        - workspacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - workspacetemplates
        - workspaceroles
        - workspacemembers
        - workspacemembers/namespaces
        - workspacerolebindings
        - workloads
      verbs:
        - '*'
    - apiGroups:
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"clusters": "view"}'
    iam.kubesphere.io/rego-override: |-
      package authz
      default allow = false
      allow = true {
        allowedScopes := ["Workspace","Namespace","Cluster"]
        allowedScopes[_] == input.ResourceScope
        allowedVerbs := ["get","list","watch"]
        allowedVerbs[_] == input.Verb
      }
  labels:
    iam.kubesphere.io/category: global-cluster-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-clusters
spec:
  description:
    en: 'View all clusters and cluster resources.'
    zh: '查看所有集群和集群资源。'
  displayName:
    en: Cluster Viewing
    zh: '集群查看'
  rules:
    - apiGroups:
        - ""
        - apiextensions.k8s.io
        - app.k8s.io
        - apps
        - autoscaling
        - batch
        - config.istio.io
        - events.k8s.io
        - events.kubesphere.io
        - extensions
        - metrics.k8s.io
        - networking.k8s.io
        - node.k8s.io
        - rbac.istio.io
        - scheduling.k8s.io
        - security.istio.io
        - storage.k8s.io
        - storage.kubesphere.io
        - resources.kubesphere.io
        - cluster.kubesphere.io
      resources:
        - '*'
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - tenant.kubesphere.io
      resources:
        - workspaces
        - workspacetemplates
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - iam.kubesphere.io
      resources:
        - clustermembers
        - clusterroles
      verbs:
        - get
        - list
        - watch
    - nonResourceURLs:
        - '*'
      verbs:
        - GET
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["global-view-clusters"]'
    iam.kubesphere.io/role-template-rules: '{"clusters": "manage"}'
    kubesphere.io/description: '{"zh":"创建集群、删除集群和管理集群中的所有资源。"}'
    iam.kubesphere.io/rego-override: |-
      package authz
      default allow = false
      allow = true {
        allowedScopes := ["Workspace","Namespace","Cluster"]
        allowedScopes[_] == input.ResourceScope
      }
  labels:
    iam.kubesphere.io/category: global-cluster-management
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-clusters
spec:
  description:
    en: 'Create clusters, delete clusters, and manage resources in all clusters.'
    zh: '创建集群、删除集群和管理集群中的所有资源。'
  displayName:
    en: Cluster Management
    zh: '集群管理'
  rules:
    - apiGroups:
        - ""
        - apiextensions.k8s.io
        - app.k8s.io
        - apps
        - autoscaling
        - batch
        - events.k8s.io
        - extensions
        - node.k8s.io
        - scheduling.k8s.io
        - storage.k8s.io
        - storage.k8s.io
        - storage.kubesphere.io
        - resources.kubesphere.io
        - cluster.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
    - apiGroups:
        - tenant.kubesphere.io
      resources:
        - workspaces
        - workspacetemplates
      verbs:
        - update
        - patch
    - apiGroups:
        - iam.kubesphere.io
      resources:
        - clustermembers
        - clusterroles
      verbs:
        - '*'
    - nonResourceURLs:
        - '*'
      verbs:
        - GET
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"platform-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: global-platform-settings
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-platform-settings
spec:
  description:
    zh: '查看和编辑 KubeSphere 平台的设置。'
    en: 'View and edit settings of the KubeSphere platform.'
  displayName:
    en: Platform Settings Management
    zh: '平台设置管理'
  rules:
    - apiGroups:
        - extensions.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
    - apiGroups:
        - kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["global-view-users"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-roles
spec:
  description:
    en: 'View platform roles.'
    zh: '查看平台角色。'
  displayName:
    en: Role Viewing
    zh: '角色查看'
  rules:
    - apiGroups:
        - iam.kubesphere.io
      resources:
        - globalroles
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-roles
spec:
  description:
    en: 'Manage platform roles.'
    zh: '管理平台角色。'
  displayName:
    en: Role Management
    zh: '角色管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - globalroles
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"users": "view"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-view-users
spec:
  description:
    en: 'View users.'
    zh: '查看用户。'
  displayName:
    en: User Viewing
    zh: '用户查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - users
        - users/loginrecords
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"users": "manage"}'
  labels:
    iam.kubesphere.io/category: global-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "global"
    kubesphere.io/managed: "true"
  name: global-manage-users
spec:
  description:
    en: 'Manage users.'
    zh: '管理用户。'
  displayName:
    en: User Management
    zh: '用户管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - users
        - users/password
        - users/loginrecords
      verbs:
        - '*'


# cluster scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"cluster-settings": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-settings
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: "true"
  name: cluster-view-cluster-settings
spec:
  displayName:
    en: Cluster Settings View
    zh: '集群设置查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"cluster-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-settings
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: "true"
  name: cluster-manage-cluster-settings
spec:
  displayName:
    en: Cluster Settings Management
    zh: '集群设置管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"customresources": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: "true"
  name: cluster-view-crds
spec:
  displayName:
    en: Custom Resource Definition Viewing
    zh: '定制资源定义查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"customresources": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: "true"
  name: cluster-manage-crds
spec:
  displayName:
    en: Custom Resource Definition Management
    zh: '定制资源定义管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-members
spec:
  displayName:
    en: Member Viewing
    zh: '成员查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-roles", "cluster-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"members": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-members
spec:
  displayName:
    en: Member Management
    zh: '成员管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-roles
spec:
  displayName:
    en: Role Viewing
    zh: '角色查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-roles"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-access-control
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-roles
spec:
  displayName:
    en: Role Management
    zh: '角色管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"nodes": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-view-nodes
spec:
  displayName:
    en: Node Viewing
    zh: '节点查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-nodes"]'
    iam.kubesphere.io/role-template-rules: '{"nodes": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-nodes
spec:
  displayName:
    en: Node Management
    zh: '节点管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-projects"]'
    iam.kubesphere.io/role-template-rules: '{"deployments":"view","statefulsets":"view",
        "daemonsets":"view","jobs":"view","cronjobs":"view","pods":"view","services":"view","ingresses":"view",
        "configmaps":"view","secrets":"view","serviceaccounts":"view"}'
  labels:
    iam.kubesphere.io/category: cluster-app-workloads-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-view-app-workloads
spec:
  displayName:
    en: Application Workload Viewing
    zh: '应用负载查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-app-workloads", "cluster-view-projects"]'
    iam.kubesphere.io/role-template-rules: '{"deployments":"manage","statefulsets":"manage",
            "daemonsets":"manage","jobs":"manage","cronjobs":"manage","pods":"manage","services":"manage",
            "ingresses":"manage","configmaps":"manage","secrets":"manage","serviceaccounts":"manage"}'
  labels:
    iam.kubesphere.io/category: cluster-app-workloads-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-app-workloads
spec:
  displayName:
    en: Application Workload Management
    zh: '应用负载管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"projects": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-project-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-projects
spec:
  displayName:
    en: Project Viewing
    zh: '项目查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-projects"]'
    iam.kubesphere.io/role-template-rules: '{"projects": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-project-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-projects
spec:
  displayName:
    en: Project Management
    zh: '项目管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-persistentvolumeclaims"]'
    iam.kubesphere.io/role-template-rules: '{"storageclasses": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-storageclasses
spec:
  displayName:
    en: Storage Class Viewing
    zh: '存储类查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-persistentvolumeclaims", "cluster-view-storageclasses"]'
    iam.kubesphere.io/role-template-rules: '{"storageclasses": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-storageclasses
spec:
  displayName:
    en: Storage Class Management
    zh: '存储类管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"persistentvolumeclaims": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-view-persistentvolumeclaims
spec:
  displayName:
    en: Persistent Volume Claim Viewing
    zh: '持久卷声明查看'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["cluster-view-persistentvolumeclaims", "cluster-view-storageclasses"]'
    iam.kubesphere.io/role-template-rules: '{"persistentvolumeclaims": "manage"}'
  labels:
    iam.kubesphere.io/category: cluster-storage-management
    iam.kubesphere.io/scope: "cluster"
    kubesphere.io/managed: 'true'
  name: cluster-manage-persistentvolumeclaims
spec:
  displayName:
    en: Persistent Volume Claim Management
    zh: '持久卷声明管理'
  rules: []
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"components": "view"}'
  labels:
    iam.kubesphere.io/category: cluster-resource-management
    iam.kubesphere.io/scope: "cluster"
    iam.kubesphere.io/aggregate-to-cluster-viewer: ""
    kubesphere.io/managed: 'true'
  name: cluster-view-components
spec:
  displayName:
    en: System Component Viewing
    zh: '系统组件查看'
  rules: []

# workspace scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspace-settings": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-settings
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-regular: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/aggregate-to-self-provisioner: ""
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/basic-role-template: 'true'
    kubesphere.io/managed: 'true'
  name: workspace-view-workspace-settings
spec:
  description:
    en: 'View workspace settings.'
    zh: '查看企业空间设置。'
  displayName:
    en: Workspace Settings Viewing
    zh: '企业空间设置查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"workspace-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-settings
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-workspace-settings
spec:
  description:
    en: 'Manage workspace settings and edit workspace information and network policies.'
    zh: '管理企业空间的基本信息、网络策略等设置。'
  displayName:
    en: Workspace Settings Management
    zh: '企业空间设置管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"projects": "create"}'
  labels:
    iam.kubesphere.io/category: workspace-project-management
    iam.kubesphere.io/aggregate-to-self-provisioner: ""
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-create-projects
spec:
  description:
    en: 'Create projects and become an administrator of the created projects.'
    zh: '创建项目并成为所创建的项目的管理员。'
  displayName:
    en: Project Creation
    zh: '项目创建'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaces
        - workspacemembers
        - quotas
        - abnormalworkloads
        - pods
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - '*'
      resources:
        - namespaces
        - federatednamespaces
      verbs:
        - create
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"projects": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-project-management
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-viewer: ""
    kubesphere.io/managed: 'true'
  name: workspace-view-projects
spec:
  description:
    en: 'View all projects and project resources.'
    zh: '查看企业空间中的所有项目及项目下的资源。'
  displayName:
    en: Project Viewing
    zh: '项目查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - namespaces
        - configmaps
        - endpoints
        - events
        - limitranges
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - cronjobs
        - jobs
        - events
        - ingresses
        - router
        - pods
        - pods/log
        - pods/containers
        - namespacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - quotas
        - abnormalworkloads
        - workloads
        - router
        - strategies
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - apps
        - extensions
        - batch
        - autoscaling
        - app.k8s.io
        - operations.kubesphere.io
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - list
        - get
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["workspace-view-projects","workspace-view-members","workspace-create-projects"]'
    iam.kubesphere.io/role-template-rules: '{"projects": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-project-management
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-projects
spec:
  description:
    en: 'Create, edit, and delete projects in the workspace.'
    zh: '创建、编辑和删除企业空间中的项目。'
  displayName:
    en: Project Management
    zh: '项目管理'
  rules:
    - apiGroups:
        - apps
        - extensions
        - batch
        - autoscaling
        - app.k8s.io
        - operations.kubesphere.io
        - resources.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - namespaces
        - configmaps
        - endpoints
        - events
        - limitranges
        - persistentvolumeclaims
        - podtemplates
        - replicationcontrollers
        - resourcequotas
        - secrets
        - serviceaccounts
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - meshpolicies
        - cronjobs
        - jobs
        - events
        - ingresses
        - router
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - namespacenetworkpolicies
        - networkpolicies
        - podsecuritypolicies
        - rolebindings
        - roles
        - namespacemembers
        - servicepolicies
        - workspaces
        - quotas
        - abnormalworkloads
        - workloads
        - router
        - strategies
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-viewer: ""
    kubesphere.io/managed: 'true'
  name: workspace-view-members
spec:
  description:
    en: 'View workspace members.'
    zh: '查看企业空间成员。'
  displayName:
    en: Member Viewing
    zh: '成员查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspacemembers
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-members
spec:
  description:
    en: 'Manage workspace members.'
    zh: '管理企业空间成员。'
  displayName:
    en: Member Management
    zh: '成员管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspacemembers
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - workspaceroles
      verbs:
        - list
        - get
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["workspace-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/scope: "workspace"
    iam.kubesphere.io/aggregate-to-viewer: ""
    kubesphere.io/managed: 'true'
  name: workspace-view-roles
spec:
  description:
    en: 'View workspace roles.'
    zh: '查看企业空间角色。'
  displayName:
    en: Role Viewing
    zh: "角色查看"
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaceroles
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: workspace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "workspace"
    kubesphere.io/managed: 'true'
  name: workspace-manage-roles
spec:
  description:
    en: 'Manage workspace roles.'
    zh: '管理企业空间角色。'
  displayName:
    en: Role Management
    zh: '角色管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - workspaceroles
      verbs:
        - '*'

# namespace scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"project-settings": "view"}'
  labels:
    iam.kubesphere.io/category: namespace-settings
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
    iam.kubesphere.io/basic-role-template: 'true'
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: namespace-view-project-settings
spec:
  description:
    en: 'View project settings including project basic information, external access settings and resource quotas settings.'
    zh: '查看项目设置，包括项目基本信息、外部访问设置、资源配额等。'
  displayName:
    en: Project Settings Viewing
    zh: '项目设置查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - 'namespaces'
      verbs:
        - 'get'
    - apiGroups:
        - 'resources.kubesphere.io'
      resources:
        - 'quotas'
        - 'metrics'
      verbs:
        - 'list'
    - apiGroups:
        - ''
      resources:
        - 'limitranges'
      verbs:
        - 'list'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"project-settings": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-settings
    iam.kubesphere.io/hidden-role-template: 'true'
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-project-settings
spec:
  description:
    en: 'Manage project settings including project basic information, external access settings and resource quotas settings.'
    zh: '管理项目设置，包括项目基本信息、外部访问设置、资源配额等。'
  displayName:
    en: Project Settings Management
    zh: '项目设置管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - '*'
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-members
spec:
  description:
    en: 'View project members.'
    zh: '查看项目成员。'
  displayName:
    en: Member Viewing
    zh: '成员查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - namespacemembers
        - rolebindings
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"members": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-members
spec:
  description:
    en: 'Manage project members.'
    zh: '管理项目成员。'
  displayName:
    en: Member Management
    zh: '成员管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - namespacemembers
        - rolebindings
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-members"]'
    iam.kubesphere.io/role-template-rules: '{"roles": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-roles
spec:
  description:
    en: 'View project roles.'
    zh: '查看项目角色。'
  displayName:
    en: Role Viewing
    zh: '角色查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - roles
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"roles": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-access-control
    iam.kubesphere.io/hidden-role-template: "true"
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-roles
spec:
  description:
    en: 'Manage project roles.'
    zh: '管理项目角色。'
  displayName:
    en: Role Management
    zh: '角色管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - roles
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-volumes","namespace-view-secrets","namespace-view-configmaps"]'
    iam.kubesphere.io/role-template-rules: '{"applications":"view","deployments":"view","statefulsets":"view",
    "daemonsets":"view","jobs":"view","cronjobs":"view","pods":"view","services":"view","ingresses":"view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-application-workloads
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-app-workloads
spec:
  description:
    en: 'View resources such as applications, services, workloads and jobs in the project.'
    zh: '查看项目中的应用、服务、工作负载和任务等资源。'
  displayName:
    en: Application Workload Viewing
    zh: '应用负载查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - jobs
        - cronjobs
        - pods
        - pods/log
        - pods/containers
        - services
        - ingresses
        - router
        - horizontalpodautoscalers
        - configmaps
        - secrets
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-app-workloads"]'
    iam.kubesphere.io/role-template-rules: '{"applications":"manage","deployments":"manage","statefulsets":"manage",
      "daemonsets":"manage","jobs":"manage","cronjobs":"manage","pods":"manage","services":"manage","ingresses":"manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-application-workloads
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-app-workloads
spec:
  description:
    en: 'Manage resources such as applications, services, workloads and jobs in the project.'
    zh: '管理项目中的应用、服务、工作负载和任务等资源。'
  displayName:
    en: Application Workload Management
    zh: '应用负载管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - services
        - applications
        - controllerrevisions
        - deployments
        - replicasets
        - statefulsets
        - daemonsets
        - jobs
        - cronjobs
        - pods
        - pods/log
        - pods/exec
        - pods/containers
        - services
        - ingresses
        - router
        - workloads
        - horizontalpodautoscalers
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - secrets
      verbs:
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"configmaps": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-configmaps
spec:
  description:
    en: 'View configmaps in the project.'
    zh: '查看项目中的配置字典。'
  displayName:
    en: ConfigMap Viewing
    zh: '配置字典查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - configmaps
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-configmaps"]'
    iam.kubesphere.io/role-template-rules: '{"configmaps": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-configmaps
spec:
  description:
    en: 'Create, edit, and delete configmaps in the project.'
    zh: '创建、编辑和删除项目中的配置字典。'
  displayName:
    en: ConfigMap Management
    zh: '配置字典管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - configmaps
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"secrets": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-secrets
spec:
  description:
    en: 'View secrets in the project.'
    zh: '查看项目中的保密字典。'
  displayName:
    en: Secret Viewing
    zh: '保密字典查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - secrets
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-secrets"]'
    iam.kubesphere.io/role-template-rules: '{"secrets": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-secrets
spec:
  description:
    en: 'Create, edit, and delete secrets in the project.'
    zh: '创建、编辑和删除项目中的保密字典。'
  displayName:
    en: Secret Management
    zh: '保密字典管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - secrets
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-roles","namespace-view-secrets"]'
    iam.kubesphere.io/role-template-rules: '{"serviceaccounts": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-serviceaccount
spec:
  description:
    en: 'View service accounts in the project.'
    zh: '查看项目中的服务账户。'
  displayName:
    en: Service Account Viewing
    zh: '服务账户查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - serviceaccounts
      verbs:
        - get
        - list
        - watch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-serviceaccount"]'
    iam.kubesphere.io/role-template-rules: '{"serviceaccounts": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-configuration-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-serviceaccount
spec:
  description:
    en: 'Create, edit, and delete service accounts in the project.'
    zh: '创建、编辑和删除项目中的服务帐户。'
  displayName:
    en: Service Account Management
    zh: '服务账户管理'
  rules:
    - apiGroups:
        - '*'
      resources:
        - serviceaccounts
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"persistentvolumeclaims": "view"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-viewer: ""
    iam.kubesphere.io/category: namespace-storage-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-view-persistentvolumeclaims
spec:
  description:
    en: 'View persistent volume claims in the project.'
    zh: '查看项目中的持久卷声明。'
  displayName:
    en: PersistentVolumeClaims Viewing
    zh: '持久卷声明查看'
  rules:
    - apiGroups:
        - '*'
      resources:
        - persistentvolumeclaims
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - '*'
      resources:
        - pods
      verbs:
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/dependencies: '["namespace-view-persistentvolumeclaims"]'
    iam.kubesphere.io/role-template-rules: '{"persistentvolumeclaims": "manage"}'
  labels:
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/category: namespace-storage-management
    iam.kubesphere.io/scope: "namespace"
    kubesphere.io/managed: "true"
  name: namespace-manage-persistentvolumeclaims
spec:
  description:
    en: 'Create, edit, and delete persistent volume claims in the project.'
    zh: '创建、编辑和删除项目中的持久卷声明。'
  displayName:
    en: PersistentVolumeClaims Management
    zh: 持久卷声明管理
  rules:
    - apiGroups:
        - '*'
      resources:
        - persistentvolumeclaims
      verbs:
        - '*'
    - apiGroups:
        - '*'
      resources:
        - pods
      verbs:
        - list
---
# Source: ks-core/templates/roletemplates.yaml
# global scope role templates
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"manage-app": "manage"}'
  labels:
    iam.kubesphere.io/category: manage-app
    iam.kubesphere.io/scope: global
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-admin: ""
  name: global-role-template-manage-app
spec:
  description:
    en: 'AppStore Management'
    zh: '应用商店管理'
  displayName:
    en: 'AppStore Management'
    zh: '应用商店管理'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - '*'
      verbs:
        - '*'

# workspace scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-repos": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: workspace-view-app-repos
spec:
  description:
    en: 'Workspace App Repos View'
    zh: '企业空间应用仓库查看。'
  displayName:
    en: 'Workspace App Repos View'
    zh: '应用仓库查看'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - repos
        - repos/events
      verbs:
        - get
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-repos": "manage"}'
    iam.kubesphere.io/dependencies: '["workspace-view-app-repos"]'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-self-provisioner: ""
    iam.kubesphere.io/aggregate-to-admin: ""
  name: workspace-manage-app-repos
spec:
  description:
    en: 'Workspace App Repos Management'
    zh: '企业空间应用仓库管理。'
  displayName:
    en: 'Workspace App Repos Management'
    zh: '应用仓库管理'
  rules:
    - apiGroups:
        - 'application.kubesphere.io'
      resources:
        - 'repos'
        - 'repos/events'
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-templates": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: workspace-view-app-templates
spec:
  description:
    en: 'Application/application version/application instance view'
    zh: '应用/应用版本/应用实例查看'
  displayName:
    en: 'Application/application version/application instance view'
    zh: '应用/应用版本/应用实例查看'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - 'apps'
        - 'apps/versions'
        - 'applications'
        - 'attachments'
      verbs:
        - get
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-templates": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: workspace-view-create-app-templates
spec:
  description:
    en: 'Workspace Application/application version/application instance view and create'
    zh: '应用/应用版本/应用实例查看和创建'
  displayName:
    en: 'Workspace Application/application version/application instance view and create'
    zh: '应用/应用版本/应用实例查看和创建'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - 'apps'
        - 'apps/versions'
        - 'applications'
        - 'attachments'
      verbs:
        - get
        - list
        - create
        - update
        - patch
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-templates": "view"}'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: workspace-delete-app-templates
spec:
  description:
    en: 'Workspace Application/application version/application instance deletion'
    zh: '应用/应用版本/应用实例删除'
  displayName:
    en: 'Application/application version/application instance deletion'
    zh: '应用/应用版本/应用实例删除'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - 'apps'
        - 'apps/versions'
        - 'applications'
        - 'attachments'
      verbs:
        - delete
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-templates": "manage"}'
    iam.kubesphere.io/dependencies: '["workspace-view-app-templates","workspace-view-create-app-templates","workspace-delete-app-templates"]'
  labels:
    iam.kubesphere.io/category: workspace-app
    iam.kubesphere.io/scope: workspace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-self-provisioner: ""
    iam.kubesphere.io/aggregate-to-admin: ""
  name: workspace-manage-app-templates
spec:
  description:
    en: 'Workspace applications/application versions/application instance management'
    zh: '应用/应用版本/应用实例管理'
  displayName:
    en: 'Workspace applications/application versions/application instance management'
    zh: '应用/应用版本/应用实例管理'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - 'apps'
        - 'apps/versions'
        - 'applications'
        - 'attachments'
      verbs:
        - '*'

# namespace scope role templates
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-releases": "view"}'
  labels:
    iam.kubesphere.io/category: namespace-app
    iam.kubesphere.io/scope: namespace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-viewer: ""
  name: namespace-view-app-releases
spec:
  description:
    en: 'Namespace App Releases View'
    zh: '项目下查看应用实例等。'
  displayName:
    en: 'Namespace App Releases View'
    zh: '应用实例查看'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - applications
        - attachments
      verbs:
        - get
        - list
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-releases": "manage"}'
    iam.kubesphere.io/dependencies: '["namespace-view-app-releases","namespace-delete-app-releases","namespace-create-app-releases"]'
  labels:
    iam.kubesphere.io/category: namespace-app
    iam.kubesphere.io/scope: namespace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-admin: ""
  name: namespace-manage-app-releases
spec:
  description:
    en: 'Namespace App Releases Management'
    zh: '项目下应用实例管理'
  displayName:
    en: 'Namespace App Releases Management'
    zh: '应用实例管理'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - applications
        - attachments
      verbs:
        - '*'
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-releases": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-app
    iam.kubesphere.io/scope: namespace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-admin: ""
  name: namespace-delete-app-releases
spec:
  description:
    en: 'Namespace Application instance deletion'
    zh: '项目下应用实例删除'
  displayName:
    en: 'Namespace Application instance deletion'
    zh: '应用实例删除'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - applications
        - attachments
      verbs:
        - delete
---
# Source: ks-core/templates/roletemplates.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: RoleTemplate
metadata:
  annotations:
    iam.kubesphere.io/role-template-rules: '{"app-releases": "manage"}'
  labels:
    iam.kubesphere.io/category: namespace-app
    iam.kubesphere.io/scope: namespace
    kubesphere.io/managed: "true"
    iam.kubesphere.io/aggregate-to-operator: ""
    iam.kubesphere.io/aggregate-to-admin: ""
  name: namespace-create-app-releases
spec:
  description:
    en: 'Namespace Application instance create'
    zh: '项目下应用实例创建'
  displayName:
    en: 'Namespace Application instance create'
    zh: '应用实例创建'
  rules:
    - apiGroups:
        - application.kubesphere.io
      resources:
        - applications
        - attachments
      verbs:
        - post
---
# Source: ks-core/templates/user.yaml
apiVersion: iam.kubesphere.io/v1beta1
kind: User
metadata:
  name: admin
  annotations:
    iam.kubesphere.io/uninitialized: "true"
    iam.kubesphere.io/globalrole: "platform-admin"
    kubesphere.io/creator: "system"
spec:
  email: admin@kubesphere.io
  password: "$2a$10$zcHepmzfKPoxCVCYZr5K7ORPZZ/ySe9p/7IUb/8u./xHrnSX2LOCO"
status:
  state: Active
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: users.iam.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-iam-kubesphere-io-v1beta1-user
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    name: users.iam.kubesphere.io
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: app.kubernetes.io/managed-by
          operator: NotIn
          values:
            - Helm
    rules:
      - apiGroups:
          - iam.kubesphere.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - users
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validator.installplan.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-kubesphere-io-v1alpha1-installplan
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: installplans.kubesphere.io
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: app.kubernetes.io/managed-by
          operator: NotIn
          values:
            - Helm
    rules:
      - apiGroups:
          - kubesphere.io
        apiVersions:
          - 'v1alpha1'
        operations:
          - CREATE
          - UPDATE
        resources:
          - installplans
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: resourcesquotas.quota.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-quota-kubesphere-io-v1alpha2
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    name: resourcesquotas.quota.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - ''
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
          - persistentvolumeclaims
          - services
        scope: '*'
    sideEffects: None
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: extensions.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-extensions-kubesphere-io-v1alpha1-jsbundle
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: jsbundles.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jsbundles
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-extensions-kubesphere-io-v1alpha1-apiservice
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: apiservices.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - apiservices
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate-extensions-kubesphere-io-v1alpha1-reverseproxy
        port: 443
    failurePolicy: Fail
    matchPolicy: Exact
    name: reverseproxies.extensions.kubesphere.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
      - apiGroups:
          - extensions.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - reverseproxies
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validator.config.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /validate--v1-secret
        port: 443
    failurePolicy: Ignore
    matchPolicy: Exact
    name: validator.config.kubesphere.io
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: config.kubesphere.io/type
          operator: Exists
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - secrets
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: license.kubesphere.io
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lSQVBPWXI5dE10UTRraGpabnBrbWxZTG93RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2MyVnNaaTF6YVdkdVpXUXRZMkV3SGhjTk1qUXdOakl3TVRRMU56STNXaGNOTXpRdwpOakU0TVRRMU56STNXakFaTVJjd0ZRWURWUVFERXc1elpXeG1MWE5wWjI1bFpDMWpZVENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEtKMUtCOWxFY2k3a1lSSkR6S1E5cU1BaWdnb0t2QUZKUGMKTXJSanRhbHRLV2dEY05IdGtWWm1lSE5GQjgvclRtRFp0K1FuOGJaV2hXNUszVFU5NkVuY3pyeWZqMFdxbklXcwpaVmZ6aTlYZzBla0UyMzBEbFBpODAxck8zdkdDaWhCYnFZNXlpUm9vRTVwc01DK3Rma0xjdEsxOVMzYlpuOU5hClVrM3BWNDBycUw5bmlNcjNXbkNoK3pUbCtOSjZFQm8yMEpLdWhVQlcvMnExdkc4RElVaWV2SldxVVdaRWF2KzEKd1J6Z0ZPdmFOM1hLSldIeThpTlQvdFRTNHJ2QVpBN2s0RFRObm9ZZnhpZ2dYeU1YWjB6S0xJbEhUUmxxZ2JsbgpBdHI0Y1RqaHhWL0VMSUk2VGcwenZkUVI1REdVYmt1NTNlNVE5WXVlM1VBZW05WVhCT1VDQXdFQUFhTmhNRjh3CkRnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRxVExjdGxPczZyTjBPQ2JYbHJmckV1K3BHYVRBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYQ3JCcU9vWVN4Z3dDZDVlMlBRQjJRbGN3WVd3NkNOV2YyY3BBdDc2Clpvay9DOURDcjJSTXlMT295ZEhXL3BIV0hwNVBFR214RVE0Y2lod1JWc0pmQ0wvMnR5VkJycGNGQkJ2UllWTlkKNlBMZTNaNlRmc3VvcnNNRlNURVJ5TFhiTnhtbEkrTGxTV3lvVXRKU0xHb3FJSHNGMzN5Wjl0MDM2bnJFVk9FeApUYkJEa1dGV3pqdVNaem4rcm5UZFlvM0JLRTlTTThBZzk2Q2UzZjVoR3BZODdBdjRtYW84VVZhZUg5RXNUYnBECkJxa05ZLzlMTE5DNTBaaDRUZjU2T21VUmFveFptdVdkUWkwVnlEc2xBU1U5eXJERS9OcWRZMk9xTFhhMmJ1NGsKVDZyOFoxVGxtVldXUXJtNU1ad29hQXRvOVQzVHBxeGJrSlNyRDdYVG5sd0lGZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      service:
        name: ks-controller-manager
        namespace: kubesphere-system
        path: /license-cluster-checker
        port: 443
    name: license-cluster-checker.kubesphere.io
    failurePolicy: Ignore
    matchPolicy: Exact
    namespaceSelector: {}
    objectSelector:
      matchExpressions:
        - key: cluster-role.kubesphere.io/host
          operator: DoesNotExist
    rules:
      - apiGroups:
          - cluster.kubesphere.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - clusters
        scope: '*'
    sideEffects: None
    timeoutSeconds: 30
---
# Source: ks-core/templates/workspace.yaml
apiVersion: tenant.kubesphere.io/v1beta1
kind: WorkspaceTemplate
metadata:
  annotations:
    kubesphere.io/creator: admin
    kubesphere.io/description: "system-workspace is a built-in workspace automatically created by KubeSphere. It contains all system components to run KubeSphere."
  name: system-workspace
spec:
  placement:
    clusterSelector: {}
  template:
    spec:
      manager: admin
---
# Source: ks-core/templates/post-delete-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "my-release-post-delete"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: ks-core/templates/post-delete-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "my-release-post-delete-scripts"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
data:
  map.yaml: |
    mappings:
      - deprecatedAPI: "apiVersion: app.k8s.io/v1beta1\nkind: Application\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: application.kubesphere.io/v2\nkind: ApplicationRelease\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: application.kubesphere.io/v2\nkind: Application\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: application.kubesphere.io/v2\nkind: ApplicationVersion\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: application.kubesphere.io/v2\nkind: Category\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: application.kubesphere.io/v2\nkind: Repo\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: cluster.kubesphere.io/v1alpha1\nkind: Cluster\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: cluster.kubesphere.io/v1alpha1\nkind: Label\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: extensions.kubesphere.io/v1alpha1\nkind: APIService\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: extensions.kubesphere.io/v1alpha1\nkind: ExtensionEntry\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: extensions.kubesphere.io/v1alpha1\nkind: JSBundle\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: extensions.kubesphere.io/v1alpha1\nkind: ReverseProxy\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: gateway.kubesphere.io/v1alpha2\nkind: IngressClassScope\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: BuiltinRole\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: Category\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: ClusterRoleBinding\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: ClusterRole\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1alpha2\nkind: GlobalRoleBinding\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: GlobalRoleBinding\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1alpha2\nkind: GlobalRole\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: GlobalRole\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1alpha2\nkind: GroupBinding\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: GroupBinding\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1alpha2\nkind: Group\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: Group\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1alpha2\nkind: LoginRecord\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: LoginRecord\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: RoleBinding\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: Role\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: RoleTemplate\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1alpha2\nkind: User\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: User\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1alpha2\nkind: WorkspaceRoleBinding\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: WorkspaceRoleBinding\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1alpha2\nkind: WorkspaceRole\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: iam.kubesphere.io/v1beta1\nkind: WorkspaceRole\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: kubesphere.io/v1alpha1\nkind: Category\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: kubesphere.io/v1alpha1\nkind: Extension\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: kubesphere.io/v1alpha1\nkind: ExtensionVersion\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: kubesphere.io/v1alpha1\nkind: InstallPlan\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: kubesphere.io/v1alpha1\nkind: Repository\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: kubesphere.io/v1alpha1\nkind: ServiceAccount\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: marketplace.kubesphere.io/v1alpha1\nkind: Subscription\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: quota.kubesphere.io/v1alpha2\nkind: ResourceQuota\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: storage.kubesphere.io/v1alpha1\nkind: ProvisionerCapability\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: storage.kubesphere.io/v1alpha1\nkind: StorageClassCapability\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: telemetry.kubesphere.io/v1alpha1\nkind: ClusterInfo\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: tenant.kubesphere.io/v1alpha1\nkind: Workspace\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: tenant.kubesphere.io/v1beta1\nkind: Workspace\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: tenant.kubesphere.io/v1alpha2\nkind: WorkspaceTemplate\n"
        removedInVersion: "v1.30.0"
      - deprecatedAPI: "apiVersion: tenant.kubesphere.io/v1beta1\nkind: WorkspaceTemplate\n"
        removedInVersion: "v1.30.0"
  post-delete.sh: |
    #!/usr/bin/env bash
  
    # set -x
  
    CRD_NAMES=$1
    MAPPING_CONFIG=$2
  
    for extension in `kubectl get extension | grep 'Installed' | awk '{print $1}'`
    do
      version=$(kubectl get extension $extension -o=jsonpath='{.status.installedVersion}')
      extensionversion=$extension-$version
      echo "Found extension $extensionversion installed"
      helm status $extension --namespace extension-$extension
      if [ $? -eq 0 ]; then
        helm mapkubeapis $extension --namespace extension-$extension --mapfile $MAPPING_CONFIG
      fi
      helm status $extension-agent --namespace extension-$extension
      if [ $? -eq 0 ]; then
        helm mapkubeapis $extension-agent --namespace extension-$extension --mapfile $MAPPING_CONFIG
      fi
    done
  
    # delete crds
    for crd in `kubectl get crds -o jsonpath="{.items[*].metadata.name}"`
    do
      if [[ ${CRD_NAMES[@]/${crd}/} != ${CRD_NAMES[@]} ]]; then
         scop=$(eval echo $(kubectl get crd ${crd} -o jsonpath="{.spec.scope}"))
         if [[ $scop =~ "Namespaced" ]] ; then
            kubectl get $crd -A --no-headers | awk '{print $1" "$2" ""'$crd'"}' | xargs -n 3 sh -c 'kubectl patch $2 -n $0 $1 -p "{\"metadata\":{\"finalizers\":null}}" --type=merge 2>/dev/null && kubectl delete $2 -n $0 $1 2>/dev/null'
         else
            kubectl get $crd -A --no-headers | awk '{print $1" ""'$crd'"}' | xargs -n 2 sh -c 'kubectl patch $1 $0 -p "{\"metadata\":{\"finalizers\":null}}" --type=merge 2>/dev/null && kubectl delete $1 $0 2>/dev/null'
         fi
         kubectl delete crd $crd 2>/dev/null;
      fi
    done
  
  
    EXTENSION_RELATED_RESOURCES='jobs.batch roles.rbac.authorization.k8s.io rolebindings.rbac.authorization.k8s.io clusterroles.rbac.authorization.k8s.io clusterrolebindings.rbac.authorization.k8s.io'
  
    for resource in $EXTENSION_RELATED_RESOURCES;do
      echo "kubectl delete $resource -l kubesphere.io/extension-ref --all-namespaces"
      kubectl delete $resource -l kubesphere.io/managed=true --all-namespaces
    done
---
# Source: ks-core/templates/pre-delete-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "my-release-pre-delete-scripts"
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
data:
  pre-delete.sh: |
    #!/usr/bin/env bash
  
    set -x
  
    kubectl patch workspaces.tenant.kubesphere.io system-workspace -p '{"metadata":{"finalizers":[]}}' --type=merge
    kubectl patch workspacetemplates.tenant.kubesphere.io system-workspace -p '{"metadata":{"finalizers":[]}}' --type=merge
    for ns in $(kubectl get ns -o jsonpath='{.items[*].metadata.name}')
    do
      kubectl label ns $ns kubesphere.io/workspace- && \
      kubectl patch ns $ns -p '{"metadata":{"ownerReferences":[]}}' --type=merge && \
      echo "{\"kind\":\"Namespace\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"$ns\",\"finalizers\":null}}" | kubectl replace --raw "/api/v1/namespaces/$ns/finalize" -f -
    done
---
# Source: ks-core/templates/pre-upgrade-job.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ks-upgrade
  namespace: ks-core-1.0.0.tgz
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-1"
  labels:
    app: ks-upgrade
    version: v4.1.0
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
  storageClassName:
---
# Source: ks-core/templates/post-delete-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "my-release-post-delete"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: "my-release-post-delete"
    namespace: ks-core-1.0.0.tgz
---
# Source: ks-core/templates/post-delete-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-release-post-delete"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: "my-release-post-delete"
      containers:
        - name: post-delete-job
          image: registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
          command:
            - /bin/bash
            - /scripts/post-delete.sh
            - 'applications.app.k8s.io applicationreleases.application.kubesphere.io applications.application.kubesphere.io applicationversions.application.kubesphere.io categories.application.kubesphere.io repos.application.kubesphere.io clusters.cluster.kubesphere.io labels.cluster.kubesphere.io apiservices.extensions.kubesphere.io extensionentries.extensions.kubesphere.io jsbundles.extensions.kubesphere.io reverseproxies.extensions.kubesphere.io ingressclassscopes.gateway.kubesphere.io builtinroles.iam.kubesphere.io categories.iam.kubesphere.io clusterrolebindings.iam.kubesphere.io clusterroles.iam.kubesphere.io globalrolebindings.iam.kubesphere.io globalroles.iam.kubesphere.io groupbindings.iam.kubesphere.io groups.iam.kubesphere.io loginrecords.iam.kubesphere.io rolebindings.iam.kubesphere.io roles.iam.kubesphere.io roletemplates.iam.kubesphere.io users.iam.kubesphere.io workspacerolebindings.iam.kubesphere.io workspaceroles.iam.kubesphere.io categories.kubesphere.io extensions.kubesphere.io extensionversions.kubesphere.io installplans.kubesphere.io repositories.kubesphere.io serviceaccounts.kubesphere.io subscriptions.marketplace.kubesphere.io resourcequotas.quota.kubesphere.io provisionercapabilities.storage.kubesphere.io storageclasscapabilities.storage.kubesphere.io clusterinfoes.telemetry.kubesphere.io workspaces.tenant.kubesphere.io workspacetemplates.tenant.kubesphere.io'
            - /scripts/map.yaml
          volumeMounts:
            - mountPath: /scripts
              name: scripts
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
      volumes:
        - name: scripts
          configMap:
            name: "my-release-post-delete-scripts"
            defaultMode: 420
---
# Source: ks-core/templates/post-patch-system-ns-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-release-post-patch-system-ns"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: kubesphere
      containers:
        - name: post-patch-system-ns
          image: registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
          command:
            - /bin/bash
            - -c
            - |
              kubectl create namespace kubesphere-controls-system --dry-run=client -o yaml | kubectl apply -f -
              for ns in kubesphere-system kubesphere-controls-system default kube-node-lease kube-public kube-system;
              do
                kubectl label ns $ns kubesphere.io/workspace=system-workspace
                kubectl label ns $ns kubesphere.io/managed=true
              done
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
---
# Source: ks-core/templates/post-upgrade-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-post-upgrade
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: kubesphere
      containers:
        - name: post-upgrade-job
          image: registry.cn-beijing.aliyuncs.com/kse/ks-upgrade:v4.1.0
          imagePullPolicy: IfNotPresent
          command:
            - ks-upgrade
            - post-upgrade
            - --logtostderr=true
            - --config=/etc/kubesphere/config.yaml
          volumeMounts:
            - mountPath: /tmp/ks-upgrade
              name: data
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ks-upgrade
---
# Source: ks-core/templates/pre-delete-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-release-pre-delete"
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: kubesphere
      containers:
        - name: pre-delete-job
          image: registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.27.12
          command:
            - /bin/bash
            - /scripts/pre-delete.sh
          volumeMounts:
            - mountPath: /scripts
              name: scripts
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
      volumes:
        - name: scripts
          configMap:
            name: "my-release-pre-delete-scripts"
            defaultMode: 420
---
# Source: ks-core/templates/pre-upgrade-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-pre-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: kubesphere
      containers:
        - name: pre-upgrade-job
          image: registry.cn-beijing.aliyuncs.com/kse/ks-upgrade:v4.1.0
          imagePullPolicy: IfNotPresent
          command:
            - ks-upgrade
            - pre-upgrade
            - --logtostderr=true
            - --config=/etc/kubesphere/config.yaml
          volumeMounts:
            - mountPath: /tmp/ks-upgrade
              name: data
          resources:
            limits:
              cpu: 1
              memory: 1024Mi
            requests:
              cpu: 20m
              memory: 100Mi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: ks-upgrade
