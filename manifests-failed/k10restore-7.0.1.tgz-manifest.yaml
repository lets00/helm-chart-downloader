---
# Source: k10restore/templates/serviceaccount.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-7.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.0.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-k10restore
  namespace: k10restore-7.0.1.tgz
---
# Source: k10restore/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-7.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.0.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-cluster-role
  namespace: k10restore-7.0.1.tgz
rules:
- apiGroups:
  - actions.kio.kasten.io
  - config.kio.kasten.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - cr.kanister.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
---
# Source: k10restore/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-7.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.0.1"
    app.kubernetes.io/managed-by: Helm
  name: k10restore-7.0.1.tgz-my-release-k10restore-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  my-release-cluster-role
subjects:
- kind: ServiceAccount
  name: my-release-k10restore
  namespace: k10restore-7.0.1.tgz
---
# Source: k10restore/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-7.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.0.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-role
  namespace: k10restore-7.0.1.tgz
rules:
- apiGroups:
  - config.kio.kasten.io
  resources:
  - "profiles"
  verbs:
  - get
  - list
- apiGroups:
  - cr.kanister.io
  resources:
  - "profiles"
  verbs:
  - get
  - create
  - update
  - delete
- apiGroups:
  - config.kio.kasten.io
  resources:
  - "policies"
  verbs:
  - get
  - create
  - delete
- apiGroups:
  - cr.kanister.io
  resources:
  - "blueprints"
  - "actionsets"
  verbs:
  - get
  - create
  - delete
- apiGroups:
  - "apps"
  resources:
  - deployments
  - replicasets
  verbs:
  - get
  - update
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  - persistentvolumeclaims
  verbs:
  - get
  - update
  - list
- apiGroups:
  - ""
  resources:
  - secrets
  - pods
  - pods/exec
  - services
  verbs:
  - get
  - create
  - list
  - delete
- apiGroups:
  - "networking.k8s.io"
  resources:
  - networkpolicies
  verbs:
  - get
  - create
  - list
  - delete
- apiGroups:
  - "actions.kio.kasten.io"
  resources:
  - restoreactions
  verbs:
  - list
  - get
- apiGroups:
  - ""
  resources:
  - events
  - endpoints
  verbs:
  - list
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - get
  - create
- apiGroups:
  - "apik10.kasten.io"
  resources:
  - k10s
  verbs:
  - list
  - patch
- apiGroups:
  - "apps"
  resources:
  - deployments
  verbs:
  - watch
---
# Source: k10restore/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-7.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.0.1"
    app.kubernetes.io/managed-by: Helm
  name: k10restore-7.0.1.tgz-my-release-k10restore
  namespace: k10restore-7.0.1.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-role
subjects:
- kind: ServiceAccount
  name: my-release-k10restore
  namespace: k10restore-7.0.1.tgz
---
# Source: k10restore/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-k10restore
  labels:
    app.kubernetes.io/name: k10restore
    helm.sh/chart: k10restore-7.0.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k10restore
        app.kubernetes.io/instance: my-release
        access-k10-services: allowed # for accessing K10 services (as per access-k10-services K10 networkpolicy)
    spec:
      restartPolicy: Never
      serviceAccountName: my-release-k10restore
      containers:
        - name: k10restore          
          image: gcr.io/kasten-images/restorectl:7.0.1
          imagePullPolicy: Always
          args:
          - restore
          - -c=
          - -q=false
          - -p=
          - -n=k10restore-7.0.1.tgz
          resources:
            null
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: RESTORE_TIMEOUT
            value: "90"
          - name: KANISTER_TOOLS
            valueFrom:
              configMapKeyRef:
                name: k10-config
                key: KanisterToolsImage
