---
# Source: wg-easy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-wg-easy
  namespace: wg-easy-0.1.0.tgz
  labels:

    helm.sh/chart: wg-easy-0.1.0
    app.kubernetes.io/name: wg-easy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "9"
    app.kubernetes.io/managed-by: Helm
---
# Source: wg-easy/templates/wg-easy-volume.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-wg-easy
  namespace: wg-easy-0.1.0.tgz
  annotations:
    helm.sh/resource-policy: keep
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage:  100m
---
# Source: wg-easy/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-wg-easy-headless
  namespace: wg-easy-0.1.0.tgz
  labels:
    helm.sh/chart: wg-easy-0.1.0
    app.kubernetes.io/name: wg-easy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "9"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 51820
      targetPort: udp-vpn
      protocol: UDP
      name: udp-vpn
    - port: 51821
      targetPort: http-ui
      protocol: TCP
      name: http-ui
  selector:
    app.kubernetes.io/name: wg-easy
    app.kubernetes.io/instance: my-release
---
# Source: wg-easy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-wg-easy
  namespace: wg-easy-0.1.0.tgz
  labels:
    helm.sh/chart: wg-easy-0.1.0
    app.kubernetes.io/name: wg-easy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "9"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/probe: "true"
    prometheus.io/probe-path: /
spec:
  type: ClusterIP
  ports:
    - port: 51820
      targetPort: udp-vpn
      protocol: UDP
      name: udp-vpn
    - port: 51821
      targetPort: http-ui
      protocol: TCP
      name: http-ui
  selector:
    app.kubernetes.io/name: wg-easy
    app.kubernetes.io/instance: my-release
---
# Source: wg-easy/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-wg-easy
  namespace: wg-easy-0.1.0.tgz
  labels:
    helm.sh/chart: wg-easy-0.1.0
    app.kubernetes.io/name: wg-easy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "9"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: my-release-wg-easy-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: wg-easy
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wg-easy
        app.kubernetes.io/instance: my-release
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: my-release-wg-easy
      securityContext:
        {}
      volumes:
        - name: wireguard-volume
          persistentVolumeClaim:
            claimName: my-release-wg-easy
      containers:
        - name: wg-easy
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
          image: "ghcr.io/wg-easy/wg-easy:9"
          imagePullPolicy: IfNotPresent
          ports:
            - name: udp-vpn
              containerPort: 51820
              protocol: UDP
            - name: http-ui
              containerPort: 51821
              protocol: TCP
          volumeMounts:
            - mountPath: "/etc/wireguard"
              name: wireguard-volume
          livenessProbe:
            httpGet:
              path: "/"
              port: http-ui
          readinessProbe:
            httpGet:
              path: "/"
              port: http-ui
          resources:
            {}
          env:
          - name: PASSWORD
            value: "password"
          - name: WG_HOST
            value: "localhost"
---
# Source: wg-easy/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-wg-easy-test-connection"
  labels:

    helm.sh/chart: wg-easy-0.1.0
    app.kubernetes.io/name: wg-easy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "9"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['my-release-wg-easy:51821']
  restartPolicy: Never
