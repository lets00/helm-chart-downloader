---
# Source: open-feature-operator/templates/v1_serviceaccount_open-feature-operator-controller-manager.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: open-feature-operator-controller-manager
  namespace: 'open-feature-operator-v0.6.1.tgz'
---
# Source: open-feature-operator/templates/v1_serviceaccount_open-feature-operator-flagd-proxy.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: open-feature-operator-flagd-proxy
  namespace: 'open-feature-operator-v0.6.1.tgz'
---
# Source: open-feature-operator/templates/v1_configmap_open-feature-operator-manager-config.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: ":8081"
    metrics:
      bindAddress: "127.0.0.1:8080"
    webhook:
      port: 09443
kind: ConfigMap
metadata:
  name: open-feature-operator-manager-config
  namespace: 'open-feature-operator-v0.6.1.tgz'
---
# Source: open-feature-operator/templates/crds/apiextensions.k8s.io_v1_customresourcedefinition_featureflags.core.openfeature.dev.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: featureflags.core.openfeature.dev
spec:
  group: core.openfeature.dev
  names:
    kind: FeatureFlag
    listKind: FeatureFlagList
    plural: featureflags
    shortNames:
    - ff
    singular: featureflag
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: FeatureFlag is the Schema for the featureflags API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FeatureFlagSpec defines the desired state of FeatureFlag
            properties:
              flagSpec:
                description: FlagSpec is the structured representation of the feature
                  flag specification
                properties:
                  $evaluators:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  flags:
                    additionalProperties:
                      properties:
                        defaultVariant:
                          type: string
                        state:
                          enum:
                          - ENABLED
                          - DISABLED
                          type: string
                        targeting:
                          description: Targeting is the json targeting rule
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        variants:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - defaultVariant
                      - state
                      - variants
                      type: object
                    type: object
                required:
                - flags
                type: object
            type: object
          status:
            description: FeatureFlagStatus defines the observed state of FeatureFlag
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: open-feature-operator/templates/crds/apiextensions.k8s.io_v1_customresourcedefinition_featureflagsources.core.openfeature.dev.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: featureflagsources.core.openfeature.dev
spec:
  group: core.openfeature.dev
  names:
    kind: FeatureFlagSource
    listKind: FeatureFlagSourceList
    plural: featureflagsources
    shortNames:
    - ffs
    singular: featureflagsource
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: FeatureFlagSource is the Schema for the FeatureFlagSources API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FeatureFlagSourceSpec defines the desired state of FeatureFlagSource
            properties:
              debugLogging:
                description: DebugLogging defines whether to enable --debug flag of
                  flagd sidecar. Default false (disabled).
                type: boolean
              defaultSyncProvider:
                description: DefaultSyncProvider defines the default sync provider
                type: string
              envVarPrefix:
                description: EnvVarPrefix defines the prefix to be applied to all
                  environment variables applied to the sidecar, default FLAGD
                type: string
              envVars:
                description: |-
                  EnvVars define the env vars to be applied to the sidecar, any env vars in FeatureFlag CRs
                  are added at the lowest index, all values will have the EnvVarPrefix applied, default FLAGD
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              evaluator:
                description: Evaluator sets an evaluator, defaults to 'json'
                type: string
              logFormat:
                description: LogFormat allows for the sidecar log format to be overridden,
                  defaults to 'json'
                type: string
              managementPort:
                description: ManagemetPort defines the port to serve management on,
                  defaults to 8014
                format: int32
                type: integer
              otelCollectorUri:
                description: OtelCollectorUri defines whether to enable --otel-collector-uri
                  flag of flagd sidecar. Default false (disabled).
                type: string
              port:
                description: Port defines the port to listen on, defaults to 8013
                format: int32
                type: integer
              probesEnabled:
                description: ProbesEnabled defines whether to enable liveness and
                  readiness probes of flagd sidecar. Default true (enabled).
                type: boolean
              resources:
                description: Resources defines flagd sidecar resources. Default to
                  operator sidecar-cpu-* and sidecar-ram-* flags.
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.


                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.


                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              rolloutOnChange:
                description: |-
                  RolloutOnChange dictates whether annotated deployments will be restarted when configuration changes are
                  detected in this CR, defaults to false
                type: boolean
              socketPath:
                description: SocketPath defines the unix socket path to listen on
                type: string
              sources:
                description: SyncProviders define the syncProviders and associated
                  configuration to be applied to the sidecar
                items:
                  properties:
                    certPath:
                      description: CertPath is a path of a certificate to be used
                        by grpc TLS connection
                      type: string
                    httpSyncBearerToken:
                      description: HttpSyncBearerToken is a bearer token. Used by
                        http(s) sync provider only
                      type: string
                    interval:
                      description: Interval is a flag configuration interval in seconds
                        used by http provider
                      format: int32
                      type: integer
                    provider:
                      description: Provider type - kubernetes, http(s), grpc(s) or
                        file
                      type: string
                    providerID:
                      description: ProviderID is an identifier to be used in grpc
                        provider
                      type: string
                    selector:
                      description: Selector is a flag configuration selector used
                        by grpc provider
                      type: string
                    source:
                      description: Source is a URI of the flag sources
                      type: string
                    tls:
                      description: TLS - Enable/Disable secure TLS connectivity. Currently
                        used only by GRPC sync
                      type: boolean
                  required:
                  - source
                  type: object
                minItems: 1
                type: array
              syncProviderArgs:
                description: SyncProviderArgs are string arguments passed to all sync
                  providers, defined as key values separated by =
                items:
                  type: string
                type: array
            required:
            - sources
            type: object
          status:
            description: FeatureFlagSourceStatus defines the observed state of FeatureFlagSource
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: open-feature-operator/templates/crds/apiextensions.k8s.io_v1_customresourcedefinition_flagds.core.openfeature.dev.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: flagds.core.openfeature.dev
spec:
  group: core.openfeature.dev
  names:
    kind: Flagd
    listKind: FlagdList
    plural: flagds
    singular: flagd
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Flagd is the Schema for the flagds API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FlagdSpec defines the desired state of Flagd
            properties:
              featureFlagSource:
                description: |-
                  FeatureFlagSource references to a FeatureFlagSource from which the created flagd instance retrieves
                  the feature flag configurations
                type: string
              ingress:
                description: Ingress
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations the annotations to be added to the ingress
                    type: object
                  enabled:
                    description: Enabled enables/disables the ingress for flagd
                    type: boolean
                  flagdPath:
                    description: |-
                      FlagdPath is the path to be used for accessing the flagd flag evaluation API
                      Default: /flagd.evaluation.v1.Service
                    type: string
                  hosts:
                    description: |-
                      Hosts list of hosts to be added to the ingress.
                      Empty string corresponds to rule with no host.
                    items:
                      type: string
                    type: array
                  ingressClassName:
                    description: IngressClassName defines the name if the ingress
                      class to be used for flagd
                    type: string
                  ofrepPath:
                    description: |-
                      OFREPPath is the path to be used for accessing the OFREP API
                      Default: /ofrep
                    type: string
                  pathType:
                    description: PathType is the path type to be used for the ingress
                      rules
                    type: string
                  syncPath:
                    description: |-
                      SyncPath is the path to be used for accessing the sync API
                      Default: /flagd.sync.v1.Service
                    type: string
                  tls:
                    description: TLS configuration for the ingress
                    items:
                      description: IngressTLS describes the transport layer security
                        associated with an ingress.
                      properties:
                        hosts:
                          description: |-
                            hosts is a list of hosts included in the TLS certificate. The values in
                            this list must match the name/s used in the tlsSecret. Defaults to the
                            wildcard host setting for the loadbalancer controller fulfilling this
                            Ingress, if left unspecified.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        secretName:
                          description: |-
                            secretName is the name of the secret used to terminate TLS traffic on
                            port 443. Field is left optional to allow TLS routing based on SNI
                            hostname alone. If the SNI host in a listener conflicts with the "Host"
                            header field used by an IngressRule, the SNI host is used for termination
                            and value of the "Host" header is used for routing.
                          type: string
                      type: object
                    type: array
                required:
                - hosts
                type: object
              replicas:
                default: 1
                description: |-
                  Replicas defines the number of replicas to create for the service.
                  Default: 1
                format: int32
                type: integer
              serviceAccountName:
                description: ServiceAccountName the service account name for the flagd
                  deployment
                type: string
              serviceType:
                default: ClusterIP
                description: |-
                  ServiceType represents the type of Service to create.
                  Must be one of: ClusterIP, NodePort, LoadBalancer, and ExternalName.
                  Default: ClusterIP
                enum:
                - ClusterIP
                - NodePort
                - LoadBalancer
                - ExternalName
                type: string
            required:
            - featureFlagSource
            type: object
          status:
            description: FlagdStatus defines the observed state of Flagd
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: open-feature-operator/templates/crds/apiextensions.k8s.io_v1_customresourcedefinition_inprocessconfigurations.core.openfeature.dev.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: inprocessconfigurations.core.openfeature.dev
spec:
  group: core.openfeature.dev
  names:
    kind: InProcessConfiguration
    listKind: InProcessConfigurationList
    plural: inprocessconfigurations
    singular: inprocessconfiguration
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: InProcessConfiguration is the Schema for the inprocesconfigurations
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: InProcessConfigurationSpec defines the desired state of InProcessConfiguration
            properties:
              cache:
                default: lru
                description: Cache
                pattern: ^(lru|disabled)$
                type: string
              cacheMaxSize:
                default: 1000
                description: CacheMaxSize
                type: integer
              envVarPrefix:
                default: FLAGD
                description: EnvVarPrefix defines the prefix to be applied to all
                  environment variables applied to the sidecar, default FLAGD
                type: string
              envVars:
                description: EnvVars
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              host:
                default: localhost
                description: Host
                type: string
              offlineFlagSourcePath:
                description: OfflineFlagSourcePath
                type: string
              port:
                default: 8015
                description: Port defines the port to listen on, defaults to 8015
                format: int32
                type: integer
              selector:
                description: Selector
                type: string
              socketPath:
                description: SocketPath defines the unix socket path to listen on
                type: string
              tls:
                default: false
                description: TLS
                type: boolean
            type: object
          status:
            description: InProcessConfigurationStatus defines the observed state of
              InProcessConfiguration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: open-feature-operator/templates/rbac.authorization.k8s.io_v1_clusterrole_open-feature-operator-flagd-kubernetes-sync.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: open-feature-operator-flagd-kubernetes-sync
rules:
- apiGroups:
  - core.openfeature.dev
  resources:
  - featureflagsources
  - featureflags
  verbs:
  - get
  - watch
  - list
---
# Source: open-feature-operator/templates/rbac.authorization.k8s.io_v1_clusterrole_open-feature-operator-manager-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: open-feature-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - get
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.openfeature.dev
  resources:
  - featureflagsources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.openfeature.dev
  resources:
  - featureflagsources/finalizers
  verbs:
  - get
  - update
- apiGroups:
  - core.openfeature.dev
  resources:
  - featureflagsources/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - core.openfeature.dev
  resources:
  - flagds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.openfeature.dev
  resources:
  - flagds/finalizers
  verbs:
  - update
- apiGroups:
  - core.openfeature.dev
  resources:
  - inprocessconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resourceNames:
  - open-feature-operator-flagd-kubernetes-sync
  resources:
  - clusterrolebindings
  verbs:
  - get
  - update
---
# Source: open-feature-operator/templates/rbac.authorization.k8s.io_v1_clusterrole_open-feature-operator-metrics-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: open-feature-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: open-feature-operator/templates/rbac.authorization.k8s.io_v1_clusterrole_open-feature-operator-proxy-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: open-feature-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: open-feature-operator/templates/rbac.authorization.k8s.io_v1_clusterrolebinding_open-feature-operator-flagd-kubernetes-sync.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: open-feature-operator-flagd-kubernetes-sync
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: open-feature-operator-flagd-kubernetes-sync
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: open-feature-operator-controller-manager
  namespace: 'open-feature-operator-v0.6.1.tgz'
- apiGroup: ""
  kind: ServiceAccount
  name: open-feature-operator-flagd-proxy
  namespace: 'open-feature-operator-v0.6.1.tgz'
---
# Source: open-feature-operator/templates/rbac.authorization.k8s.io_v1_clusterrolebinding_open-feature-operator-manager-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: open-feature-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: open-feature-operator-manager-role
subjects:
- kind: ServiceAccount
  name: open-feature-operator-controller-manager
  namespace: 'open-feature-operator-v0.6.1.tgz'
---
# Source: open-feature-operator/templates/rbac.authorization.k8s.io_v1_clusterrolebinding_open-feature-operator-proxy-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: open-feature-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: open-feature-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: open-feature-operator-controller-manager
  namespace: 'open-feature-operator-v0.6.1.tgz'
---
# Source: open-feature-operator/templates/rbac.authorization.k8s.io_v1_role_open-feature-operator-leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: open-feature-operator-leader-election-role
  namespace: 'open-feature-operator-v0.6.1.tgz'
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: open-feature-operator/templates/rbac.authorization.k8s.io_v1_rolebinding_open-feature-operator-leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: open-feature-operator-leader-election-rolebinding
  namespace: 'open-feature-operator-v0.6.1.tgz'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: open-feature-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: open-feature-operator-controller-manager
  namespace: 'open-feature-operator-v0.6.1.tgz'
---
# Source: open-feature-operator/templates/v1_service_open-feature-operator-controller-manager-metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: open-feature-operator-controller-manager-metrics-service
  namespace: 'open-feature-operator-v0.6.1.tgz'
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
# Source: open-feature-operator/templates/v1_service_open-feature-operator-webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    cert-manager.io/inject-ca-from: open-feature-operator-system/webhook-cert
  name: open-feature-operator-webhook-service
  namespace: 'open-feature-operator-v0.6.1.tgz'
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
# Source: open-feature-operator/templates/apps_v1_deployment_open-feature-operator-controller-manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: open-feature-operator-controller-manager
  namespace: 'open-feature-operator-v0.6.1.tgz'
spec:
  replicas: 01
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      imagePullSecrets:  
        []
      containers:
      - args:
        - --leader-elect
        - --sidecar-cpu-limit=500m
        - --sidecar-ram-limit=64Mi
        - --sidecar-cpu-request=200m
        - --sidecar-ram-request=32Mi
        - --image-pull-secrets=
        command:
        - /manager
        env:
        - name: SIDECAR_MANAGEMENT_PORT
          value: '8014'
        - name: SIDECAR_PORT
          value: '8013'
        - name: SIDECAR_SOCKET_PATH
          value: ''
        - name: SIDECAR_IMAGE
          value: 'ghcr.io/open-feature/flagd'
        - name: SIDECAR_TAG
          value: 'v0.10.3'
        - name: SIDECAR_PROVIDER_ARGS
          value: ''
        - name: SIDECAR_ENV_VAR_PREFIX
          value: 'FLAGD'
        - name: SIDECAR_SYNC_PROVIDER
          value: 'kubernetes'
        - name: SIDECAR_EVALUATOR
          value: 'json'
        - name: SIDECAR_LOG_FORMAT
          value: 'json'
        - name: SIDECAR_PROBES_ENABLED
          value: 'true'
        - name: FLAGD_PROXY_IMAGE
          value: 'ghcr.io/open-feature/flagd-proxy'
        - name: FLAGD_PROXY_TAG
          value: 'v0.6.2'
        - name: FLAGD_PROXY_PORT
          value: '8015'
        - name: FLAGD_PROXY_MANAGEMENT_PORT
          value: '8016'
        - name: FLAGD_PROXY_DEBUG_LOGGING
          value: 'false'
        - name: FLAGD_IMAGE
          value: 'ghcr.io/open-feature/flagd'
        - name: FLAGD_TAG
          value: 'v0.10.3'
        - name: FLAGD_PORT
          value: '8013'
        - name: FLAGD_OFREP_PORT
          value: '8016'
        - name: FLAGD_SYNC_PORT
          value: '8015'
        - name: FLAGD_MANAGEMENT_PORT
          value: '8014'
        - name: FLAGD_DEBUG_LOGGING
          value: 'false'
        - name: FLAGS_VALIDATION_ENABLED
          value: 'true'
        - name: IN_PROCESS_PORT
          value: '8015'
        - name: IN_PROCESS_HOST
          value: 'localhost'
        - name: IN_PROCESS_SOCKET_PATH
          value: ''
        - name: IN_PROCESS_TLS
          value: 'false'
        - name: IN_PROCESS_OFFLINE_FLAG_SOURCE_PATH
          value: ''
        - name: IN_PROCESS_SELECTOR
          value: ''
        - name: IN_PROCESS_CACHE
          value: 'lru'
        - name: IN_PROCESS_ENV_VAR_PREFIX
          value: 'FLAGD'
        - name: IN_PROCESS_CACHE_MAX_SIZE
          value: '1000'
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: 'ghcr.io/open-feature/open-feature-operator:v0.6.1'
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: '500m'
            memory: '128Mi'
          requests:
            cpu: '10m'
            memory: '64Mi'
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: 'gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1'
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: '500m'
            memory: '128Mi'
          requests:
            cpu: '5m'
            memory: '64Mi'
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: open-feature-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
# Source: open-feature-operator/templates/namespace.yaml
# Only deploy the namespace if the default is being used (helm install should fail if the namespace isnt present)
# when one is defined with -n
---
# Source: open-feature-operator/templates/cert-manager.io_v1_certificate_open-feature-operator-serving-cert.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: open-feature-operator-serving-cert
  namespace: 'open-feature-operator-v0.6.1.tgz'
spec:
  dnsNames:
  - open-feature-operator-webhook-service.open-feature-operator-v0.6.1.tgz.svc
  - open-feature-operator-webhook-service.open-feature-operator-v0.6.1.tgz.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: open-feature-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
# Source: open-feature-operator/templates/cert-manager.io_v1_issuer_open-feature-operator-selfsigned-issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: open-feature-operator-selfsigned-issuer
  namespace: 'open-feature-operator-v0.6.1.tgz'
spec:
  selfSigned: {}
---
# Source: open-feature-operator/templates/admissionregistration.k8s.io_v1_mutatingwebhookconfiguration_open-feature-operator-mutating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: 'open-feature-operator-v0.6.1.tgz/open-feature-operator-serving-cert'
  name: open-feature-operator-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: open-feature-operator-webhook-service
      namespace: 'open-feature-operator-v0.6.1.tgz'
      path: /mutate-v1-pod
  failurePolicy: Ignore
  name: mutate.openfeature.dev
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
  sideEffects: NoneOnDryRun
---
# Source: open-feature-operator/templates/admissionregistration.k8s.io_v1_validatingwebhookconfiguration_open-feature-operator-validating-webhook-configuration.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: 'open-feature-operator-v0.6.1.tgz/open-feature-operator-serving-cert'
  name: open-feature-operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: open-feature-operator-webhook-service
      namespace: 'open-feature-operator-v0.6.1.tgz'
      path: /validate-core-openfeature-dev-v1beta1-featureflag
  failurePolicy: Fail
  name: vfeatureflag.kb.io
  rules:
  - apiGroups:
    - core.openfeature.dev
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - featureflags
  sideEffects: None
