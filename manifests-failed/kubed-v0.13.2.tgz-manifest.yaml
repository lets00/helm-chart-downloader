---
# Source: kubed/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubed
  namespace: kubed-v0.13.2.tgz
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubed/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kubed-apiserver-cert
  namespace: kubed-v0.13.2.tgz
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiRENDQWxTZ0F3SUJBZ0lSQUlENmtDY2hMVFJLQzlkdlZySUl6eEl3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNMVdoY05NelF3TmpFNE1UUTFOek0xV2pBYgpNUmt3RndZRFZRUURFeEJ0ZVMxeVpXeGxZWE5sTFd0MVltVmtNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFydjlpeUNzQXVWYk5nNE44d1l6Vm9tV3F4QWw3TWN6NHJwSENoaEo1STgreW9lVGoKSmJNZVRHbkx5MXh6YnNHQW5NQ3BRSENHekdTUi9LcFdoY0tqQ0dSOHJwL2w0eHRzdFIxLy9Kd2pMVk45NHVUagpLYlk0T0NLdmZoNjYrSU5uWmNsVDdFeWNsT0owd0JId3k3cEJkdUpRc3lXMTdxM1A1OVhYbGlzODZ4UVZORklPCk5SRWpxcEhTTVlHL3RIcDJZRHBzUjJ1L09tNUw5ZjRrQjljbDRWcjd6MThEeHZMdXVOM3JjTFlReGsxbWhmRTMKN2JkMFd1eURzTWxtYlBqU3M0YmZOSmhHbG5qcFJ6QnM4OGpkYURUWjZBT2pKTGZUblNSRG5qYXBIV0dCbzJYUwpiZ3p1NnpGbmE5aDVucTZ4YUxtbmxHelk4d0J5UlNSeHBZdWtDd0lEQVFBQm80RzRNSUcxTUE0R0ExVWREd0VCCi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC8KQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFlWWVPdkE0NFhnQXcxK0hIdTNMQnltV0FMclRCVkJnTlZIUkVFVGpCTQpnaUp0ZVMxeVpXeGxZWE5sTFd0MVltVmtMbXQxWW1Wa0xYWXdMakV6TGpJdWRHZDZnaVp0ZVMxeVpXeGxZWE5sCkxXdDFZbVZrTG10MVltVmtMWFl3TGpFekxqSXVkR2Q2TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKWUpISXFvWHFnWXkrUUtBaUYyWTB5Y0U3bFRNVEdsOVNzQmJRY0J2Y2c4dEQwQVJHbVhVaEZwOW9wdGRtazhwdQpDZ2pqemhrYm5sUFN3Ym9CcTBJZzAwTjRCdEgrL1NrM1hJRXIwUmZTbHU1aEQ3cHVqSjN1Q3d5dlpHOFRhRzdJCks0K1ZrSDFEMERVU3hCSUlCNUhUQW5MNXN0OXJYejZjZEJNWGt3TENCSTBGQXNNU0ZuK25nWUEzWTRxcjJZVnkKc0xSYnpVQlFOWjZQTzM0NzhWRU1zd2NUN09yZk1vMTZmRncvZ2VheVc3Q0ZWN2o3Z01NNElNajU1K0UyamlSMQpDL01EcnVUUjVLdzN0N0FER1g4MTE3eWZsdE5WbFZEY3BpaFI5bHdsYUlLa1RWSXZvVXl6UnBEazVtREJ6OWpZCkRnVDNPdGt0RVNTdm9rVmNpWnczclE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcnY5aXlDc0F1VmJOZzROOHdZelZvbVdxeEFsN01jejRycEhDaGhKNUk4K3lvZVRqCkpiTWVUR25MeTF4emJzR0FuTUNwUUhDR3pHU1IvS3BXaGNLakNHUjhycC9sNHh0c3RSMS8vSndqTFZOOTR1VGoKS2JZNE9DS3ZmaDY2K0lOblpjbFQ3RXljbE9KMHdCSHd5N3BCZHVKUXN5VzE3cTNQNTlYWGxpczg2eFFWTkZJTwpOUkVqcXBIU01ZRy90SHAyWURwc1IydS9PbTVMOWY0a0I5Y2w0VnI3ejE4RHh2THV1TjNyY0xZUXhrMW1oZkUzCjdiZDBXdXlEc01sbWJQalNzNGJmTkpoR2xuanBSekJzODhqZGFEVFo2QU9qSkxmVG5TUkRuamFwSFdHQm8yWFMKYmd6dTZ6Rm5hOWg1bnE2eGFMbW5sR3pZOHdCeVJTUnhwWXVrQ3dJREFRQUJBb0lCQUV3a3kzS1ZZNGRCZ2NMTApuNmtJQXB6YTUrYk15Vkh1QWZiVGJYU3c3UXpyL3FuNjBldEJlTmwrM3pIcFZFREk2WkZMTTFuYW5JeXE1ZXF1Cm8xOG9SWkFOU1VNaVNBRDltZHRrcnAvWHdHYWtnWTRNVWR1QWNnM2E2Y2xTemIvOFRTMDQ0TTljdG5VQjVCTCsKdTJ1cDYzb3pGekljSW9Gc0Y1NmtxVjJxQ3FPdUxObmY0MlVWWkRTbDhLWGtaYk02cldtci9oUjhkWDRYVkFUZgo1YmErYmE4T1Y1a2gvdzlmcXUwQmRZc09hekZLR0lVNENNc3JCK0RVVHNJYlJaeEI5M1luZUREVW9UdlU1WkozCnlwSkRQMkQzK3ZZQmYvNER5bmlZSG5zWTZtZEdvMllzV0pES0szb0xsU0RGNC9JajhXcjB2OG55TEYwbW5FanUKOHhta25pRUNnWUVBeDZpWUhPTTFXblF0MlhoZEVNZG5UVWhWNXV3YURXd2ZUWDR4dGp2RlRIRC80SU96VzhjYwp4SzROL3MwenhnNXJUeXhrRmQ2MXd3Uld3V3NoQWNESUZtQXh1ZTNJM0FZcWd6dFRiRVoyWHgxeTJGOU5mNWFXCnB5bVVRYWszUlhFcVVPbUlXeHdBbDVHMWo5bG1oZ0J0a1BySERabFF2bjMybUFxNHc5YmQ3YTBDZ1lFQTRHRkcKUkNlVjkwMWFldE5QNHVRRnNFcEM1TXpnNjZJckVMNkJZKzhtOWQyeldVZkhLVXc2Vk9CZEQvZ2N5bnpNMmpPcApZRG0wYkhiNVRkNEJGN2p4TFpWaFRFV1UrUU5ncWY0OXhSV2ZuTkEwTXdrZXpERDdXenorRkQzNHNsbGMxZWM0CnB1MHdkc1RCSG9hL1ZKd2pBSitYWGNXb21OMkNSOVFlOEk3ZW41Y0NnWUJvQ0N6YVFIazRYSGpYYTZQeWJqUWgKVEtPVjQwZmYzb3FnOGpRczVBLzF1SnRhL01TaithZS93NEYvVnFTM2VpUG42UlZ0WDlJTmYyRkUvdkQvM05kawo4Vkozc3JLS0VweHNMS2xYTFkvWUY1d1RxZlRUbWo5OWNtalJuYjR5N0xoRDJLczM3ZXRSRHBjd0VQTWV0M0pmCnJJdXpSa09RUGtvVEJ1TW5CL296TVFLQmdRQ2xSQ0NzTEhnUjZlQzkzUXpYTWxwYVNhaFJ1L0hpdk5SNWhjZnAKNG9sUXlOWEQ2ZEZ3d3B1b1RvVmRNTU9NQlRZaGRiSElsVmdtRjg5eW9oVXQ4dU41VHJDV3JCMlk5L3JuMnNLRwplbkhRMzYzQzlYSEF0a2M5SVlTSFJrbjZtMFY4cTgwWGJsYW05QzdHSER1cXgwSWt3R2VPQXZzMmROanpyUEtJCi9zSk15d0tCZ1FDMDFxaHI3VDdjVjJTUWcvTldaSU5oQno0aWdIV3VKZklzWkRzWXhDaEg1V1UrNzArbXhpcmoKTXpEOHJVMTV1dkFpaFgwbmlhRlREWTlOSUpTWWdraDlmOEZNdmx4ZXZVL0pCUjEvdU5iWGhENTVjMmZzRU1MagpPcjVuS09rdGFXck1GTDdhZy83T0VRZkhtRGZQcDcyLzJxWVdoSzZZZ2lpSzlKaWpYeFlsVEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubed/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kubed
  namespace: kubed-v0.13.2.tgz
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: kubed/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: ["get", "create", "patch", "delete", "list", "watch"]
- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list"]
- apiGroups: [""]
  resources:
  - events
  verbs: ["create"]
---
# Source: kubed/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubed-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-kubed
  namespace: kubed-v0.13.2.tgz
---
# Source: kubed/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubed
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubed
subjects:
- kind: ServiceAccount
  name: my-release-kubed
  namespace: kubed-v0.13.2.tgz
---
# Source: kubed/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-kubed-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubed
  namespace: kubed-v0.13.2.tgz
---
# Source: kubed/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubed
  namespace: kubed-v0.13.2.tgz
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
---
# Source: kubed/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubed
  namespace: kubed-v0.13.2.tgz
  labels:
    helm.sh/chart: kubed-v0.13.2
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.13.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubed
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubed
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: a6ff287706c48d916ba45995c3bce251a15a0ed762900d3555b76566f7e31243
    spec:
      serviceAccountName: my-release-kubed
      containers:
      - name: kubed
        securityContext:
          {}
        image: appscode/kubed:v0.13.2
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        - --cluster-name=unicorn
        ports:
        - containerPort: 8443
        resources:
          {}
        volumeMounts:
        - name: config
          mountPath: /srv/kubed
        - name: scratch
          mountPath: /tmp
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: config
        secret:
          secretName: my-release-kubed
      - name: scratch
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-kubed-apiserver-cert
      securityContext:
        fsGroup: 65535
