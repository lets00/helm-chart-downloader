---
# Source: kubeview/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubeview
  namespace: kubeview-0.1.31.tgz
---
# Source: kubeview/templates/service-account.yaml
kind: ClusterRole

apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-kubeview
rules:
  - apiGroups: ["extensions"]
    resources:
      - ingresses
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources:
      - deployments
      - replicasets
      - daemonsets
      - statefulsets
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources:
      - pods
      - configmaps
      - secrets
      - events
      - endpoints
      - namespaces
      - nodes
      - persistentvolumes
      - persistentvolumeclaims
      - resourcequotas
      - services
    verbs: ["get", "list"]
  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
    verbs: ["get", "list"]

  - nonResourceURLs: ["*"]
    verbs: ["get", "list"]
---
# Source: kubeview/templates/service-account.yaml
kind: ClusterRoleBinding

apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-kubeview
roleRef:
  apiGroup: rbac.authorization.k8s.io
  
  kind: ClusterRole
  
  name: my-release-kubeview
subjects:
  - kind: ServiceAccount
    name: my-release-kubeview
    namespace: kubeview-0.1.31.tgz
---
# Source: kubeview/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubeview
  labels:
    app.kubernetes.io/name: kubeview
    helm.sh/chart: kubeview-0.1.31
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.31"
    app.kubernetes.io/managed-by: Helm
spec:
  
  type: LoadBalancer
  
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kubeview
    app.kubernetes.io/instance: my-release
---
# Source: kubeview/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubeview
  labels:
    app.kubernetes.io/name: kubeview
    helm.sh/chart: kubeview-0.1.31
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.31"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeview
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubeview
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-kubeview
      containers:
        - name: kubeview
          image: "ghcr.io/benc-uk/kubeview:0.1.31"
          imagePullPolicy: Always
          env:
            - name: IN_CLUSTER
              value: "true"
          
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8000
          readinessProbe:
            httpGet:
              path: /
              port: 8000
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: kubeview/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-kubeview-test-connection"
  labels:
    app.kubernetes.io/name: kubeview
    helm.sh/chart: kubeview-0.1.31
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.31"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['my-release-kubeview:80']
  restartPolicy: Never
