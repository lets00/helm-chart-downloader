---
# Source: cosmo-controller-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-controller-manager
  namespace: cosmo-controller-manager-0.9.0.tgz
---
# Source: cosmo-controller-manager/templates/manager.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 04c57811.cosmo-workspace.github.io
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-manager-config
  namespace: cosmo-controller-manager-0.9.0.tgz
---
# Source: cosmo-controller-manager/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: cosmo-controller-manager/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: cosmo-controller-manager/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: cosmo-controller-manager/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cosmo-manager-role
subjects:
- kind: ServiceAccount
  name: cosmo-controller-manager
  namespace: cosmo-controller-manager-0.9.0.tgz
---
# Source: cosmo-controller-manager/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cosmo-proxy-role
subjects:
- kind: ServiceAccount
  name: cosmo-controller-manager
  namespace: cosmo-controller-manager-0.9.0.tgz
---
# Source: cosmo-controller-manager/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-leader-election-role
  namespace: cosmo-controller-manager-0.9.0.tgz
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: cosmo-controller-manager/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-leader-election-rolebinding
  namespace: cosmo-controller-manager-0.9.0.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cosmo-leader-election-role
subjects:
- kind: ServiceAccount
  name: cosmo-controller-manager
  namespace: cosmo-controller-manager-0.9.0.tgz
---
# Source: cosmo-controller-manager/templates/manager.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-controller-manager-metrics-service
  namespace: cosmo-controller-manager-0.9.0.tgz
spec:
  ports:
  - name: https
    port: 8443
    targetPort: 8443
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
---
# Source: cosmo-controller-manager/templates/manager.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-webhook-service
  namespace: cosmo-controller-manager-0.9.0.tgz
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
---
# Source: cosmo-controller-manager/templates/manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-controller-manager
  namespace: cosmo-controller-manager-0.9.0.tgz
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: cosmo-controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: cosmo-controller-manager
    spec:
      containers:
      - args:
        - --port=9443
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --zap-log-level=info
        - --zap-time-encoding=iso8601
        - --traefik-entrypoints=web,websecure
        - --traefik-authen-middleware=cosmo-auth
        - --traefik-authen-middleware-namespace=cosmo-controller-manager-0.9.0.tgz
        - --traefik-username-header-middleware=cosmo-username-headers
        - --workspace-default-urlbase=https://{{NETRULE_GROUP}}-{{WORKSPACE}}-{{USER_NAME}}.example.com
        command:
        - /manager
        image: ghcr.io/cosmo-workspace/cosmo-controller-manager:v0.9.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: cosmo-controller-manager
      terminationGracePeriodSeconds: 10
      imagePullSecrets:
        []
      nodeSelector:
        {}
      affinity:
        {}
      tolerations:
        []
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
# Source: cosmo-controller-manager/templates/webhook.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-serving-cert
  namespace: cosmo-controller-manager-0.9.0.tgz
spec:
  dnsNames:
  - cosmo-webhook-service.cosmo-controller-manager-0.9.0.tgz.svc
  - cosmo-webhook-service.cosmo-controller-manager-0.9.0.tgz.svc.cluster.local
  issuerRef:
    kind: ClusterIssuer
    name: cosmo-selfsigned-clusterissuer
  secretName: webhook-server-cert
---
# Source: cosmo-controller-manager/templates/webhook.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-selfsigned-clusterissuer
  namespace: cosmo-controller-manager-0.9.0.tgz
spec:
  selfSigned: {}
---
# Source: cosmo-controller-manager/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cosmo-controller-manager-0.9.0.tgz/cosmo-serving-cert
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /mutate-cosmo-workspace-github-io-v1alpha1-instance
  failurePolicy: Fail
  name: minstance.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - instances
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /mutate-cosmo-workspace-github-io-v1alpha1-instance
  failurePolicy: Fail
  name: mclusterinstance.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusterinstances
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /mutate-cosmo-workspace-github-io-v1alpha1-template
  failurePolicy: Fail
  name: mtemplate.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - templates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /mutate-cosmo-workspace-github-io-v1alpha1-template
  failurePolicy: Fail
  name: mclustertemplate.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clustertemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /mutate-cosmo-workspace-github-io-v1alpha1-user
  failurePolicy: Fail
  name: muser.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - users
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /mutate-cosmo-workspace-github-io-v1alpha1-workspace
  failurePolicy: Fail
  name: mworkspace.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - workspaces
  sideEffects: None
---
# Source: cosmo-controller-manager/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cosmo-controller-manager-0.9.0.tgz/cosmo-serving-cert
  labels:
    helm.sh/chart: cosmo-controller-manager-0.9.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: cosmo-controller-manager
    app.kubernetes.io/version: "v0.9.0"
    app.kubernetes.io/managed-by: Helm
  name: cosmo-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /validate-cosmo-workspace-github-io-v1alpha1-instance
  failurePolicy: Fail
  name: vclusterinstance.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusterinstances
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /validate-cosmo-workspace-github-io-v1alpha1-instance
  failurePolicy: Fail
  name: vinstance.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - instances
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /validate-cosmo-workspace-github-io-v1alpha1-template
  failurePolicy: Fail
  name: vtemplate.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - templates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /validate-cosmo-workspace-github-io-v1alpha1-template
  failurePolicy: Fail
  name: vclustertemplate.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clustertemplates
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /validate-cosmo-workspace-github-io-v1alpha1-user
  failurePolicy: Fail
  name: vuser.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - users
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1alpha1
  clientConfig:
    caBundle: Cg==
    service:
      name: cosmo-webhook-service
      namespace: cosmo-controller-manager-0.9.0.tgz
      path: /validate-cosmo-workspace-github-io-v1alpha1-workspace
  failurePolicy: Fail
  name: vworkspace.kb.io
  rules:
  - apiGroups:
    - cosmo-workspace.github.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - workspaces
  sideEffects: None
