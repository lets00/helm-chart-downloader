---
# Source: aspnet-core/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-aspnet-core
  namespace: "aspnet-core-6.2.1.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aspnet-core
    app.kubernetes.io/version: 8.0.6
    helm.sh/chart: aspnet-core-6.2.1
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: aspnet-core
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 8080
---
# Source: aspnet-core/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-aspnet-core
  namespace: "aspnet-core-6.2.1.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aspnet-core
    app.kubernetes.io/version: 8.0.6
    helm.sh/chart: aspnet-core-6.2.1
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: aspnet-core
---
# Source: aspnet-core/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-aspnet-core
  namespace: "aspnet-core-6.2.1.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aspnet-core
    app.kubernetes.io/version: 8.0.6
    helm.sh/chart: aspnet-core-6.2.1
automountServiceAccountToken: false
---
# Source: aspnet-core/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-aspnet-core
  namespace: "aspnet-core-6.2.1.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aspnet-core
    app.kubernetes.io/version: 8.0.6
    helm.sh/chart: aspnet-core-6.2.1
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: aspnet-core
---
# Source: aspnet-core/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-aspnet-core
  namespace: "aspnet-core-6.2.1.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aspnet-core
    app.kubernetes.io/version: 8.0.6
    helm.sh/chart: aspnet-core-6.2.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: aspnet-core
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: aspnet-core
        app.kubernetes.io/version: 8.0.6
        helm.sh/chart: aspnet-core-6.2.1
    spec:
      
      automountServiceAccountToken: false
      serviceAccountName: my-release-aspnet-core
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: aspnet-core
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 0
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        - name: clone-repository
          image: docker.io/bitnami/git:2.45.2-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -ec
            - |
              [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
              git clone https://github.com/dotnet/AspNetCore.Docs.git --branch main --depth 1 /repo
          volumeMounts:
            - name: empty-dir
              mountPath: /repo
              subPath: app-repo-dir
        - name: dotnet-publish
          image: docker.io/bitnami/dotnet-sdk:8.0.301-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          workingDir: /repo
          command:
            - /bin/bash
            - -ec
            - |
              cd aspnetcore/performance/caching/output/samples/8.x/
              dotnet publish -o /app 
          volumeMounts:
            - name: app
              mountPath: /app
            - name: empty-dir
              mountPath: /repo
              subPath: app-repo-dir
      containers:
        - name: aspnet-core
          image: docker.io/bitnami/aspnet-core:8.0.6-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          workingDir: /app
          command:
            - dotnet
            - OCMinimal.dll
          env:
            - name: ASPNETCORE_URLS
              value: "http://+:8080"
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            exec:
              command:
                - pgrep
                - dotnet
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 1024Mi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
          volumeMounts:
            - name: app
              mountPath: /app
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: app
          emptyDir: {}
