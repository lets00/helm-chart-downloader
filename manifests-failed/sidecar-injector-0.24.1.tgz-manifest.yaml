---
# Source: sidecar-injector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: sidecar-injector/templates/deployment.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: my-release-sidecar-injector-webhook-tls
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4VENDQXRtZ0F3SUJBZ0lRQytibUdVT2VuWVlvSmtHMXp5SVNvVEFOQmdrcWhraUc5dzBCQVFzRkFEQXAKTVNjd0pRWURWUVFERXg1emFXUmxZMkZ5TFdsdWFtVmpkRzl5TFRBdU1qUXVNUzUwWjNvdFkyRXdIaGNOTWpRdwpOakl3TVRRMU9EUXpXaGNOTWpVd05qSXdNVFExT0RReldqQkdNVVF3UWdZRFZRUURFenR0ZVMxeVpXeGxZWE5sCkxYTnBaR1ZqWVhJdGFXNXFaV04wYjNJdWMybGtaV05oY2kxcGJtcGxZM1J2Y2kwd0xqSTBMakV1ZEdkNkxuTjIKWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTjhCYTFiOGUvV1h3LytYajljZwpycWhLRTRJZ0Jyb0VwQzhQYzNMRE1HR1hHOUdmNStzNysrTzVSK3ROOVJ4RlFNbDZJOGhjUWNNUVlVWnR0cFZwCmhrUHB5MzlpMytoMElyTVpMQU9Vazl4d1Z1eGd4UklENFpYekRPYVNHZEFCVTdNNUxQY3h5RnJtb0l5aEc2c0sKTksrNVBWR2gvdC8vamw5WkVrVEx3UVNjYURpSUN1SFgxZ2ZrUUhCdGlzeDhUZVJQbHIyemFFZmg3MUQ0SWl4ZQovK1VnaTRlVHpwVlBFOXFTMU5rUHJyWXdaMlNZdXVvckFuQTYrbUhsT3pEKzlvYjg5aE5PLzg0UHFvY1FiaVczCjNPL3UrR045UTBaRVdCQldoUkhyalV5WlVtT0FoUXA0RlZpSGRjZURyd1R4QkJGdmI1bC9vd3dBeG9ZTS80WVoKNlprQ0F3RUFBYU9COXpDQjlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVcnZWRXBIb3pmZVhSCjc3K3dnOElMVy9xQUZlUXdnWk1HQTFVZEVRU0JpekNCaUlKSmJYa3RjbVZzWldGelpTMXphV1JsWTJGeUxXbHUKYW1WamRHOXlMbk5wWkdWallYSXRhVzVxWldOMGIzSXRNQzR5TkM0eExuUm5laTV6ZG1NdVkyeDFjM1JsY2k1cwpiMk5oYklJN2JYa3RjbVZzWldGelpTMXphV1JsWTJGeUxXbHVhbVZqZEc5eUxuTnBaR1ZqWVhJdGFXNXFaV04wCmIzSXRNQzR5TkM0eExuUm5laTV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGNGw2cHVFRTRjM25NNCsKT2IycFZqdTRxd0JPQmhFcXVsM284cWIycnZTNUZsYXVFZklxTVNwMUpoMzdsWXVpQ1g4L1RUUGdvSEVjMTVKZwpKSmdqc0JmazB1NmVoZTJpUFVJdW1EYTlzOWtKR2JKSCtyZGlWeUQ1dUxPbXdma1cxT0RGSUdTdURnRmQxcmNkCnVBaTBDVFQ3TVk4RXBPcjQ4UWUxY0x5Yms4RGVrUTFaVUk2TnFsR0NtWEdVSjNrSmwvYkNXS0g0eWhId2s4eTYKZk5VRkhUYjhoNGkxY00zNFAvRGZocTA4NkJaRFY3T2paMWxvK2hTWm1zcys2di9vSDdxTUZyRnVhc0MydXF4dwpCeWhkYWtZeHRrTTVCM0p6RHBmdG5xN0EyNGNqNGhVNmhZeThTY3J1VnN2MVNoUEhJV0J1eTVEc2ZxQnlFVnVqCmc1N2hzeVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM3dGclZ2eDc5WmZELzVlUDF5Q3VxRW9UZ2lBR3VnU2tMdzl6Y3NNd1laY2IwWi9uCjZ6djc0N2xINjAzMUhFVkF5WG9qeUZ4Qnd4QmhSbTIybFdtR1ErbkxmMkxmNkhRaXN4a3NBNVNUM0hCVzdHREYKRWdQaGxmTU01cElaMEFGVHN6a3M5ekhJV3VhZ2pLRWJxd28wcjdrOVVhSCszLytPWDFrU1JNdkJCSnhvT0lnSwo0ZGZXQitSQWNHMkt6SHhONUUrV3ZiTm9SK0h2VVBnaUxGNy81U0NMaDVQT2xVOFQycExVMlErdXRqQm5aSmk2CjZpc0NjRHI2WWVVN01QNzJodnoyRTA3L3pnK3FoeEJ1SmJmYzcrNzRZMzFEUmtSWUVGYUZFZXVOVEpsU1k0Q0YKQ25nVldJZDF4NE92QlBFRUVXOXZtWCtqREFER2hnei9oaG5wbVFJREFRQUJBb0lCQVFDK0ttbXNYZFlmRWZJVApiTjArS0NLSVk5TEs3aUNPVkJMbUJwaitUakJkcUF3UzcvZEhBM25ETVdhQTQ1T1hMZjhYVUU1Zk56ems2SHpyCkgvZkk1Wm1YSkRGaVNhQ0NpelpqMzUxRzJGWldibjNSU0p3RXhzYUJwaWRrSDBaZnVDSDEvVlc0M2Z6cWR5eUYKZjRVbWo2ZHFDZDZlVkRRU004em14Zi9zSm94TUxyUzFETEw2UXJ5TmNXNGE3VzAxNWZGT0JFZHg0UHNnODdzaApyM29sVUlVU2ZPd1lSTlJ1YlkyUktkYWlxUDluSnFJekZ4SjFiczdxYmZUSllYV2VXT3ByWlU0KzRTa3dYZmhtCkluS2E2YkRPbHdCMU5BL3Q1K0VGcDc0L01NUWFXbnVvdXE2S3grQVAzbUxYU0s4QjFZUm4wQ0ozT2ZPb0NuTEMKRzVBUW9yTGhBb0dCQVBEYktIbEsvblgwNGs1bklZTkM2azJnSHkrWHUyUS9SRnJrRXFsc2FsTEhVSGsxOWhJbwo1YUlRTkpGYlVXZ3BWcDdOTEJDWGxOVWhKYk9TeWRMTDNvL0lhZVZIdEF4OHpielI0ZU54WTRLVTVMOG5RSEc0ClROeFNSNktEUWx0NDUrUVVBSmtRMWZocGhkdHV1WXZMcWx5eFF0YzNjckdvR1lFSEExTmU2b1cxQW9HQkFPMEcKNyswc0pYZVFRNGpsc0RnVUFTdWd3a1FJRXFjZU1qVGZuNFk3WUdVOVpIdzlHOFNHa1d6aXhKM3VhY1VCZkZiVApQa2hkam1wa1pkKzhaZXhFUXdUb1FyWXY2dGFuT1V0K1hWZzFpR3RJNlFJZ3ZkTmpFc3g1eXREQWp4c2NSSkxsClk3bmE0RXduT0I2ckFkUTljU3ZZVU5QbUtxK3hiOCtZSVRMTWdFTFZBb0dCQU1DMGFDNmJqUG90WXYrZHpoZHEKYTNLT0lVVi8zZU40SnlXZGd6emd6RFRNMlpzUlRINzlEN1ZaeCtWZ3JjSnNDS3pudFZEVkpyUmJZQUhMK1FSYQpMd2pWTGJ6UFlNUDQrdGNQQ2U5aTRsNHc2TS8wQk1DMzEyOFR1ZExSdUQ3ZGZwTmlXWlFkLzBSUWtWT2V4SCtRCkJROUNtQnIvZHhtalNEeU9zdDk2ZXFOZEFvR0FPeUx5ODJxRFFveGt2U0FKVWtSemNrNGVpZGkxeHFvNi9vUVkKaWVZQWkrSEFVMXJ2dFoyWlpPQkRDK0F5MVdza2VZa2t6ZXRCbi92Q2l3cTNKelowdmlHd20wSGpSb0RjUTZDWQphMnlYeDZTZU5lQ3pXNjBwUUlqV2VEVEN2NUhTN2c5N1RTQjF1NnBCVHkxOVBGWEVDWnRqdHlxQzFlamdLNXdhCkZGRi9ZcTBDZ1lCQTlrRnF1SEFmKyszVHRUVUIrTkpVWVFXY3dDbTlUMTZBV1k5THh6QkZVT2ZLckMxWVR2Sm4KZnN2UlJWQTR3RC9sTUtxQW5ScVJzVE1KQ0FZdTl6SzN3MzBsQ3dxblo0RS9rQkM5dXlFc0IvVGJkREVERzUyeQpkazBXRWVaYkJiQmpOS0xKR24yWnJVWW9hUGxMMjVpOTZuZDZ6KzlSMUxrdlRmRjBWaDRNU0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQVENDQWlXZ0F3SUJBZ0lRUWdhS0k4WTdlTUV0QWtPTC9ZdkVxekFOQmdrcWhraUc5dzBCQVFzRkFEQXAKTVNjd0pRWURWUVFERXg1emFXUmxZMkZ5TFdsdWFtVmpkRzl5TFRBdU1qUXVNUzUwWjNvdFkyRXdIaGNOTWpRdwpOakl3TVRRMU9EUXpXaGNOTXpRd05qRTRNVFExT0RReldqQXBNU2N3SlFZRFZRUURFeDV6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TFRBdU1qUXVNUzUwWjNvdFkyRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzA0UVh0SGtYdU5KYTlLMFAwTnRocWRjcU4vc0xmTHZiZ0pHYi9GYzhYMElFRHBDU3ZkWGhWZ25KcApQQmEzaFVNeFhQamg3RUtIZGkvYk1IQjFYdzJ4ZnpLSnB3Uk9tM1RHN3h1L3duU25USnZwY1JJLzE1NGgrWG10CkNFYVVyRVJPbjlNRjFFK3Jhd0NVbnNvbVRtY0Qzc3NSK3hSVEdSa0JrcnZIOGR4dTR3NERTVWl1a2tUS1R3ZFkKN3JPbTVJdW5MNy9icXBSSi9CM3BLNTdabVVnVHliWCtLNWhXM3g2WG1mOEtBcHlWRmdTNjd3YnhzK05BRFh4bApLMFh2VTZJY2VhSU5NaUV1SVBGRi9LL2NXanc0OVZWZXVsd0pxZE5HTTgzT0M1c0ZkT1lOYXRESVRRNUxTc2lKCkp0UnJnYzlwREwxcU8xbHRBS0tQRUwwSHUyWDNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVydlZFcEhvemZlWFI3Nyt3ZzhJTFcvcUFGZVF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCCkFDNU9iVXN5ZlE3bkhrL2hsL21lQWE1TkxwbURPa3ZrNFhudlljMWFleFp1NWdlOGZGbzducTgzb1BrTDY3MmYKMkJVK292TWt1OXNSd3lrazZ2Ylg4K25DYW9BZk1vS1NNYXBqMi8wa2FtN0NVNFA3YWF1NzlDd2NHYXA0VVlXZApNSVFibUcyeW9yazlDTGtOazlFQklURUtaS0hxY0xjWVE2OGsrZXE1cFU5S0gvcHBkUExLMDltS2lQNVF1OTBYCm44U3M2blBXb0t5VDl5SFc3d01UYWtpWVlGNDlEOEZwUDZaRXVqbFg1ZW5jeFRwVkJ4Z3lSM1dPY3pvSTZwdjQKZXczdzlKTDA5dTlZR0drb1J5dW9sQjB3eXhIaGlhZHhBL2t6Vk4vaWxtZmEzMDMwZWU1alZsaFdmRHNKRUZtbAo0d3BmU2NFdWNtcFNySW8zdnI3U3RuST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
# Source: sidecar-injector/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
data:
  sidecarconfig.yaml: |-
    
    initContainers:
    - name: proxy-init
      image: impartsecurity/k8s-sidecar-init:0.24.0
      imagePullPolicy: IfNotPresent
      args: [
        "--incoming-proxy-port",
        "14143",
        "--proxy-uid",
        "2103",
        "--inbound-ports-to-ignore",
        "7946",
        "--outbound-ports-to-ignore",
        "7946",
        "--mode",
        "proxy"
        ]
      securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  add:
                  - NET_ADMIN
                  - NET_RAW
                  drop:
                  - ALL
                runAsUser: 0
    containers:
    - name: impart-inspector
      image: impartsecurity/inspector:0.24.1
      imagePullPolicy: IfNotPresent
      securityContext:
                runAsUser: 2103
      env:
      - name: INSPECTOR_STATSD_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: INSPECTOR_SIDECAR_HTTP_LISTEN_ADDR
        value: ":14143"
      - name: INSPECTOR_TCP_LISTEN_ADDR
        value: ":20210"
      - name: INSPECTOR_MODE
        value: "sidecar_proxy"
      - name: INSPECTOR_SIDECAR_CONTAINER_BACKEND_SCHEME
        value: ""
      - name: INSPECTOR_GOSSIP_PEER_ADDR
        value: my-release-controlnode.sidecar-injector-0.24.1.tgz.svc.cluster.local:7946
      - name: INSPECTOR_LOG_LEVEL
        value: 2
      - name: INSPECTOR_LOG_FORMAT
        value: text-basic
      - name: INSPECTOR_GOSSIP_ENABLED
        value: true
      - name: INSPECTOR_RULE_WORKERS_POOL
        value: 40
      - name: INSPECTOR_SIGTERM_DELAY_SECONDS
        value: 20
      - name: INSPECTOR_IMPART_API_URL
        value: https://api.impartsecurity.net/v0
      - name: INSPECTOR_TLS_CERT
        value: "/etc/tls-secret/tls.crt"
      - name: INSPECTOR_TLS_KEY
        value: "/etc/tls-secret/tls.key"
      - name: INSPECTOR_AUTH0_TENANT_DOMAIN
        value: 
      - name: INSPECTOR_JWT_AUDIENCE
        value: 
      - name: INSPECTOR_API_CLIENT_ID
        value: 
      - name: INSPECTOR_UNIX_SOCKET_PATH
        value: /tmp/impart/inspector.sock
      - name: INSPECTOR_UNIX_SOCKET_PERMISSIONS
        value: 438
      - name: INSPECTOR_CLUSTER_GROUP
        value: 
      resources:
        limits:
          cpu: 1.2
          memory: 2Gi
        requests:
          cpu: 200m
          memory: 512Mi
      volumeMounts:
    volumes:
---
# Source: sidecar-injector/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-sidecar-injector
  labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: my-release
rules:
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations"]
  verbs: ["create", "get", "delete", "list", "patch", "update", "watch"]
---
# Source: sidecar-injector/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-sidecar-injector
  labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: my-release
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-sidecar-injector
subjects:
- kind: ServiceAccount
  name:  my-release-sidecar-injector
  namespace: sidecar-injector-0.24.1.tgz
---
# Source: sidecar-injector/templates/controlnode.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-controlnode
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: "controlnode"
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 7946
      targetPort: 7946
  selector:
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: "controlnode"
---
# Source: sidecar-injector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 8443
  selector:
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
---
# Source: sidecar-injector/templates/controlnode.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-controlnode
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: "controlnode"
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sidecar-injector
      app.kubernetes.io/instance: "controlnode"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: "controlnode"
    spec:
      serviceAccountName: my-release-sidecar-injector
      securityContext:
        {}
      containers:
        - name:  controlnode
          securityContext:
            {}
          image: "impartsecurity/control-node:0.24.0"
          imagePullPolicy: IfNotPresent
          args:
          - --gossip_port=7946
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONTROL-NODE_LOG_LEVEL
            value: "2"
          - name: CONTROL-NODE_LOG_FORMAT
            value: "text-basic"
          resources:
            {}
          volumeMounts: []
      volumes: []
---
# Source: sidecar-injector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-sidecar-injector
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  priorityClassName: 
  selector:
    matchLabels:
      app.kubernetes.io/name: sidecar-injector
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/webhook-tls-config: 18f9da3c91d4285e3b22a7b5b57dd731f30790aa3a05c9ffb8b29270d0b45b60
        checksum/webhook-tls-config-c: 264a2bf0e76c83e466c6da2438c422cc11a3aea2ff743edf096efc06af994d9d
        checksum/webhook-tls-config-k: bd4b4b1148c287c2ad2e531f9f30f57924839e8a03ee16f6afdcd59f23026016
        checksum/values: bb824ff1b0e675ef3038e44f339d43f83b32204b909b4ad2c2024d902826e51b
        checksum/webhook-sidecar-config: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      labels:
        app.kubernetes.io/name: sidecar-injector
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-sidecar-injector
      securityContext:
        {}
      containers:
        - name: sidecar-injector
          securityContext:
            {}
          image: "impartsecurity/k8s-webhook-injector:0.24.0"
          imagePullPolicy: IfNotPresent
          args:
          - --sidecar-config-file=/etc/webhook/config/sidecarconfig.yaml
          - --tls-cert-file=/etc/webhook/certs/tls.crt
          - --tls-private-key-file=/etc/webhook/certs/tls.key
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: WEBHOOK-INJECTOR_LOG_LEVEL
            value: "2"
          - name: WEBHOOK-INJECTOR_LOG_FORMAT
            value: "text-basic"
          resources:
            {}
          volumeMounts:
          - mountPath: /etc/webhook/config
            name: webhook-config
          - name: certs
            mountPath: /etc/webhook/certs
            readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: my-release-sidecar-injector-webhook-tls
      - configMap:
          name: my-release-sidecar-injector
        name: webhook-config
---
# Source: sidecar-injector/templates/deployment.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: my-release-sidecar-injector
webhooks:
  - name: my-release-sidecar-injector.impart.security
    admissionReviewVersions: ["v1"]
    clientConfig:
      service:
        name: my-release-sidecar-injector
        namespace: sidecar-injector-0.24.1.tgz
        path: /inject
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQVENDQWlXZ0F3SUJBZ0lRUWdhS0k4WTdlTUV0QWtPTC9ZdkVxekFOQmdrcWhraUc5dzBCQVFzRkFEQXAKTVNjd0pRWURWUVFERXg1emFXUmxZMkZ5TFdsdWFtVmpkRzl5TFRBdU1qUXVNUzUwWjNvdFkyRXdIaGNOTWpRdwpOakl3TVRRMU9EUXpXaGNOTXpRd05qRTRNVFExT0RReldqQXBNU2N3SlFZRFZRUURFeDV6YVdSbFkyRnlMV2x1CmFtVmpkRzl5TFRBdU1qUXVNUzUwWjNvdFkyRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzA0UVh0SGtYdU5KYTlLMFAwTnRocWRjcU4vc0xmTHZiZ0pHYi9GYzhYMElFRHBDU3ZkWGhWZ25KcApQQmEzaFVNeFhQamg3RUtIZGkvYk1IQjFYdzJ4ZnpLSnB3Uk9tM1RHN3h1L3duU25USnZwY1JJLzE1NGgrWG10CkNFYVVyRVJPbjlNRjFFK3Jhd0NVbnNvbVRtY0Qzc3NSK3hSVEdSa0JrcnZIOGR4dTR3NERTVWl1a2tUS1R3ZFkKN3JPbTVJdW5MNy9icXBSSi9CM3BLNTdabVVnVHliWCtLNWhXM3g2WG1mOEtBcHlWRmdTNjd3YnhzK05BRFh4bApLMFh2VTZJY2VhSU5NaUV1SVBGRi9LL2NXanc0OVZWZXVsd0pxZE5HTTgzT0M1c0ZkT1lOYXRESVRRNUxTc2lKCkp0UnJnYzlwREwxcU8xbHRBS0tQRUwwSHUyWDNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVydlZFcEhvemZlWFI3Nyt3ZzhJTFcvcUFGZVF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCCkFDNU9iVXN5ZlE3bkhrL2hsL21lQWE1TkxwbURPa3ZrNFhudlljMWFleFp1NWdlOGZGbzducTgzb1BrTDY3MmYKMkJVK292TWt1OXNSd3lrazZ2Ylg4K25DYW9BZk1vS1NNYXBqMi8wa2FtN0NVNFA3YWF1NzlDd2NHYXA0VVlXZApNSVFibUcyeW9yazlDTGtOazlFQklURUtaS0hxY0xjWVE2OGsrZXE1cFU5S0gvcHBkUExLMDltS2lQNVF1OTBYCm44U3M2blBXb0t5VDl5SFc3d01UYWtpWVlGNDlEOEZwUDZaRXVqbFg1ZW5jeFRwVkJ4Z3lSM1dPY3pvSTZwdjQKZXczdzlKTDA5dTlZR0drb1J5dW9sQjB3eXhIaGlhZHhBL2t6Vk4vaWxtZmEzMDMwZWU1alZsaFdmRHNKRUZtbAo0d3BmU2NFdWNtcFNySW8zdnI3U3RuST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["v1"]
        resources:
          - pods
    failurePolicy: Fail
    sideEffects: None
    objectSelector:
      matchLabels:
        impart-inspector-injection: enabled
---
# Source: sidecar-injector/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-sidecar-injector-test-connection"
  labels:
    helm.sh/chart: sidecar-injector-0.24.1
    app.kubernetes.io/name: sidecar-injector
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.24.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: nc
      image: busybox
      command: ['sh', '-c']
      args:
        - "nc -zvw 5 my-release-sidecar-injector 443"
  restartPolicy: Never
