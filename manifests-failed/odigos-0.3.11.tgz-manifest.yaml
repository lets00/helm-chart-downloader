---
# Source: odigos/templates/autoscaler/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odigos-autoscaler
  namespace: odigos-0.3.11.tgz
---
# Source: odigos/templates/datacollection/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odigos-data-collection
  namespace: odigos-0.3.11.tgz
---
# Source: odigos/templates/instrumentor/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odigos-instrumentor
  namespace: odigos-0.3.11.tgz
---
# Source: odigos/templates/odiglet/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odiglet
  namespace: odigos-0.3.11.tgz
---
# Source: odigos/templates/scheduler/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: odigos-scheduler
  namespace: odigos-0.3.11.tgz
---
# Source: odigos/templates/odigos-deployment.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: odigos-deployment
  namespace: odigos-0.3.11.tgz
data:
  ODIGOS_VERSION: v1.0.53
---
# Source: odigos/templates/odigos-own-telemetry-otel-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: odigos-own-telemetry-otel-config
  namespace: odigos-0.3.11.tgz
data:
  OTEL_SDK_DISABLED: "true"
---
# Source: odigos/templates/crds/actions/addclusterinfo.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: addclusterinfos.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: AddClusterInfo
    listKind: AddClusterInfoList
    plural: addclusterinfos
    shortNames:
    - aci
    singular: addclusterinfo
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AddClusterInfo is the Schema for the addclusterinfo odigos action
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AddClusterInfoSpec defines the desired state of AddClusterInfo
              action
            properties:
              actionName:
                type: string
              clusterAttributes:
                items:
                  properties:
                    attributeName:
                      description: the name of the attribute to insert
                      type: string
                    attributeStringValue:
                      description: if the value is a string, this field should be
                        used. empty string is a valid value
                      type: string
                  required:
                  - attributeName
                  - attributeStringValue
                  type: object
                type: array
              disabled:
                type: boolean
              notes:
                type: string
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - clusterAttributes
            - signals
            type: object
          status:
            description: AddClusterInfoStatus defines the observed state of AddClusterInfo
              action
            properties:
              conditions:
                description: 'Represents the observations of a addclusterinfo''s current
                  state. Known .status.conditions.type are: "Available", "Progressing"'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: odigos/templates/crds/actions/deleteattribute.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: deleteattributes.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: DeleteAttribute
    listKind: DeleteAttributeList
    plural: deleteattributes
    shortNames:
    - da
    singular: deleteattribute
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DeleteAttribute is the Schema for the DeleteAttribute odigos
          action API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DeleteAttributeSpec defines the desired state of DeleteAttribute
              action
            properties:
              actionName:
                type: string
              attributeNamesToDelete:
                items:
                  type: string
                type: array
              disabled:
                type: boolean
              notes:
                type: string
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - attributeNamesToDelete
            - signals
            type: object
          status:
            description: DeleteAttributeStatus defines the observed state of DeleteAttribute
              action
            properties:
              conditions:
                description: 'Represents the observations of a DeleteAttribute''s
                  current state. Known .status.conditions.type are: "Available", "Progressing"'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: odigos/templates/crds/actions/renameattribute.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: renameattributes.actions.odigos.io
spec:
  group: actions.odigos.io
  names:
    kind: RenameAttribute
    listKind: RenameAttributeList
    plural: renameattributes
    singular: renameattribute
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RenameAttribute is the Schema for the RenameAttribute odigos
          action API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RenameAttributeSpec defines the desired state of RenameAttribute
              action
            properties:
              actionName:
                type: string
              disabled:
                type: boolean
              notes:
                type: string
              renames:
                additionalProperties:
                  type: string
                type: object
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
            required:
            - renames
            - signals
            type: object
          status:
            description: RenameAttributeStatus defines the observed state of RenameAttribute
              action
            properties:
              conditions:
                description: |-
                  Represents the observations of a RenameAttribute's current state.
                  Known .status.conditions.type are: "Available", "Progressing"
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: odigos/templates/crds/collectorsgroup.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  name: collectorsgroups.odigos.io
spec:
  group: odigos.io
  names:
    kind: CollectorsGroup
    listKind: CollectorsGroupList
    plural: collectorsgroups
    singular: collectorsgroup
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CollectorsGroup is the Schema for the collectors API
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            description: CollectorsGroupSpec defines the desired state of Collector
            properties:
              inputSvc:
                type: string
              role:
                enum:
                - CLUSTER_GATEWAY
                - NODE_COLLECTOR
                type: string
            required:
            - role
            type: object
          status:
            properties:
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: odigos/templates/crds/configuration.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: odigosconfigurations.odigos.io
spec:
  group: odigos.io
  names:
    kind: OdigosConfiguration
    listKind: OdigosConfigurationList
    plural: odigosconfigurations
    singular: odigosconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OdigosConfiguration is the Schema for the odigos configuration
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OdigosConfigurationSpec defines the desired state of OdigosConfiguration
            properties:
              autoscalerImage:
                type: string
              collectorGateway:
                properties:
                  goMemLimitMiB:
                    description: the GOMEMLIMIT environment variable value for the
                      collector gateway deployment. this is when go runtime will start
                      garbage collection. if not set, it will be set to 80% of the
                      hard limit of the memory limiter.
                    type: integer
                  memoryLimiterLimitMiB:
                    description: this parameter sets the "limit_mib" parameter in
                      the memory limiter configuration for the collector gateway.
                      it is the hard limit after which a force garbage collection
                      will be performed. if not set, it will be 50Mi below the memory
                      request.
                    type: integer
                  memoryLimiterSpikeLimitMiB:
                    description: this parameter sets the "spike_limit_mib" parameter
                      in the memory limiter configuration for the collector gateway.
                      note that this is not the processor soft limit, but the diff
                      in Mib between the hard limit and the soft limit. if not set,
                      this will be set to 20% of the hard limit (so the soft limit
                      will be 80% of the hard limit).
                    type: integer
                  requestMemoryMiB:
                    description: 'RequestMemoryMiB is the memory request for the cluster
                      gateway collector deployment. it will be embedded in the deployment
                      as a resource request of the form "memory: <value>Mi" default
                      value is 500Mi'
                    type: integer
                type: object
              configVersion:
                type: integer
              defaultSDKs:
                additionalProperties:
                  properties:
                    sdkTier:
                      type: string
                    sdkType:
                      description: 'Odigos supports two types of OpenTelemetry SDKs:
                        native and ebpf.'
                      type: string
                  required:
                  - sdkTier
                  - sdkType
                  type: object
                type: object
              ignoredNamespaces:
                items:
                  type: string
                type: array
              imagePrefix:
                type: string
              instrumentorImage:
                type: string
              odigletImage:
                type: string
              odigosVersion:
                type: string
              psp:
                type: boolean
              supportedSDKs:
                additionalProperties:
                  items:
                    properties:
                      sdkTier:
                        type: string
                      sdkType:
                        description: 'Odigos supports two types of OpenTelemetry SDKs:
                          native and ebpf.'
                        type: string
                    required:
                    - sdkTier
                    - sdkType
                    type: object
                  type: array
                type: object
              telemetryEnabled:
                type: boolean
            required:
            - configVersion
            - odigosVersion
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: odigos/templates/crds/destinations.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  name: destinations.odigos.io
spec:
  group: odigos.io
  names:
    kind: Destination
    listKind: DestinationList
    plural: destinations
    singular: destination
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Destination is the Schema for the destinations API
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            description: DestinationSpec defines the desired state of Destination
            properties:
              data:
                additionalProperties:
                  type: string
                type: object
              destinationName:
                type: string
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    type: string
                type: object
              signals:
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
              type:
                type: string
            required:
            - data
            - destinationName
            - signals
            - type
            type: object
          status:
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: odigos/templates/crds/instrumentedapplications.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  name: instrumentedapplications.odigos.io
spec:
  group: odigos.io
  names:
    kind: InstrumentedApplication
    listKind: InstrumentedApplicationList
    plural: instrumentedapplications
    singular: instrumentedapplication
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InstrumentedApplication is the Schema for the instrumentedapplications
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstrumentedApplicationSpec defines the desired state of
              InstrumentedApplication
            properties:
              options:
                items:
                  properties:
                    containerName:
                      type: string
                    instrumentationsLibraries:
                      items:
                        properties:
                          libraryName:
                            type: string
                          options:
                            items:
                              properties:
                                optionKey:
                                  type: string
                                spanKind:
                                  enum:
                                  - client
                                  - server
                                  - producer
                                  - consumer
                                  - internal
                                  type: string
                              required:
                              - optionKey
                              - spanKind
                              type: object
                            type: array
                        required:
                        - libraryName
                        - options
                        type: object
                      type: array
                  required:
                  - containerName
                  - instrumentationsLibraries
                  type: object
                type: array
              runtimeDetails:
                items:
                  properties:
                    containerName:
                      type: string
                    envVars:
                      items:
                        properties:
                          name:
                            type: string
                          value:
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    language:
                      enum:
                      - java
                      - python
                      - go
                      - dotnet
                      - javascript
                      - mysql
                      type: string
                  required:
                  - containerName
                  - language
                  type: object
                type: array
            type: object
          status:
            description: InstrumentedApplicationStatus defines the observed state
              of InstrumentedApplication
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: odigos/templates/crds/processors.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: processors.odigos.io
spec:
  group: odigos.io
  names:
    kind: Processor
    listKind: ProcessorList
    plural: processors
    singular: processor
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Processor is the Schema for an Opentelemetry Collector Processor
          that is added to Odigos pipeline
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProcessorSpec defines the an OpenTelemetry Collector processor
              in odigos telemetry pipeline
            properties:
              collectorRoles:
                description: control which collector roles in odigos pipeline this
                  processor is attached to.
                items:
                  enum:
                  - CLUSTER_GATEWAY
                  - NODE_COLLECTOR
                  type: string
                type: array
              disabled:
                description: disable is a flag to enable or disable the processor.
                  if the processor is disabled, it will not be included in the collector
                  configuration yaml. this allows the user to keep the processor configuration
                  in the CR, but disable it temporarily.
                type: boolean
              notes:
                description: user can attach notes to the processor, to document its
                  purpose, usage, etc.
                type: string
              orderHint:
                description: control the order of processors. a processor with lower
                  order hint value will be placed before other processors with higher
                  value. if 2 processors have the same value, the order is arbitrary.
                  if the value is missing (or 0) the processor can be placed anywhere
                  in the pipeline
                type: integer
              processorConfig:
                description: this it the configuration of the opentelemetry collector
                  processor component with the type specified in 'type'.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              processorName:
                description: this name is solely for the user convenience, to attach
                  a meaningful name to the processor. odigos must not assume any semantics
                  from this name. odigos cannot assume this name is unique, not empty,
                  exclude spaces or dots, limited in length, etc.
                type: string
              signals:
                description: signals can be used to control which observability signals
                  are processed by the processor.
                items:
                  enum:
                  - LOGS
                  - TRACES
                  - METRICS
                  type: string
                type: array
              type:
                description: type of the processor (batch, attributes, etc). this
                  field is only the type, not it's instance name in the collector
                  configuration yaml
                type: string
            required:
            - collectorRoles
            - processorConfig
            - signals
            - type
            type: object
          status:
            description: ProcessorStatus defines the observed state of the processor
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: odigos/templates/autoscaler/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odigos-autoscaler
rules:
  - apiGroups:
      - odigos.io
    resources:
      - instrumentedapplications
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - instrumentedapplications/finalizers
    verbs:
      - update
  - apiGroups:
      - odigos.io
    resources:
      - instrumentedapplications/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups
      - destinations
      - processors
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups/finalizers
      - destinations/finalizers
    verbs:
      - update
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups/status
      - destinations/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - actions.odigos.io
    resources:
      - addclusterinfos
      - deleteattributes
      - renameattributes
    verbs:
      - watch
      - get
      - list
  - apiGroups:
      - actions.odigos.io
    resources:
      - addclusterinfos/status
      - deleteattributes/status
      - renameattributes/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
    verbs:
      - get
      - list
      - watch
---
# Source: odigos/templates/datacollection/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odigos-data-collection
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - nodes/stats
      - nodes/proxy
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - list
      - watch
      - get
---
# Source: odigos/templates/instrumentor/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odigos-instrumentor
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - statefulsets
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets/finalizers
      - deployments/finalizers
      - statefulsets/finalizers
    verbs:
      - update
  - apiGroups:
      - apps
    resources:
      - daemonsets/status
      - deployments/status
      - statefulsets/status
    verbs:
      - get
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups
      - instrumentedapplications
      - odigosconfigurations
      - destinations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups/finalizers
      - instrumentedapplications/finalizers
      - destinations/finalizers
    verbs:
      - update
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups/status
      - instrumentedapplications/status
      - destinations/status
    verbs:
      - get
      - patch
      - update
---
# Source: odigos/templates/odiglet/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odiglet
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets/status
      - deployments/status
      - statefulsets/status
    verbs:
      - get
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups
      - destinations
      - instrumentationconfigs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - odigos.io
    resources:
     - instrumentedapplications
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
---
# Source: odigos/templates/scheduler/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: odigos-scheduler
rules:
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups
      - destinations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups/finalizers
      - destinations/finalizers
    verbs:
      - update
  - apiGroups:
      - odigos.io
    resources:
      - collectorsgroups/status
      - destinations/status
    verbs:
      - get
      - patch
      - update
---
# Source: odigos/templates/autoscaler/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odigos-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: odigos-autoscaler
subjects:
- kind: ServiceAccount
  name: odigos-autoscaler
  namespace: odigos-0.3.11.tgz
---
# Source: odigos/templates/datacollection/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odigos-data-collection
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: odigos-data-collection
subjects:
- kind: ServiceAccount
  name: odigos-data-collection
  namespace: odigos-0.3.11.tgz
---
# Source: odigos/templates/instrumentor/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odigos-instrumentor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: odigos-instrumentor
subjects:
  - kind: ServiceAccount
    name: odigos-instrumentor
    namespace: odigos-0.3.11.tgz
---
# Source: odigos/templates/odiglet/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odiglet
subjects:
  - kind: ServiceAccount
    name: odiglet
    namespace: odigos-0.3.11.tgz
roleRef:
  kind: ClusterRole
  name: odiglet
  apiGroup: rbac.authorization.k8s.io
---
# Source: odigos/templates/scheduler/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: odigos-scheduler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: odigos-scheduler
subjects:
  - kind: ServiceAccount
    name: odigos-scheduler
    namespace: odigos-0.3.11.tgz
---
# Source: odigos/templates/autoscaler/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: odigos-autoscaler
  namespace: odigos-0.3.11.tgz
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - daemonsets/status
      - deployments/status
    verbs:
      - get
      - patch
      - update
---
# Source: odigos/templates/leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: odigos-leader-election-role
  namespace: odigos-0.3.11.tgz
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: odigos/templates/autoscaler/leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odigos-autoscaler-leader-election
  namespace: odigos-0.3.11.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odigos-leader-election-role
subjects:
- kind: ServiceAccount
  name: odigos-autoscaler
---
# Source: odigos/templates/autoscaler/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odigos-autoscaler
  namespace: odigos-0.3.11.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odigos-autoscaler
subjects:
- kind: ServiceAccount
  name: odigos-autoscaler
---
# Source: odigos/templates/instrumentor/leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odigos-instrumentor-leader-election
  namespace: odigos-0.3.11.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odigos-leader-election-role
subjects:
- kind: ServiceAccount
  name: odigos-instrumentor
---
# Source: odigos/templates/scheduler/leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: odigos-scheduler-leader-election
  namespace: odigos-0.3.11.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: odigos-leader-election-role
subjects:
- kind: ServiceAccount
  name: odigos-scheduler
---
# Source: odigos/templates/odiglet/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: odiglet
  name: odiglet
  namespace: odigos-0.3.11.tgz
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: odiglet
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: odiglet
    spec:
      containers:
        - name: odiglet
          image: "keyval/odigos-odiglet:v1.0.53"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          envFrom:
            - configMapRef:
                name: odigos-own-telemetry-otel-config
                optional: true
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_PTRACE
          volumeMounts:
            - name: run-dir
              mountPath: /run
              mountPropagation: Bidirectional
            - name: var-dir
              mountPath: /var
              mountPropagation: Bidirectional
            - name: odigos
              mountPath: /var/odigos
              mountPropagation: Bidirectional
            - name: kernel-debug
              mountPath: /sys/kernel/debug
      hostNetwork: true
      hostPID: true
      serviceAccountName: odiglet
      volumes:
        - name: run-dir
          hostPath:
            path: /run
        - name: var-dir
          hostPath:
            path: /var
        - name: odigos
          hostPath:
            path: /var/odigos
        - name: kernel-debug
          hostPath:
            path: /sys/kernel/debug
      nodeSelector: 
        kubernetes.io/os: linux
      tolerations: 
        - effect: NoSchedule
          key: node.kubernetes.io/os
          operator: Equal
          value: windows
---
# Source: odigos/templates/autoscaler/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: odigos-autoscaler
  name: odigos-autoscaler
  namespace: odigos-0.3.11.tgz
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: odigos-autoscaler
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: odigos-autoscaler
    spec:
      containers:
      - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
          
        command:
          - /app
        image: "keyval/odigos-autoscaler:v1.0.53"
        env:
          - name: OTEL_SERVICE_NAME
            value: auto-scaler
          - name: CURRENT_NS
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        envFrom:
          - configMapRef:
              name: odigos-own-telemetry-otel-config
              optional: true
          - configMapRef:
              name: odigos-deployment
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: odigos-autoscaler
      terminationGracePeriodSeconds: 10
      nodeSelector: 
        kubernetes.io/os: linux
---
# Source: odigos/templates/instrumentor/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: odigos-instrumentor
  name: odigos-instrumentor
  namespace: odigos-0.3.11.tgz
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: odigos-instrumentor
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: odigos-instrumentor
    spec:
      containers:
      - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
        command:
          - /app
        image: "keyval/odigos-instrumentor:v1.0.53"
        env:
          - name: OTEL_SERVICE_NAME
            value: instrumentor
          - name: CURRENT_NS
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        envFrom:
          - configMapRef:
              name: odigos-own-telemetry-otel-config
              optional: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: odigos-instrumentor
      terminationGracePeriodSeconds: 10
      nodeSelector: 
        kubernetes.io/os: linux
---
# Source: odigos/templates/scheduler/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: odigos-scheduler
  name: odigos-scheduler
  namespace: odigos-0.3.11.tgz
spec:
  replicas: 1
  selector:
    matchLabels:
      app: odigos-scheduler
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app: odigos-scheduler
    spec:
      containers:
      - args:
          - --health-probe-bind-address=:8081
          - --metrics-bind-address=127.0.0.1:8080
          - --leader-elect
        command:
          - /app
        image: "keyval/odigos-scheduler:v1.0.53"
        env:
          - name: OTEL_SERVICE_NAME
            value: scheduler
          - name: CURRENT_NS
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        envFrom:
          - configMapRef:
              name: odigos-own-telemetry-otel-config
              optional: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: odigos-scheduler
      terminationGracePeriodSeconds: 10
      nodeSelector: 
        kubernetes.io/os: linux
---
# Source: odigos/templates/odigos-config.yaml
apiVersion: odigos.io/v1alpha1
kind: OdigosConfiguration
metadata:
  name: odigos-config
  namespace: odigos-0.3.11.tgz
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  configVersion: 1
  autoscalerImage: keyval/odigos-autoscaler
  collectorGateway:
    requestMemoryMiB: 500
    memoryLimiterLimitMiB: 450
    memoryLimiterSpikeLimitMiB: 90
    goMemLimitMiB: 340  
  instrumentorImage: keyval/odigos-instrumentor
  odigosVersion: v1.0.53
  telemetryEnabled: true
  ignoredNamespaces:
        - odigos-system
        - kube-system
        - local-path-storage
        - istio-system
        - linkerd
  defaultSDKs:
    dotnet:
      sdkTier: community
      sdkType: native
    go:
      sdkTier: community
      sdkType: ebpf
    java:
      sdkTier: community
      sdkType: native
    javascript:
      sdkTier: community
      sdkType: native
    python:
      sdkTier: community
      sdkType: native
  supportedSDKs:
    dotnet:
      - sdkTier: community
        sdkType: native
    go:
      - sdkTier: community
        sdkType: ebpf
    java:
      - sdkTier: community
        sdkType: native
    javascript:
      - sdkTier: community
        sdkType: native
    python:
      - sdkTier: community
        sdkType: native
