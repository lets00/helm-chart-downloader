---
# Source: operator-helm/templates/service-accounts.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-operator-helm-manager
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: operator-helm/templates/service-accounts.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-operator-helm-webhook
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: operator-helm/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-operator-helm-config
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    key: value
---
# Source: operator-helm/templates/cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-operator-helm-manager
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
---
# Source: operator-helm/templates/cluster-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-operator-helm-webhook
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
---
# Source: operator-helm/templates/cluster-role-bindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-operator-helm-manager
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: my-release-operator-helm-manager
    namespace: operator-helm-0.1.2.tgz
roleRef:
  kind: ClusterRole
  name: my-release-operator-helm-manager
  apiGroup: rbac.authorization.k8s.io
---
# Source: operator-helm/templates/cluster-role-bindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-operator-helm-webhook
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: my-release-operator-helm-webhook
    namespace: operator-helm-0.1.2.tgz
roleRef:
  kind: ClusterRole
  name: my-release-operator-helm-webhook
  apiGroup: rbac.authorization.k8s.io
---
# Source: operator-helm/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-operator-helm-leader-election
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
# Source: operator-helm/templates/role-bindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-operator-helm-leader-election
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: my-release-operator-helm-manager
    namespace: operator-helm-0.1.2.tgz
roleRef:
  kind: Role
  name: my-release-operator-helm-leader-election
  apiGroup: rbac.authorization.k8s.io
---
# Source: operator-helm/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-operator-helm-manager
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: metrics
      targetPort: 8080
      protocol: TCP
      port: 8080
  selector:
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
---
# Source: operator-helm/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-operator-helm-webhook
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: management
      targetPort: 8080
      protocol: TCP
      port: 8080
    - name: master
      targetPort: 8443
      protocol: TCP
      port: 8443
  selector:
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
---
# Source: operator-helm/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-operator-helm-manager
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1 # don't change it
  selector:
    matchLabels:
      app.kubernetes.io/name: operator-helm
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: operator-helm
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-operator-helm-manager
      securityContext:
        {}
      containers:
        - name: manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          image: "your-operator-registry-url/your-operator-repository:v0.1.0"
          imagePullPolicy: Always
          env:
            - name: RUNNING_INSIDE_POD
              value: "true"
          args: 
            - manager
            - --metrics-bind-port=8080
            - --health-probe-bind-port=8081
            - --leader-elect
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - name: config
              mountPath: "/tmp/operator"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: my-release-operator-helm-config
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
---
# Source: operator-helm/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-operator-helm-webhook
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: operator-helm
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: operator-helm
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-operator-helm-webhook
      securityContext:
        {}
      containers:
        - name: webhook
          securityContext:
            {}
          image: "your-operator-registry-url/your-operator-repository:v0.1.0"
          imagePullPolicy: Always
          env:
            - name: RUNNING_INSIDE_POD
              value: "true"
          args: 
            - webhook
            - --management-bind-port=8080
            - --master-bind-port=8443
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/liveness
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /healthz/readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - name: webhook-tls
              mountPath: /tmp/secrets
              readOnly: true
            - name: config
              mountPath: "/tmp/operator"
              readOnly: true
      volumes:
        - name: webhook-tls
          secret:
            defaultMode: 420
            secretName: my-release-operator-helm-webhook-tls
        - name: config
          configMap:
            name: my-release-operator-helm-config
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
---
# Source: operator-helm/templates/certificates.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: my-release-operator-helm
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  secretName: my-release-operator-helm-webhook-tls
  dnsNames:
    - my-release-operator-helm-webhook.operator-helm-0.1.2.tgz.svc
    - my-release-operator-helm-webhook.operator-helm-0.1.2.tgz.svc.cluster.local
  issuerRef:
    name: my-release-operator-helm-selfsigned
    kind: Issuer
---
# Source: operator-helm/templates/issuers.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: my-release-operator-helm-selfsigned
  namespace: operator-helm-0.1.2.tgz
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  selfSigned: {}
---
# Source: operator-helm/templates/webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-release-operator-helm
  labels:
    helm.sh/chart: operator-helm-0.1.2
    app.kubernetes.io/name: operator-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/inject-ca-from: operator-helm-0.1.2.tgz/my-release-operator-helm
webhooks:
  - name: my-release-operator-helm.kb.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    sideEffects: None
    clientConfig:
      service:
        name: my-release-operator-helm-webhook
        namespace: operator-helm-0.1.2.tgz
        path: /validation
        port: 8443
    rules:
      - apiGroups:
        - your-resource-group-with-domian
        apiVersions:
        - your-resource-version
        operations:
        - CREATE
        - UPDATE
        - DELETE
        resources:
        - plural-resource-name
