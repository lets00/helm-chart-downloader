---
# Source: k8up/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-k8up
  labels:
    helm.sh/chart: k8up-2.0.5
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.3.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: k8up/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: my-release-k8up-k8up-edit
rules:
- apiGroups:
  - k8up.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: k8up/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: my-release-k8up-k8up-view
rules:
- apiGroups:
  - k8up.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
# Source: k8up/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: my-release-k8up-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs/finalizers
  - jobs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - k8up.io
  resources:
  - archives
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - k8up.io
  resources:
  - archives/finalizers
  - archives/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - k8up.io
  resources:
  - backups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - k8up.io
  resources:
  - backups/finalizers
  - backups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - k8up.io
  resources:
  - checks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - k8up.io
  resources:
  - checks/finalizers
  - checks/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - k8up.io
  resources:
  - effectiveschedules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - k8up.io
  resources:
  - effectiveschedules/finalizers
  verbs:
  - update
- apiGroups:
  - k8up.io
  resources:
  - prebackuppods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - k8up.io
  resources:
  - prebackuppods/finalizers
  - prebackuppods/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - k8up.io
  resources:
  - prunes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - k8up.io
  resources:
  - prunes/finalizers
  - prunes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - k8up.io
  resources:
  - restores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - k8up.io
  resources:
  - restores/finalizers
  - restores/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - k8up.io
  resources:
  - schedules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - k8up.io
  resources:
  - schedules/finalizers
  - schedules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
---
# Source: k8up/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: my-release-k8up-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-k8up-manager-role
subjects:
- kind: ServiceAccount
  name: my-release-k8up
  namespace: 'k8up-2.0.5.tgz'
---
# Source: k8up/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: my-release-k8up-leader-election-role
  namespace: 'k8up-2.0.5.tgz'
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: k8up/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  name: my-release-k8up-leader-election-rolebinding
  namespace: 'k8up-2.0.5.tgz'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-k8up-leader-election-role
subjects:
- kind: ServiceAccount
  name: my-release-k8up
  namespace: 'k8up-2.0.5.tgz'
---
# Source: k8up/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-k8up-metrics
  labels:
    helm.sh/chart: k8up-2.0.5
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
  selector:
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
---
# Source: k8up/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-k8up
  labels:
    helm.sh/chart: k8up-2.0.5
    app.kubernetes.io/name: k8up
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.3.2"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8up
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8up
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      containers:
        - name: k8up-operator
          image: "ghcr.io/k8up-io/k8up:v2.3.2"
          imagePullPolicy: IfNotPresent
          args: [ operator ]
          env:
            - name: BACKUP_IMAGE
              value: "ghcr.io/k8up-io/k8up:v2.3.2"
            - name: BACKUP_ENABLE_LEADER_ELECTION
              value: "true"
            - name: BACKUP_OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          securityContext:
            {}
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 20m
              memory: 128Mi
      serviceAccountName: my-release-k8up
