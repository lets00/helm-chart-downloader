---
# Source: gatus/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-gatus
  namespace: gatus-3.4.5.tgz
  labels:
    helm.sh/chart: gatus-3.4.5
    app.kubernetes.io/name: gatus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v5.11.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    endpoints:
    - conditions:
      - '[STATUS] == 200'
      - '[BODY] == pat(*<h1>Example Domain</h1>*)'
      interval: 60s
      name: example
      url: https://example.org
---
# Source: gatus/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-gatus
  namespace: gatus-3.4.5.tgz
  labels:
    helm.sh/chart: gatus-3.4.5
    app.kubernetes.io/name: gatus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v5.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: gatus
    app.kubernetes.io/instance: my-release
---
# Source: gatus/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-gatus
  namespace: gatus-3.4.5.tgz
  labels:
    helm.sh/chart: gatus-3.4.5
    app.kubernetes.io/name: gatus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v5.11.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gatus
      app.kubernetes.io/instance: my-release
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gatus
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/config: c7813daf76defc8d8f5f3a65cf61fdf7432b9e5fd597074dc1ff670cb8700382
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 65534
      containers:
        - name: gatus
          securityContext:
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
          image: "twinproduction/gatus:v5.11.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: my-release-gatus
          readinessProbe:
            httpGet:
              path: /health
              port: http
          livenessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {}
          volumeMounts:
            - name: my-release-gatus-config
              mountPath: /config
              readOnly: true
      volumes:
        - name: my-release-gatus-config
          configMap:
            name: my-release-gatus
