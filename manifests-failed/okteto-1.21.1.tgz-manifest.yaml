---
# Source: okteto/charts/ingress-nginx/templates/controller-poddisruptionbudget.yaml
# PDB is not supported for DaemonSets.
# https://github.com/kubernetes/kubernetes/issues/108124
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.10.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-ingress-nginx-controller
  namespace: okteto-1.21.1.tgz
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: controller
  minAvailable: 1
---
# Source: okteto/charts/okteto-nginx/templates/controller-poddisruptionbudget.yaml
# PDB is not supported for DaemonSets.
# https://github.com/kubernetes/kubernetes/issues/108124
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.10.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-okteto-nginx-controller
  namespace: okteto-1.21.1.tgz
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: okteto-nginx
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: controller
  minAvailable: 1
---
# Source: okteto/charts/ingress-nginx/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.10.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-ingress-nginx
  namespace: okteto-1.21.1.tgz
automountServiceAccountToken: true
---
# Source: okteto/charts/okteto-nginx/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.10.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-okteto-nginx
  namespace: okteto-1.21.1.tgz
automountServiceAccountToken: true
---
# Source: okteto/charts/reloader/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-namespace: "okteto-1.21.1.tgz"
    meta.helm.sh/release-name: "my-release"
  labels:
    app: my-release-reloader
    chart: "reloader-1.0.95"
    release: "my-release"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
  name: reloader
  namespace: okteto-1.21.1.tgz
---
# Source: okteto/templates/buildkit-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "okteto-buildkit"
  labels:
    app.kubernetes.io/component: "buildkit"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-buildkit"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: okteto/templates/okteto-bot-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: okteto-bot
  labels:
    app: my-release-okteto
    chart: "okteto-1.21.1"
    release: "my-release"
    heritage: "Helm"
    dev.okteto.com: "true"
    dev.okteto.com/id: "okteto-bot"
    dev.okteto.com/external-id: "okteto-bot"
    app.kubernetes.io/managed-by: Helm
    dev.okteto.com/super: "true"
    dev.okteto.com/token: "bg9nsvd4"
  annotations:
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: okteto-1.21.1.tgz
---
# Source: okteto/templates/registry-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "my-release-okteto-registry"
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-registry"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: okteto/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-okteto
  labels:
    app: my-release-okteto
    chart: "okteto-1.21.1"
    release: "my-release"
    heritage: "Helm"
---
# Source: okteto/templates/super-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: okteto-admin
  labels:
    app: my-release-okteto
    chart: "okteto-1.21.1"
    release: "my-release"
    heritage: "Helm"
    dev.okteto.com: "true"
    dev.okteto.com/token: "s3vzejkm"
    dev.okteto.com/id: "okteto-admin"
    dev.okteto.com/external-id: "okteto-admin"
    app.kubernetes.io/managed-by: Helm
    dev.okteto.com/super: "true"
  annotations:
    "helm.sh/resource-policy": keep
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: okteto-1.21.1.tgz
    dev.okteto.com/email: "welcome@okteto.com"
---
# Source: okteto/templates/regcreds-webhook.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: "my-release-okteto-regcreds"
  namespace: "okteto-1.21.1.tgz"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-regcreds"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm

stringData: 
  ca.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDPDCCAiSgAwIBAgIRANoeHTpm7o0xD5oa3cYnTXEwDQYJKoZIhvcNAQELBQAw
    KDEmMCQGA1UEAxMdbXktcmVsZWFzZS1va3RldG8tcmVnY3JlZHMtY2EwHhcNMjQw
    NjIwMTQ1ODE1WhcNMzQwNjE4MTQ1ODE1WjAoMSYwJAYDVQQDEx1teS1yZWxlYXNl
    LW9rdGV0by1yZWdjcmVkcy1jYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
    ggEBAJs/gSPrbQ9GuYGxHrduxNbmORozVVwUv/wcXKEWtmEIpaZKOmk2Jmzg0kDz
    vlwZHGTYKWKec6vh+iq+iiFkbTJqDZMP6FFFeM0S54Vmy01A+OOJcGmIGlpQHhby
    AMn/DPylZfoEgcf7G2XqFfw7ou3Pj8H3e5+RuJ86dMvoMT3GBA3jM1Fy2EVtrVDq
    8Le4gdlRHGCqeI4eyQgcpLW4dMCWZy7scn97EuWaN07uXE2+aeILlRFQkYwpA5TR
    yFSy5EO1hN9oxzMqgpbwuLulv0gLrvpXjuJ745OxdaTNuz6vp7EUm8YX8FtOFZfa
    I9TY7kfvkHsA82XAD2Ap9qFPmm0CAwEAAaNhMF8wDgYDVR0PAQH/BAQDAgKkMB0G
    A1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0G
    A1UdDgQWBBTvpDpckQmmk3cuc7gvHqGtUHiiADANBgkqhkiG9w0BAQsFAAOCAQEA
    MqMI21RwEBZDOwlx900jEJ9eoaL/AcB8IEPN2io0zQ1pZSooxPSQBpZUggX8Owau
    V3gKjBzyisXznY+e1ouAfplnuTb48vrmLZ3SQNX7p2xDLBo5l3/ZZWDynkgSF3MF
    XecoDMm/ZoAQI1flSzWUTASDQDQKvoooCU0zOIL/yTbL+Isgfu6O3bUBbJNzGEL4
    JTD39/TEmeixTaxUNyI7ydBws1N5n933UCcxVy6SkV8clc4XEbhtYXq7MZ6bzGMq
    vq50qFz1gq+iRs/Aua/LhLLNWcidPLk95UwILbAFfsJZq0q1VYMNTFv3t/iDIvGf
    Imr6Bkl20TfZkNPeraXGiA==
    -----END CERTIFICATE-----
    
  tls.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDwjCCAqqgAwIBAgIRAJbbDUJzdmF65kBTvxjDPTAwDQYJKoZIhvcNAQELBQAw
    KDEmMCQGA1UEAxMdbXktcmVsZWFzZS1va3RldG8tcmVnY3JlZHMtY2EwHhcNMjQw
    NjIwMTQ1ODE1WhcNMzQwNjE4MTQ1ODE1WjAlMSMwIQYDVQQDExpteS1yZWxlYXNl
    LW9rdGV0by1yZWdjcmVkczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
    ANz7e/IH6hq9rqRdvoO95iEFVxtTI8u7stU6Mg+sRlOW5kaZ0cgVdyUGBpgL+NKg
    IODWWEg66Wk4D6fJQTcWlXtapPsRii0ZvEN+IAQSyNWIskl4QmPibiQwb2pl/tCB
    v9xpWPS4AP63OLZrlnv6V0vpmuajPCpT94dDX0JPURF7FRlUivlmZW7XSOZtwiJU
    T980Tdfp/NjAuvHqOBMkWBXC88RF1lb9TAQhz3wtcftbr0VIEWTww2KLo420tw54
    59oc26HT+oEkjYpfOSYlDvzT9agluug0gROJUh85n2GdkKy8ZM/AxtnsnSG3zmz5
    4qkiLnclklhGc9WHzRhnqN8CAwEAAaOB6TCB5jAOBgNVHQ8BAf8EBAMCBaAwHQYD
    VR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYDVR0j
    BBgwFoAU76Q6XJEJppN3LnO4Lx6hrVB4ogAwgYUGA1UdEQR+MHyCGm15LXJlbGVh
    c2Utb2t0ZXRvLXJlZ2NyZWRzgixteS1yZWxlYXNlLW9rdGV0by1yZWdjcmVkcy5v
    a3RldG8tMS4yMS4xLnRneoIwbXktcmVsZWFzZS1va3RldG8tcmVnY3JlZHMub2t0
    ZXRvLTEuMjEuMS50Z3ouc3ZjMA0GCSqGSIb3DQEBCwUAA4IBAQAVGgj2MlD+zB3s
    gwHK6Kdcfm7UMXCW8stxKIAw2dlJIPNUxLXGwnIQ6hAPAvDQmfoDoIbBtLV0l8IX
    FEZvibwFcScu6SDs8UTIgBJ8BpE6PR5ihuXd047x2TcsA1qTgRIl/lXyZxsrH7ix
    l2PVCgpImMx7MxmWTO/fLtXB/4DU8EluzkS76g4Q7NmD4NYU2Zn3fK5yqfCEXXON
    t6FWoO5vFnKKP3dmWALfcNHs/OTWT2VUCkTZKYN4P9t7PD8+tgubgAdvCL9soSPa
    JhIlnPDhFycBWTqblt6gYwaS4L810EETyg9FF7/0B/NIdtbvtoO3S+hWsM6ugXCK
    D5iWfNn/
    -----END CERTIFICATE-----
    
  tls.key: |- 
    -----BEGIN RSA PRIVATE KEY-----
    MIIEowIBAAKCAQEA3Pt78gfqGr2upF2+g73mIQVXG1Mjy7uy1ToyD6xGU5bmRpnR
    yBV3JQYGmAv40qAg4NZYSDrpaTgPp8lBNxaVe1qk+xGKLRm8Q34gBBLI1YiySXhC
    Y+JuJDBvamX+0IG/3GlY9LgA/rc4tmuWe/pXS+ma5qM8KlP3h0NfQk9REXsVGVSK
    +WZlbtdI5m3CIlRP3zRN1+n82MC68eo4EyRYFcLzxEXWVv1MBCHPfC1x+1uvRUgR
    ZPDDYoujjbS3Dnjn2hzbodP6gSSNil85JiUO/NP1qCW66DSBE4lSHzmfYZ2QrLxk
    z8DG2eydIbfObPniqSIudyWSWEZz1YfNGGeo3wIDAQABAoIBAAv+ZkLDpTQgWWs4
    X0+9LdFa/dhQ0d+L52/lQbRSEFsXFJZ+YMFwUNAknJUCCVY9NKufVplNAUAht8/O
    f4ii5CgWyl+KGyrJe8tZ/BjcgCP+0FZmfYv4TSwPqOxobsUYVbZ7zUUy+3LXtO9J
    tZgzBSvsmOitsWVGu2ePA4uQzICbSLjXUeGEdm/5uCtXFFtGm9gEpge/dAG+EoLm
    E0+vAoXXnCd4FB+7f1WlJw19nYNTCZOY9c4ayVjsu+LKz9K/asPcbdssR4Goe7gk
    kBmR+i/0Rzp4SNPe7FVB//ZHJ2dKlaQm0W/kC69fTV51C4CA1PB0bccXRl13y5ku
    OOSlwqkCgYEA4409eLgrgpHoEo/YvMJLaomyWr6t9xu2Sa02ilrvI2YbelBjrYY1
    tek7vF1GYOfNVUb2jB1LPsSixjjp8dgfRSyNLq6jzwQiIC5v3HSYBRTmAhbLNOOj
    80EF2+p6XWu8/xJjZrRFjV0kZDK6r9nHaggqmBhC4Hkq+1l1pkIkYOUCgYEA+Jv+
    HhHZOaDT2lr0VQVtEg4BVZkXeprZVxK2QSINwD+DohxHPFVOGEo4blVWHgkUp/bL
    e2pLO/J4LAeEaR8WFwjgzpbEmL6TWWDPB51SU/gEdxOVcjb2TlTBs1x3dCn8I29G
    q28TngAhMmbKT56d0doV3s7L2OXu2BBFiJUnenMCgYBlZH/plJa+nWj9LF907FZS
    aHyydphprU1yUt4klBROf6bqv3tKzKyOHBjj++PqNh+GShJ9qGfo1hF5pc6IVrbI
    Seu2y1ZuXfcew9JQNxut1/wNHj75mB1rvKNxtG9FxUX3mif0kYsUTFZ01y3cQXvb
    wTvJfbX+8761NM15gatYCQKBgGdYGROQ4dbF1ysewhCRt9xYfA+EGzF5Kz255o8+
    w66V+HcsACTBZTxNphWfXbQQnEiSG9YKwomB6piK62zzYjBjHWhjXggMuJ3f00/c
    AvwqzlhdiLM4y7yWGQshNfrQ9SIZwKvE+celUCdueU0Np5czbAH5vt1D/7xLT0xO
    jGGnAoGBAMpuaxrxSvKoKLh7R3ozgzipBF7OE2z3HcpjWASAgDZEOoT76IlrfxS9
    4ZfAGvcGj9NZI4nwdFrRjthIBo0+V/6uj0BIkxrV58UUAOJkV0iVow4f9BWXayHt
    BDqVhXQHPrnPP38jVFFrA/B5DnB4GS5tyf4QU2xKsOVrrvKVpLVU
    -----END RSA PRIVATE KEY-----
---
# Source: okteto/templates/registry-http-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-okteto-registry-http-secret
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-registry-http-secret"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm

type: Opaque
data:
  haShared: "b2t0ZXRv"
---
# Source: okteto/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-okteto
  labels:
    app.kubernetes.io/name: "my-release-okteto"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
type: Opaque
data:
  "OKTETO_LICENSE": ""
  "OKTETO_COOKIE_SECRET": ""
---
# Source: okteto/templates/webhook.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: my-release-okteto-mutation-webhook
  namespace: "okteto-1.21.1.tgz"
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/name: "my-release-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm

stringData: 
  ca.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDJjCCAg6gAwIBAgIRAJzV/CAIFv+hKCgkJojt2hQwDQYJKoZIhvcNAQELBQAw
    HTEbMBkGA1UEAxMSb2t0ZXRvLWludGVybmFsLWNhMB4XDTI0MDYyMDE0NTgxNFoX
    DTM0MDYxODE0NTgxNFowHTEbMBkGA1UEAxMSb2t0ZXRvLWludGVybmFsLWNhMIIB
    IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvSMmAMFMQWrpgXOlKdb5vV3a
    xrrBYYiCp0QEY3yWcpNR58YHBi2UXI8D+kJ/Zx8G/RkAPh3R7G4aYs69hSh43NK1
    YX6w4217tPZEqhY/aA0hSIfgY9X712vbWovdxvM4H053X9Yy2bcoO///rgGH3dg4
    16ORdKZ5ZhDUqUi6e+B50+YbAMfAl1KYFuaIAqQE2dErQZuvkPapx5d+tQPN57Gs
    LAy6HfNgzkLNua2vw8kjzFGtPQXRauZb5rVOEWMas5XIxlS5zx/u0KaEjN11wUZG
    YL1+6J0B+TaRDCOXVF7fbK5i9eh+DpZQ9y7850fUFzKq9xcQvJmWFHPzMFz6fwID
    AQABo2EwXzAOBgNVHQ8BAf8EBAMCAqQwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsG
    AQUFBwMCMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFPeURwCzq6ZOXEnccTsK
    I6Tr6e6jMA0GCSqGSIb3DQEBCwUAA4IBAQCiGApLKNRHLXvEacmGmEVoXS5/p+1P
    Nvdo9r+07CLEdGq0FEbz9GHuEbaI8fXb2aHcbsVdyLnCEZbAFfN93VgZoEFBR99E
    ntES5JU6Vt1IQ813Kre6Bq8MIMYUFfbwBB9ksMvPFtTu3yap1HRNbJScynotYQzH
    ldK7J5TJ4tDHEaZyvwcV5rUrjUKlGBHaASwa6R6IyjF1ymgqidyk1CTHDjV4sA0t
    q02zopBUMaH7BHhhDABb0LPh46Kx0JD7nN0xNiJUj9q51JaGidxxbsQR6FroH6D5
    /QM0QBYB1ZgFgLlmomJri652h5K19/K5epgkgOGY/HndKrEFciqJUKIC
    -----END CERTIFICATE-----
    
  tls.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIID2zCCAsOgAwIBAgIRAOI+ZIG9GsB3BnReZJ6DiawwDQYJKoZIhvcNAQELBQAw
    HTEbMBkGA1UEAxMSb2t0ZXRvLWludGVybmFsLWNhMB4XDTI0MDYyMDE0NTgxNFoX
    DTM0MDYxODE0NTgxNFowLTErMCkGA1UEAxMibXktcmVsZWFzZS1va3RldG8tbXV0
    YXRpb24td2ViaG9vazCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOQ4
    2hEf1Dma6dX0c7BrGQwZA+WImF5brfV02leJ7f7m2HEpQdlE0zjjHfK/J2FZv/Mm
    zs0R5WyBxeeMRs89o+WTPqGUCBIiDRG3KCPNwLJJW7RrOca5tfAimAHB5g7KiR/j
    CTUHFtVzrrp+215x7h/3gbCxC40++bBBJnq0EvhvSbwJtYz2iPgvxIiITx4isUUd
    C8iMpjrwpW84JRXNri3PFRH49elAtM1hpcdsex2OZH/LSYcJMYtEC780UdK7H15G
    korP2s/WBE6OgRkmv7PSlfrvQuUluB8bDOGMb6Ft0uG6mAR7j3p+GfCNk2l14xol
    qrJX09X0VOztKylNKh8CAwEAAaOCAQQwggEAMA4GA1UdDwEB/wQEAwIFoDAdBgNV
    HSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/BAIwADAfBgNVHSME
    GDAWgBT3lEcAs6umTlxJ3HE7CiOk6+nuozCBnwYDVR0RBIGXMIGUgiJteS1yZWxl
    YXNlLW9rdGV0by1tdXRhdGlvbi13ZWJob29rgjRteS1yZWxlYXNlLW9rdGV0by1t
    dXRhdGlvbi13ZWJob29rLm9rdGV0by0xLjIxLjEudGd6gjhteS1yZWxlYXNlLW9r
    dGV0by1tdXRhdGlvbi13ZWJob29rLm9rdGV0by0xLjIxLjEudGd6LnN2YzANBgkq
    hkiG9w0BAQsFAAOCAQEAZI8/d7rhdB9V7IpVhYLoAIkMJiWIb8gaSCP5ROyg/sa3
    jaH3izAPb+qek4I8VQBasVgnhu6zkvIwpXk9ewh1LZOQnhgTc5K5IjZ5BDkEGMfD
    EPb1OVxyK4t/nYIlzfukPj0kEr30uWMSQIfVLG1mN/n6cvxJoQK1tCpIBs0/jp3P
    RsXrCXYMBEGNGoXokcY7AtcAOYoweQT6Zd1OYADZSEos9aWyc/JT4VvNEFlJSFi8
    dU9tm5IUU6vhvfZ94IUr30juOOu0uJ3QjA8sn/fhpUmNpA6H4OkJ6Gh/L+t2+FoK
    pfCHXoD1udtyhTFmzh92ESU2dgfluyRinhuUNUrNkw==
    -----END CERTIFICATE-----
    
  tls.key: |- 
    -----BEGIN RSA PRIVATE KEY-----
    MIIEpQIBAAKCAQEA5DjaER/UOZrp1fRzsGsZDBkD5YiYXlut9XTaV4nt/ubYcSlB
    2UTTOOMd8r8nYVm/8ybOzRHlbIHF54xGzz2j5ZM+oZQIEiINEbcoI83AsklbtGs5
    xrm18CKYAcHmDsqJH+MJNQcW1XOuun7bXnHuH/eBsLELjT75sEEmerQS+G9JvAm1
    jPaI+C/EiIhPHiKxRR0LyIymOvClbzglFc2uLc8VEfj16UC0zWGlx2x7HY5kf8tJ
    hwkxi0QLvzRR0rsfXkaSis/az9YETo6BGSa/s9KV+u9C5SW4HxsM4YxvoW3S4bqY
    BHuPen4Z8I2TaXXjGiWqslfT1fRU7O0rKU0qHwIDAQABAoIBAQC3NLRJvuVdAPDq
    InykiLTos0QfhNHcHXi+bHnCgCUf1Sy3WslTox50sk2eSrlQOv4OMX8dvFoSCvNV
    95P4VaE2cEd86hq4g8E+EWwVodwowx7s7I7K6tYU2ZBxCLin8wq1IEqJ2REJdP41
    FBUB8i+YVdY0g0ukrYM/bG15XwlDiH5fY92TItQ6nTMB3bFdXOI5dEKJLQHqAbtf
    7zm3Ic8pD+VoLkU0kiNeY3jPuZvWd6crZGl9k+Ayss1OoF7hvhMbIS2BKOXyySYM
    qA+8dVElIJpGENtkbr/X42+QYcuKR94iRFgXeszObklxQMjfEBKxOBs6MRpUmVQK
    EDI6VK3BAoGBAOTkHYYpkkiuTYW5OVijzF6bT0+TDK2dvCmND3RO0if94CRLNQHz
    t2dOpmBR/JzVrisQbKdrYtEVD+s7ehnyexcEuuHsfjU7hENPeB7Y2XpeMqu0cMTt
    A1F5ZniYYfsjoyVm1sOCQa5ngc/vhcl/TNriOhk/lusbKEfnKNCf/PkvAoGBAP9A
    c+camCeo3us57cDyYU12+xiWeL6lOdRtPGPJJ7I9Xju43CjPOYUo0rq0NM6VK3lP
    jE+XK+GfNZi1GXA+PK5BQNQPifhceMtpHe8UjSnM7ixIwZPKtujoKK8+iqf5Jcbc
    RBPnW0moajZn8fMU7YMvggNIKi1wYNIZKWZFRcIRAoGALshdLHXEu2w81g8kpHRe
    KhwOWtJQbg/mTIvTU89kbt4Z+PESNYLtwoS1xswbGKcoAQ9LVfDB8sAeT9MJQtJn
    zC2gUNr4dMLkZqmQgKWL1dH5A1VPE0DqQ7XPduiWZjFDgDqDvNQbvpzTUH/BVYza
    VYaVn2F65DTZx9B8bB+3IesCgYEA2I2lB2+/oP4bSfPWqzi3ppIIC981R4FEI94d
    OwdhH04DUaXPWuwcf8WXqwDSQGW8AWqkvq2hdASv4wPaNikHMEt6Ja+dPVGuxdxD
    oh+Md+c+NeHwIWP9dHHqemsUFdhB3YnoU/6Xq1Ev80KSucmKjB7VLdWeuvg5nGXu
    gq7ItRECgYEAiKh0iu8I5lZDxoIRxg+FSrh2YTMjOS0qHU1Di1RPi4HPAfDv1EJh
    efolZIdw4j4SPlc+w/a6QF3NRiPxWmUGzJLrLPP7kv81+i9tYJMu7yylLnvkTSP9
    iXqCma61/IhLPj5hRLDJAifhz4B/Vd1MwcMPO1VjNfAlX9l8uWXS1hg=
    -----END RSA PRIVATE KEY-----
---
# Source: okteto/templates/wildcard-certificate.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: default-ssl-certificate-selfsigned
  namespace: "okteto-1.21.1.tgz"
  labels:
    app.kubernetes.io/part-of: "okteto"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    dev.okteto.com/fqdns: "[\"localtest.me\"]"

stringData: 
  ca.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDJTCCAg2gAwIBAgIQMT8FvBWUlgBm5z+nIS5+xDANBgkqhkiG9w0BAQsFADAd
    MRswGQYDVQQDExJva3RldG8td2lsZGNhcmQtY2EwHhcNMjQwNjIwMTQ1ODE0WhcN
    MzQwNjE4MTQ1ODE0WjAdMRswGQYDVQQDExJva3RldG8td2lsZGNhcmQtY2EwggEi
    MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDaN9fJu6whBRTWOB1bomfzJNbr
    en6Y3LwZ+xo0Cvwf7FQs71OkJSnzuclMcQq/8vCM4tk3Yw8iLT/tFT647rT8WMs1
    mV8pZKQdabPgBOTubHJ1ZJ2W3R6Z97lVBiXpHOzj4XE8T3STOVWxu/svedZv6zLY
    Fotv6gGIfaYCHWozCJgAcYrYJWmUFLGsvCKB2eN7ZY9j6u1tVMtGjG4ssgJgnxcq
    CMjhU68/+bi2rs2GR2afYQrtfu1QPMPFZ62pUJnGSc18o+1rUefyiCRDCPAILBnV
    xxN07t8H4IBEyAQD6XqKJusl/VE0EOjZaIT3iMe8RWhXU4QcXHW3cxW5mXCBAgMB
    AAGjYTBfMA4GA1UdDwEB/wQEAwICpDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYB
    BQUHAwIwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUi/rRitnqO36iRhG6rzEf
    OJra8kYwDQYJKoZIhvcNAQELBQADggEBAGY4rkQQoyA40Di0uJoS+krv8V0YNJTA
    v/VtlIwUkw8PDfvm0DGxSCimntAhmbNgS77DwGqOKpxfLhkIGxiCIgHZnolB7KKB
    WgkC5fK3fURH1P1pSzwOOGdoJvBf/0cSyLJtagqbu35Zgj2cfFCEPn6xlHY70hU0
    kdQIKp8Iyt3wblp5yt+Am/QsTo9WmYprzPB1nlkuaVQwwc0RwHy4elKQUO2QMNnj
    b3EY72xZ2jsBo6V/GAdqiXl2X2vkV59Zvz42kxuItWmNnR+7jWt8pUzUub/HDGDU
    zOocTvLsOewg2iwipJaIn+G1WTEqJFCQSpOQzxMZXvFmlnBN200bxTQ=
    -----END CERTIFICATE-----
    
  tls.crt: |- 
    -----BEGIN CERTIFICATE-----
    MIIDOzCCAiOgAwIBAgIQaGq2wmtePhqKEcg45C3eHzANBgkqhkiG9w0BAQsFADAd
    MRswGQYDVQQDExJva3RldG8td2lsZGNhcmQtY2EwHhcNMjQwNjIwMTQ1ODE0WhcN
    MzQwNjE4MTQ1ODE0WjAZMRcwFQYDVQQDDA4qLmxvY2FsdGVzdC5tZTCCASIwDQYJ
    KoZIhvcNAQEBBQADggEPADCCAQoCggEBANdORNdGj5OaNSBwlzvmLfzDNqmM4vUC
    KII9MDe50p62SG/VdzfzgLNL7qMRmX+qCNvocW+0qVS1fpjshyK4BwgtjyQZxSSv
    CCjdjcBLp0CtiWr3k/ECiiiY/0MOf6OQfY1UrK9CnZVtvyTImceOCuLZzOWhPwPi
    6pjDeIwC5NJdRrzfexOg7kcYIw+p9Y3BH8J4vjlbevX5cE0NW5dYyh3+eXYd6NKK
    0mPTOKH0iH+AZXA7sHdzbn3bDjcFUqR84T6yIgYZ7TpNj2DvxI/xEPs5kvdajI9A
    4WCSIPb1iZvBwFMfmQscLh8Zx+yX6aiSgsUO5RVe++PNQwc4RKnzqukCAwEAAaN7
    MHkwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcD
    AjAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFIv60YrZ6jt+okYRuq8xHzia2vJG
    MBkGA1UdEQQSMBCCDioubG9jYWx0ZXN0Lm1lMA0GCSqGSIb3DQEBCwUAA4IBAQBJ
    06avIQ4vrmVm1fo3iwFC+T0psif/dyC9CPfmsoBQnjvCbvxCi4Nki8D1iwc1Lz+D
    0vkh9LR6dHpCdpQu9igIiQWfqwetA/82bdYjXx/WuK3U0g3uXL3rDc7q/PLLRb3G
    ueztyROys2C5+nOE1ZEYkcPI1riTGK3g64mXZVaLM4Rj3b5jNLRtp0runYPWxrVG
    j3UODHPF+gdOT5bkZYIMPecJSuX7cBuv7iGycc0vv11RpaA+j9loVuoON+yu4faM
    U97/1kuIcASZLxdmOEQgJ8QGIqAUhbftRrgqJmcHV9yWr7Rt0HUVeJH6Ux7lO/mu
    qyu8PuV/wl+2h/b/joS6
    -----END CERTIFICATE-----
    
  tls.key: |- 
    -----BEGIN RSA PRIVATE KEY-----
    MIIEowIBAAKCAQEA105E10aPk5o1IHCXO+Yt/MM2qYzi9QIogj0wN7nSnrZIb9V3
    N/OAs0vuoxGZf6oI2+hxb7SpVLV+mOyHIrgHCC2PJBnFJK8IKN2NwEunQK2JaveT
    8QKKKJj/Qw5/o5B9jVSsr0KdlW2/JMiZx44K4tnM5aE/A+LqmMN4jALk0l1GvN97
    E6DuRxgjD6n1jcEfwni+OVt69flwTQ1bl1jKHf55dh3o0orSY9M4ofSIf4BlcDuw
    d3NufdsONwVSpHzhPrIiBhntOk2PYO/Ej/EQ+zmS91qMj0DhYJIg9vWJm8HAUx+Z
    CxwuHxnH7JfpqJKCxQ7lFV77481DBzhEqfOq6QIDAQABAoIBAG3W1jPlIXYxo4zL
    I7xBL5DVnltdLqPD2BqpUKH9QMALSmUTR+DZbv0JbdLvNZn1itN1f/l29zPp643k
    jQRfUecQJwhJxVNzn/wJGznQ3qCWZ5aUe3rmysjvVLpG+ULegc7KNdara21CMdN4
    K0us4UzdxDQZ0OYQq5IHlsYG6+mNEOR5rFxzEuy0MiueutdgV7WdJGS+N1zVBRyD
    bS8wkKQQsHvZQE1xMMe4aIdK5YkOyeD0yzeg1pP++/zflJOEGSCSuMhFAZYa219u
    jfPyvT6vkrOvegY65CqDOMjSZemvxjUN4aeq+3FYEXiGq3oEjmrr9h5Ni+VH9w3U
    6p75IQECgYEA717jw+86O24/s4x1oTyysnbDkswoV2e1duYNyrEnS3t/B8SjvZ/A
    Aodq1yddKzI+0WhKa3H1x7i+0Wqg5lzF047+DK7Sh7raRvjy/sOA720oKsET6u2P
    /cGc/rJ2SKKtFc0rGkThVP8IcqQIMrfkYCcpvMtQxeM29xl1kVQV5zkCgYEA5kNk
    7gaW8RV2ydWduvqtf3VLF1nia1asddxb2VgFurDCk02GwWfbt3WNLYWHmas/3wos
    UXALIjUuAGbtOZVN/wakChu9mrw6KqJRap3dFEwygTmc6UlyNPjeiUCRVW52iYAe
    rd4ZYQwxtyoWADn8pT9A1TXMSKH+v8dib1AEsTECgYAIj7RFxcCnb4IHwfZTFgCu
    MWE9Vt/6gFMVNZU4sq1dHcWlWXshxRzw+jbwCxBiAyIMC1beEO1hf1IT22R12Mua
    jXq4qWgOQrib4TuPsR5jcdwF63Hy7RxBTzN2SJvCbU8TgIsSHXSRva1nrEY+yiT4
    622quvrgmQfWPqrdz8wYwQKBgQCt036j+bGE+dEc+PgDqS3EpIU1cZNtuJakut9T
    qhFZKAsbLFFoO8EwM7uJ+92r8g1bkNB4Af9FqaO6hfjbmYyx0w+O2fY+k43NlY+k
    ztuQcR1HVHjR27Itrxo/vtB4D9XIY0HFu36pNo1pWooVTbEeBiwpSF2ZD0HDAP+c
    TGneYQKBgGLyaZKPYzspLwtJNrvZ5koubjuQW1/lGbrpEkAmF+oJQ+ShUCHGLgw+
    AW4cmrCgeL5wWdVZUlr6B/8f2Ihwxc2dYclEq8PXuHitsjUsZjtz29OLHdueqVsy
    xJmWmbmRJfOt4pMroayAfBCgPRc7RpAmqFG3MZCfWa+Mvrh5sXNi
    -----END RSA PRIVATE KEY-----
---
# Source: okteto/charts/ingress-nginx/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.10.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-ingress-nginx-controller
  namespace: okteto-1.21.1.tgz
data:
  allow-snippet-annotations: "true"
  annotation-value-word-blocklist: "load_module,lua_package,_by_lua,root,serviceaccount"
  annotations-risk-level: "Critical"
  enable-underscores-in-headers: "true"
  ignore-invalid-headers: "false"
  log-format-escape-json: "true"
  log-format-upstream: "{\"time\": \"$time_iso8601\", \"remote_addr\": \"$remote_addr\", \"x_forward_for\": \"$proxy_add_x_forwarded_for\", \"request_id\": \"$req_id\", \"remote_user\": \"$remote_user\", \"bytes_sent\": $bytes_sent, \"request_time\": $request_time, \"status\": $status, \"vhost\": \"$host\", \"request_proto\": \"$server_protocol\", \"path\": \"$uri\", \"request_query\": \"$args\", \"request_length\": $request_length, \"duration\": $request_time,\"method\": \"$request_method\", \"http_referrer\": \"$http_referer\", \"http_user_agent\": \"$http_user_agent\" }"
  proxy-buffer-size: "64K"
  ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:AES128-GCM-SHA256:AES128-GCM-SHA384"
---
# Source: okteto/charts/okteto-nginx/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.10.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-okteto-nginx-controller
  namespace: okteto-1.21.1.tgz
data:
  allow-snippet-annotations: "true"
  annotation-value-word-blocklist: "load_module,lua_package,_by_lua,root,serviceaccount"
  annotations-risk-level: "Critical"
  enable-underscores-in-headers: "true"
  ignore-invalid-headers: "false"
  log-format-escape-json: "true"
  log-format-upstream: "{\"time\": \"$time_iso8601\", \"remote_addr\": \"$remote_addr\", \"x_forward_for\": \"$proxy_add_x_forwarded_for\", \"request_id\": \"$req_id\", \"remote_user\": \"$remote_user\", \"bytes_sent\": $bytes_sent, \"request_time\": $request_time, \"status\": $status, \"vhost\": \"$host\", \"request_proto\": \"$server_protocol\", \"path\": \"$uri\", \"request_query\": \"$args\", \"request_length\": $request_length, \"duration\": $request_time,\"method\": \"$request_method\", \"http_referrer\": \"$http_referer\", \"http_user_agent\": \"$http_user_agent\" }"
  proxy-buffer-size: "64K"
---
# Source: okteto/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: "my-release-okteto"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
  name: "my-release-okteto"
  namespace: okteto-1.21.1.tgz
data:
  
  OKTETO_APP_VERSION: 52c5ec953
  OKTETO_CLI_VERSION: 2.28.0
  OKTETO_VERSION: 1.21.1
  "OKTETO_LOG_LEVEL": ""
  "OKTETO_CONFIGMAP_NAME": "my-release-okteto"
  "OKTETO_SERVICE_ACCOUNT_NAME": "my-release-okteto"
  "OKTETO_CLOUD_PROVIDER": "ephemeral"
  "OKTETO_AUTH_PROVIDER": "token"
  "OKTETO_LICENSE_HARD_LIMITS_ENABLED": "false"
  "OKTETO_ADMIN_CAN_DEPLOY": "false"
  "OKTETO_RELEASE_NAME": "my-release"
  "CLUSTER_PUBLIC_ENDPOINT": "https://kubernetes.localtest.me"
  "SKIP_CA_IN_CREDENTIALS_QUERY": "true"
  "OKTETO_QUICKSTARTS": "[{\"name\":\"Github\",\"url\":\"https://github.com/\"},{\"name\":\"Gitlab\",\"url\":\"https://gitlab.com/\"},{\"name\":\"Bitbucket\",\"url\":\"https://bitbucket.org/\"}]"
  "OKTETO_SSH_SECRET_NAME": "okteto-ssh"
  "OKTETO_PULL_POLICY": "IfNotPresent"
  "OKTETO_BASE_DOMAIN": "localtest.me"
  "OKTETO_BASE_DOMAIN_PORT": "443"
  "OKTETO_GLOBAL_DEV_CLUSTER_ROLE": ""
  "OKTETO_DEV_CLUSTER_ROLE": "cluster-admin"
  "OKTETO_SHOW_VOLUMES_ENABLED": "true"
  "OKTETO_FORCE_PODS_IN_VOLUME_ZONE": "true"
  "OKTETO_FORCE_NODE_TO_PODS_WITH_SAME_PVCS": "true"
  "OKTETO_PUBLIC_URL": "okteto.localtest.me"
  "OKTETO_PUBLIC_OVERRIDE": ""
  "OKTETO_USER_DEFINED_NAMESPACES": "true"
  "OKTETO_INGRESS_RELOAD_DELAY": "0"
  "OKTETO_VIRTUAL_SERVICE_ENDPOINTS": ""
  "OKTETO_OPENSHIFT_SUPPORT_ENABLED": "false"
  "OKTETO_INGRESS_CLASS": "okteto-nginx"
  "OKTETO_CONTROL_PLANE_INGRESS_CLASS": "okteto-controlplane-nginx"
  "OKTETO_INGRESS_MODE": "dual"
  "OKTETO_INGRESS_FORCE_CLASS": "false"
  "OKTETO_INGRESS_FORCE_SUBDOMAIN": "false"
  "OKTETO_INGRESS_IP": ""
  "OKTETO_NAMESPACE_ANNOTATIONS": "{}"
  "OKTETO_NAMESPACE_LABELS": "{}"
  "OKTETO_NAMESPACE_INGRESS_ANNOTATIONS": "{}"
  "OKTETO_NAMESPACE_INGRESS_LABELS": "{}"
  "OKTETO_NAMESPACE_AUTO_ROLE_BINDING_ENABLED": "true"
  "OKTETO_LOADBALANCER_CONVERSION_ENABLED": "true"
  "OKTETO_COOKIE_HASH": ""
  "OKTETO_DEFAULT_BACKEND": "my-release-ingress-nginx-defaultbackend.okteto-1.21.1.tgz"
  "OKTETO_BIN_IMAGE": ""
  "OKTETO_PIPELINE_INSTALLER_IMAGE": "okteto/installer:52c5ec953"
  "OKTETO_PIPELINE_RUNNER_IMAGE": "okteto/pipeline-runner:1.0.4"
  "OKTETO_PIPELINE_RUNNER_ANNOTATIONS": "{}"
  "OKTETO_PIPELINE_RUNNER_LABELS": "{}"
  "OKTETO_PIPELINE_RUNNER_ENV": "[]"
  "OKTETO_PIPELINE_RUNNER_RESOURCES": "{\"requests\":{\"cpu\":\"10m\",\"memory\":\"50Mi\"}}"
  "OKTETO_PRIVATECA_SECRET_NAME": "default-ssl-certificate-selfsigned"
  "OKTETO_PRIVATECA_SECRET_KEY": "ca.crt"
  "OKTETO_TELEMETRY_ENABLED": "true"
  "OKTETO_PRIVATEREGISTRY_SECRET_NAME": "my-release-okteto-dockerconfig-static"
  "OKTETO_DEFAULT_PLAN": "enterprise"
  "OKTETO_POOL": ""
  "OKTETO_BUILD_POOL": ""
  "OKTETO_DEV_POOL": ""
  "OKTETO_GLOBAL_OKTETO_TOLERATIONS": "[]"
  "OKTETO_GLOBAL_DEV_TOLERATIONS": "[]"
  "OKTETO_GLOBAL_NODE_SELECTORS": "{\"dev\":{},\"okteto\":{}}"
  "OKTETO_PROTECT_PERSONAL_NAMESPACE_ENABLED":  "true"
  "OKTETO_PULLALWAYS_ENABLED":  "true"
  "OKTETO_SERVICE_EXTERNAL_NAMES_ENABLED":  "true"
  "OKTETO_NETWORK_POLICIES_ENABLED":  "false"
  "OKTETO_INGRESS_LIMITS_ENABLED":  "false"
  "OKTETO_INGRESS_PROXY_BODY_SIZE": "60M"
  "OKTETO_GC_ENABLED":  "true"
  "OKTETO_DEBUG_SERVER":  "false"
  "OKTETO_GC_SCALE_TO_ZERO_PERIOD": "24"
  "OKTETO_GC_DELETE_NAMESPACE_PERIOD": "15"
  "OKTETO_AUTOSCALER_ENABLED":  "false"
  "OKTETO_VOLUME_SNAPSHOTS_ENABLED":  "false"
  "OKTETO_QUOTAS_RESOURCES_ENABLED":  "false"
  "OKTETO_QUOTAS_BANDWIDTH_ENABLED":  "false"
  "OKTETO_QUOTAS_BANDWIDTH_UP_ENABLED":  "false"
  "OKTETO_QUOTAS_REQUESTS_ENABLED":  "false"
  "OKTETO_AUTOSET_DEFAULT_LIMITS":  "false"
  "OKTETO_QUOTAS_LIMITS_ENABLED":  "false"
  "OKTETO_QUOTAS_LIMITRANGES_MAX_ENABLED":  "false"
  "OKTETO_QUOTAS_LIMITRANGES_REQUESTS_ENABLED":  "true"
  "OKTETO_QUOTAS_LIMITRANGES_LIMIT_REQUEST_RATIO":  "0"
  "OKTETO_QUOTAS_LIMITRANGES_REQUESTS_CPU": "10m"
  "OKTETO_QUOTAS_LIMITRANGES_REQUESTS_MEMORY": "50Mi"
  "OKTETO_QUOTAS_LIMITRANGES_LIMITS_ENABLED":  "true"
  "OKTETO_QUOTAS_LIMITRANGES_LIMITS_CPU": "2"
  "OKTETO_QUOTAS_LIMITRANGES_LIMITS_MEMORY": "8Gi"
  "OKTETO_REGISTRY_ENABLED": "true"
  "OKTETO_REGISTRY_URL": "registry.localtest.me"
  "OKTETO_REGISTRY_PULLPOLICY": "cluster"
  "OKTETO_BUILDKIT_ENABLED": "true"
  "OKTETO_BUILDKIT_PERSISTENCE_ENABLED": "false"
  "OKTETO_BUILDKIT_URL": "tcp://buildkit.localtest.me:443"
  "OKTETO_BUILDKIT_INSTANCE_NAME": "my-release-okteto-buildkit-1133156121"
  "OKTETO_BUILDKIT_SERVICE_ACCOUNT_NAME": "okteto-buildkit"
  "OKTETO_DEPOT_ENABLED": "false"
  "OKTETO_GITHUB_INTEGRATION_ENABLED": "false"
  "OKTETO_NODE_READINESS_CHECKER_ENABLED":  "false"
  "OKTETO_MAX_PERSONAL_ACCESS_TOKEN": "5"
  "OKTETO_GCP_STORE_ENABLED": "false"
  "OKTETO_GIT_SSH_USER": "git"
  "OKTETO_DEV_STORAGE_CLASS_ENABLED": "false"
  "OKTETO_NODE_STATIC_IP_ENABLED": "false"
  "OKTETO_VALIDATE_PVC_ENABLED": "false"
  "OKTETO_GIT_INSTALLER_ACTIVE_DEADLINE_SECONDS": "1800"
  "OKTETO_AUTO_ADMIN_ENABLED": "true"
  "OKTETO_SCALE_DOWN_PERSISTENT_RESOURCES": "false"
  "OKTETO_NAMESPACE_DESTROY_ALL_JOB_IMAGE": "okteto/backend:52c5ec953"
  "OKTETO_NAMESPACE_WAKE_ALL_JOB_IMAGE": "okteto/backend:52c5ec953"
  "OKTETO_NAMESPACE_SLEEP_JOB_IMAGE": "okteto/backend:52c5ec953"
  "OKTETO_PROMETHEUS_ENABLED": "false"
  "OKTETO_INSIGHTS_ENABLED": "false"
  "OKTETO_INSIGHTS_BEARER_SECRET_NAME": "okteto-insights"
  "OKTETO_INSIGHTS_BEARER_SECRET_KEY": "bearer"
  "MAX_TERMINATION_GRACE_PERIOD_SECONDS_ENABLED":  "false"
  "OKTETO_USER_POD_AFFINITY": "true"
  "OKTETO_USER_POD_ANTI_AFFINITY": "false"
  "OKTETO_ALLOW_DAEMONSETS_FOR_USERS": "false"
  "OKTETO_DISABLE_SYSTEM_EVENTS": "false"
  "OKTETO_ALLOW_MEMBERS_SHARE_NAMESPACE": "false"

  "OKTETO_KUBECLIENT_HOST": ""
  "OKTETO_KUBECLIENT_INSECURE": ""
  "OKTETO_SERVICEACCOUNT_ANNOTATIONS": "{}"
  "OKTETO_SERVICEACCOUNT_LABELS": "{}"
  "OKTETO_NAMESPACE_DEV_LABEL_VALUE": "true"
  "OKTETO_NAMESPACES_PREFIX": ""
  "OKTETO_ALLOW_DEV_PUSH_TO_GLOBAL_REGISTRY": "true"
  "OKTETO_INSTALLATION_BOARD_ENABLED": "true"
  "OKTETO_WILDCARD_CERTIFICATE_CREATED": "true"
  "OKTETO_WILDCARD_CERTIFICATE_PRIVATE_CA_ENABLED": "false"
  "OKTETO_EXTERNAL_ID_MAPPING_ENABLED": "false"
  "OKTETO_EMULATE_POD_SECURITY_POLICIES": "false"
  "OKTETO_ALLOW_CAPABILITIES": "null"
  "OKTETO_SLEEPING_INGRESS_CLASS_ENABLED": "false"
  "OKTETO_SLEEPING_INGRESS_CLASS_NAME": "okteto-sleeping"
  "OKTETO_INGRESS_TLS_SECRET_NAME": "default-ssl-certificate-selfsigned"
  "OKTETO_KUBETOKEN_LIFETIME_SECONDS": "86400"
  "OKTETO_BUILDKIT_INGRESS_ENABLED": "true"
  "OKTETO_DAEMONSET_INSTALLED": "true"
  "GC_UP_SESSION_BY_LAST_SYNCED_FILE": "false"
  "OKTETO_BOT_USER": "okteto-bot"
  "OKTETO_RESTRICT_GROUP_USER_ROLE_BINDINGS": "false"
  "PULLSECRETS_ENABLED": "true"
  "INSTALLER_PRIORITY_CLASS_NAME": ""
  "NAMESPACE_DESTROY_ALL_PRIORITY_CLASS_NAME": ""
  "OKTETO_INSIGHTS_BUILDKIT_METRICS_ENABLED": "false"
  "OKTETO_EXTERNAL_ENDPOINTS": "[]"
  "OKTETO_INSIGHTS_EVENTS_EXPORTER_METRICS_ENABLED": "false"
---
# Source: okteto/templates/diagnostics-preflight.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: okteto-preflight
  namespace: okteto-1.21.1.tgz
  labels:
    troubleshoot.sh/kind: preflight
    app.kubernetes.io/component: "diagnostics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-preflight"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  preflight-spec: 
    |-
      apiVersion: troubleshoot.sh/v1beta2
      kind: Preflight
      metadata:
        name: my-release-okteto-preflight
      spec:
        analyzers:
          - clusterVersion:
              outcomes:
                - fail:
                    when: "< 1.26.0"
                    message: Okteto requires at least Kubernetes 1.26.0
                    uri: https://www.okteto.com/docs/release-notes/
                - fail:
                    when: ">= 1.30.0"
                    message: Okteto requires a Kubernetes version between 1.26 and 1.29
                    uri: https://www.okteto.com/docs/release-notes/
                - pass:
                    message: Your cluster version meets the Okteto requirements
---
# Source: okteto/templates/diagnostics-redactor.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: okteto-redactor
  namespace: okteto-1.21.1.tgz
  labels:
    troubleshoot.sh/kind: support-bundle
    app.kubernetes.io/component: "diagnostics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-redactor"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  redactor-spec: 
    |-
      apiVersion: troubleshoot.sh/v1beta2
      kind: Redactor
      metadata:
        name: my-release-okteto-redactor
      spec:
        redactors:
          - name: "redact helm values output"
            fileSelector:
              file: "**/helm-values-*/**"
            removals:
              yamlPath:
              - "license"
              - "auth.*.clientSecret"
              - "auth.*.clientId"
              - "auth.token.adminToken"
              - "cookie.secret"
              - "cookie.hash"
              - "github.appId"
              - "github.appPrivateKey"
              - "github.clientId"
              - "github.clientSecret"
              - "privateEndpoints.clientSecret"
              - "privateEndpoints.clientID"
---
# Source: okteto/templates/diagnostics-support-bundle.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: okteto-support-bundle
  namespace: okteto-1.21.1.tgz
  labels:
    troubleshoot.sh/kind: support-bundle
    app.kubernetes.io/component: "diagnostics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-support-bundle"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  support-bundle-spec: 
    "apiVersion: troubleshoot.sh/v1beta2\nkind: SupportBundle\nmetadata:\n  name: my-release-okteto-support-bundle\n
      \ namespace: \nspec:\n  collectors:\n    - clusterResources:\n        namespaces:\n
      \       - okteto-1.21.1.tgz\n    - certificates: \n        secrets:\n          -
      name: default-ssl-certificate-selfsigned\n            collectorName: \"wildcard-certificate\"\n
      \           namespaces:\n              - okteto-1.21.1.tgz\n          - name: default-ssl-certificate-selfsigned\n
      \           collectorName: \"ingress-certificate\"\n            namespaces:\n              -
      okteto-1.21.1.tgz\n          - name: default-ssl-certificate-selfsigned\n            collectorName:
      \"registry-certificate\"\n            namespaces:\n              - okteto-1.21.1.tgz\n
      \         - name: default-ssl-certificate-selfsigned\n            collectorName:
      \"buildkit-certificate\"\n            namespaces:\n              - okteto-1.21.1.tgz\n
      \         - name: my-release-okteto-mutation-webhook\n            collectorName:
      \"webhook-certificate\"\n            namespaces:\n              - okteto-1.21.1.tgz\n
      \         - name: my-release-okteto-regcreds\n            collectorName: \"regcreds-certificate\"\n
      \           namespaces:\n              - okteto-1.21.1.tgz\n    - logs:\n        name:
      api-logs\n        selector:\n          - app.kubernetes.io/component=api\n    -
      logs:\n        name: daemon-logs\n        selector:\n          - app.kubernetes.io/component=daemon\n
      \   - logs:\n        name: installer-logs\n        selector:\n          - app.kubernetes.io/component=installer\n
      \         - app.kubernetes.io/part-of=okteto\n    - logs:\n        name: buildkit-logs\n
      \       selector:\n          - app.kubernetes.io/component=buildkit\n          -
      app.kubernetes.io/part-of=okteto\n    - logs:\n        name: frontend-logs\n        selector:\n
      \         - app.kubernetes.io/component=frontend\n          - app.kubernetes.io/part-of=okteto\n
      \   - logs:\n        name: ingress-nginx-logs\n        selector:\n          - app.kubernetes.io/component=controller\n
      \         - app.kubernetes.io/part-of=ingress-nginx\n    - logs:\n        name:
      okteto-nginx-logs\n        selector:\n          - app.kubernetes.io/component=controller\n
      \         - app.kubernetes.io/part-of=okteto-nginx\n    - logs:\n        name: defaultbackend-logs\n
      \       selector:\n          - app.kubernetes.io/component=defaultbackend\n          -
      app.kubernetes.io/part-of=okteto\n    - logs:\n        name: webhook-logs\n        selector:\n
      \         - app.kubernetes.io/component=webhook\n          - app.kubernetes.io/part-of=okteto\n
      \   - logs:\n        name: migration-logs\n        selector:\n          - app.kubernetes.io/component=migration\n
      \         - app.kubernetes.io/part-of=okteto\n    - logs:\n        name: private-endpoints-logs\n
      \       selector:\n          - app.kubernetes.io/component=private-endpoints\n          -
      app.kubernetes.io/part-of=okteto\n    - logs:\n        name: regcreds-logs\n        selector:\n
      \         - app.kubernetes.io/component=regcreds\n          - app.kubernetes.io/part-of=okteto\n
      \   - logs:\n        name: eventsexporter-logs\n        selector:\n          - app.kubernetes.io/component=eventsexporter\n
      \         - app.kubernetes.io/part-of=okteto\n    - secret:\n        collectorName:
      cloud-secret\n        namespace: okteto-1.21.1.tgz\n        name: okteto-cloud-secret\n
      \   - helm:\n        collectorName: helm-info\n        namespace: okteto-1.21.1.tgz\n
      \   - runPod:\n        name: helm-values-computed\n        collectorName: helm-values-computed\n
      \       namespace: okteto-1.21.1.tgz\n        podSpec:\n          serviceAccountName:
      my-release-okteto\n          containers:\n          - name: helm-values-computed\n
      \           image: alpine/helm:3.8.0\n            args: [\"get\", \"values\", \"my-release\",
      \"--all\", \"-o\", \"yaml\"]\n    - runPod:\n        name: helm-values-user\n        collectorName:
      helm-values-user\n        namespace: okteto-1.21.1.tgz\n        podSpec:\n          serviceAccountName:
      my-release-okteto\n          containers:\n          - name: helm-values-user\n            image:
      alpine/helm:3.8.0\n            args: [\"get\", \"values\", \"my-release\", \"-o\",
      \"yaml\"]"
---
# Source: okteto/templates/helm-release-meta-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: "my-release-okteto"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "helm-release-meta"
    app.kubernetes.io/part-of: "okteto"
  name: "okteto-helm-release-meta"
  namespace: okteto-1.21.1.tgz
data:
  IsInstall: "true"
  IsUpgrade: "false"
  Name: "my-release"
  Namespace: "okteto-1.21.1.tgz"
  Revision: "1"
  Service: "Helm"
---
# Source: okteto/templates/registry-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-okteto-registry-config
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-registry-config"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  config.yml: |-
    version: 0.1
    log:
      accesslog:
        disabled: true
      fields:
        service: registry
      formatter: json
      level: info
    storage:
      cache:
        blobdescriptor: inmemory
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
# Source: okteto/templates/crds/actions-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: actions.git.okteto.com
  name: actions.git.okteto.com
spec:
  group: git.okteto.com
  names:
    kind: Action
    listKind: ActionList
    plural: actions
    singular: action
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Action represents a pending execution of a gitDeploy operation
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
              - pipelineName
              - operation
              - status
              - repository
            properties:
              pipelineName:
                type: string
              operation:
                type: string
              status:
                type: string
              installationID:
                type: integer
              repository:
                type: string
              fallbackRepository:
                type: string
              branch:
                type: string
              githubCommentId:
                type: string
              commitSha:
                type: string
              source:
                type: string
              belongsToPreview:
                type: boolean
              filename:
                type: string
              variables:
                type: array
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                    value:
                      type: string
              destroyVolumes:
                type: boolean
              forceDestroy:
                type: boolean
              catalogItemId:
                type: string
              labels:
                type: array
                items:
                  type: string
    served: true
    storage: true
---
# Source: okteto/templates/crds/external-resource-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name:  externals.dev.okteto.com
  name: externals.dev.okteto.com
spec:
  group: dev.okteto.com
  names:
    kind: External
    listKind: ExternalList
    plural: externals
    singular: external
    shortNames:
    - er
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: External is the schema for the external resources which stores the needed information for each element
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
              - name
              - endpoints
            properties:
              name:
                type: string
              icon:
                type: string
                default: default
                enum:
                - container
                - dashboard
                - database
                - default
                - function
                - graph
                - storage
                - launchdarkly
                - mongodb
                - gcp
                - aws
                - okteto
              notes:
                type: object
                required:
                - path
                - markdown
                properties:
                  path:
                    type: string
                  markdown:
                    type: string
              endpoints:
                type: array
                items:
                  type: object
                  required:
                  - name
                  - url
                  properties:
                    name:
                      type: string
                    url:
                      type: string
    served: true
    storage: true
---
# Source: okteto/templates/crds/git-catalog-item-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: catalogitems.git.okteto.com
  name: catalogitems.git.okteto.com
spec:
  group: git.okteto.com
  names:
    kind: CatalogItem
    listKind: CatalogItemList
    plural: catalogitems
    singular: catalogitem
    shortNames:
    - ci
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CatalogItem is the schema for the git based catalog items which stores the needed information for each element
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
              - name
              - repositoryUrl
            properties:
              name:
                type: string
              repositoryUrl:
                type: string
              branch:
                type: string
              manifestPath:
                type: string
              variables:
                type: array
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                    value:
                      type: string
    served: true
    storage: true
---
# Source: okteto/templates/crds/registry-crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: registries.admin.okteto.com
  name: registries.admin.okteto.com
spec:
  group: admin.okteto.com
  scope: Namespaced
  names:
    kind: Registry
    listKind: RegistryList
    plural: registries
    singular: registry
    shortNames:
    - r
    - reg
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          name: Age
          type: date
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              oneOf:
                - properties:
                  required:
                    - static
                - properties:
                  required:
                    - awsIamUser
                - properties:
                  required:
                    - awsIamRole
              properties:
                static:
                  type: object
                  oneOf:
                    - properties:
                      required:
                        - user
                        - passwordSecretRef
                    - properties:
                      required:
                        - userSecretRef
                        - passwordSecretRef
                  properties:
                    port:
                      type: integer
                      description: "port to be used for the registry (optional)"
                    user:
                      description: "the user used to authenticate against the registry"
                      type: string
                    userSecretRef:
                      description: "the opaque secret that holds the user used to authenticate against the registry"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the password"
                          type: string
                    passwordSecretRef:
                      description: "the opaque secret that holds the password"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the password"
                          type: string


                awsIamUser:
                  type: object
                  oneOf:
                    - properties:
                      required:
                        - accessKeyID
                        - secretAccessKeySecretRef
                    - properties:
                      required:
                        - accessKeyIDSecretRef
                        - secretAccessKeySecretRef
                  properties:
                    accessKeyID:
                      description: "the IAM user access key ID"
                      type: string
                    accessKeyIDSecretRef:
                      description: "the opaque secret that holds the access key ID"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the access key id"
                          type: string
                    secretAccessKeySecretRef:
                      description: "the opaque secret that holds the secret access key"
                      type: object
                      required:
                      - name
                      - key
                      properties:
                        name:
                          description: "the name of the secret"
                          type: string
                        key:
                          description: "the key in the secret data from where to read the secret access key"
                          type: string
                awsIamRole:
                  type: object
                  required:
                    - roleARN
                    - region
                    - audience
                  properties:
                    roleARN:
                      description: "the ARN role idetifier used to exchange credentials"
                      type: string
                    region:
                      description: "the AWS region"
                      type: string
                    audience:
                      description: "the audience for the token registry credentials"
                      type: string
status:
  acceptedNames:
    kind: Registry
    listKind: RegistryList
    plural: registries
    singular: registry
  conditions: []
  storedVersions: []
---
# Source: okteto/charts/ingress-nginx/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.10.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: my-release-ingress-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/charts/okteto-nginx/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.10.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
  name: my-release-okteto-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/templates/dev-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-okteto-psp
  labels:
    app.kubernetes.io/name: my-release-okteto-psp
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - "weaver.okteto.com"
  resources:
  - "diverts"
  verbs:
  - '*'
- apiGroups:
  - "dev.okteto.com"
  resources:
  - "externals"
  verbs:
  - '*'
- apiGroups:
  - "git.okteto.com"
  resources:
  - "actions"
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - pods/exec
  - pods/attach
  - pods/portforward
  - pods/status
  - pods/eviction
  - configmaps
  - secrets
  - services
  - serviceaccounts
  - persistentvolumeclaims
  - replicationcontrollers
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - endpoints
  - events
  - limitranges
  - namespaces
  - namespaces/status
  - resourcequotas
  - resourcequotas/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  - deployments/scale
  - replicasets/scale
  - statefulsets/scale
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  - jobs/status
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - ingresses
  - replicasets
  - statefulsets
  - deployments/scale
  - replicasets/scale
  - statefulsets/scale
  verbs:
  - '*'
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  verbs:
  - '*'
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs:
  - '*'
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - '*'
- apiGroups:
    - apiextensions.k8s.io
  resources:
    - customresourcedefinitions
  verbs:
    - list
    - watch
- apiGroups:
    - helm.fluxcd.io
  resources:
    - helmreleases
    - helmreleases/status
  verbs:
  - '*'
- apiGroups:
    - helm.integrations.flux.weave.works
  resources:
    - fluxhelmreleases
  verbs:
  - '*'
- apiGroups:
    - configuration.konghq.com
  resources:
    - kongplugins
    - kongconsumers
    - kongcredentials
    - kongingresses
    - tcpingresses
  verbs:
  - '*'
- apiGroups:
    - openfaas.com
  resources:
    - functions
  verbs:
  - '*'
- apiGroups:
    - litmuschaos.io
  resources:
    - chaosengines
    - chaosschedules
    - chaosexperiments
    - chaosresults
  verbs:
  - '*'
- apiGroups:
    - eventtracker.litmuschaos.io
  resources:
    - eventtrackerpolicies
    - eventtrackerpolicies/status
  verbs:
  - '*'
- apiGroups:
    - argoproj.io
  resources:
    - cronworkflows
    - cronworkflows/finalizers
    - rollouts
    - workflows
    - workflows/finalizers
    - workflowtemplates
    - workflowtemplates/finalizers
    - workflowtasksets
    - workfloweventbinding
  verbs:
  - '*'
- apiGroups:
    - cert-manager.io
  resources:
    - certificates
  verbs:
  - list
  - watch
  - get
- apiGroups:
    - apps.openshift.io
  resources:
    - deploymentconfigs
  verbs:
  - '*'
---
# Source: okteto/charts/ingress-nginx/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.10.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: my-release-ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-ingress-nginx
subjects:
  - kind: ServiceAccount
    name: my-release-ingress-nginx
    namespace: okteto-1.21.1.tgz
---
# Source: okteto/charts/okteto-nginx/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.10.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
  name: my-release-okteto-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-okteto-nginx
subjects:
  - kind: ServiceAccount
    name: my-release-okteto-nginx
    namespace: okteto-1.21.1.tgz
---
# Source: okteto/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-okteto-role-binding
  labels:
    app: my-release-okteto
    chart: "okteto-1.21.1"
    release: "my-release"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: my-release-okteto
  namespace: okteto-1.21.1.tgz
---
# Source: okteto/charts/ingress-nginx/templates/controller-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.10.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-ingress-nginx
  namespace: okteto-1.21.1.tgz
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  # Omit Ingress status permissions if `--update-status` is disabled.
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - my-release-ingress-nginx-leader
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/charts/okteto-nginx/templates/controller-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.10.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-okteto-nginx
  namespace: okteto-1.21.1.tgz
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  # Omit Ingress status permissions if `--update-status` is disabled.
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - my-release-okteto-nginx-leader
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
      - get
---
# Source: okteto/charts/reloader/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1

kind: Role
metadata:
  annotations:
    meta.helm.sh/release-namespace: "okteto-1.21.1.tgz"
    meta.helm.sh/release-name: "my-release"
  labels:
    app: my-release-reloader
    chart: "reloader-1.0.95"
    release: "my-release"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
  name: my-release-reloader-role
  namespace: okteto-1.21.1.tgz
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - list
      - get
      - watch
  - apiGroups:
      - "apps"
    resources:
      - deployments
      - daemonsets
      - statefulsets
    verbs:
      - list
      - get
      - update
      - patch
  - apiGroups:
      - "extensions"
    resources:
      - deployments
      - daemonsets
    verbs:
      - list
      - get
      - update
      - patch
  - apiGroups:
      - "batch"
    resources:
      - cronjobs
    verbs:
      - list
      - get
  - apiGroups:
      - "batch"
    resources:
      - jobs
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: okteto/charts/ingress-nginx/templates/controller-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.10.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-ingress-nginx
  namespace: okteto-1.21.1.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-ingress-nginx
subjects:
  - kind: ServiceAccount
    name: my-release-ingress-nginx
    namespace: okteto-1.21.1.tgz
---
# Source: okteto/charts/okteto-nginx/templates/controller-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.10.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-okteto-nginx
  namespace: okteto-1.21.1.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-okteto-nginx
subjects:
  - kind: ServiceAccount
    name: my-release-okteto-nginx
    namespace: okteto-1.21.1.tgz
---
# Source: okteto/charts/reloader/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1

kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-namespace: "okteto-1.21.1.tgz"
    meta.helm.sh/release-name: "my-release"
  labels:
    app: my-release-reloader
    chart: "reloader-1.0.95"
    release: "my-release"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
  name: my-release-reloader-role-binding
  namespace: okteto-1.21.1.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-reloader-role
subjects:
  - kind: ServiceAccount
    name: reloader
    namespace: okteto-1.21.1.tgz
---
# Source: okteto/charts/ingress-nginx/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    helm.sh/chart: ingress-nginx-4.10.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-ingress-nginx-controller
  namespace: okteto-1.21.1.tgz
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ipFamilyPolicy: SingleStack
  ipFamilies: 
    - IPv4
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      appProtocol: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      appProtocol: https
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: controller
---
# Source: okteto/charts/okteto-nginx/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    helm.sh/chart: okteto-nginx-4.10.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-okteto-nginx-controller
  namespace: okteto-1.21.1.tgz
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  ipFamilies: 
    - IPv4
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      appProtocol: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      appProtocol: https
  selector:
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: controller
---
# Source: okteto/templates/api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-okteto-api"
  labels:
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-api"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: api
  selector:
    app.kubernetes.io/name: "my-release-okteto-api"
    app.kubernetes.io/instance: my-release
---
# Source: okteto/templates/buildkit-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-okteto-buildkit"
  labels:
    app.kubernetes.io/component: "buildkit"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-buildkit"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  
  ports:
    - port: 443
      targetPort: 1234
      name: buildkit
  selector:
    app.kubernetes.io/name: "my-release-okteto-buildkit-1133156121"
    app.kubernetes.io/instance: my-release
---
# Source: okteto/templates/defaultbackend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-ingress-nginx-defaultbackend"
  labels:
    app.kubernetes.io/component: default-backend
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-defaultbackend"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      name: http
      targetPort: 8080
  selector:
    app.kubernetes.io/name: "my-release-okteto-defaultbackend"
    app.kubernetes.io/instance: my-release
---
# Source: okteto/templates/frontend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-okteto-frontend"
  labels:
    app.kubernetes.io/component: "frontend"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-frontend"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: frontend
  selector:
    app.kubernetes.io/name: "my-release-okteto-frontend"
    app.kubernetes.io/instance: my-release
---
# Source: okteto/templates/kubernetes-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-okteto-cluster-endpoint"
  labels:
    app.kubernetes.io/component: "cluster-endpoint"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-cluster-endpoint"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ExternalName
  externalName: kubernetes.default.svc.cluster.local
  ports:
    - protocol: TCP
      port: 443
---
# Source: okteto/templates/regcreds-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-okteto-regcreds"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-regcreds"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - targetPort: 9443
      port: 443
      name: controller
  selector:
    app.kubernetes.io/name: "my-release-okteto-regcreds"
    app.kubernetes.io/instance: my-release
---
# Source: okteto/templates/registry-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-okteto-registry"
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-registry"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 5000
      name: registry
  selector:
    app.kubernetes.io/name: "my-release-okteto-registry"
    app.kubernetes.io/instance: my-release
---
# Source: okteto/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-okteto-mutation-webhook"
  labels:
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      name: webhook
      targetPort: 443
  selector:
    app.kubernetes.io/name: "my-release-okteto-mutation-webhook"
    app.kubernetes.io/instance: my-release
---
# Source: okteto/templates/daemon.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "my-release-okteto-daemon"
  labels:
    app.kubernetes.io/name: "my-release-okteto-daemon"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/component: "daemon"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-release-okteto-daemon"
      app.kubernetes.io/instance: my-release
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-release-okteto-daemon"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: "daemon"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        app.kubernetes.io/version: "my-release-okteto-1.21.1"
        checksum/certs: c6f04ff3d45bdc406edeb2abc34ab1aa9580da0c7217af85111d07a40c62c37f
    spec:
      hostPID: true
      terminationGracePeriodSeconds: 0
      serviceAccountName: my-release-okteto
      priorityClassName: 
      tolerations:
      
      nodeSelector:
      containers:
      - name: daemon
        image: okteto/daemon:0.12.0
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        env:
          - name: UPDATE_HOSTS_DISABLED
            value: "false"
          - name: UPDATE_HOSTS_INGRESS_INTERNAL_IP
            value: "$(MY_RELEASE_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
          - name: UPDATE_HOSTS_REGISTRY_URL
            value: "registry.localtest.me"
          - name: UPDATE_HOSTS_OKTETO_URL
            value: "okteto.localtest.me"
          - name: PRIVATE_REGISTRY_CREDENTIALS_DISABLED
            value: "true"
          - name: PRIVATE_REGISTRY_CREDENTIALS_ROOT_SECRET_NAME
            value: "my-release-okteto-dockerconfig-static"
          - name: PRIVATE_REGISTRY_CREDENTIALS_DESTINATION_PATH
            value: "/var/lib/kubelet/config.json"
          - name: PRIVATE_REGISTRY_CREDENTIALS_SECRET_NAME
            value: "my-release-okteto-dockerconfig"
          - name: SYSCTL_CONFIG_DISABLED
            value: "false"
          - name: SYSCTL_CONFIG_MAX_USER_WATCHES
            value: "10048576"
          - name: SYSCTL_CONFIG_MAX_MAP_COUNT
            value: "262144"
          - name: SYSCTL_CONFIG_AIO_MAX_NR
            value: "1000000"
          - name: COPY_BIN_DISABLED
            value: "true"
          - name: COPY_CLOUDBIN_DISABLED
            value: "true"
          - name: CHECK_CNI_PLUGIN_DISABLED
            value: "true"
          - name: CHECK_CNI_PLUGIN_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: PRIVATE_CA_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: PRIVATE_CA_REGISTRY_URL
            value: "registry.localtest.me"
          - name: PRIVATE_CA_DISABLED
            value: "false"
        volumeMounts:
          - name: hostalias
            mountPath: /etc/hosts
          - name: kubelet-conf
            mountPath: /var/lib/kubelet
          - name: proc-volume
            mountPath: /proc-aux
          - name: host-etc
            mountPath: /host/etc
          - name: ca-pemstore
            mountPath: /etc/ssl/certs/okteto-private-ca.crt
            subPath: ca.crt
            readOnly: true
        resources:
            requests:
              cpu: 10m
              memory: 10Mi
      volumes:
      - name: kubelet-conf
        hostPath:
          path: /var/lib/kubelet
      - name: hostalias
        hostPath:
          path: /etc/hosts
      - name: proc-volume
        hostPath:
          path: /proc
      - name: host-etc
        hostPath:
          path: /etc
      - name: ca-pemstore
        secret:
          defaultMode: 420
          secretName: default-ssl-certificate-selfsigned
---
# Source: okteto/charts/ingress-nginx/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.10.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-ingress-nginx-controller
  namespace: okteto-1.21.1.tgz
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: controller
  replicas: 2
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        helm.sh/chart: ingress-nginx-4.10.1
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "1.10.1"
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller-chroot:v1.10.1@sha256:c155954116b397163c88afcb3252462771bd7867017e8a17623e83601bab7ac7
          imagePullPolicy: IfNotPresent
          lifecycle: 
            preStop:
              exec:
                command:
                - /wait-shutdown
          args: 
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/my-release-ingress-nginx-controller
            - --election-id=my-release-ingress-nginx-leader
            - --controller-class=k8s.io/okteto-controlplane-nginx
            - --ingress-class=okteto-controlplane-nginx
            - --configmap=$(POD_NAMESPACE)/my-release-ingress-nginx-controller
            - --enable-metrics=false
            - --default-backend-service=$(POD_NAMESPACE)/$(OKTETO_NAME)-ingress-nginx-defaultbackend
            - --default-ssl-certificate=$(POD_NAMESPACE)/default-ssl-certificate-selfsigned
          securityContext: 
            runAsNonRoot: true
            runAsUser: 101
            allowPrivilegeEscalation: true
            seccompProfile: 
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE
              - SYS_ADMIN
              - SYS_CHROOT
            readOnlyRootFilesystem: false
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
            - name: OKTETO_NAME
              valueFrom:
                configMapKeyRef:
                  key: Name
                  name: okteto-helm-release-meta
          livenessProbe: 
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe: 
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          resources: 
            requests:
              cpu: 100m
              memory: 90Mi
      nodeSelector: 
        kubernetes.io/os: linux
      affinity: 
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - controller
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - ingress-nginx
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: my-release-ingress-nginx
      terminationGracePeriodSeconds: 300
---
# Source: okteto/charts/okteto-nginx/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.10.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: my-release-okteto-nginx-controller
  namespace: okteto-1.21.1.tgz
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: okteto-nginx
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: controller
  replicas: 2
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        helm.sh/chart: okteto-nginx-4.10.1
        app.kubernetes.io/name: okteto-nginx
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "1.10.1"
        app.kubernetes.io/part-of: okteto-nginx
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: controller
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller-chroot:v1.10.1@sha256:c155954116b397163c88afcb3252462771bd7867017e8a17623e83601bab7ac7
          imagePullPolicy: IfNotPresent
          lifecycle: 
            preStop:
              exec:
                command:
                - /wait-shutdown
          args: 
            - /nginx-ingress-controller
            - --publish-service=$(POD_NAMESPACE)/my-release-okteto-nginx-controller
            - --election-id=my-release-okteto-nginx-leader
            - --controller-class=k8s.io/okteto-ingress-nginx
            - --ingress-class=okteto-nginx
            - --configmap=$(POD_NAMESPACE)/my-release-okteto-nginx-controller
            - --enable-metrics=false
            - --default-backend-service=$(POD_NAMESPACE)/$(OKTETO_NAME)-ingress-nginx-defaultbackend
          securityContext: 
            runAsNonRoot: true
            runAsUser: 101
            allowPrivilegeEscalation: true
            seccompProfile: 
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE
              - SYS_ADMIN
              - SYS_CHROOT
            readOnlyRootFilesystem: false
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
            - name: OKTETO_NAME
              valueFrom:
                configMapKeyRef:
                  key: Name
                  name: okteto-helm-release-meta
          livenessProbe: 
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe: 
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          resources: 
            requests:
              cpu: 100m
              memory: 90Mi
      nodeSelector: 
        kubernetes.io/os: linux
      affinity: 
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - controller
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - okteto-nginx
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: my-release-okteto-nginx
      terminationGracePeriodSeconds: 300
---
# Source: okteto/charts/reloader/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-namespace: "okteto-1.21.1.tgz"
    meta.helm.sh/release-name: "my-release"
  labels:
    app: my-release-reloader
    chart: "reloader-1.0.95"
    release: "my-release"
    heritage: "Helm"
    app.kubernetes.io/managed-by: "Helm"
    group: com.stakater.platform
    provider: stakater
    version: v1.0.95
  name: my-release-reloader
  namespace: okteto-1.21.1.tgz
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: my-release-reloader
      release: "my-release"
  template:
    metadata:
      labels:
        app: my-release-reloader
        chart: "reloader-1.0.95"
        release: "my-release"
        heritage: "Helm"
        app.kubernetes.io/managed-by: "Helm"
        group: com.stakater.platform
        provider: stakater
        version: v1.0.95
    spec:
      containers:
      - image: "ghcr.io/stakater/reloader:v1.0.95"
        imagePullPolicy: IfNotPresent
        name: my-release-reloader
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

        ports:
        - name: http
          containerPort: 9090
        livenessProbe:
          httpGet:
            path: /live
            port: http
          timeoutSeconds: 5
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /metrics
            port: http
          timeoutSeconds: 5
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          initialDelaySeconds: 10

        securityContext:
          {}
        args:
          - "--resources-to-ignore=configMaps"
      securityContext: 
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: reloader
---
# Source: okteto/templates/api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-okteto-api"
  labels:
    app.kubernetes.io/component: "api"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-api"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-release-okteto-api"
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-release-okteto-api"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: "api"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: bf8dff838de2b0ae40b6ed8bfc39410b6325386b4ae09e08253c547e330d20ae
        checksum/secrets: 6db66eac85f18733202aa5dc59d7ab5b43d7f7174a6fb34a92070a2b989a88ef
    spec:
      terminationGracePeriodSeconds: 300
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - "my-release-okteto-api"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: my-release-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: ca-pemstore
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      priorityClassName: 
      containers:
        - name: api
          image: okteto/backend:52c5ec953
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          args: [ "api" ]
          env:
            - name: OKTETO_INGRESS_INTERNAL_IP
              value: "$(MY_RELEASE_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
            - name: OKTETO_BUILDKIT_INTERNAL_IP
              value: "$(MY_RELEASE_OKTETO_BUILDKIT_SERVICE_HOST)"
          envFrom:
          - configMapRef:
              name: "my-release-okteto"
          - secretRef:
              name: my-release-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
            - name: ca-pemstore
              mountPath: /etc/ssl/certs/okteto-private-ca.crt
              subPath: ca.crt
              readOnly: true
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          lifecycle:
            preStop:
              exec:
                command: ["/app/bin/backend", "sleep", "--seconds", "45"]
          resources:
            limits:
              memory: 800Mi
            requests:
              cpu: 50m
              memory: 100Mi
---
# Source: okteto/templates/defaultbackend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-okteto-defaultbackend"
  labels:
    app.kubernetes.io/component: default-backend
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-defaultbackend"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-release-okteto-defaultbackend"
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-release-okteto-defaultbackend"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: "defaultbackend"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: bf8dff838de2b0ae40b6ed8bfc39410b6325386b4ae09e08253c547e330d20ae
        checksum/secrets: 6db66eac85f18733202aa5dc59d7ab5b43d7f7174a6fb34a92070a2b989a88ef
    spec:
      affinity:
        nodeAffinity:
          
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - "my-release-okteto-defaultbackend"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: my-release-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: ca-pemstore
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      priorityClassName: 
      containers:
        - name: default-backend
          image: "okteto/backend:52c5ec953"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
          envFrom:
          - configMapRef:
              name: "my-release-okteto"
          - secretRef:
              name: my-release-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
---
# Source: okteto/templates/frontend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-okteto-frontend"
  labels:
    app.kubernetes.io/component: "frontend"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-frontend"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-release-okteto-frontend"
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-release-okteto-frontend"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: "frontend"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "my-release-okteto-frontend"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: default
      priorityClassName: 
      tolerations:
      
      nodeSelector:
      containers:
        - name: frontend
          image: okteto/frontend:52c5ec953
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: THEME_PRIMARY
              value: 
            - name: THEME_SECONDARY
              value: 
            - name: THEME_LOGO
              value: 
            - name: OKTETO_CHART_VERSION
              value: 1.21.1
            - name: OKTETO_AUTH_TOKEN
              value: "true"
            - name: MIXPANEL_TOKEN
              value: 
          readinessProbe:
            httpGet:
              path: /index.html
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 1
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sleep", "45"]
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
---
# Source: okteto/templates/regcreds.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-okteto-regcreds"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-regcreds"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "my-release-okteto-regcreds,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-release-okteto-regcreds"
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-release-okteto-regcreds"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: "regcreds"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: bf8dff838de2b0ae40b6ed8bfc39410b6325386b4ae09e08253c547e330d20ae
        checksum/secrets: 6db66eac85f18733202aa5dc59d7ab5b43d7f7174a6fb34a92070a2b989a88ef
    spec:
      terminationGracePeriodSeconds: 300
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - "my-release-okteto-regcreds"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: my-release-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: my-release-okteto-regcreds
      priorityClassName: 
      containers:
        - name: controller
          image: okteto/backend:52c5ec953
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          args: [ "regcreds" ]
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          env:
            - name: DEBUG
              value: "false"
            - name: PORT
              value: "8081"
          envFrom:
          - configMapRef:
              name: "my-release-okteto"
          - secretRef:
              name: my-release-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
            
            limits:
              memory: 800Mi
            requests:
              cpu: 50m
              memory: 100Mi
---
# Source: okteto/templates/registry-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-okteto-registry"
  labels:
    app.kubernetes.io/component: "registry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-registry"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-release-okteto-registry"
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-release-okteto-registry"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: "registry"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/config: 89046cc7bf750a61ef61e794d7cdc2cffd58d6c517e385db61c079e14536d192
        checksum/secret: 2bbd2495e7af2d5705403238de84e451e676624e415775f621e9a0d893dce0f0
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "my-release-okteto-registry"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: "my-release-okteto-registry"
      tolerations:
      
      nodeSelector:
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: my-release-okteto-registry-config
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      priorityClassName: 
      containers:
        - name: registry
          image: okteto/registry:93a2c4c
          imagePullPolicy: IfNotPresent
          command:
          - sh
          - -c
          - "echo $OKTETO_INGRESS_INTERNAL_IP okteto.localtest.me > /etc/hosts && \
          /bin/registry serve /etc/docker/registry/config.yml"
          ports:
            - name: registry
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sleep", "45"]
          env:
            - name: OKTETO_INGRESS_INTERNAL_IP
              value: "$(MY_RELEASE_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: my-release-okteto-registry-http-secret
                  key: haShared
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: "true"
            - name: REGISTRY_AUTH_TOKEN_REALM
              value: "https://okteto.localtest.me/auth/registry"
            - name: REGISTRY_AUTH_TOKEN_SERVICE
              value: "okteto-registry"
            - name: REGISTRY_AUTH_TOKEN_ISSUER
              value: "okteto-registry"
            - name: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE
              value: "/run/secrets/tls/tls.crt"
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          volumeMounts:
            - name: config
              mountPath: "/etc/docker/registry"
              readOnly: true
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
            - name: data
              mountPath: /var/lib/registry/
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
---
# Source: okteto/templates/webhook-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-okteto-mutation-webhook"
  labels:
    app.kubernetes.io/component: "webhook"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "my-release-okteto-mutation-webhook,okteto-cloud-secret"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-release-okteto-mutation-webhook"
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-release-okteto-mutation-webhook"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: "webhook"
        app.kubernetes.io/part-of: "okteto"
      annotations:
        checksum/configmap: bf8dff838de2b0ae40b6ed8bfc39410b6325386b4ae09e08253c547e330d20ae
        checksum/secrets: 0bbb562448acd69b72b2cecbf408ff46eeb1ea6f3273b643d39538669b48fd7c
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "my-release-okteto-mutation-webhook"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: my-release-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: webhook-tls-certs
          secret:
            defaultMode: 420
            secretName: my-release-okteto-mutation-webhook
      hostNetwork: false
      priorityClassName: 
      containers:
        - name: server
          image: okteto/backend:52c5ec953
          imagePullPolicy: IfNotPresent
          ports:
            - name: https
              containerPort: 443
            - name: http
              containerPort: 8080
          args: [ "webhook" ]
          env:
            - name: OKTETO_INGRESS_INTERNAL_IP
              value: "$(MY_RELEASE_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
            - name: OKTETO_BUILDKIT_INTERNAL_IP
              value: "$(MY_RELEASE_OKTETO_BUILDKIT_SERVICE_HOST)"
            - name: PORT
              value: "443"
          envFrom:
          - configMapRef:
              name: "my-release-okteto"
          - secretRef:
              name: my-release-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: webhook-tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /readiness
              port: 443
            initialDelaySeconds: 3
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: http
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
---
# Source: okteto/templates/buildkit-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "my-release-okteto-buildkit-1133156121"
  labels:
    app.kubernetes.io/component: "buildkit"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-buildkit-1133156121"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    secret.reloader.stakater.com/reload: "default-ssl-certificate-selfsigned"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "my-release-okteto-buildkit-1133156121"
      app.kubernetes.io/instance: my-release
  serviceName: my-release-okteto-buildkit
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-release-okteto-buildkit-1133156121"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: "buildkit"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "my-release-okteto-buildkit-1133156121"
                topologyKey: kubernetes.io/hostname
      serviceAccountName: "okteto-buildkit"
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: ca-pemstore
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
        - name: storage
          emptyDir:
            sizeLimit: 12Gi
        - name: host-volume
          emptyDir: {}
      priorityClassName: 
      initContainers:
      - name: etc-hosts
        image: okteto/buildkit:v0.12.5-okteto1
        imagePullPolicy: IfNotPresent
        command: [sh, -c, touch /data/hosts]
        volumeMounts:
        - name: host-volume
          mountPath: /data
      containers:
      - name: buildkitd
        image: okteto/buildkit:v0.12.5-okteto1
        imagePullPolicy: IfNotPresent
        command:
          - /usr/bin/start.sh
        env:
          - name: OKTETO_BUILDKITD_LOCAL_URL
            value: local-buildkitd.localtest.me
          - name: OKTETO_INGRESS_INTERNAL_IP
            value: "$(MY_RELEASE_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
          - name: PUBLIC_URL
            value: "okteto.localtest.me"
          - name: REGISTRY_URL
            value: "registry.localtest.me"
          - name: STORAGE
            value: "10000"
        ports:
        - containerPort: 1234
          protocol: TCP
        securityContext:
          privileged: true
        volumeMounts:
          - name: "storage"
            subPath: data
            mountPath: /var/lib/buildkit
          - name: tls-certs
            mountPath: /run/secrets/tls
            readOnly: true
          - name: ca-pemstore
            mountPath: /etc/ssl/certs/okteto-private-ca.crt
            subPath: ca.crt
            readOnly: true
          - name: host-volume
            mountPath: /etc/hosts
            subPath: hosts
        resources:
          
          limits:
            memory: 12Gi
          requests:
            cpu: 1
            memory: 4Gi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
# Source: okteto/templates/gc-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "my-release-okteto-gc"
  labels:
    app.kubernetes.io/component: "gc"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-gc"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 120
  schedule: "@hourly"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "gc"
        app.kubernetes.io/part-of: "okteto"
    spec:
      activeDeadlineSeconds: 3300
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "gc"
            app.kubernetes.io/part-of: "okteto"
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: my-release-okteto
          tolerations:
          
          nodeSelector:
          volumes:
          - name: tls-certs
            secret:
              defaultMode: 420
              secretName: default-ssl-certificate-selfsigned
          restartPolicy: Never
          containers:
            - name: gc
              image: okteto/backend:52c5ec953
              imagePullPolicy: IfNotPresent
              args: [ "gc" ]
              env:
                - name: OKTETO_INGRESS_INTERNAL_IP
                  value: "$(MY_RELEASE_INGRESS_NGINX_CONTROLLER_SERVICE_HOST)"
                - name: OKTETO_BUILDKIT_INTERNAL_IP
                  value: "$(MY_RELEASE_OKTETO_BUILDKIT_SERVICE_HOST)"
              envFrom:
                - configMapRef:
                    name: "my-release-okteto"
                - secretRef:
                    name: my-release-okteto
                - secretRef:
                    name: "okteto-cloud-secret"
                    optional: true
              volumeMounts:
                - name: tls-certs
                  mountPath: /run/secrets/tls
                  readOnly: true
          priorityClassName:
---
# Source: okteto/templates/installer-checker.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "my-release-okteto-installer-checker"
  labels:
    app.kubernetes.io/component: "installer-checker"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-installer-checker"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "*/5 * * * *"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "installer-checker"
        app.kubernetes.io/part-of: "okteto"
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "installer-checker"
            app.kubernetes.io/part-of: "okteto"
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: my-release-okteto
          priorityClassName: 
          tolerations:
          
          nodeSelector:
          restartPolicy: Never
          containers:
            - name: installer-checker
              image: okteto/backend:52c5ec953
              imagePullPolicy: IfNotPresent
              args: [ "installer-checker" ]
              envFrom:
              - configMapRef:
                  name: "my-release-okteto"
              - secretRef:
                  name: my-release-okteto
              - secretRef:
                  name: "okteto-cloud-secret"
                  optional: true
---
# Source: okteto/templates/namespace-destroy-all-checker-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "my-release-okteto-destroy-all-checker"
  labels:
    app.kubernetes.io/component: "namespace-destroy-all"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-destroy-all-checker"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 120
  schedule: "*/3 * * * *"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "namespace-destroy-all"
        app.kubernetes.io/part-of: "okteto"
    spec:
      activeDeadlineSeconds: 120
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "namespace-destroy-all"
            app.kubernetes.io/part-of: "okteto"
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: my-release-okteto
          tolerations:
          
          nodeSelector:
          restartPolicy: Never
          priorityClassName: 
          containers:
            - name: checker
              image: "okteto/backend:52c5ec953"
              imagePullPolicy: IfNotPresent
              args: [ "check-namespace-destroy-all"]
              envFrom:
                - configMapRef:
                    name: "my-release-okteto"
---
# Source: okteto/templates/telemetry-cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "my-release-okteto-telemetry"
  labels:
    app.kubernetes.io/component: "telemetry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-telemetry"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "@daily"
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: "telemetry"
        app.kubernetes.io/part-of: "okteto"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "telemetry"
            app.kubernetes.io/part-of: "okteto"
            app.kubernetes.io/instance: my-release
            app.kubernetes.io/managed-by: Helm
        spec:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - key: dev.okteto.com/overloaded
                    operator: DoesNotExist
                weight: 50
          serviceAccountName: my-release-okteto
          priorityClassName: 
          tolerations:
          
          nodeSelector:
          restartPolicy: Never
          containers:
            - name: telemetry
              image: okteto/backend:52c5ec953
              imagePullPolicy: IfNotPresent
              args: [ "telemetry" ]
              envFrom:
                - configMapRef:
                    name: "my-release-okteto"
                - secretRef:
                    name: my-release-okteto
                - secretRef:
                    name: "okteto-cloud-secret"
                    optional: true
              resources:
                requests:
                  cpu: 10m
                  memory: 100Mi
---
# Source: okteto/charts/ingress-nginx/templates/controller-ingressclass.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    helm.sh/chart: ingress-nginx-4.10.1
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: okteto-controlplane-nginx
spec:
  controller: k8s.io/okteto-controlplane-nginx
---
# Source: okteto/charts/okteto-nginx/templates/controller-ingressclass.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    helm.sh/chart: okteto-nginx-4.10.1
    app.kubernetes.io/name: okteto-nginx
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/part-of: okteto-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: controller
  name: okteto-nginx
spec:
  controller: k8s.io/okteto-ingress-nginx
---
# Source: okteto/templates/buildkit-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-okteto-buildkit
  labels:
    app.kubernetes.io/name: my-release-okteto-buildkit
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "buildkit"
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "GRPCS"
    nginx.ingress.kubernetes.io/configuration-snippet: "grpc_read_timeout 1800s;\ngrpc_intercept_errors off;\ngrpc_buffer_size 64k;\n"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - buildkit.localtest.me
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: buildkit.localtest.me
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-buildkit
                port:
                  number: 443
---
# Source: okteto/templates/ingress-wildcard.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-okteto-wildcard
  labels:
    app.kubernetes.io/name: okteto
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "api"
  annotations:
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-body-size: "60M"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - "*.localtest.me"
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: "*.localtest.me"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-nginx-controller
                port:
                  number: 443
---
# Source: okteto/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-okteto
  labels:
    app.kubernetes.io/name: okteto
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "api"
  annotations:
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - okteto.localtest.me
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: okteto.localtest.me
      http:
        paths:
          - path: "/auth"
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-api
                port:
                  number: 8080
          - path: /healthz
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-api
                port:
                  number: 8080
          - path: /graphql
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-api
                port:
                  number: 8080
          - path: /deploy
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-api
                port:
                  number: 8080
          - path: /sse
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-api
                port:
                  number: 8080
          - path: /auth/kubetoken
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-api
                port:
                  number: 8080
          - path: /clusterinfo
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-api
                port:
                  number: 8080
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-frontend
                port:
                  number: 8080
---
# Source: okteto/templates/kubernetes-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-okteto-cluster-endpoint
  labels:
    app.kubernetes.io/name: my-release-okteto-cluster-endpoint
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "cluster-endpoint"
  annotations:
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - "kubernetes.localtest.me"
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: "kubernetes.localtest.me"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-cluster-endpoint
                port:
                  number: 443
---
# Source: okteto/templates/registry-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-okteto-registry
  labels:
    app.kubernetes.io/name: my-release-okteto-registry
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/component: "registry"
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
spec:
  ingressClassName: okteto-controlplane-nginx
  tls:
  - hosts:
    - registry.localtest.me
    secretName: default-ssl-certificate-selfsigned
  rules:
    - host: registry.localtest.me
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: my-release-okteto-registry
                port:
                  number: 5000
---
# Source: okteto/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: "my-release-okteto-mutation-webhook"
  labels:
    app.kubernetes.io/name: "my-release-okteto-mutation-webhook"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: ingress.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/ingress"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["extensions"]
        apiVersions: ["v1beta1"]
        resources: ["ingresses"]
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["networking.k8s.io"]
        apiVersions: ["v1beta1", "v1"]
        resources: ["ingresses"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: service.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    failurePolicy: Fail
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/service"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE", "DELETE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["services"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: deployment.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/deployment"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["deployments"]
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["extensions"]
        apiVersions: ["v1beta1"]
        resources: ["deployments"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: statefulset.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/statefulset"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["statefulsets"]
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["extensions"]
        apiVersions: ["v1beta1"]
        resources: ["statefulsets"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: pod.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/pod"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: pvc.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/pvc"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "DELETE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["persistentvolumeclaims"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: serviceaccount.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/serviceaccount"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["serviceaccounts"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: cronjob.webhook.okteto.com
    admissionReviewVersions: ["v1", "v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/cronjob"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["UPDATE"]
        apiGroups: ["batch"]
        apiVersions: ["v1", "v1beta1"]
        resources: ["cronjobs"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: config-map.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/config-map"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["configmaps"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: namespace.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/namespace"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["namespaces"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: daemonset.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/daemonset"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["apps"]
        apiVersions: ["v1"]
        resources: ["daemonsets"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
  - name: externalresources.webhook.okteto.com
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-mutation-webhook"
        path: "/mutate/externalresources"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQUp6Vi9DQUlGditoS0Nna0pvanQyaFF3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2IydDBaWFJ2TFdsdWRHVnlibUZzTFdOaE1CNFhEVEkwTURZeU1ERTBOVGd4TkZvWApEVE0wTURZeE9ERTBOVGd4TkZvd0hURWJNQmtHQTFVRUF4TVNiMnQwWlhSdkxXbHVkR1Z5Ym1Gc0xXTmhNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2U01tQU1GTVFXcnBnWE9sS2RiNXZWM2EKeHJyQllZaUNwMFFFWTN5V2NwTlI1OFlIQmkyVVhJOEQra0ovWng4Ry9Sa0FQaDNSN0c0YVlzNjloU2g0M05LMQpZWDZ3NDIxN3RQWkVxaFkvYUEwaFNJZmdZOVg3MTJ2YldvdmR4dk00SDA1M1g5WXkyYmNvTy8vL3JnR0gzZGc0CjE2T1JkS1o1WmhEVXFVaTZlK0I1MCtZYkFNZkFsMUtZRnVhSUFxUUUyZEVyUVp1dmtQYXB4NWQrdFFQTjU3R3MKTEF5NkhmTmd6a0xOdWEydnc4a2p6Rkd0UFFYUmF1WmI1clZPRVdNYXM1WEl4bFM1engvdTBLYUVqTjExd1VaRwpZTDErNkowQitUYVJEQ09YVkY3ZmJLNWk5ZWgrRHBaUTl5Nzg1MGZVRnpLcTl4Y1F2Sm1XRkhQek1GejZmd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGUGVVUndDenE2Wk9YRW5jY1RzSwpJNlRyNmU2ak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2lHQXBMS05SSExYdkVhY21HbUVWb1hTNS9wKzFQCk52ZG85ciswN0NMRWRHcTBGRWJ6OUdIdUViYUk4ZlhiMmFIY2JzVmR5TG5DRVpiQUZmTjkzVmdab0VGQlI5OUUKbnRFUzVKVTZWdDFJUTgxM0tyZTZCcThNSU1ZVUZmYndCQjlrc012UEZ0VHUzeWFwMUhSTmJKU2N5bm90WVF6SApsZEs3SjVUSjR0REhFYVp5dndjVjVyVXJqVUtsR0JIYUFTd2E2UjZJeWpGMXltZ3FpZHlrMUNUSERqVjRzQTB0CnEwMnpvcEJVTWFIN0JIaGhEQUJiMExQaDQ2S3gwSkQ3bk4weE5pSlVqOXE1MUphR2lkeHhic1FSNkZyb0g2RDUKL1FNMFFCWUIxWmdGZ0xsbW9tSnJpNjUyaDVLMTkvSzVlcGdrZ09HWS9IbmRLckVGY2lxSlVLSUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["dev.okteto.com"]
        apiVersions: ["v1"]
        resources: ["externals"]
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
---
# Source: okteto/templates/regcreds-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-release-okteto-regcreds
  namespace: "okteto-1.21.1.tgz"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-regcreds"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: pullsecret.regcreds.okteto.com
    failurePolicy: Ignore
    admissionReviewVersions: ["v1"]
    sideEffects: NoneOnDryRun
    timeoutSeconds: 30
    clientConfig:
      service:
        name: "my-release-okteto-regcreds"
        path: "/validate/pullsecret"
        namespace: "okteto-1.21.1.tgz"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lSQU5vZUhUcG03bzB4RDVvYTNjWW5UWEV3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFbU1DUUdBMVVFQXhNZGJYa3RjbVZzWldGelpTMXZhM1JsZEc4dGNtVm5ZM0psWkhNdFkyRXdIaGNOTWpRdwpOakl3TVRRMU9ERTFXaGNOTXpRd05qRTRNVFExT0RFMVdqQW9NU1l3SkFZRFZRUURFeDF0ZVMxeVpXeGxZWE5sCkxXOXJkR1YwYnkxeVpXZGpjbVZrY3kxallUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFKcy9nU1ByYlE5R3VZR3hIcmR1eE5ibU9Sb3pWVndVdi93Y1hLRVd0bUVJcGFaS09tazJKbXpnMGtEegp2bHdaSEdUWUtXS2VjNnZoK2lxK2lpRmtiVEpxRFpNUDZGRkZlTTBTNTRWbXkwMUErT09KY0dtSUdscFFIaGJ5CkFNbi9EUHlsWmZvRWdjZjdHMlhxRmZ3N291M1BqOEgzZTUrUnVKODZkTXZvTVQzR0JBM2pNMUZ5MkVWdHJWRHEKOExlNGdkbFJIR0NxZUk0ZXlRZ2NwTFc0ZE1DV1p5N3Njbjk3RXVXYU4wN3VYRTIrYWVJTGxSRlFrWXdwQTVUUgp5RlN5NUVPMWhOOW94ek1xZ3Bid3VMdWx2MGdMcnZwWGp1Sjc0NU94ZGFUTnV6NnZwN0VVbThZWDhGdE9GWmZhCkk5VFk3a2Z2a0hzQTgyWEFEMkFwOXFGUG1tMENBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLa01CMEcKQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwRwpBMVVkRGdRV0JCVHZwRHBja1FtbWszY3VjN2d2SHFHdFVIaWlBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCk1xTUkyMVJ3RUJaRE93bHg5MDBqRUo5ZW9hTC9BY0I4SUVQTjJpbzB6UTFwWlNvb3hQU1FCcFpVZ2dYOE93YXUKVjNnS2pCenlpc1h6blkrZTFvdUFmcGxudVRiNDh2cm1MWjNTUU5YN3AyeERMQm81bDMvWlpXRHlua2dTRjNNRgpYZWNvRE1tL1pvQVFJMWZsU3pXVVRBU0RRRFFLdm9vb0NVMHpPSUwveVRiTCtJc2dmdTZPM2JVQmJKTnpHRUw0CkpURDM5L1RFbWVpeFRheFVOeUk3eWRCd3MxTjVuOTMzVUNjeFZ5NlNrVjhjbGM0WEViaHRZWHE3TVo2YnpHTXEKdnE1MHFGejFncStpUnMvQXVhL0xoTExOV2NpZFBMazk1VXdJTGJBRmZzSlpxMHExVllNTlRGdjN0L2lESXZHZgpJbXI2QmtsMjBUZlprTlBlcmFYR2lBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["secrets"]
    objectSelector:
      matchLabels:
        space.okteto.com/managed: "true"
    namespaceSelector:
      matchLabels:
        dev.okteto.com: "true"
---
# Source: okteto/templates/clustermetrics-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-release-okteto-clustermetrics"
  labels:
    app.kubernetes.io/component: "clustermetrics"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-clustermetrics"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  activeDeadlineSeconds: 1800
  completions: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-release-okteto-clustermetrics"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: "clustermetrics"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
      restartPolicy: Never
      priorityClassName: 
      serviceAccountName: my-release-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      containers:
        - name: api
          image: okteto/backend:52c5ec953
          imagePullPolicy: IfNotPresent
          args: [ "collect-cluster-metrics"]
          envFrom:
          - configMapRef:
              name: "my-release-okteto"
          - secretRef:
              name: my-release-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
---
# Source: okteto/templates/migration-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-release-okteto-migration"
  labels:
    app.kubernetes.io/component: "migration"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-migration"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "my-release-okteto-migration"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: "migration"
        app.kubernetes.io/part-of: "okteto"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
      restartPolicy: Never
      priorityClassName: 
      serviceAccountName: my-release-okteto
      tolerations:
      
      nodeSelector:
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: default-ssl-certificate-selfsigned
      containers:
        - name: api
          image: okteto/backend:52c5ec953
          imagePullPolicy: IfNotPresent
          args: [ "migrate" ]
          envFrom:
          - configMapRef:
              name: "my-release-okteto"
          - secretRef:
              name: my-release-okteto
          - secretRef:
              name: "okteto-cloud-secret"
              optional: true
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
---
# Source: okteto/templates/telemetry-post-install-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "my-release-okteto-telemetry-post-install"
  labels:
    app.kubernetes.io/component: "telemetry"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "my-release-okteto-telemetry-post-install"
    helm.sh/chart: okteto-1.21.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "telemetry"
        app.kubernetes.io/part-of: "okteto"
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dev.okteto.com/overloaded
                operator: DoesNotExist
            weight: 50
      serviceAccountName: my-release-okteto
      priorityClassName: 
      tolerations:
      
      nodeSelector:
      restartPolicy: Never
      containers:
        - name: telemetry
          image: okteto/backend:52c5ec953
          imagePullPolicy: IfNotPresent
          args: [ "telemetry" ]
          envFrom:
            - configMapRef:
                name: "my-release-okteto"
            - secretRef:
                name: my-release-okteto
            - secretRef:
                name: "okteto-cloud-secret"
                optional: true
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
