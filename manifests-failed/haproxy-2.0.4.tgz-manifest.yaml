---
# Source: haproxy/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-haproxy
  namespace: "haproxy-2.0.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/version: 3.0.2
    helm.sh/chart: haproxy-2.0.4
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: haproxy
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 8080
---
# Source: haproxy/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-haproxy
  namespace: "haproxy-2.0.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/version: 3.0.2
    helm.sh/chart: haproxy-2.0.4
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: haproxy
      app.kubernetes.io/component: haproxy
---
# Source: haproxy/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-haproxy
  namespace: "haproxy-2.0.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/version: 3.0.2
    helm.sh/chart: haproxy-2.0.4
    app.kubernetes.io/component: haproxy
automountServiceAccountToken: false
---
# Source: haproxy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-haproxy
  namespace: "haproxy-2.0.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/version: 3.0.2
    helm.sh/chart: haproxy-2.0.4
    app.kubernetes.io/component: haproxy
data:
  haproxy.cfg: |
    global
      log stdout format raw local0
      maxconn 1024
    defaults
      log global
      timeout client 60s
      timeout connect 60s
      timeout server 60s
    frontend fe_main
      bind :8080
      default_backend be_main
    backend be_main
      server web1 10.0.0.1:8080 check
---
# Source: haproxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-haproxy
  namespace: "haproxy-2.0.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/version: 3.0.2
    helm.sh/chart: haproxy-2.0.4
    app.kubernetes.io/component: haproxy
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/component: haproxy
---
# Source: haproxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-haproxy
  namespace: "haproxy-2.0.4.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: haproxy
    app.kubernetes.io/version: 3.0.2
    helm.sh/chart: haproxy-2.0.4
    app.kubernetes.io/component: haproxy
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: haproxy
      app.kubernetes.io/component: haproxy
  template:
    metadata:
      annotations:
        checksum/configmap: d77e86d30c9f5af0ea98c728f6ebcddb430ba18ef61c29b85cff328a6fec9ea4
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: haproxy
        app.kubernetes.io/version: 3.0.2
        helm.sh/chart: haproxy-2.0.4
        app.kubernetes.io/component: haproxy
    spec:
      serviceAccountName: my-release-haproxy
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: haproxy
                    app.kubernetes.io/component: haproxy
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      enableServiceLinks: true
      containers:
        - name: haproxy
          image: docker.io/bitnami/haproxy:3.0.2-debian-12-r0
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8080
              name: http
          env:
          envFrom:
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 1024Mi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          livenessProbe:
            # Using exec instead of tcpSocket to avoid noise in te logs
            exec:
              command:
                - pgrep
                - haproxy
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            # Using exec instead of tcpSocket to avoid noise in te logs
            exec:
              command:
                - pgrep
                - haproxy
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - name: haproxy-conf
              mountPath: /bitnami/haproxy/conf
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: haproxy-conf
          configMap:
            name: my-release-haproxy
