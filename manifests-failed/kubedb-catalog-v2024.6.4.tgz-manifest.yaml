---
# Source: kubedb-catalog/templates/elasticsearch/deprecated-elasticsearch-7.3.2-elasticstack.yaml
---
---
# Source: kubedb-catalog/templates/elasticsearch/deprecated-elasticsearch-7.6.1-opendistro.yaml
---
---
# Source: kubedb-catalog/templates/elasticsearch/deprecated-elasticsearch-7.9.1-elasticstack.yaml
---
---
# Source: kubedb-catalog/templates/mongodb/deprecated-mongodb-3.4-official.yaml
---
---
# Source: kubedb-catalog/templates/mongodb/deprecated-mongodb-3.4.22-official.yaml
---
---
# Source: kubedb-catalog/templates/mongodb/deprecated-mongodb-3.6-official.yaml
---
---
# Source: kubedb-catalog/templates/mongodb/deprecated-mongodb-3.6.13-official.yaml
---
---
# Source: kubedb-catalog/templates/mongodb/deprecated-mongodb-4.0.11-official.yaml
---
---
# Source: kubedb-catalog/templates/mongodb/deprecated-mongodb-4.0.5-official.yaml
---
---
# Source: kubedb-catalog/templates/mongodb/deprecated-mongodb-4.0.5-official.yaml
---
---
# Source: kubedb-catalog/templates/mongodb/deprecated-mongodb-4.1.13-official.yaml
---
---
# Source: kubedb-catalog/templates/mongodb/deprecated-mongodb-4.1.7-official.yaml
---
---
# Source: kubedb-catalog/templates/mysql/deprecated-mysql-5.7.25-official.yaml
---
---
# Source: kubedb-catalog/templates/mysql/deprecated-mysql-5.7.25-official.yaml
---
---
# Source: kubedb-catalog/templates/mysql/deprecated-mysql-5.7.29-official.yaml
---
---
# Source: kubedb-catalog/templates/mysql/deprecated-mysql-5.7.31-official.yaml
---
---
# Source: kubedb-catalog/templates/mysql/deprecated-mysql-8.0.14-official.yaml
---
---
# Source: kubedb-catalog/templates/mysql/deprecated-mysql-8.0.14-official.yaml
---
---
# Source: kubedb-catalog/templates/mysql/deprecated-mysql-8.0.20-official.yaml
---
---
# Source: kubedb-catalog/templates/mysql/deprecated-mysql-8.0.21-official.yaml
---
---
# Source: kubedb-catalog/templates/mysql/deprecated-mysql-8.0.3-official.yaml
---
---
# Source: kubedb-catalog/templates/mysql/deprecated-mysql-8.0.3-official.yaml
---
---
# Source: kubedb-catalog/templates/postgres/deprecated-postgres-10.2-official.yaml
---
---
# Source: kubedb-catalog/templates/postgres/deprecated-postgres-10.2-official.yaml
---
---
# Source: kubedb-catalog/templates/postgres/deprecated-postgres-10.6-official.yaml
---
---
# Source: kubedb-catalog/templates/postgres/deprecated-postgres-11.1-official.yaml
---
---
# Source: kubedb-catalog/templates/postgres/deprecated-postgres-9.6-official.yaml
---
---
# Source: kubedb-catalog/templates/postgres/deprecated-postgres-9.6-official.yaml
---
---
# Source: kubedb-catalog/templates/postgres/deprecated-postgres-9.6.7-official.yaml
---
---
# Source: kubedb-catalog/templates/postgres/deprecated-postgres-9.6.7-official.yaml
---
---
# Source: kubedb-catalog/templates/redis/deprecated-redis-4.0.6.yaml
---
---
# Source: kubedb-catalog/templates/redis/deprecated-redis-4.0.yaml
---
---
# Source: kubedb-catalog/templates/clickhouse/clickhouse-24.4.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ClickHouseVersion
metadata:
  name: '24.4.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'clickhouse/clickhouse-server:24.4.1'
  initContainer:
    image: 'ghcr.io/kubedb/clickhouse-init:24.4.1'
  securityContext:
    runAsUser: 101
  version: 24.4.1
---
# Source: kubedb-catalog/templates/druid/druid-25.0.0.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: DruidVersion
metadata:
  name: '25.0.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'apache/druid:25.0.0'
  initContainer:
    image: 'ghcr.io/kubedb/druid-init:25.0.0'
  securityContext:
    runAsUser: 1000
  version: 25.0.0
---
# Source: kubedb-catalog/templates/druid/druid-28.0.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: DruidVersion
metadata:
  name: '28.0.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'ghcr.io/appscode-images/druid:28.0.1'
  initContainer:
    image: 'ghcr.io/kubedb/druid-init:28.0.1'
  securityContext:
    runAsUser: 1000
  version: 28.0.1
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-1.1.0-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-1.1.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:1.1.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:1.1.0-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:1.1.0'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:1.1.0-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 1.1.0
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-1.2.4-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-1.2.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:1.2.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:1.2.4-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:1.2.4'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:1.2.4-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 1.2.4
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-1.3.13-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-1.3.13'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:1.3.13'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:1.3.13-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:1.3.13'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:1.3.13-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 1.3.13
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-2.0.1-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.0.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.0.1'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.0.1-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.0.1'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.0.1-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.0.1
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-2.11.1-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.11.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.11.1'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.11.1-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.11.1'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.11.1-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.11.1
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-2.14.0-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.14.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.14.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.14.0-opensearch-v2024.05.29'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.14.0'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.14.0-opensearch-v2024.05.29'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.14.0
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-2.5.0-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.5.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.5.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.5.0-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.5.0'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.5.0-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.5.0
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-2.8.0-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.8.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.8.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.8.0-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.8.0'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.8.0-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.8.0
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-6.8.23-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-6.8.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:6.8.23'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:6.8.23-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:6.8.23'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:6.8.23-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-6.8.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-6.8.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.5.0
  version: 6.8.23
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-7.13.4-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.13.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.13.4'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.13.4-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.13.4'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.13.4-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.15.0
  version: 7.13.4
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-7.14.2-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.14.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.14.2'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.14.2-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.14.2'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.14.2-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.18.0
  version: 7.14.2
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-7.16.3-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.16.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.16.3'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.16.3-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.16.3'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.16.3-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.18.0
  version: 7.16.3
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-7.17.15-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.17.15'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.17.15'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.17.15-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.17.15'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.17.15-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  version: 7.17.15
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-7.9.3-searchguard.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'searchguard-7.9.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: SearchGuard
  db:
    image: 'floragunncom/sg-elasticsearch:7.9.3-oss-47.1.0'
  distribution: SearchGuard
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.9.3-searchguard'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!searchguard)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!searchguard)(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.15.0
  version: 7.9.3
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-8.11.1-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.11.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.11.1'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.11.1-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.11.1'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.11.1-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.11.1
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-8.13.4-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.13.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.13.4'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.13.4-xpack-v2024.05.29'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.13.4'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.13.4-xpack-v2024.05.29'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.13.4
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-8.2.3-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.2.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.2.3'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.2.3-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.2.3'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.2.3-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.2.3
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-8.5.3-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.5.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.5.3'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.5.3-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.5.3'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.5.3-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.5.3
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-8.6.2-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.6.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.6.2'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.6.2-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.6.2'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.6.2-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.6.2
---
# Source: kubedb-catalog/templates/elasticsearch/elasticsearch-8.8.2-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.8.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.8.2'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.8.2-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.8.2'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.8.2-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.8.2
---
# Source: kubedb-catalog/templates/ferretdb/ferretdb-1.18.0.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: FerretDBVersion
metadata:
  name: '1.18.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'ghcr.io/appscode-images/ferretdb:1.18.0'
  securityContext:
    runAsUser: 1000
  version: 1.18.0
---
# Source: kubedb-catalog/templates/kafkaconnector/kafkaconnector-0.13.0-gcs.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'gcs-0.13.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-gcs:0.13.0'
  securityContext:
    runAsUser: 1001
  type: GCS
  version: 0.13.0
---
# Source: kubedb-catalog/templates/kafkaconnector/kafkaconnector-1.11.0-mongodb.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'mongodb-1.11.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-mongodb:1.11.0'
  securityContext:
    runAsUser: 1001
  type: MongoDB
  version: 1.11.0
---
# Source: kubedb-catalog/templates/kafkaconnector/kafkaconnector-2.15.0-s3.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 's3-2.15.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-s3:2.15.0'
  securityContext:
    runAsUser: 1001
  type: S3
  version: 2.15.0
---
# Source: kubedb-catalog/templates/kafkaconnector/kafkaconnector-2.4.2-mysql.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'mysql-2.4.2.final'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-mysql:2.4.2.final'
  securityContext:
    runAsUser: 1001
  type: MySQL
  version: 2.4.2
---
# Source: kubedb-catalog/templates/kafkaconnector/kafkaconnector-2.4.2-postgres.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'postgres-2.4.2.final'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-postgres:2.4.2.final'
  securityContext:
    runAsUser: 1001
  type: Postgres
  version: 2.4.2
---
# Source: kubedb-catalog/templates/kafkaconnector/kafkaconnector-2.6.1-jdbc.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'jdbc-2.6.1.final'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-jdbc:2.6.1.final'
  securityContext:
    runAsUser: 1001
  type: JDBC
  version: 2.6.1
---
# Source: kubedb-catalog/templates/kafka/kafka-3.3.2.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.3.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.3.2'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.3.2'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.3.2'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.3.2
---
# Source: kubedb-catalog/templates/kafka/kafka-3.4.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.4.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.4.1'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.4.1'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.4.1'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.4.1
---
# Source: kubedb-catalog/templates/kafka/kafka-3.5.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.5.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.5.1'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.5.1'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.5.1'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.5.1
---
# Source: kubedb-catalog/templates/kafka/kafka-3.5.2.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.5.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.5.2'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.5.2'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.5.2'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.5.2
---
# Source: kubedb-catalog/templates/kafka/kafka-3.6.0.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.6.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.6.0'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.6.0'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.6.0'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.6.0
---
# Source: kubedb-catalog/templates/kafka/kafka-3.6.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.6.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.6.1'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.6.1'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.6.1'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.6.1
---
# Source: kubedb-catalog/templates/mssqlserver/mssqlserver-2022.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MSSQLServerVersion
metadata:
  name: '2022-cu12'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/mssql-coordinator:v0.1.0'
  db:
    image: 'mcr.microsoft.com/mssql/server:2022-CU12-ubuntu-22.04'
  initContainer:
    image: 'ghcr.io/kubedb/mssql-init:2022-ubuntu-22-v2'
  securityContext:
    runAsUser: 10001
  version: "2022"
---
# Source: kubedb-catalog/templates/mariadb/mariadb-10.10.7.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.10.7'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_10.10.7-jammy'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.10.7-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.10.7
---
# Source: kubedb-catalog/templates/mariadb/mariadb-10.11.6.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.11.6'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_10.11.6-jammy'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.11.6-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.11.6
---
# Source: kubedb-catalog/templates/mariadb/mariadb-10.4.32.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.4.32'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_10.4.32-focal'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.4.32-focal'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.4.32
---
# Source: kubedb-catalog/templates/mariadb/mariadb-10.5.23.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.5.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_10.5.23-focal'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.5.23-focal'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.5.23
---
# Source: kubedb-catalog/templates/mariadb/mariadb-10.6.16.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.6.16'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_10.6.16-focal'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.6.16-focal'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.6.16
---
# Source: kubedb-catalog/templates/mariadb/mariadb-11.0.4.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '11.0.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_11.0.4-jammy'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:11.0.4-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 11.0.4
---
# Source: kubedb-catalog/templates/mariadb/mariadb-11.1.3.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '11.1.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_11.1.3-jammy'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:11.1.3-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 11.1.3
---
# Source: kubedb-catalog/templates/mariadb/mariadb-11.2.2.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '11.2.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_11.2.2-jammy'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:11.2.2-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 11.2.2
---
# Source: kubedb-catalog/templates/memcached/memcached-1.5.22.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MemcachedVersion
metadata:
  name: '1.5.22'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'ghcr.io/appscode-images/memcached:1.5.22-alpine'
  exporter:
    image: 'prom/memcached-exporter:v0.14.2'
  podSecurityPolicies:
    databasePolicyName: memcached-db
  securityContext:
    runAsUser: 999
  version: 1.5.22
---
# Source: kubedb-catalog/templates/memcached/memcached-1.6.22.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MemcachedVersion
metadata:
  name: '1.6.22'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'ghcr.io/appscode-images/memcached:1.6.22-alpine'
  exporter:
    image: 'prom/memcached-exporter:v0.14.2'
  podSecurityPolicies:
    databasePolicyName: memcached-db
  securityContext:
    runAsUser: 999
  version: 1.6.22
---
# Source: kubedb-catalog/templates/mongodb/mongodb-4.2.24-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '4.2.24'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:4.2.24'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.2.3
      restoreTask:
        name: mongodb-restore-4.2.3
  updateConstraints:
    allowlist:
    - '>= 4.4.0, < 5.0.0'
  version: 4.2.24
---
# Source: kubedb-catalog/templates/mongodb/mongodb-4.2.24-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-4.2.24'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'percona/percona-server-mongodb:4.2.24'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.4.6
      restoreTask:
        name: mongodb-restore-4.4.6
  updateConstraints:
    allowlist:
    - '>= 5.0.0'
  version: 4.2.24
---
# Source: kubedb-catalog/templates/mongodb/mongodb-4.4.26-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '4.4.26'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:4.4.26'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.4.6
      restoreTask:
        name: mongodb-restore-4.4.6
  updateConstraints:
    allowlist:
    - '>= 5.0.0'
  version: 4.4.26
---
# Source: kubedb-catalog/templates/mongodb/mongodb-4.4.26-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-4.4.26'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'percona/percona-server-mongodb:4.4.26'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.4.6
      restoreTask:
        name: mongodb-restore-4.4.6
  updateConstraints:
    allowlist:
    - '>= 5.0.0'
  version: 4.4.26
---
# Source: kubedb-catalog/templates/mongodb/mongodb-5.0.23-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '5.0.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:5.0.23'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-5.0.15
      restoreTask:
        name: mongodb-restore-5.0.15
  version: 5.0.23
---
# Source: kubedb-catalog/templates/mongodb/mongodb-5.0.23-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-5.0.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'percona/percona-server-mongodb:5.0.23'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 5.0.23
---
# Source: kubedb-catalog/templates/mongodb/mongodb-5.0.26-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '5.0.26'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:5.0.26'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-5.0.15
      restoreTask:
        name: mongodb-restore-5.0.15
  version: 5.0.26
---
# Source: kubedb-catalog/templates/mongodb/mongodb-6.0.12-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '6.0.12'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:6.0.12'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 6.0.12
---
# Source: kubedb-catalog/templates/mongodb/mongodb-6.0.12-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-6.0.12'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'percona/percona-server-mongodb:6.0.12'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v10'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 6.0.12
---
# Source: kubedb-catalog/templates/mongodb/mongodb-7.0.4-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-7.0.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'percona/percona-server-mongodb:7.0.4'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v10'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 7.0.4
---
# Source: kubedb-catalog/templates/mongodb/mongodb-7.0.5-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '7.0.5'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:7.0.5'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v10'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 7.0.5
---
# Source: kubedb-catalog/templates/mongodb/mongodb-7.0.8-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '7.0.8'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:7.0.8'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v10'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 7.0.8
---
# Source: kubedb-catalog/templates/mysql/mysql-5.7.42-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '5.7.42-debian'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_5.7.44'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:5.7.42-debian'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:5.7-v4'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-5.7.25
      restoreTask:
        name: mysql-restore-5.7.25
  updateConstraints:
    denylist:
      groupReplication:
      - < 5.7.42
      standalone:
      - < 5.7.42
  version: 5.7.42
---
# Source: kubedb-catalog/templates/mysql/mysql-5.7.44-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '5.7.44'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_5.7.44'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:5.7.44-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:5.7-v4'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-5.7.25
      restoreTask:
        name: mysql-restore-5.7.25
  updateConstraints:
    denylist:
      groupReplication:
      - < 5.7.44
      standalone:
      - < 5.7.44
  version: 5.7.44
---
# Source: kubedb-catalog/templates/mysql/mysql-8.0.31-mysql.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.0.31-innodb'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_8.0.35'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.0.31-oracle'
  distribution: MySQL
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  router:
    image: 'mysql/mysql-router:8.0.31'
  routerInitContainer:
    image: 'ghcr.io/kubedb/mysql-router-init:v0.24.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.0.31
      standalone:
      - < 8.0.31
  version: 8.0.31
---
# Source: kubedb-catalog/templates/mysql/mysql-8.0.35-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.0.35'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_8.0.35'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.0.35-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.0.35
      standalone:
      - < 8.0.35
  version: 8.0.35
---
# Source: kubedb-catalog/templates/mysql/mysql-8.0.36-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.0.36'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_8.0.35'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.0.36-debian'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.0.36
      standalone:
      - < 8.0.36
  version: 8.0.36
---
# Source: kubedb-catalog/templates/mysql/mysql-8.1.0-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.1.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_8.1.0'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.1.0-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.1.0
      standalone:
      - < 8.1.0
  version: 8.1.0
---
# Source: kubedb-catalog/templates/mysql/mysql-8.2.0-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.2.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_8.2.0'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.2.0-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.2.0
      standalone:
      - < 8.2.0
  version: 8.2.0
---
# Source: kubedb-catalog/templates/perconaxtradb/perconaxtradb-8.0.26.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PerconaXtraDBVersion
metadata:
  name: '8.0.26'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/percona-xtradb-coordinator:v0.19.0'
  db:
    image: 'percona/percona-xtradb-cluster:8.0.26'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/percona-xtradb-init:0.2.0'
  podSecurityPolicies:
    databasePolicyName: percona-xtradb-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: perconaxtradb-backup-5.7
      restoreTask:
        name: perconaxtradb-restore-5.7
  version: 8.0.26
---
# Source: kubedb-catalog/templates/perconaxtradb/perconaxtradb-8.0.28.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PerconaXtraDBVersion
metadata:
  name: '8.0.28'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/percona-xtradb-coordinator:v0.19.0'
  db:
    image: 'percona/percona-xtradb-cluster:8.0.28'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/percona-xtradb-init:0.2.0'
  podSecurityPolicies:
    databasePolicyName: percona-xtradb-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: perconaxtradb-backup-5.7
      restoreTask:
        name: perconaxtradb-restore-5.7
  version: 8.0.28
---
# Source: kubedb-catalog/templates/perconaxtradb/perconaxtradb-8.0.31.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PerconaXtraDBVersion
metadata:
  name: '8.0.31'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/percona-xtradb-coordinator:v0.19.0'
  db:
    image: 'percona/percona-xtradb-cluster:8.0.31'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/percona-xtradb-init:0.2.0'
  podSecurityPolicies:
    databasePolicyName: percona-xtradb-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: perconaxtradb-backup-5.7
      restoreTask:
        name: perconaxtradb-restore-5.7
  version: 8.0.31
---
# Source: kubedb-catalog/templates/pgbouncer/pgbouncer-1.17.0.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PgBouncerVersion
metadata:
  name: '1.17.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubedb/pgbouncer_exporter:v0.1.1'
  pgBouncer:
    image: 'ghcr.io/kubedb/pgbouncer:1.17.0'
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  version: 1.17.0
---
# Source: kubedb-catalog/templates/pgbouncer/pgbouncer-1.18.0.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PgBouncerVersion
metadata:
  name: '1.18.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubedb/pgbouncer_exporter:v0.1.1'
  pgBouncer:
    image: 'ghcr.io/kubedb/pgbouncer:1.18.0'
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  version: 1.18.0
---
# Source: kubedb-catalog/templates/pgpool/pgpool-4.4.5.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PgpoolVersion
metadata:
  name: '4.4.5'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/appscode-images/pgpool2_exporter:v1.2.2'
  pgpool:
    image: 'ghcr.io/appscode-images/pgpool2:4.4.5'
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 70
  version: 4.4.5
---
# Source: kubedb-catalog/templates/pgpool/pgpool-4.5.0.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PgpoolVersion
metadata:
  name: '4.5.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/appscode-images/pgpool2_exporter:v1.2.2'
  pgpool:
    image: 'ghcr.io/appscode-images/pgpool2:4.5.0'
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 70
  version: 4.5.0
---
# Source: kubedb-catalog/templates/postgres/postgres-10.23-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '10.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:10.23-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-10.14
      restoreTask:
        name: postgres-restore-10.14
  updateConstraints:
    allowlist:
    - '>= 11.14, <= 14.1'
  version: "10.23"
---
# Source: kubedb-catalog/templates/postgres/postgres-10.23-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '10.23-bullseye'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bullseye
    image: 'ghcr.io/appscode-images/postgres:10.23-bullseye'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-10.14
      restoreTask:
        name: postgres-restore-10.14
  updateConstraints:
    allowlist:
    - '>= 11.14, <= 14.1'
  version: "10.23"
---
# Source: kubedb-catalog/templates/postgres/postgres-11.22-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '11.22'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_11.22-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:11.22-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-11.9
      restoreTask:
        name: postgres-restore-11.9
  updateConstraints:
    allowlist:
    - '>= 12.9, <= 14.1'
  version: "11.22"
---
# Source: kubedb-catalog/templates/postgres/postgres-11.22-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '11.22-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_11.22-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:11.22-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-11.9
      restoreTask:
        name: postgres-restore-11.9
  updateConstraints:
    allowlist:
    - '>= 12.9, <= 14.1'
  version: "11.22"
---
# Source: kubedb-catalog/templates/postgres/postgres-11.22-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '11-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_11.22-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    image: 'postgis/postgis:11-3.3'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-11.9
      restoreTask:
        name: postgres-restore-11.9
  version: "11.22"
---
# Source: kubedb-catalog/templates/postgres/postgres-12.17-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '12.17'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_12.17-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:12.17-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-12.4
      restoreTask:
        name: postgres-restore-12.4
  updateConstraints:
    allowlist:
    - "13.5"
    - "14.1"
  version: "12.17"
---
# Source: kubedb-catalog/templates/postgres/postgres-12.17-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '12.17-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_12.17-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:12.17-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-12.4
      restoreTask:
        name: postgres-restore-12.4
  updateConstraints:
    allowlist:
    - "13.5"
    - "14.1"
  version: "12.17"
---
# Source: kubedb-catalog/templates/postgres/postgres-12.18-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '12-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_12.17-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    image: 'postgis/postgis:12-3.4'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-12.4
      restoreTask:
        name: postgres-restore-12.4
  version: "12.18"
---
# Source: kubedb-catalog/templates/postgres/postgres-13.13-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '13.13'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_13.13-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:13.13-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  updateConstraints:
    allowlist:
    - "14.1"
  version: "13.13"
---
# Source: kubedb-catalog/templates/postgres/postgres-13.13-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '13.13-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_13.13-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:13.13-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  updateConstraints:
    allowlist:
    - "14.1"
  version: "13.13"
---
# Source: kubedb-catalog/templates/postgres/postgres-13.14-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '13-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_13.13-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    image: 'postgis/postgis:13-3.4'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  version: "13.14"
---
# Source: kubedb-catalog/templates/postgres/postgres-13.14-timescaledb.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.14.2-pg13'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_13.13-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'timescale/timescaledb:2.14.2-pg13-oss'
  distribution: TimescaleDB
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  version: "13.14"
---
# Source: kubedb-catalog/templates/postgres/postgres-14.10-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '14.10'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_14.10-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:14.10-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.10"
---
# Source: kubedb-catalog/templates/postgres/postgres-14.10-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '14.10-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_14.10-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:14.10-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.10"
---
# Source: kubedb-catalog/templates/postgres/postgres-14.11-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '14-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_14.10-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    image: 'postgis/postgis:14-3.4'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.11"
---
# Source: kubedb-catalog/templates/postgres/postgres-14.11-timescaledb.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.14.2-pg14'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_14.10-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'timescale/timescaledb:2.14.2-pg14-oss'
  distribution: TimescaleDB
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.11"
---
# Source: kubedb-catalog/templates/postgres/postgres-15.5-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '15.5'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_15.5-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:15.5-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "14.2"
  version: "15.5"
---
# Source: kubedb-catalog/templates/postgres/postgres-15.5-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '15.5-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_15.5-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:15.5-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "14.2"
  version: "15.5"
---
# Source: kubedb-catalog/templates/postgres/postgres-15.6-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.14.2-pg15'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_15.5-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'timescale/timescaledb:2.14.2-pg15-oss'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "14.2"
  version: "15.6"
---
# Source: kubedb-catalog/templates/postgres/postgres-15.6-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '15-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_15.5-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bullseye
    image: 'postgis/postgis:15-3.4'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "14.2"
  version: "15.6"
---
# Source: kubedb-catalog/templates/postgres/postgres-16.1-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '16.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_16.1-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:16.1-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-16.1
      restoreTask:
        name: postgres-restore-16.1
  updateConstraints:
    allowlist:
    - "16.1"
  version: "16.1"
---
# Source: kubedb-catalog/templates/postgres/postgres-16.1-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '16.1-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_16.1-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:16.1-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-16.1
      restoreTask:
        name: postgres-restore-16.1
  updateConstraints:
    allowlist:
    - "16.2"
  version: "16.1"
---
# Source: kubedb-catalog/templates/postgres/postgres-16.2-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.14.2-pg16'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_16.1-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'timescale/timescaledb:2.14.2-pg16-oss'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-16.1
      restoreTask:
        name: postgres-restore-16.1
  updateConstraints:
    allowlist:
    - "16.2"
  version: "16.2"
---
# Source: kubedb-catalog/templates/postgres/postgres-16.2-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '16.2-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_16.1-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bullseye
    image: 'postgis/postgis:16-3.4'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-16.1
      restoreTask:
        name: postgres-restore-16.1
  updateConstraints:
    allowlist:
    - "16.2"
  version: "16.2"
---
# Source: kubedb-catalog/templates/proxysql/proxysql-2.3.2-centos.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ProxySQLVersion
metadata:
  name: '2.3.2-centos'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubedb/proxysql-exporter:v1.1.0'
  podSecurityPolicies:
    databasePolicyName: proxysql-db
  proxysql:
    image: 'ghcr.io/kubedb/proxysql:2.3.2-centos-v2'
  securityContext:
    runAsUser: 999
  version: 2.3.2-centos
---
# Source: kubedb-catalog/templates/proxysql/proxysql-2.3.2-debian.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ProxySQLVersion
metadata:
  name: '2.3.2-debian'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubedb/proxysql-exporter:v1.1.0'
  podSecurityPolicies:
    databasePolicyName: proxysql-db
  proxysql:
    image: 'ghcr.io/kubedb/proxysql:2.3.2-debian-v2'
  securityContext:
    runAsUser: 999
  version: 2.3.2-debian
---
# Source: kubedb-catalog/templates/proxysql/proxysql-2.4.4-centos.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ProxySQLVersion
metadata:
  name: '2.4.4-centos'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubedb/proxysql-exporter:v1.1.0'
  podSecurityPolicies:
    databasePolicyName: proxysql-db
  proxysql:
    image: 'ghcr.io/kubedb/proxysql:2.4.4-centos'
  securityContext:
    runAsUser: 999
  version: 2.4.4-centos
---
# Source: kubedb-catalog/templates/proxysql/proxysql-2.4.4-debian.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ProxySQLVersion
metadata:
  name: '2.4.4-debian'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  exporter:
    image: 'ghcr.io/kubedb/proxysql-exporter:v1.1.0'
  podSecurityPolicies:
    databasePolicyName: proxysql-db
  proxysql:
    image: 'ghcr.io/kubedb/proxysql:2.4.4-debian'
  securityContext:
    runAsUser: 999
  version: 2.4.4-debian
---
# Source: kubedb-catalog/templates/rabbitmq/rabbitmq-3.12.12.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RabbitMQVersion
metadata:
  name: '3.12.12'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'ghcr.io/appscode-images/rabbitmq:3.12.12-management-alpine'
  initContainer:
    image: 'ghcr.io/kubedb/rabbitmq-init:3.12.12'
  securityContext:
    runAsUser: 999
  version: 3.12.12
---
# Source: kubedb-catalog/templates/rabbitmq/rabbitmq-3.13.2.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RabbitMQVersion
metadata:
  name: '3.13.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'ghcr.io/appscode-images/rabbitmq:3.13.2-management-alpine'
  initContainer:
    image: 'ghcr.io/kubedb/rabbitmq-init:3.13.2'
  securityContext:
    runAsUser: 999
  version: 3.13.2
---
# Source: kubedb-catalog/templates/redis/redis-4.0.11.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '4.0.11'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/kubedb/redis:4.0.11'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:v0.21.1'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  version: 4.0.11
---
# Source: kubedb-catalog/templates/redis/redis-5.0.14.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '5.0.14'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:5.0.14-bullseye'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-5.0.13
      restoreTask:
        name: redis-restore-5.0.13
  version: 5.0.14
---
# Source: kubedb-catalog/templates/redis/redis-6.0.20.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '6.0.20'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:6.0.20-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-6.2.5
      restoreTask:
        name: redis-restore-6.2.5
  version: 6.0.20
---
# Source: kubedb-catalog/templates/redis/redis-6.2.14.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '6.2.14'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:6.2.14-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-6.2.5
      restoreTask:
        name: redis-restore-6.2.5
  version: 6.2.14
---
# Source: kubedb-catalog/templates/redis/redis-7.0.14.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.0.14'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.0.14-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.0.14
---
# Source: kubedb-catalog/templates/redis/redis-7.0.15.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.0.15'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.0.15-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.0.15
---
# Source: kubedb-catalog/templates/redis/redis-7.2.3.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.2.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.2.3-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.2.3
---
# Source: kubedb-catalog/templates/redis/redis-7.2.4.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.2.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.2.4-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.2.4
---
# Source: kubedb-catalog/templates/schemaregistry/schemaregistry-2.5.11-apicurio.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: SchemaRegistryVersion
metadata:
  name: '2.5.11.final'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  distribution: Apicurio
  inMemory:
    image: 'apicurio/apicurio-registry-mem:2.5.11.Final'
  registry:
    image: 'apicurio/apicurio-registry-kafkasql:2.5.11.Final'
  securityContext:
    runAsUser: 1001
  version: 2.5.11
---
# Source: kubedb-catalog/templates/singlestore/singlestore-8.1.32.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: SinglestoreVersion
metadata:
  name: '8.1.32'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/singlestore-coordinator:v0.1.0'
  db:
    image: 'ghcr.io/appscode-images/singlestore-node:alma-8.1.32-e3d3cde6da'
  initContainer:
    image: 'ghcr.io/kubedb/singlestore-init:8.1-v2'
  securityContext:
    runAsGroup: 998
    runAsUser: 999
  standalone:
    image: 'singlestore/cluster-in-a-box:alma-8.1.32-e3d3cde6da-4.0.16-1.17.6'
  version: 8.1.32
---
# Source: kubedb-catalog/templates/singlestore/singlestore-8.5.7.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: SinglestoreVersion
metadata:
  name: '8.5.7'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/singlestore-coordinator:v0.1.0'
  db:
    image: 'ghcr.io/appscode-images/singlestore-node:alma-8.5.7-bf633c1a54'
  initContainer:
    image: 'ghcr.io/kubedb/singlestore-init:8.5-v2'
  securityContext:
    runAsGroup: 998
    runAsUser: 999
  standalone:
    image: 'singlestore/cluster-in-a-box:alma-8.5.7-bf633c1a54-4.0.17-1.17.8'
  version: 8.5.7
---
# Source: kubedb-catalog/templates/solr/solr-8.11.2.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: SolrVersion
metadata:
  name: '8.11.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'ghcr.io/appscode-images/solr:8.11.2'
  initContainer:
    image: 'ghcr.io/kubedb/solr-init:8.11.2'
  securityContext:
    runAsUser: 8983
  version: 8.11.2
---
# Source: kubedb-catalog/templates/solr/solr-9.4.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: SolrVersion
metadata:
  name: '9.4.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'ghcr.io/appscode-images/solr:9.4.1'
  initContainer:
    image: 'ghcr.io/kubedb/solr-init:9.4.1'
  securityContext:
    runAsUser: 8983
  version: 9.4.1
---
# Source: kubedb-catalog/templates/zookeeper/zookeeper-3.7.2.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ZooKeeperVersion
metadata:
  name: '3.7.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'ghcr.io/appscode-images/zookeeper:3.7.2'
  initContainer:
    image: 'ghcr.io/kubedb/zookeeper-init:3.7-v1'
  securityContext:
    runAsUser: 100
  version: 3.7.2
---
# Source: kubedb-catalog/templates/zookeeper/zookeeper-3.8.3.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ZooKeeperVersion
metadata:
  name: '3.8.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'ghcr.io/appscode-images/zookeeper:3.8.3'
  initContainer:
    image: 'ghcr.io/kubedb/zookeeper-init:3.7-v1'
  securityContext:
    runAsUser: 1000
  version: 3.8.3
---
# Source: kubedb-catalog/templates/zookeeper/zookeeper-3.9.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ZooKeeperVersion
metadata:
  name: '3.9.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  db:
    image: 'ghcr.io/appscode-images/zookeeper:3.9.1'
  initContainer:
    image: 'ghcr.io/kubedb/zookeeper-init:3.7-v1'
  securityContext:
    runAsUser: 1000
  version: 3.9.1
