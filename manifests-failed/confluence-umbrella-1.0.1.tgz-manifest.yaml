---
# Source: confluence-umbrella/charts/confluence/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-confluence
  labels:
    helm.sh/chart: confluence-1.0.0
    app.kubernetes.io/name: confluence
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.13.0-jdk11"
    app.kubernetes.io/managed-by: Helm
---
# Source: confluence-umbrella/charts/postgresql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.17
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  namespace: confluence-umbrella-1.0.1.tgz
type: Opaque
data:
  postgresql-postgres-password: "Y29uZmx1ZW5jZQ=="
  postgresql-password: "Y29uZmx1ZW5jZQ=="
---
# Source: confluence-umbrella/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-confluence-secrets
  labels:
    helm.sh/chart: confluence-umbrella-1.0.1
    app.kubernetes.io/name: confluence-umbrella
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.13.0-jdk11"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  postgresql-url: "amRiYzpwb3N0Z3Jlc3FsOi8vbXktcmVsZWFzZS1wb3N0Z3Jlc3FsOjU0MzIvY29uZmx1ZW5jZQ=="
  postgresql-username: "Y29uZmx1ZW5jZQ=="
  postgresql-password: "Y29uZmx1ZW5jZQ=="
  license-key: "QUFBQ2lBME9EQW9QZU5wOVZGMXZtekFVZmVkWFdOcGJKR2dnNnRaR1FscWF1RjJtaGtTRWJPcldhVExtSnJnRkc5a21IZjkrRG9RT3VxU1B2cjRmNTU1ejdBOVJDV2hCS3VSZG8rRm9QSFRIbzB0MHQ0aVFOM1N2ckRYSVBjajV6TC9CQzJ5SEQvTUhlL3JEMjlpajc2T2hkYzhvY0FWUlZVQkFjdkFqdkk3bXdaMUZwWGhKbk02dFB6MUVIc2RvQm52SVJBSFNvb0p2SFVJMTI0T3ZaUW1tcUtRc3pxQVgxRUR5MzVSa3dCTWlsUk9VZVF4eXViMGhlU3hFQ0xuUU1Oa0IxOHAzV3pUNFQ4RmtOU01hL0pYcnVWLytOZTREYW9JOVRMSEJ4Q1M4UCthSlNkTEQyR1p2RkVqbGU1ZldEQlNWck5CTWNEOENwVkhXREVaYklWR1JsVHZHVWRJT1ZhOVR1ejJQRmQvTS9hR0xWOU9WbGNBcE9IRlZFS1djaEdqaW1Dd04wcUVwME9lbUV1OUpWcEo2ZG4zZVNRQ2Vpc0tNYWduQUNhdnZjUkRoY0JYTzE5aGFFR1lhY1dMNi84L2ZRYWtlZDY5WWV1eE5KZFJ6NjFMUGRUL2F3eXZiKzlUVXR5Uk5zMUlaeElGSVFQbERhekFZVEVNOGlmRE12bmt3QjE5clNYak9lUHFaNk15c3lRaDNxTWd0bWduand4NUhjYTNPRzdIdWhYSExVU3ZiYlhPNjZKczhoQS9FRlpLcC9oS05QTW9abkJwMW5yOGp2QjVMZGFqUGtPRGF0TVdHN2V6c3BpZlhldVBCNW9GMUVkYXVQSTl2eTFRS1ZkOWpodTVnR2RtM3k5QmVoY3ZaWmhyTmw0RzlXZU9ERHJXWWtLQzRRam9GZE94c1dLTkdPZU5pS1o2QWF2UXoxYnA0SEY5YzdJVFRXK1BpNkdBYm1vcGZEcG9KeElWR0NWTmFzcmpVWURvemhiUkExSGhDNU1icnp1bnRWeG5odFp4THVTT2NxY2JlazNaZSsvTE5MN1hoejF5ODhKN3J1enNyVFZSNlN0cDNQcDN1MWFxVU5DVUszbnE4UzMrdC90ZDVPRG5uc1ZhTWJ2NnRpZUVLVHRtbC9sclB1ZVV2QnowUFN6QXNBaFE2UmFLVHUvRVhBRVdlOHMyVnlnVDZCU25JMEFJVWVmSVlwTFFhNWgwVmNCb2ZRLy9ra1ZkVGcrQT1YMDJ1Mg=="
---
# Source: confluence-umbrella/charts/confluence/templates/config-jvm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-confluence-jvm-config
  labels:
    helm.sh/chart: confluence-1.0.0
    app.kubernetes.io/name: confluence
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.13.0-jdk11"
    app.kubernetes.io/managed-by: Helm
    
data:
  additional_jvm_args: >-
    -Dconfluence.cluster.hazelcast.listenPort=5701
    -Dsynchrony.btf.disabled=true
    -Dsynchrony.by.default.enable.collab.editing.if.manually.managed=true
    -Dconfluence.clusterNodeName.useHostname=true
    -Datlassian.logging.cloud.enabled=false
    -XX:ActiveProcessorCount=2
  max_heap: 1g
  min_heap: 1g
  reserved_code_cache: 256m
---
# Source: confluence-umbrella/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-confluence-server-config
  labels:
    helm.sh/chart: confluence-umbrella-1.0.1
    app.kubernetes.io/name: confluence-umbrella
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.13.0-jdk11"
    app.kubernetes.io/managed-by: Helm
data:
  restore-db.sh: |-
    #! /bin/bash -xe
    until timeout 1 bash -c 'cat < /dev/null > /dev/tcp/my-release-postgresql/5432'; do echo "WAITING: db host my-release-postgresql port 5432"; sleep 1; done
    psql -h my-release-postgresql -p 5432 -U confluence -d confluence -c 'SELECT 1 FROM cwd_user' && exit 0
    unset PGPASSWORD

  confluence.cfg.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <confluence-configuration>
      <setupStep>complete</setupStep>
      <setupType>custom</setupType>
      <buildNumber>8703</buildNumber>
      <properties>
        <property name="access.mode">READ_WRITE</property>
        <property name="admin.ui.allow.daily.backup.custom.location">false</property>
        <property name="admin.ui.allow.manual.backup.download">false</property>
        <property name="admin.ui.allow.site.support.email">false</property>
        <property name="atlassian.license.message">AAACiA0ODAoPeNp9VF1vmzAUfedXWNpbJGgg6tZGQlqauF2mhkSEbOrWaTLmJrgFG9kmHf9+DoQOuqSPvr4f555z7A9RCWhBKuRdo+FoPHTHo0t0t4iQN3SvrDXIPcj5zL/BC2yHD/MHe/rD29ij76Ohdc8ocAVRVUBAcvAjvI7mwZ1FpXhJnM6tPz1EHsdoBnvIRAHSooJvHUI124OvZQmmqKQszqAX1EDy35RkwBMilROUeQxyub0heSxECLnQMNkB18p3WzT4T8FkNSMa/JXruV/+Ne4DaoI9TLHBxCS8P+aJSdLD2GZvFEjle5fWDBSVrNBMcD8CpVHWDEZbIVGRlTvGUdIOVa9Tuz2PFd/M/aGLV9OVlcApOHFVEKWchGjimCwN0qEp0OemEu9JVpJ6dn3eSQCeisKMagnACavvcRDhcBXO19haEGYacWL6/8/fQaked69YeuxNJdRz61LPdT/awyvb+9TUtyRNs1IZxIFIQPlDazAYTEM8ifDMvnkwB19rSXjOePqZ6MysyQh3qMgtmgnjwx5Hca3OG7HuhXHLUSvbbXO66Js8hA/EFZKp/hKNPMoZnBp1nr8jvB5LdajPkODatMWG7ezspifXeuPB5oF1EdauPI9vy1QKVd9jhu5gGdm3y9BehcvZZhrNl4G9WeODDrWYkKC4QjoFdOxsWKNGOeNiKZ6AavQz1bp4HF9c7ITTW+Pi6GAbmopfDpoJxIVGCVNasrjUYDozhbRA1HhC5MbrzuntVxnhtZxLuSOcqcbek3Ze+/LNL7Xhz1y88J7ruzsrTVR6Stp3Pp3u1aqUNCUK3nq8S3+t/td5ODnnsVaMbv6tieEKTtml/lrPueUvBz0PSzAsAhQ6RaKTu/EXAEWe8s2VygT6BSnI0AIUefIYpLQa5h0VcBofQ//kkVdTg+A=X02u2</property>
        <property name="attachments.dir">${confluenceHome}/attachments</property>
        <property name="confluence.database.connection.type">database-type-standard</property>
        <property name="confluence.setup.server.id">AB0C-1D2E-FGHI-JKL3</property>
        <property name="confluence.webapp.context.path"></property>
        <property name="hibernate.c3p0.acquire_increment">1</property>
        <property name="hibernate.c3p0.idle_test_period">100</property>
        <property name="hibernate.c3p0.max_size">60</property>
        <property name="hibernate.c3p0.max_statements">0</property>
        <property name="hibernate.c3p0.min_size">20</property>
        <property name="hibernate.c3p0.preferredTestQuery">select 1</property>
        <property name="hibernate.c3p0.timeout">30</property>
        <property name="hibernate.connection.driver_class">org.postgresql.Driver</property>
        <property name="hibernate.connection.isolation">2</property>
        <property name="hibernate.connection.url">jdbc:postgresql://my-release-postgresql:5432/confluence</property>
        <property name="hibernate.connection.username">confluence</property>
        <property name="hibernate.connection.password">confluence</property>
        <property name="hibernate.database.lower_non_ascii_supported">true</property>
        <property name="hibernate.dialect">com.atlassian.confluence.impl.hibernate.dialect.PostgreSQLDialect</property>
        <property name="hibernate.setup">true</property>
        <property name="jwt.private.key">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</property>
        <property name="jwt.public.key">MIIBojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEApsspddYbegG0LbqUtp29ik+mxYuvWbjSxjYTMd+qDhWXY14vmu0ye2KLVs7IorlQZVloRX+BFIiJk6eqAvbIqzDLFiZ7Gz1xeqbtmj8lDDzajw0AoialOgiqwtskkRsTQPnkbPL7cmzDHoT9zuiwVr5FwSg2vsq6locHbdXu8LPjw7WlaSM2G98OAr5D9ug9GPnyN+5B0xIz7gfLw+8vzqpoN2tPhDsc17NHFCLxuPBdKkdpxfOPNpgRBRpjYZ6WnPSuUDHLaMQY23Zm2jKHfBpDc8jVlIy5WxO+O+AWAJWxrdDUJAD1YsF5QuIScPSWbgv5/Cb9rj3hfeCco78wuxxIEDYUlr3dvnYaCExy+uDTms3znFAYi+amkkRKVFYQRUJdDZxxd6oYAx+oritJv6Q6a6qdbQ0JfzaI0WF7w38K+9Y2ZrPzfdsqv5HRy4wYOjVQMC2WKeKr16pMyxkVIXw0qqEVoR0yOsy5Pam8H6wvVwrleazwMZMJ13+fq8UZAgMBAAE=</property>
        <property name="lucene.index.dir">${localHome}/index</property>
        <property name="synchrony.encryption.disabled">true</property>
        <property name="synchrony.proxy.enabled">true</property>
        <property name="webwork.multipart.saveDir">${localHome}/temp</property>
      </properties>
    </confluence-configuration>
---
# Source: confluence-umbrella/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-confluence-dump-config
  labels:
    helm.sh/chart: confluence-umbrella-1.0.1
    app.kubernetes.io/name: confluence-umbrella
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.13.0-jdk11"
    app.kubernetes.io/managed-by: Helm
data:
  db.dump: |-
    -- Dumped from database version 11.12
    -- Dumped by pg_dump version 11.12
---
# Source: confluence-umbrella/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-confluence-dump-config-2
  labels:
    helm.sh/chart: confluence-umbrella-1.0.1
    app.kubernetes.io/name: confluence-umbrella
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.13.0-jdk11"
    app.kubernetes.io/managed-by: Helm
data:
  db.dump2: |-
    -- Part 2 of the dump
---
# Source: confluence-umbrella/charts/confluence/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-confluence
  labels:
    helm.sh/chart: confluence-1.0.0
    app.kubernetes.io/name: confluence
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.13.0-jdk11"
    app.kubernetes.io/managed-by: Helm
    
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 5701
      targetPort: hazelcast
      protocol: TCP
      name: hazelcast
  selector:
    app.kubernetes.io/name: confluence
    app.kubernetes.io/instance: my-release
---
# Source: confluence-umbrella/charts/postgresql/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.17
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: confluence-umbrella-1.0.1.tgz
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: my-release
---
# Source: confluence-umbrella/charts/postgresql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.17
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
  annotations:
  namespace: confluence-umbrella-1.0.1.tgz
spec:
  type: ClusterIP
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: my-release
    role: primary
---
# Source: confluence-umbrella/charts/confluence/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-confluence
  labels:
    helm.sh/chart: confluence-1.0.0
    app.kubernetes.io/name: confluence
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.13.0-jdk11"
    app.kubernetes.io/managed-by: Helm
    
spec:
  replicas: 1
  serviceName: my-release-confluence
  selector:
    matchLabels:
      app.kubernetes.io/name: confluence
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: confluence
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-confluence
      terminationGracePeriodSeconds: 25
      
      securityContext:
        # This is intended to ensure that the shared-home volume is group-writeable by the GID used by the Confluence container.
        # However, this doesn't appear to work for NFS volumes due to a K8s bug: https://github.com/kubernetes/examples/issues/260
        fsGroup: 2002
      
      hostAliases:
        
      initContainers:
        # -- Additional initContainer to copy the Confluence configuration.
        # Copies confluence.cfg.xml file to the proper location
        - name: copy-config
          image: busybox
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
          args:
            - '-c'
            - >-
              set -x
              ; cp /tmp/confluence.cfg.xml /var/atlassian/application-data/confluence/confluence.cfg.xml
          resources: {}
          volumeMounts:
            - name: server-config
              mountPath: /tmp/confluence.cfg.xml
              subPath: confluence.cfg.xml
            - name: local-home
              mountPath: /var/atlassian/application-data/confluence
        # -- Additional initContainer to load initial Confluence database.
        # The initial Confluence setup was performed in order to connect to a ready Postgresql database
        # After the chart deployment the default user is able immediately to login without init routine
        - name: init-db
          image: docker.io/bitnami/postgresql:11
          imagePullPolicy: IfNotPresent
          resources: {}
          volumeMounts:
            - name: server-config
              mountPath: /tmp/restore-db.sh
              subPath: restore-db.sh
            - name: dump-config
              mountPath: /tmp/db.dump
              subPath: db.dump
            - name: dump-config-2
              mountPath: /tmp/db.dump2
              subPath: db.dump2
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-confluence-secrets
                  key: postgresql-password
          args: ['/tmp/restore-db.sh']
        - name: nfs-permission-fixer
          image: alpine
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0 # make sure we run as root so we get the ability to change the volume permissions
          volumeMounts:
            - name: shared-home
              mountPath: "/shared-home"
          command: ["sh", "-c", "(chgrp 2002 /shared-home; chmod g+w /shared-home)"]
      containers:
        - name: confluence
          image: "atlassian/confluence:7.13.0-jdk11"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8090
              protocol: TCP
            - name: hazelcast
              containerPort: 5701
              protocol: TCP
          readinessProbe:
            httpGet:
              port: 8090
              path: /status
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          resources:
            requests:
              cpu: "2"
              memory: 2G
          volumeMounts:
            
            - name: local-home
              mountPath: "/var/atlassian/application-data/confluence"
            - name: local-home
              mountPath: "/opt/atlassian/confluence/logs"
              subPath: "logs"
            - name: shared-home
              mountPath: "/var/atlassian/application-data/shared-home"
            
            
            
            
          env:
            
            - name: ATL_TOMCAT_SCHEME
              value: "https"
            - name: ATL_TOMCAT_SECURE
              value: "true"
            
            
            - name: ATL_TOMCAT_ACCESS_LOG
              value: "true"
            - name: UMASK
              value: "0022"
            - name: SET_PERMISSIONS
              value: "true"
            - name: ATL_PRODUCT_HOME_SHARED
              value: "/var/atlassian/application-data/shared-home"
            - name: JVM_SUPPORT_RECOMMENDED_ARGS
              valueFrom:
                configMapKeyRef:
                  key: additional_jvm_args
                  name: my-release-confluence-jvm-config
            
            
            - name: ATL_DB_TYPE
              value: postgresql
            - name: ATL_JDBC_URL
              valueFrom:
                secretKeyRef:
                  name: my-release-confluence-secrets
                  key: postgresql-url
            - name: ATL_JDBC_USER
              valueFrom:
                secretKeyRef:
                  name: my-release-confluence-secrets
                  key: postgresql-username
            - name: ATL_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-confluence-secrets
                  key: postgresql-password
            
            
            - name: JVM_MINIMUM_MEMORY
              valueFrom:
                configMapKeyRef:
                  key: min_heap
                  name: my-release-confluence-jvm-config
            - name: JVM_MAXIMUM_MEMORY
              valueFrom:
                configMapKeyRef:
                  key: max_heap
                  name: my-release-confluence-jvm-config
            - name: JVM_RESERVED_CODE_CACHE_SIZE
              valueFrom:
                configMapKeyRef:
                  key: reserved_code_cache
                  name: my-release-confluence-jvm-config
            
            - name: ATL_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: my-release-confluence-secrets
                  key: license-key
            
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "/shutdown-wait.sh"]
        
        
        
      volumes:
        
        
        
        - name: local-home
        
          emptyDir: {}
        - name: shared-home
        
          emptyDir: {}
        # -- Volume with additional configuration files
        - name: server-config
          configMap:
            name: my-release-confluence-server-config
            items:
            - key: confluence.cfg.xml
              path: confluence.cfg.xml
              mode: 0755
            - key: restore-db.sh
              path: restore-db.sh
              mode: 0755
        # -- Volume with additional dump file for SQL import to the database
        - name: dump-config
          configMap:
            name: my-release-confluence-dump-config
            items:
            - key: db.dump
              path: db.dump
        # -- Volume with additional dump file for SQL import to the database part2.
        # Need to split into pieces since configmap must have at most 1048576 bytes
        - name: dump-config-2
          configMap:
            name: my-release-confluence-dump-config-2
            items:
            - key: db.dump2
              path: db.dump2
---
# Source: confluence-umbrella/charts/postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.17
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
  namespace: confluence-umbrella-1.0.1.tgz
spec:
  serviceName: my-release-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: my-release
      role: primary
  template:
    metadata:
      name: my-release-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.3.17
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/component: primary
                namespaces:
                  - "confluence-umbrella-1.0.1.tgz"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: my-release-postgresql
          image: docker.io/bitnami/postgresql:11.11.0-debian-10-r62
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-postgres-password
            - name: POSTGRES_USER
              value: "confluence"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgresql-password
            - name: POSTGRES_DB
              value: "confluence"
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
            - name: POSTGRESQL_MAX_CONNECTIONS
              value: "125"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "confluence" -d "dbname=confluence" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "confluence" -d "dbname=confluence" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
              subPath: 
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: confluence-umbrella/charts/confluence/templates/tests/test-application-status.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-confluence-application-status-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: confluence-1.0.0
    app.kubernetes.io/name: confluence
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.13.0-jdk11"
    app.kubernetes.io/managed-by: Helm
    
spec:
  containers:
    - name: test
      image: alpine
      env:
        - name: STATUS_URL
          value: "http://my-release-confluence:80/status"
      command:
        - /bin/sh
        - -ec
        - |
          apk add -q jq curl
          STATUS=$(curl -s "$STATUS_URL")
          echo "Verifying application state is RUNNING or FIRST_RUN: $STATUS"
          echo $STATUS | jq -e '.state|test("RUNNING|FIRST_RUN")'
  restartPolicy: Never
---
# Source: confluence-umbrella/charts/confluence/templates/tests/test-shared-home-permissions.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-confluence-shared-home-permissions-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: confluence-1.0.0
    app.kubernetes.io/name: confluence
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.13.0-jdk11"
    app.kubernetes.io/managed-by: Helm
    
spec:
  containers:
    - name: test
      image: debian:stable-slim
      imagePullPolicy: IfNotPresent
      securityContext:
        # Slightly dodgy; we assume that the UID and GID used by the product images are the same, which in practice they are
        runAsUser: 2002
        runAsGroup: 2002
      volumeMounts:
        - name: shared-home
          mountPath: /shared-home
      command:
        - /bin/sh
        - -ec
        - |
          ls -ld /shared-home
          echo "Creating temporary file in shared home as user $(id -u):$(id -g)"
          touch /shared-home/permissions-test
          ls -l /shared-home/permissions-test
          rm /shared-home/permissions-test
  volumes:
    
    - name: shared-home
    
      emptyDir: {}
  restartPolicy: Never
