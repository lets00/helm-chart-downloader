---
# Source: kubedb/charts/kubedb-autoscaler/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-autoscaler
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb/charts/kubedb-ops-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-ops-manager
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.33.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.33.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb/charts/kubedb-provisioner/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-provisioner
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-provisioner-v0.46.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.46.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb/charts/kubedb-webhook-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-webhook-server
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb/charts/petset/templates/rbac/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-petset
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: petset-v2024.2.11
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb/charts/sidekick/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-sidekick
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: sidekick-v2024.2.6
    app.kubernetes.io/name: sidekick
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kubedb-webhook-server-apiserver-cert
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURvVENDQW9tZ0F3SUJBZ0lRTFlyQUo1b21xQk50cGR4NTQwVnpYVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUNzeApLVEFuQmdOVkJBTVRJRzE1TFhKbGJHVmhjMlV0YTNWaVpXUmlMWGRsWW1odmIyc3RjMlZ5ZG1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXIxeGF6eXd2L2dTdUQxT01DOFBSa3ZsVGVLMWQKaStBZ3ZQQ29XVXdwTUd2WUJEUVZPa3ErVm1vbWNxa3BsVHp6MEV4YzFIZ1lHSG5MK0pxUEJKaWJBd01wa3kyUAowV2VYWWIwelpxbUpoaEEyYTF2eGZHd3RmbFUxQk4zMU9QUldsOEltSlhsVVE4YXZkRmNPeHA2Nzd4TGExZzQ3CnlqZDdJeThYMVM1aDAvVmUxZGk5aFg2bEJWUkt5bEQybWgyWUJscytXdTdFeGpseDN3RmFxRVhFTmx5VkErQjUKRUpCRmhkTVpLWmZvVk1NS3BXclJ2KzQrZ3dTUTBUZ0lvdWdFQ0crR1QrR2FySllrZUxSRCs1Z2w4SkxPSzhoYwpVclBuZmRaNXg2bFhxY2F0Z0s1SFQzUmtsUlE5V0o0KzROMk9HM0JNSG9aYzAvcy9lYjlLOFk2NkdRSURBUUFCCm80SGVNSUhiTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU2c1aUZQeEZpa3hET2x6dlVpcW8wTgplTnlnb0RCN0JnTlZIUkVFZERCeWdqVnRlUzF5Wld4bFlYTmxMV3QxWW1Wa1lpMTNaV0pvYjI5ckxYTmxjblpsCmNpNXJkV0psWkdJdGRqSXdNalF1Tmk0MExuUm5lb0k1YlhrdGNtVnNaV0Z6WlMxcmRXSmxaR0l0ZDJWaWFHOXYKYXkxelpYSjJaWEl1YTNWaVpXUmlMWFl5TURJMExqWXVOQzUwWjNvdWMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFDMzdPaU8zNmd1QWIybkZFK0hYT0puWEdpMnB4aEVFdll0bXNzMVpOU1F6R21KNEkzU0pUQng2MHY4CnhWdlZDNy9vbkJzaUE2Z0UwRmY1TXEyQ3ptR0VDMVlabmNrekhKcStnQ0kyeFNFbTlvQW9BOFppRTV4cWZZY3oKMVYxZzNUd3c3YjBnL0xTb3Q0SmRMOEhlYm93SERzRml3cDZxbU9EN2RPd29WZVNJT1psMVQvcndtdFU2ODVQMgpVSSt6eFcxTE9saldmc09VNm1CNk9EY0wxVmVRU0JyZ1Jra1ovajVkRk5vUlhHUHUvR2x5WlcrSXRXajR3UW1ECjBRd1U2aHozSllYbTJ3Qm5vOHEyaTBKL0VaVjVuZGRSZkg4V3lXTEcvRFNvaERqTHVBWUJVbTAwQVgvOWV3MVEKWXNaRGZvS2NwWkpKdFVSNFhncVk2YjRZeE1HYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcjF4YXp5d3YvZ1N1RDFPTUM4UFJrdmxUZUsxZGkrQWd2UENvV1V3cE1HdllCRFFWCk9rcStWbW9tY3FrcGxUenowRXhjMUhnWUdIbkwrSnFQQkppYkF3TXBreTJQMFdlWFliMHpacW1KaGhBMmExdngKZkd3dGZsVTFCTjMxT1BSV2w4SW1KWGxVUThhdmRGY094cDY3N3hMYTFnNDd5amQ3SXk4WDFTNWgwL1ZlMWRpOQpoWDZsQlZSS3lsRDJtaDJZQmxzK1d1N0V4amx4M3dGYXFFWEVObHlWQStCNUVKQkZoZE1aS1pmb1ZNTUtwV3JSCnYrNCtnd1NRMFRnSW91Z0VDRytHVCtHYXJKWWtlTFJEKzVnbDhKTE9LOGhjVXJQbmZkWjV4NmxYcWNhdGdLNUgKVDNSa2xSUTlXSjQrNE4yT0czQk1Ib1pjMC9zL2ViOUs4WTY2R1FJREFRQUJBb0lCQVFDWlJ4eUk0WkxCY2MzQwp6OEFsdUcvREMvT09FOXNrbkMrQmRzbHY1RVpNY0xkTVZVb0l2YlJKVEZkMithM0RLSmZraGhyT0RIcmpTZktqCnhsVWtLMCt5L2x5a3JMcDh5eE5pOTBHcWhwNFNkTEZjZmUxQ1dEd2JwTmJHL2t1T0VPUnZtZUJGK1J0U2NxU0MKQ0daOTdkbFBTeWZFMm9RZ2FRWlU1cURxVWJSbzB5bGxjOTQvZUNwUXVKWU9OYk1sbCt5Tll1eDhxcldoaXg0Qgp1ZmRnOXlIdWV1QjJnL1FibHR6U3FEVUhKbFEwZlc5SjM3Ty90NmJGNmFYdWphNENBOG1UMy80alV2MFB6NkJkCnQrNVVnaG5ITjF4c0JXNjdTMHpBOG12VVB1YUZjWC9LcVlUOEVld29QK2R1WE45amJsejB6RCtML2Y1ZWpVc2sKOHlxT2cyZVJBb0dCQU1YNysxRDh6Q3VrZWcvQWcvK3VxeFgvUlVuNTVVTUo2NStVOHQ1cklXR0Y3eGVzMG0yQgpSNnFJOWRsdXpZSGtwRzltT3NqeFQwcnhIeFJwTG9HWURnTjlUdUlJQ3N6OForTGhjb2tVZC90cVoxMG5JK3pkCnc0Mk55T1kzSDFLK3VYemMzWUpRaXVpSUdwbDVkL1NjcFVYOElNUjJySmdnSzdRUk5DaXgvbzI3QW9HQkFPSy8KUGYyWmREUmZwRTM5OThuN3BaK05meUN4OG1JTzlXUkNlak5CcTk4WkRTbFJQa3hZQkI4SG80ZDhkZDQvUm9HZApyeElmZm5Fb214WmV3dXBZRmNmZzZCdjY5OGhkMTJvZ2srTWpyK1ZFWmp5YjRhOEFqdHN5Wk54WDE3YVJHYVRaCm5hNlNoSTU0a2RHUjhVTTBSRXJsbFl4TlpGbG91OUhtazJVR1l6QTdBb0dBT0hZdUsrQ01VWDNzbVlWcm40VXUKb1cxVlUwMkRCbVZUM3dUWlpuamk0aThTQ294c3puSHFBRVppNW9sazdrQkliTVNZeXltV1ZXY0NXQTNQQjRKWApyTU1WdGZ4WktEQnJhQmFuVlZTVEN3NURRQnVqY1MrbFR6ODZKZjFlWDNpbzZXVUxmdGg5Wk9jN3ZyMFhhcGtwCndSV3dPcGNsalpUUEllRXVJTlR5SlhVQ2dZRUF4dnA2Qk55djYvSHVObjdpL24zMWxyRk4yVHd1N3J3ZnZhN1UKbTd4S2ZnbjIwY1k0dkRnVXpjSWZVQnI1T0dJZ2xrZnd4UitjRHVOS1RYUTA2ZjhJaGhHb3ZqMGJTZHFIMmRyaQp6RldaMnNDT1V5dWIvYjJvbjFSMnpDSE42NmtqYnRXRkdSZjhlU1gzR0loUXh0L0wra25FVlkzb3ZNazY0UFROCmJiOFFOZGNDZ1lCenkwMEU2YTlpVlVJQ0ZTWXpMZTdmTzBxVzZidzFtR2hFWkV6d2pOY2hxN1JiVis5UHlsSkYKZUVKdGxBNE93WnUxZGNnWTE2Y2NJaDlKcTZBL2F2amJHYjdOY1pPa092Q3k5eE1PcEFCVGt1c3A1YjhyazkxMQpvU0htck9qajREZVBBSVU2UkttUnMrUmgyRXhGRXZNRDlvbW1aaVF1OXBGdVJMQnBzNDJpQ2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kubedb/charts/petset/templates/webhook-server/cert.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-petset-webhook-cert
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: petset-v2024.2.11
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lSQU5nMW1Obm5oS1hrYzRPSUNUT0pYUmN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNMFdoY05NelF3TmpFNE1UUTFOek0wV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUGlJCkkvU1ptZWFyTll6NGl1NWVOajhiR3FVOFlyUXliNjc3WnJwV0piSnM1bFRyVkVkNFZUTUp5OTBocWNWTjhuMEgKbW5IS0pIaEwzUzRCNWNPVk45TDRPTUV5VENJSFBWRzQvTlRwYkR5N1c0VTcrVjNTeC96UExtTkMyRHVRbHZQdQp2NUJialFXUFVnQnBoU2lycjYvU2ZkOVIyTlZQc2U5K2NSRmxVMmhEV2NSVDRBWFlVeVgvRHcrVDRPM2RGWHR1CnR0aEF5bmFKcG9KVkcramhUUSszcVFCMklkYm81V2hOcFFOTEVWYkthblBFWUFzaHlMejRmNlBQdjdLQlBJclMKYjNDcGtGbjk2R0VJMVJwZXVUQm1EbXhCQXRDcHBSZytKeC91d1hNZ25VTkJha0J0eldoa3piVWgzeklXNlphcQpMaGQ0VjhicWg2aWJQWkVGN2FzQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJSVTc4RnlmR1R6S3NhWUFWMHlhLzVISUJOdGR6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFKVXc0ZWl3RQpya2YzSC9oRENoeVdwOTcxVHM4UUdPSTNyZDhsL3d4bGJVQi9MQ3VET3ZxZTFxdjRrRDJvZENUZXFMQm5JeFF2CnVkMkMrZFhpaUxENXNuMWtFdlI2SDFsTmJIVzQ0RXRwWldGdHd2Zmp2MjhGV3o4eS9BRmhqbGtQaG9YaDVMcGYKdkZjNStBKzArNmkwZmdhYWN0dXBSdGpjSFJTekxOa24rTyt3Y0NmTXpKbTdBVXZVUmlxSHZRc3dXY3dxWGE3TQpkUFl0TlJBMWxjSGxYc3dmYkxuc3cyd3FSdkczM0hNVys4ZVJ3VUhHdmZ6a29RaHFJdHNnWW5ZZVVZc2VOdGhRCmVFRjBEMEZORkVjek9NcUo4UWdzQ0lzaStQY25uZCtVWFBTK09EcmJwcWh5MS9ZUThIVmJYc1dPd2FERVZ5ZzUKT1RXNUd2Z2E4N1RlM2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURqVENDQW5XZ0F3SUJBZ0lSQU96dmtNaEFKM3R5TVRJQ0t1dnFqQ2d3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpRd05qSXdNVFExTnpNMFdoY05NelF3TmpFNE1UUTFOek0wV2pBawpNU0l3SUFZRFZRUURFeGx0ZVMxeVpXeGxZWE5sTFhCbGRITmxkQzEzWldKb2IyOXJNSUlCSWpBTkJna3Foa2lHCjl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6YjJCMkY2Rnh4VVRjUDJ6SmN3TCt2QklWdDJHMFlsdHdzQlIKNlVkZ1IzSkxzSUtKY2Z1dTk4bm15SmQxWUF5cnY0Ukp6U3pnNWVDUXYzdklCMmNnNVA1ejVnQjg3bjNFYzRQYgoxM0J0SHdzUDZOcTcwUTMyT3NueUdxNjBobDJjdCs5MEIwQmZLNlNlT010eXk0Sjc4cDlwaC9FeUVMay9iYUpkClZ1Z1I1WGtzUjJUdURRQmc0K241THNxdnZRaUM4UDduUEovTXhPcGpybzdINjBIcmcwR0Jvc3VBMXAwb2lLKzEKS0JjMzlnL1ExM3RkMzFoQnhyaVcrWC9HTkJTTVlzaExPdzBvS2ZwU2ZQd1pLOUpnWXNKWnR1Q2V4eE1SMW9QRwpUWisxRWZKdnhNZlcvazF4UzNkRTYwRFZsWWxKS2xSaDJGZDFPMG5ZeHFwR24zR2NCd0lEQVFBQm80SFFNSUhOCk1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXcKREFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJVNzhGeWZHVHpLc2FZQVYweWEvNUhJQk50ZHpCdApCZ05WSFJFRVpqQmtnaTV0ZVMxeVpXeGxZWE5sTFhCbGRITmxkQzEzWldKb2IyOXJMbXQxWW1Wa1lpMTJNakF5Ck5DNDJMalF1ZEdkNmdqSnRlUzF5Wld4bFlYTmxMWEJsZEhObGRDMTNaV0pvYjI5ckxtdDFZbVZrWWkxMk1qQXkKTkM0MkxqUXVkR2Q2TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFlb3R0bE40eTJSNnAvZlJsSjhidAo2VFJSSEhDTWd0ZkgwVDVMQ3k2OEh6T1dmKzlTMVVFYzdtQWN1RmF4aURmUUxGMmYyblZodGNDMTVRd21yR1R4Cm5KbERCTThSUVNoTjJENDJIV1ZrNHF0eitTQVNMaDFuNTY3QW5zb1pPUVZRaFVMeXhSckJEaDY1TTRYQ2NHZ3AKanE5R25HZUlhcXpZUGVlN1JFMmdIV2hMemVtbG5aN205RWVQSlk0bTQwTUZmMzJvS01mRXVCR3N1N1FERTNQeQphR1Jtd2MrNTN3bWFNN004UmNvRENpdVVMUEp3ZU1lN3VWa0M0Y1hNVVF4VFFHNkhFL2VuV0NPNFU5b2NBdnJnClNPL3JlaStJaGFyWUpNbHQ4SUhMYlFyVE82V3g4ZmVvVVRkSWNlRk1ERE5tZURIQ2ZVZm9KU1BKTGNBUEVTMWMKTlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBemIyQjJGNkZ4eFVUY1Ayekpjd0wrdkJJVnQyRzBZbHR3c0JSNlVkZ1IzSkxzSUtKCmNmdXU5OG5teUpkMVlBeXJ2NFJKelN6ZzVlQ1F2M3ZJQjJjZzVQNXo1Z0I4N24zRWM0UGIxM0J0SHdzUDZOcTcKMFEzMk9zbnlHcTYwaGwyY3QrOTBCMEJmSzZTZU9NdHl5NEo3OHA5cGgvRXlFTGsvYmFKZFZ1Z1I1WGtzUjJUdQpEUUJnNCtuNUxzcXZ2UWlDOFA3blBKL014T3Bqcm83SDYwSHJnMEdCb3N1QTFwMG9pSysxS0JjMzlnL1ExM3RkCjMxaEJ4cmlXK1gvR05CU01Zc2hMT3cwb0tmcFNmUHdaSzlKZ1lzSlp0dUNleHhNUjFvUEdUWisxRWZKdnhNZlcKL2sxeFMzZEU2MERWbFlsSktsUmgyRmQxTzBuWXhxcEduM0djQndJREFRQUJBb0lCQURNQjRNYzc1LzdMZ3Q1bwpoNW0vVk5rSjZXVmYxcVRzWllIN0hGT3hsblVnS1JQQnlVR3hIRmZpZm8wTXY5VG9UMHhVQjlnT1lGT2RzVVZICjh2ZWk0Y3prS09mRkJ6UTVpaEw1aGUrTHVBSVNSQWQrODBHSkxKcTJwb2RtK09xM0dydWZhaXpDRU5aSklkRUMKMzVzRTVxWG9UOG1jU3NWS3FDY09NZ1h4MHo0SXN0SXNva090R0Z2aUdwTHRqMTlFaThsMkNhR1VrS3J2R2V6ZAphWG1YWVBHZk5WRElFb2lmMDR4ZytSamE5eDRzN2JUcEYxYjk2QnlnUkhlNVNpUHlYcXVYV1Z0WVl6ZEVvTXp1CmN2MSt1MzJUSEdZTlYzWFNmaVFxSk02a0FYZG5NaWV1V1Z2Qnd1TFNDeVA1aHA0VFR6b1FZNXFCVkpkWTA4QkoKUHlndTE0RUNnWUVBM3lPdURibGhBVDc1ZVJZN1ZiTEVUeDQ0ZVVvWUs3YmFPM3daaDFhbkR0Mm1jdGFCd2N5RwpmUG9GcDhqZStHMS9KWHlrMm81K05zdTl3NjIzOERlN014VC93d3kvOHVCdnUrM3ZMMHpoMnQ0ZHpzMzgyWE5oCnBnZXhQSjBMNU5oTDN4bnF4NlhaY0l4M1JGRWpOSEdMaEJkZDlDVlJheDZXNnZtK2lMVkNnZjhDZ1lFQTdBbmkKS3BBaWhqTDBicDlOSkNSc0hHaitXR1pFeWdjaVcyOTVrR0lzUjRTMGlUQm85QmdLNGRFbFBUMmduV3VDdmp1WQo3M1pVc3paWGM4REpjZkxURVgxVmYvSUdKQVk4TDY0eUdUTzkxZDRvV3g2dkgyWnhkQVdsNXZPZkI2SEJJdVlZCjZtRjZ0R3A0cVNnNDhNN2hNeWRqWG9jMU1lNmJUemQ2THRSbzFma0NnWUJVZDBVam5ORERqL3NQZ3dMaTVkQzUKd2s3T1d1WGJabFFsd0V4Smx0dVdIUUVzNTFZbTdpemFraW9oNFQvRittenUyOGZyazVUaldTeDBMZ1k2d0YzMApjRGFBdHdyUi9YTk9TRHNLUktnYUdZcGZCa3A0WmR6STVKQ0t5VWYvVUlFbjZyK2M0NEx6djdoRi9CQy9nVnUyCm5NSEw4WFJvZ0NQUXZza0pKdFFPTVFLQmdRQ21uaHR1bkN3aXV4bGNkVXNJOWtUeWtSTHA1OWNySFhvZFBVVjgKckRCQmsrVzA2ZDFNWVNSZFh6dUFUVjV4Z1JEYnBFcEN6eTdmQ3I4VTBNUGlrZHg0ZmhhNnFHZTVTa1YyQ3VzRwphMFhZRUdoQVdocVllY0lnZWxRd0FVMERJQ1dyc3UxbmxjUCtVeUkxbGxVTGQ1MzBkQnRyQU5xR0VyN0RYby83Ck9xbCtVUUtCZ0JZS1d5ZTIwZ29WRERKL2E5alRLWFNMQ1hmMTVvNnFWYnk4VklWcGFiVTlYY3N6T1BoZHcxOVoKb0xZUjkwc25mby96cUZNVUZzRlV0WXpKcUpJbzJPeFBSTWo3RW9NWUNobWRKT1FVQVQweFRXSkVnQ2wzcEhLRApMSWJKVTJhd0J3VElGT1ViZ0tMVDZQZ1BpQ0t0NkhWa3FMWlhLczFaREdseTJabktSU1RLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kubedb/charts/kubedb-autoscaler/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-autoscaler
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - ops.kubedb.com
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - elasticsearchautoscalers/finalizers
  - etcdautoscalers/finalizers
  - kafkaautoscalers/finalizers
  - mariadbautoscalers/finalizers
  - memcachedautoscalers/finalizers
  - mongodbautoscalers/finalizers
  - mysqlautoscalers/finalizers
  - perconaxtradbautoscalers/finalizers
  - pgbouncerautoscalers/finalizers
  - postgresautoscalers/finalizers
  - proxysqlautoscalers/finalizers
  - redisautoscalers/finalizers
  - rabbitmqautoscalers/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - apps.k8s.appscode.com
  resources:
  - petsets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - secrets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  verbs: ["get", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - nodes
  - limitranges
  - persistentvolumeclaims
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "watch", "create"]
- apiGroups:
  - "metrics.k8s.io"
  resources:
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - "node.k8s.appscode.com"
  resources:
  - nodetopologies
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/charts/kubedb-ops-manager/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-ops-manager
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.33.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.33.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs: ["create", "delete", "get", "list", "watch", "patch", "update", "deletecollection"]
- apiGroups:
    - apps.k8s.appscode.com
  resources:
    - petsets
  verbs: ["create", "delete", "get", "list", "watch", "patch", "update", "deletecollection"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["get", "list", "watch"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - ops.kubedb.com
  - postgres.kubedb.com
  - kafka.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - ops.kubedb.com
  resources:
  - elasticsearchopsrequests/finalizers
  - etcdopsrequests/finalizers
  - kafkaopsrequests/finalizers
  - mariadbopsrequests/finalizers
  - memcachedopsrequests/finalizers
  - mongodbopsrequests/finalizers
  - mysqlopsrequests/finalizers
  - perconaxtradbopsrequests/finalizers
  - pgbounceropsrequests/finalizers
  - postgresopsrequests/finalizers
  - proxysqlopsrequests/finalizers
  - redisopsrequests/finalizers
  verbs: ["update"]
- apiGroups:
  - postgres.kubedb.com
  resources:
  - publishers/finalizers
  - subscribers/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - cert-manager.io
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  - pods/eviction
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs: ["create", "delete", "get", "patch", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "delete", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["get", "list", "patch", "delete"]
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs: ["get", "list", "create", "delete", "patch", "deletecollection"]
- apiGroups:
  - batch
  resources:
  - jobs
  verbs: ["create", "delete", "get", "list", "watch"]
- apiGroups:
  - stash.appscode.com
  resources:
  - backupsessions
  - backupconfigurations
  - restoresessions
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups:
    - core.kubestash.com
  resources:
    - backupsessions
    - backupconfigurations
    - restoresessions
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs: ["create", "delete", "get", "patch", "deletecollection"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - supervisor.appscode.com
  resources: ["*"]
  verbs: ["create", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  verbs: [ "get","create","patch","delete" ]
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs: [ "use" ]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: [ "create", "delete", "get", "list", "patch", "watch" ]
- apiGroups:
  - scanner.appscode.com
  resources:
  - imagescanrequests
  verbs: [ "create", "get", "list", "watch" ]
- apiGroups:
  - scanner.appscode.com
  resources:
  - imagescanreports
  verbs: [ "get", "list", "watch" ]
---
# Source: kubedb/charts/kubedb-provisioner/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-provisioner
  labels:
    helm.sh/chart: kubedb-provisioner-v0.46.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.46.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs: ["create", "delete", "list","watch", "get", "patch", "deletecollection"]
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs: ["create", "delete", "get", "patch", "update", "list", "watch"]
- apiGroups:
  - ""
  resources:
  - services/finalizers
  verbs: ["update"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["create", "delete", "get", "watch", "list", "patch", "deletecollection"]
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch", "deletecollection"]
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs: ["get"]
- apiGroups:
  - batch
  resources:
  - jobs
  verbs: ["create", "delete", "get", "list", "watch", "patch"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/eviction
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["create", "delete", "get", "list", "patch", "watch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "delete", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups:
  - kubedb.com
  - apps.k8s.appscode.com
  - archiver.kubedb.com
  - catalog.kubedb.com
  - core.kubestash.com
  - elasticsearch.kubedb.com
  - kafka.kubedb.com
  - storage.kubestash.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - kubedb.com
  resources:
  - elasticsearches/finalizers
  - etcds/finalizers
  - mariadbs/finalizers
  - memcacheds/finalizers
  - mongodbs/finalizers
  - mysqls/finalizers
  - perconaxtradbs/finalizers
  - pgbouncers/finalizers
  - postgreses/finalizers
  - proxysqls/finalizers
  - redises/finalizers
  - redissentinels/finalizers
  - zookeepers/finalizers
  verbs: ["update"]
- apiGroups:
  - elasticsearch.kubedb.com
  resources:
  - elasticsearchdashboards/status
  verbs: ["get"]
- apiGroups:
  - elasticsearch.kubedb.com
  resources:
  - elasticsearchdashboards/finalizers
  verbs: ["update"]
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs: ["update"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - ""
  resources:
  - "pods/exec"
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - "pods/status"
  verbs: ["update"]
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs: ["use"]
  resourceNames:
  - my-release-kubedb-provisioner
  - elasticsearch-db
  - etcd-db
  - memcached-db
  - mongodb-db
  - mysql-db
  - percona-xtradb-db
  - postgres-db
  - redis-db
  - proxysql-db
  - maria-db
  - kafka-db
  - kafkaconnector
  - zookeeper-db
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs: ["get", "list", "create", "delete", "patch", "deletecollection"]
- apiGroups:
  - stash.appscode.com
  - kubestash.appscode.com
  resources:
  - restoresessions
  - restorebatches
  verbs: ["get", "list", "watch"]
- apiGroups:
  - cert-manager.io
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  verbs: [ "get","create", "list","watch", "patch","delete"]
- apiGroups:
  - apps.k8s.appscode.com
  resources:
  - sidekicks
  verbs: ["get", "list", "create", "delete", "patch", "deletecollection"]

- apiGroups:
  - stash.appscode.com
  resources:
  - backupsessions
  - backupconfigurations
  verbs: [ "get", "list", "watch" ]

- apiGroups:
  - core.kubestash.com
  resources:
  - backupsessions
  - backupconfigurations
  verbs: [ "get", "list", "watch" ]

- apiGroups:
  - cacerts.csi.cert-manager.io
  resources:
  - caproviderclasses
  verbs: [ "get", "list", "watch", "create" ]
---
# Source: kubedb/charts/kubedb-webhook-server/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-webhook-server
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups:
    - ""
  resources:
    - secrets
  verbs: ["get"]
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - ops.kubedb.com
  - postgres.kubedb.com
  - autoscaling.kubedb.com
  - elasticsearch.kubedb.com
  - schema.kubedb.com
  - archiver.kubedb.com
  - kafka.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - cert-manager.io
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/charts/petset/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-petset-auth-proxy
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: kubedb/charts/petset/templates/rbac/cluster_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-petset
  labels:
    helm.sh/chart: petset-v2024.2.11
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs: ["get", "create", "patch", "update"]
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs: ["*"]
  - apiGroups:
      - apps.k8s.appscode.com
    resources:
      - "*"
    verbs: ["*"]
  - apiGroups:
      - ""
    resources:
      - events
    verbs: ["create", "patch"]
  - apiGroups:
      - ""
    resources:
      - pods
      - persistentvolumeclaims
    verbs: ["*"]
  - apiGroups:
      - apps
    resources:
      - controllerrevisions
    verbs: ["*"]
---
# Source: kubedb/charts/sidekick/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-sidekick
  labels:
    helm.sh/chart: sidekick-v2024.2.6
    app.kubernetes.io/name: sidekick
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
    - apps.k8s.appscode.com
  resources: ["*"]
  verbs: ["*"]
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list","watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["*"]
---
# Source: kubedb/charts/kubedb-autoscaler/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-autoscaler
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-autoscaler
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-autoscaler
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-autoscaler/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-autoscaler-license-checker
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-autoscaler
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-autoscaler/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-autoscaler-license-reader
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-autoscaler
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-ops-manager/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-ops-manager
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.33.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.33.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-ops-manager
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-ops-manager
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-ops-manager/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-ops-manager-license-checker
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.33.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.33.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-ops-manager
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-ops-manager/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-ops-manager-license-reader
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.33.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.33.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-ops-manager
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-provisioner/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-provisioner
  labels:
    helm.sh/chart: kubedb-provisioner-v0.46.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.46.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-provisioner
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-provisioner
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-provisioner/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-provisioner-license-checker
  labels:
    helm.sh/chart: kubedb-provisioner-v0.46.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.46.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-provisioner
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-provisioner/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-provisioner-license-reader
  labels:
    helm.sh/chart: kubedb-provisioner-v0.46.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.46.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-provisioner
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-webhook-server/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-webhook-server
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-webhook-server
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-webhook-server
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-webhook-server/templates/webhook-eas-rbac.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-webhook-server-apiserver-auth-delegator
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-webhook-server
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/petset/templates/rbac/auth_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-petset-auth-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-petset-auth-proxy
subjects:
  - kind: ServiceAccount
    name: my-release-petset
    namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/petset/templates/rbac/cluster_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-petset
  labels:
    helm.sh/chart: petset-v2024.2.11
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-petset
subjects:
- kind: ServiceAccount
  name: my-release-petset
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/sidekick/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-sidekick
  labels:
    helm.sh/chart: sidekick-v2024.2.6
    app.kubernetes.io/name: sidekick
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-sidekick
subjects:
- kind: ServiceAccount
  name: my-release-sidekick
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-webhook-server/templates/webhook-eas-rbac.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-kubedb-webhook-server-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-webhook-server
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-autoscaler/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubedb-autoscaler
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  selector:
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
---
# Source: kubedb/charts/kubedb-ops-manager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubedb-ops-manager
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.33.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.33.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  selector:
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
---
# Source: kubedb/charts/kubedb-provisioner/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubedb-provisioner
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-provisioner-v0.46.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.46.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  selector:
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
---
# Source: kubedb/charts/kubedb-webhook-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kubedb-webhook-server
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: operator
    port: 443
    targetPort: operator
  selector:
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
---
# Source: kubedb/charts/petset/templates/webhook-server/monitoring/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-petset
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: petset-v2024.2.11
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
---
# Source: kubedb/charts/petset/templates/webhook-server/webhook_service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-petset-webhook
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: petset-v2024.2.11
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/component: webhook-server
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
---
# Source: kubedb/charts/sidekick/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-sidekick
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: sidekick-v2024.2.6
    app.kubernetes.io/name: sidekick
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: sidekick
    app.kubernetes.io/instance: my-release
---
# Source: kubedb/charts/kubedb-autoscaler/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubedb-autoscaler
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-autoscaler-v0.31.0
    app.kubernetes.io/name: kubedb-autoscaler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.31.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-autoscaler
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-autoscaler
        app.kubernetes.io/instance: my-release
      annotations:
        reload: nTCvMrDF
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-release-kubedb-autoscaler
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubedb/kubedb-autoscaler:v0.31.0
        imagePullPolicy: IfNotPresent
        args:
        - operator
        - --v=5
        - --use-kubeapiserver-fqdn-for-aks=true
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        - --update-interval=1m
        - --prometheus-address=http://prometheus-operated.monitoring.svc:9090
        - --memory-aggregation-interval=4m0s
        - --memory-aggregation-interval-count=3
        - --memory-histogram-decay-half-life=5m0s
        - --cpu-histogram-decay-half-life=5m0s
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: metrics
          containerPort: 8080
        - name: probes
          containerPort: 8081
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        readinessProbe:
          httpGet:
            path: /readyz
            port: probes
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: probes
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb/charts/kubedb-ops-manager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubedb-ops-manager
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-ops-manager-v0.33.0
    app.kubernetes.io/name: kubedb-ops-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.33.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-ops-manager
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-ops-manager
        app.kubernetes.io/instance: my-release
      annotations:
        reload: EiHtEALh
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-release-kubedb-ops-manager
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubedb/kubedb-ops-manager:v0.33.0
        imagePullPolicy: IfNotPresent
        args:
        - operator
        - --v=5
        - --use-kubeapiserver-fqdn-for-aks=true
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        - --recommendation-resync-period=1h0m0s
        - --gen-rotate-tls-recommendation-before-expiry-year=0
        - --gen-rotate-tls-recommendation-before-expiry-month=1
        - --gen-rotate-tls-recommendation-before-expiry-day=0
        
        
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        ports:
        - name: metrics
          containerPort: 8080
        - name: probes
          containerPort: 8081
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        readinessProbe:
          httpGet:
            path: /readyz
            port: probes
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: probes
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb/charts/kubedb-provisioner/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubedb-provisioner
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-provisioner-v0.46.0
    app.kubernetes.io/name: kubedb-provisioner
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.46.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-provisioner
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-provisioner
        app.kubernetes.io/instance: my-release
      annotations:
        reload: edaMmdsv
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-release-kubedb-provisioner
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubedb/kubedb-provisioner:v0.46.0
        imagePullPolicy: IfNotPresent
        args:
        - operator
        - --v=3
        - --use-kubeapiserver-fqdn-for-aks=true
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        
        
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        ports:
        - name: metrics
          containerPort: 8080
        - name: probes
          containerPort: 8081
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        readinessProbe:
          httpGet:
            path: /readyz
            port: probes
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: probes
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb/charts/kubedb-webhook-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubedb-webhook-server
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubedb-webhook-server
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubedb-webhook-server
        app.kubernetes.io/instance: my-release
      annotations:
        reload: fbDhZgHb
    spec:
      imagePullSecrets:
        []
      serviceAccountName: my-release-kubedb-webhook-server
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        image: ghcr.io/kubedb/kubedb-webhook-server:v0.22.0
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --use-kubeapiserver-fqdn-for-aks=true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: operator
          containerPort: 8443
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /var/serving-cert
          name: serving-cert
        resources:
          {}
      volumes:
      - name: tmpdir
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-kubedb-webhook-server-apiserver-cert
      securityContext:
        {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb/charts/petset/templates/operator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-petset-operator
  namespace: kubedb-v2024.6.4.tgz
  labels:
    app.kubernetes.io/component: operator
    helm.sh/chart: petset-v2024.2.11
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: petset
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: petset
        app.kubernetes.io/instance: my-release
      annotations:
    spec:
      
      serviceAccountName: my-release-petset
      containers:
      - name: operator
        image: "ghcr.io/appscode/petset:v0.0.5"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - operator
        resources:
          requests:
            cpu: 100m
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb/charts/petset/templates/webhook-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-petset-webhook-server
  namespace: kubedb-v2024.6.4.tgz
  labels:
    app.kubernetes.io/component: webhook-server
    helm.sh/chart: petset-v2024.2.11
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook-server
      app.kubernetes.io/name: petset
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webhook-server
        app.kubernetes.io/name: petset
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: 9304491c6f761e6a8e28aef0338c9f827135048359c3cb09388388506a60c68a
    spec:
      
      serviceAccountName: my-release-petset
      containers:
      - name: webhook-server
        image: "ghcr.io/appscode/petset:v0.0.5"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
          - webhook
          - --webhook-name=my-release-petset
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
        volumeMounts:
        - name: serving-cert
          mountPath: /var/serving-cert
          readOnly: true
      - name: kube-rbac-proxy
        image: "ghcr.io/appscode/kube-rbac-proxy:v0.11.0"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 100m
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-petset-webhook-cert
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb/charts/sidekick/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-sidekick
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: sidekick-v2024.2.6
    app.kubernetes.io/name: sidekick
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sidekick
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sidekick
        app.kubernetes.io/instance: my-release
    spec:
      
      serviceAccountName: my-release-sidekick
      securityContext:
        {}
      containers:
        - name: sidekick
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
          image: ghcr.io/appscode/sidekick:v0.0.5
          imagePullPolicy: Always
          args:
            - run
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
          resources:
            {}
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.kafka.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.kafka.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.kafka.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.kafka.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.ops.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.ops.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.ops.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.ops.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.postgres.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.postgres.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.autoscaling.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-autoscaler
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.autoscaling.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.autoscaling.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-autoscaler
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.autoscaling.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.elasticsearch.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-dashboard
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.elasticsearch.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.elasticsearch.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-dashboard
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.elasticsearch.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.validators.schema.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-schema-manager
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: validators.schema.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-webhook-server/templates/apiregistration.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.mutators.schema.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-schema-manager
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: mutators.schema.kubedb.com
  version: v1alpha1
  service:
    namespace: kubedb-v2024.6.4.tgz
    name: my-release-kubedb-webhook-server
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lRUGxxNDRHK0tOcktIaHhKYzdBbGgrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUzTXpSYUZ3MHpOREEyTVRneE5EVTNNelJhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF5SXRBCmFOcE1XcTNuZ0FwR2VxVlFFK3JYUzlpSmx5WDg3dXIyQmxFUFF1eWpMMjluS2Ryd0lkby9ya3BLaEg3VFFPK3UKMVd0Qis5SFpzWnlkZDJJUWZLN1FhZzBmTUtzSmVkTG50NDNDNmdaaXZQOWhGQ0ZVTVh0ekx6NVcrMWhLc0hWTwpPTk1LV2JRS1UrUWJFWVVHekNsUlAzbE8rblJrNXpaajBwSXREeGJWN1AzcXhGQ2UvNUk2NVpObmNjNEdCTHpnClluUTdvamQzL3VJRFRJWGdleERqRERJNDYwV3JIdEx4elJWbThFOERQMlZWdnJZY01MeUlSM1ZMTEJIV0Z0bnkKZm8vUjBuU0NqLzdmK3ZGbzlDUlpieFpBeDIyUUlBMlpqUUExNzJTa1hxMWgvaHYxeDVhbHBRem5KUS9VbEEvMQpONWt4aVdxbGxCV0tEQWt2QndJREFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRktEbUlVL0VXS1RFTTZYTzlTS3FqUTE0M0tDZ01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVwMEZLc0JPQgowMEpZT1plUnFIUS8zZ3ZZRURVdDRUb3BYUUlWTENxVVFZUWIzNjA2UjY3TWduWTNsRzUra3VGY1NNVUFNaTRPCnYyR1grVmdvSVJVTG1qbnQyNmw2dXIwN2NFNkRPVzRSOUlnR2RLem1YN3kvWkhPRmtnaWorOTVBVm12T3VhQTYKVk8wdGZpbEk0djNPVWM3S2NnRDZKQjh0b1NsVzBabUJTU0x3UVg1dFVnVnExZnhjQ2wvNTVUUGNWaGJFdnp5bAoyN3RRWEZoczhhU1hFWGt5NTdINWRiMVRhYTNBbmJkZW53dXk2MW5rMFAwS2g4SktLS1YvdEJnSXE3UkppV0g0CkRTVHY3NFNOSkp5d2QxZFFQRFNFTUM1NHVKYVJqL1k5Z2c2RjVDaEJaYnR5UWttMFQ3MitrbGxKNkxLZGRmWlMKejdhZmFxWllrWTZ1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  groupPriorityMinimum: 10000
  versionPriority: 15
---
# Source: kubedb/charts/kubedb-autoscaler/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/deprecated-elasticsearch-7.3.2-elasticstack.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/deprecated-elasticsearch-7.6.1-opendistro.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/deprecated-elasticsearch-7.9.1-elasticstack.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-3.4-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-3.4.22-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-3.6-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-3.6.13-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-4.0.11-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-4.0.5-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-4.0.5-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-4.1.13-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/deprecated-mongodb-4.1.7-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/deprecated-mysql-5.7.25-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/deprecated-mysql-5.7.25-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/deprecated-mysql-5.7.29-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/deprecated-mysql-5.7.31-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.14-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.14-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.20-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.21-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.3-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/deprecated-mysql-8.0.3-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/deprecated-postgres-10.2-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/deprecated-postgres-10.2-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/deprecated-postgres-10.6-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/deprecated-postgres-11.1-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/deprecated-postgres-9.6-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/deprecated-postgres-9.6-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/deprecated-postgres-9.6.7-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/deprecated-postgres-9.6.7-official.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/redis/deprecated-redis-4.0.6.yaml
---
---
# Source: kubedb/charts/kubedb-catalog/templates/redis/deprecated-redis-4.0.yaml
---
---
# Source: kubedb/charts/kubedb-ops-manager/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb/charts/kubedb-provisioner/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-1.1.0-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-1.1.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:1.1.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:1.1.0-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:1.1.0'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:1.1.0-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 1.1.0
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-1.2.4-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-1.2.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:1.2.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:1.2.4-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:1.2.4'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:1.2.4-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 1.2.4
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-1.3.13-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-1.3.13'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:1.3.13'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:1.3.13-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:1.3.13'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:1.3.13-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 1.3.13
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-2.0.1-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.0.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.0.1'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.0.1-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.0.1'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.0.1-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.0.1
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-2.11.1-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.11.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.11.1'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.11.1-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.11.1'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.11.1-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.11.1
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-2.14.0-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.14.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.14.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.14.0-opensearch-v2024.05.29'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.14.0'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.14.0-opensearch-v2024.05.29'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.14.0
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-2.5.0-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.5.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.5.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.5.0-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.5.0'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.5.0-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.5.0
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-2.8.0-opensearch.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'opensearch-2.8.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: OpenSearch
  dashboard:
    image: 'ghcr.io/appscode-images/opensearch-dashboards:2.8.0'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:2.8.0-opensearch-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/opensearch:2.8.0'
  distribution: OpenSearch
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:2.8.0-opensearch-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!security-auditlog)(?!kubedb-system).+
  version: 2.8.0
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-6.8.23-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-6.8.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:6.8.23'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:6.8.23-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:6.8.23'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:6.8.23-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-6.8.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-6.8.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.5.0
  version: 6.8.23
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-7.13.4-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.13.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.13.4'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.13.4-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.13.4'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.13.4-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.15.0
  version: 7.13.4
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-7.14.2-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.14.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.14.2'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.14.2-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.14.2'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.14.2-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.18.0
  version: 7.14.2
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-7.16.3-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.16.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.16.3'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.16.3-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.16.3'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.16.3-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.18.0
  version: 7.16.3
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-7.17.15-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-7.17.15'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:7.17.15'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:7.17.15-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:7.17.15'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.17.15-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.14.0
        params:
        - name: args
          value: --match=^(?![.])(?!kubedb-system).+
  version: 7.17.15
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-7.9.3-searchguard.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'searchguard-7.9.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: SearchGuard
  db:
    image: 'floragunncom/sg-elasticsearch:7.9.3-oss-47.1.0'
  distribution: SearchGuard
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:7.9.3-searchguard'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!searchguard)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-7.3.2
        params:
        - name: args
          value: --match=^(?![.])(?!searchguard)(?!kubedb-system).+
  updateConstraints:
    allowlist:
    - < 7.15.0
  version: 7.9.3
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-8.11.1-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.11.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.11.1'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.11.1-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.11.1'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.11.1-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.11.1
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-8.13.4-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.13.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.13.4'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.13.4-xpack-v2024.05.29'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.13.4'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.13.4-xpack-v2024.05.29'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.13.4
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-8.2.3-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.2.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.2.3'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.2.3-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.2.3'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.2.3-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.2.3
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-8.5.3-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.5.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.5.3'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.5.3-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.5.3'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.5.3-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.5.3
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-8.6.2-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.6.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.6.2'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.6.2-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.6.2'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.6.2-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.6.2
---
# Source: kubedb/charts/kubedb-catalog/templates/elasticsearch/elasticsearch-8.8.2-elasticstack.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: ElasticsearchVersion
metadata:
  name: 'xpack-8.8.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  authPlugin: X-Pack
  dashboard:
    image: 'ghcr.io/appscode-images/kibana:8.8.2'
  dashboardInitContainer:
    yqImage: 'ghcr.io/kubedb/elasticsearch-dashboard-init:8.8.2-xpack-v2023.12.07'
  db:
    image: 'ghcr.io/appscode-images/elastic:8.8.2'
  distribution: ElasticStack
  exporter:
    image: 'prometheuscommunity/elasticsearch-exporter:v1.7.0'
  initContainer:
    image: 'tianon/toybox:0.8.4'
    yqImage: 'ghcr.io/kubedb/elasticsearch-init:8.8.2-xpack-v2023.12.07'
  podSecurityPolicies:
    databasePolicyName: elasticsearch-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 1000
  stash:
    addon:
      backupTask:
        name: elasticsearch-backup-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
      restoreTask:
        name: elasticsearch-restore-8.2.0
        params:
        - name: args
          value: --match=^(?![.])(?!apm-agent-configuration)(?!kubedb-system).+
  version: 8.8.2
---
# Source: kubedb/charts/kubedb-catalog/templates/kafkaconnector/kafkaconnector-0.13.0-gcs.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'gcs-0.13.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-gcs:0.13.0'
  securityContext:
    runAsUser: 1001
  type: GCS
  version: 0.13.0
---
# Source: kubedb/charts/kubedb-catalog/templates/kafkaconnector/kafkaconnector-1.11.0-mongodb.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'mongodb-1.11.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-mongodb:1.11.0'
  securityContext:
    runAsUser: 1001
  type: MongoDB
  version: 1.11.0
---
# Source: kubedb/charts/kubedb-catalog/templates/kafkaconnector/kafkaconnector-2.15.0-s3.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 's3-2.15.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-s3:2.15.0'
  securityContext:
    runAsUser: 1001
  type: S3
  version: 2.15.0
---
# Source: kubedb/charts/kubedb-catalog/templates/kafkaconnector/kafkaconnector-2.4.2-mysql.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'mysql-2.4.2.final'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-mysql:2.4.2.final'
  securityContext:
    runAsUser: 1001
  type: MySQL
  version: 2.4.2
---
# Source: kubedb/charts/kubedb-catalog/templates/kafkaconnector/kafkaconnector-2.4.2-postgres.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'postgres-2.4.2.final'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-postgres:2.4.2.final'
  securityContext:
    runAsUser: 1001
  type: Postgres
  version: 2.4.2
---
# Source: kubedb/charts/kubedb-catalog/templates/kafkaconnector/kafkaconnector-2.6.1-jdbc.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaConnectorVersion
metadata:
  name: 'jdbc-2.6.1.final'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectorPlugin:
    image: 'ghcr.io/appscode-images/kafka-connector-jdbc:2.6.1.final'
  securityContext:
    runAsUser: 1001
  type: JDBC
  version: 2.6.1
---
# Source: kubedb/charts/kubedb-catalog/templates/kafka/kafka-3.3.2.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.3.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.3.2'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.3.2'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.3.2'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.3.2
---
# Source: kubedb/charts/kubedb-catalog/templates/kafka/kafka-3.4.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.4.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.4.1'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.4.1'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.4.1'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.4.1
---
# Source: kubedb/charts/kubedb-catalog/templates/kafka/kafka-3.5.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.5.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.5.1'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.5.1'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.5.1'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.5.1
---
# Source: kubedb/charts/kubedb-catalog/templates/kafka/kafka-3.5.2.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.5.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.5.2'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.5.2'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.5.2'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.5.2
---
# Source: kubedb/charts/kubedb-catalog/templates/kafka/kafka-3.6.0.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.6.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.6.0'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.6.0'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.6.0'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.6.0
---
# Source: kubedb/charts/kubedb-catalog/templates/kafka/kafka-3.6.1.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: KafkaVersion
metadata:
  name: '3.6.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  connectCluster:
    image: 'ghcr.io/appscode-images/kafka-connect-cluster:3.6.1'
  cruiseControl:
    image: 'ghcr.io/appscode-images/kafka-cruise-control:3.6.1'
  db:
    image: 'ghcr.io/appscode-images/kafka-kraft:3.6.1'
  podSecurityPolicies:
    databasePolicyName: kafka-db
  securityContext:
    runAsUser: 1001
  version: 3.6.1
---
# Source: kubedb/charts/kubedb-catalog/templates/mariadb/mariadb-10.10.7.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.10.7'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_10.10.7-jammy'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.10.7-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.10.7
---
# Source: kubedb/charts/kubedb-catalog/templates/mariadb/mariadb-10.11.6.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.11.6'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_10.11.6-jammy'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.11.6-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.11.6
---
# Source: kubedb/charts/kubedb-catalog/templates/mariadb/mariadb-10.4.32.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.4.32'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_10.4.32-focal'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.4.32-focal'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.4.32
---
# Source: kubedb/charts/kubedb-catalog/templates/mariadb/mariadb-10.5.23.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.5.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_10.5.23-focal'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.5.23-focal'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.5.23
---
# Source: kubedb/charts/kubedb-catalog/templates/mariadb/mariadb-10.6.16.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '10.6.16'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_10.6.16-focal'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:10.6.16-focal'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 10.6.16
---
# Source: kubedb/charts/kubedb-catalog/templates/mariadb/mariadb-11.0.4.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '11.0.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_11.0.4-jammy'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:11.0.4-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 11.0.4
---
# Source: kubedb/charts/kubedb-catalog/templates/mariadb/mariadb-11.1.3.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '11.1.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_11.1.3-jammy'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:11.1.3-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 11.1.3
---
# Source: kubedb/charts/kubedb-catalog/templates/mariadb/mariadb-11.2.2.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MariaDBVersion
metadata:
  name: '11.2.2'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mariadb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mariadb-archiver:v0.4.0_11.2.2-jammy'
  coordinator:
    image: 'ghcr.io/kubedb/mariadb-coordinator:v0.26.0'
  db:
    image: 'ghcr.io/appscode-images/mariadb:11.2.2-jammy'
  exporter:
    image: 'prom/mysqld-exporter:v0.13.0'
  initContainer:
    image: 'ghcr.io/kubedb/mariadb-init:0.5.1'
  podSecurityPolicies:
    databasePolicyName: maria-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mariadb-backup-10.5.8
      restoreTask:
        name: mariadb-restore-10.5.8
  version: 11.2.2
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-4.2.24-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '4.2.24'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:4.2.24'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.2.3
      restoreTask:
        name: mongodb-restore-4.2.3
  updateConstraints:
    allowlist:
    - '>= 4.4.0, < 5.0.0'
  version: 4.2.24
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-4.2.24-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-4.2.24'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'percona/percona-server-mongodb:4.2.24'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.4.6
      restoreTask:
        name: mongodb-restore-4.4.6
  updateConstraints:
    allowlist:
    - '>= 5.0.0'
  version: 4.2.24
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-4.4.26-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '4.4.26'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:4.4.26'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.4.6
      restoreTask:
        name: mongodb-restore-4.4.6
  updateConstraints:
    allowlist:
    - '>= 5.0.0'
  version: 4.4.26
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-4.4.26-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-4.4.26'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'percona/percona-server-mongodb:4.4.26'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.4.6
      restoreTask:
        name: mongodb-restore-4.4.6
  updateConstraints:
    allowlist:
    - '>= 5.0.0'
  version: 4.4.26
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-5.0.23-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '5.0.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:5.0.23'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-5.0.15
      restoreTask:
        name: mongodb-restore-5.0.15
  version: 5.0.23
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-5.0.23-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-5.0.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'percona/percona-server-mongodb:5.0.23'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 5.0.23
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-5.0.26-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '5.0.26'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:5.0.26'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:4.2-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-5.0.15
      restoreTask:
        name: mongodb-restore-5.0.15
  version: 5.0.26
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-6.0.12-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '6.0.12'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:6.0.12'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v9'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 6.0.12
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-6.0.12-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-6.0.12'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'percona/percona-server-mongodb:6.0.12'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v10'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 6.0.12
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-7.0.4-percona.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: 'percona-7.0.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'percona/percona-server-mongodb:7.0.4'
  distribution: Percona
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v10'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 0
    runAsUser: 1001
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 7.0.4
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-7.0.5-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '7.0.5'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:7.0.5'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v10'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 7.0.5
---
# Source: kubedb/charts/kubedb-catalog/templates/mongodb/mongodb-7.0.8-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '7.0.8'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mongodb-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/wal-g:v2024.5.24_mongo'
  db:
    image: 'ghcr.io/appscode-images/mongo:7.0.8'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mongodb_exporter:v0.40.0'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mongodb-init:6.0-v10'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsGroup: 999
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mongodb-backup-6.0.5
      restoreTask:
        name: mongodb-restore-6.0.5
  version: 7.0.8
---
# Source: kubedb/charts/kubedb-webhook-server/templates/autoscaler/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.autoscaling.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-autoscaler
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mongodbautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/mongodbautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["autoscaling.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbautoscalers"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: elasticsearchautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/elasticsearchautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["autoscaling.kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearchautoscalers"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: kafkaautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/kafkaautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["kafkaautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mariadbautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/mariadbautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["mariadbautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mysqlautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/mysqlautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["mysqlautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: postgresautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/postgresautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["postgresautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redisautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/redisautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["redisautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redissentinelautoscalerwebhook.mutators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.autoscaling.kubedb.com/v1alpha1/redissentinelautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["redissentinelautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb/charts/kubedb-webhook-server/templates/dashboard/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.elasticsearch.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-dashboard
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: elasticsearchdashboardwebhook.mutators.elasticsearch.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.elasticsearch.kubedb.com/v1alpha1/elasticsearchdashboardwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["elasticsearch.kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearchdashboards"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb/charts/kubedb-webhook-server/templates/ops-manager/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.ops.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mysqlopsrequestwebhook.mutators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.ops.kubedb.com/v1alpha1/mysqlopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqlopsrequests"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb/charts/kubedb-webhook-server/templates/provisioner/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: elasticsearchwebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/elasticsearchwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: postgreswebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/postgreswebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mysqlwebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mysqlwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mongodbwebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mongodbwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: rediswebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/rediswebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redissentinelwebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/redissentinelwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["redissentinels"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mariadbwebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/mariadbwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mariadbs"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: kafkawebhook.mutators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kubedb.com/v1alpha1/kafkawebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: [ "kubedb.com" ]
      apiVersions: [ "*" ]
      resources: [ "kafkas" ]
      operations: [ "CREATE", "UPDATE" ]
  admissionReviewVersions: [ "v1beta1" ]
  failurePolicy: Ignore
  sideEffects: None
- name: connectclusterwebhook.mutators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kafka.kubedb.com/v1alpha1/connectclusterwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: [ "kafka.kubedb.com" ]
      apiVersions: [ "*" ]
      resources: [ "connectclusters" ]
      operations: [ "CREATE", "UPDATE" ]
  admissionReviewVersions: [ "v1beta1" ]
  failurePolicy: Ignore
  sideEffects: None
- name: connectorwebhook.mutators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kafka.kubedb.com/v1alpha1/connectorwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: [ "kafka.kubedb.com" ]
      apiVersions: [ "*" ]
      resources: [ "connectors" ]
      operations: [ "CREATE", "UPDATE" ]
  admissionReviewVersions: [ "v1beta1" ]
  failurePolicy: Ignore
  sideEffects: None
- name: schemaregistrywebhook.mutators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.kafka.kubedb.com/v1alpha1/schemaregistrywebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: [ "kafka.kubedb.com" ]
      apiVersions: [ "*" ]
      resources: [ "schemaregistries" ]
      operations: [ "CREATE", "UPDATE" ]
  admissionReviewVersions: [ "v1beta1" ]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb/charts/kubedb-webhook-server/templates/schema-manager/mutating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutators.schema.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-schema-manager
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mysqldatabasewebhook.mutators.schema.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.schema.kubedb.com/v1alpha1/mysqldatabasewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["schema.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqldatabases"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mongodbdatabasewebhook.mutators.schema.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/mutators.schema.kubedb.com/v1alpha1/mongodbdatabasewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["schema.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbdatabases"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb/charts/petset/templates/webhook-server/mutating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: my-release-petset
  labels:
    helm.sh/chart: petset-v2024.2.11
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-release-petset-webhook
        namespace: kubedb-v2024.6.4.tgz
        path: /mutate-apps-k8s-appscode-com-v1-petset
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: petsets.apps.k8s.appscode.com
    rules:
      - apiGroups:
          - apps.k8s.appscode.com
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - petsets
    sideEffects: None
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/mysql-5.7.42-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '5.7.42-debian'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_5.7.44'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:5.7.42-debian'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:5.7-v4'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-5.7.25
      restoreTask:
        name: mysql-restore-5.7.25
  updateConstraints:
    denylist:
      groupReplication:
      - < 5.7.42
      standalone:
      - < 5.7.42
  version: 5.7.42
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/mysql-5.7.44-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '5.7.44'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_5.7.44'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:5.7.44-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:5.7-v4'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-5.7.25
      restoreTask:
        name: mysql-restore-5.7.25
  updateConstraints:
    denylist:
      groupReplication:
      - < 5.7.44
      standalone:
      - < 5.7.44
  version: 5.7.44
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/mysql-8.0.31-mysql.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.0.31-innodb'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_8.0.35'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.0.31-oracle'
  distribution: MySQL
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  router:
    image: 'mysql/mysql-router:8.0.31'
  routerInitContainer:
    image: 'ghcr.io/kubedb/mysql-router-init:v0.24.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.0.31
      standalone:
      - < 8.0.31
  version: 8.0.31
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/mysql-8.0.35-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.0.35'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_8.0.35'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.0.35-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.0.35
      standalone:
      - < 8.0.35
  version: 8.0.35
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/mysql-8.0.36-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.0.36'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_8.0.35'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.0.36-debian'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.0.36
      standalone:
      - < 8.0.36
  version: 8.0.36
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/mysql-8.1.0-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.1.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_8.1.0'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.1.0-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.1.0
      standalone:
      - < 8.1.0
  version: 8.1.0
---
# Source: kubedb/charts/kubedb-catalog/templates/mysql/mysql-8.2.0-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.2.0'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/mysql-archiver:v0.7.0_8.2.0'
  coordinator:
    image: 'ghcr.io/kubedb/mysql-coordinator:v0.24.0'
  db:
    image: 'ghcr.io/appscode-images/mysql:8.2.0-oracle'
  distribution: Official
  exporter:
    image: 'ghcr.io/kubedb/mysqld-exporter:v0.13.1'
  gitSyncer:
    image: 'registry.k8s.io/git-sync/git-sync:v4.2.1'
  initContainer:
    image: 'ghcr.io/kubedb/mysql-init:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: 'ghcr.io/kubedb/replication-mode-detector:v0.33.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.2.0
      standalone:
      - < 8.2.0
  version: 8.2.0
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-10.23-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '10.23'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:10.23-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-10.14
      restoreTask:
        name: postgres-restore-10.14
  updateConstraints:
    allowlist:
    - '>= 11.14, <= 14.1'
  version: "10.23"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-10.23-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '10.23-bullseye'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bullseye
    image: 'ghcr.io/appscode-images/postgres:10.23-bullseye'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-10.14
      restoreTask:
        name: postgres-restore-10.14
  updateConstraints:
    allowlist:
    - '>= 11.14, <= 14.1'
  version: "10.23"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-11.22-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '11.22'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_11.22-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:11.22-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-11.9
      restoreTask:
        name: postgres-restore-11.9
  updateConstraints:
    allowlist:
    - '>= 12.9, <= 14.1'
  version: "11.22"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-11.22-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '11.22-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_11.22-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:11.22-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-11.9
      restoreTask:
        name: postgres-restore-11.9
  updateConstraints:
    allowlist:
    - '>= 12.9, <= 14.1'
  version: "11.22"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-11.22-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '11-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_11.22-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    image: 'postgis/postgis:11-3.3'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-11.9
      restoreTask:
        name: postgres-restore-11.9
  version: "11.22"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-12.17-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '12.17'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_12.17-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:12.17-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-12.4
      restoreTask:
        name: postgres-restore-12.4
  updateConstraints:
    allowlist:
    - "13.5"
    - "14.1"
  version: "12.17"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-12.17-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '12.17-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_12.17-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:12.17-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-12.4
      restoreTask:
        name: postgres-restore-12.4
  updateConstraints:
    allowlist:
    - "13.5"
    - "14.1"
  version: "12.17"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-12.18-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '12-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_12.17-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    image: 'postgis/postgis:12-3.4'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-12.4
      restoreTask:
        name: postgres-restore-12.4
  version: "12.18"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-13.13-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '13.13'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_13.13-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:13.13-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  updateConstraints:
    allowlist:
    - "14.1"
  version: "13.13"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-13.13-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '13.13-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_13.13-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:13.13-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  updateConstraints:
    allowlist:
    - "14.1"
  version: "13.13"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-13.14-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '13-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_13.13-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    image: 'postgis/postgis:13-3.4'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  version: "13.14"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-13.14-timescaledb.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.14.2-pg13'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_13.13-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'timescale/timescaledb:2.14.2-pg13-oss'
  distribution: TimescaleDB
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-13.1
      restoreTask:
        name: postgres-restore-13.1
  version: "13.14"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-14.10-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '14.10'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_14.10-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:14.10-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.10"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-14.10-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '14.10-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_14.10-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:14.10-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.10"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-14.11-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '14-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_14.10-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    image: 'postgis/postgis:14-3.4'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.11"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-14.11-timescaledb.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.14.2-pg14'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_14.10-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'timescale/timescaledb:2.14.2-pg14-oss'
  distribution: TimescaleDB
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-14.0
      restoreTask:
        name: postgres-restore-14.0
  version: "14.11"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-15.5-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '15.5'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_15.5-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:15.5-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "14.2"
  version: "15.5"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-15.5-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '15.5-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_15.5-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:15.5-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "14.2"
  version: "15.5"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-15.6-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.14.2-pg15'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_15.5-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'timescale/timescaledb:2.14.2-pg15-oss'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "14.2"
  version: "15.6"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-15.6-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '15-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_15.5-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bullseye
    image: 'postgis/postgis:15-3.4'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-15.1
      restoreTask:
        name: postgres-restore-15.1
  updateConstraints:
    allowlist:
    - "14.2"
  version: "15.6"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-16.1-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '16.1'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_16.1-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'ghcr.io/appscode-images/postgres:16.1-alpine'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-16.1
      restoreTask:
        name: postgres-restore-16.1
  updateConstraints:
    allowlist:
    - "16.1"
  version: "16.1"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-16.1-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '16.1-bookworm'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_16.1-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bookworm
    image: 'ghcr.io/appscode-images/postgres:16.1-bookworm'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-16.1
      restoreTask:
        name: postgres-restore-16.1
  updateConstraints:
    allowlist:
    - "16.2"
  version: "16.1"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-16.2-official.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: 'timescaledb-2.14.2-pg16'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_16.1-alpine'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: alpine
    image: 'timescale/timescaledb:2.14.2-pg16-oss'
  distribution: Official
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: false
    runAsUser: 70
  stash:
    addon:
      backupTask:
        name: postgres-backup-16.1
      restoreTask:
        name: postgres-restore-16.1
  updateConstraints:
    allowlist:
    - "16.2"
  version: "16.2"
---
# Source: kubedb/charts/kubedb-catalog/templates/postgres/postgres-16.2-postgis.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: PostgresVersion
metadata:
  name: '16.2-bullseye-postgis'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  archiver:
    addon:
      name: postgres-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: 'ghcr.io/kubedb/postgres-archiver:v0.7.0_16.1-bookworm'
  coordinator:
    image: 'ghcr.io/kubedb/pg-coordinator:v0.30.0'
  db:
    baseOS: bullseye
    image: 'postgis/postgis:16-3.4'
  distribution: PostGIS
  exporter:
    image: 'prometheuscommunity/postgres-exporter:v0.15.0'
  initContainer:
    image: 'ghcr.io/kubedb/postgres-init:0.13.0'
  podSecurityPolicies:
    databasePolicyName: postgres-db
  securityContext:
    runAsAnyNonRoot: true
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: postgres-backup-16.1
      restoreTask:
        name: postgres-restore-16.1
  updateConstraints:
    allowlist:
    - "16.2"
  version: "16.2"
---
# Source: kubedb/charts/kubedb-catalog/templates/redis/redis-4.0.11.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '4.0.11'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/kubedb/redis:4.0.11'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:v0.21.1'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  version: 4.0.11
---
# Source: kubedb/charts/kubedb-catalog/templates/redis/redis-5.0.14.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '5.0.14'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:5.0.14-bullseye'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-5.0.13
      restoreTask:
        name: redis-restore-5.0.13
  version: 5.0.14
---
# Source: kubedb/charts/kubedb-catalog/templates/redis/redis-6.0.20.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '6.0.20'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:6.0.20-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-6.2.5
      restoreTask:
        name: redis-restore-6.2.5
  version: 6.0.20
---
# Source: kubedb/charts/kubedb-catalog/templates/redis/redis-6.2.14.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '6.2.14'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:6.2.14-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-6.2.5
      restoreTask:
        name: redis-restore-6.2.5
  version: 6.2.14
---
# Source: kubedb/charts/kubedb-catalog/templates/redis/redis-7.0.14.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.0.14'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.0.14-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.0.14
---
# Source: kubedb/charts/kubedb-catalog/templates/redis/redis-7.0.15.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.0.15'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.0.15-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.0.15
---
# Source: kubedb/charts/kubedb-catalog/templates/redis/redis-7.2.3.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.2.3'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.2.3-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.2.3
---
# Source: kubedb/charts/kubedb-catalog/templates/redis/redis-7.2.4.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: RedisVersion
metadata:
  name: '7.2.4'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  coordinator:
    image: 'ghcr.io/kubedb/redis-coordinator:v0.25.0'
  db:
    image: 'ghcr.io/appscode-images/redis:7.2.4-bookworm'
  exporter:
    image: 'ghcr.io/kubedb/redis_exporter:1.58.0'
  initContainer:
    image: 'ghcr.io/kubedb/redis-init:0.8.0'
  podSecurityPolicies:
    databasePolicyName: redis-db
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: redis-backup-7.0.5
      restoreTask:
        name: redis-restore-7.0.5
  version: 7.2.4
---
# Source: kubedb/charts/kubedb-catalog/templates/schemaregistry/schemaregistry-2.5.11-apicurio.yaml
apiVersion: catalog.kubedb.com/v1alpha1
kind: SchemaRegistryVersion
metadata:
  name: '2.5.11.final'
  labels:
    helm.sh/chart: kubedb-catalog-v2024.6.4
    app.kubernetes.io/name: kubedb-catalog
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2024.6.4"
    app.kubernetes.io/managed-by: Helm
spec:
  distribution: Apicurio
  inMemory:
    image: 'apicurio/apicurio-registry-mem:2.5.11.Final'
  registry:
    image: 'apicurio/apicurio-registry-kafkasql:2.5.11.Final'
  securityContext:
    runAsUser: 1001
  version: 2.5.11
---
# Source: kubedb/charts/kubedb-webhook-server/templates/autoscaler/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.autoscaling.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-autoscaler
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mongodbautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/mongodbautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["autoscaling.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbautoscalers"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: elasticsearchautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/elasticsearchautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["autoscaling.kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearchautoscalers"]
    operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: kafkaautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/kafkaautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["kafkaautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mariadbautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/mariadbautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["mariadbautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mysqlautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/mysqlautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["mysqlautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: postgresautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/postgresautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["postgresautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redisautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/redisautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["redisautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redissentinelautoscalerwebhook.validators.autoscaling.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.autoscaling.kubedb.com/v1alpha1/redissentinelautoscalerwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["autoscaling.kubedb.com"]
      apiVersions: ["*"]
      resources: ["redissentinelautoscalers"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb/charts/kubedb-webhook-server/templates/dashboard/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.elasticsearch.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-dashboard
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: elasticsearchdashboardwebhook.validators.elasticsearch.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.elasticsearch.kubedb.com/v1alpha1/elasticsearchdashboardwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["elasticsearch.kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearchdashboards"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb/charts/kubedb-webhook-server/templates/ops-manager/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.ops.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mysqlopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mysqlopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqlopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mongodbopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mongodbopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: elasticsearchopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/elasticsearchopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearchopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: kafkaopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/kafkaopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["kafkaopsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: redisopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/redisopsrequestwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["redisopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: publisherwebhook.validators.postgres.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.postgres.kubedb.com/v1alpha1/publisherwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["postgres.kubedb.com"]
    apiVersions: ["*"]
    resources: ["publishers"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: subscriberwebhook.validators.postgres.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.postgres.kubedb.com/v1alpha1/subscriberwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["postgres.kubedb.com"]
    apiVersions: ["*"]
    resources: ["subscribers"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb/charts/kubedb-webhook-server/templates/provisioner/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: namespacewebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/namespacewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: [""]
    apiVersions: ["*"]
    resources: ["namespaces"]
    operations: ["DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: elasticsearchwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/elasticsearchwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: postgreswebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/postgreswebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mysqlwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mysqlwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mongodbwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mongodbwebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: rediswebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/rediswebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: redissentinelwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/redissentinelwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["redissentinels"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mariadbwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mariadbwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["mariadbs"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: kafkawebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/kafkawebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["kafkas"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: connectclusterwebhook.validators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kafka.kubedb.com/v1alpha1/connectclusterwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kafka.kubedb.com"]
      apiVersions: ["*"]
      resources: ["connectclusters"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: connectorwebhook.validators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kafka.kubedb.com/v1alpha1/connectorwebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kafka.kubedb.com"]
      apiVersions: ["*"]
      resources: ["connectors"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: schemaregistrywebhook.validators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kafka.kubedb.com/v1alpha1/schemaregistrywebhooks
    caBundle: dW5rbm93bg==
  rules:
    - apiGroups: ["kafka.kubedb.com"]
      apiVersions: ["*"]
      resources: ["schemaregistries"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb/charts/kubedb-webhook-server/templates/schema-manager/validating-webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.schema.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-schema-manager
    helm.sh/chart: kubedb-webhook-server-v0.22.0
    app.kubernetes.io/name: kubedb-webhook-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.22.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
- name: mysqldatabasewebhook.validators.schema.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.schema.kubedb.com/v1alpha1/mysqldatabasewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["schema.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqldatabases"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: mongodbdatabasewebhook.validators.schema.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.schema.kubedb.com/v1alpha1/mongodbdatabasewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["schema.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbdatabases"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
- name: postgresdatabasewebhook.validators.schema.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.schema.kubedb.com/v1alpha1/postgresdatabasewebhooks
    caBundle: dW5rbm93bg==
  rules:
  - apiGroups: ["schema.kubedb.com"]
    apiVersions: ["*"]
    resources: ["postgresdatabases"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
---
# Source: kubedb/charts/petset/templates/webhook-server/validating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: my-release-petset
  labels:
    helm.sh/chart: petset-v2024.2.11
    app.kubernetes.io/name: petset
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.5"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: my-release-petset-webhook
        namespace: kubedb-v2024.6.4.tgz
        path: /validate-apps-k8s-appscode-com-v1-petset
      caBundle: bm90LWNhLWNlcnQ=
    failurePolicy: Fail
    name: petsets.apps.k8s.appscode.com
    rules:
      - apiGroups:
          - apps.k8s.appscode.com
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - petsets
    sideEffects: None
---
# Source: kubedb/charts/kubedb-crd-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubedb-crd-manager
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.1.0
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "0"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
automountServiceAccountToken:
---
# Source: kubedb/charts/kubedb-autoscaler/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb/charts/kubedb-autoscaler/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb-autoscaler addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb/charts/kubedb-autoscaler/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:autoscaler:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb/charts/kubedb-autoscaler/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:autoscaler:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
---
# Source: kubedb/charts/kubedb-autoscaler/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:autoscaler:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - autoscaling.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/charts/kubedb-crd-manager/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubedb-crd-manager
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.1.0
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "1"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
---
# Source: kubedb/charts/kubedb-ops-manager/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubedb/charts/kubedb-ops-manager/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb/charts/kubedb-ops-manager/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb-ops-manager addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb/charts/kubedb-ops-manager/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:ops:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - ops.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb/charts/kubedb-ops-manager/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:ops:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - ops.kubedb.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
---
# Source: kubedb/charts/kubedb-ops-manager/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:ops:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - ops.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/charts/kubedb-provisioner/templates/appcatalog-user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:appcatalog:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb/charts/kubedb-provisioner/templates/appcatalog-user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:appcatalog:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/charts/kubedb-provisioner/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubedb/charts/kubedb-provisioner/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: kubedb/charts/kubedb-provisioner/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
---
# Source: kubedb/charts/kubedb-provisioner/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb/charts/kubedb-provisioner/templates/user-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  resources:
  - "*"
  verbs: ["create", "get", "list", "watch", "update", "patch"]
- apiGroups:
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/charts/kubedb-provisioner/templates/user-roles.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/charts/kubedb-webhook-server/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - policy
  verbs: ["use"]
  resources:
  - podsecuritypolicies
---
# Source: kubedb/charts/petset/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-release-petset:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - apps.k8s.appscode.com
  resources:
  - "*"
  verbs: ["*"]
---
# Source: kubedb/charts/petset/templates/rbac/user_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:my-release-petset:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - apps.k8s.appscode.com
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: kubedb/charts/kubedb-crd-manager/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubedb-crd-manager
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.1.0
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "2"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubedb-crd-manager
subjects:
- kind: ServiceAccount
  name: my-release-kubedb-crd-manager
  namespace: kubedb-v2024.6.4.tgz
---
# Source: kubedb/charts/kubedb-ops-manager/templates/gerbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kubedb
---
# Source: kubedb/charts/kubedb-provisioner/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kubedb
---
# Source: kubedb/charts/kubedb-webhook-server/templates/garbage-collector-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb:garbage-collector:psp
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kubedb
---
# Source: kubedb/charts/kubedb-crd-manager/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-kubedb-crd-manager
  namespace: kubedb-v2024.6.4.tgz
  labels:
    helm.sh/chart: kubedb-crd-manager-v0.1.0
    app.kubernetes.io/name: kubedb-crd-manager
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook-weight": "3"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  ttlSecondsAfterFinished: 300
  template:
    metadata:
    spec:
      imagePullSecrets:
        []
      securityContext:
        {}
      serviceAccountName: my-release-kubedb-crd-manager
      initContainers:
        - name: kubedb-crd-manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/kubedb/kubedb-crd-manager:v0.1.0"
          imagePullPolicy: IfNotPresent
          args:
            - run
            - --v=3
            - --remove-unused-crds=false
            - --feature-gates=ClickHouse=false
            - --feature-gates=Druid=false
            - --feature-gates=Elasticsearch=true
            - --feature-gates=FerretDB=false
            - --feature-gates=Kafka=true
            - --feature-gates=MSSQLServer=false
            - --feature-gates=MariaDB=true
            - --feature-gates=Memcached=false
            - --feature-gates=MongoDB=true
            - --feature-gates=MySQL=true
            - --feature-gates=PerconaXtraDB=false
            - --feature-gates=PgBouncer=false
            - --feature-gates=Pgpool=false
            - --feature-gates=Postgres=true
            - --feature-gates=ProxySQL=false
            - --feature-gates=RabbitMQ=false
            - --feature-gates=Redis=true
            - --feature-gates=Singlestore=false
            - --feature-gates=Solr=false
            - --feature-gates=ZooKeeper=false
          resources:
            {}
      containers:
        - name: verifier
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/kubedb/kubedb-crd-manager:v0.1.0"
          imagePullPolicy: IfNotPresent
          args:
            - verify
            - --v=3
            - --feature-gates=ClickHouse=false
            - --feature-gates=Druid=false
            - --feature-gates=Elasticsearch=true
            - --feature-gates=FerretDB=false
            - --feature-gates=Kafka=true
            - --feature-gates=MSSQLServer=false
            - --feature-gates=MariaDB=true
            - --feature-gates=Memcached=false
            - --feature-gates=MongoDB=true
            - --feature-gates=MySQL=true
            - --feature-gates=PerconaXtraDB=false
            - --feature-gates=PgBouncer=false
            - --feature-gates=Pgpool=false
            - --feature-gates=Postgres=true
            - --feature-gates=ProxySQL=false
            - --feature-gates=RabbitMQ=false
            - --feature-gates=Redis=true
            - --feature-gates=Singlestore=false
            - --feature-gates=Solr=false
            - --feature-gates=ZooKeeper=false
          resources:
            {}
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Never
