---
# Source: vrijbrp/charts/balie-ws/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-balie-ws
  labels:
    app.kubernetes.io/name: my-release-balie-ws
    app.kubernetes.io/part-of: my-release
    helm.sh/chart: balie-ws-0.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  applicatie.properties: |
    app_db_name=postgres
    app_db_server=my-vrijbrp-postgres-service
    app_db_port=5432
    app_db_schema=
    app_db_username=postgres
    app_db_password=!ChangeMe!
    app_db_sid=0000_test_personen_ws
    c_gem=1902
    s_gem=Demodam
    s_app=vrijBRP Balie WS
    proweb.authentication=http://my-release-balie-backend/personen
    procura.endpoint=https://burgerzaken.procura.nl
    # default parameters in database
    PARM_procura.db.tns-admin-dir=
    PARM_procura.db.custom-url=
    PARM_procura.db.custom-driver=
    PARM_procura.db.db=postgres
    PARM_procura.db.sid=0000_test_rvig_testdb
    PARM_procura.db.server=my-vrijbrp-postgres-service
    PARM_procura.db.port=5432
    PARM_procura.db.username=postgres
    PARM_procura.db.password=!ChangeMe!
    PARM_procura.db.connections.read.min=2
    PARM_procura.db.connections.read.max=5
  tnsnames.ora: |
    brp = ( DESCRIPTION = (ENABLE = broken) ( ADDRESS_LIST =
    ( ADDRESS      = ( HOST = my-vrijbrp-postgres-service  )( PORT = 5432 )( PROTOCOL = TCP )))
    ( CONNECT_DATA = ( SERVICE_NAME = 0000_test_rvig_testdb )))
---
# Source: vrijbrp/charts/balie/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-balie
  labels:
    app.kubernetes.io/name: my-release-balie
    app.kubernetes.io/part-of: my-release
    helm.sh/chart: balie-0.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  applicatie.properties: |
    app_db_name=postgres
    app_db_server=my-vrijbrp-postgres-service
    app_db_port=5432
    app_db_schema=
    app_db_username=postgres
    app_db_password=!ChangeMe!
    app_db_sid=0000_test_personen
    crypt.version1.key=ThisIsTheDefaultHash
    license.key=
    loglevel=
    c_gem=1902
    s_gem=Demodam
    s_app=vrijBRP Balie
    PARM_java_ple_server_url=http://my-release-balie-ws-backend/personen-ws
---
# Source: vrijbrp/charts/hcbrp/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-hcbrp
  labels:
    app.kubernetes.io/name: my-release-hcbrp
    app.kubernetes.io/part-of: my-release
    helm.sh/chart: hcbrp-0.1.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  application.properties: |
    server.servlet.context-path=/haal-centraal-brp-bevragen
    server.use-forward-headers=true
    procura.personrecordsource.url=http://my-release-balie-ws-backend/personen-ws/rest
---
# Source: vrijbrp/templates/postgres-env-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-postgres-env
  labels:
    app.kubernetes.io/name: my-release-vrijbrp
    app.kubernetes.io/part-of: my-release
    helm.sh/chart: vrijbrp-0.1.5
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  PGHOST: "my-vrijbrp-postgres-service"
  PGPORT: "5432"
  PGUSER: "postgres"
  PGPASSWORD: "!ChangeMe!"
---
# Source: vrijbrp/charts/balie-ws/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-balie-ws
  labels:
    app.kubernetes.io/name: my-release-balie-ws
    app.kubernetes.io/part-of: my-release
    helm.sh/chart: balie-ws-0.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  log4j.properties: |
    log4j.rootCategory=INFO, CONSOLE
    log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
    log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
    log4j.appender.CONSOLE.layout.ConversionPattern=%d{dd MMM yyyy HH\:mm\:ss} [%-5p] - %m%n
---
# Source: vrijbrp/charts/balie-ws/templates/nginx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-balie-ws-personen-ws-nginx
  labels:
    app.kubernetes.io/name: my-release-balie-ws-personen-ws-nginx
    app.kubernetes.io/part-of: my-release
    helm.sh/chart: balie-ws-0.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  default.conf.template: |
    server {
      location /personen-ws {
         proxy_pass http://${NGINX_HOST}:${NGINX_PORT}/personen-ws;
         proxy_set_header       Host   $http_host;
         client_max_body_size   100M;
      }
    }
---
# Source: vrijbrp/charts/balie/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-balie
  labels:
    app.kubernetes.io/name: my-release-balie
    app.kubernetes.io/part-of: my-release
    helm.sh/chart: balie-0.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  log4j.properties: |
    log4j.rootCategory=INFO, CONSOLE
    log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
    log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
    log4j.appender.CONSOLE.layout.ConversionPattern=%d{dd MMM yyyy HH\:mm\:ss} [%-5p] - %m%n
---
# Source: vrijbrp/charts/balie/templates/nginx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-balie-personen-nginx
  labels:
    app.kubernetes.io/name: my-release-balie-personen-nginx
    app.kubernetes.io/part-of: my-release
    helm.sh/chart: balie-0.1.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  default.conf.template: |
    server {
      location /personen {
         proxy_pass http://${NGINX_HOST}:${NGINX_PORT}/personen;
         proxy_set_header       Host   $http_host;
         client_max_body_size   100M;
      }
    }
---
# Source: vrijbrp/charts/hcbrp/templates/nginx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-hcbrp-hcbrp-nginx
  labels:
    app.kubernetes.io/name: my-release-hcbrp-hcbrp-nginx
    app.kubernetes.io/part-of: my-release
    helm.sh/chart: hcbrp-0.1.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  default.conf.template: |
    server {
      location /haal-centraal-brp-bevragen {
        proxy_pass http://${NGINX_HOST}:${NGINX_PORT}/haal-centraal-brp-bevragen;
        proxy_set_header       Host   $http_host;
        client_max_body_size   100M;
      }
    }
---
# Source: vrijbrp/charts/balie-ws/templates/nginx.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-balie-ws
  labels:
    helm.sh/chart: balie-ws-0.1.1
    app.kubernetes.io/name: balie-ws
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: balie-ws-nginx
    app.kubernetes.io/instance: my-release
---
# Source: vrijbrp/charts/balie-ws/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-balie-ws-backend
  labels:
    helm.sh/chart: balie-ws-0.1.1
    app.kubernetes.io/name: balie-ws
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: balie-ws
    app.kubernetes.io/instance: my-release
---
# Source: vrijbrp/charts/balie/templates/nginx.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-balie
  labels:
    helm.sh/chart: balie-0.1.1
    app.kubernetes.io/name: balie
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: balie-nginx
    app.kubernetes.io/instance: my-release
---
# Source: vrijbrp/charts/balie/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-balie-backend
  labels:
    helm.sh/chart: balie-0.1.1
    app.kubernetes.io/name: balie
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: balie
    app.kubernetes.io/instance: my-release
---
# Source: vrijbrp/charts/hcbrp/templates/nginx.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-hcbrp
  labels:
    helm.sh/chart: hcbrp-0.1.0
    app.kubernetes.io/name: hcbrp
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hcbrp-nginx
    app.kubernetes.io/instance: my-release
---
# Source: vrijbrp/charts/hcbrp/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-hcbrp-backend
  labels:
    helm.sh/chart: hcbrp-0.1.0
    app.kubernetes.io/name: hcbrp
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hcbrp
    app.kubernetes.io/instance: my-release
---
# Source: vrijbrp/charts/balie-ws/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-balie-ws
  labels:
    helm.sh/chart: balie-ws-0.1.1
    app.kubernetes.io/name: balie-ws
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: balie-ws
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: balie-ws
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      volumes:
      - name: config
        secret:
          secretName: my-release-balie-ws
      - name: oracle-config
        secret:
          secretName: my-release-balie-ws
      - name: log4j
        configMap:
          name: my-release-balie-ws
      initContainers:
        - name: my-release-balie-ws-postgres-init
          image: "vrijbrp/postgres-init:1.0.1"
          imagePullPolicy: Always
          env:
            - name: "PREFIX_DB"
              value: 0000_test
            - name: "BRP_DB"
              value: "personen_ws,rvig_testdb"
          envFrom:
            - secretRef:
                name: my-release-postgres-env
      containers:
        - name: my-release-balie-ws
          securityContext:
            {}
          image: "vrijbrp/balie-ws:develop"
          imagePullPolicy: Always
          env:
            - name: "HUB_ENABLED"
              value: "false"
            - name: "HUB_DEFAULT_LOGIN"
              value: "false"
            - name: "HUB_CHECK_AUTH_HEADER"
              value: "false"
            - name: "HUB_URL"
              value: ""
            - name: "HUB_API_URL"
              value: ""
            - name: "HUB_CLIENT_ID"
              value: ""
            - name: "HUB_CLIENT_SECRET"
              value: ""
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
           initialDelaySeconds: 5
           httpGet:
             path: /personen-ws/rest/v2/info
             port: http
          livenessProbe:
           initialDelaySeconds: 30
           httpGet:
             path: /personen-ws/rest/v2/info
             port: http
          volumeMounts:
            - name: config
              mountPath: /usr/local/tomcat/procura/applicaties/personen-ws/config/applicatie.properties
              subPath: applicatie.properties
            - name: oracle-config
              mountPath: /oracle/config/tnsnames.ora
              subPath: tnsnames.ora
            - name: log4j
              readOnly: true
              mountPath: /usr/local/tomcat/lib/log4j.properties
              subPath: log4j.properties
          resources:
            {}
---
# Source: vrijbrp/charts/balie-ws/templates/nginx.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-balie-ws-nginx
  labels:
    helm.sh/chart: balie-ws-0.1.1
    app.kubernetes.io/name: balie-ws
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: balie-ws-nginx
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: balie-ws-nginx
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      volumes:
        - name: nginx-config
          configMap:
            name: my-release-balie-ws-personen-ws-nginx
      containers:
        - name: my-release-balie-ws-nginx
          securityContext:
            {}
          image: "docker.io/nginx:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          readinessProbe:
           initialDelaySeconds: 5
           httpGet:
             path: /personen-ws/rest/v2/info
             port: http
          livenessProbe:
           initialDelaySeconds: 30
           httpGet:
             path: /personen-ws/rest/v2/info
             port: http
          env:
            - name: NGINX_HOST
              value: my-release-balie-ws-backend
            - name: NGINX_PORT
              value: "80"
          volumeMounts:
            - name: nginx-config
              subPath: default.conf.template
              readOnly: true
              mountPath: /etc/nginx/templates/default.conf.template
          resources:
            {}
---
# Source: vrijbrp/charts/balie/templates/nginx.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-balie-nginx
  labels:
    helm.sh/chart: balie-0.1.1
    app.kubernetes.io/name: balie
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: balie-nginx
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: balie-nginx
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      volumes:
        - name: nginx-config
          configMap:
            name: my-release-balie-personen-nginx
      containers:
        - name: my-release-balie-nginx
          securityContext:
            {}
          image: "docker.io/nginx:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          readinessProbe:
           initialDelaySeconds: 5
           httpGet:
             path: /personen/rest/v2/info
             port: http
          livenessProbe:
           initialDelaySeconds: 30
           httpGet:
             path: /personen/rest/v2/info
             port: http
          env:
            - name: NGINX_HOST
              value: my-release-balie-backend
            - name: NGINX_PORT
              value: "80"
          volumeMounts:
            - name: nginx-config
              subPath: default.conf.template
              readOnly: true
              mountPath: /etc/nginx/templates/default.conf.template
          resources:
            {}
---
# Source: vrijbrp/charts/hcbrp/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-hcbrp
  labels:
    helm.sh/chart: hcbrp-0.1.0
    app.kubernetes.io/name: hcbrp
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: hcbrp
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hcbrp
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      volumes:
      - name: config
        secret:
          secretName: my-release-hcbrp
      containers:
        - name: my-release-hcbrp
          securityContext:
            {}
          image: "vrijbrp/haal-centraal-brp-bevragen:develop"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - name: config
              mountPath: /config/application.properties
              subPath: application.properties
          resources:
            {}
---
# Source: vrijbrp/charts/hcbrp/templates/nginx.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-hcbrp-nginx
  labels:
    helm.sh/chart: hcbrp-0.1.0
    app.kubernetes.io/name: hcbrp
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: hcbrp-nginx
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hcbrp-nginx
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      volumes:
        - name: nginx-config
          configMap:
            name: my-release-hcbrp-hcbrp-nginx
      containers:
        - name: my-release-hcbrp-nginx
          securityContext:
            {}
          image: "docker.io/nginx:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: NGINX_HOST
              value: my-release-hcbrp-backend
            - name: NGINX_PORT
              value: "80"
          volumeMounts:
            - name: nginx-config
              subPath: default.conf.template
              readOnly: true
              mountPath: /etc/nginx/templates/default.conf.template
          resources:
            {}
---
# Source: vrijbrp/charts/balie/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-balie
  labels:
    helm.sh/chart: balie-0.1.1
    app.kubernetes.io/name: balie
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.0"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: my-release-balie
  selector:
    matchLabels:
      app.kubernetes.io/name: balie
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: balie
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        {}
      volumes:
        - name: app
          persistentVolumeClaim:
            claimName: my-release-balie
        - name: config
          secret:
            secretName: my-release-balie
        - name: log4j
          configMap:
            name: my-release-balie
      initContainers:
        - name: my-release-balie-postgres-init-1
          image: "vrijbrp/postgres-init:1.0.1"
          imagePullPolicy: Always
          env:
            - name: "PREFIX_DB"
              value: 0000_test
            - name: "BRP_DB"
              value: "personen"
          envFrom:
            - secretRef:
                name: my-release-postgres-env
      containers:
        - name: my-release-balie
          securityContext:
            {}
          image: "vrijbrp/balie:develop"
          imagePullPolicy: Always
          env:
            - name: "HUB_ENABLED"
              value: "false"
            - name: "HUB_DEFAULT_LOGIN"
              value: "false"
            - name: "HUB_CHECK_AUTH_HEADER"
              value: "false"
            - name: "HUB_URL"
              value: ""
            - name: "HUB_API_URL"
              value: ""
            - name: "HUB_CLIENT_ID"
              value: ""
            - name: "HUB_CLIENT_SECRET"
              value: ""
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
           initialDelaySeconds: 5
           httpGet:
             path: /personen/rest/v2/info
             port: http
          livenessProbe:
           initialDelaySeconds: 30
           httpGet:
             path: /personen/rest/v2/info
             port: http
          volumeMounts:
            - name: app
              mountPath: /usr/local/tomcat/procura/applicaties/personen
            - name: config
              mountPath: /usr/local/tomcat/procura/applicaties/personen/config/applicatie.properties
              subPath: applicatie.properties
            - name: log4j
              readOnly: true
              mountPath: /usr/local/tomcat/lib/log4j.properties
              subPath: log4j.properties
          resources:
            {}
  volumeClaimTemplates:
    - metadata:
        name: app
        annotations:
          volume.alpha.kubernetes.io/storage-class: default
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
---
# Source: vrijbrp/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: my-release-vrijbrp
  labels:
    helm.sh/chart: vrijbrp-0.1.5
    app.kubernetes.io/name: vrijbrp
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.27.1-SNAPSHOT"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /personen
            backend:
              serviceName: my-release-vrijbrp-balie
              servicePort: 80
          - path: /personen-ws
            backend:
              serviceName: my-release-vrijbrp-balie-ws
              servicePort: 80
          - path: /haal-centraal-brp-bevragen
            backend:
              serviceName: my-release-vrijbrp-hcbrp
              servicePort: 80
