---
# Source: boundary/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-boundary
  namespace: boundary-0.1.0.tgz
  labels:
    helm.sh/chart: boundary-0.1.0
    app.kubernetes.io/name: boundary
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: boundary/templates/worker-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-boundary-worker-config
  namespace: boundary-0.1.0.tgz
  labels:
    helm.sh/chart: boundary-0.1.0
    app.kubernetes.io/name: boundary
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: boundary-worker
  annotations:
data:
  boundary-config.hcl: |
    disable_mlock = true
    log_format    = "standard"
    
    worker {
      name        = "kubernetes-worker"
      description = "Boundary kubernetes-worker"
      controllers = ["my-release-boundary.boundary-0.1.0.tgz:9201"]
      public_addr = "localhost:9202"
    }

    listener "tcp" {
      address     = "0.0.0.0"
      purpose     = "proxy"
      tls_disable = true
    }
---
# Source: boundary/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-boundary
rules:
- apiGroups: ["batch","apps"]
  resources: ["jobs","deployments"]
  verbs: ["list", "get"]
- apiGroups: ["apps"]
  resources: ["deployments/scale"]
  verbs: ["patch"]
---
# Source: boundary/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-boundary
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-boundary
subjects:
- kind: ServiceAccount
  name: my-release-boundary
  namespace: boundary-0.1.0.tgz
---
# Source: boundary/templates/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-boundary
  namespace: boundary-0.1.0.tgz
  labels:
    helm.sh/chart: boundary-0.1.0
    app.kubernetes.io/name: boundary
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: boundary-controller
spec:
  type: ClusterIP
  ports:
    - port: 9200
      targetPort: api
      protocol: TCP
      name: api
    - port: 9201
      targetPort: cluster
      protocol: TCP
      name: cluster
  selector:
    app.kubernetes.io/name: boundary
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: boundary-controller
---
# Source: boundary/templates/worker-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-boundary-worker
  namespace: boundary-0.1.0.tgz
  labels:
    helm.sh/chart: boundary-0.1.0
    app.kubernetes.io/name: boundary
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: boundary-worker
spec:
  type: ClusterIP
  ports:
    - port: 9202
      targetPort: proxy
      protocol: TCP
      name: proxy
  selector:
    app.kubernetes.io/name: boundary
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: boundary-worker
---
# Source: boundary/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-boundary-controller
  namespace: boundary-0.1.0.tgz
  labels:
    helm.sh/chart: boundary-0.1.0
    app.kubernetes.io/name: boundary
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: boundary-controller
spec:
  replicas: 3
  strategy: 
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: boundary
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: boundary-controller
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: boundary
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: boundary-controller
    spec:
      serviceAccountName: my-release-boundary
      securityContext:
        {}
      initContainers:
        - name: boundary-init
          image: "groundnuty/k8s-wait-for:v1.6"
          imagePullPolicy: IfNotPresent
          args:
            - "job"
            - "my-release-boundary-init"
      containers:
        - name: boundary-controller
          securityContext:
            {}
          image: "hashicorp/boundary:0.8.1"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - "-c"
          args:
           - boundary server -config /boundary/boundary-config.hcl
          env:
            - name: HOSTNAME
              value: boundary
          volumeMounts:
            - name: boundary-config
              mountPath: /boundary
              readOnly: true
          ports:
            - name: api
              containerPort: 9200
              protocol: TCP
            - name: cluster
              containerPort: 9201
              protocol: TCP
            - name: ops
              containerPort: 9203
          livenessProbe:
            httpGet:
              path: /health
              port: ops
          readinessProbe:
            httpGet:
              path: /health
              port: ops
          resources:
            {}
      volumes:
        - name: boundary-config
          configMap:
            name: my-release-boundary-controller-config
---
# Source: boundary/templates/worker-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-boundary-worker
  namespace: boundary-0.1.0.tgz
  labels:
    helm.sh/chart: boundary-0.1.0
    app.kubernetes.io/name: boundary
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: boundary-worker
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: boundary
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: boundary-worker
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: boundary
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: boundary-worker
    spec:
      serviceAccountName: my-release-boundary
      securityContext:
        {}
      containers:
        - name: boundary-worker
          securityContext:
            {}
          image: "hashicorp/boundary:0.8.1"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - "-c"
          args:
           - boundary server -config /boundary/boundary-config.hcl
          env:
            - name: HOSTNAME
              value: boundary
          volumeMounts:
            - name: boundary-config
              mountPath: /boundary
              readOnly: true
          ports:
            - name: proxy
              containerPort: 9202
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: proxy
          readinessProbe:
            tcpSocket:
              port: proxy
          resources:
            {}
      volumes:
        - name: boundary-config
          configMap:
            name: my-release-boundary-worker-config
---
# Source: boundary/templates/controller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-boundary-controller-config
  namespace: boundary-0.1.0.tgz
  labels:
    helm.sh/chart: boundary-0.1.0
    app.kubernetes.io/name: boundary
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: boundary-controller
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,pre-rollback
data:
  boundary-config.hcl: |
    disable_mlock = true
    log_format    = "standard"

    controller {
      name        = "kubernetes-controller"
      description = "Boundary kubernetes-controller"
      database {
        url = "postgresql://postgres:postgres@postgresql:5432/boundary?sslmode=disable"
      }
      public_cluster_addr = "my-release-boundary.boundary-0.1.0.tgz:9201"
    }

    listener "tcp" {
      address     = "0.0.0.0"
      purpose     = "api"
      tls_disable = true
    }
    listener "tcp" {
      address     = "0.0.0.0"
      purpose     = "cluster"
    }
    listener "tcp" {
      address     = "0.0.0.0"
      purpose     = "ops"
      tls_disable = true
    }
---
# Source: boundary/templates/database-init-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-boundary-init
  namespace: boundary-0.1.0.tgz
  labels:
    helm.sh/chart: boundary-0.1.0
    app.kubernetes.io/name: boundary
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.8.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: boundary-init
  annotations:
    helm.sh/hook: pre-install,pre-upgrade,pre-rollback
spec:
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: boundary
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: boundary-init
    spec:
      serviceAccountName: my-release-boundary
      securityContext:
        {}
      restartPolicy: OnFailure
      initContainers:
        - name: boundary-controller-scale-down
          image: bitnami/kubectl:1.30
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - "-c"
            - "kubectl scale --replicas=0 deployment/my-release-boundary-controller"
      containers:
        - name: boundary-init
          securityContext:
            {}
          image: "hashicorp/boundary:0.8.1"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - "-c"
          args:
           - boundary database migrate -config /boundary/boundary-config.hcl || boundary database init  -config /boundary/boundary-config.hcl || sleep 10000
          env:
            - name: HOSTNAME
              value: boundary
          volumeMounts:
            - name: boundary-config
              mountPath: /boundary
              readOnly: true
        - name: boundary-controller-scale-up
          image: bitnami/kubectl:1.30
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - "-c"
            - "kubectl scale --replicas=3 deployment/my-release-boundary-controller"
      volumes:
        - name: boundary-config
          configMap:
            name: my-release-boundary-controller-config
