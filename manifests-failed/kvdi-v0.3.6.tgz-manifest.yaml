---
# Source: kvdi/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kvdi
  labels:

    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
---
# Source: kvdi/templates/configmaps.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: "apiVersion: controller-runtime.sigs.k8s.io/v1alpha1\n\
    kind: ControllerManagerConfig\nhealth:\n  healthProbeBindAddress: :8081\nmetrics:\n\
    \  bindAddress: 127.0.0.1:8080\nwebhook:\n  port: 9443\nleaderElection:\n  leaderElect:\
    \ true\n  resourceName: 095fd8bb.kvdi.io\n"
kind: ConfigMap
metadata:
  name: my-release-kvdi-manager-config
  labels:
    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
---
# Source: kvdi/templates/cluster_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kvdi-manager-role
  labels:
    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ''
    resources:
      - configmaps
      - endpoints
      - pods/log
      - secrets
      - serviceaccounts
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ''
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - persistentvolumeclaims
      - persistentvolumes
      - pods
      - secrets
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - app.kvdi.io
    resources:
      - vdiclusters
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - app.kvdi.io
    resources:
      - vdiclusters/finalizers
    verbs:
      - update
  - apiGroups:
      - app.kvdi.io
    resources:
      - vdiclusters/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - apps
    resources:
      - deployments
      - replicasets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cert-manager.io
    resources:
      - certificates
      - clusterissuers
      - issuers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - desktops.kvdi.io
    resources:
      - sessions
      - templates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - desktops.kvdi.io
    resources:
      - sessions/finalizers
    verbs:
      - update
  - apiGroups:
      - desktops.kvdi.io
    resources:
      - sessions/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - prometheuses
      - servicemonitors
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - clusterroles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rbac.kvdi.io
    resources:
      - vdiroles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
# Source: kvdi/templates/cluster_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kvdi-reader
  labels:
    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
# Source: kvdi/templates/cluster_roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kvdi-proxy-role
  labels:
    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: kvdi/templates/cluster_role_bindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kvdi-manager-rolebinding
  labels:
    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kvdi-manager-role
subjects:
  - kind: ServiceAccount
    name: my-release-kvdi
    namespace: kvdi-v0.3.6.tgz
---
# Source: kvdi/templates/cluster_role_bindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kvdi-proxy-rolebinding
  labels:
    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kvdi-proxy-role
subjects:
  - kind: ServiceAccount
    name: my-release-kvdi
    namespace: kvdi-v0.3.6.tgz
---
# Source: kvdi/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-kvdi-leader-election-role
  labels:
    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ''
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: kvdi/templates/role_bindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-kvdi-leader-election-rolebinding
  labels:
    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-kvdi-leader-election-role
subjects:
  - kind: ServiceAccount
    name: my-release-kvdi
---
# Source: kvdi/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kvdi-manager-metrics-service
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
---
# Source: kvdi/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    helm.sh/chart: kvdi-v0.3.6
    app.kubernetes.io/name: kvdi
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.6"
    app.kubernetes.io/managed-by: Helm
  name: my-release-kvdi-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kvdi
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        helm.sh/chart: kvdi-v0.3.6
        app.kubernetes.io/name: kvdi
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "v0.3.6"
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          image: ghcr.io/kvdi/manager:v0.3.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPERATOR_NAME
              value: "kvdi"
      securityContext:
        runAsUser: 65532
      terminationGracePeriodSeconds: 10
      serviceAccountName: my-release-kvdi
---
# Source: kvdi/templates/vdi_cluster.yaml
apiVersion: app.kvdi.io/v1
kind: VDICluster
metadata:
  name: kvdi
  labels:
    component: kvdi-cluster
spec:
  
  app:
    auditLog: false
    corsEnabled: false
    image: ""
    replicas: 1
    resources: {}
    serviceAnnotations: {}
    serviceType: LoadBalancer
    tls:
      serverSecret: ""
  appNamespace: default
  auth:
    adminSecret: kvdi-admin-secret
    allowAnonymous: false
    ldapAuth: {}
    localAuth: {}
    oidcAuth: {}
    tokenDuration: 15m
  desktops:
    maxSessionLength: ""
  imagePullSecrets: []
  metrics:
    serviceMonitor:
      create: false
      labels:
        release: prometheus
  secrets:
    k8sSecret:
      secretName: kvdi-app-secrets
    vault: {}
  userdataSpec: {}
