---
# Source: crossplane-on-eks/templates/aurora/definition.yaml
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xauroras.db.awsblueprint.io
spec:
  group: db.awsblueprint.io
  names:
    kind: XAurora
    plural: xauroras
  claimNames:
    kind: Aurora
    plural: auroras
  connectionSecretKeys:
    - clusterUsername
    - proxyEndpoint
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          description: RelationalDatabase is the Schema for the Aurora database
            API. Provides a Aurora Cluster.
          properties:
            spec:
              type: object
              description: "Aurora Cluster with Proxy Specification"
              properties:
                networkConfig:
                  description: parameter for Aurora network configuration
                  type: object
                  properties:
                    subnetIds:
                      type: array
                      items:
                        type: string
                      minItems: 1
                    vpcId: 
                      type: string
                    allowedPort:
                      type: number
                      default: 5432
                    allowedCidrBlocks:
                      type: array
                      items:
                        type: string
                      minItems: 1
                    allowedSecurityGroupId:
                      type: string
                  required:
                  - subnetIds
                  - vpcId
                resourceConfig:
                  description: parameter for Aurora general configuration
                    resource.
                  type: object
                  properties:
                    providerConfigName:
                      type: string
                    region:
                      type: string
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                      default: Delete
                    tags:
                      additionalProperties:
                        type: string
                      description: Key-value map of resource tags.
                      type: object
                  required:
                  - providerConfigName
                  - region
                clusterConfig:
                  description: parameter for Aurora cluster resource.
                  type: object
                  properties:
                    parameterGroupFamily:
                      description: Parameter group family name.
                      type: string
                      default: aurora-postgresql15
                    databaseName:
                      description: name of the aurora database
                      type: string
                    engine:
                      description: engine type
                      type: string
                      default: aurora-postgresql
                    engineVersion:
                      description: engine version
                      type: string
                      default: "15.2"
                    masterUsername:
                      description: cluster user name
                      type: string
                      default: adminuser
                    skipFinalSnapshot:
                      description: Whether a final DB snapshot is created before the DB cluster is deleted
                      type: boolean
                      default: true
                    storageType:
                      type: string
                      default: aurora-iopt1
                    availabilityZones:
                      type: array
                      items:
                        type: string
                    finalDBSnapshotIdentifier:
                      type: string
                    backupRetentionPeriod:
                      type: integer
                      default: 7
                    preferredBackupWindow: 
                      type: string
                      default: "02:00-03:00"
                    preferredMaintenanceWindow:
                      type: string
                      default: "sun:04:00-sun:05:00"
                    clusterInstanceClass:
                      type: string
                      default: db.r6g.large
                    performanceInsightsEnabled:
                      description: Specifies whether Performance Insights is enabled or not.
                      type: boolean
                      default: true
                    monitoringRoleArn:
                      type: string
                    monitoringInterval:
                      type: integer
                      default: 60
                    performanceInsightsRetentionPeriod:
                      type: integer
                      default: 7
                    enabledCloudwatchLogsExports:
                      type: array
                      items:
                        type: string
                    applyImmediately:
                      type: boolean
                      default: true
                    snapshotIdentifier:
                      type: string
                    finalSnapshotIdentifier:
                      type: string
                  required:
                  - monitoringRoleArn
                proxyConfig:
                  description: parameter for Aurora Proxy configuration
                  type: object    
                  properties:  
                    iamAuth:
                      enum:
                      - REQUIRED
                      - DISABLED
                      type: string
                      default: REQUIRED
                      description: Whether to require or disallow IAM authentication for connections.
                    debugLogging:
                      description: Parameter to set whether the proxy includes detailed 
                        information about SQL statements in its logs.
                      type: boolean
                      default: true
                    idleClientTimeout:  
                      description: Parameter to set the number of seconds that a connection 
                        to the proxy can be inactive before the proxy disconnects it.
                      type: number
                      default: 3600
                    proxyRoleArn:
                      description: Role Arn for the database proxy.
                      type: string
                    # secretArn:
                    #   description: Arn of the db credential secret.
                    #   type: string
                    connectionBorrowTimeout:
                      description: The number of seconds for a proxy to wait for a connection
                        to become available in the connection pool.
                      type: number
                      default: 120
                    maxIdleConnectionsPercent:
                      description: Controls how actively the proxy closes idle database 
                        connections in the connection pool.
                      type: number
                      default: 50
                    maxConnectionsPercent:
                      description: The maximum size of the connection pool for each target 
                        in a target group.
                      type: number
                      default: 50
                    initQuery:
                      description: One or more SQL statements for the proxy to run when 
                        opening each new database connection.
                      type: string
                  required:
                  - proxyRoleArn
            status:
              properties:
                subnetGroupArn:
                  type: string
                subnetGroupName:
                  type: string
                securityGroupId:
                  type: string
                securityGroupArn:
                  type: string
                securityGroupName:
                  type: string 
                clusterParameterGroupName:
                  type: string 
                clusterParameterGroupArn:
                  type: string
                clusterIdentifier:
                  type: string
                clusterArn:
                  type: string
                clusterReaderEndpoint:
                  type: string
                clusterEndpoint:
                  type: string  
                clusterMasterSecretArn:
                  type: string  
                clusterUsername:
                  type: string
                proxyArn:
                  type: string
                proxyEndpoint:
                  type: string
                defaultProxyTgName:
                  type: string
                targetGroupName:
                  type: string  
              type: object
          type: object
---
# Source: crossplane-on-eks/templates/cloudwatch-logs/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xsubscriptionfilters.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
spec:
  group: awsblueprints.io
  names:
    kind: XSubscriptionFilter
    plural: xsubscriptionfilters
  claimNames:
    kind: SubscriptionFilter
    plural: subscriptionfilters
  defaultCompositionRef:
    name: subscriptionfilter.upbound.awsblueprints.io
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          description: SubscriptionFilter is the Schema for the SubscriptionFilters
            API. Provides a CloudWatch Logs subscription filter.
          properties:
            spec:
              properties:
                forProvider:
                  properties:
                    destinationArn:
                      description: The ARN of the destination to deliver matching log
                        events to. Kinesis stream or Lambda function ARN.
                      type: string
                    destinationArnRef:
                      description: Reference to a Stream in kinesis to populate destinationArn.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution of
                                this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which will
                                attempt to resolve the reference only when the corresponding
                                field is not present. Use 'Always' to resolve the reference
                                on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    destinationArnSelector:
                      description: Selector for a Stream in kinesis to populate destinationArn.
                      properties:
                        matchControllerRef:
                          description: MatchControllerRef ensures an object with the
                            same controller reference as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching labels
                            is selected.
                          type: object
                        policy:
                          description: Policies for selection.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution of
                                this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which will
                                attempt to resolve the reference only when the corresponding
                                field is not present. Use 'Always' to resolve the reference
                                on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      type: object
                    distribution:
                      description: The method used to distribute log data to the destination.
                        By default log data is grouped by log stream, but the grouping
                        can be set to random for a more even distribution. This property
                        is only applicable when the destination is an Amazon Kinesis
                        stream. Valid values are "Random" and "ByLogStream".
                      type: string
                      default: "ByLogStream"
                    filterPattern:
                      description: A valid CloudWatch Logs filter pattern for subscribing
                        to a filtered stream of log events.
                      type: string
                    logGroupName:
                      description: The name of the log group to associate the subscription
                        filter with
                      type: string
                    name:
                      description: A name for the subscription filter
                      type: string
                    roleArn:
                      description: The ARN of an IAM role that grants Amazon CloudWatch
                        Logs permissions to deliver ingested log events to the destination.
                        If you use Lambda as a destination, you should skip this argument
                        and use aws_lambda_permission resource for granting access from
                        CloudWatch logs to the destination Lambda function.
                      type: string
                    roleArnRef:
                      description: Reference to a Role in iam to populate roleArn.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution of
                                this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which will
                                attempt to resolve the reference only when the corresponding
                                field is not present. Use 'Always' to resolve the reference
                                on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    roleArnSelector:
                      description: Selector for a Role in iam to populate roleArn.
                      properties:
                        matchControllerRef:
                          description: MatchControllerRef ensures an object with the
                            same controller reference as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching labels
                            is selected.
                          type: object
                        policy:
                          description: Policies for selection.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution of
                                this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which will
                                attempt to resolve the reference only when the corresponding
                                field is not present. Use 'Always' to resolve the reference
                                on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      type: object
                  type: object
                  required:
                   - filterPattern
                   - logGroupName
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                      default: "aws-provider-config"
                    region:
                      type: string
                      default: "us-west-2"
                    tags:
                      additionalProperties:
                        type: string
                      type: object
                  required:
                  - region
                  type: object
              required:
              - forProvider
              - resourceConfig
              type: object
            status:
              description: SubscriptionFilterStatus defines the observed state of SubscriptionFilter.
              properties:
                accountNumber:
                  type: string
              type: object
          required:
          - spec
          type: object
---
# Source: crossplane-on-eks/templates/delegates/delegate-irsa/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xdelegateirsas.awsblueprints.io
spec:
  group: awsblueprints.io
  names:
    kind: XDelegateIRSA
    plural: xdelegateirsas
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          description: DelegateIRSA is the Schema for the delegateirsas API
          properties:
            spec:
              description: DelegateIRSASpec defines the desired state of DelegateIRSA
              properties:
                delegate:
                  type: object
                  properties:
                    namespace:
                      type: string
                awsAccountID:
                  type: string
                eksOIDC:
                  type: string
                permissionsBoundaryArn:
                  type: string
                policyArns:
                  items:
                    type: string
                  type: array
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    region:
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: Key-value map of resource tags.
                      type: object
                  required:
                  - providerConfigName
                  - region
                  type: object
                serviceAccountName:
                  type: string
              required:
              - serviceAccountName
              - resourceConfig
              type: object
            status:
              description: DelegateIRSAStatus defines the observed state of DelegateIRSA
              properties:
                roleArn:
                  type: string
                roleName:
                  type: string
                awsAccountID:
                  type: string
                eksOIDC:
                  type: string
              type: object
          type: object
---
# Source: crossplane-on-eks/templates/delegates/delegate-s3-irsa/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xdelegates3irsas.awsblueprints.io
spec:
  claimNames:
    kind: DelegateS3IRSA
    plural: delegates3irsas
  group: awsblueprints.io
  names:
    kind: XDelegateS3IRSA
    plural: xdelegates3irsas
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          description: DelegateS3IRSA is the Schema for the delegates3irsas API
          properties:
            spec:
              description: DelegateS3IRSASpec defines the desired state of DelegateS3IRSA
              properties:
                delegate:
                  type: object
                  required:
                  - s3irsa
                  - namespace
                  properties:
                    s3irsa:
                      type: object
                      required:
                      - name
                      properties:
                        name:
                          type: string
                    namespace:
                      type: string
                policyArns:
                  items:
                    type: string
                  type: array
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    region:
                      type: string
                    tags:
                      items:
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        required:
                        - key
                        - value
                        type: object
                      type: array
                  required:
                  - providerConfigName
                  - region
                  type: object
                serviceAccountName:
                  type: string
              required:
              - resourceConfig
              type: object
            status:
              description: DelegateS3IRSAStatus defines the observed state of DelegateS3IRSA
              properties:
                bucketArn:
                  type: string
                roleName:
                  type: string
                roleArn:
                  type: string
              type: object
          type: object
---
# Source: crossplane-on-eks/templates/dynamo-irsa/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xdynamoirsas.awsblueprints.io
spec:
  claimNames:
    kind: DynamoIRSA
    plural: dynamoirsas
  group: awsblueprints.io
  names:
    kind: XDynamoIRSA
    plural: xdynamoirsas
  connectionSecretKeys:
    - tableName
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          description: DYNAMOIRSA is the Schema for the dynamoirsas API
          properties:
            spec:
              type: object
              properties:
                policyArns:
                  items:
                    type: string
                  type: array
                resourceConfig:
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      type: string
                    providerConfigName:
                      type: string
                      default: aws-provider-config
                    region:
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: Key-value map of resource tags.
                      type: object
                  required:
                  - region
                  type: object
                dynamoConfig:
                  properties:
                    attribute: #required for hashKey and/or rangeKey
                      items:
                        properties:
                          name: #name of the hashKey and/or rangeKey
                            type: string
                          type:
                            enum:
                            - B #binary
                            - N #number
                            - S #string
                            type: string
                        required:
                        - name
                        - type
                        type: object
                      type: array
                    hashKey:
                      type: string
                    rangeKey:
                      type: string
                    billingMode:
                      type: string
                      default: PAY_PER_REQUEST
                    readCapacity:
                      type: number
                    writeCapacity:
                      type: number              
                    globalSecondaryIndex:
                      items:
                        properties:
                          hashKey:
                            type: string
                          name:
                            type: string  
                          rangeKey:
                            type: string
                          readCapacity:
                            type: number
                          writeCapacity:
                            type: number
                          projectionType:
                            type: string
                          nonKeyAttributes: #required for gsi
                            items:
                              type: string
                            type: array
                        type: object
                        required:
                          - hashKey
                          - name
                          - rangeKey
                          - readCapacity
                          - writeCapacity
                          - projectionType
                          - nonKeyAttributes
                      type: array
                    localSecondaryIndex:
                      items:
                        properties:
                          name:
                            type: string  
                          rangeKey:
                            type: string
                          projectionType:
                            type: string
                          nonKeyAttributes: #required for lsi
                            items:
                              type: string
                            type: array
                        type: object
                        required:
                          - name
                          - rangeKey
                          - projectionType
                          - nonKeyAttributes
                      type: array
                    providerConfigName:
                      type: string
                      default: aws-provider-config
                    region:
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: Key-value map of resource tags.
                      type: object
                  required:
                  - attribute
                  - hashKey
                  type: object
              required:
              - resourceConfig 
              - dynamoConfig    
            status:
              type: object
              description: DYNAMOIRSAStatus defines the observed state of DYNAMOIRSA
              properties:
                roleName:
                  type: string
                tableArn:
                  type: string
                tableName:
                  type: string
          required:
          - spec
---
# Source: crossplane-on-eks/templates/dynamodb/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xdynamodbtables.awsblueprints.io
spec:
  group: awsblueprints.io
  names:
    kind: XDynamoDBTable
    plural: xdynamodbtables
  claimNames:
    kind: DynamoDBTable
    plural: dynamodbtables
  connectionSecretKeys:
    - tableName
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          description: Table is the Schema for the tables API
          properties:
            spec:
              type: object
              properties:
                resourceConfig:
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      type: string
                    providerConfigName:
                      type: string
                      default: aws-provider-config
                    region:
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: Key-value map of resource tags.
                      type: object
                  required:
                  - region
                  type: object
                dynamoConfig:
                  properties:
                    attribute: #required for hashKey and/or rangeKey
                      items:
                        properties:
                          name: #name of the hashKey and/or rangeKey
                            type: string
                          type:
                            enum:
                            - B #binary
                            - N #number
                            - S #string
                            type: string
                        required:
                        - name
                        - type
                        type: object
                      type: array
                    hashKey:
                      type: string
                    rangeKey:
                      type: string
                    billingMode:
                      type: string
                      default: PAY_PER_REQUEST
                    readCapacity:
                      type: number
                    writeCapacity:
                      type: number              
                    globalSecondaryIndex:
                      items:
                        properties:
                          hashKey:
                            type: string
                          name:
                            type: string  
                          rangeKey:
                            type: string
                          readCapacity:
                            type: number
                          writeCapacity:
                            type: number
                          projectionType:
                            type: string
                          nonKeyAttributes: #required for gsi
                            items:
                              type: string
                            type: array
                        type: object
                        required:
                          - hashKey
                          - name
                          - rangeKey
                          - readCapacity
                          - writeCapacity
                          - projectionType
                          - nonKeyAttributes
                      type: array
                    localSecondaryIndex:
                      items:
                        properties:
                          name:
                            type: string  
                          rangeKey:
                            type: string
                          projectionType:
                            type: string
                          nonKeyAttributes: #required for lsi
                            items:
                              type: string
                            type: array
                        type: object
                        required:
                          - name
                          - rangeKey
                          - projectionType
                          - nonKeyAttributes
                      type: array
                  required:
                  - attribute
                  - hashKey
                  type: object
              required:
              - resourceConfig 
              - dynamoConfig    
            status:
              type: object
              description: TableStatus defines the observed state of Table
              properties:
                tableArn:
                  description: Indicates this table's ARN
                  type: string
                tableName:
                  description: Indicates this table's Name
                  type: string
          required:
          - spec
---
# Source: crossplane-on-eks/templates/event-source-mapping/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: eventsourcemappings.awsblueprints.io
spec:
  group: awsblueprints.io
  names:
    kind: EventSourceMapping
    plural: eventsourcemappings
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          description: Policy is the Schema for the policies API
          properties:
            spec:
              description: PolicySpec defines the desired state of Policy
              properties:
                sourceArn:
                  type: string
                funcName:
                  type: string
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    region:
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: Key-value map of resource tags.
                      type: object
                  required:
                  - providerConfigName
                  - region
                  type: object
              required:
              - sourceArn
              - funcName
              - resourceConfig
              type: object
            status:
              description: PolicyStatus defines the observed state of Policy
              properties:
                policyArn:
                  type: string
              type: object
          type: object
---
# Source: crossplane-on-eks/templates/iam-policy/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: iampolicies.awsblueprints.io
spec:
  group: awsblueprints.io
  names:
    kind: IAMPolicy
    plural: iampolicies
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          description: Policy is the Schema for the policies API
          properties:
            spec:
              description: PolicySpec defines the desired state of Policy
              properties:
                resourceArn:
                  type: string
                roleName:
                  type: string
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: Key-value map of resource tags.
                      type: object
                  required:
                  - providerConfigName
                  type: object
              required:
              - resourceArn
              - roleName
              - resourceConfig
              type: object
            status:
              description: PolicyStatus defines the observed state of Policy
              properties:
                policyArn:
                  type: string
              type: object
          type: object
---
# Source: crossplane-on-eks/templates/irsa/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xirsas.awsblueprints.io
spec:
  claimNames:
    kind: IRSA
    plural: irsas
  group: awsblueprints.io
  names:
    kind: XIRSA
    plural: xirsas
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          description: IRSA is the Schema for the irsas API
          properties:
            spec:
              description: IRSASpec defines the desired state of IRSA
              properties:
                awsAccountID:
                  type: string
                eksOIDC:
                  type: string
                permissionsBoundaryArn:
                  type: string
                policyArns:
                  items:
                    type: string
                  type: array
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    region:
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: Key-value map of resource tags.
                      type: object
                  required:
                  - providerConfigName
                  - region
                  type: object
                serviceAccountName:
                  type: string
              required:
              - serviceAccountName
              - resourceConfig
              type: object
            status:
              description: IRSAStatus defines the observed state of IRSA
              properties:
                roleArn:
                  type: string
                roleName:
                  type: string
                awsAccountID:
                  type: string
                eksOIDC:
                  type: string
              type: object
          type: object
---
# Source: crossplane-on-eks/templates/kinesis-data-firehose-app/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xfirehoseapps.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
spec:
  group: awsblueprints.io
  names:
    kind: XFirehoseApp
    plural: xfirehoseapps
  claimNames:
    kind: FirehoseApp
    plural: firehoseapps
  defaultCompositionRef:
    name: firehose.upbound.awsblueprints.io
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                envVariables:
                  type: object
                  properties:
                    DEBUG:
                      type: string
                      default: "false"
                    VERIFY_SSL:
                      type: string
                      default: "true"
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                      default: "aws-provider-config"
                    region:
                      type: string
                      default: "us-west-2"
                  required:
                  - region
                  type: object
                environmentConfigs:
                  type: string
                name:
                  description: A name to identify the stream. This is unique to
                    the AWS account and region the Stream is created in. When using
                    for WAF logging, name must be prefixed with aws-waf-logs-. See
                    AWS Documentation for more details.
                  type: string
              required:
              - envVariables
              - resourceConfig
              - environmentConfigs
              default:
                bucketKey: dynatrace-aws-log-forwarder-lambda.zip
              type: object
            status:
              properties:
                printerRoleName:
                  type: string
                processorRoleName:
                  type: string
                processorFuncName:
                  type: string
                processorFuncArn:
                  type: string
                kinesisRoleArn:
                  type: string
                kinesisRoleName:
                  type: string
                kinesisName:
                  type: string
                kinesisArn:
                  type: string
                cloudwatchlogsRoleArn:
                  type: string
                cloudwatchlogsRoleName:
                  type: string
                bucketName:
                  type: string
                bucketArn:
                  type: string
                accountNumber:
                  type: string
              type: object
          required:
          - spec
          type: object
---
# Source: crossplane-on-eks/templates/kinesis-data-firehose/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xkinesisfirehoses.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
spec:
  group: awsblueprints.io
  names:
    kind: XKinesisFirehose
    plural: xkinesisfirehoses
  defaultCompositionRef:
    name: kinesisfirehose.upbound.awsblueprints.io
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: DeliveryStreamSpec defines the desired state of DeliveryStream
              properties:
                forProvider:
                  properties:
                    arn:
                      description: The Amazon Resource Name (ARN) specifying the Stream
                      type: string
                    destination:
                      description: –  This is the destination to where the data is delivered.
                        The only options are s3 (Deprecated, use extended_s3 instead),
                        extended_s3, redshift, elasticsearch, splunk, and http_endpoint.
                      type: string
                    destinationId:
                      type: string
                    elasticsearchConfiguration:
                      description: Configuration options if elasticsearch is the destination.
                        More details are given below.
                      items:
                        properties:
                          bufferingInterval:
                            description: Buffer incoming data for the specified period
                              of time, in seconds between 60 to 900, before delivering
                              it to the destination.  The default value is 300s.
                            type: number
                          bufferingSize:
                            description: Buffer incoming data to the specified size,
                              in MBs between 1 to 100, before delivering it to the destination.  The
                              default value is 5MB.
                            type: number
                          cloudwatchLoggingOptions:
                            description: The CloudWatch Logging Options for the delivery
                              stream. More details are given below
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                logGroupName:
                                  description: The CloudWatch group name for logging.
                                    This value is required if enabled is true.
                                  type: string
                                logStreamName:
                                  description: The CloudWatch log stream name for logging.
                                    This value is required if enabled is true.
                                  type: string
                              type: object
                            type: array
                          clusterEndpoint:
                            description: The endpoint to use when communicating with
                              the cluster. Conflicts with domain_arn.
                            type: string
                          domainArn:
                            description: The ARN of the Amazon ES domain.  The pattern
                              needs to be arn:.*.  Conflicts with cluster_endpoint.
                            type: string
                          domainArnRef:
                            description: Reference to a Domain in elasticsearch to populate
                              domainArn.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          domainArnSelector:
                            description: Selector for a Domain in elasticsearch to populate
                              domainArn.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object with
                                  the same controller reference as the selecting object
                                  is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                          indexName:
                            description: The Elasticsearch index name.
                            type: string
                          indexRotationPeriod:
                            description: The Elasticsearch index rotation period.  Index
                              rotation appends a timestamp to the IndexName to facilitate
                              expiration of old data.  Valid values are NoRotation,
                              OneHour, OneDay, OneWeek, and OneMonth.  The default value
                              is OneDay.
                            type: string
                          processingConfiguration:
                            description: The data processing configuration.  More details
                              are given below.
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                processors:
                                  description: Array of data processors. More details
                                    are given below
                                  items:
                                    properties:
                                      parameters:
                                        description: Array of processor parameters.
                                          More details are given below
                                        items:
                                          properties:
                                            parameterName:
                                              description: 'Parameter name. Valid Values:
                                                LambdaArn, NumberOfRetries, MetadataExtractionQuery,
                                                JsonParsingEngine, RoleArn, BufferSizeInMBs,
                                                BufferIntervalInSeconds, SubRecordType,
                                                Delimiter. Validation is done against
                                                AWS SDK constants; so that values not
                                                explicitly listed may also work.'
                                              type: string
                                            parameterValue:
                                              description: Parameter value. Must be
                                                between 1 and 512 length (inclusive).
                                                When providing a Lambda ARN, you should
                                                specify the resource version as well.
                                              type: string
                                          required:
                                          - parameterName
                                          - parameterValue
                                          type: object
                                        type: array
                                      type:
                                        description: 'The type of processor. Valid Values:
                                          RecordDeAggregation, Lambda, MetadataExtraction,
                                          AppendDelimiterToRecord. Validation is done
                                          against AWS SDK constants; so that values
                                          not explicitly listed may also work.'
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  type: array
                              type: object
                            type: array
                          retryDuration:
                            description: The length of time during which Firehose retries
                              delivery after a failure, starting from the initial request
                              and including the first attempt. The default value is
                              3600 seconds (60 minutes). Firehose does not retry if
                              the value of DurationInSeconds is 0 (zero) or if the first
                              delivery attempt takes longer than the current value.
                            type: number
                          roleArn:
                            description: The ARN of the AWS credentials.
                            type: string
                          roleArnRef:
                            description: Reference to a Role in iam to populate roleArn.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          roleArnSelector:
                            description: Selector for a Role in iam to populate roleArn.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object with
                                  the same controller reference as the selecting object
                                  is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                          s3BackupMode:
                            description: The Amazon S3 backup mode.  Valid values are
                              Disabled and Enabled.  Default value is Disabled.
                            type: string
                          typeName:
                            description: The Elasticsearch type name with maximum length
                              of 100 characters.
                            type: string
                          vpcConfig:
                            description: The VPC configuration for the delivery stream
                              to connect to Elastic Search associated with the VPC.
                              More details are given below
                            items:
                              properties:
                                roleArn:
                                  description: The ARN of the AWS credentials.
                                  type: string
                                roleArnRef:
                                  description: Reference to a Role in iam to populate
                                    roleArn.
                                  properties:
                                    name:
                                      description: Name of the referenced object.
                                      type: string
                                    policy:
                                      description: Policies for referencing.
                                      properties:
                                        resolution:
                                          default: Required
                                          description: Resolution specifies whether
                                            resolution of this reference is required.
                                            The default is 'Required', which means the
                                            reconcile will fail if the reference cannot
                                            be resolved. 'Optional' means this reference
                                            will be a no-op if it cannot be resolved.
                                          enum:
                                          - Required
                                          - Optional
                                          type: string
                                        resolve:
                                          description: Resolve specifies when this reference
                                            should be resolved. The default is 'IfNotPresent',
                                            which will attempt to resolve the reference
                                            only when the corresponding field is not
                                            present. Use 'Always' to resolve the reference
                                            on every reconcile.
                                          enum:
                                          - Always
                                          - IfNotPresent
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                roleArnSelector:
                                  description: Selector for a Role in iam to populate
                                    roleArn.
                                  properties:
                                    matchControllerRef:
                                      description: MatchControllerRef ensures an object
                                        with the same controller reference as the selecting
                                        object is selected.
                                      type: boolean
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: MatchLabels ensures an object with
                                        matching labels is selected.
                                      type: object
                                    policy:
                                      description: Policies for selection.
                                      properties:
                                        resolution:
                                          default: Required
                                          description: Resolution specifies whether
                                            resolution of this reference is required.
                                            The default is 'Required', which means the
                                            reconcile will fail if the reference cannot
                                            be resolved. 'Optional' means this reference
                                            will be a no-op if it cannot be resolved.
                                          enum:
                                          - Required
                                          - Optional
                                          type: string
                                        resolve:
                                          description: Resolve specifies when this reference
                                            should be resolved. The default is 'IfNotPresent',
                                            which will attempt to resolve the reference
                                            only when the corresponding field is not
                                            present. Use 'Always' to resolve the reference
                                            on every reconcile.
                                          enum:
                                          - Always
                                          - IfNotPresent
                                          type: string
                                      type: object
                                  type: object
                                securityGroupIds:
                                  description: A list of security group IDs to associate
                                    with Kinesis Firehose.
                                  items:
                                    type: string
                                  type: array
                                subnetIds:
                                  description: A list of subnet IDs to associate with
                                    Kinesis Firehose.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - securityGroupIds
                              - subnetIds
                              type: object
                            type: array
                        required:
                        - indexName
                        type: object
                      type: array
                    extendedS3Configuration:
                      description: Enhanced configuration options for the s3 destination.
                        More details are given below.
                      items:
                        properties:
                          bucketArn:
                            description: The ARN of the S3 bucket
                            type: string
                          bucketArnRef:
                            description: Reference to a Bucket in s3 to populate bucketArn.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          bucketArnSelector:
                            description: Selector for a Bucket in s3 to populate bucketArn.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object with
                                  the same controller reference as the selecting object
                                  is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                          bufferInterval:
                            description: Buffer incoming data for the specified period
                              of time, in seconds, before delivering it to the destination.
                              The default value is 300.
                            type: number
                          bufferSize:
                            description: Buffer incoming data to the specified size,
                              in MBs, before delivering it to the destination. The default
                              value is 5. We recommend setting SizeInMBs to a value
                              greater than the amount of data you typically ingest into
                              the delivery stream in 10 seconds. For example, if you
                              typically ingest data at 1 MB/sec set SizeInMBs to be
                              10 MB or higher.
                            type: number
                          cloudwatchLoggingOptions:
                            description: The CloudWatch Logging Options for the delivery
                              stream. More details are given below
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                logGroupName:
                                  description: The CloudWatch group name for logging.
                                    This value is required if enabled is true.
                                  type: string
                                logStreamName:
                                  description: The CloudWatch log stream name for logging.
                                    This value is required if enabled is true.
                                  type: string
                              type: object
                            type: array
                          compressionFormat:
                            description: The compression format. If no value is specified,
                              the default is UNCOMPRESSED. Other supported values are
                              GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
                            type: string
                          dataFormatConversionConfiguration:
                            description: Nested argument for the serializer, deserializer,
                              and schema for converting data from the JSON format to
                              the Parquet or ORC format before writing it to Amazon
                              S3. More details given below.
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                inputFormatConfiguration:
                                  description: Nested argument that specifies the deserializer
                                    that you want Kinesis Data Firehose to use to convert
                                    the format of your data from JSON. More details
                                    below.
                                  items:
                                    properties:
                                      deserializer:
                                        description: Nested argument that specifies
                                          which deserializer to use. You can choose
                                          either the Apache Hive JSON SerDe or the OpenX
                                          JSON SerDe. More details below.
                                        items:
                                          properties:
                                            hiveJsonSerDe:
                                              description: Nested argument that specifies
                                                the native Hive / HCatalog JsonSerDe.
                                                More details below.
                                              items:
                                                properties:
                                                  timestampFormats:
                                                    description: A list of how you want
                                                      Kinesis Data Firehose to parse
                                                      the date and time stamps that
                                                      may be present in your input data
                                                      JSON. To specify these format
                                                      strings, follow the pattern syntax
                                                      of JodaTime's DateTimeFormat format
                                                      strings. For more information,
                                                      see Class DateTimeFormat. You
                                                      can also use the special value
                                                      millis to parse time stamps in
                                                      epoch milliseconds. If you don't
                                                      specify a format, Kinesis Data
                                                      Firehose uses java.sql.Timestamp::valueOf
                                                      by default.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              type: array
                                            openXJsonSerDe:
                                              description: Nested argument that specifies
                                                the OpenX SerDe. More details below.
                                              items:
                                                properties:
                                                  caseInsensitive:
                                                    description: When set to true, which
                                                      is the default, Kinesis Data Firehose
                                                      converts JSON keys to lowercase
                                                      before deserializing them.
                                                    type: boolean
                                                  columnToJsonKeyMappings:
                                                    additionalProperties:
                                                      type: string
                                                    description: A map of column names
                                                      to JSON keys that aren't identical
                                                      to the column names. This is useful
                                                      when the JSON contains keys that
                                                      are Hive keywords. For example,
                                                      timestamp is a Hive keyword. If
                                                      you have a JSON key named timestamp,
                                                      set this parameter to { ts = "timestamp"
                                                      } to map this key to a column
                                                      named ts.
                                                    type: object
                                                  convertDotsInJsonKeysToUnderscores:
                                                    description: When set to true, specifies
                                                      that the names of the keys include
                                                      dots and that you want Kinesis
                                                      Data Firehose to replace them
                                                      with underscores. This is useful
                                                      because Apache Hive does not allow
                                                      dots in column names. For example,
                                                      if the JSON contains a key whose
                                                      name is "a.b", you can define
                                                      the column name to be "a_b" when
                                                      using this option. Defaults to
                                                      false.
                                                    type: boolean
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                    required:
                                    - deserializer
                                    type: object
                                  type: array
                                outputFormatConfiguration:
                                  description: Nested argument that specifies the serializer
                                    that you want Kinesis Data Firehose to use to convert
                                    the format of your data to the Parquet or ORC format.
                                    More details below.
                                  items:
                                    properties:
                                      serializer:
                                        description: Nested argument that specifies
                                          which serializer to use. You can choose either
                                          the ORC SerDe or the Parquet SerDe. More details
                                          below.
                                        items:
                                          properties:
                                            orcSerDe:
                                              description: Nested argument that specifies
                                                converting data to the ORC format before
                                                storing it in Amazon S3. For more information,
                                                see Apache ORC. More details below.
                                              items:
                                                properties:
                                                  blockSizeBytes:
                                                    description: The Hadoop Distributed
                                                      File System (HDFS) block size.
                                                      This is useful if you intend to
                                                      copy the data from Amazon S3 to
                                                      HDFS before querying. The default
                                                      is 256 MiB and the minimum is
                                                      64 MiB. Kinesis Data Firehose
                                                      uses this value for padding calculations.
                                                    type: number
                                                  bloomFilterColumns:
                                                    description: A list of column names
                                                      for which you want Kinesis Data
                                                      Firehose to create bloom filters.
                                                    items:
                                                      type: string
                                                    type: array
                                                  bloomFilterFalsePositiveProbability:
                                                    description: The Bloom filter false
                                                      positive probability (FPP). The
                                                      lower the FPP, the bigger the
                                                      Bloom filter. The default value
                                                      is 0.05, the minimum is 0, and
                                                      the maximum is 1.
                                                    type: number
                                                  compression:
                                                    description: The compression code
                                                      to use over data blocks. The possible
                                                      values are UNCOMPRESSED, SNAPPY,
                                                      and GZIP, with the default being
                                                      SNAPPY. Use SNAPPY for higher
                                                      decompression speed. Use GZIP
                                                      if the compression ratio is more
                                                      important than speed.
                                                    type: string
                                                  dictionaryKeyThreshold:
                                                    description: A float that represents
                                                      the fraction of the total number
                                                      of non-null rows. To turn off
                                                      dictionary encoding, set this
                                                      fraction to a number that is less
                                                      than the number of distinct keys
                                                      in a dictionary. To always use
                                                      dictionary encoding, set this
                                                      threshold to 1.
                                                    type: number
                                                  enablePadding:
                                                    description: Set this to true to
                                                      indicate that you want stripes
                                                      to be padded to the HDFS block
                                                      boundaries. This is useful if
                                                      you intend to copy the data from
                                                      Amazon S3 to HDFS before querying.
                                                      The default is false.
                                                    type: boolean
                                                  formatVersion:
                                                    description: The version of the
                                                      file to write. The possible values
                                                      are V0_11 and V0_12. The default
                                                      is V0_12.
                                                    type: string
                                                  paddingTolerance:
                                                    description: A float between 0 and
                                                      1 that defines the tolerance for
                                                      block padding as a decimal fraction
                                                      of stripe size. The default value
                                                      is 0.05, which means 5 percent
                                                      of stripe size. For the default
                                                      values of 64 MiB ORC stripes and
                                                      256 MiB HDFS blocks, the default
                                                      block padding tolerance of 5 percent
                                                      reserves a maximum of 3.2 MiB
                                                      for padding within the 256 MiB
                                                      block. In such a case, if the
                                                      available size within the block
                                                      is more than 3.2 MiB, a new, smaller
                                                      stripe is inserted to fit within
                                                      that space. This ensures that
                                                      no stripe crosses block boundaries
                                                      and causes remote reads within
                                                      a node-local task. Kinesis Data
                                                      Firehose ignores this parameter
                                                      when enable_padding is false.
                                                    type: number
                                                  rowIndexStride:
                                                    description: The number of rows
                                                      between index entries. The default
                                                      is 10000 and the minimum is 1000.
                                                    type: number
                                                  stripeSizeBytes:
                                                    description: The number of bytes
                                                      in each stripe. The default is
                                                      64 MiB and the minimum is 8 MiB.
                                                    type: number
                                                type: object
                                              type: array
                                            parquetSerDe:
                                              description: Nested argument that specifies
                                                converting data to the Parquet format
                                                before storing it in Amazon S3. For
                                                more information, see Apache Parquet.
                                                More details below.
                                              items:
                                                properties:
                                                  blockSizeBytes:
                                                    description: The Hadoop Distributed
                                                      File System (HDFS) block size.
                                                      This is useful if you intend to
                                                      copy the data from Amazon S3 to
                                                      HDFS before querying. The default
                                                      is 256 MiB and the minimum is
                                                      64 MiB. Kinesis Data Firehose
                                                      uses this value for padding calculations.
                                                    type: number
                                                  compression:
                                                    description: The compression code
                                                      to use over data blocks. The possible
                                                      values are UNCOMPRESSED, SNAPPY,
                                                      and GZIP, with the default being
                                                      SNAPPY. Use SNAPPY for higher
                                                      decompression speed. Use GZIP
                                                      if the compression ratio is more
                                                      important than speed.
                                                    type: string
                                                  enableDictionaryCompression:
                                                    description: Indicates whether to
                                                      enable dictionary compression.
                                                    type: boolean
                                                  maxPaddingBytes:
                                                    description: The maximum amount
                                                      of padding to apply. This is useful
                                                      if you intend to copy the data
                                                      from Amazon S3 to HDFS before
                                                      querying. The default is 0.
                                                    type: number
                                                  pageSizeBytes:
                                                    description: The Parquet page size.
                                                      Column chunks are divided into
                                                      pages. A page is conceptually
                                                      an indivisible unit (in terms
                                                      of compression and encoding).
                                                      The minimum value is 64 KiB and
                                                      the default is 1 MiB.
                                                    type: number
                                                  writerVersion:
                                                    description: Indicates the version
                                                      of row format to output. The possible
                                                      values are V1 and V2. The default
                                                      is V1.
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                    required:
                                    - serializer
                                    type: object
                                  type: array
                                schemaConfiguration:
                                  description: Nested argument that specifies the AWS
                                    Glue Data Catalog table that contains the column
                                    information. More details below.
                                  items:
                                    properties:
                                      catalogId:
                                        description: The ID of the AWS Glue Data Catalog.
                                          If you don't supply this, the AWS account
                                          ID is used by default.
                                        type: string
                                      databaseName:
                                        description: Specifies the name of the AWS Glue
                                          database that contains the schema for the
                                          output data.
                                        type: string
                                      region:
                                        description: If you don't specify an AWS Region,
                                          the default is the current region.
                                        type: string
                                      roleArn:
                                        description: The ARN of the AWS credentials.
                                        type: string
                                      roleArnRef:
                                        description: Reference to a Role in iam to populate
                                          roleArn.
                                        properties:
                                          name:
                                            description: Name of the referenced object.
                                            type: string
                                          policy:
                                            description: Policies for referencing.
                                            properties:
                                              resolution:
                                                default: Required
                                                description: Resolution specifies whether
                                                  resolution of this reference is required.
                                                  The default is 'Required', which means
                                                  the reconcile will fail if the reference
                                                  cannot be resolved. 'Optional' means
                                                  this reference will be a no-op if
                                                  it cannot be resolved.
                                                enum:
                                                - Required
                                                - Optional
                                                type: string
                                              resolve:
                                                description: Resolve specifies when
                                                  this reference should be resolved.
                                                  The default is 'IfNotPresent', which
                                                  will attempt to resolve the reference
                                                  only when the corresponding field
                                                  is not present. Use 'Always' to resolve
                                                  the reference on every reconcile.
                                                enum:
                                                - Always
                                                - IfNotPresent
                                                type: string
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      roleArnSelector:
                                        description: Selector for a Role in iam to populate
                                          roleArn.
                                        properties:
                                          matchControllerRef:
                                            description: MatchControllerRef ensures
                                              an object with the same controller reference
                                              as the selecting object is selected.
                                            type: boolean
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: MatchLabels ensures an object
                                              with matching labels is selected.
                                            type: object
                                          policy:
                                            description: Policies for selection.
                                            properties:
                                              resolution:
                                                default: Required
                                                description: Resolution specifies whether
                                                  resolution of this reference is required.
                                                  The default is 'Required', which means
                                                  the reconcile will fail if the reference
                                                  cannot be resolved. 'Optional' means
                                                  this reference will be a no-op if
                                                  it cannot be resolved.
                                                enum:
                                                - Required
                                                - Optional
                                                type: string
                                              resolve:
                                                description: Resolve specifies when
                                                  this reference should be resolved.
                                                  The default is 'IfNotPresent', which
                                                  will attempt to resolve the reference
                                                  only when the corresponding field
                                                  is not present. Use 'Always' to resolve
                                                  the reference on every reconcile.
                                                enum:
                                                - Always
                                                - IfNotPresent
                                                type: string
                                            type: object
                                        type: object
                                      tableName:
                                        description: Specifies the AWS Glue table that
                                          contains the column information that constitutes
                                          your data schema.
                                        type: string
                                      tableNameRef:
                                        description: Reference to a CatalogTable in
                                          glue to populate tableName.
                                        properties:
                                          name:
                                            description: Name of the referenced object.
                                            type: string
                                          policy:
                                            description: Policies for referencing.
                                            properties:
                                              resolution:
                                                default: Required
                                                description: Resolution specifies whether
                                                  resolution of this reference is required.
                                                  The default is 'Required', which means
                                                  the reconcile will fail if the reference
                                                  cannot be resolved. 'Optional' means
                                                  this reference will be a no-op if
                                                  it cannot be resolved.
                                                enum:
                                                - Required
                                                - Optional
                                                type: string
                                              resolve:
                                                description: Resolve specifies when
                                                  this reference should be resolved.
                                                  The default is 'IfNotPresent', which
                                                  will attempt to resolve the reference
                                                  only when the corresponding field
                                                  is not present. Use 'Always' to resolve
                                                  the reference on every reconcile.
                                                enum:
                                                - Always
                                                - IfNotPresent
                                                type: string
                                            type: object
                                        required:
                                        - name
                                        type: object
                                      tableNameSelector:
                                        description: Selector for a CatalogTable in
                                          glue to populate tableName.
                                        properties:
                                          matchControllerRef:
                                            description: MatchControllerRef ensures
                                              an object with the same controller reference
                                              as the selecting object is selected.
                                            type: boolean
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: MatchLabels ensures an object
                                              with matching labels is selected.
                                            type: object
                                          policy:
                                            description: Policies for selection.
                                            properties:
                                              resolution:
                                                default: Required
                                                description: Resolution specifies whether
                                                  resolution of this reference is required.
                                                  The default is 'Required', which means
                                                  the reconcile will fail if the reference
                                                  cannot be resolved. 'Optional' means
                                                  this reference will be a no-op if
                                                  it cannot be resolved.
                                                enum:
                                                - Required
                                                - Optional
                                                type: string
                                              resolve:
                                                description: Resolve specifies when
                                                  this reference should be resolved.
                                                  The default is 'IfNotPresent', which
                                                  will attempt to resolve the reference
                                                  only when the corresponding field
                                                  is not present. Use 'Always' to resolve
                                                  the reference on every reconcile.
                                                enum:
                                                - Always
                                                - IfNotPresent
                                                type: string
                                            type: object
                                        type: object
                                      versionId:
                                        description: Specifies the table version for
                                          the output data schema. Defaults to LATEST.
                                        type: string
                                    required:
                                    - databaseName
                                    type: object
                                  type: array
                              required:
                              - inputFormatConfiguration
                              - outputFormatConfiguration
                              - schemaConfiguration
                              type: object
                            type: array
                          dynamicPartitioningConfiguration:
                            description: The configuration for dynamic partitioning.
                              See Dynamic Partitioning Configuration below for more
                              details. Required when using dynamic partitioning.
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                retryDuration:
                                  description: The length of time during which Firehose
                                    retries delivery after a failure, starting from
                                    the initial request and including the first attempt.
                                    The default value is 3600 seconds (60 minutes).
                                    Firehose does not retry if the value of DurationInSeconds
                                    is 0 (zero) or if the first delivery attempt takes
                                    longer than the current value.
                                  type: number
                              type: object
                            type: array
                          errorOutputPrefix:
                            description: Prefix added to failed records before writing
                              them to S3. Not currently supported for redshift destination.
                              This prefix appears immediately following the bucket name.
                              For information about how to specify this prefix, see
                              Custom Prefixes for Amazon S3 Objects.
                            type: string
                          kmsKeyArn:
                            description: Specifies the KMS key ARN the stream will use
                              to encrypt data. If not set, no encryption will be used.
                            type: string
                          prefix:
                            description: The "YYYY/MM/DD/HH" time format prefix is automatically
                              used for delivered S3 files. You can specify an extra
                              prefix to be added in front of the time format prefix.
                              Note that if the prefix ends with a slash, it appears
                              as a folder in the S3 bucket
                            type: string
                          processingConfiguration:
                            description: The data processing configuration.  More details
                              are given below.
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                processors:
                                  description: Array of data processors. More details
                                    are given below
                                  items:
                                    properties:
                                      parameters:
                                        description: Array of processor parameters.
                                          More details are given below
                                        items:
                                          properties:
                                            parameterName:
                                              description: 'Parameter name. Valid Values:
                                                LambdaArn, NumberOfRetries, MetadataExtractionQuery,
                                                JsonParsingEngine, RoleArn, BufferSizeInMBs,
                                                BufferIntervalInSeconds, SubRecordType,
                                                Delimiter. Validation is done against
                                                AWS SDK constants; so that values not
                                                explicitly listed may also work.'
                                              type: string
                                            parameterValue:
                                              description: Parameter value. Must be
                                                between 1 and 512 length (inclusive).
                                                When providing a Lambda ARN, you should
                                                specify the resource version as well.
                                              type: string
                                          required:
                                          - parameterName
                                          - parameterValue
                                          type: object
                                        type: array
                                      type:
                                        description: 'The type of processor. Valid Values:
                                          RecordDeAggregation, Lambda, MetadataExtraction,
                                          AppendDelimiterToRecord. Validation is done
                                          against AWS SDK constants; so that values
                                          not explicitly listed may also work.'
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  type: array
                              type: object
                            type: array
                          roleArn:
                            description: The ARN of the AWS credentials.
                            type: string
                          roleArnRef:
                            description: Reference to a Role in iam to populate roleArn.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          roleArnSelector:
                            description: Selector for a Role in iam to populate roleArn.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object with
                                  the same controller reference as the selecting object
                                  is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                          s3BackupConfiguration:
                            description: The configuration for backup in Amazon S3.
                              Required if s3_backup_mode is Enabled. Supports the same
                              fields as s3_configuration object.
                            items:
                              properties:
                                bucketArn:
                                  description: The ARN of the S3 bucket
                                  type: string
                                bufferInterval:
                                  description: Buffer incoming data for the specified
                                    period of time, in seconds, before delivering it
                                    to the destination. The default value is 300.
                                  type: number
                                bufferSize:
                                  description: Buffer incoming data to the specified
                                    size, in MBs, before delivering it to the destination.
                                    The default value is 5. We recommend setting SizeInMBs
                                    to a value greater than the amount of data you typically
                                    ingest into the delivery stream in 10 seconds. For
                                    example, if you typically ingest data at 1 MB/sec
                                    set SizeInMBs to be 10 MB or higher.
                                  type: number
                                cloudwatchLoggingOptions:
                                  description: The CloudWatch Logging Options for the
                                    delivery stream. More details are given below
                                  items:
                                    properties:
                                      enabled:
                                        description: Enables or disables the logging.
                                          Defaults to false.
                                        type: boolean
                                      logGroupName:
                                        description: The CloudWatch group name for logging.
                                          This value is required if enabled is true.
                                        type: string
                                      logStreamName:
                                        description: The CloudWatch log stream name
                                          for logging. This value is required if enabled
                                          is true.
                                        type: string
                                    type: object
                                  type: array
                                compressionFormat:
                                  description: The compression format. If no value is
                                    specified, the default is UNCOMPRESSED. Other supported
                                    values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
                                  type: string
                                errorOutputPrefix:
                                  description: Prefix added to failed records before
                                    writing them to S3. Not currently supported for
                                    redshift destination. This prefix appears immediately
                                    following the bucket name. For information about
                                    how to specify this prefix, see Custom Prefixes
                                    for Amazon S3 Objects.
                                  type: string
                                kmsKeyArn:
                                  description: Specifies the KMS key ARN the stream
                                    will use to encrypt data. If not set, no encryption
                                    will be used.
                                  type: string
                                prefix:
                                  description: The "YYYY/MM/DD/HH" time format prefix
                                    is automatically used for delivered S3 files. You
                                    can specify an extra prefix to be added in front
                                    of the time format prefix. Note that if the prefix
                                    ends with a slash, it appears as a folder in the
                                    S3 bucket
                                  type: string
                                roleArn:
                                  description: The ARN of the AWS credentials.
                                  type: string
                              required:
                              - bucketArn
                              - roleArn
                              type: object
                            type: array
                          s3BackupMode:
                            description: The Amazon S3 backup mode.  Valid values are
                              Disabled and Enabled.  Default value is Disabled.
                            type: string
                        type: object
                      type: array
                    httpEndpointConfiguration:
                      description: Configuration options if http_endpoint is the destination.
                        requires the user to also specify a s3_configuration block.  More
                        details are given below.
                      items:
                        properties:
                          accessKeySecretRef:
                            description: The access key required for Kinesis Firehose
                              to authenticate with the HTTP endpoint selected as the
                              destination.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                              namespace:
                                description: Namespace of the secret.
                                type: string
                            required:
                            - key
                            - name
                            - namespace
                            type: object
                          bufferingInterval:
                            description: Buffer incoming data for the specified period
                              of time, in seconds between 60 to 900, before delivering
                              it to the destination.  The default value is 300s.
                            type: number
                          bufferingSize:
                            description: Buffer incoming data to the specified size,
                              in MBs between 1 to 100, before delivering it to the destination.  The
                              default value is 5MB.
                            type: number
                          cloudwatchLoggingOptions:
                            description: The CloudWatch Logging Options for the delivery
                              stream. More details are given below
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                logGroupName:
                                  description: The CloudWatch group name for logging.
                                    This value is required if enabled is true.
                                  type: string
                                logStreamName:
                                  description: The CloudWatch log stream name for logging.
                                    This value is required if enabled is true.
                                  type: string
                              type: object
                            type: array
                          name:
                            description: The HTTP endpoint name.
                            type: string
                          processingConfiguration:
                            description: The data processing configuration.  More details
                              are given below.
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                processors:
                                  description: Array of data processors. More details
                                    are given below
                                  items:
                                    properties:
                                      parameters:
                                        description: Array of processor parameters.
                                          More details are given below
                                        items:
                                          properties:
                                            parameterName:
                                              description: 'Parameter name. Valid Values:
                                                LambdaArn, NumberOfRetries, MetadataExtractionQuery,
                                                JsonParsingEngine, RoleArn, BufferSizeInMBs,
                                                BufferIntervalInSeconds, SubRecordType,
                                                Delimiter. Validation is done against
                                                AWS SDK constants; so that values not
                                                explicitly listed may also work.'
                                              type: string
                                            parameterValue:
                                              description: Parameter value. Must be
                                                between 1 and 512 length (inclusive).
                                                When providing a Lambda ARN, you should
                                                specify the resource version as well.
                                              type: string
                                          required:
                                          - parameterName
                                          - parameterValue
                                          type: object
                                        type: array
                                      type:
                                        description: 'The type of processor. Valid Values:
                                          RecordDeAggregation, Lambda, MetadataExtraction,
                                          AppendDelimiterToRecord. Validation is done
                                          against AWS SDK constants; so that values
                                          not explicitly listed may also work.'
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  type: array
                              type: object
                            type: array
                          requestConfiguration:
                            description: The request configuration.  More details are
                              given below.
                            items:
                              properties:
                                commonAttributes:
                                  description: Describes the metadata sent to the HTTP
                                    endpoint destination. More details are given below
                                  items:
                                    properties:
                                      name:
                                        description: The HTTP endpoint name.
                                        type: string
                                      value:
                                        description: The value of the HTTP endpoint
                                          common attribute.
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                contentEncoding:
                                  description: Kinesis Data Firehose uses the content
                                    encoding to compress the body of a request before
                                    sending the request to the destination. Valid values
                                    are NONE and GZIP.  Default value is NONE.
                                  type: string
                              type: object
                            type: array
                          retryDuration:
                            description: The length of time during which Firehose retries
                              delivery after a failure, starting from the initial request
                              and including the first attempt. The default value is
                              3600 seconds (60 minutes). Firehose does not retry if
                              the value of DurationInSeconds is 0 (zero) or if the first
                              delivery attempt takes longer than the current value.
                            type: number
                          roleArn:
                            description: The ARN of the AWS credentials.
                            type: string
                          roleArnRef:
                            description: Reference to a Role in iam to populate roleArn.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          roleArnSelector:
                            description: Selector for a Role in iam to populate roleArn.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object with
                                  the same controller reference as the selecting object
                                  is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                          s3BackupMode:
                            description: The Amazon S3 backup mode.  Valid values are
                              Disabled and Enabled.  Default value is Disabled.
                            type: string
                          url:
                            description: The HTTP endpoint URL to which Kinesis Firehose
                              sends your data.
                            type: string
                        required:
                        - url
                        type: object
                      type: array
                    kinesisSourceConfiguration:
                      description: Allows the ability to specify the kinesis stream
                        that is used as the source of the firehose delivery stream.
                      items:
                        properties:
                          kinesisStreamArn:
                            description: The kinesis stream used as the source of the
                              firehose delivery stream.
                            type: string
                          roleArn:
                            description: The ARN of the AWS credentials.
                            type: string
                        required:
                        - kinesisStreamArn
                        - roleArn
                        type: object
                      type: array
                    name:
                      description: A name to identify the stream. This is unique to
                        the AWS account and region the Stream is created in. When using
                        for WAF logging, name must be prefixed with aws-waf-logs-. See
                        AWS Documentation for more details.
                      type: string
                    redshiftConfiguration:
                      description: Configuration options if redshift is the destination.
                        Using redshift_configuration requires the user to also specify
                        a s3_configuration block. More details are given below.
                      items:
                        properties:
                          cloudwatchLoggingOptions:
                            description: The CloudWatch Logging Options for the delivery
                              stream. More details are given below
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                logGroupName:
                                  description: The CloudWatch group name for logging.
                                    This value is required if enabled is true.
                                  type: string
                                logStreamName:
                                  description: The CloudWatch log stream name for logging.
                                    This value is required if enabled is true.
                                  type: string
                              type: object
                            type: array
                          clusterJdbcurl:
                            description: The jdbcurl of the redshift cluster.
                            type: string
                          copyOptions:
                            description: Copy options for copying the data from the
                              s3 intermediate bucket into redshift, for example to change
                              the default delimiter. For valid values, see the AWS documentation
                            type: string
                          dataTableColumns:
                            description: The data table columns that will be targeted
                              by the copy command.
                            type: string
                          dataTableName:
                            description: The name of the table in the redshift cluster
                              that the s3 bucket will copy to.
                            type: string
                          passwordSecretRef:
                            description: The password for the username above.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                              namespace:
                                description: Namespace of the secret.
                                type: string
                            required:
                            - key
                            - name
                            - namespace
                            type: object
                          processingConfiguration:
                            description: The data processing configuration.  More details
                              are given below.
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                processors:
                                  description: Array of data processors. More details
                                    are given below
                                  items:
                                    properties:
                                      parameters:
                                        description: Array of processor parameters.
                                          More details are given below
                                        items:
                                          properties:
                                            parameterName:
                                              description: 'Parameter name. Valid Values:
                                                LambdaArn, NumberOfRetries, MetadataExtractionQuery,
                                                JsonParsingEngine, RoleArn, BufferSizeInMBs,
                                                BufferIntervalInSeconds, SubRecordType,
                                                Delimiter. Validation is done against
                                                AWS SDK constants; so that values not
                                                explicitly listed may also work.'
                                              type: string
                                            parameterValue:
                                              description: Parameter value. Must be
                                                between 1 and 512 length (inclusive).
                                                When providing a Lambda ARN, you should
                                                specify the resource version as well.
                                              type: string
                                          required:
                                          - parameterName
                                          - parameterValue
                                          type: object
                                        type: array
                                      type:
                                        description: 'The type of processor. Valid Values:
                                          RecordDeAggregation, Lambda, MetadataExtraction,
                                          AppendDelimiterToRecord. Validation is done
                                          against AWS SDK constants; so that values
                                          not explicitly listed may also work.'
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  type: array
                              type: object
                            type: array
                          retryDuration:
                            description: The length of time during which Firehose retries
                              delivery after a failure, starting from the initial request
                              and including the first attempt. The default value is
                              3600 seconds (60 minutes). Firehose does not retry if
                              the value of DurationInSeconds is 0 (zero) or if the first
                              delivery attempt takes longer than the current value.
                            type: number
                          roleArn:
                            description: The ARN of the AWS credentials.
                            type: string
                          roleArnRef:
                            description: Reference to a Role in iam to populate roleArn.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          roleArnSelector:
                            description: Selector for a Role in iam to populate roleArn.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object with
                                  the same controller reference as the selecting object
                                  is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                          s3BackupConfiguration:
                            description: The configuration for backup in Amazon S3.
                              Required if s3_backup_mode is Enabled. Supports the same
                              fields as s3_configuration object.
                            items:
                              properties:
                                bucketArn:
                                  description: The ARN of the S3 bucket
                                  type: string
                                bucketArnRef:
                                  description: Reference to a Bucket in s3 to populate
                                    bucketArn.
                                  properties:
                                    name:
                                      description: Name of the referenced object.
                                      type: string
                                    policy:
                                      description: Policies for referencing.
                                      properties:
                                        resolution:
                                          default: Required
                                          description: Resolution specifies whether
                                            resolution of this reference is required.
                                            The default is 'Required', which means the
                                            reconcile will fail if the reference cannot
                                            be resolved. 'Optional' means this reference
                                            will be a no-op if it cannot be resolved.
                                          enum:
                                          - Required
                                          - Optional
                                          type: string
                                        resolve:
                                          description: Resolve specifies when this reference
                                            should be resolved. The default is 'IfNotPresent',
                                            which will attempt to resolve the reference
                                            only when the corresponding field is not
                                            present. Use 'Always' to resolve the reference
                                            on every reconcile.
                                          enum:
                                          - Always
                                          - IfNotPresent
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                bucketArnSelector:
                                  description: Selector for a Bucket in s3 to populate
                                    bucketArn.
                                  properties:
                                    matchControllerRef:
                                      description: MatchControllerRef ensures an object
                                        with the same controller reference as the selecting
                                        object is selected.
                                      type: boolean
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: MatchLabels ensures an object with
                                        matching labels is selected.
                                      type: object
                                    policy:
                                      description: Policies for selection.
                                      properties:
                                        resolution:
                                          default: Required
                                          description: Resolution specifies whether
                                            resolution of this reference is required.
                                            The default is 'Required', which means the
                                            reconcile will fail if the reference cannot
                                            be resolved. 'Optional' means this reference
                                            will be a no-op if it cannot be resolved.
                                          enum:
                                          - Required
                                          - Optional
                                          type: string
                                        resolve:
                                          description: Resolve specifies when this reference
                                            should be resolved. The default is 'IfNotPresent',
                                            which will attempt to resolve the reference
                                            only when the corresponding field is not
                                            present. Use 'Always' to resolve the reference
                                            on every reconcile.
                                          enum:
                                          - Always
                                          - IfNotPresent
                                          type: string
                                      type: object
                                  type: object
                                bufferInterval:
                                  description: Buffer incoming data for the specified
                                    period of time, in seconds, before delivering it
                                    to the destination. The default value is 300.
                                  type: number
                                bufferSize:
                                  description: Buffer incoming data to the specified
                                    size, in MBs, before delivering it to the destination.
                                    The default value is 5. We recommend setting SizeInMBs
                                    to a value greater than the amount of data you typically
                                    ingest into the delivery stream in 10 seconds. For
                                    example, if you typically ingest data at 1 MB/sec
                                    set SizeInMBs to be 10 MB or higher.
                                  type: number
                                cloudwatchLoggingOptions:
                                  description: The CloudWatch Logging Options for the
                                    delivery stream. More details are given below
                                  items:
                                    properties:
                                      enabled:
                                        description: Enables or disables the logging.
                                          Defaults to false.
                                        type: boolean
                                      logGroupName:
                                        description: The CloudWatch group name for logging.
                                          This value is required if enabled is true.
                                        type: string
                                      logStreamName:
                                        description: The CloudWatch log stream name
                                          for logging. This value is required if enabled
                                          is true.
                                        type: string
                                    type: object
                                  type: array
                                compressionFormat:
                                  description: The compression format. If no value is
                                    specified, the default is UNCOMPRESSED. Other supported
                                    values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
                                  type: string
                                errorOutputPrefix:
                                  description: Prefix added to failed records before
                                    writing them to S3. Not currently supported for
                                    redshift destination. This prefix appears immediately
                                    following the bucket name. For information about
                                    how to specify this prefix, see Custom Prefixes
                                    for Amazon S3 Objects.
                                  type: string
                                kmsKeyArn:
                                  description: Specifies the KMS key ARN the stream
                                    will use to encrypt data. If not set, no encryption
                                    will be used.
                                  type: string
                                prefix:
                                  description: The "YYYY/MM/DD/HH" time format prefix
                                    is automatically used for delivered S3 files. You
                                    can specify an extra prefix to be added in front
                                    of the time format prefix. Note that if the prefix
                                    ends with a slash, it appears as a folder in the
                                    S3 bucket
                                  type: string
                                roleArn:
                                  description: The ARN of the AWS credentials.
                                  type: string
                                roleArnRef:
                                  description: Reference to a Role in iam to populate
                                    roleArn.
                                  properties:
                                    name:
                                      description: Name of the referenced object.
                                      type: string
                                    policy:
                                      description: Policies for referencing.
                                      properties:
                                        resolution:
                                          default: Required
                                          description: Resolution specifies whether
                                            resolution of this reference is required.
                                            The default is 'Required', which means the
                                            reconcile will fail if the reference cannot
                                            be resolved. 'Optional' means this reference
                                            will be a no-op if it cannot be resolved.
                                          enum:
                                          - Required
                                          - Optional
                                          type: string
                                        resolve:
                                          description: Resolve specifies when this reference
                                            should be resolved. The default is 'IfNotPresent',
                                            which will attempt to resolve the reference
                                            only when the corresponding field is not
                                            present. Use 'Always' to resolve the reference
                                            on every reconcile.
                                          enum:
                                          - Always
                                          - IfNotPresent
                                          type: string
                                      type: object
                                  required:
                                  - name
                                  type: object
                                roleArnSelector:
                                  description: Selector for a Role in iam to populate
                                    roleArn.
                                  properties:
                                    matchControllerRef:
                                      description: MatchControllerRef ensures an object
                                        with the same controller reference as the selecting
                                        object is selected.
                                      type: boolean
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: MatchLabels ensures an object with
                                        matching labels is selected.
                                      type: object
                                    policy:
                                      description: Policies for selection.
                                      properties:
                                        resolution:
                                          default: Required
                                          description: Resolution specifies whether
                                            resolution of this reference is required.
                                            The default is 'Required', which means the
                                            reconcile will fail if the reference cannot
                                            be resolved. 'Optional' means this reference
                                            will be a no-op if it cannot be resolved.
                                          enum:
                                          - Required
                                          - Optional
                                          type: string
                                        resolve:
                                          description: Resolve specifies when this reference
                                            should be resolved. The default is 'IfNotPresent',
                                            which will attempt to resolve the reference
                                            only when the corresponding field is not
                                            present. Use 'Always' to resolve the reference
                                            on every reconcile.
                                          enum:
                                          - Always
                                          - IfNotPresent
                                          type: string
                                      type: object
                                  type: object
                              type: object
                            type: array
                          s3BackupMode:
                            description: The Amazon S3 backup mode.  Valid values are
                              Disabled and Enabled.  Default value is Disabled.
                            type: string
                          username:
                            description: The username that the firehose delivery stream
                              will assume. It is strongly recommended that the username
                              and password provided is used exclusively for Amazon Kinesis
                              Firehose purposes, and that the permissions for the account
                              are restricted for Amazon Redshift INSERT permissions.
                            type: string
                        required:
                        - clusterJdbcurl
                        - dataTableName
                        - passwordSecretRef
                        - username
                        type: object
                      type: array
                    region:
                      description: If you don't specify an AWS Region, the default is
                        the current region. Region is the region you'd like your resource
                        to be created in.
                      type: string
                    s3Configuration:
                      description: Required for non-S3 destinations. For S3 destination,
                        use extended_s3_configuration instead. Configuration options
                        for the s3 destination (or the intermediate bucket if the destination
                        is redshift). More details are given below.
                      items:
                        properties:
                          bucketArn:
                            description: The ARN of the S3 bucket
                            type: string
                          bucketArnRef:
                            description: Reference to a Bucket in s3 to populate bucketArn.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          bucketArnSelector:
                            description: Selector for a Bucket in s3 to populate bucketArn.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object with
                                  the same controller reference as the selecting object
                                  is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                          bufferInterval:
                            description: Buffer incoming data for the specified period
                              of time, in seconds, before delivering it to the destination.
                              The default value is 300.
                            type: number
                          bufferSize:
                            description: Buffer incoming data to the specified size,
                              in MBs, before delivering it to the destination. The default
                              value is 5. We recommend setting SizeInMBs to a value
                              greater than the amount of data you typically ingest into
                              the delivery stream in 10 seconds. For example, if you
                              typically ingest data at 1 MB/sec set SizeInMBs to be
                              10 MB or higher.
                            type: number
                          cloudwatchLoggingOptions:
                            description: The CloudWatch Logging Options for the delivery
                              stream. More details are given below
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                logGroupName:
                                  description: The CloudWatch group name for logging.
                                    This value is required if enabled is true.
                                  type: string
                                logStreamName:
                                  description: The CloudWatch log stream name for logging.
                                    This value is required if enabled is true.
                                  type: string
                              type: object
                            type: array
                          compressionFormat:
                            description: The compression format. If no value is specified,
                              the default is UNCOMPRESSED. Other supported values are
                              GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
                            type: string
                          errorOutputPrefix:
                            description: Prefix added to failed records before writing
                              them to S3. Not currently supported for redshift destination.
                              This prefix appears immediately following the bucket name.
                              For information about how to specify this prefix, see
                              Custom Prefixes for Amazon S3 Objects.
                            type: string
                          kmsKeyArn:
                            description: Specifies the KMS key ARN the stream will use
                              to encrypt data. If not set, no encryption will be used.
                            type: string
                          prefix:
                            description: The "YYYY/MM/DD/HH" time format prefix is automatically
                              used for delivered S3 files. You can specify an extra
                              prefix to be added in front of the time format prefix.
                              Note that if the prefix ends with a slash, it appears
                              as a folder in the S3 bucket
                            type: string
                          roleArn:
                            description: The ARN of the AWS credentials.
                            type: string
                          roleArnRef:
                            description: Reference to a Role in iam to populate roleArn.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          roleArnSelector:
                            description: Selector for a Role in iam to populate roleArn.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object with
                                  the same controller reference as the selecting object
                                  is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference only
                                      when the corresponding field is not present. Use
                                      'Always' to resolve the reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                        type: object
                      type: array
                    serverSideEncryption:
                      description: Encrypt at rest options. Server-side encryption should
                        not be enabled when a kinesis stream is configured as the source
                        of the firehose delivery stream.
                      items:
                        properties:
                          enabled:
                            description: Enables or disables the logging. Defaults to
                              false.
                            type: boolean
                          keyArn:
                            description: Amazon Resource Name (ARN) of the encryption
                              key. Required when key_type is CUSTOMER_MANAGED_CMK.
                            type: string
                          keyType:
                            description: Type of encryption key. Default is AWS_OWNED_CMK.
                              Valid values are AWS_OWNED_CMK and CUSTOMER_MANAGED_CMK
                            type: string
                        type: object
                      type: array
                    splunkConfiguration:
                      description: Configuration options if splunk is the destination.
                        More details are given below.
                      items:
                        properties:
                          cloudwatchLoggingOptions:
                            description: The CloudWatch Logging Options for the delivery
                              stream. More details are given below
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                logGroupName:
                                  description: The CloudWatch group name for logging.
                                    This value is required if enabled is true.
                                  type: string
                                logStreamName:
                                  description: The CloudWatch log stream name for logging.
                                    This value is required if enabled is true.
                                  type: string
                              type: object
                            type: array
                          hecAcknowledgmentTimeout:
                            description: The amount of time, in seconds between 180
                              and 600, that Kinesis Firehose waits to receive an acknowledgment
                              from Splunk after it sends it data.
                            type: number
                          hecEndpoint:
                            description: The HTTP Event Collector (HEC) endpoint to
                              which Kinesis Firehose sends your data.
                            type: string
                          hecEndpointType:
                            description: The HEC endpoint type. Valid values are Raw
                              or Event. The default value is Raw.
                            type: string
                          hecToken:
                            description: The GUID that you obtain from your Splunk cluster
                              when you create a new HEC endpoint.
                            type: string
                          processingConfiguration:
                            description: The data processing configuration.  More details
                              are given below.
                            items:
                              properties:
                                enabled:
                                  description: Enables or disables the logging. Defaults
                                    to false.
                                  type: boolean
                                processors:
                                  description: Array of data processors. More details
                                    are given below
                                  items:
                                    properties:
                                      parameters:
                                        description: Array of processor parameters.
                                          More details are given below
                                        items:
                                          properties:
                                            parameterName:
                                              description: 'Parameter name. Valid Values:
                                                LambdaArn, NumberOfRetries, MetadataExtractionQuery,
                                                JsonParsingEngine, RoleArn, BufferSizeInMBs,
                                                BufferIntervalInSeconds, SubRecordType,
                                                Delimiter. Validation is done against
                                                AWS SDK constants; so that values not
                                                explicitly listed may also work.'
                                              type: string
                                            parameterValue:
                                              description: Parameter value. Must be
                                                between 1 and 512 length (inclusive).
                                                When providing a Lambda ARN, you should
                                                specify the resource version as well.
                                              type: string
                                          required:
                                          - parameterName
                                          - parameterValue
                                          type: object
                                        type: array
                                      type:
                                        description: 'The type of processor. Valid Values:
                                          RecordDeAggregation, Lambda, MetadataExtraction,
                                          AppendDelimiterToRecord. Validation is done
                                          against AWS SDK constants; so that values
                                          not explicitly listed may also work.'
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  type: array
                              type: object
                            type: array
                          retryDuration:
                            description: The length of time during which Firehose retries
                              delivery after a failure, starting from the initial request
                              and including the first attempt. The default value is
                              3600 seconds (60 minutes). Firehose does not retry if
                              the value of DurationInSeconds is 0 (zero) or if the first
                              delivery attempt takes longer than the current value.
                            type: number
                          s3BackupMode:
                            description: The Amazon S3 backup mode.  Valid values are
                              Disabled and Enabled.  Default value is Disabled.
                            type: string
                        required:
                        - hecEndpoint
                        - hecToken
                        type: object
                      type: array
                    tags:
                      additionalProperties:
                        type: string
                      description: Key-value map of resource tags.
                      type: object
                    versionId:
                      description: Specifies the table version for the output data schema.
                        Defaults to LATEST.
                      type: string
                  required:
                  - destination
                  - name
                  - region
                  type: object
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                      default: "aws-provider-config"
                    region:
                      type: string
                      default: "us-west-2"
                  required:
                  - region
                  type: object
              required:
              - forProvider
              - resourceConfig
              type: object
            status:
              properties:
                kinesisRoleArn:
                  type: string
                kinesisRoleName:
                  type: string
                kinesisName:
                  type: string
                kinesisArn:
                  type: string
              type: object
          required:
          - spec
          type: object
---
# Source: crossplane-on-eks/templates/kms/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xencryptionkeys.awsblueprints.io
spec:
  group: awsblueprints.io
  names:
    kind: XEncryptionKey
    plural: xencryptionkeys
  claimNames:
    kind: EncryptionKey
    plural: encryptionkeys
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                policy:
                  type: string
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    region:
                      type: string
                  required:
                  - region
                  type: object
              required:
              - resourceConfig
              type: object
            status:
              properties:
                keyName:
                  type: string
                keyId:
                  type: string
                keyArn:
                  type: string
              type: object
          required:
          - spec
          type: object
---
# Source: crossplane-on-eks/templates/lambda/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xlambdafunctions.awsblueprints.io
spec:
  group: awsblueprints.io
  names:
    kind: XLambdaFunction
    plural: xlambdafunctions
  claimNames:
    kind: LambdaFunction
    plural: lambdafunctions
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                imageUri:
                  type: string
                timeout:
                  type: integer
                  default: 30
                memorySize:
                  type: integer
                  default: 128
                runTime:
                  type: string
                handler:
                  type: string
                permissionsBoundaryArn:
                  type: string
                bucketName:
                  type: string
                bucketKey:
                  type: string
                envVariables:
                  type: object
                  additionalProperties:
                    type: string
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    region:
                      type: string
                  required:
                  - region
                  type: object
              required:
              - resourceConfig
              type: object
            status:
              properties:
                functionRoleArn:
                  type: string
                functionRoleName:
                  type: string
                functionName:
                  type: string
                functionArn:
                  description: Indicates this function's ARN
                  type: string
              type: object
          required:
          - spec
          type: object
---
# Source: crossplane-on-eks/templates/s3-irsa/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xs3irsas.awsblueprints.io
spec:
  claimNames:
    kind: S3IRSA
    plural: s3irsas
  group: awsblueprints.io
  names:
    kind: XS3IRSA
    plural: xs3irsas
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          description: S3IRSA is the Schema for the s3irsas API
          properties:
            spec:
              description: S3IRSASpec defines the desired state of S3IRSA
              properties:
                policyArns:
                  items:
                    type: string
                  type: array
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    region:
                      type: string
                    tags:
                      items:
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        required:
                        - key
                        - value
                        type: object
                      type: array
                  required:
                  - providerConfigName
                  - region
                  type: object
                serviceAccountName:
                  type: string
              required:
              - resourceConfig
              type: object
            status:
              description: S3IRSAStatus defines the observed state of S3IRSA
              properties:
                bucketArn:
                  type: string
                roleName:
                  type: string
              type: object
          type: object
---
# Source: crossplane-on-eks/templates/s3/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xobjectstorages.awsblueprints.io
spec:
  claimNames:
    kind: ObjectStorage
    plural: objectstorages
  group: awsblueprints.io
  names:
    kind: XObjectStorage
    plural: xobjectstorages
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          properties:
            spec:
              description: ObjectStorageSpec defines the desired state of ObjectStorage
              properties:
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    region:
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      type: object
                  required:
                  - providerConfigName
                  - region
                  type: object
              required:
              - resourceConfig
              type: object
            status:
              description: ObjectStorageStatus defines the observed state of ObjectStorage
              properties:
                bucketName:
                  type: string
                bucketArn:
                  type: string
              type: object
          type: object
---
# Source: crossplane-on-eks/templates/serverless/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xserverlessapp.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
spec:
  group: awsblueprints.io
  names:
    kind: XServerlessApp
    plural: xserverlessapp
  claimNames:
    kind: ServerlessApp
    plural: serverlessapps
  defaultCompositionRef:
    name: xsqslambdas3.awsblueprints.io
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                imageName:
                  type: string
                bucketName:
                  type: string
                bucketKey:
                  type: string
                handler:
                  type: string
                memorySize:
                  type: integer
                envVariables:
                  type: object
                  additionalProperties:
                    type: string
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                      default: "aws-provider-config"
                    region:
                      type: string
                      default: "us-west-2"
                  required:
                  - region
                  type: object
              required:
              - resourceConfig
              type: object
            status:
              properties:
                printerRoleName:
                  type: string
                processorRoleName:
                  type: string
                processorFuncName:
                  type: string
                sourceQueueArn:
                  type: string
                bucketName:
                  type: string
                bucketArn:
                  type: string
                kmsKeyArn:
                  type: string
                keyName:
                  type: string
                accountNumber:
                  type: string
              type: object
          required:
          - spec
          type: object
---
# Source: crossplane-on-eks/templates/sns-sqs/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xfanouts.awsblueprints.io
spec:
  group: awsblueprints.io
  names:
    kind: XFanout
    plural: xfanouts
  claimNames:
    kind: Fanout
    plural: fanouts
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                encryptionKey:
                  type: string
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    region:
                      type: string
                  required:
                  - region
                  type: object
              required:
              - resourceConfig
              type: object
            status:
              properties:
                queueUrl:
                  type: string
                queueArn:
                  type: string
                topicArn:
                  type: string
              type: object
          required:
          - spec
          type: object
---
# Source: crossplane-on-eks/templates/sns/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xnotifications.awsblueprints.io
spec:
  group: awsblueprints.io
  names:
    kind: XNotification
    plural: xnotifications
  claimNames:
    kind: Notification
    plural: notifications
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                encryptionKey:
                  type: string
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    region:
                      type: string
                  required:
                  - region
                  type: object
              required:
              - resourceConfig
              type: object
            status:
              properties:
                topicArn:
                  type: string
                topicId:
                  type: string
              type: object
          required:
          - spec
          type: object
---
# Source: crossplane-on-eks/templates/sqs/definition.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xqueues.awsblueprints.io
spec:
  group: awsblueprints.io
  names:
    kind: XQueue
    plural: xqueues
  claimNames:
    kind: Queue
    plural: queues
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                encryptionKey:
                  type: string
                  default: alias/aws/sqs
                resourceConfig:
                  description: ResourceConfig defines general properties of this AWS
                    resource.
                  properties:
                    deletionPolicy:
                      description: Defaults to Delete
                      enum:
                      - Delete
                      - Orphan
                      type: string
                    name:
                      description: Set the name of this resource in AWS to the value
                        provided by this field.
                      type: string
                    providerConfigName:
                      type: string
                    region:
                      type: string
                  required:
                  - region
                  type: object
              required:
              - resourceConfig
              type: object
            status:
              properties:
                queueUrl:
                  type: string
                queueArn:
                  type: string
                
              type: object
          required:
          - spec
          type: object
---
# Source: crossplane-on-eks/templates/aurora/aurora.yaml
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xauroras-postgresql.db.awsblueprint.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    cluster.awsblueprints.io/configuration: standard
    cluster.awsblueprints.io/type: postgresql
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: db.awsblueprint.io/v1alpha1
    kind: XAurora
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              appendSlice: true
  resources:
    - name: aurora-cluster-subnetgroup
      base:
        apiVersion: rds.aws.upbound.io/v1beta1
        kind: SubnetGroup
        metadata:
          name: aurora-cluster-sng
        spec:
          forProvider:
            description: "aurora subnet group"
            tags:
              environment: dev
              application: my-app
              bu: test
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - fromFieldPath: spec.networkConfig.subnetIds
          toFieldPath: spec.forProvider.subnetIds
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.subnetGroupArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.subnetGroupName 
    - name: aurora-cluster-sg
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroup
        metadata:
          name: aurora-cluster-sg
          labels:
            sg-selector: aurora-cluster-sg-label
        spec:
          forProvider:
            description: "aurora cluster security group"
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - fromFieldPath: spec.networkConfig.vpcId
          toFieldPath: spec.forProvider.vpcId
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.securityGroupId
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.securityGroupArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.name
          toFieldPath: status.securityGroupName  
    - name: aurora-cluster-sg-self-rule
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroupRule
        metadata:
          name: aurora-cluster-sg-self-rule
        spec:
          forProvider:
            protocol: tcp
            self: true
            type: ingress
            securityGroupIdSelector:
              matchLabels:
                sg-selector: aurora-cluster-sg-label
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.networkConfig.allowedPort
          toFieldPath: spec.forProvider.fromPort
        - type: FromCompositeFieldPath
          fromFieldPath: spec.networkConfig.allowedPort
          toFieldPath: spec.forProvider.toPort
        - type: FromCompositeFieldPath
          fromFieldPath: status.securityGroupId
          toFieldPath: spec.forProvider.securityGroupId
    - name: aurora-cluster-sg-app-rule
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroupRule
        metadata:
          name: aurora-cluster-sg-app-rule
        spec:
          forProvider:
            protocol: tcp
            type: ingress
            securityGroupIdSelector:
              matchLabels:
                sg-selector: aurora-cluster-sg-label
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.networkConfig.allowedPort
          toFieldPath: spec.forProvider.fromPort
        - type: FromCompositeFieldPath
          fromFieldPath: spec.networkConfig.allowedPort
          toFieldPath: spec.forProvider.toPort
        - type: FromCompositeFieldPath
          fromFieldPath: spec.networkConfig.allowedCidrBlocks
          toFieldPath: spec.forProvider.cidrBlocks
        - type: FromCompositeFieldPath
          fromFieldPath: spec.networkConfig.allowedSecurityGroupId
          toFieldPath: spec.forProvider.sourceSecurityGroupId
        - type: FromCompositeFieldPath
          fromFieldPath: status.securityGroupId
          toFieldPath: spec.forProvider.securityGroupId
    - name: aurora-cluster-sg-egress-rule
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroupRule
        metadata:
          name: aurora-cluster-sg-egress-rule
        spec:
          forProvider:
            protocol: tcp
            type: egress
            securityGroupIdSelector:
              matchLabels:
                sg-selector: aurora-cluster-sg-label
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.networkConfig.allowedPort
          toFieldPath: spec.forProvider.fromPort
        - type: FromCompositeFieldPath
          fromFieldPath: spec.networkConfig.allowedPort
          toFieldPath: spec.forProvider.toPort
        - type: FromCompositeFieldPath
          fromFieldPath: status.securityGroupId
          toFieldPath: spec.forProvider.securityGroupId
        - type: FromCompositeFieldPath
          fromFieldPath: status.securityGroupId
          toFieldPath: spec.forProvider.sourceSecurityGroupId
    - name: rds-cluster-para-group
      base:
        apiVersion: rds.aws.upbound.io/v1beta1
        kind: ClusterParameterGroup
        metadata:
          name: aurora-cluster-parameter-group
        spec:
          forProvider:
            description: Aurora cluster parameter group
            family: aurora-postgresql15
            parameter:
              - name: rds.force_ssl
                value: "1"
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.parameterGroupFamily
          toFieldPath: spec.forProvider.family
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.clusterParameterGroupArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.clusterParameterGroupName
    - name: aurora-cluster 
      connectionDetails:
      - type: FromFieldPath
        name: clusterUsername
        fromFieldPath: status.atProvider.masterUsername
      base:
        apiVersion: rds.aws.upbound.io/v1beta1
        kind: Cluster
        spec:
          forProvider:
            writeConnectionSecretToRef:
              namespace: crossplane-system
            engine: aurora-postgresql
            engineVersion: "15.2"
            manageMasterUserPassword: true
            masterUsername: adminuser
            skipFinalSnapshot: true
            storageEncrypted: true
            enableHttpEndpoint: false
            copyTagsToSnapshot: true
            databaseName: auroradb
            storageType: "aurora-iopt1"
            finalSnapshotIdentifier: "aurora-cluster-final-snapshot"
            backupRetentionPeriod: 7
            preferredBackupWindow: 02:00-03:00
            preferredMaintenanceWindow: sun:04:00-sun:05:00
            dbClusterParameterGroupName: default.aurora-postgresql15
            vpcSecurityGroupIDs: [] 
            vpcSecurityGroupIDSelector:
              matchControllerRef: true
            dbSubnetGroupNameSelector:
              matchControllerRef: true
            tags:
              environment: dev
              application: my-app
              bu: bu-name
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.databaseName
          toFieldPath: spec.forProvider.databaseName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.engine
          toFieldPath: spec.forProvider.engine
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.engineVersion
          toFieldPath: spec.forProvider.engineVersion
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.masterUsername
          toFieldPath: spec.forProvider.masterUsername
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.skipFinalSnapshot
          toFieldPath: spec.forProvider.skipFinalSnapshot
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.storageType
          toFieldPath: spec.forProvider.storageType
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.allocatedStorage
          toFieldPath: spec.forProvider.allocatedStorage
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.availabilityZones
          toFieldPath: spec.forProvider.availabilityZones
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.backupRetentionPeriod
          toFieldPath: spec.forProvider.backupRetentionPeriod
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.enabledCloudwatchLogsExports
          toFieldPath: spec.forProvider.enabledCloudwatchLogsExports
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.preferredBackupWindow
          toFieldPath: spec.forProvider.preferredBackupWindow
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.preferredMaintenanceWindow
          toFieldPath: spec.forProvider.preferredMaintenanceWindow
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.applyImmediately
          toFieldPath: spec.forProvider.applyImmediately
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.snapshotIdentifier
          toFieldPath: spec.forProvider.snapshotIdentifier
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.finalSnapshotIdentifier
          toFieldPath: spec.forProvider.finalSnapshotIdentifier
        - type: FromCompositeFieldPath
          fromFieldPath: status.clusterParameterGroupName
          toFieldPath: spec.forProvider.dbClusterParameterGroupName
        - type: FromCompositeFieldPath
          fromFieldPath: status.securityGroupId
          toFieldPath: spec.forProvider.vpcSecurityGroupIds[0]
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.clusterIdentifier
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.clusterArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.readerEndpoint
          toFieldPath: status.clusterReaderEndpoint
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.endpoint
          toFieldPath: status.clusterEndpoint
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.masterUserSecret[0].secretArn
          toFieldPath: status.clusterMasterSecretArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.masterUsername
          toFieldPath: status.clusterUsername
    - name: aurora-cluster-instance-01
      base:
        apiVersion: rds.aws.upbound.io/v1beta1
        kind: ClusterInstance
        spec:
          forProvider:
            promotionTier: 0
            engine: aurora-postgresql
            engineVersion: "15.2"
            instanceClass: db.r6g.large
            publiclyAccessible: false
            autoMinorVersionUpgrade: true
            copyTagsToSnapshot: true
            performanceInsightsEnabled: true
            dbSubnetGroupNameSelector:
              matchControllerRef: true
            clusterIdentifierSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.engine
          toFieldPath: spec.forProvider.engine
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.engineVersion
          toFieldPath: spec.forProvider.engineVersion
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.clusterInstanceClass
          toFieldPath: spec.forProvider.instanceClass
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.performanceInsightsEnabled
          toFieldPath: spec.forProvider.performanceInsightsEnabled
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.monitoringRoleArn
          toFieldPath: spec.forProvider.monitoringRoleArn  
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.monitoringInterval
          toFieldPath: spec.forProvider.monitoringInterval
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.applyImmediately
          toFieldPath: spec.forProvider.applyImmediately
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.performanceInsightsRetentionPeriod
          toFieldPath: spec.forProvider.performanceInsightsRetentionPeriod
        - type: FromCompositeFieldPath
          fromFieldPath: status.clusterIdentifier
          toFieldPath: spec.forProvider.clusterIdentifier
    - name: aurora-cluster-instance-02
      base:
        apiVersion: rds.aws.upbound.io/v1beta1
        kind: ClusterInstance
        spec:
          forProvider:
            promotionTier: 1
            engine: aurora-postgresql
            engineVersion: "15.2"
            instanceClass: db.r6g.large
            publiclyAccessible: false
            autoMinorVersionUpgrade: true
            copyTagsToSnapshot: true
            performanceInsightsEnabled: true
            dbSubnetGroupNameSelector:
              matchControllerRef: true
            clusterIdentifierSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.engine
          toFieldPath: spec.forProvider.engine
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.engineVersion
          toFieldPath: spec.forProvider.engineVersion
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.clusterInstanceClass
          toFieldPath: spec.forProvider.instanceClass
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.performanceInsightsEnabled
          toFieldPath: spec.forProvider.performanceInsightsEnabled
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.monitoringRoleArn
          toFieldPath: spec.forProvider.monitoringRoleArn  
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.monitoringInterval
          toFieldPath: spec.forProvider.monitoringInterval
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.applyImmediately
          toFieldPath: spec.forProvider.applyImmediately
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.performanceInsightsRetentionPeriod
          toFieldPath: spec.forProvider.performanceInsightsRetentionPeriod
        - type: FromCompositeFieldPath
          fromFieldPath: status.clusterIdentifier
          toFieldPath: spec.forProvider.clusterIdentifier
    - name: aurora-cluster-instance-03
      base:
        apiVersion: rds.aws.upbound.io/v1beta1
        kind: ClusterInstance
        spec:
          forProvider:
            promotionTier: 2
            engine: aurora-postgresql
            engineVersion: "15.2"
            instanceClass: db.r6g.large
            publiclyAccessible: false
            autoMinorVersionUpgrade: true
            copyTagsToSnapshot: true
            performanceInsightsEnabled: true
            dbSubnetGroupNameSelector:
              matchControllerRef: true
            clusterIdentifierSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.engine
          toFieldPath: spec.forProvider.engine
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.engineVersion
          toFieldPath: spec.forProvider.engineVersion
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.clusterInstanceClass
          toFieldPath: spec.forProvider.instanceClass
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.performanceInsightsEnabled
          toFieldPath: spec.forProvider.performanceInsightsEnabled
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.monitoringRoleArn
          toFieldPath: spec.forProvider.monitoringRoleArn  
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.monitoringInterval
          toFieldPath: spec.forProvider.monitoringInterval
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.applyImmediately
          toFieldPath: spec.forProvider.applyImmediately
        - type: FromCompositeFieldPath
          fromFieldPath: spec.clusterConfig.performanceInsightsRetentionPeriod
          toFieldPath: spec.forProvider.performanceInsightsRetentionPeriod
        - type: FromCompositeFieldPath
          fromFieldPath: status.clusterIdentifier
          toFieldPath: spec.forProvider.clusterIdentifier
    - name: aurora-cluster-proxy
      connectionDetails:
        - type: FromFieldPath
          name: proxyEndpoint
          fromFieldPath: status.atProvider.endpoint
      base:
        apiVersion: rds.aws.upbound.io/v1beta1
        kind: Proxy
        metadata:
          name: aurora-proxy
        spec:
          forProvider:
            writeConnectionSecretToRef:
              namespace: crossplane-system
            auth:
            - authScheme: SECRETS
              description: "auth for aurora proxy"
              iamAuth: REQUIRED
            engineFamily: POSTGRESQL
            requireTls: true
            debugLogging: true
            idleClientTimeout: 1800
            vpcSecurityGroupIds: []
            vpcSecurityGroupIDSelector:
              matchControllerRef: true
            tags:
              environment: dev
              application: my-app
              bu: test
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.proxyConfig.debugLogging
          toFieldPath: spec.forProvider.debugLogging
        - type: FromCompositeFieldPath
          fromFieldPath: spec.proxyConfig.idleClientTimeout
          toFieldPath: spec.forProvider.idleClientTimeout
        - type: FromCompositeFieldPath
          fromFieldPath: spec.proxyConfig.proxyRoleArn
          toFieldPath: spec.forProvider.roleArn
        - fromFieldPath: spec.networkConfig.subnetIds
          toFieldPath: spec.forProvider.vpcSubnetIds
        - type: FromCompositeFieldPath
          fromFieldPath: status.clusterMasterSecretArn
          toFieldPath: spec.forProvider.auth[0].secretArn
        - type: FromCompositeFieldPath
          fromFieldPath: spec.proxyConfig.iamAuth
          toFieldPath: spec.forProvider.auth[0].iamAuth
        - type: FromCompositeFieldPath
          fromFieldPath: status.securityGroupId
          toFieldPath: spec.forProvider.vpcSecurityGroupIds[0]  
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.proxyArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.endpoint
          toFieldPath: status.proxyEndpoint
    - name: aurora-cluster-proxy-default-tg
      base:
        apiVersion: rds.aws.upbound.io/v1beta1
        kind: ProxyDefaultTargetGroup
        metadata:
          name: aurora-proxy-default-tg
        spec:
          forProvider:
            connectionPoolConfig:
            - connectionBorrowTimeout: 10
              maxConnectionsPercent: 50
              maxIdleConnectionsPercent: 50
            dbProxyNameSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.proxyConfig.connectionBorrowTimeout
          toFieldPath: spec.forProvider.connectionPoolConfig[0].connectionBorrowTimeout
        - type: FromCompositeFieldPath
          fromFieldPath: spec.proxyConfig.maxConnectionsPercent
          toFieldPath: spec.forProvider.connectionPoolConfig[0].maxConnectionsPercent  
        - type: FromCompositeFieldPath
          fromFieldPath: spec.proxyConfig.maxIdleConnectionsPercent
          toFieldPath: spec.forProvider.connectionPoolConfig[0].maxIdleConnectionsPercent
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.name
          toFieldPath: status.defaultProxyTgName 
    - name: aurora-cluster-proxy-target  
      base:
        apiVersion: rds.aws.upbound.io/v1beta1
        kind: ProxyTarget
        metadata:
          name: aurora-proxy-target
        spec:
          forProvider:
            dbClusterIdentifier: proxy-db-sg
            dbProxyNameSelector:
              matchControllerRef: true
            targetGroupName: default   
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: status.defaultProxyTgName
          toFieldPath: spec.forProvider.targetGroupName
        - type: FromCompositeFieldPath
          fromFieldPath: status.clusterIdentifier
          toFieldPath: spec.forProvider.dbClusterIdentifier
---
# Source: crossplane-on-eks/templates/cloudwatch-logs/subscriptionfilter.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: subscriptionfilter.upbound.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    cloudwatch.awsblueprints.io/service: cloudwatch-logs
    cloudwatch.awsblueprints.io/logs: subscriptionfilter
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XSubscriptionFilter
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "subscriptionfilter-%s"
  resources:
    - name: subscriptionfilter
      base:
        apiVersion: cloudwatchlogs.aws.upbound.io/v1beta1
        kind: SubscriptionFilter
        spec:
          forProvider: {}
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.forProvider
          toFieldPath: spec.forProvider
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.name
          transforms:
            - type: string
              string:
                fmt: "subscriptionfilter-%s"
---
# Source: crossplane-on-eks/templates/delegates/delegate-irsa/delegate-irsa.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: delegateirsa.awsblueprints.io
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XDelegateIRSA
  environment:
    environmentConfigs:
      - type: Reference
        ref:
          name: cluster
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
  resources:
    - name: iam-role
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicy: ""
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromEnvironmentFieldPath
          fromFieldPath: awsAccountID
          toFieldPath: metadata.annotations[crossplane.io/awsaccountid]
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/awsaccountid]
          toFieldPath: status.awsAccountID
          policy:
            fromFieldPath: Required
        - type: FromEnvironmentFieldPath
          fromFieldPath: eksOIDC
          toFieldPath: metadata.annotations[crossplane.io/eksoidc]
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/eksoidc]
          toFieldPath: status.eksOIDC
          policy:
            fromFieldPath: Required
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.roleArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.roleName
          transforms:
            - type: string
              string:
                type: Regexp
                regexp:
                  match: 'arn:aws:iam::(\d+):role/(.*)'
                  group: 2
        - type: FromCompositeFieldPath
          fromFieldPath: spec.permissionsBoundaryArn
          toFieldPath: spec.forProvider.permissionsBoundary
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.assumeRolePolicy
          combine:
            variables:
            - fromFieldPath: status.awsAccountID
            - fromFieldPath: status.eksOIDC
            - fromFieldPath: status.eksOIDC
            - fromFieldPath: status.eksOIDC
            - fromFieldPath: spec.delegate.namespace
            - fromFieldPath: spec.serviceAccountName
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Federated": "arn:aws:iam::%s:oidc-provider/%s"
                      },
                      "Action": "sts:AssumeRoleWithWebIdentity",
                      "Condition": {
                        "StringEquals": {
                          "%s:aud": "sts.amazonaws.com",
                          "%s:sub": "system:serviceaccount:%s:%s"
                        }
                      }
                    }
                  ]
                }
    - name: service-account
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                name: ""
                namespace: default
                annotations:
                  eks.amazonaws.com/role-arn: ""
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.delegate.namespace
          toFieldPath: spec.forProvider.manifest.metadata.namespace
        - type: FromCompositeFieldPath
          fromFieldPath: spec.serviceAccountName
          toFieldPath: spec.forProvider.manifest.metadata.name
        - type: FromCompositeFieldPath
          fromFieldPath: status.roleArn
          toFieldPath: spec.forProvider.manifest.metadata.annotations[eks.amazonaws.com/role-arn]
          policy:
            fromFieldPath: Required
---
# Source: crossplane-on-eks/templates/delegates/delegate-s3-irsa/delegate-s3-irsa.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xdelegates3irsa.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XDelegateS3IRSA
  patchSets:
    - name: common-fields-composition
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig
          toFieldPath: spec.resourceConfig
  resources:
    - name: bucket-binding
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: resourcebinding.rock8s.com/v1alpha1
              kind: ResourceBinding
              metadata:
                name: #to-be-patched
                namespace: #to-be-patched
              spec:
                resource:
                  apiVersion: awsblueprints.io/v1alpha1
                  kind: S3IRSA
                  name: #to-be-patched
                status:
                  bucketArn: status.bucketArn
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-namespace]
          toFieldPath: spec.forProvider.manifest.metadata.namespace
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.manifest.metadata.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.delegate.s3irsa.name
          toFieldPath: spec.forProvider.manifest.spec.resource.name
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.manifest.status.resource.bucketArn
          toFieldPath: status.bucketArn
    - name: delegate-irsa
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XDelegateIRSA
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: spec.delegate.namespace
          toFieldPath: spec.delegate.namespace
        - type: FromCompositeFieldPath
          fromFieldPath: spec.serviceAccountName
          toFieldPath: spec.serviceAccountName
        - type: ToCompositeFieldPath
          fromFieldPath: status.roleName
          toFieldPath: status.roleName
        - type: ToCompositeFieldPath
          fromFieldPath: status.roleArn
          toFieldPath: status.roleArn
    - name: irsa-bucket-policy
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: write
              iam.awsblueprints.io/service: s3
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.roleName
          toFieldPath: spec.roleName
        - type: FromCompositeFieldPath
          fromFieldPath: status.bucketArn
          toFieldPath: spec.resourceArn
---
# Source: crossplane-on-eks/templates/dynamo-irsa/dynamo-irsa.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xdynamoirsa.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XDynamoIRSA
  patchSets:
    - name: common-fields-composition
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig
          toFieldPath: spec.resourceConfig
        - type: FromCompositeFieldPath
          fromFieldPath: spec.dynamoConfig
          toFieldPath: spec.dynamoConfig
  resources:
    - name: dynamodbtable
      connectionDetails:
        - type: FromFieldPath
          name: tableName
          fromFieldPath: status.tableName
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XDynamoDBTable
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: ToCompositeFieldPath
          fromFieldPath: status.tableName
          toFieldPath: status.tableName
        - type: ToCompositeFieldPath
          fromFieldPath: status.tableArn
          toFieldPath: status.tableArn
    - name: irsa
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XIRSA
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.serviceAccountName
        - type: ToCompositeFieldPath
          fromFieldPath: status.roleName
          toFieldPath: status.roleName
    - name: irsa-dynamo-policy
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: write
              iam.awsblueprints.io/service: dynamodb
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.roleName
          toFieldPath: spec.roleName
        - type: FromCompositeFieldPath
          fromFieldPath: status.tableArn
          toFieldPath: spec.resourceArn
---
# Source: crossplane-on-eks/templates/dynamodb/table.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: table.dynamodb.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XDynamoDBTable
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
  resources:
    - name: table
      connectionDetails:
        - type: FromFieldPath
          name: tableName
          fromFieldPath: status.atProvider.id
      base:
        apiVersion: dynamodb.aws.upbound.io/v1beta1
        kind: Table
        spec:
          forProvider:
            writeConnectionSecretToRef:
              namespace: crossplane-system
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.dynamoConfig.attribute
          toFieldPath: spec.forProvider.attribute
          policy:
            mergeOptions:
              appendSlice: true
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: spec.dynamoConfig.hashKey
          toFieldPath: spec.forProvider.hashKey
        - type: FromCompositeFieldPath
          fromFieldPath: spec.dynamoConfig.billingMode
          toFieldPath: spec.forProvider.billingMode
        - type: FromCompositeFieldPath
          fromFieldPath: spec.dynamoConfig.rangeKey
          toFieldPath: spec.forProvider.rangeKey
        - type: FromCompositeFieldPath
          fromFieldPath: spec.dynamoConfig.readCapacity
          toFieldPath: spec.forProvider.readCapacity 
        - type: FromCompositeFieldPath
          fromFieldPath: spec.dynamoConfig.writeCapacity
          toFieldPath: spec.forProvider.writeCapacity
        - type: FromCompositeFieldPath
          fromFieldPath: spec.dynamoConfig.globalSecondaryIndex
          toFieldPath: spec.forProvider.globalSecondaryIndex
          policy:
            mergeOptions:
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: spec.dynamoConfig.localSecondaryIndex
          toFieldPath: spec.forProvider.localSecondaryIndex
          policy:
            mergeOptions:
              keepMapValues: true
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.tableName
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.tableArn
---
# Source: crossplane-on-eks/templates/event-source-mapping/sqs.yaml
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: sqs.esm.awsblueprints.io
  labels:
    esm.awsblueprints.io/service: sqs
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: EventSourceMapping
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "esm-%s"
  resources:
    - name: mapping
      base:
        apiVersion: lambda.aws.upbound.io/v1beta1
        kind: EventSourceMapping
        spec:
          forProvider:
            batchSize: 5
            region: us-west-2
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.sourceArn
          toFieldPath: spec.forProvider.eventSourceArn
        - type: FromCompositeFieldPath
          fromFieldPath: spec.funcName
          toFieldPath: spec.forProvider.functionName
---
# Source: crossplane-on-eks/templates/iam-policy/cloudwatch-metrics-write.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: write-cloudwatch-metrics.iampolicy.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    iam.awsblueprints.io/policy-type: write
    iam.awsblueprints.io/service: cloudwatch
    iam.awsblueprints.io/service-type: metrics
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: IAMPolicy
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "policy-cw-metrics-write-%s"
  resources:
    - name: write-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          deletionPolicy: Delete
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - fromFieldPath: spec.resourceArn
          toFieldPath: spec.forProvider.policy
          transforms:
            - type: string
              string:
                fmt: |
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                          "Action": [
                              "cloudwatch:PutMetricData"
                          ],
                          "Resource": [
                              "%s"
                          ],
                          "Effect": "Allow"
                      }
                    ]
                  }
    - name: policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArnSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleName
          toFieldPath: spec.forProvider.role
---
# Source: crossplane-on-eks/templates/iam-policy/dynamodb-write.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: write-dynamodb.iampolicy.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    iam.awsblueprints.io/policy-type: write
    iam.awsblueprints.io/service: dynamodb
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: IAMPolicy
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "policy-dynamodb-write-%s"
  resources:
    - name: write-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          deletionPolicy: Delete
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.policy
          combine:
            variables:
            - fromFieldPath: spec.resourceArn
            - fromFieldPath: spec.resourceArn
            strategy: string
            string:
              fmt: |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "ListAndDescribe",
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:List*",
                                "dynamodb:DescribeReservedCapacity*",
                                "dynamodb:DescribeLimits",
                                "dynamodb:DescribeTimeToLive"
                            ],
                            "Resource": [
                              "%s/*"
                            ]
                        },
                        {
                            "Sid": "SpecificTable",
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:BatchGet*",
                                "dynamodb:DescribeStream",
                                "dynamodb:DescribeTable",
                                "dynamodb:Get*",
                                "dynamodb:Query",
                                "dynamodb:Scan",
                                "dynamodb:BatchWrite*",
                                "dynamodb:CreateTable",
                                "dynamodb:Delete*",
                                "dynamodb:Update*",
                                "dynamodb:PutItem"
                            ],
                            "Resource": [
                              "%s"
                            ]
                        }
                    ]
                }
    - name: policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArnSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleName
          toFieldPath: spec.forProvider.role
---
# Source: crossplane-on-eks/templates/iam-policy/firehose-write.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: write-firehose.iampolicy.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    iam.awsblueprints.io/policy-type: write
    iam.awsblueprints.io/service: firehose
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: IAMPolicy
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "policy-write-firehose-%s"
  resources:
    - name: invoke-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          deletionPolicy: Delete
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - fromFieldPath: spec.resourceArn
          toFieldPath: spec.forProvider.policy
          transforms:
            - type: string
              string:
                fmt: |
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                          "Action": [
                              "firehose:PutRecord",
                              "firehose:PutRecordBatch"
                          ],
                          "Resource": [
                              "%s"
                          ],
                          "Effect": "Allow"
                      }
                    ]
                  }
    - name: policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArnSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleName
          toFieldPath: spec.forProvider.role
---
# Source: crossplane-on-eks/templates/iam-policy/kms-read.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: read-kms.iampolicy.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    iam.awsblueprints.io/policy-type: read
    iam.awsblueprints.io/service: kms
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: IAMPolicy
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "policy-kms-%s"
  resources:
    - name: read-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          deletionPolicy: Delete
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.policy
          combine:
            variables:
            - fromFieldPath: spec.resourceArn
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "kms:GenerateDataKey",
                        "kms:Decrypt"
                      ],
                      "Resource": [
                        "%s"
                      ]
                    }
                  ]
                }
    - name: policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArnSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleName
          toFieldPath: spec.forProvider.role
---
# Source: crossplane-on-eks/templates/iam-policy/lambda-invoke.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: lambda-invoke.iampolicy.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    iam.awsblueprints.io/policy-type: invoke
    iam.awsblueprints.io/service: lambda
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: IAMPolicy
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "policy-invoke-lambda-%s"
  resources:
    - name: invoke-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          deletionPolicy: Delete
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - fromFieldPath: spec.resourceArn
          toFieldPath: spec.forProvider.policy
          transforms:
            - type: string
              string:
                fmt: |
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                          "Action": [
                              "lambda:InvokeFunction",
                              "lambda:GetFunctionConfiguration"
                          ],
                          "Resource": [
                              "%s"
                          ],
                          "Effect": "Allow"
                      }
                    ]
                  }
    - name: policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArnSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleName
          toFieldPath: spec.forProvider.role
---
# Source: crossplane-on-eks/templates/iam-policy/s3-read.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: read-s3.iampolicy.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    iam.awsblueprints.io/policy-type: read
    iam.awsblueprints.io/service: s3
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: IAMPolicy
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "policy-s3-read-%s"
  resources:
    - name: read-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          deletionPolicy: Delete
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.policy
          combine:
            variables:
            - fromFieldPath: spec.resourceArn
            - fromFieldPath: spec.resourceArn
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:GetObject"
                      ],
                      "Resource": [
                        "%s/*"
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:ListBucket"
                      ],
                      "Resource": [
                        "%s"
                      ]
                    }
                  ]
                }
    - name: policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArnSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleName
          toFieldPath: spec.forProvider.role
---
# Source: crossplane-on-eks/templates/iam-policy/s3-write-firehose.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: write-firehose-s3.iampolicy.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    iam.awsblueprints.io/policy-type: write
    iam.awsblueprints.io/service: s3
    iam.awsblueprints.io/from-service: firehose
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: IAMPolicy
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "policy-s3-write-firehose-%s"
  resources:
    - name: write-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          deletionPolicy: Delete
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.policy
          combine:
            variables:
            - fromFieldPath: spec.resourceArn
            - fromFieldPath: spec.resourceArn
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:GetBucketLocation",
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:ListBucketMultipartUploads",
                            "s3:PutObject"
                        ],
                        "Resource": [
                            "%s",
                            "%s/*"
                        ],
                        "Effect": "Allow"
                    }
                  ]
                }
    - name: policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArnSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleName
          toFieldPath: spec.forProvider.role
---
# Source: crossplane-on-eks/templates/iam-policy/s3-write.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: write-s3.iampolicy.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    iam.awsblueprints.io/policy-type: write
    iam.awsblueprints.io/service: s3
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: IAMPolicy
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "policy-s3-write-%s"
  resources:
    - name: write-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          deletionPolicy: Delete
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.policy
          combine:
            variables:
            - fromFieldPath: spec.resourceArn
            - fromFieldPath: spec.resourceArn
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:*"
                      ],
                      "Resource": [
                        "%s/*"
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:ListBucket",
                        "s3:GetBucketLocation"
                      ],
                      "Resource": [
                        "%s"
                      ]
                    }
                  ]
                }
    - name: policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArnSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleName
          toFieldPath: spec.forProvider.role
---
# Source: crossplane-on-eks/templates/iam-policy/sqs-read.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: read-sqs.iampolicy.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    iam.awsblueprints.io/policy-type: read
    iam.awsblueprints.io/service: sqs
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: IAMPolicy
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "policy-sqs-read-%s"
  resources:
    - name: read-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          deletionPolicy: Delete
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.policy
          combine:
            variables:
            - fromFieldPath: spec.resourceArn
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:ReceiveMessage",
                        "sqs:DeleteMessage",
                        "sqs:GetQueueAttributes"
                      ],
                      "Resource": [
                        "%s"
                      ]
                    }
                  ]
                }
    - name: policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArnSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleName
          toFieldPath: spec.forProvider.role
---
# Source: crossplane-on-eks/templates/iam-policy/sqs-write.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: write-sqs.iampolicy.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    iam.awsblueprints.io/policy-type: write
    iam.awsblueprints.io/service: sqs
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: IAMPolicy
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "policy-sqs-write-%s"
  resources:
    - name: write-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        spec:
          deletionPolicy: Delete
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.policy
          combine:
            variables:
            - fromFieldPath: spec.resourceArn
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:SendMessage",
                        "sqs:SetQueueAttributes"
                      ],
                      "Resource": [
                        "%s"
                      ]
                    }
                  ]
                }
    - name: policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArnSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.roleName
          toFieldPath: spec.forProvider.role
---
# Source: crossplane-on-eks/templates/irsa/irsa.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: irsa.awsblueprints.io
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XIRSA
  environment:
    environmentConfigs:
      - type: Reference
        ref:
          name: cluster
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
  resources:
    - name: iam-role
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicy: ""
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromEnvironmentFieldPath
          fromFieldPath: awsAccountID
          toFieldPath: metadata.annotations[crossplane.io/awsaccountid]
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/awsaccountid]
          toFieldPath: status.awsAccountID
          policy:
            fromFieldPath: Required
        - type: FromEnvironmentFieldPath
          fromFieldPath: eksOIDC
          toFieldPath: metadata.annotations[crossplane.io/eksoidc]
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/eksoidc]
          toFieldPath: status.eksOIDC
          policy:
            fromFieldPath: Required
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.roleArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.roleName
          transforms:
            - type: string
              string:
                type: Regexp
                regexp:
                  match: 'arn:aws:iam::(\d+):role/(.*)'
                  group: 2
        - type: FromCompositeFieldPath
          fromFieldPath: spec.permissionsBoundaryArn
          toFieldPath: spec.forProvider.permissionsBoundary
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.assumeRolePolicy
          combine:
            variables:
            - fromFieldPath: status.awsAccountID
            - fromFieldPath: status.eksOIDC
            - fromFieldPath: status.eksOIDC
            - fromFieldPath: status.eksOIDC
            - fromFieldPath: metadata.labels[crossplane.io/claim-namespace]
            - fromFieldPath: spec.serviceAccountName
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Federated": "arn:aws:iam::%s:oidc-provider/%s"
                      },
                      "Action": "sts:AssumeRoleWithWebIdentity",
                      "Condition": {
                        "StringEquals": {
                          "%s:aud": "sts.amazonaws.com",
                          "%s:sub": "system:serviceaccount:%s:%s"
                        }
                      }
                    }
                  ]
                }
    - name: service-account
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                name: ""
                namespace: default
                annotations:
                  eks.amazonaws.com/role-arn: ""
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-namespace]
          toFieldPath: spec.forProvider.manifest.metadata.namespace
        - type: FromCompositeFieldPath
          fromFieldPath: spec.serviceAccountName
          toFieldPath: spec.forProvider.manifest.metadata.name
        - type: FromCompositeFieldPath
          fromFieldPath: status.roleArn
          toFieldPath: spec.forProvider.manifest.metadata.annotations[eks.amazonaws.com/role-arn]
          policy:
            fromFieldPath: Required
---
# Source: crossplane-on-eks/templates/kinesis-data-firehose-app/log-forwarder.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: firehose.upbound.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    kinesis.awsblueprints.io/app: firehose
    kinesis.awsblueprints.io/destination: s3
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XFirehoseApp
  patchSets:
    - name: common-fields-composition
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig
          toFieldPath: spec.resourceConfig
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
  environment:
    environmentConfigs:
      - type: Selector
        selector:
          matchLabels:
          - key: awsblueprints.io/environment
            valueFromFieldPath: spec.environmentConfigs
  resources:
    - name: lambda
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XLambdaFunction
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              awsblueprints.io/type: zip
          runTime: python3.8
          handler: index.handler
          memorySize: 256
          timeout: 60
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: spec.envVariables
          toFieldPath: spec.envVariables
        - type: FromEnvironmentFieldPath
          fromFieldPath: bucketName
          toFieldPath: spec.bucketName
        - type: FromEnvironmentFieldPath
          fromFieldPath: bucketKey
          toFieldPath: spec.bucketKey
        - type: FromEnvironmentFieldPath
          fromFieldPath: DYNATRACE_API_KEY
          toFieldPath: spec.envVariables.DYNATRACE_API_KEY
        - type: FromEnvironmentFieldPath
          fromFieldPath: DYNATRACE_ENV_URL
          toFieldPath: spec.envVariables.DYNATRACE_ENV_URL
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-processor"
        - type: ToCompositeFieldPath
          fromFieldPath: status.functionRoleName
          toFieldPath: status.processorRoleName
        - type: ToCompositeFieldPath
          fromFieldPath: status.functionName
          toFieldPath: status.processorFuncName
        - type: ToCompositeFieldPath
          fromFieldPath: status.functionArn
          toFieldPath: status.processorFuncArn
    - name: bucket
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XObjectStorage
        metadata:
          name: standard-object-storage
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              s3.awsblueprints.io/configuration: standard
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: ToCompositeFieldPath
          fromFieldPath: status.bucketName
          toFieldPath: status.bucketName
        - type: ToCompositeFieldPath
          fromFieldPath: status.bucketArn
          toFieldPath: status.bucketArn
    - name: lambda-metrics-write
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          resourceArn: "*"
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: write
              iam.awsblueprints.io/service: cloudwatch
              iam.awsblueprints.io/service-type: metrics
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.processorRoleName
          toFieldPath: spec.roleName
    - name: kinesis-firehose
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XKinesisFirehose
        metadata:
        spec:
          forProvider:
            destination: extended_s3
            extendedS3Configuration:
              - bufferInterval: 60
                bufferSize: 5
                compressionFormat: GZIP
                prefix: "success-"
                processingConfiguration:
                - enabled: true
                  processors:
                  - parameters:
                    - parameterName: LambdaArn
                      parameterValue: TBD
                    type: Lambda
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        # We want to pass down a custom label for deliverystreams.firehose.aws.upbound.io CR
        # This will allow us to find this CR with matchSelector in subscriptionfilters.cloudwatchlogs.aws.upbound.io CRs
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels
          toFieldPath: metadata.labels
          policy:
            mergeOptions:
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.name
          toFieldPath: spec.forProvider.name
        - type: FromCompositeFieldPath
          fromFieldPath: status.bucketName
          toFieldPath: spec.forProvider.extendedS3Configuration[0].bucketArnRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: status.kinesisRoleName
          toFieldPath: spec.forProvider.extendedS3Configuration[0].roleArnRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: status.processorFuncArn
          toFieldPath: spec.forProvider.extendedS3Configuration[0].processingConfiguration[0].processors[0].parameters[0].parameterValue
        - type: ToCompositeFieldPath
          fromFieldPath: status.kinesisRoleArn
          toFieldPath: status.kinesisRoleArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.kinesisRoleName
          toFieldPath: status.kinesisRoleName
        - type: ToCompositeFieldPath
          fromFieldPath: status.kinesisName
          toFieldPath: status.kinesisName
        - type: ToCompositeFieldPath
          fromFieldPath: status.kinesisArn
          toFieldPath: status.kinesisArn
    - name: kinesis-write-s3
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: write
              iam.awsblueprints.io/service: s3
              iam.awsblueprints.io/from-service: firehose
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.kinesisRoleName
          toFieldPath: spec.roleName
        - type: FromCompositeFieldPath
          fromFieldPath: status.bucketArn
          toFieldPath: spec.resourceArn
    - name: kinesis-invoke-lambda
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: invoke
              iam.awsblueprints.io/service: lambda
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.kinesisRoleName
          toFieldPath: spec.roleName
        - type: FromCompositeFieldPath
          fromFieldPath: status.processorFuncArn
          toFieldPath: spec.resourceArn
    - name: logs-write-firehose-role
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        metadata:
          labels:
            iam.awsblueprints.io/policy-type: write
            iam.awsblueprints.io/service: firehose
        spec:
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.assumeRolePolicy
          transforms:
            - type: string
              string:
                fmt: |
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "logs.%s.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                      }
                    ]
                  }
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-firehose-write-role"
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.cloudwatchlogsRoleArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.cloudwatchlogsRoleName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.permissionsBoundaryArn
          toFieldPath: spec.forProvider.permissionsBoundary
    - name: logs-write-firehose-policy
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: write
              iam.awsblueprints.io/service: firehose
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.cloudwatchlogsRoleName
          toFieldPath: spec.roleName
        - type: FromCompositeFieldPath
          fromFieldPath: status.kinesisArn
          toFieldPath: spec.resourceArn
---
# Source: crossplane-on-eks/templates/kinesis-data-firehose/kinesis-data-firehose.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: kinesisfirehose.upbound.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    kinesis.awsblueprints.io/service: firehose
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XKinesisFirehose
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "kinesis-%s"
        - type: FromCompositeFieldPath  # Labels are required because they are later used by SubscriptionFilter matchlabel selector
          fromFieldPath: metadata.labels
          toFieldPath: metadata.labels
          policy:
            mergeOptions:
              keepMapValues: true
  resources:
    - name: kinesis-firehose
      base:
        apiVersion: firehose.aws.upbound.io/v1beta1
        kind: DeliveryStream
        spec:
          forProvider: {}
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.forProvider
          toFieldPath: spec.forProvider
        - type: PatchSet
          patchSetName: common-fields
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.kinesisArn
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: status.kinesisName
    - name: kinesis-role
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "firehose.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              }
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.kinesisRoleArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.kinesisRoleName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.permissionsBoundaryArn
          toFieldPath: spec.forProvider.permissionsBoundary
---
# Source: crossplane-on-eks/templates/kms/kms.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xencryptionkeys-kms.awsblueprints.io
  labels:
    awsblueprints.io/environment: dev
    awsblueprints.io/provider: aws
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XEncryptionKey
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
  resources:
    - name: key
      base:
        apiVersion: kms.aws.upbound.io/v1beta1
        kind: Key
        spec:
          forProvider:
            description: "for use with this account"
            deletionWindowInDays: 10
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.policy
          toFieldPath: spec.forProvider.policy
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.keyArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.keyId
          toFieldPath: status.keyId
    - name: alais
      base:
        apiVersion: kms.aws.upbound.io/v1beta1
        kind: Alias
        spec:
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: status.keyId
          toFieldPath: spec.forProvider.targetKeyId
          policy:
            fromFieldPath: Required
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.keyName
---
# Source: crossplane-on-eks/templates/lambda/container.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: container.lambda.aws.upbound.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    awsblueprints.io/type: container
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XLambdaFunction
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
  resources:
    - name: function-role
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "lambda.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              }
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-role"
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.functionRoleArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.functionRoleName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.permissionsBoundaryArn
          toFieldPath: spec.forProvider.permissionsBoundary
    - name: lambda-basic-policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
            roleSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
    - name: function
      base:
        apiVersion: lambda.aws.upbound.io/v1beta1
        kind: Function
        spec:
          deletionPolicy: Delete
          forProvider:
            packageType: Image
            environment:
              - variables: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.functionName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.memorySize
          toFieldPath: spec.forProvider.memorySize
        - type: FromCompositeFieldPath
          fromFieldPath: spec.timeout
          toFieldPath: spec.forProvider.timeout
        - type: FromCompositeFieldPath
          fromFieldPath: spec.imageUri
          toFieldPath: spec.forProvider.imageUri
        - type: FromCompositeFieldPath
          fromFieldPath: status.functionRoleArn
          toFieldPath: spec.forProvider.role
        - type: FromCompositeFieldPath
          fromFieldPath: spec.envVariables
          toFieldPath: spec.forProvider.environment[0].variables
          policy:
            mergeOptions:
              keepMapValues: true
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.functionArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.functionName
---
# Source: crossplane-on-eks/templates/lambda/zip.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: s3.lambda.aws.upbound.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    awsblueprints.io/type: zip
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XLambdaFunction
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
  resources:
    - name: function-role
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        spec:
          forProvider:
            assumeRolePolicy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "lambda.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              }
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-role"
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.functionRoleArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.functionRoleName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.permissionsBoundaryArn
          toFieldPath: spec.forProvider.permissionsBoundary
    - name: lambda-basic-policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArn: arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
            roleSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
    - name: function
      base:
        apiVersion: lambda.aws.upbound.io/v1beta1
        kind: Function
        spec:
          deletionPolicy: Delete
          forProvider:
            packageType: Zip
            role: "tbd"
            environment:
              - variables:
                  hardcoded: value
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.functionName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.memorySize
          toFieldPath: spec.forProvider.memorySize
        - type: FromCompositeFieldPath
          fromFieldPath: spec.timeout
          toFieldPath: spec.forProvider.timeout
        - type: FromCompositeFieldPath
          fromFieldPath: spec.runTime
          toFieldPath: spec.forProvider.runtime
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: spec.handler
          toFieldPath: spec.forProvider.handler
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: status.functionRoleArn
          toFieldPath: spec.forProvider.role
        - type: FromCompositeFieldPath
          fromFieldPath: spec.bucketName
          toFieldPath: spec.forProvider.s3Bucket
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: spec.bucketKey
          toFieldPath: spec.forProvider.s3Key
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: spec.envVariables
          toFieldPath: spec.forProvider.environment[0].variables
          policy:
            mergeOptions:
              keepMapValues: true
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.functionArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.functionName
---
# Source: crossplane-on-eks/templates/s3-irsa/s3-irsa.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xs3irsa.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XS3IRSA
  patchSets:
    - name: common-fields-composition
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig
          toFieldPath: spec.resourceConfig
  resources:
    - name: bucket
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XObjectStorage
        metadata:
          name: standard-object-storage
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: ToCompositeFieldPath
          fromFieldPath: status.bucketArn
          toFieldPath: status.bucketArn
    - name: irsa
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XIRSA
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.serviceAccountName
        - type: ToCompositeFieldPath
          fromFieldPath: status.roleName
          toFieldPath: status.roleName
    - name: irsa-bucket-policy
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: write
              iam.awsblueprints.io/service: s3
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.roleName
          toFieldPath: spec.roleName
        - type: FromCompositeFieldPath
          fromFieldPath: status.bucketArn
          toFieldPath: spec.resourceArn
---
# Source: crossplane-on-eks/templates/s3/general-purpose.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: s3bucket.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    s3.awsblueprints.io/configuration: standard
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XObjectStorage
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "bucket-%s"
  resources:
    - name: s3-bucket
      base:
        apiVersion: s3.aws.upbound.io/v1beta1
        kind: Bucket
        spec:
          deletionPolicy: Delete
          forProvider:
            region: us-west-2
            forceDestroy: true # be careful with this
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.bucketName
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.bucketArn
          transforms:
            - type: string
              string:
                fmt: "arn:aws:s3:::%s"
    - name: s3-blockpublicaccess
      base:
        apiVersion: s3.aws.upbound.io/v1beta1
        kind: BucketPublicAccessBlock
        spec:
          deletionPolicy: Delete
          blockPublicAcls: true
          blockPublicPolicy: true
          ignorePublicAcls: true
          restrictPublicBuckets: true
          forProvider:
            bucketSelector:
              matchControllerRef: true
      patches:
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
    - name: s3-serversideencryption
      base:
        apiVersion: s3.aws.upbound.io/v1beta1
        kind: BucketServerSideEncryptionConfiguration
        spec:
          deletionPolicy: Delete
          forProvider:
            bucketSelector:
              matchControllerRef: true
            rule:
              - applyServerSideEncryptionByDefault:
                  - sseAlgorithm: AES256
      patches:
        - fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
    - name: config-map
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: #to-be-patched
                namespace: #to-be-patched
              data:
                bucketName: #to-be-patched
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-namespace]
          toFieldPath: spec.forProvider.manifest.metadata.namespace
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.labels[crossplane.io/claim-name]
          toFieldPath: spec.forProvider.manifest.metadata.name
        - type: FromCompositeFieldPath
          fromFieldPath: status.bucketName
          toFieldPath: spec.forProvider.manifest.data.bucketName
          policy:
            fromFieldPath: Required
---
# Source: crossplane-on-eks/templates/serverless/sns-sqs-lambda-s3.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xsnssqslambdas3.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    serverless.awsblueprints.io/app: sns-sqs-lambda-s3
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XServerlessApp
  patchSets:
    - name: common-fields-composition
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig
          toFieldPath: spec.resourceConfig
    - name: common-lambda
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: status.bucketName
          toFieldPath: spec.envVariables[APP__CONFIG__DESTINATIONBUCKET]
          policy:
            fromFieldPath: Required
            mergeOptions:
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: status.bucketName
          toFieldPath: spec.envVariables[APP__CONFIG__DESTINATIONQUEUE]
          policy:
            fromFieldPath: Required
            mergeOptions:
              keepMapValues: true
  resources:
    - name: sns-sqs
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XFanout
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/environment: dev
              awsblueprints.io/provider: aws
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: ToCompositeFieldPath
          fromFieldPath: status.queueArn
          toFieldPath: status.sourceQueueArn
        - type: FromCompositeFieldPath
          fromFieldPath: status.keyName
          toFieldPath: spec.encryptionKey
    - name: processor-event-source
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: EventSourceMapping
        spec:
          compositionSelector:
            matchLabels:
              esm.awsblueprints.io/service: sqs
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.processorFuncName
          toFieldPath: spec.funcName
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: status.sourceQueueArn
          toFieldPath: spec.sourceArn
          policy:
            fromFieldPath: Required
    - name: processor-lambda
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XLambdaFunction
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              awsblueprints.io/type: zip
          resourceConfig:
            providerConfigName: aws-provider-config
            region: us-west-2
          handler: main
          runTime: go1.x
          envVariables:
            APP__CONFIG__PROCESSOR: "TRUE"
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: PatchSet
          patchSetName: common-lambda
        - type: FromCompositeFieldPath
          fromFieldPath: spec.bucketName
          toFieldPath: spec.bucketName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.bucketKey
          toFieldPath: spec.bucketKey
        - type: FromCompositeFieldPath
          fromFieldPath: spec.memorySize
          toFieldPath: spec.memorySize
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-processor"
        - type: ToCompositeFieldPath
          fromFieldPath: status.functionRoleName
          toFieldPath: status.processorRoleName
        - type: ToCompositeFieldPath
          fromFieldPath: status.functionName
          toFieldPath: status.processorFuncName
        - type: ToCompositeFieldPath
          fromFieldPath: status.functionRoleArn
          toFieldPath: status.accountNumber
          transforms:
            - type: string
              string:
                type: Regexp
                regexp:
                  match: 'arn:aws:iam::(\d+):.*'
                  group: 1
    - name: bucket
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XObjectStorage
        metadata:
          name: standard-object-storage
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              s3.awsblueprints.io/configuration: standard
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: ToCompositeFieldPath
          fromFieldPath: status.bucketName
          toFieldPath: status.bucketName
        - type: ToCompositeFieldPath
          fromFieldPath: status.bucketArn
          toFieldPath: status.bucketArn
    - name: processor-bucket-policy
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: write
              iam.awsblueprints.io/service: s3
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.processorRoleName
          toFieldPath: spec.roleName
        - type: FromCompositeFieldPath
          fromFieldPath: status.bucketArn
          toFieldPath: spec.resourceArn
    - name: processor-sqs-policy
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: read
              iam.awsblueprints.io/service: sqs
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.processorRoleName
          toFieldPath: spec.roleName
        - type: FromCompositeFieldPath
          fromFieldPath: status.sourceQueueArn
          toFieldPath: spec.resourceArn
    - name: kms-key
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XEncryptionKey
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: ToCompositeFieldPath
          fromFieldPath: status.keyArn
          toFieldPath: status.kmsKeyArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.keyName
          toFieldPath: status.keyName
        - type: CombineFromComposite
          toFieldPath: spec.policy
          policy:
            fromFieldPath: Required
          combine:
            variables:
              - fromFieldPath: status.accountNumber
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {"AWS": "arn:aws:iam::%s:root"},
                      "Action": "kms:*",
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Principal": {
                          "Service": "sns.amazonaws.com"
                      },
                      "Action": [
                          "kms:Decrypt",
                          "kms:GenerateDataKey*"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
    - name: processor-kms-policy
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: read
              iam.awsblueprints.io/service: kms
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.processorRoleName
          toFieldPath: spec.roleName
        - type: FromCompositeFieldPath
          fromFieldPath: status.kmsKeyArn
          toFieldPath: spec.resourceArn
---
# Source: crossplane-on-eks/templates/serverless/sqs-lambda-s3.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xsqslambdas3.awsblueprints.io
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    serverless.awsblueprints.io/app: sqs-lambda-s3
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XServerlessApp
  patchSets:
    - name: common-fields-composition
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig
          toFieldPath: spec.resourceConfig
    - name: common-lambda
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: status.bucketName
          toFieldPath: spec.envVariables[APP__CONFIG__DESTINATIONBUCKET]
          policy:
            fromFieldPath: Required
            mergeOptions:
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: status.bucketName
          toFieldPath: spec.envVariables[APP__CONFIG__DESTINATIONQUEUE]
          policy:
            fromFieldPath: Required
            mergeOptions:
              keepMapValues: true
  resources:
    - name: sqs
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XQueue
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: ToCompositeFieldPath
          fromFieldPath: status.queueArn
          toFieldPath: status.sourceQueueArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.queueArn
          toFieldPath: status.accountNumber
          transforms:
            - type: string
              string:
                type: Regexp
                regexp:
                  match: 'arn:aws:sqs:.*:(\d+):.*'
                  group: 1
    - name: processor-event-source
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: EventSourceMapping
        spec:
          compositionSelector:
            matchLabels:
              esm.awsblueprints.io/service: sqs
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.processorFuncName
          toFieldPath: spec.funcName
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: status.sourceQueueArn
          toFieldPath: spec.sourceArn
          policy:
            fromFieldPath: Required
    - name: processor-lambda
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XLambdaFunction
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              awsblueprints.io/type: container
          envVariables:
            APP__CONFIG__PROCESSOR: "TRUE"
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: PatchSet
          patchSetName: common-lambda
        - type: CombineFromComposite
          policy:
            fromFieldPath: Required
          combine:
            variables:
              - fromFieldPath: status.accountNumber
              - fromFieldPath: spec.resourceConfig.region
              - fromFieldPath: spec.imageName
            strategy: string
            string:
              fmt: "%s.dkr.ecr.%s.amazonaws.com/%s"
          toFieldPath: spec.imageUri
        - type: FromCompositeFieldPath
          fromFieldPath: spec.memorySize
          toFieldPath: spec.memorySize
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-processor"
        - type: ToCompositeFieldPath
          fromFieldPath: status.functionRoleName
          toFieldPath: status.processorRoleName
        - type: ToCompositeFieldPath
          fromFieldPath: status.functionName
          toFieldPath: status.processorFuncName
    - name: bucket
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XObjectStorage
        metadata:
          name: standard-object-storage
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              s3.awsblueprints.io/configuration: standard
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: ToCompositeFieldPath
          fromFieldPath: status.bucketName
          toFieldPath: status.bucketName
        - type: ToCompositeFieldPath
          fromFieldPath: status.bucketArn
          toFieldPath: status.bucketArn
    - name: processor-bucket-policy
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: write
              iam.awsblueprints.io/service: s3
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.processorRoleName
          toFieldPath: spec.roleName
        - type: FromCompositeFieldPath
          fromFieldPath: status.bucketArn
          toFieldPath: spec.resourceArn
    - name: processor-sqs-policy
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: IAMPolicy
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              iam.awsblueprints.io/policy-type: read
              iam.awsblueprints.io/service: sqs
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: status.processorRoleName
          toFieldPath: spec.roleName
        - type: FromCompositeFieldPath
          fromFieldPath: status.sourceQueueArn
          toFieldPath: spec.resourceArn
---
# Source: crossplane-on-eks/templates/sns-sqs/sns-sqs.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xfanout.awsblueprints.io
  labels:
    awsblueprints.io/environment: dev
    awsblueprints.io/provider: aws
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XFanout
  patchSets:
    - name: common-fields-composition
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig
          toFieldPath: spec.resourceConfig
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "sns-sqs-%s"
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "sns-sqs-%s"
  resources:
    - name: sqs
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XQueue
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: spec.encryptionKey
          toFieldPath: spec.encryptionKey
          policy:
            fromFieldPath: Required
        - type: ToCompositeFieldPath
          fromFieldPath: status.queueArn
          toFieldPath: status.queueArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.queueUrl
          toFieldPath: status.queueUrl
    - name: sns
      base:
        apiVersion: awsblueprints.io/v1alpha1
        kind: XNotification
        spec:
          compositionSelector:
            matchLabels:
              awsblueprints.io/provider: aws
              awsblueprints.io/environment: dev
              notification.awsblueprints.io/type: standard
              notification.awsblueprints.io/sns-config: cloudwatch
      patches:
        - type: PatchSet
          patchSetName: common-fields-composition
        - type: FromCompositeFieldPath
          fromFieldPath: spec.encryptionKey
          toFieldPath: spec.encryptionKey
          policy:
            fromFieldPath: Required
        - type: ToCompositeFieldPath
          fromFieldPath: status.topicArn
          toFieldPath: status.topicArn
    - name: subscription
      base:
        apiVersion: sns.aws.upbound.io/v1beta1
        kind: TopicSubscription
        spec:
          forProvider:
            protocol: sqs
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: status.queueArn
          toFieldPath: spec.forProvider.endpoint
          policy:
            fromFieldPath: Required
        - type: FromCompositeFieldPath
          fromFieldPath: status.topicArn
          toFieldPath: spec.forProvider.topicArn
          policy:
            fromFieldPath: Required
    - name: sns-queue-policy
      base:
        apiVersion: sqs.aws.upbound.io/v1beta1
        kind: QueuePolicy
        spec:
          forProvider: {}
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: status.queueUrl
          toFieldPath: spec.forProvider.queueUrl
          policy:
            fromFieldPath: Required
        - type: CombineFromComposite
          toFieldPath: spec.forProvider.policy
          policy:
            fromFieldPath: Required
          combine:
            variables:
              - fromFieldPath: status.queueArn
              - fromFieldPath: status.topicArn
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "sns.amazonaws.com"
                      },
                      "Action": "sqs:SendMessage",
                      "Resource": "%s",
                      "Condition": {
                        "ArnEquals": {
                          "aws:SourceArn": "%s"
                        }
                      }
                    }
                  ]
                }
---
# Source: crossplane-on-eks/templates/sns/sns.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: sns.notification.upbound.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
    notification.awsblueprints.io/type: standard
    notification.awsblueprints.io/sns-config: cloudwatch
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XNotification
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "function-%s"
  resources:
    - name: sns-feedback
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        metadata:
          labels:
            testing.awsblueprints.io/name: sns-feedback
        spec:
          deletionPolicy: Delete
          forProvider:
            assumeRolePolicy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "sns.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              }
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - fromFieldPath: "metadata.name"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "sns-feedback-%s"
    - name: sns-feedback-policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArn: arn:aws:iam::aws:policy/service-role/AmazonSNSRole
            roleSelector:
              matchControllerRef: true
      patches:
        - type: PatchSet
          patchSetName: common-fields
    - name: sns
      base:
        apiVersion: sns.aws.upbound.io/v1beta1
        kind: Topic
        spec:
          deletionPolicy: Delete
          forProvider:
            sqsSuccessFeedbackSampleRate: 100
            sqsFailureFeedbackRoleArnSelector:
              matchLabels:
                testing.awsblueprints.io/name: sns-feedback
            sqsSuccessFeedbackRoleArnSelector:
              matchLabels:
                testing.awsblueprints.io/name: sns-feedback
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.encryptionKey
          toFieldPath: spec.forProvider.kmsMasterKeyId
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.displayName
          transforms:
            - type: string
              string:
                fmt: "managed by crossplane object %s"
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.topicArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.topicId
---
# Source: crossplane-on-eks/templates/sqs/sqs.yaml
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: sqs.queue.aws.upbound.awsblueprints.io
  labels:
    awsblueprints.io/provider: aws
    awsblueprints.io/environment: dev
spec:
  compositeTypeRef:
    apiVersion: awsblueprints.io/v1alpha1
    kind: XQueue
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.deletionPolicy
          toFieldPath: spec.deletionPolicy
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
  resources:
    - name: sqs
      base:
        apiVersion: sqs.aws.upbound.io/v1beta1
        kind: Queue
        spec:
          deletionPolicy: Delete
          forProvider:
            delaySeconds: 10
            messageRetentionSeconds: 345600
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.encryptionKey
          toFieldPath: spec.forProvider.kmsMasterKeyId
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.queueArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.url
          toFieldPath: status.queueUrl
