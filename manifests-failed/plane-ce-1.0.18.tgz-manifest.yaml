---
# Source: plane-ce/templates/service-account.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-srv-account
---
# Source: plane-ce/templates/config-secrets/app-env.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-app-secrets
data:
  SECRET_KEY: "NjBncDBieWZ6MmR2ZmZhNDVjeGwyMHAxc2N5OXhicGY2ZDhjNXkwZ2VlamdreXAxYjU="
---
# Source: plane-ce/templates/config-secrets/doc-strore.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-doc-store-secrets
data:
  
  MINIO_ROOT_PASSWORD: "cGFzc3dvcmQ="
  AWS_SECRET_ACCESS_KEY: "cGFzc3dvcmQ="
---
# Source: plane-ce/templates/config-secrets/pgdb.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-pgdb-secrets
data:
  POSTGRES_PASSWORD: "cGxhbmU="
---
# Source: plane-ce/templates/config-secrets/app-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-app-vars
data:
    SENTRY_DSN: ""
    SENTRY_ENVIRONMENT: ""
    DEBUG: "0"
    DOCKERIZED: "1"
    GUNICORN_WORKERS: "1"
    WEB_URL: "http://plane.example.com"
    CORS_ALLOWED_ORIGINS: "http://plane.example.com,https://plane.example.com"
    REDIS_URL: "redis://my-release-redis.plane-ce-1.0.18.tgz.svc.cluster.local:6379/"

    
    DATABASE_URL: "postgresql://plane:plane@my-release-pgdb.plane-ce-1.0.18.tgz.svc.cluster.local/plane"
---
# Source: plane-ce/templates/config-secrets/doc-strore.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-doc-store-vars
data:
  FILE_SIZE_LIMIT: "5242880"
  AWS_S3_BUCKET_NAME: "uploads"
  
  MINIO_ROOT_USER: "admin"
  AWS_ACCESS_KEY_ID: "admin"
  AWS_S3_ENDPOINT_URL: http://my-release-minio:9000
  USE_MINIO: "1"
---
# Source: plane-ce/templates/config-secrets/pgdb.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-pgdb-vars
data:
  POSTGRES_DB: "plane"
  POSTGRES_USER: "plane"
---
# Source: plane-ce/templates/workloads/admin.deployment.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-admin
  labels:
    app.name: plane-ce-1.0.18.tgz-my-release-admin
spec:
  clusterIP: None
  ports:
  - name: admin-3000
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app.name: plane-ce-1.0.18.tgz-my-release-admin
---
# Source: plane-ce/templates/workloads/api.deployment.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-api
  labels:
    app.name: plane-ce-1.0.18.tgz-my-release-api
spec:
  clusterIP: None
  ports:
  - name: api-8000
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app.name: plane-ce-1.0.18.tgz-my-release-api
---
# Source: plane-ce/templates/workloads/minio.stateful.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-minio
  labels:
    app.name: plane-ce-1.0.18.tgz-my-release-minio
spec:
  clusterIP: None
  ports:
  - name: minio-api-9000
    port: 9000
    protocol: TCP
    targetPort: 9000
  - name: minio-console-9090
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.name: plane-ce-1.0.18.tgz-my-release-minio
---
# Source: plane-ce/templates/workloads/postgres.stateful.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-pgdb
  labels:
    app.name: plane-ce-1.0.18.tgz-my-release-pgdb
spec:
  clusterIP: None
  ports:
  - name: pg-5432
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app.name: plane-ce-1.0.18.tgz-my-release-pgdb
---
# Source: plane-ce/templates/workloads/redis.stateful.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-redis
  labels:
    app.name: plane-ce-1.0.18.tgz-my-release-redis
spec:
  clusterIP: None
  ports:
  - name: redis-6379
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app.name: plane-ce-1.0.18.tgz-my-release-redis
---
# Source: plane-ce/templates/workloads/space.deployment.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-space
  labels:
    app.name: plane-ce-1.0.18.tgz-my-release-space
spec:
  clusterIP: None
  ports:
  - name: space-3000
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app.name: plane-ce-1.0.18.tgz-my-release-space
---
# Source: plane-ce/templates/workloads/web.deployment.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-web
  labels:
    app.name: plane-ce-1.0.18.tgz-my-release-web
spec:
  clusterIP: None
  ports:
  - name: web-3000
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app.name: plane-ce-1.0.18.tgz-my-release-web
---
# Source: plane-ce/templates/workloads/admin.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-admin-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-ce-1.0.18.tgz-my-release-admin
  template:
    metadata:
      namespace: plane-ce-1.0.18.tgz
      labels:
        app.name: plane-ce-1.0.18.tgz-my-release-admin
      annotations:
        timestamp: "2024-06-20 11:58:25.041498504 -0300 -03 m=+0.020357278"
    spec:
      containers:
      - name: my-release-admin
        imagePullPolicy: Always
        image: makeplane/plane-admin:stable
        stdin: true
        tty: true
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        command:
          - node
        args:
          - admin/server.js
          - admin
      serviceAccount: my-release-srv-account
      serviceAccountName: my-release-srv-account
---
# Source: plane-ce/templates/workloads/api.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-api-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-ce-1.0.18.tgz-my-release-api
  template:
    metadata:
      namespace: plane-ce-1.0.18.tgz
      labels:
        app.name: plane-ce-1.0.18.tgz-my-release-api
      annotations:
        timestamp: "2024-06-20 11:58:25.041477651 -0300 -03 m=+0.020336426"
    spec:
      containers:
      - name: my-release-api
        imagePullPolicy: Always
        image: makeplane/plane-backend:stable
        stdin: true
        tty: true
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        command:
          - ./bin/docker-entrypoint-api.sh
        envFrom:
          - configMapRef:
              name: my-release-app-vars
              optional: false
          - secretRef:
              name: my-release-app-secrets
              optional: false
          - configMapRef:
              name: my-release-doc-store-vars
              optional: false
          - secretRef:
              name: my-release-doc-store-secrets
              optional: false
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1

      serviceAccount: my-release-srv-account
      serviceAccountName: my-release-srv-account
---
# Source: plane-ce/templates/workloads/beat-worker.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-beat-worker-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-ce-1.0.18.tgz-my-release-beat-worker
  template:
    metadata:
      namespace: plane-ce-1.0.18.tgz
      labels:
        app.name: plane-ce-1.0.18.tgz-my-release-beat-worker
      annotations:
        timestamp: "2024-06-20 11:58:25.041458329 -0300 -03 m=+0.020317104"
    spec:
      containers:
      - name: my-release-beat-worker
        imagePullPolicy: Always
        image: makeplane/plane-backend:stable
        stdin: true
        tty: true
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        command:
          - ./bin/docker-entrypoint-beat.sh
        envFrom:
          - configMapRef:
              name: my-release-app-vars
              optional: false
          - secretRef:
              name: my-release-app-secrets
              optional: false
          - configMapRef:
              name: my-release-doc-store-vars
              optional: false
          - secretRef:
              name: my-release-doc-store-secrets
              optional: false

      serviceAccount: my-release-srv-account
      serviceAccountName: my-release-srv-account
---
# Source: plane-ce/templates/workloads/space.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-space-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-ce-1.0.18.tgz-my-release-space
  template:
    metadata:
      namespace: plane-ce-1.0.18.tgz
      labels:
        app.name: plane-ce-1.0.18.tgz-my-release-space
      annotations:
        timestamp: "2024-06-20 11:58:25.041364929 -0300 -03 m=+0.020223704"
    spec:
      containers:
      - name: my-release-space
        imagePullPolicy: Always
        image: makeplane/plane-space:stable
        stdin: true
        tty: true
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        command:
          - node
        args:
          - space/server.js
          - space
      serviceAccount: my-release-srv-account
      serviceAccountName: my-release-srv-account
---
# Source: plane-ce/templates/workloads/web.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-web-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-ce-1.0.18.tgz-my-release-web
  template:
    metadata:
      namespace: plane-ce-1.0.18.tgz
      labels:
        app.name: plane-ce-1.0.18.tgz-my-release-web
      annotations:
        timestamp: "2024-06-20 11:58:25.04134612 -0300 -03 m=+0.020204895"
    spec:
      containers:
      - name: my-release-web
        imagePullPolicy: Always
        image: makeplane/plane-frontend:stable
        stdin: true
        tty: true
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        command:
          - node
        args:
          - web/server.js
          - web
      serviceAccount: my-release-srv-account
      serviceAccountName: my-release-srv-account
---
# Source: plane-ce/templates/workloads/worker.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-worker-wl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: plane-ce-1.0.18.tgz-my-release-worker
  template:
    metadata:
      namespace: plane-ce-1.0.18.tgz
      labels:
        app.name: plane-ce-1.0.18.tgz-my-release-worker
      annotations:
        timestamp: "2024-06-20 11:58:25.041314655 -0300 -03 m=+0.020173433"
    spec:
      containers:
      - name: my-release-worker
        imagePullPolicy: Always
        image: makeplane/plane-backend:stable
        stdin: true
        tty: true
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
          limits:
            memory: "1000Mi"
            cpu: "500m"
        command:
          - ./bin/docker-entrypoint-worker.sh
        envFrom:
          - configMapRef:
              name: my-release-app-vars
              optional: false
          - secretRef:
              name: my-release-app-secrets
              optional: false
          - configMapRef:
              name: my-release-doc-store-vars
              optional: false
          - secretRef:
              name: my-release-doc-store-secrets
              optional: false

      serviceAccount: my-release-srv-account
      serviceAccountName: my-release-srv-account
---
# Source: plane-ce/templates/workloads/minio.stateful.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-minio-wl
spec:
  selector:
    matchLabels:
      app.name: plane-ce-1.0.18.tgz-my-release-minio
  serviceName:  my-release-minio
  template:
    metadata:
      labels:
        app.name: plane-ce-1.0.18.tgz-my-release-minio
    spec:
      containers:
      - image: minio/minio:latest
        imagePullPolicy: Always
        name: my-release-minio
        stdin: true
        tty: true
        # command:
        args:
          - server
          - /data
          - --console-address 
          - :9090
        envFrom:
          - configMapRef:
              name: my-release-doc-store-vars
              optional: false
          - secretRef:
              name: my-release-doc-store-secrets
              optional: false
        volumeMounts:
        - mountPath: /data
          name: pvc-my-release-minio-vol
          subPath: ''
      serviceAccount: my-release-srv-account
      serviceAccountName: my-release-srv-account
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      namespace: plane-ce-1.0.18.tgz
      name: pvc-my-release-minio-vol
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: "5Gi"
      storageClassName: longhorn
      volumeMode: Filesystem
---
# Source: plane-ce/templates/workloads/postgres.stateful.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-pgdb-wl
spec:
  selector:
    matchLabels:
      app.name: plane-ce-1.0.18.tgz-my-release-pgdb
  serviceName:  my-release-pgdb
  template:
    metadata:
      labels:
        app.name: plane-ce-1.0.18.tgz-my-release-pgdb
    spec:
      containers:
      - image: postgres:15.5-alpine
        imagePullPolicy: Always
        name: my-release-pgdb
        stdin: true
        tty: true
        env:
          - name: PGDATA
            value: /var/lib/postgresql/data/plane
        envFrom:
          - configMapRef:
              name: my-release-pgdb-vars
              optional: false
          - secretRef:
              name: my-release-pgdb-secrets
              optional: false
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pvc-my-release-pgdb-vol
          subPath: ''
      serviceAccount: my-release-srv-account
      serviceAccountName: my-release-srv-account
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      namespace: plane-ce-1.0.18.tgz
      name: pvc-my-release-pgdb-vol
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: "5Gi"
      storageClassName: longhorn
      volumeMode: Filesystem
---
# Source: plane-ce/templates/workloads/redis.stateful.yaml
# REDIS WORKLOAD

apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-redis-wl
spec:
  selector:
    matchLabels:
      app.name: plane-ce-1.0.18.tgz-my-release-redis
  serviceName:  my-release-redis
  template:
    metadata:
      labels:
        app.name: plane-ce-1.0.18.tgz-my-release-redis
    spec:
      containers:
      - image: redis:7.2.4-alpine
        imagePullPolicy: Always
        name: my-release-redis
        stdin: true
        tty: true
        volumeMounts:
        - mountPath: /data
          name: pvc-my-release-redis-vol
          subPath: ''
      serviceAccount: my-release-srv-account
      serviceAccountName: my-release-srv-account
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      namespace: plane-ce-1.0.18.tgz
      name: pvc-my-release-redis-vol
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: "1Gi"
      storageClassName: longhorn
      volumeMode: Filesystem
---
# Source: plane-ce/templates/workloads/migrator.job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-api-migrate-1
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        app.name: plane-ce-1.0.18.tgz-my-release-api-migrate
      annotations:
        timestamp: "2024-06-20 11:58:25.041445883 -0300 -03 m=+0.020304658"
    spec:
      containers:
      - name: my-release-api-migrate
        image: makeplane/plane-backend:stable
        command: 
          - ./bin/docker-entrypoint-migrator.sh
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: my-release-app-vars
              optional: false
          - secretRef:
              name: my-release-app-secrets
              optional: false
          - configMapRef:
              name: my-release-doc-store-vars
              optional: false
          - secretRef:
              name: my-release-doc-store-secrets
              optional: false
      restartPolicy: OnFailure
      serviceAccount: my-release-srv-account
      serviceAccountName: my-release-srv-account
---
# Source: plane-ce/templates/workloads/minio.stateful.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-minio-bucket
spec:
  backoffLimit: 6
  completionMode: NonIndexed
  template:
    metadata:
      namespace: plane-ce-1.0.18.tgz
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: init
          image: busybox
          command: ['sh', '-c', "until nslookup  my-release-minio.plane-ce-1.0.18.tgz.svc.cluster.local; do echo waiting for  my-release-minio; sleep 2; done"]
      containers:
        - command:
            - /bin/sh
          args:
            - '-c'
            - >-
              /usr/bin/mc config host add plane-app-minio
              http://my-release-minio.plane-ce-1.0.18.tgz.svc.cluster.local:9000 "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY"; 
              /usr/bin/mc mb plane-app-minio/$AWS_S3_BUCKET_NAME; 
              /usr/bin/mc anonymous set download plane-app-minio/$AWS_S3_BUCKET_NAME; exit 0;
          envFrom:
            - configMapRef:
                name: my-release-doc-store-vars
                optional: false
            - secretRef:
                name: my-release-doc-store-secrets
                optional: false
          image: minio/mc
          imagePullPolicy: Always
          name: my-release-minio-bucket
      serviceAccount: my-release-srv-account
      serviceAccountName: my-release-srv-account
      terminationGracePeriodSeconds: 120
---
# Source: plane-ce/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: plane-ce-1.0.18.tgz
  name: my-release-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  ingressClassName: nginx
  rules:
    - host: plane.example.com
      http:
        paths:
          - backend:
              service:
                port:
                  number: 3000
                name: my-release-web
            path: /
            pathType: Prefix
          - backend:
              service:
                port:
                  number: 8000
                name: my-release-api
            path: /api
            pathType: Prefix
          - backend:
              service:
                port:
                  number: 8000
                name: my-release-api
            path: /auth
            pathType: Prefix
          - backend:
              service:
                port:
                  number: 3000
                name: my-release-space
            path: /spaces
            pathType: Prefix
          - backend:
              service:
                port:
                  number: 3000
                name: my-release-admin
            path: /god-mode
            pathType: Prefix
          - backend:
              service:
                port:
                  number: 9000
                name: my-release-minio
            path: /uploads
            pathType: Prefix
    - host: plane-minio.example.com
      http:
        paths:
          - backend:
              service:
                port:
                  number: 9090
                name: my-release-minio
            path: /
            pathType: Prefix
