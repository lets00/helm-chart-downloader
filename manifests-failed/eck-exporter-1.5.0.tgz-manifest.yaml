---
# Source: eck-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-eck-exporter
  labels:
    helm.sh/chart: eck-exporter-1.5.0
    app.kubernetes.io/name: eck-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: eck-exporter/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-eck-exporter
  labels:
    helm.sh/chart: eck-exporter-1.5.0
    app.kubernetes.io/name: eck-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    spec:
      resources:
      #
      # Agent
      #
      - groupVersionKind:
          group: agent.k8s.elastic.co
          kind: Agent
          version: v1alpha1
        metricNamePrefix: eck_agent
        labelsFromPath:
          name:
          - metadata
          - name
          namespace:
          - metadata
          - namespace
        metrics:
        - name: info
          each:
            type: Info
            info:
              labelsFromPath:
                desired_version: [ spec, version ]
                version: [ status, version ]
        - name: health
          each:
            type: StateSet
            stateSet:
              labelName: health
              path: [ status, health ]
              list: [ red, yellow, green, unknown ]
      #
      # ApmServer
      #
      - groupVersionKind:
          group: apm.k8s.elastic.co
          kind: ApmServer
          version: v1
        metricNamePrefix: eck_apmserver
        labelsFromPath:
          name:
          - metadata
          - name
          namespace:
          - metadata
          - namespace
        metrics:
        - name: info
          each:
            type: Info
            info:
              labelsFromPath:
                desired_version: [ spec, version ]
                version: [ status, version ]
        - name: health
          each:
            type: StateSet
            stateSet:
              labelName: health
              path: [ status, health ]
              list: [ red, yellow, green, unknown ]
      #
      # Beat
      #
      - groupVersionKind:
          group: beat.k8s.elastic.co
          kind: Beat
          version: v1beta1
        metricNamePrefix: eck_beat
        labelsFromPath:
          name:
          - metadata
          - name
          namespace:
          - metadata
          - namespace
        metrics:
        - name: info
          each:
            type: Info
            info:
              labelsFromPath:
                desired_version: [ spec, version ]
                version: [ status, version ]
        - name: health
          each:
            type: StateSet
            stateSet:
              labelName: health
              path: [ status, health ]
              list: [ red, yellow, green, unknown ]
      #
      # ElasticMapsServer
      #
      - groupVersionKind:
          group: maps.k8s.elastic.co
          kind: ElasticMapsServer
          version: v1alpha1
        metricNamePrefix: eck_elasticmapsserver
        labelsFromPath:
          name:
          - metadata
          - name
          namespace:
          - metadata
          - namespace
        metrics:
        - name: info
          each:
            type: Info
            info:
              labelsFromPath:
                desired_version: [ spec, version ]
                version: [ status, version ]
        - name: health
          each:
            type: StateSet
            stateSet:
              labelName: health
              path: [ status, health ]
              list: [ red, yellow, green, unknown ]
      #
      # Elasticsearch
      #
      - groupVersionKind:
          group: elasticsearch.k8s.elastic.co
          kind: Elasticsearch
          version: v1
        metricNamePrefix: eck_elasticsearch
        labelsFromPath:
          name:
          - metadata
          - name
          namespace:
          - metadata
          - namespace
        metrics:
        - name: info
          each:
            type: Info
            info:
              labelsFromPath:
                desired_version: [ spec, version ]
                version: [ status, version ]
        - name: health
          each:
            type: StateSet
            stateSet:
              labelName: health
              path: [ status, health ]
              list: [ red, yellow, green, unknown ]
        - name: phase
          each:
            type: StateSet
            stateSet:
              labelName: phase
              path: [ status, phase ]
              list: [ Ready, ApplyingChanges, MigratingData, Stalled, Invalid ]
        - name: condition
          each:
            type: Gauge
            gauge:
              path: [ status, conditions ]
              labelsFromPath:
                type: [ type ]
              valueFrom: [ status ]
      #
      # EnterpriseSearch
      #
      - groupVersionKind:
          group: enterprisesearch.k8s.elastic.co
          kind: EnterpriseSearch
          version: v1
        metricNamePrefix: eck_enterprisesearch
        labelsFromPath:
          name:
          - metadata
          - name
          namespace:
          - metadata
          - namespace
        metrics:
        - name: info
          each:
            type: Info
            info:
              labelsFromPath:
                desired_version: [ spec, version ]
                version: [ status, version ]
        - name: health
          each:
            type: StateSet
            stateSet:
              labelName: health
              path: [ status, health ]
              list: [ red, yellow, green, unknown ]
      #
      # Kibana
      #
      - groupVersionKind:
          group: kibana.k8s.elastic.co
          kind: Kibana
          version: v1
        metricNamePrefix: eck_kibana
        labelsFromPath:
          name:
          - metadata
          - name
          namespace:
          - metadata
          - namespace
        metrics:
        - name: info
          each:
            type: Info
            info:
              labelsFromPath:
                desired_version: [ spec, version ]
                version: [ status, version ]
        - name: health
          each:
            type: StateSet
            stateSet:
              labelName: health
              path: [ status, health ]
              list: [ red, yellow, green, unknown ]
      #
      # Logstash
      #
      - groupVersionKind:
          group: logstash.k8s.elastic.co
          kind: Logstash
          version: v1alpha1
        metricNamePrefix: eck_logstash
        labelsFromPath:
          name:
          - metadata
          - name
          namespace:
          - metadata
          - namespace
        metrics:
        - name: info
          each:
            type: Info
            info:
              labelsFromPath:
                desired_version: [ spec, version ]
                version: [ status, version ]
        - name: health
          each:
            type: StateSet
            stateSet:
              labelName: health
              path: [ status, health ]
              list: [ red, yellow, green, unknown ]
---
# Source: eck-exporter/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-eck-exporter
  labels:
    helm.sh/chart: eck-exporter-1.5.0
    app.kubernetes.io/name: eck-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list", "watch"]
  - apiGroups: ["agent.k8s.elastic.co"]
    resources: ["agents"]
    verbs: ["list", "watch"]
  - apiGroups: ["apm.k8s.elastic.co"]
    resources: ["apmservers"]
    verbs: ["list", "watch"]
  - apiGroups: ["beat.k8s.elastic.co"]
    resources: ["beats"]
    verbs: ["list", "watch"]
  - apiGroups: ["maps.k8s.elastic.co"]
    resources: ["elasticmapsservers"]
    verbs: ["list", "watch"]
  - apiGroups: ["elasticsearch.k8s.elastic.co"]
    resources: ["elasticsearches"]
    verbs: ["list", "watch"]
  - apiGroups: ["enterprisesearch.k8s.elastic.co"]
    resources: ["enterprisesearches"]
    verbs: ["list", "watch"]
  - apiGroups: ["kibana.k8s.elastic.co"]
    resources: ["kibanas"]
    verbs: ["list", "watch"]
  - apiGroups: ["logstash.k8s.elastic.co"]
    resources: ["logstashes"]
    verbs: ["list", "watch"]
---
# Source: eck-exporter/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-eck-exporter
  labels:
    helm.sh/chart: eck-exporter-1.5.0
    app.kubernetes.io/name: eck-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-eck-exporter
subjects:
  - kind: ServiceAccount
    name: my-release-eck-exporter
    namespace: eck-exporter-1.5.0.tgz
---
# Source: eck-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-eck-exporter
  labels:
    helm.sh/chart: eck-exporter-1.5.0
    app.kubernetes.io/name: eck-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: "ClusterIP"
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
  selector:
    app.kubernetes.io/name: eck-exporter
    app.kubernetes.io/instance: my-release
---
# Source: eck-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-eck-exporter
  labels:
    helm.sh/chart: eck-exporter-1.5.0
    app.kubernetes.io/name: eck-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: eck-exporter
      app.kubernetes.io/instance: my-release
  replicas: 1
  template:
    metadata:
      labels:
        helm.sh/chart: eck-exporter-1.5.0
        app.kubernetes.io/name: eck-exporter
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: 6c6aa7fcd02bdf006b8c1ae7278f463467699250a37fd3902d8707437fa8d1c1
    spec:
      serviceAccountName: my-release-eck-exporter
      containers:
      - name: eck-exporter
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65534
          runAsUser: 65534
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 32Mi
        image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.12.0
        imagePullPolicy: "IfNotPresent"
        args:
        - --port=8080
        - --custom-resource-state-only
        - --custom-resource-state-config-file=/etc/eckresourcestate/config.yaml
        ports:
        - name: metrics
          containerPort: 8080
        volumeMounts:
        - name: eckresourcestate-config
          mountPath: /etc/eckresourcestate
          readOnly: true
      volumes:
      - name: eckresourcestate-config
        configMap:
          defaultMode: 420
          name: my-release-eck-exporter
---
# Source: eck-exporter/templates/prometheusrule.yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: my-release-eck-exporter
  labels:
    helm.sh/chart: eck-exporter-1.5.0
    app.kubernetes.io/name: eck-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  groups:
  - name: eck-exporter.rules
    rules:
    #
    # Health status
    #
    - alert: 'EckElasticsearchHealth'
      expr: 'avg_over_time(eck_elasticsearch_health{health=~"red|unknown"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: 'Health is {{ $labels.health }} for Elasticsearch: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for Elasticsearch object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: red, unknown. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckElasticsearchHealth'
      expr: 'avg_over_time(eck_elasticsearch_health{health=~"yellow"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: 'Health is {{ $labels.health }} for Elasticsearch: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for Elasticsearch object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: yellow. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckKibanaHealth'
      expr: 'avg_over_time(eck_kibana_health{health=~"red|unknown"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: 'Health is {{ $labels.health }} for Kibana: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for Kibana object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: red, unknown. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckKibanaHealth'
      expr: 'avg_over_time(eck_kibana_health{health=~"yellow"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: 'Health is {{ $labels.health }} for Kibana: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for Kibana object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: yellow. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckAgentHealth'
      expr: 'avg_over_time(eck_agent_health{health=~"red|unknown"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: 'Health is {{ $labels.health }} for Agent: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for Agent object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: red, unknown. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckAgentHealth'
      expr: 'avg_over_time(eck_agent_health{health=~"yellow"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: 'Health is {{ $labels.health }} for Agent: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for Agent object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: yellow. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckApmServerHealth'
      expr: 'avg_over_time(eck_apmserver_health{health=~"red|unknown"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: 'Health is {{ $labels.health }} for ApmServer: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for ApmServer object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: red, unknown. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckApmServerHealth'
      expr: 'avg_over_time(eck_apmserver_health{health=~"yellow"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: 'Health is {{ $labels.health }} for ApmServer: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for ApmServer object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: yellow. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckBeatHealth'
      expr: 'avg_over_time(eck_beat_health{health=~"red|unknown"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: 'Health is {{ $labels.health }} for Beat: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for Beat object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: red, unknown. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckBeatHealth'
      expr: 'avg_over_time(eck_beat_health{health=~"yellow"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: 'Health is {{ $labels.health }} for Beat: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for Beat object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: yellow. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckLogstashHealth'
      expr: 'avg_over_time(eck_logstash_health{health=~"red|unknown"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: 'Health is {{ $labels.health }} for Logstash: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for Logstash object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: red, unknown. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckLogstashHealth'
      expr: 'avg_over_time(eck_logstash_health{health=~"yellow"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: 'Health is {{ $labels.health }} for Logstash: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for Logstash object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: yellow. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckElasticMapsServerHealth'
      expr: 'avg_over_time(eck_elasticmapsserver_health{health=~"red|unknown"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: 'Health is {{ $labels.health }} for ElasticMapsServer: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for ElasticMapsServer object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: red, unknown. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckElasticMapsServerHealth'
      expr: 'avg_over_time(eck_elasticmapsserver_health{health=~"yellow"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: 'Health is {{ $labels.health }} for ElasticMapsServer: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for ElasticMapsServer object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: yellow. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckEnterpriseSearchHealth'
      expr: 'avg_over_time(eck_enterprisesearch_health{health=~"red|unknown"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: 'Health is {{ $labels.health }} for EnterpriseSearch: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for EnterpriseSearch object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: red, unknown. At the time of firing this alert it was: {{ $labels.health }}.'
    - alert: 'EckEnterpriseSearchHealth'
      expr: 'avg_over_time(eck_enterprisesearch_health{health=~"yellow"}[5m]) > 0.2'
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: 'Health is {{ $labels.health }} for EnterpriseSearch: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average health status for EnterpriseSearch object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: yellow. At the time of firing this alert it was: {{ $labels.health }}.'
    #
    # EckElasticsearchPhase
    #
    - alert: 'EckElasticsearchPhase'
      expr: |
        (
          avg_over_time(eck_elasticsearch_phase{phase=~"Invalid|Stalled"}[5m]) > 0.2
        )
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: 'Phase is not Ready for Elasticsearch: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average phase for Elasticsearch object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: Invalid, Stalled.'
    - alert: 'EckElasticsearchPhase'
      expr: |
        (
          avg_over_time(eck_elasticsearch_phase{phase="Ready"}[5m]) < 0.8
            or
          avg_over_time(eck_elasticsearch_phase{phase=~"ApplyingChanges|MigratingData"}[5m]) > 0.2
        )
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: 'Phase is not Ready for Elasticsearch: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the 5m average phase for Elasticsearch object "{{ $labels.exported_namespace }}/{{ $labels.name }}" was one of: ApplyingChanges, MigratingData, NotReady.'
    #
    # EckElasticsearchUnreachable
    #
    - alert: 'EckElasticsearchUnreachable'
      expr: 'avg_over_time(eck_elasticsearch_condition{type="ElasticsearchIsReachable"}[5m]) < 0.5'
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: 'Operator cannot connect to Elasticsearch: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1m, the operator reportedly could not connect on a 5m average to Elasticsearch cluster "{{ $labels.exported_namespace }}/{{ $labels.name }}".'
    #
    # EckElasticsearchReconciliationTooLong
    #
    - alert: 'EckElasticsearchReconciliationTooLong'
      expr: 'avg_over_time(eck_elasticsearch_condition{type="ReconciliationComplete"}[5m]) < 0.8'
      for: 1h
      labels:
        severity: critical
      annotations:
        summary: 'Reconciliation is lagging for Elasticsearch: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1h, the condition ReconciliationComplete was not met on a 5m average for Elasticsearch cluster "{{ $labels.exported_namespace }}/{{ $labels.name }}".'
    #
    # EckElasticsearchUpgradeTooLong
    #
    - alert: 'EckElasticsearchUpgradeTooLong'
      expr: 'avg_over_time(eck_elasticsearch_condition{type="RunningDesiredVersion"}[5m]) < 0.8'
      for: 1h
      labels:
        severity: critical
      annotations:
        summary: 'Upgrade is lagging for Elasticsearch: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1h, the condition RunningDesiredVersion was not met on a 5m average for Elasticsearch cluster "{{ $labels.exported_namespace }}/{{ $labels.name }}".'
    #
    # EckElasticsearchApplyingChangesTooLong
    #
    - alert: 'EckElasticsearchApplyingChangesTooLong'
      expr: 'avg_over_time(eck_elasticsearch_phase{phase="ApplyingChanges"}[5m]) > 0.2'
      for: 1h
      labels:
        severity: critical
      annotations:
        summary: 'Configuration propagation is lagging for Elasticsearch: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1h, phase ApplyingChanges was active on a 5m average for Elasticsearch cluster "{{ $labels.exported_namespace }}/{{ $labels.name }}".'
    #
    # EckElasticsearchMigratingDataTooLong
    #
    - alert: 'EckElasticsearchMigratingDataTooLong'
      expr: 'avg_over_time(eck_elasticsearch_phase{phase="MigratingData"}[5m]) > 0.2'
      for: 1h
      labels:
        severity: critical
      annotations:
        summary: 'Data migrations are lagging for Elasticsearch: {{ $labels.exported_namespace }}/{{ $labels.name }}'
        description: 'For the last 1h, phase MigratingData was active on a 5m average for Elasticsearch cluster "{{ $labels.exported_namespace }}/{{ $labels.name }}".'
---
# Source: eck-exporter/templates/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: my-release-eck-exporter
  namespace: "eck-exporter-1.5.0.tgz"
  labels:
    helm.sh/chart: eck-exporter-1.5.0
    app.kubernetes.io/name: eck-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  jobLabel: ""
  selector:
    matchLabels:
      app.kubernetes.io/name: eck-exporter
      app.kubernetes.io/instance: my-release
  endpoints:
  - port: metrics
    interval: 30s
    scrapeTimeout: 20s
  namespaceSelector:
    matchNames:
    - eck-exporter-1.5.0.tgz
