---
# Source: dokuwiki/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-dokuwiki
  namespace: "dokuwiki-16.2.3.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dokuwiki
    app.kubernetes.io/version: 20240206.1.0
    helm.sh/chart: dokuwiki-16.2.3
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: dokuwiki
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 8080
        - port: 8443
---
# Source: dokuwiki/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-dokuwiki
  namespace: "dokuwiki-16.2.3.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dokuwiki
    app.kubernetes.io/version: 20240206.1.0
    helm.sh/chart: dokuwiki-16.2.3
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: dokuwiki
---
# Source: dokuwiki/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-dokuwiki
  namespace: "dokuwiki-16.2.3.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dokuwiki
    app.kubernetes.io/version: 20240206.1.0
    helm.sh/chart: dokuwiki-16.2.3
automountServiceAccountToken: false
---
# Source: dokuwiki/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-dokuwiki
  namespace: "dokuwiki-16.2.3.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dokuwiki
    app.kubernetes.io/version: 20240206.1.0
    helm.sh/chart: dokuwiki-16.2.3
type: Opaque
data:
  
  dokuwiki-password: "Y0FxVHVsZEdXbA=="
---
# Source: dokuwiki/templates/dokuwiki-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-dokuwiki
  namespace: "dokuwiki-16.2.3.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dokuwiki
    app.kubernetes.io/version: 20240206.1.0
    helm.sh/chart: dokuwiki-16.2.3
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: dokuwiki/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-dokuwiki
  namespace: "dokuwiki-16.2.3.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dokuwiki
    app.kubernetes.io/version: 20240206.1.0
    helm.sh/chart: dokuwiki-16.2.3
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: dokuwiki
---
# Source: dokuwiki/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-dokuwiki
  namespace: "dokuwiki-16.2.3.tgz"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dokuwiki
    app.kubernetes.io/version: 20240206.1.0
    helm.sh/chart: dokuwiki-16.2.3
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: dokuwiki
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: dokuwiki
        app.kubernetes.io/version: 20240206.1.0
        helm.sh/chart: dokuwiki-16.2.3
      annotations:
    spec:
      
      automountServiceAccountToken: false
      # yamllint disable rule:indentation
      hostAliases:
        - hostnames:
          - status.localhost
          ip: 127.0.0.1
      # yamllint enable rule:indentation
      serviceAccountName: my-release-dokuwiki
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: dokuwiki
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      initContainers:
        - name: prepare-base-dir
          image: docker.io/bitnami/dokuwiki:20240206.1.0-debian-12-r18
          imagePullPolicy: "IfNotPresent"
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 1024Mi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          command:
            - /bin/bash
          args:
            - -ec
            - |
              #!/bin/bash

              . /opt/bitnami/scripts/liblog.sh
              . /opt/bitnami/scripts/libfs.sh

              info "Copying base dir to empty dir"
              # In order to not break the application functionality (such as upgrades or plugins) we need
              # to make the base directory writable, so we need to copy it to an empty dir volume
              cp -r --preserve=mode /opt/bitnami/dokuwiki /emptydir/app-base-dir

              info "Copying symlinks to stdout/stderr"
              # We copy the logs folder because it has symlinks to stdout and stderr
              if ! is_dir_empty /opt/bitnami/apache/logs; then
                cp -r /opt/bitnami/apache/logs /emptydir/apache-logs-dir
              fi
              info "Copying php var directory"
              if ! is_dir_empty /opt/bitnami/php/var; then
                cp -r /opt/bitnami/php/var /emptydir/php-var-dir
              fi
              info "Copy operation completed"
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
      containers:
        - name: dokuwiki
          image: docker.io/bitnami/dokuwiki:20240206.1.0-debian-12-r18
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: DOKUWIKI_USERNAME
              value: "user"
            - name: DOKUWIKI_FULL_NAME
              value: "User Name"
            - name: DOKUWIKI_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-dokuwiki
                  key: dokuwiki-password
            - name: DOKUWIKI_EMAIL
              value: "user@example.com"
            - name: DOKUWIKI_WIKI_NAME
              value: "My Wiki"
            - name: APACHE_HTTP_PORT_NUMBER
              value: "8080"
            - name: APACHE_HTTPS_PORT_NUMBER
              value: "8443"
          envFrom:
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /doku.php
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 1024Mi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /opt/bitnami/apache/conf
              subPath: apache-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/apache/logs
              subPath: apache-logs-dir
            - name: empty-dir
              mountPath: /opt/bitnami/apache/var/run
              subPath: apache-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/php/etc
              subPath: php-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/php/tmp
              subPath: php-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/php/var
              subPath: php-var-dir
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/dokuwiki
              subPath: app-base-dir
            - name: dokuwiki-data
              mountPath: /bitnami/dokuwiki
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: dokuwiki-data
          persistentVolumeClaim:
            claimName: my-release-dokuwiki
