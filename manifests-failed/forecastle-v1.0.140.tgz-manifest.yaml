---
# Source: forecastle/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.140"
    chart: "forecastle-v1.0.140"
    release: "my-release"
    heritage: "Helm"
  name: forecastle
  namespace: forecastle-v1.0.140.tgz
---
# Source: forecastle/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: forecastle
  namespace: forecastle-v1.0.140.tgz
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.140"
    chart: "forecastle-v1.0.140"
    release: "my-release"
    heritage: "Helm"
data:
  config.yaml: |-
    customApps: {}
    headerBackground: null
    headerForeground: null
    instanceName: null
    namespaceSelector:
      matchNames:
      - stakater
    title: null
---
# Source: forecastle/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: forecastle-cluster-ingress-role
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.140"
    chart: "forecastle-v1.0.140"
    release: "my-release"
    heritage: "Helm"
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list"]
- apiGroups: ["route.openshift.io"]
  resources: ["routes"]
  verbs: ["get", "list"]
- apiGroups: ["traefik.containo.us"]
  resources: ["ingressroutes"]
  verbs: ["get", "list"]
- apiGroups: ["traefik.io"]
  resources: ["ingressroutes"]
  verbs: ["get", "list"]
- apiGroups: ["forecastle.stakater.com"]
  resources: ["forecastleapps"]
  verbs: ["get", "list"]
---
# Source: forecastle/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: forecastle-cluster-ingress-role-binding
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.140"
    chart: "forecastle-v1.0.140"
    release: "my-release"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: forecastle-cluster-ingress-role
subjects:
- kind: ServiceAccount
  name: forecastle
  namespace: forecastle-v1.0.140.tgz
---
# Source: forecastle/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.140"
    chart: "forecastle-v1.0.140"
    release: "my-release"
    heritage: "Helm"
    expose: "false"
  name: forecastle
  namespace: forecastle-v1.0.140.tgz
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
---
# Source: forecastle/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: forecastle
    group: com.stakater.platform
    provider: stakater
    version: "v1.0.140"
    chart: "forecastle-v1.0.140"
    release: "my-release"
    heritage: "Helm"
  name: forecastle
  namespace: forecastle-v1.0.140.tgz
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: forecastle
      group: com.stakater.platform
      provider: stakater
  template:
    metadata:
      labels:
        app: forecastle
        group: com.stakater.platform
        provider: stakater
      annotations:
        checksum/api-config: e28d96a0945f481f68fea9a48e15a90f408bb21f3da3274f2be2f88513fe9824
    spec:
      containers:
      - securityContext:
            {}
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "stakater/forecastle:v1.0.140"
        name: forecastle
        volumeMounts:
        - name: forecastle-config
          mountPath: /etc/forecastle
      volumes:
      - name: forecastle-config
        configMap:
          name: forecastle
      serviceAccountName: forecastle
