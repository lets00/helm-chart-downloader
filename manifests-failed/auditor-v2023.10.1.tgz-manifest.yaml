---
# Source: auditor/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-auditor
  namespace: auditor-v2023.10.1.tgz
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: auditor/templates/apiregistration.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-auditor-apiserver-cert
  namespace: auditor-v2023.10.1.tgz
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURlekNDQW1PZ0F3SUJBZ0lRUTFCVHBTK0l1by9HUGlqU3M4ZWE1VEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TkRBMk1qQXhORFUxTVRWYUZ3MHpOREEyTVRneE5EVTFNVFZhTUIweApHekFaQmdOVkJBTVRFbTE1TFhKbGJHVmhjMlV0WVhWa2FYUnZjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBTkpOVTZPclY1MU9Wd2gvQ2JMWmozWWxqNjFNdzdQLzhzcXZ1QVlhOVFqZXhONGcKRzRVSWxBZVR6UDJ6bTFnSmxreFBQeXNaTjRSSXhQZkFEVFZ1VUdoZWN4THJzc1hDUndMYWZqU2V3YXFoNDQycwpyYVpTMHJSUldFZEh0eDY0NkJ2MWhSMlBZYXpKc2QrVXA4R1NWc093cmdNZFZlVkR1OXBYcnlFZTUzTWFNUnNhCnkrVk40dkk5MVVhNm9XRmhpamJmWG5GZTNSQVVOQmFOWmNnemxVcWl0eVhRS1ROWHJsSnR2Q3VKNkwwT1JtU2oKWEhEeVdGbDh0K1ZwKzQwT2swYW4vcmR5eUkyS003clRVZmxZOHdIcVllYy90Q3VMSU5WS1ZXeXM3ZG5aQllKVAptNGtCbzE0bW9oQXpjeHlmWmFPN29qSUp2RjF6ZVBHWmNmMG12U01DQXdFQUFhT0J4akNCd3pBT0JnTlZIUThCCkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIKL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVYmRNUGtLc25mL2wwa3ZuYzZ0UEs0cHY0c2Iwd1l3WURWUjBSQkZ3dwpXb0lwYlhrdGNtVnNaV0Z6WlMxaGRXUnBkRzl5TG1GMVpHbDBiM0l0ZGpJd01qTXVNVEF1TVM1MFozcUNMVzE1CkxYSmxiR1ZoYzJVdFlYVmthWFJ2Y2k1aGRXUnBkRzl5TFhZeU1ESXpMakV3TGpFdWRHZDZMbk4yWXpBTkJna3EKaGtpRzl3MEJBUXNGQUFPQ0FRRUExOU5FRTBZbmxXZ2FZVUJzeVV5cnNpbVM3ZVJma2ZpWjJhYis3V096RVVyTApqTkMzLysrYWUvc2FzQWROZ1JCbmNYS2QzczhXc093VjYrcmxtZTBIdU5HNTRSR1l2NTliY2lQcGRLMlQvTG5FCkpraThBNEV5bS9xUHRrTjNXci9WN0Z1clozZjZaak40ZytVNkZrdUM5b1VzOXZzU0FxeWFCbUE5cStoY1pWbi8KTDVtbE0vaVh1N0RET0hQektMVFBqZjJERkZzVU1rNS92ZjMybjJYMHpRd0Nrb3dYUFg5STVMc1RvQ3VrQnFSZwpxbCtWdHdGSElhS29DYkl0bURkRmVNTFZRQThEVnFHKzg0QnJKSVJOeWFmTXl1UkNkNUFYemo1UWd4MlIzV1RpCmNWVU1nY1lZbkxpbEJrdDlZRlNQZHFwcXBGMjNpZUJ4Vkw5VFhpRDJIdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMGsxVG82dFhuVTVYQ0g4SnN0bVBkaVdQclV6RHMvL3l5cSs0QmhyMUNON0UzaUFiCmhRaVVCNVBNL2JPYldBbVdURTgvS3hrM2hFakU5OEFOTlc1UWFGNXpFdXV5eGNKSEF0cCtOSjdCcXFIampheXQKcGxMU3RGRllSMGUzSHJqb0cvV0ZIWTlock1teDM1U253WkpXdzdDdUF4MVY1VU83MmxldklSN25jeG94R3hyTAo1VTNpOGozVlJycWhZV0dLTnQ5ZWNWN2RFQlEwRm8xbHlET1ZTcUszSmRBcE0xZXVVbTI4SzRub3ZRNUdaS05jCmNQSllXWHkzNVduN2pRNlRScWYrdDNMSWpZb3p1dE5SK1ZqekFlcGg1eiswSzRzZzFVcFZiS3p0MmRrRmdsT2IKaVFHalhpYWlFRE56SEo5bG83dWlNZ204WFhONDhabHgvU2E5SXdJREFRQUJBb0lCQVFDM1lSeE12SzBTaTJ4VApDVXV3dkF0Zjc1TGdmKzZxOThXRHZrUU9kdFV5WGVaMjlySm9oN2xrL2htakpFbVNOQkh1Q3JBL2FhYkNZQjM1CkYydXRLcnRNdHdkSytXSVRGYnlNSFhBdGZEM09CNHFBVUpHL1ZidEw1eDYrVVNlNXoyeitiRkllRzVnRmJuNy8KUWdZaVFmUU1nZlRLM0hxNUJ4NDRYM3RqdXlvQmI4R0ZCOHY4cjVnaXYycEFjWklnNWk5YWNWNzJDS1lWTXUxWQpUMXVobDBQeHJxMVN3TmhoM2JvS2RqZnZqTk9iZTFSNTRzS3BRRGZlL2d6SEx2UzJDMUlHTE9vMm5Ga2dIalFTCitiRTl0dWtpVmtEU2h1bHhiSEw1d1BXT3hQQ0N4TGJyNFVvNmR5aWZxR2k0K0liZEs0TWxkcU5oMFFGVkZOU2sKSmZWSzN6QWhBb0dCQU85ejVrZWJjbGJmdjY5Z3B0L1QwNStZUCt2VEJkL3ozcURIZFVaM1ZNbDZZRHkzOFVTYQp6N2U2UXVGYXMxb0NzUnllT0hmUTdncmk5VUxrRk1ycHUwRUQ3YklUZ0wrd00zRlRtczZ3bTQvTkZ3VmJkRmh5CnF3ODFNK2VJalpQcFF0R1lEYUppdUxaeSs2WXhJWTVUTERqQ3FhYVg0RjlQTllHTmQ4ZENQZzBUQW9HQkFPRFYKdXNrMTY2SnNuZXdoSlo5NEwxWUNFRnhSSVBPeDBTTi82MmJwQ1U5eThmekczMEo2U0twMkkzMEduaUJZNzR6Wgo0RTZ3dG8yRVZmbkFHTEZFYzBaSXhXWDFDZHF2bjFIL2xzZzZuNmdXMWtKWFNPa0lNb1pCMjZIVFAvRzJaak15CkdwNVRRbEp3RnJQaXdXdnE3TUc2M1RNU2JQbDliNUl3M2k3Z2R1R3hBb0dCQUw4dkJIL0w1MERocVFSMzRRVDQKOWhDSTJSQ0xEamUvV05ONkxYS3p1R2lkWXRWWDhEVGNmbGl0U05UeFBCM3o1RUY3T282L3JDL1pBZ1lFWVcyWgpyTDYrU2p4U1Fndkt2V2dRWHB3RWVsQVlhZmNIREIvS2ZqWElQc2J3U2tuOGhqTWVlbFJiQ2l2eUptYU05OFBSCk9JK2hMUjhzU0NNUTlTR1pPRGRKOW8wdEFvR0JBSVpHbnZzMFBMb1FiSEJ0aTI2bDlIOUZWRWdPRzhQdTJweDgKOVRYTXowYW51Mlhmejg2QUFZM3NhRjF1NmxrZlJGRzJmWVFCZmNVZTE4b0VzN3FLeXQyYThHbG40cTY4WEVZNApndkNxTWxmTTY4RkxKN3drclNnSmhRWXNoKy92b3pISUpxV1B5L2c0QVJjRndjYVYwemdRUmJNT3VnNTJuMytMCnQrWC9JSURCQW9HQkFNbEhIWWZuTTFuQnRZSjMrWk5qeURkemI2cXMwM3Z6TU80SmdBRzNDcGNkU0RJQ2RwdWoKRTd0UnFmd2dvNlMzYXdRSTBkWWFkdzlmSkZqQVZFWTlnL3B2U2d4VjAyMjJMT1VYYXNPZWdOMkRud291TW4xMwpTYlRGYXJzd3lXcGhUYTFiZ0FRVVpJaUZKZy80S0tsbHYxSzVZSnIxMnpIOTlTSzlSZXIwWlpCUQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: auditor/templates/policy-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-auditor-policy
  namespace: auditor-v2023.10.1.tgz
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  "default.yaml": YXBpVmVyc2lvbjogYXVkaXRvci5rdWJlb3BzLnRvb2xzL3YxYWxwaGExCmtpbmQ6IEF1ZGl0UmVnaXN0cmF0aW9uCnJlc291cmNlczoKLSBncm91cDogYXBwcwogIHJlc291cmNlczoKICAtIGRlcGxveW1lbnRzCi0gZ3JvdXA6ICIiCiAgcmVzb3VyY2VzOgogIC0gcG9kcwogIC0gbmFtZXNwYWNlcwogIC0gc2VjcmV0cwotIGdyb3VwOiBhcHBjYXRhbG9nLmFwcHNjb2RlLmNvbQogIHJlc291cmNlczoKICAtIGFwcGJpbmRpbmdzCi0gZ3JvdXA6IGNhdGFsb2cua3ViZWRiLmNvbQogIHJlc291cmNlczoKICAtIGV0Y2R2ZXJzaW9ucwogIC0gbXlzcWx2ZXJzaW9ucwogIC0gcmVkaXN2ZXJzaW9ucwogIC0gbW9uZ29kYnZlcnNpb25zCiAgLSBwb3N0Z3Jlc3ZlcnNpb25zCiAgLSBtZW1jYWNoZWR2ZXJzaW9ucwogIC0gZWxhc3RpY3NlYXJjaHZlcnNpb25zCi0gZ3JvdXA6IGNsb3VkLmJ5dGVidWlsZGVycy5kZXYKICByZXNvdXJjZXM6CiAgLSBjcmVkZW50aWFscwogIC0gbWFjaGluZXR5cGVzCiAgLSBjbG91ZHByb3ZpZGVycwogIC0gY2x1c3RlcmluZm9zCiAgLSBjbHVzdGVydXNlcmF1dGhzCiAgLSBjbHVzdGVyYXV0aGluZm90ZW1wbGF0ZXMKLSBncm91cDoga3ViZWRiLmNvbQogIHJlc291cmNlczoKICAtIGV0Y2RzCiAgLSBteXNxbHMKICAtIHJlZGlzZXMKICAtIG1vbmdvZGJzCiAgLSBzbmFwc2hvdHMKICAtIG1lbWNhY2hlZHMKICAtIHBvc3RncmVzZXMKICAtIGVsYXN0aWNzZWFyY2hlcwogIC0gZG9ybWFudGRhdGFiYXNlcwotIGdyb3VwOiBrdWJlcGFjay5jb20KICByZXNvdXJjZXM6CiAgLSBwbGFucwogIC0gcHJvZHVjdHMKLSBncm91cDogbW9uaXRvcmluZy5hcHBzY29kZS5jb20KICByZXNvdXJjZXM6CiAgLSBpbmNpZGVudHMKICAtIHBvZGFsZXJ0cwogIC0gbm9kZWFsZXJ0cwogIC0gY2x1c3RlcmFsZXJ0cwogIC0gc2VhcmNobGlnaHRwbHVnaW5zCi0gZ3JvdXA6IHN0YXNoLmFwcHNjb2RlLmNvbQogIHJlc291cmNlczoKICAtIHRhc2tzCiAgLSByZXN0aWNzCiAgLSBmdW5jdGlvbnMKICAtIHJlY292ZXJpZXMKICAtIHJlcG9zaXRvcmllcwogIC0gYmFja3VwYmF0Y2hlcwogIC0gYmFja3Vwc2Vzc2lvbnMKICAtIHJlc3RvcmVzZXNzaW9ucwogIC0gYmFja3VwYmx1ZXByaW50cwogIC0gYmFja3VwY29uZmlndXJhdGlvbnMKLSBncm91cDogdm95YWdlci5hcHBzY29kZS5jb20KICByZXNvdXJjZXM6CiAgLSBpbmdyZXNzZXMKICAtIGNlcnRpZmljYXRlcw==
---
# Source: auditor/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-auditor
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs: ["get", "list", "watch"]
---
# Source: auditor/templates/apiregistration.yaml
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-auditor-apiserver-auth-delegator
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-auditor
  namespace: auditor-v2023.10.1.tgz
---
# Source: auditor/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-auditor
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-auditor
subjects:
- kind: ServiceAccount
  name: my-release-auditor
  namespace: auditor-v2023.10.1.tgz
---
# Source: auditor/templates/license-checker-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-auditor-license-checker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-checker
subjects:
- kind: ServiceAccount
  name: my-release-auditor
  namespace: auditor-v2023.10.1.tgz
---
# Source: auditor/templates/license-reader-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-auditor-license-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appscode:license-reader
subjects:
- kind: ServiceAccount
  name: my-release-auditor
  namespace: auditor-v2023.10.1.tgz
---
# Source: auditor/templates/apiregistration.yaml
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-auditor-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-auditor
  namespace: auditor-v2023.10.1.tgz
---
# Source: auditor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-auditor
  namespace: auditor-v2023.10.1.tgz
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  # Port used to expose admission webhook apiserver
  - name: api
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
---
# Source: auditor/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-auditor
  namespace: auditor-v2023.10.1.tgz
  labels:
    helm.sh/chart: auditor-v2023.10.1
    app.kubernetes.io/name: auditor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: auditor
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auditor
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/apiregistration.yaml: ea69e3a5203d3c86fa81aca169120a8da325e8735fef1cb790b0ca7df8047dee
    spec:
      
      serviceAccountName: my-release-auditor
      containers:
      - name: operator
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        image: ghcr.io/appscode/auditor:v0.0.1
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --policy-file=/var/policy/default.yaml
        ports:
        - containerPort: 8443
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        - name: policy-file
          mountPath: /var/policy
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: my-release-auditor-apiserver-cert
      - name: policy-file
        secret:
          defaultMode: 420
          secretName: my-release-auditor-policy
      securityContext:
        fsGroup: 65535
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
---
# Source: auditor/templates/license.yaml
# if license file is provided, then create a secret for license
---
# Source: auditor/templates/license-checker-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-checker
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Get cluster id
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs: ["get"]
# Issue license
- apiGroups:
  - proxyserver.licenses.appscode.com
  resources:
  - licenserequests
  verbs: ["create"]
# Detect workload/owner of operator pod
- apiGroups:
  - ""
  resources:
  - pods
  verbs: ["get"]
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  verbs: ["get"]
# Write events in case of license verification failure
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["get", "list", "create", "patch"]
---
# Source: auditor/templates/license-reader-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:license-reader
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
# Detect license server endpoint for kubedb addons
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["get"]
- nonResourceURLs:
  - /appscode/license
  verbs: ["get"]
