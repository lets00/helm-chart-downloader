---
# Source: k8s-cloudwatch-adapter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-k8s-cloudwatch-adapter
  labels:
    app.kubernetes.io/name: k8s-cloudwatch-adapter
    helm.sh/chart: k8s-cloudwatch-adapter-0.2.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.9.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: k8s-cloudwatch-adapter/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: externalmetrics.metrics.aws
spec:
  group: metrics.aws
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            required:
              - name
              - queries
            properties:
              name:
                type: string
              roleArn:
                type: string
              region:
                type: string
              queries:
                type: array
                items:
                  type: object
                  properties:
                    expression:
                      type: string
                    id:
                      type: string
                    label:
                      type: string
                    metricStat:
                      type: object
                      properties:
                        metric:
                          type: object
                          required:
                            - metricName
                          properties:
                            dimensions:
                              type: array
                              items:
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                            metricName:
                              type: string
                            namespace:
                              type: string
                        period:
                          type: integer
                        stat:
                          type: string
                        unit:
                          type: string
                    returnData:
                      type: boolean
  names:
    kind: ExternalMetric
    plural: externalmetrics
    singular: externalmetric
  scope: Namespaced
---
# Source: k8s-cloudwatch-adapter/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-k8s-cloudwatch-adapter:crd-metrics-reader
  labels:
    app: my-release
rules:
- apiGroups:
  - metrics.aws
  resources:
  - "externalmetrics"
  verbs:
  - list
  - get
  - watch
---
# Source: k8s-cloudwatch-adapter/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-k8s-cloudwatch-adapter-resource-reader
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - services
  verbs:
  - get
  - list
---
# Source: k8s-cloudwatch-adapter/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-k8s-cloudwatch-adapter:external-metrics-reader
rules:
- apiGroups:
  - external.metrics.k8s.io
  resources: ["*"]
  verbs: ["*"]
---
# Source: k8s-cloudwatch-adapter/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-k8s-cloudwatch-adapter:crd-metrics-reader
  labels:
    app: my-release
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-k8s-cloudwatch-adapter:crd-metrics-reader
subjects:
  - name: my-release-k8s-cloudwatch-adapter
    namespace: "k8s-cloudwatch-adapter-0.2.1.tgz"
    kind: ServiceAccount
---
# Source: k8s-cloudwatch-adapter/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-k8s-cloudwatch-adapter-resource-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-k8s-cloudwatch-adapter-resource-reader
subjects:
- kind: ServiceAccount
  name: my-release-k8s-cloudwatch-adapter
  namespace: "k8s-cloudwatch-adapter-0.2.1.tgz"
---
# Source: k8s-cloudwatch-adapter/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-k8s-cloudwatch-adapter:external-metrics-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-k8s-cloudwatch-adapter:external-metrics-reader
subjects:
- kind: ServiceAccount
  name: horizontal-pod-autoscaler
  namespace: kube-system
---
# Source: k8s-cloudwatch-adapter/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-k8s-cloudwatch-adapter:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: my-release-k8s-cloudwatch-adapter
  namespace: "k8s-cloudwatch-adapter-0.2.1.tgz"
---
# Source: k8s-cloudwatch-adapter/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-k8s-cloudwatch-adapter-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: my-release-k8s-cloudwatch-adapter
  namespace: "k8s-cloudwatch-adapter-0.2.1.tgz"
---
# Source: k8s-cloudwatch-adapter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-k8s-cloudwatch-adapter
  labels:
    app.kubernetes.io/name: k8s-cloudwatch-adapter
    helm.sh/chart: k8s-cloudwatch-adapter-0.2.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - name: https
    port: 443
    targetPort: 6443
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app.kubernetes.io/name: k8s-cloudwatch-adapter
    app.kubernetes.io/instance: my-release
---
# Source: k8s-cloudwatch-adapter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-k8s-cloudwatch-adapter
  labels:
    app.kubernetes.io/name: k8s-cloudwatch-adapter
    helm.sh/chart: k8s-cloudwatch-adapter-0.2.1
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-cloudwatch-adapter
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-cloudwatch-adapter
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-k8s-cloudwatch-adapter
      securityContext:
        fsGroup: 65534
      containers:
      - name: k8s-cloudwatch-adapter
        securityContext:
            {}
        image: "chankh/k8s-cloudwatch-adapter:v0.9.0"
        imagePullPolicy: IfNotPresent
        args:
        - /adapter
        - --cert-dir=/tmp
        - --logtostderr=true
        - --secure-port=6443
        - --v=2
        ports:
        - containerPort: 6443
          name: https
        - containerPort: 8080
          name: http
        volumeMounts:
        - mountPath: /tmp
          name: temp-vol
        resources:
          {}
      volumes:
      - name: temp-vol
        emptyDir: {}
---
# Source: k8s-cloudwatch-adapter/templates/apiservice.yaml
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.external.metrics.k8s.io
spec:
  service:
    name: my-release-k8s-cloudwatch-adapter
    namespace: "k8s-cloudwatch-adapter-0.2.1.tgz"
  group: external.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
