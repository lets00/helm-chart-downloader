---
# Source: bastion/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-bastion
  labels:
    app: my-release-bastion
    chart: "bastion-0.2.0"
    release: "my-release"
    heritage: "Helm"
type: Opaque
data:
  github_api_token: ""
  github_organization: ""
---
# Source: bastion/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-bastion
  labels:
    app: my-release-bastion
    chart: "bastion-0.2.0"
    release: "my-release"
    heritage: "Helm"
  annotations:
    volume.alpha.kubernetes.io/storage-class: "generic"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "1Gi"
---
# Source: bastion/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-bastion
  labels:
    chart: "bastion-0.2.0"
spec:
  type: ClusterIP
  ports:
  - port: 22
    targetPort: 22
    protocol: TCP
    name: ssh
  selector:
    app: my-release-bastion
---
# Source: bastion/templates/deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: my-release-bastion
  labels:
    chart: "bastion-0.2.0"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: my-release-bastion
    spec:
      initContainers:
      - name: init
        image: "cloudposse/bastion:latest"
        imagePullPolicy: "Always"
        imagePullSecrets: []
        command: ["/bin/sh", "-c", "(cp -a /etc/ /mnt/etc/) && (mkdir -p /mnt/home /mnt/root /mnt/var/log)"]
        volumeMounts:
        - mountPath: "/mnt"
          name: "my-release-bastion"
      containers:
      - name: bastion
        image: "cloudposse/bastion:latest"
        imagePullPolicy: Always
        imagePullSecrets: []
        volumeMounts:
        - mountPath: /etc
          subPath: etc/
          name: my-release-bastion
          readOnly: false
        - mountPath: /home
          subPath: home/
          name: my-release-bastion
          readOnly: false
        - mountPath: /root
          subPath: root/
          name: my-release-bastion
          readOnly: false
        - mountPath: /var/log
          subPath: var/log/
          name: my-release-bastion
          readOnly: false
        env:
        - name: "SSH_AUDIT_ENABLED"
          value: "true"
        ports:
        - containerPort: 22
        livenessProbe:
          tcpSocket:
            port: 22
          initialDelaySeconds: 10
        readinessProbe:
          tcpSocket:
            port: 22
          initialDelaySeconds: 10
        resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      - name: "github-authorized-keys"
        image: "cloudposse/github-authorized-keys:latest"
        imagePullPolicy: "Always"
        imagePullSecrets: []
        volumeMounts:
        - mountPath: /etc
          subPath: etc/
          name: my-release-bastion
          readOnly: false
        - mountPath: /home
          subPath: home/
          name: my-release-bastion
          readOnly: false
        - mountPath: /root
          subPath: root/
          name: my-release-bastion
          readOnly: false
        - mountPath: /var/log
          subPath: var/log/
          name: my-release-bastion
          readOnly: false
        env:
        - name: "INTEGRATE_SSH"
          value: "false"
        - name: "LINUX_USER_ADD_TPL"
          value: "adduser -D -s {shell} {username}"
        - name: "LINUX_USER_ADD_WITH_GID_TPL"
          value: "adduser -D -s {shell} -G {group} {username}"
        - name: "SYNC_USERS_INTERVAL"
          value: "300"
        - name: "SYNC_USERS_ROOT"
          value: "/"
        - name: "SYNC_USERS_SHELL"
          value: "/usr/bin/sudosh"
        - name: GITHUB_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: my-release-bastion
              key: github_api_token
        - name: GITHUB_ORGANIZATION
          valueFrom:
            secretKeyRef:
              name: my-release-bastion
              key: github_organization



      volumes:
      - name: my-release-bastion
        persistentVolumeClaim:
          claimName: my-release-bastion
