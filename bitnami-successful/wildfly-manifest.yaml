---
# Source: wildfly/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-wildfly
  namespace: "wildfly"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wildfly
    app.kubernetes.io/version: 32.0.1
    helm.sh/chart: wildfly-20.2.7
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: wildfly
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 8080
        - port: 80
---
# Source: wildfly/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-wildfly
  namespace: "wildfly"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wildfly
    app.kubernetes.io/version: 32.0.1
    helm.sh/chart: wildfly-20.2.7
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: wildfly
---
# Source: wildfly/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-wildfly
  namespace: "wildfly"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wildfly
    app.kubernetes.io/version: 32.0.1
    helm.sh/chart: wildfly-20.2.7
automountServiceAccountToken: false
---
# Source: wildfly/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-wildfly
  namespace: "wildfly"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wildfly
    app.kubernetes.io/version: 32.0.1
    helm.sh/chart: wildfly-20.2.7
type: Opaque
data:
  wildfly-password: "aThHT3VqcE1UbA=="
---
# Source: wildfly/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-wildfly
  namespace: "wildfly"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wildfly
    app.kubernetes.io/version: 32.0.1
    helm.sh/chart: wildfly-20.2.7
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: wildfly/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-wildfly
  namespace: "wildfly"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wildfly
    app.kubernetes.io/version: 32.0.1
    helm.sh/chart: wildfly-20.2.7
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: wildfly
---
# Source: wildfly/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-wildfly
  namespace: "wildfly"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wildfly
    app.kubernetes.io/version: 32.0.1
    helm.sh/chart: wildfly-20.2.7
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: wildfly
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: wildfly
        app.kubernetes.io/version: 32.0.1
        helm.sh/chart: wildfly-20.2.7
      annotations:
        checksum/secrets: 5012477384a9a3fff828ed90d0995a52f5c4146a84266e37fd55586e8b3008ef
    spec:
      
      automountServiceAccountToken: true
      serviceAccountName: my-release-wildfly
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: wildfly
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
        - name: prepare-writable-files
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          image: docker.io/bitnami/wildfly:32.0.1-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
          args:
            - -ec
            - |
              #!/bin/bash
              . /opt/bitnami/scripts/liblog.sh
              # We need the standalone.conf to be writable but not the rest of the bin folder
              info "Copying standalone.conf"
              cp /opt/bitnami/wildfly/bin/standalone.conf /app-standalone-conf-dir
              info "Writable files successfully copied"
          volumeMounts:
            - name: empty-dir
              mountPath: /app-standalone-conf-dir
              subPath: app-standalone-conf-dir
      containers:
        - name: wildfly
          image: docker.io/bitnami/wildfly:32.0.1-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: WILDFLY_USERNAME
              value: "user"
            - name: WILDFLY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-wildfly
                  key: wildfly-password
            - name: WILDFLY_HTTP_PORT_NUMBER
              value: "8080"
            - name: WILDFLY_HTTPS_PORT_NUMBER
              value: "8443"
            - name: WILDFLY_MANAGEMENT_PORT_NUMBER
              value: "9990"
            - name: WILDFLY_SERVER_LISTEN_ADDRESS
              value: "0.0.0.0"
            - name: WILDFLY_MANAGEMENT_LISTEN_ADDRESS
              value: "127.0.0.1"
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
            - name: mgmt
              containerPort: 9990
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 1024Mi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /opt/bitnami/wildfly/standalone
              subPath: app-standalone-dir
            - name: empty-dir
              mountPath: /opt/bitnami/wildfly/bin/standalone.conf
              subPath: app-standalone-conf-dir/standalone.conf
            - name: empty-dir
              mountPath: /opt/bitnami/wildfly/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/wildfly/domain/configuration
              subPath: app-domain-conf-dir
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: data
              mountPath: /bitnami/wildfly
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: data
          persistentVolumeClaim:
            claimName: my-release-wildfly
