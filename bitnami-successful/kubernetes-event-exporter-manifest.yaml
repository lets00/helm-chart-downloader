---
# Source: kubernetes-event-exporter/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-kubernetes-event-exporter
  namespace: kubernetes-event-exporter
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-event-exporter
    app.kubernetes.io/version: 1.7.0
    helm.sh/chart: kubernetes-event-exporter-3.2.5
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: kubernetes-event-exporter
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 2112
---
# Source: kubernetes-event-exporter/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-kubernetes-event-exporter
  namespace: "kubernetes-event-exporter"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-event-exporter
    app.kubernetes.io/version: 1.7.0
    helm.sh/chart: kubernetes-event-exporter-3.2.5
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: kubernetes-event-exporter
---
# Source: kubernetes-event-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kubernetes-event-exporter
  namespace: "kubernetes-event-exporter"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-event-exporter
    app.kubernetes.io/version: 1.7.0
    helm.sh/chart: kubernetes-event-exporter-3.2.5
automountServiceAccountToken: false
---
# Source: kubernetes-event-exporter/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-kubernetes-event-exporter
  namespace: "kubernetes-event-exporter"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-event-exporter
    app.kubernetes.io/version: 1.7.0
    helm.sh/chart: kubernetes-event-exporter-3.2.5
data:
  config.yaml: |
    leaderElection: {}
    logFormat: pretty
    logLevel: debug
    receivers:
    - file:
        layout: {}
        path: /dev/stdout
      name: dump
    route:
      routes:
      - match:
        - receiver: dump
---
# Source: kubernetes-event-exporter/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kubernetes-event-exporter-kubernetes-event-exporter
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-event-exporter
    app.kubernetes.io/version: 1.7.0
    helm.sh/chart: kubernetes-event-exporter-3.2.5
rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - get
    - watch
    - list
---
# Source: kubernetes-event-exporter/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kubernetes-event-exporter-kubernetes-event-exporter
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-event-exporter
    app.kubernetes.io/version: 1.7.0
    helm.sh/chart: kubernetes-event-exporter-3.2.5
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-kubernetes-event-exporter-kubernetes-event-exporter
subjects:
  - kind: ServiceAccount
    name: my-release-kubernetes-event-exporter
    namespace: "kubernetes-event-exporter"
---
# Source: kubernetes-event-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kubernetes-event-exporter
  namespace: "kubernetes-event-exporter"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-event-exporter
    app.kubernetes.io/version: 1.7.0
    helm.sh/chart: kubernetes-event-exporter-3.2.5
    app.kubernetes.io/component: kubernetes-event-exporter
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: kubernetes-event-exporter
  template:
    metadata:
      annotations:
        checksum/config: 7b57284294d98c65a2318b1d9d462ea267680054ae0e13210c8686912896836d
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubernetes-event-exporter
        app.kubernetes.io/version: 1.7.0
        helm.sh/chart: kubernetes-event-exporter-3.2.5
        app.kubernetes.io/component: kubernetes-event-exporter
    spec:
      serviceAccountName: my-release-kubernetes-event-exporter
      
      automountServiceAccountToken: true
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: kubernetes-event-exporter
                    app.kubernetes.io/component: kubernetes-event-exporter
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      containers:
        - name: event-exporter
          image: docker.io/bitnami/kubernetes-event-exporter:1.7.0-debian-12-r5
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          args:
            - -conf=/data/config.yaml
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
            httpGet:
              path: /-/healthy
              port: http
          readinessProbe:
            failureThreshold: 1
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
            httpGet:
              path: /-/ready
              port: http
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 1024Mi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          ports:
            - name: http
              containerPort: 2112
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: cfg
      volumes:
        - name: cfg
          configMap:
            name: my-release-kubernetes-event-exporter
