---
# Source: flink/templates/jobmanager/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-flink-jobmanager
  namespace: "flink"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flink
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: flink-1.3.6
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: jobmanager
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: flink
      app.kubernetes.io/part-of: flink
      app.kubernetes.io/component: jobmanager
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 6124
        - port: 6123
        - port: 8081
---
# Source: flink/templates/taskmanager/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-flink-taskmanager
  namespace: "flink"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flink
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: flink-1.3.6
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: taskmanager
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: flink
      app.kubernetes.io/part-of: flink
      app.kubernetes.io/component: taskmanager
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 6121
        - port: 6122
        - port: 6126
---
# Source: flink/templates/jobmanager/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-flink-jobmanager
  namespace: "flink"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flink
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: flink-1.3.6
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: jobmanager
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: flink
      app.kubernetes.io/part-of: flink
      app.kubernetes.io/component: jobmanager
---
# Source: flink/templates/taskmanager/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-flink-taskmanager
  namespace: "flink"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flink
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: flink-1.3.6
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: taskmanager
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: flink
      app.kubernetes.io/part-of: flink
      app.kubernetes.io/component: taskmanager
---
# Source: flink/templates/jobmanager/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name:  my-release-flink-jobmanager
  namespace: "flink"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flink
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: flink-1.3.6
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: jobmanager
  annotations:
    {}
automountServiceAccountToken: false
---
# Source: flink/templates/taskmanager/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name:  my-release-flink-taskmanager
  namespace: "flink"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flink
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: flink-1.3.6
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: taskmanager
  annotations:
    {}
automountServiceAccountToken: false
---
# Source: flink/templates/jobmanager/service.yml
apiVersion: v1
kind: Service
metadata:
  name:  my-release-flink-jobmanager
  namespace: "flink"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flink
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: flink-1.3.6
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: jobmanager
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-rpc
      port: 6123
      targetPort: rpc
      nodePort: null
    - name: http
      port: 8081
      targetPort: http
      nodePort: null
    - name: tcp-blob
      port: 6124
      targetPort: blob
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: flink
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: jobmanager
---
# Source: flink/templates/taskmanager/headless-service.yml
apiVersion: v1
kind: Service
metadata:
  name:  my-release-flink-taskmanager-headless
  namespace: "flink"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flink
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: flink-1.3.6
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: taskmanager
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-data
      port: 6121
      targetPort: data
    - name: tcp-rpc
      port: 6122
      targetPort: rpc
    - name: tcp-internal-metrics
      port: 6126
      targetPort: int-metrics
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: flink
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: taskmanager
---
# Source: flink/templates/taskmanager/service.yml
apiVersion: v1
kind: Service
metadata:
  name:  my-release-flink-taskmanager
  namespace: "flink"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flink
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: flink-1.3.6
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: taskmanager
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-data
      port: 6121
      targetPort: data
      nodePort: null
    - name: tcp-rpc
      port: 6122
      targetPort: rpc
      nodePort: null
    - name: tcp-internal-metrics
      port: 6126
      targetPort: int-metrics
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: flink
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: taskmanager
---
# Source: flink/templates/jobmanager/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  my-release-flink-jobmanager
  namespace: "flink"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flink
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: flink-1.3.6
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: jobmanager
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: flink
      app.kubernetes.io/part-of: flink
      app.kubernetes.io/component: jobmanager
  replicas: 1
  strategy:
    rollingUpdate: null
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: flink
        app.kubernetes.io/version: 1.19.1
        helm.sh/chart: flink-1.3.6
        app.kubernetes.io/part-of: flink
        app.kubernetes.io/component: jobmanager
    spec:
      
      automountServiceAccountToken: false
      priorityClassName: ""
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: flink
                    app.kubernetes.io/component: jobmanager
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
      containers:
        - name: flink-jobmanager
          image: docker.io/bitnami/flink:1.19.1-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: rpc
              containerPort: 6123
            - name: http
              containerPort: 8081
            - name: blob
              containerPort: 6124
          env:
            - name: FLINK_MODE
              value: jobmanager
            - name: FLINK_CFG_JOBMANAGER_RPC_ADDRESS
              value: "my-release-flink-jobmanager"
            - name: FLINK_CFG_JOBMANAGER_RPC_PORT
              value: "6123"
            - name: FLINK_CFG_JOBMANAGER_RPC_BIND__PORT
              value: "6123"
            - name: FLINK_CFG_JOBMANAGER_BIND__HOST
              value: 0.0.0.0
            - name: FLINK_CFG_REST_ADDRESS
              value: "my-release-flink-jobmanager"
            - name: FLINK_CFG_REST_PORT
              value: "8081"
            - name: FLINK_CFG_REST_BIND__ADDRESS
              value: 0.0.0.0
            - name: FLINK_CFG_BLOB_SERVER_PORT
              value: "6124"
            - name: BITNAMI_DEBUG
              value: "false"
          envFrom:
          startupProbe:
            failureThreshold: 15
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            tcpSocket:
              port: rpc
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
              - pgrep
              - -f
              - jobmanager
          readinessProbe:
            failureThreshold: 15
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            tcpSocket:
              port: rpc
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 1024Mi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/flink/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/flink/log
              subPath: app-logs-dir
            # HACK: Workaround to bypass the libflink.sh persist_app logic
            - name: empty-dir
              mountPath: /bitnami/flink/conf
              subPath: app-conf-dir
      volumes:
        - name: empty-dir
          emptyDir: {}
---
# Source: flink/templates/taskmanager/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  my-release-flink-taskmanager
  namespace: "flink"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flink
    app.kubernetes.io/version: 1.19.1
    helm.sh/chart: flink-1.3.6
    app.kubernetes.io/part-of: flink
    app.kubernetes.io/component: taskmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: flink
      app.kubernetes.io/part-of: flink
      app.kubernetes.io/component: taskmanager
  podManagementPolicy: Parallel
  serviceName: my-release-flink-taskmanager-headless
  updateStrategy:
    rollingUpdate: null
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: flink
        app.kubernetes.io/version: 1.19.1
        helm.sh/chart: flink-1.3.6
        app.kubernetes.io/part-of: flink
        app.kubernetes.io/component: taskmanager
    spec:
      
      automountServiceAccountToken: false
      priorityClassName: ""
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: flink
                    app.kubernetes.io/component: taskmanager
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      initContainers:
      containers:
        - name: flink-taskmanager
          image: docker.io/bitnami/flink:1.19.1-debian-12-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: data
              containerPort: 6121
            - name: rpc
              containerPort: 6122
            - name: int-metrics
              containerPort: 6126
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: FLINK_MODE
              value: taskmanager
            # Hosts and addresses are determined by the service full name, which maps to flink.*§.fullname
            - name: FLINK_CFG_JOBMANAGER_RPC_ADDRESS
              value: "my-release-flink-jobmanager"
            - name: FLINK_CFG_JOBMANAGER_RPC_PORT
              value: "6123"
            - name: FLINK_CFG_JOBMANAGER_BIND__HOST
              value: 0.0.0.0
            - name: FLINK_CFG_TASKMANAGER_DATA_PORT
              value: "6121"
            - name: FLINK_CFG_TASKMANAGER_RPC_PORT
              value: "6122"
            - name: FLINK_CFG_METRICS_INTERNAL_QUERY__SERVICE_PORT
              value: "6126"
            - name: FLINK_CFG_TASKMANAGER_HOST
              value: "$(MY_POD_NAME).my-release-flink-taskmanager-headless.flink.svc.cluster.local"
            - name: FLINK_CFG_TASKMANAGER_BIND__HOST
              value: 0.0.0.0
            - name: BITNAMI_DEBUG
              value: "false"
          envFrom:
          startupProbe:
            failureThreshold: 15
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            tcpSocket:
              port: rpc
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
              - pgrep
              - -f
              - taskmanager
          readinessProbe:
            failureThreshold: 15
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            tcpSocket:
              port: rpc
          resources:
            limits:
              cpu: 750m
              ephemeral-storage: 1024Mi
              memory: 768Mi
            requests:
              cpu: 500m
              ephemeral-storage: 50Mi
              memory: 512Mi
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/flink/conf
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/flink/log
              subPath: app-logs-dir
            # HACK: Workaround to bypass the libflink.sh persist_app logic
            - name: empty-dir
              mountPath: /bitnami/flink/conf
              subPath: app-conf-dir
      volumes:
        - name: empty-dir
          emptyDir: {}
