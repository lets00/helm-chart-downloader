---
# Source: scylladb/templates/networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-scylladb
  namespace: "scylladb"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: scylladb
    app.kubernetes.io/version: 6.0.0
    helm.sh/chart: scylladb-1.0.3
    app.kubernetes.io/part-of: scylladb
    app.kubernetes.io/component: scylladb
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: scylladb
      app.kubernetes.io/part-of: scylladb
      app.kubernetes.io/component: scylladb
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    - ports:
        - port: 9042
        - port: 19042
        - port: 7001
        - port: 7000
        - port: 7199
---
# Source: scylladb/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-scylladb
  namespace: "scylladb"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: scylladb
    app.kubernetes.io/version: 6.0.0
    helm.sh/chart: scylladb-1.0.3
    app.kubernetes.io/part-of: scylladb
    app.kubernetes.io/component: scylladb
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: scylladb
      app.kubernetes.io/part-of: scylladb
      app.kubernetes.io/component: scylladb
---
# Source: scylladb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-scylladb
  namespace: "scylladb"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: scylladb
    app.kubernetes.io/version: 6.0.0
    helm.sh/chart: scylladb-1.0.3
    app.kubernetes.io/part-of: scylladb
    app.kubernetes.io/component: scylladb
automountServiceAccountToken: false
---
# Source: scylladb/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-scylladb
  namespace: "scylladb"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: scylladb
    app.kubernetes.io/version: 6.0.0
    helm.sh/chart: scylladb-1.0.3
    app.kubernetes.io/part-of: scylladb
    app.kubernetes.io/component: scylladb
type: Opaque
data:
  scylladb-password: "SkxsQWt5VGNpeg=="
---
# Source: scylladb/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-scylladb-headless
  namespace: "scylladb"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: scylladb
    app.kubernetes.io/version: 6.0.0
    helm.sh/chart: scylladb-1.0.3
    app.kubernetes.io/part-of: scylladb
    app.kubernetes.io/component: scylladb
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: intra
      port: 7000
      targetPort: intra
    - name: tls
      port: 7001
      targetPort: tls
    - name: jmx
      port: 7199
      targetPort: jmx
    - name: cql
      port: 9042
      targetPort: cql
    - name: cql-shard
      port: 19042
      targetPort: cql
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: scylladb
    app.kubernetes.io/part-of: scylladb
    app.kubernetes.io/component: scylladb
---
# Source: scylladb/templates/individual-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-scylladb-0-internal
  namespace: "scylladb"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: scylladb
    app.kubernetes.io/version: 6.0.0
    helm.sh/chart: scylladb-1.0.3
    app.kubernetes.io/part-of: scylladb
    app.kubernetes.io/component: scylladb
    pod: my-release-scylladb-0
spec:
  type: ClusterIP
  publishNotReadyAddresses: true
  ports:
    - name: intra
      port: 7000
      targetPort: intra
    - name: tls
      port: 7001
      targetPort: tls
    - name: jmx
      port: 7199
      targetPort: jmx
    - name: cql
      port: 9042
      targetPort: cql
    - name: cql-shard
      port: 19042
      targetPort: cql
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: scylladb
    app.kubernetes.io/part-of: scylladb
    app.kubernetes.io/component: scylladb
    statefulset.kubernetes.io/pod-name: my-release-scylladb-0
---
# Source: scylladb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-scylladb
  namespace: "scylladb"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: scylladb
    app.kubernetes.io/version: 6.0.0
    helm.sh/chart: scylladb-1.0.3
    app.kubernetes.io/part-of: scylladb
    app.kubernetes.io/component: scylladb
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: cql
      port: 9042
      targetPort: cql
      nodePort: null
    - name: cql-shard
      port: 19042
      targetPort: cql-shard
      nodePort: null
  selector:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: scylladb
    app.kubernetes.io/part-of: scylladb
    app.kubernetes.io/component: scylladb
---
# Source: scylladb/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-scylladb
  namespace: "scylladb"
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: scylladb
    app.kubernetes.io/version: 6.0.0
    helm.sh/chart: scylladb-1.0.3
    app.kubernetes.io/part-of: scylladb
    app.kubernetes.io/component: scylladb
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: scylladb
  serviceName: my-release-scylladb-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: scylladb
        app.kubernetes.io/version: 6.0.0
        helm.sh/chart: scylladb-1.0.3
        app.kubernetes.io/part-of: scylladb
        app.kubernetes.io/component: scylladb
    spec:
      
      automountServiceAccountToken: false
      serviceAccountName: my-release-scylladb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: scylladb
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      containers:
        - name: scylladb
          image: docker.io/bitnami/scylladb:6.0.0-debian-12-r2
          imagePullPolicy: "IfNotPresent"
          command:
            - bash
            - -ec
            - |
              # Node 0 is the password seeder
              if [[ $POD_NAME =~ (.*)-0$ ]]; then
                  echo "Setting node as password seeder"
                  export SCYLLADB_PASSWORD_SEEDER=yes
              else
                  # Only node 0 will execute the startup initdb scripts
                  export SCYLLADB_IGNORE_INITDB_SCRIPTS=1
              fi
              export SCYLLADB_BROADCAST_ADDRESS=${POD_NAME}-internal
              /opt/bitnami/scripts/scylladb/entrypoint.sh /opt/bitnami/scripts/scylladb/run.sh
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: SCYLLADB_CLUSTER_NAME
              value: scylladb
            - name: SCYLLADB_SEEDS
              value: "my-release-scylladb-0-internal.scylladb.svc.cluster.local"
            - name: SCYLLADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-scylladb
                  key: scylladb-password
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SCYLLADB_USER
              value: "cassandra"
            - name: SCYLLADB_NUM_TOKENS
              value: "256"
            - name: SCYLLADB_DATACENTER
              value: "dc1"
            - name: SCYLLADB_ENDPOINT_SNITCH
              value: "SimpleSnitch"
            - name: SCYLLADB_RACK
              value: rack1
            - name: MAX_HEAP_SIZE
              value: "768M"
            - name: HEAP_NEWSIZE
              value: "256M"
            - name: SCYLLADB_TRANSPORT_PORT_NUMBER
              value: "7000"
            - name: SCYLLADB_JMX_PORT_NUMBER
              value: "7199"
            - name: SCYLLADB_CQL_PORT_NUMBER
              value: "9042"
            - name: SCYLLADB_API_PORT_NUMBER
              value: "10000"
            - name: SCYLLADB_CQL_SHARD_PORT_NUMBER
              value: "19042"
            - name: SCYLLADB_PROMETHEUS_PORT_NUMBER
              value: "0"
          envFrom:
          livenessProbe:
            tcpSocket:
              port: cql
            initialDelaySeconds: 100
            periodSeconds: 30
            timeoutSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  nodetool info -p 10000 | grep "Native Transport active: true"
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          lifecycle:
            preStop:
              exec:
                command:
                  - bash
                  - -ec
                  # After stopping the node, create a flag file so the JMX Proxy can stop
                  - nodetool drain -p 10000 && touch /tmp/.node_decommissioned
          ports:
            - name: intra
              containerPort: 7000
            - name: jmx
              containerPort: 7199
            - name: cql
              containerPort: 9042
            - name: cql-shard
              containerPort: 19042
            - name: api
              containerPort: 10000
            - name: metrics
              containerPort: 9180
          resources:
            limits:
              cpu: "1.5"
              ephemeral-storage: 1024Mi
              memory: 3072Mi
            requests:
              cpu: "1.0"
              ephemeral-storage: 50Mi
              memory: 2048Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/scylladb
            
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/scylladb/etc
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/scylladb/tmp
              subPath: app-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/scylladb/logs
              subPath: app-logs-dir
            - name: empty-dir
              mountPath: /.cassandra
              subPath: app-cqlsh-tmp-dir
        - name: scylladb-jmx-proxy
          command:
            - /opt/bitnami/scylladb/supervisor/scylla-jmx.sh
          image: docker.io/bitnami/scylladb:6.0.0-debian-12-r2
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: MAX_HEAP_SIZE
              value: "768M"
            - name: HEAP_NEWSIZE
              value: "256M"
            - name: SCYLLA_JMX_PORT
              value: "-jp 7199"
            - name: SCYLLA_API_PORT
              value: "-p 10000"
          envFrom:
          livenessProbe:
            exec:
              command:
                - pgrep
                - -f
                - scylla-jmx
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  nodetool info -p 10000 | grep "Native Transport active: true"
            initialDelaySeconds: 5
            periodSeconds: 20
            timeoutSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          lifecycle:
            # Wait for the scylladb decommission to take place before stopping the JMX proxy
            preStop:
              exec:
                command:
                  - bash
                  - -ec
                  - until [[ -f /tmp/.node_decommissioned ]]; do sleep 1; done && rm /tmp/.node_decommissioned
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 1024Mi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
          volumeMounts:
            - name: data
              mountPath: /bitnami/scylladb
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      volumes:
        - name: empty-dir
          emptyDir: {}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
        labels:
          app.kubernetes.io/instance: my-release
          app.kubernetes.io/name: scylladb
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
