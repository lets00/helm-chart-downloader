---
# Source: drone-kubernetes-secrets/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-drone-kubernetes-secrets
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.4
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: drone-kubernetes-secrets/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-drone-kubernetes-secrets
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.4
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
data:
  
  KUBERNETES_NAMESPACE: "default"
---
# Source: drone-kubernetes-secrets/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-drone-kubernetes-secrets
  namespace: "default"
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.4
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - ""
    resources:
    - secrets
  
    verbs:
    - get
    - watch
---
# Source: drone-kubernetes-secrets/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-drone-kubernetes-secrets
  namespace: "default"
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.4
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: my-release-drone-kubernetes-secrets
  namespace: drone-kubernetes-secrets-0.1.4.tgz
roleRef:
  kind: Role
  name: my-release-drone-kubernetes-secrets
  apiGroup: rbac.authorization.k8s.io
---
# Source: drone-kubernetes-secrets/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-drone-kubernetes-secrets
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.4
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: drone-kubernetes-secrets
---
# Source: drone-kubernetes-secrets/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-drone-kubernetes-secrets
  labels:
    helm.sh/chart: drone-kubernetes-secrets-0.1.4
    app.kubernetes.io/name: drone-kubernetes-secrets
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: drone-kubernetes-secrets
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: drone-kubernetes-secrets
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: drone-kubernetes-secrets
  template:
    metadata:
      labels:
        app.kubernetes.io/name: drone-kubernetes-secrets
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: drone-kubernetes-secrets
      annotations:
        checksum/secrets: beac5a85027e07c2fc4cb738d5313213e6d35bf509b940b9fb812ab787a50693
    spec:
      serviceAccountName: my-release-drone-kubernetes-secrets
      securityContext:
        {}
      containers:
        - name: server
          securityContext:
            {}
          image: "docker.io/drone/kubernetes-secrets:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            {}
          envFrom:
            - configMapRef:
                name: my-release-drone-kubernetes-secrets
