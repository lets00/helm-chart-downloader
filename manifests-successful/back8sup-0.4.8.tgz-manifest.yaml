---
# Source: back8sup/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-back8sup
  labels:
    helm.sh/chart: back8sup-0.4.8
    app.kubernetes.io/name: back8sup
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.7.10"
    app.kubernetes.io/managed-by: Helm
---
# Source: back8sup/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-back8sup-config
  labels:
    helm.sh/chart: back8sup-0.4.8
    app.kubernetes.io/name: back8sup
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.7.10"
    app.kubernetes.io/managed-by: Helm
data:
    config.yaml: |
      global:
        - pvc
        - pv
      namespaces:
        - name: default
          kind:
            - deployment
            - cm
            - secret
---
# Source: back8sup/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-back8sup
  labels:
    helm.sh/chart: back8sup-0.4.8
    app.kubernetes.io/name: back8sup
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.7.10"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: back8sup/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: back8sup-0.4.8
    app.kubernetes.io/name: back8sup
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.7.10"
    app.kubernetes.io/managed-by: Helm
  name: my-release-back8sup-cluster-reader
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
- nonResourceURLs:
  - '*'
  verbs:
  - get
  - list
---
# Source: back8sup/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: back8sup-0.4.8
    app.kubernetes.io/name: back8sup
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.7.10"
    app.kubernetes.io/managed-by: Helm
  name: my-release-back8sup-cluster-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-back8sup-cluster-reader
subjects:
- kind: ServiceAccount
  name: my-release-back8sup
  namespace: back8sup-0.4.8.tgz
---
# Source: back8sup/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: my-release-back8sup
  labels:
    helm.sh/chart: back8sup-0.4.8
    app.kubernetes.io/name: back8sup
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.7.10"
    app.kubernetes.io/managed-by: Helm
spec:
  schedule: "0 1 * * *"
  jobTemplate:
    metadata:
      labels:
        helm.sh/chart: back8sup-0.4.8
        app.kubernetes.io/name: back8sup
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "v0.7.10"
        app.kubernetes.io/managed-by: Helm
    spec:
      template:
        metadata:
          labels:
            helm.sh/chart: back8sup-0.4.8
            app.kubernetes.io/name: back8sup
            app.kubernetes.io/instance: my-release
            app.kubernetes.io/version: "v0.7.10"
            app.kubernetes.io/managed-by: Helm
        spec:
          securityContext:
            fsGroup: 65534
          volumes:
            - name: config-volume
              configMap:
                name: my-release-back8sup-config
            - name: backup-volume
              persistentVolumeClaim:
                claimName: my-release-back8sup
          restartPolicy: Never
          serviceAccount: my-release-back8sup
          containers:
            - name: back8sup
              securityContext:
                {}
              image: "ghcr.io/adfinis/back8sup:v0.7.10"
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: config-volume
                  mountPath: /etc/config.yaml
                  subPath: config.yaml
                - name: backup-volume
                  mountPath: "/mnt/back8sup"
              env:
                - name: API_ENDPOINT
                  value: https://kubernetes.default.svc.cluster.local:443
                - name: CA_CERT
                  value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                - name: TOKEN_FILE
                  value: /var/run/secrets/kubernetes.io/serviceaccount/token
                - name: CONFIGMAP_PATH
                  value: /etc/config.yaml
                - name: EXPORT_FORMAT
                  value: yaml
                - name: DST_FOLDER
                  value: /mnt/back8sup
                - name: GENERATIONS
                  value: "30"
              resources:
                {}
---
# Source: back8sup/templates/tests/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-back8sup
  labels:
    helm.sh/chart: back8sup-0.4.8
    app.kubernetes.io/name: back8sup
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.7.10"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  template:
    metadata:
      labels:
            helm.sh/chart: back8sup-0.4.8
            app.kubernetes.io/name: back8sup
            app.kubernetes.io/instance: my-release
            app.kubernetes.io/version: "v0.7.10"
            app.kubernetes.io/managed-by: Helm
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: my-release-back8sup-config
        - name: backup-volume
          persistentVolumeClaim:
            claimName: my-release-back8sup
      restartPolicy: Never
      serviceAccount: my-release-back8sup
      containers:
        - name: back8sup
          image: "ghcr.io/adfinis/back8sup:v0.7.10"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config.yaml
              subPath: config.yaml
            - name: backup-volume
              mountPath: "/mnt/back8sup"
          env:
                - name: API_ENDPOINT
                  value: https://kubernetes.default.svc.cluster.local:443
                - name: CA_CERT
                  value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                - name: TOKEN_FILE
                  value: /var/run/secrets/kubernetes.io/serviceaccount/token
                - name: CONFIGMAP_PATH
                  value: /etc/config.yaml
                - name: EXPORT_FORMAT
                  value: yaml
                - name: DST_FOLDER
                  value: /mnt/back8sup
                - name: GENERATIONS
                  value: "30"
          resources:
                {}
