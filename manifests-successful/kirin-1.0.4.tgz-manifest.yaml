---
# Source: kirin/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kirin
  labels:
    helm.sh/chart: kirin-1.0.4
    app.kubernetes.io/name: kirin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.4"
    app.kubernetes.io/managed-by: Helm
---
# Source: kirin/templates/database-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kirin-database-secret
  labels:
    helm.sh/chart: kirin-1.0.4
    app.kubernetes.io/name: kirin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.4"
    app.kubernetes.io/managed-by: Helm
stringData:
  password: kirin
---
# Source: kirin/templates/oidc-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kirin-oidc-client-secret
  labels:
    helm.sh/chart: kirin-1.0.4
    app.kubernetes.io/name: kirin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.4"
    app.kubernetes.io/managed-by: Helm
stringData:
  password:
---
# Source: kirin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kirin
  labels:
    helm.sh/chart: kirin-1.0.4
    app.kubernetes.io/name: kirin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kirin
    app.kubernetes.io/instance: my-release
---
# Source: kirin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kirin
  labels:
    helm.sh/chart: kirin-1.0.4
    app.kubernetes.io/name: kirin
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.1.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: kirin
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kirin
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-kirin
      securityContext:
        {}
      containers:
        - name: kirin
          securityContext:
            {}
          image: "reiizumi/kirin:1.1.4"
          imagePullPolicy: IfNotPresent
          env:
            - name: quarkus.datasource.jdbc.url
              value: jdbc:postgresql://postgres.domain.intranet:5432/kirin
            - name: quarkus.datasource.username
              value: kirin
            - name: quarkus.datasource.password
              valueFrom:
                secretKeyRef:
                  name: my-release-kirin-database-secret
                  key: password
            - name: quarkus.oidc.auth-server-url
              value: https://keycloak.domain.cat/realms/Extranet
            - name: quarkus.rest-client.toranku-api.url
              value: https://toranku.domain.intranet
            - name: quarkus.oidc-client.auth-server-url
              value: https://keycloak.domain.cat/realms/Intranet
            - name: quarkus.oidc-client.client-id
              value: kirin
            - name: quarkus.oidc-client.credentials.secret
              valueFrom:
                secretKeyRef:
                  name: my-release-kirin-oidc-client-secret
                  key: password
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: http
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: http
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
