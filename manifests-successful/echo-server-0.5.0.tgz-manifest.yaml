---
# Source: echo-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-echo-server
  labels:
    app.kubernetes.io/name: echo-server
    helm.sh/chart: echo-server-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: echo-server/templates/configmap.yaml
apiVersion:  v1
kind: ConfigMap
metadata: 
  name: my-release-echo-server
data: 
    PORT: "80"
    LOGS__IGNORE__PING: "false"
    ENABLE__HOST: "true"
    ENABLE__HTTP: "true"
    ENABLE__REQUEST: "true"
    ENABLE__COOKIES: "true"
    ENABLE__ENVIRONMENT: "true"
    ENABLE__FILE: "true"
    ENABLE__HEADER: "true"
---
# Source: echo-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-echo-server
  labels:
    app.kubernetes.io/name: echo-server
    helm.sh/chart: echo-server-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: echo-server
    app.kubernetes.io/instance: my-release
---
# Source: echo-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-echo-server
  labels:
    app.kubernetes.io/name: echo-server
    helm.sh/chart: echo-server-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: echo-server
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: 08ae3c9abb9c40ee78ab0f1d921126d99512574f0962f87a6e704099ed829e7f
      labels:
        app.kubernetes.io/name: echo-server
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-echo-server
      securityContext:
        {}
      containers:
        - name: echo-server
          securityContext:
            {}
          image: "ealen/echo-server:0.6.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          envFrom:
            - configMapRef:
                name: my-release-echo-server
          livenessProbe:
            httpGet:
                path: /ping
                httpHeaders:
                - name: x-echo-code
                  value: "200"
                port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1
          resources:
            limits:
              cpu: 50m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 128Mi
---
# Source: echo-server/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-echo-server-test-connection"
  labels:
    app.kubernetes.io/name: echo-server
    helm.sh/chart: echo-server-0.5.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.6.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['my-release-echo-server:80']
  restartPolicy: Never
