---
# Source: hazelcast-enterprise/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-hazelcast-enterprise
  labels:
    app.kubernetes.io/name: hazelcast-enterprise
    helm.sh/chart: hazelcast-enterprise-5.11.1
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
---
# Source: hazelcast-enterprise/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-hazelcast-enterprise-configuration
  labels:
    app.kubernetes.io/name: hazelcast-enterprise
    helm.sh/chart: hazelcast-enterprise-5.11.1
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
data:
  hazelcast.yaml: |-
    hazelcast:
      jet:
        enabled: ${hz.jet.enabled}
      network:
        join:
          kubernetes:
            enabled: true
            namespace: ${namespace}
            service-name: ${serviceName}
          multicast:
            enabled: false
        rest-api:
          enabled: true
      persistence:
        auto-remove-stale-data: true
        base-dir: /data/persistence
        data-load-timeout-seconds: 900
        enabled: ${hazelcast.persistence}
        validation-timeout-seconds: 1200
---
# Source: hazelcast-enterprise/templates/mancenter-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-hazelcast-enterprise-mancenter-configuration
  labels:
    app.kubernetes.io/name: hazelcast-enterprise-mancenter
    helm.sh/chart: hazelcast-enterprise-5.11.1
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
data:
  hazelcast-client.yaml: |-
    hazelcast-client:
      network:
        kubernetes:
          enabled: true
          namespace: ${namespace}
          service-name: ${serviceName}
---
# Source: hazelcast-enterprise/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-hazelcast-enterprise-hazelcast-enterprise-5.11.1.tgz
  labels:
    app.kubernetes.io/name: hazelcast-enterprise
    helm.sh/chart: hazelcast-enterprise-5.11.1
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - nodes
  - services
  verbs:
  - get
  - list
---
# Source: hazelcast-enterprise/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-hazelcast-enterprise-hazelcast-enterprise-5.11.1.tgz
  labels:
    app.kubernetes.io/name: hazelcast-enterprise
    helm.sh/chart: hazelcast-enterprise-5.11.1
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-hazelcast-enterprise-hazelcast-enterprise-5.11.1.tgz
subjects:
- kind: ServiceAccount
  name: my-release-hazelcast-enterprise
  namespace: hazelcast-enterprise-5.11.1.tgz
---
# Source: hazelcast-enterprise/templates/mancenter-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-hazelcast-enterprise-mancenter
  labels:
    app.kubernetes.io/name: hazelcast-enterprise-mancenter
    helm.sh/chart: hazelcast-enterprise-5.11.1
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: hazelcast-enterprise-mancenter
    app.kubernetes.io/instance: "my-release"
    role: mancenter
  ports:
  - protocol: TCP
    port: 8080
    targetPort: mancenter
    name: http
  - protocol: TCP
    port: 443
    targetPort: mancenter
    name: https
---
# Source: hazelcast-enterprise/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-hazelcast-enterprise
  labels:
    app.kubernetes.io/name: hazelcast-enterprise
    helm.sh/chart: hazelcast-enterprise-5.11.1
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: hazelcast-enterprise
    app.kubernetes.io/instance: "my-release"
    role: hazelcast
  ports:
  - protocol: TCP
    port: 5701
    targetPort: hazelcast
    name: hazelcast
    appProtocol: tcp
---
# Source: hazelcast-enterprise/templates/mancenter-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-hazelcast-enterprise-mancenter
  labels:
    app.kubernetes.io/name: hazelcast-enterprise-mancenter
    helm.sh/chart: hazelcast-enterprise-5.11.1
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
spec:
  serviceName: my-release-hazelcast-enterprise-mancenter
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hazelcast-enterprise-mancenter
      app.kubernetes.io/instance: "my-release"
      role: mancenter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hazelcast-enterprise-mancenter
        helm.sh/chart: hazelcast-enterprise-5.11.1
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: "Helm"
        role: mancenter
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      containers:
      - name: my-release-hazelcast-enterprise-mancenter
        image: "hazelcast/management-center:5.4.1"
        imagePullPolicy: "IfNotPresent"
        resources:
          null
        ports:
        - name: mancenter
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /config
        - name: mancenter-storage
          mountPath: /data
        env:
        - name: MC_INIT_CMD
          value: "./bin/mc-conf.sh cluster add --lenient=true -H /data -cc /config/hazelcast-client.yaml; "
        - name: JAVA_OPTS
          value: " -Dhazelcast.mc.healthCheck.enable=true -DserviceName=my-release-hazelcast-enterprise -Dnamespace=hazelcast-enterprise-5.11.1.tgz -Dhazelcast.mc.tls.enabled=false -Dmancenter.ssl=false "
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      serviceAccountName: my-release-hazelcast-enterprise
      automountServiceAccountToken: true
      volumes:
        - name: config
          configMap:
            name: my-release-hazelcast-enterprise-mancenter-configuration
        - name: mancenter-storage
      
  volumeClaimTemplates:
  - metadata:
      name: mancenter-storage
      labels:
        app.kubernetes.io/name: hazelcast-enterprise-mancenter
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: "Helm"
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "8Gi"
---
# Source: hazelcast-enterprise/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-hazelcast-enterprise
  labels:
    app.kubernetes.io/name: hazelcast-enterprise
    helm.sh/chart: hazelcast-enterprise-5.11.1
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
spec:
  serviceName: my-release-hazelcast-enterprise
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: hazelcast-enterprise
      app.kubernetes.io/instance: "my-release"
      role: hazelcast
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hazelcast-enterprise
        helm.sh/chart: hazelcast-enterprise-5.11.1
        app.kubernetes.io/instance: "my-release"
        app.kubernetes.io/managed-by: "Helm"
        role: hazelcast
      annotations:
        checksum/hazelcast-config: 5f707e2f3a929c0bae464d1f23b3be6fee5242f09e25cb63a70107c4e6d34145
    spec:
      terminationGracePeriodSeconds: 600
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      containers:
      - name: my-release-hazelcast-enterprise
        image: "hazelcast/hazelcast-enterprise:5.4.0"
        imagePullPolicy: "IfNotPresent"
        resources:
          null
        ports:
        - name: hazelcast
          containerPort: 5701
        livenessProbe:
          httpGet:
            path: /hazelcast/health/node-state
            port: 5701
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /hazelcast/health/ready
            port: 5701
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
        - name: hazelcast-storage
          mountPath: /data/hazelcast
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: JAVA_OPTS
          value: "-Dhazelcast.config=/data/hazelcast/hazelcast.yaml -DserviceName=my-release-hazelcast-enterprise -Dnamespace=hazelcast-enterprise-5.11.1.tgz -Dhazelcast.persistence=false  -Dhz.jet.enabled=true -Dhazelcast.shutdownhook.policy=GRACEFUL -Dhazelcast.shutdownhook.enabled=true -Dhazelcast.graceful.shutdown.max.wait=600  -Dhazelcast.cluster.version.auto.upgrade.enabled=true  "
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      serviceAccountName: my-release-hazelcast-enterprise
      automountServiceAccountToken: true
      volumes:
        - name: hazelcast-storage
          configMap:
            name: my-release-hazelcast-enterprise-configuration
---
# Source: hazelcast-enterprise/templates/tests/test-hazelcast.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-hazelcast-enterprise-test-lawzz"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded, hook-failed
  labels:
    app.kubernetes.io/name: hazelcast-enterprise
    helm.sh/chart: hazelcast-enterprise-5.11.1
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/component: "test"
    role: test
spec:
  containers:
  - name: "my-release-hazelcast-enterprise-test"
    image: "alpine:latest"
    command:
    - "sh"
    - "-c"
    - |
      set -ex
      # Install required test tools
      apk add -q curl
      # Get the number of Hazelcast members in the cluster
      CLUSTER_SIZE=$(curl my-release-hazelcast-enterprise:5701/hazelcast/health/cluster-size)
      # Test the correct number of Hazelcast members
      test ${CLUSTER_SIZE} -eq 3
    resources:
      null
  restartPolicy: Never
---
# Source: hazelcast-enterprise/templates/tests/test-management-center.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-hazelcast-enterprise-mancenter-test-pgac6"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded, hook-failed
  labels:
    app.kubernetes.io/name: hazelcast-enterprise
    helm.sh/chart: hazelcast-enterprise-5.11.1
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/component: "test"
    role: test
spec:
  containers:
  - name: "my-release-hazelcast-enterprise-mancenter-test"
    image: "alpine:latest"
    command:
    - "sh"
    - "-c"
    - |
      set -ex
      # Install required test tools
      apk add -q jq curl
      # Get the HTTP Response Code of the Health Check
      HEALTH_CHECK_HTTP_RESPONSE_CODE=$(curl --write-out %{http_code} --silent --output /dev/null my-release-hazelcast-enterprise-mancenter:8080/health)
      # Test the MC HTTP RESPONSE CODE
      test ${HEALTH_CHECK_HTTP_RESPONSE_CODE} -eq 200
      # Get the connected cluster count via /rest/clusters/dev/members endpoint
      CONNECTED_CLUSTER_SIZE=$(curl --silent my-release-hazelcast-enterprise-mancenter:8080/rest/clusters/dev/members | jq '. | length')
      # Test the correct number of Hazelcast members
      test ${CONNECTED_CLUSTER_SIZE} -eq 3
    resources:
      null
  restartPolicy: Never
