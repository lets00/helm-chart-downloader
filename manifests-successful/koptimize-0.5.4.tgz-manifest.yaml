---
# Source: koptimize/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-koptimize
  labels:
    helm.sh/chart: koptimize-0.5.4
    app.kubernetes.io/name: koptimize
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: koptimize/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-koptimize-controller
rules:
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - "mutatingwebhookconfigurations"
    verbs:
      - "get"
      - "create"
      - "update"
---
# Source: koptimize/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-koptimize-kube-scheduler
roleRef:
  kind: ClusterRole
  name: system:kube-scheduler
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: my-release-koptimize
    namespace: koptimize-0.5.4.tgz
---
# Source: koptimize/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-koptimize-volume-scheduler
roleRef:
  kind: ClusterRole
  name: system:volume-scheduler
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: my-release-koptimize
    namespace: koptimize-0.5.4.tgz
---
# Source: koptimize/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-koptimize-controller
roleRef:
  kind: ClusterRole
  name: my-release-koptimize-controller
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: my-release-koptimize
    namespace: koptimize-0.5.4.tgz
---
# Source: koptimize/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-koptimize-controller
rules:
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "get"
      - "create"
      - "update"
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - update
---
# Source: koptimize/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-koptimize-extension-apiserver-authentication-reader
roleRef:
  kind: Role
  name: extension-apiserver-authentication-reader
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: my-release-koptimize
    namespace: koptimize-0.5.4.tgz
---
# Source: koptimize/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-koptimize-controller
roleRef:
  kind: Role
  name: my-release-koptimize-controller
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: my-release-koptimize
    namespace: koptimize-0.5.4.tgz
---
# Source: koptimize/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-koptimize
  labels:
    helm.sh/chart: koptimize-0.5.4
    app.kubernetes.io/name: koptimize
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: http
      protocol: TCP
      name: http
    - port: 8080
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: koptimize
    app.kubernetes.io/instance: my-release
---
# Source: koptimize/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-koptimize
  labels:
    helm.sh/chart: koptimize-0.5.4
    app.kubernetes.io/name: koptimize
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.2.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: koptimize
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: koptimize
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-koptimize
      priorityClassName: system-cluster-critical
      securityContext:
        {}
      containers:
        - name: koptimize-controller
          securityContext:
            {}
          image: "ghcr.io/jaconi-io/koptimize:1.2.5"
          imagePullPolicy: IfNotPresent
          args:
            - controller
          ports:
            - name: http
              containerPort: 9443
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP              
          # TODO: add probes    
          # livenessProbe:
          #  httpGet:
          #     path: /
          #     port: metrics
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: metrics
          resources:
            {}
---
# Source: koptimize/templates/pre-delete-hook.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-koptimize-pre-delete
  labels:
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "my-release"
    app.kubernetes.io/version: 1.2.5
    helm.sh/chart: "koptimize-0.5.4"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: my-release-koptimize-pre-delete
      labels:
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "my-release"
        helm.sh/chart: "koptimize-0.5.4"
    spec:
      serviceAccountName: my-release-koptimize
      restartPolicy: Never
      containers:
      - name: clean-up-webhook
        image: alpine/k8s:1.27.3
        command: ["/bin/sh", "-c"]
        args: 
          - "kubectl delete mutatingwebhookconfiguration koptimize; kubectl delete secret koptimize-tls -n koptimize-0.5.4.tgz"
