---
# Source: sftpgo/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-sftpgo
  labels:
    helm.sh/chart: sftpgo-0.19.0
    app.kubernetes.io/name: sftpgo
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.5.4"
    app.kubernetes.io/managed-by: Helm
---
# Source: sftpgo/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-sftpgo
  labels:
    helm.sh/chart: sftpgo-0.19.0
    app.kubernetes.io/name: sftpgo
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.5.4"
    app.kubernetes.io/managed-by: Helm
data:
  sftpgo.json: |-
    {}
---
# Source: sftpgo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-sftpgo
  labels:
    helm.sh/chart: sftpgo-0.19.0
    app.kubernetes.io/name: sftpgo
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.5.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: sftp
      port: 22
      targetPort: sftp
      protocol: TCP
      appProtocol: sftp-ssh
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
      appProtocol: http
    - name: telemetry
      port: 10000
      targetPort: telemetry
      protocol: TCP
      appProtocol: http
  selector:
    app.kubernetes.io/name: sftpgo
    app.kubernetes.io/instance: my-release
---
# Source: sftpgo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-sftpgo
  labels:
    helm.sh/chart: sftpgo-0.19.0
    app.kubernetes.io/name: sftpgo
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.5.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sftpgo
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sftpgo
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-sftpgo
      hostNetwork: false
      securityContext:
        {}
      containers:
        - name: sftpgo
          securityContext:
            {}
          image: "ghcr.io/drakkan/sftpgo:v2.5.4"
          imagePullPolicy: IfNotPresent
          args:
            - sftpgo
            - serve
          env:
            - name: SFTPGO_SFTPD__BINDINGS__0__PORT
              value: "2022"
            - name: SFTPGO_SFTPD__BINDINGS__0__ADDRESS
              value: "0.0.0.0"
            - name: SFTPGO_HTTPD__BINDINGS__0__PORT
              value: "8080"
            - name: SFTPGO_HTTPD__BINDINGS__0__ADDRESS
              value: "0.0.0.0"
            - name: SFTPGO_TELEMETRY__BIND_PORT
              value: "10000"
            - name: SFTPGO_TELEMETRY__BIND_ADDRESS
              value: "0.0.0.0"
          ports:
            - name: sftp
              containerPort: 2022
              protocol: TCP
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: telemetry
              containerPort: 10000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: telemetry
          readinessProbe:
            httpGet:
              path: /healthz
              port: telemetry
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /etc/sftpgo/sftpgo.json
              subPath: sftpgo.json
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: my-release-sftpgo
