---
# Source: proxysql/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-proxysql
  labels:
    helm.sh/chart: proxysql-1.7.0
    app.kubernetes.io/name: proxysql
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: proxysql/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-proxysql
data:
  proxysql.cnf: |
    admin_variables=
    {
      admin_credentials="admin:admin"
      stats_credentials="sadmin:sadmin"
      mysql_ifaces="0.0.0.0:6032"
      restapi_enabled=true
      web_enabled=true
      web_port=443
    }
    mysql_variables=
    {
      interfaces="0.0.0.0:3306"
      connect_timeout_server=1500
      connect_timeout_server_max=10000
      connection_max_age_ms=0
      default_max_latency_ms=1500
      default_query_timeout=86400000
      long_query_time=5000
      max_allowed_packet=1073741824
      max_connections=2048
      ping_timeout_server=500
      query_cache_size_MB=256
      query_retries_on_failure=2
      server_version="5.7.34"
      shun_on_failures=5
      shun_recovery_time_sec=9
      stacksize=1048576
      threads=4
      threshold_query_length=524288
      threshold_resultset_size=4194304
      wait_timeout=28800000
      monitor_enabled=false
    }
    mysql_query_rules=
    (
      {
        rule_id=1
        active=1
        match_digest="^SELECT .* FOR UPDATE$"
        destination_hostgroup=1
        apply=1
      },
      {
        rule_id=2
        active=1
        match_digest="^SELECT"
        destination_hostgroup=2
        apply=1
      }
    )
---
# Source: proxysql/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-proxysql
  labels:
    helm.sh/chart: proxysql-1.7.0
    app.kubernetes.io/name: proxysql
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: mysql
      protocol: TCP
      name: mysql
  selector:
    app.kubernetes.io/name: proxysql
    app.kubernetes.io/instance: my-release
---
# Source: proxysql/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-proxysql
  labels:
    helm.sh/chart: proxysql-1.7.0
    app.kubernetes.io/name: proxysql
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: proxysql
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: proxysql
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-proxysql
      securityContext:
        {}
      containers:
        - name: proxysql
          securityContext:
            {}
          image: "proxysql/proxysql:2.3.0"
          imagePullPolicy: IfNotPresent
          command:
            - proxysql
            - "-f"
            - "--idle-threads"
            - "-D"
            - "/var/lib/proxysql"
            - "--reload"
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
            - name: proxysql
              containerPort: 6032
              protocol: TCP
            - name: metrics
              containerPort: 6070
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: proxysql
          readinessProbe:
            tcpSocket:
              port: proxysql
          volumeMounts:
            - name: proxysql-config
              mountPath: /etc/proxysql.cnf
              subPath: proxysql.cnf
              readOnly: true
          resources:
            {}
      volumes:
        - name: proxysql-config
          configMap:
            name: my-release-proxysql
