---
# Source: ibm-odm-dev/templates/network-policy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: my-release-odm-network-policy
  labels:
    app: ibm-odm-dev
    chart: ibm-odm-dev-22.1.0
    release: my-release
    heritage: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibm-odm-dev
    helm.sh/chart: ibm-odm-dev-22.1.0
spec:
  podSelector:
    matchLabels:
      run: ibm-odm-dev
  ingress:
  # Allow web access to the UI
  - ports:
    - port: 9060
---
# Source: ibm-odm-dev/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-ibm-odm-dev-service-account
  labels:
    app: my-release-ibm-odm-dev
    chart: "ibm-odm-dev-22.1.0"
    release: "my-release"
    heritage: "Helm"
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibm-odm-dev
    helm.sh/chart: ibm-odm-dev-22.1.0
imagePullSecrets:
  - name: sa-ibm-odm-dev-22.1.0.tgz
---
# Source: ibm-odm-dev/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-odm-secret
  labels:
    app: my-release-ibm-odm-dev
    chart: "ibm-odm-dev-22.1.0"
    release: "my-release"
    heritage: "Helm"
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibm-odm-dev
    helm.sh/chart: ibm-odm-dev-22.1.0
type: Opaque
data:
  users-password:  ""
---
# Source: ibm-odm-dev/templates/tests/config-map-for-test.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name:  my-release-odm-test-configmap
  labels:
    app: my-release-ibm-odm-dev
    chart: "ibm-odm-dev-22.1.0"
    release: "my-release"
    heritage: "Helm"
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibm-odm-dev
    helm.sh/chart: ibm-odm-dev-22.1.0
data:
  suite.sh: |-
    #!/bin/bash
    bash /tests/wait-for-url.sh $ODMSERVER:9060/DecisionRunner
    bash /tests/wait-for-url.sh $ODMSERVER:9060/DecisionService resAdmin resAdmin
    bash /tests/wait-for-url.sh $ODMSERVER:9060/decisioncenter/t
    bash /tests/wait-for-url.sh $ODMSERVER:9060/teamserver
    bash /tests/wait-for-url.sh $ODMSERVER:9060/res

  wait-for-url.sh: |-
    #!/bin/bash
    echo 'Testing url '$1 'availability.' $auth
    if [ $# -ge 3 ]
    then
      echo 'authentication is enabled.'
      auth='-u $2:$3'
    fi
    i=0
    until $(curl $auth --connect-timeout 180 --output /dev/null --silent --head --fail $1); do
        printf '.'
        i=$((i+1))
        if [ $i -gt 10 ]
        then
            echo $1 'NOT available\n'
            exit 1
        fi
        sleep 15
    done
    printf 'OK\n'
---
# Source: ibm-odm-dev/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-ibm-odm-dev-role
  labels:
    app: my-release-ibm-odm-dev
    chart: "ibm-odm-dev-22.1.0"
    release: "my-release"
    heritage: "Helm"
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibm-odm-dev
    helm.sh/chart: ibm-odm-dev-22.1.0
rules: []
---
# Source: ibm-odm-dev/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-ibm-odm-dev-role-binding
  labels:
    app: my-release-ibm-odm-dev
    chart: "ibm-odm-dev-22.1.0"
    release: "my-release"
    heritage: "Helm"
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibm-odm-dev
    helm.sh/chart: ibm-odm-dev-22.1.0
subjects:
- kind: ServiceAccount
  name: my-release-ibm-odm-dev-service-account
roleRef:
  kind: Role
  name: my-release-ibm-odm-dev-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: ibm-odm-dev/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-ibm-odm-dev
  labels:
    app: ibm-odm-dev
    chart: ibm-odm-dev-22.1.0
    release: my-release
    heritage: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibm-odm-dev
    helm.sh/chart: ibm-odm-dev-22.1.0
spec:
  type: NodePort
  ports:
    - port: 9060
      name: odm-port
      targetPort: 9060
      protocol: TCP
  selector:
    run: ibm-odm-dev
    app: ibm-odm-dev
    release: my-release
---
# Source: ibm-odm-dev/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ibm-odm-dev
  labels:
    app: ibm-odm-dev
    chart: ibm-odm-dev-22.1.0
    release: my-release
    heritage: Helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibm-odm-dev
    helm.sh/chart: ibm-odm-dev-22.1.0
spec:
  replicas: 1
  selector:
    matchLabels:
      release: my-release
      run: ibm-odm-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ibm-odm-dev
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ibm-odm-dev
        helm.sh/chart: ibm-odm-dev
        run: ibm-odm-dev
        app: ibm-odm-dev
        chart: ibm-odm-dev-22.1.0
        release: my-release
        heritage: Helm
      annotations:
        productName: "IBM Operational Decision Manager for Developers"
        productID: "7b1b6b93868c4468abbe83421c00f667"
        productVersion: 8.11.0.1
        productMetric: "FREE"
    spec:
      serviceAccountName: my-release-ibm-odm-dev-service-account
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          #If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
          #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
          #
          #If you specify multiple matchExpressions associated with nodeSelectorTerms,
          #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
          #
          #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      volumes:
      containers:
        - name: ibm-odm-dev
          image: icr.io/odm-k8s/odm:8.11.0.1_22.1.0-amd64
          securityContext:
            runAsUser: 1001
            runAsNonRoot: true
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          imagePullPolicy: IfNotPresent
          env:
          - name: LICENSE
            value: ""
          - name: DB_TYPE
            value: "h2"
          - name: SAMPLE
            value: "true"
          - name: DC_PERSISTENCE_LOCALE
            value: "en_US"
          - name: "RELEASE_NAME"
            value: my-release
          - name: USERS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-release-odm-secret
                key: users-password
          ports:
          - containerPort: 9060
    #
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /decisioncenter/healthCheck
              port: 9060
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 45
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /decisioncenter/healthCheck
              port: 9060
            periodSeconds: 10
            failureThreshold: 10
          startupProbe:
            httpGet:
              scheme: HTTP
              path: /decisioncenter/healthCheck
              port: 9060
            failureThreshold: 30
            periodSeconds: 10
          resources:
            limits:
              cpu: 2
              ephemeral-storage: 500Mi
              memory: 2048Mi
            requests:
              cpu: 1
              ephemeral-storage: 50Mi
              memory: 1024Mi
---
# Source: ibm-odm-dev/templates/tests/test-pattern.yaml
apiVersion: v1
kind: Pod
metadata:
  name:  my-release-odm-test
  labels:
    app: my-release-ibm-odm-dev
    chart: "ibm-odm-dev-22.1.0"
    release: "my-release"
    heritage: "Helm"
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ibm-odm-dev
    helm.sh/chart: ibm-odm-dev-22.1.0
  annotations:
    helm.sh/hook: test-success
spec:
  serviceAccountName: my-release-ibm-odm-dev-service-account
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 10000
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/arch
            operator: In
            values:
            - amd64
  containers:
  - name: my-release-odm-test
    image: icr.io/odm-k8s/odm:8.11.0.1_22.1.0-amd64
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
        ephemeral-storage: "2Mi"
      limits:
        cpu: 2
        memory: 4096Mi
        ephemeral-storage: "6Mi"
    securityContext:
      runAsUser: 1000
      runAsNonRoot: true
      privileged: false
      readOnlyRootFilesystem: false
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    env:
      - name: ODMSERVER
        value: my-release-ibm-odm-dev
    command: ["/bin/bash", "-c", "/tests/suite.sh"]
    volumeMounts:
      - name: tests
        mountPath: /tests
  volumes:
    - name: tests
      configMap:
        defaultMode: 0755
        name: my-release-odm-test-configmap
  restartPolicy: Never
