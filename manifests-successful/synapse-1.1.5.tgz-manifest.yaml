---
# Source: synapse/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-synapse
  labels:
    helm.sh/chart: synapse-1.1.5
    app.kubernetes.io/name: synapse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.53.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: synapse/templates/config-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-synapse-config
  labels:
    helm.sh/chart: synapse-1.1.5
    app.kubernetes.io/name: synapse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.53.0"
    app.kubernetes.io/managed-by: Helm
stringData:
  log.config: |-
    version: 1
    formatters:
      precise:
        format: '%(asctime)s - %(name)s - %(lineno)d - %(levelname)s - %(request)s - %(message)s'
    filters:
      context:
        (): synapse.logging.context.LoggingContextFilter
        request: ""
    handlers:
      console:
        class: logging.StreamHandler
        formatter: precise
        filters: [context]
    loggers:
      synapse.storage.SQL:
        # beware: increasing this to DEBUG will make synapse log sensitive
        # information such as access tokens.
        level: INFO
    root:
      level: INFO
      handlers: [console]
    disable_existing_loggers: false
  homeserver.yaml: |-
    ## Server ##
    server_name: "matrix.example.com"
    pid_file: /homeserver.pid
    web_client: False
    soft_file_limit: 0
    log_config: "/config/log.config"
    ## Ports ##
    listeners:
    - port: 8008
      tls: false
      bind_addresses: ['::']
      type: http
      x_forwarded: false
      resources:
      - names: [client]
        compress: true
      - names: [federation]
        compress: false
    ## Database ##
    database:
      name: "psycopg2"
      args:
        user: matrix
        password: randomlongpasswordpleasechangeme
        database: matrix
        host: some-postgres.example.com
        port: 5432
        cp_min: 5
        cp_max: 10
    ## Performance ##
    event_cache_size: "10K"
    ## Ratelimiting ##
    rc_messages_per_second: 0.2
    rc_message_burst_count: 10.0
    federation_rc_window_size: 1000
    federation_rc_sleep_limit: 10
    federation_rc_sleep_delay: 500
    federation_rc_reject_limit: 50
    federation_rc_concurrent: 3
    ## Files ##
    media_store_path: "/data/media"
    uploads_path: "/data/uploads"
    max_upload_size: "10M"
    max_image_pixels: "32M"
    dynamic_thumbnails: false
    # List of thumbnail to precalculate when an image is uploaded.
    thumbnail_sizes:
    - width: 32
      height: 32
      method: crop
    - width: 96
      height: 96
      method: crop
    - width: 320
      height: 240
      method: scale
    - width: 640
      height: 480
      method: scale
    - width: 800
      height: 600
      method: scale
    url_preview_enabled: False
    max_spider_size: "10M"
    ## Captcha ##
    recaptcha_public_key: "YOUR_PUBLIC_KEY"
    recaptcha_private_key: "YOUR_PRIVATE_KEY"
    enable_registration_captcha: False
    recaptcha_siteverify_api: "https://www.google.com/recaptcha/api/siteverify"
    ## Turn ##
    turn_uris: []
    turn_shared_secret: "YOUR_SHARED_SECRET"
    turn_user_lifetime: "1h"
    turn_allow_guests: True
    ## Registration ##
    enable_registration: false
    registration_shared_secret: "c681fdf2ca739edfe848e24ee93d0c51de7be836bd879c54bc57a007c96d3076"
    bcrypt_rounds: 12
    allow_guest_access: False
    enable_group_creation: true
    # The list of identity servers trusted to verify third party
    # identifiers by this server.
    #
    # Also defines the ID server which will be called when an account is
    # deactivated (one will be picked arbitrarily).
    trusted_third_party_id_servers:
    - matrix.org
    - vector.im
    ## Metrics ###
    enable_metrics: False
    report_stats: False
    ## API Configuration ##
    room_invite_state_types:
    - "m.room.join_rules"
    - "m.room.canonical_alias"
    - "m.room.avatar"
    - "m.room.name"
    app_service_config_files: []
    macaroon_secret_key: "469535da278b1a340112b7190217efb8ba846476c9abb20e166e7cc4eaf8f413"
    expire_access_token: False
    ## Signing Keys ##
    signing_key_path: "/secrets/signing.key"
    old_signing_keys: {}
    key_refresh_interval: "1d" # 1 Day.
    suppress_key_server_warning: True
    # The trusted servers to download signing keys from.
    perspectives:
      servers:
        "matrix.org":
          verify_keys:
            "ed25519:auto":
              key: "Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw"
    password_config:
      enabled: true
---
# Source: synapse/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-synapse
  labels:
    helm.sh/chart: synapse-1.1.5
    app.kubernetes.io/name: synapse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.53.0"
    app.kubernetes.io/managed-by: Helm
data:
  signing.key: ZWQyNTUxOSBhX3JOcEogS0lDTHRqOVovL2lWMEZPbVpjR2tKSzArRDY1WFNvcHlJYlBmN3dvVytGNAo=
---
# Source: synapse/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-synapse-headless
  labels:
    helm.sh/chart: synapse-1.1.5
    app.kubernetes.io/name: synapse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.53.0"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: synapse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: server
---
# Source: synapse/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-synapse
  labels:
    helm.sh/chart: synapse-1.1.5
    app.kubernetes.io/name: synapse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.53.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: synapse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: server
---
# Source: synapse/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-synapse
  labels:
    helm.sh/chart: synapse-1.1.5
    app.kubernetes.io/name: synapse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.53.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: server
  annotations:
    checksum/config: f1ab11b8905c4f7bae614d40e6d607a48f9e71edae7c8eaf123d619b04c27ef6
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  serviceName: my-release-synapse-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: synapse
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: synapse
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: server
    spec:
      serviceAccountName: my-release-synapse
      securityContext:
        {}
      containers:
        - name: synapse
          securityContext:
            allowPrivilegeEscalation: true
            runAsNonRoot: false
            runAsUser: 0
          image: "matrixdotorg/synapse:v1.53.0"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8008
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - mountPath: /data
            name: persistent-data
          - mountPath: /config
            name: config
          - mountPath: /secrets
            name: secrets
          env:
            - name: SYNAPSE_REPORT_STATS
              value: "no"
            - name: SYNAPSE_SERVER_NAME
              value: "matrix.example.com"
            - name: SYNAPSE_CONFIG_PATH
              value: "/config/homeserver.yaml"
            - name: UID
              value: "0"
            - name: GID
              value: "0"
            - name: SYNAPSE_CACHE_FACTOR
              value: "2.0"
          resources:
            {}
      volumes:
      - name: config
        secret:
          secretName: my-release-synapse-config
      - name: secrets
        secret:
          secretName: my-release-synapse
  volumeClaimTemplates:
  - metadata:
      name: persistent-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: "1Gi"
