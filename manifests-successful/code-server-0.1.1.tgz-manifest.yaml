---
# Source: code-server/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-code-server
  labels:
    helm.sh/chart: code-server-0.1.1
    app.kubernetes.io/name: code-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.10.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: code-server/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-code-server
  labels:
    helm.sh/chart: code-server-0.1.1
    app.kubernetes.io/name: code-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.10.1"
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: 
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "800Mi"
---
# Source: code-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-code-server
  labels:
    helm.sh/chart: code-server-0.1.1
    app.kubernetes.io/name: code-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.10.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8443
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: code-server
    app.kubernetes.io/instance: my-release
---
# Source: code-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-code-server
  labels:
    helm.sh/chart: code-server-0.1.1
    app.kubernetes.io/name: code-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.10.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: code-server
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: code-server
        app.kubernetes.io/instance: my-release
    spec:
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: my-release-code-server
      serviceAccountName: my-release-code-server
      securityContext:
        {}
      containers:
        - name: code-server
          securityContext:
            {}
          image: "linuxserver/code-server:4.10.1"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /config
              name: config
          ports:
            - name: http
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: "Europe/London"
          resources:
            {}
---
# Source: code-server/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-code-server-test-connection"
  labels:
    helm.sh/chart: code-server-0.1.1
    app.kubernetes.io/name: code-server
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.10.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-code-server:8443']
  restartPolicy: Never
