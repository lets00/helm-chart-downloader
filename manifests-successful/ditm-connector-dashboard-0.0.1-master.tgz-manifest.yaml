---
# Source: ditm-connector-dashboard/templates/connector-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-vault-secret
type: Opaque
data:
  vault.properties: |
    Yjc3ZmI2NjQtMzBkNy00MzUxLTljMTYtMjJmMWNlNzFkMmIwLWNvbnRhaW5lcj17ImVkY3R5cGUiOiJkYXRhc3BhY2Vjb25uZWN0b3I6YXp1cmV0b2tlbiIsInNhcyI6Ij9zdj0yMDIxLTA4LTA2JnNlPTIwMjItMTItMDdUMTQlM0ExMCUzQTMyWiZzcj1jJnNwPXcmc2lnPXg4dUpFcFZjU3NrMkptTmJqSHlUQkxlMDJEeTNhVWVCOFk0cGFnRGFzWkElM0QiLCJleHBpcmF0aW9uIjoxNjcwNDIyMjMyNTg5fQpjMGJhZGUzZi0zZjYyLTRkNDItOThhMS0zZGNiYTEwNGFmZTEtY29udGFpbmVyPXsiZWRjdHlwZSI6ImRhdGFzcGFjZWNvbm5lY3RvcjphenVyZXRva2VuIiwic2FzIjoiP3N2PTIwMjMtMDEtMDMmc2U9MjAyMy0xMC0xMlQxNiUzQTQ3JTNBMzhaJnNyPWMmc3A9dyZzaWc9TUhzb1ZmSE5yQ1V4TUlzWlNhVUhIVU1aM1lpUVRRTWklMkJTNGtSNTF2MkNjJTNEIiwiZXhwaXJhdGlvbiI6MTY5NzEyOTI1ODQxOH0K
  keystore.jks: |
    MIIFAwIBAzCCBK0GCSqGSIb3DQEHAaCCBJ4EggSaMIIEljCCAY0GCSqGSIb3DQEHAaCCAX4EggF6
    MIIBdjCCAXIGCyqGSIb3DQEMCgECoIIBDzCCAQswZgYJKoZIhvcNAQUNMFkwOAYJKoZIhvcNAQUM
    MCsEFPLCBmpZAQWPby/pw7T9XPsM1RdCAgInEAIBIDAMBggqhkiG9w0CCQUAMB0GCWCGSAFlAwQB
    KgQQF9XI5RjCjYlLORCEwr/HkgSBoDskLJ/k55K4foWSMFNDwQYrgtyQhUYQi4h3pptuUhTcn50K
    0qtbHCEKS3rKp+5v/otNXePn8K+2QXRMz9IX/XRkqDp5j5Fzea18qfHa49OcabF7hBjHGKThGe2Z
    pJBT7aN6Y3AjzZHsxIqbM01q7WUAo4ux01DfTndFZqEY+PxO3+oETj4IErfd3ma8Z1msEypM6bnt
    47AYPj/IrRmhev8xUDArBgkqhkiG9w0BCRQxHh4cAGMAbwBuAG4AZQBjAHQAbwByAC0AdABlAHMA
    dDAhBgkqhkiG9w0BCRUxFAQSVGltZSAxNjk4NzAzNjkyNjM4MIIDAQYJKoZIhvcNAQcGoIIC8jCC
    Au4CAQAwggLnBgkqhkiG9w0BBwEwZgYJKoZIhvcNAQUNMFkwOAYJKoZIhvcNAQUMMCsEFEPGE7gP
    bFisnufdH9+HlCnZB6OEAgInEAIBIDAMBggqhkiG9w0CCQUAMB0GCWCGSAFlAwQBKgQQ3PZejPPN
    A9XaPhGh+71mx4CCAnD+Ku9ZYkzND1xQT9tzP6/VUNgJOnfdKX6LNPte3MlkiW7ZNYREoDpU078U
    ovB2E9/1pK9bQpBhiZzOSdaSW+tBWdEw4DUTn3hM4ni1c48v40d1xm/d507r2RcD48oLdL4/wpLm
    Yo16AHdwAXQ0uJyr6gMnwPxY/9oGDFAV67302TbmnyuL0Kmfhr1GSPlUmLLcXV5yXFNh5MhZHTiU
    RsxnoRWpOzny2pGYbP9coP6JlphWa/UAT694MjRumcS0nIJVPr4W2YXzlURVP8LLp22B35IebaUg
    hbPIh1ljCCVCtxMryw/+nrw7Z48ysxJm0xXW14ExPoRYScQFDSDeFp/57gPW0f7FF4bo08xY5ikf
    FwPF1ZM3GDlFlxDRpXC47dxBkBPJ7CuUcRW9/MvYfk+46Pptd2ForzHmBVf3lQhT6jt0x7gKvNTT
    A6fwODW+kM/EHTNS7xWO1qmQYrZXFZ9QK6bvSBBpyLH/7LwlqbOxO5F3RxzoRw6ie67gDlTMPww/
    6EgRKKulTK9fAQD+3yzMIMxjBksDlwOcKDUgDID36TG7Mi6Yeq8jIqfqeLeJsb52kjDeRrW+TOWy
    mEUpJYcnbOMdHFNg4UCEn2yatgmae44ph6K2BgSDO/ytEqPtBrxi45j1XIMCqhty+YgZeNpMdwEy
    D7p+CMwenW9KIrBi912LuQRs4SoK8mQFvIU28cp/O1Y7gPmpWVaFUINJJgrGdJ8ai01tgMS2J2VG
    eawKe2OsurKI/bf+p/KUygj5y6Yne0QWili9c67IOplQXxB6mTWePsr8tfht7cmUl+tjgXOwo93R
    SYJn6NaJcPgXtrwwTTAxMA0GCWCGSAFlAwQCAQUABCCRseGAC3TFsHULbAursy+RIJDxulM1tVnU
    Ied5FOE8hQQUZix7qdcOhmvzioRN23MCfWtHVn4CAicQ
---
# Source: ditm-connector-dashboard/templates/dashboard-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-secret
type: Opaque
data:
  app.config.json: "eyJhcGlLZXkiOiJZYU81VU1rWWcydzU4NkNnMDE3aXk2UTdBNi1FeXVPdCIsImJyYW5kIjoidG5vIiwiZGF0YU1hbmFnZW1lbnRBcGlVcmwiOiJodHRwczovL21hbmFnZW1lbnQuY29ubmVjdG9yLmVkYy5kaXRtLm5sL2FwaS9tYW5hZ2VtZW50IiwiZG9tYWluIjoiY29ubmVjdG9yLmVkYy5kaXRtLm5sIiwibmFtZSI6InRlc3QiLCJyZWdpb24iOiJldSIsInN0b3JhZ2VBY2NvdW50IjoiZGl0bWNvbXBhbnkxaW5ib3giLCJzdG9yYWdlRXhwbG9yZXJMaW5rVGVtcGxhdGUiOiItLSIsInRoZW1lIjoidGhlbWUtMyJ9"
---
# Source: ditm-connector-dashboard/templates/dashboard-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-did
data:
  did.json: |
    {
      "@context": [
        "https://www.w3.org/ns/did/v1",
        {
          "@base": "did:web:company1.edc.ditm.nl"
        }
      ],
      "authentication": [
        "#identity-key-1"
      ],
      "id": "did:web:company1.edc.ditm.nl",
      "service": [
        {
          "id": "#identity-hub-url",
          "type": "IdentityHub",
          "serviceEndpoint": "https://identity.company1.edc.ditm.nl/api/identity/identity-hub"
        },
        {
          "id": "#dsp-url",
          "type": "DSPMessaging",
          "serviceEndpoint": "https://dsp.company1.edc.ditm.nl/api/dsp"
        }
      ],
      "verificationMethod": [
        {
          "controller": "",
          "id": "#identity-key-1",
          "publicKeyJwk": {
            "kty": "EC",
            "kid": "Lw4eaPZ9fs8bi9THTJXmHIlRQkcK2NA85OlIR8IWpoI",
            "crv": "P-256",
            "x": "v_SEQVjcdt6pjOLFcwRCaCBg6s7DcP-a7NzGMwxcK9g",
            "y": "GN5MwdPVPReI5JY_Sz7N827FUgWNyv9OZrZBpbpXq9o"
          },
          "type": "JsonWebKey2020"
        }
      ]
    }
---
# Source: ditm-connector-dashboard/templates/connector-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-vault-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: default
  resources:
    requests:
      storage: 1Gi
---
# Source: ditm-connector-dashboard/templates/connector-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: my-release
  name: my-release-service
spec:
  # identity {alias='identity', port=7171, path='/api/v1/identity'},
  # api {alias='default', port=8181, path='/api'},
  # ids {alias='ids', port=8282, path='/api/v1/ids'}
  # data {alias='management', port=9191, path='/api/v1/data'},
  ports:
    - name: "http-identity"
      port: 7171
      targetPort: 7171
    - name: "http-api"
      port: 8181
      targetPort: 8181
    - name: "http-dsp"
      port: 8282
      targetPort: 8282
    - name: "http-control"
      port: 8383
      targetPort: 8383
    - name: "http-management"
      port: 9191
      targetPort: 9191
  selector:
    app: my-release
status:
  loadBalancer: {}
---
# Source: ditm-connector-dashboard/templates/dashboard-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: my-release
  name: my-release-dashboard-service
spec:
  ports:
    - name: "http"
      port: 80
      targetPort: 80
  selector:
    app: my-release-dashboard
status:
  loadBalancer: {}
---
# Source: ditm-connector-dashboard/templates/connector-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-release
  name: my-release
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-release
  strategy: {}
  template:
    metadata:
      labels:
        app: my-release
    spec:
      # Use an init container to take contents of vault properties configmap and store in actual vault file.
      initContainers:
        - name: my-release-init-config
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - cp /config/vault.properties /resources/vault/vault.properties && cp /config/keystore.jks /resources/vault/keystore.jks
          volumeMounts:
          - name: my-release-vault-config
            readOnly: true
            mountPath: /config
          - name: my-release-pvc-volume
            mountPath: /resources/vault
      containers:
        - image: docker.nexus.dataspac.es/ditm/edc/components/ditm-connector:master
          name: my-release
          env:
            - name: EDC_API_AUTH_KEY
              value: "YaO5UMkYg2w586Cg017iy6Q7A6-EyuOt"
            - name: EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS
              value: "30"
            - name: EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS
              value: "120"
            - name: EDC_CONNECTOR_NAME
              value: "connector-test"
            - name: EDC_PARTICIPANT_ID
              value: "did:web:connector.edc.ditm.nl"
            - name: EDC_IDENTITY_DID_URL
              value: "did:web:connector.edc.ditm.nl"
            - name: EDC_VAULT
              value: /resources/vault/vault.properties
            - name: EDC_KEYSTORE
              value: /resources/vault/keystore.jks
            - name: EDC_KEYSTORE_PASSWORD
              value: test123
            - name: EDC_WEB_REST_CORS_ENABLED
              value: "true"
            - name: EDC_WEB_REST_CORS_HEADERS
              value: "origin,content-type,accept,authorization,x-api-key"
            - name: EDC_IAM_DID_WEB_USE_HTTPS
              value: "true"
            - name: EDC_DSP_CALLBACK_ADDRESS
              value: "https://dsp.connector.edc.ditm.nl/api/dsp"
            - name: REGISTRATION_SERVICE_API_URL
              value: "https://registration.edc.ditm.nl/api/authority"
            - name: EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT
              value: "https://control.connector.edc.ditm.nl/api/control/token"
            - name: JVM_ARGS
              value: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
          ports:
            - containerPort: 7171
            - containerPort: 8181
            - containerPort: 8282
            - containerPort: 8383
            - containerPort: 9191
          volumeMounts:
            - name: my-release-pvc-volume
              mountPath: /resources/vault
          imagePullPolicy: Always
      restartPolicy: Always
      volumes:
      - name: my-release-pvc-volume
        persistentVolumeClaim:
          claimName: my-release-vault-pvc
      - name: my-release-vault-config
        secret:
          secretName: my-release-vault-secret
---
# Source: ditm-connector-dashboard/templates/dashboard-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-release-dashboard
  name: my-release-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-release-dashboard
  strategy: {}
  template:
    metadata:
      labels:
        app: my-release-dashboard
    spec:
      containers:
        - image: docker.nexus.dataspac.es/edc/playground/data-dashboard:v0.3.0-tno
          name: my-release-dashboard
          ports:
            - containerPort: 80
          imagePullPolicy: Always
          resources: {}
          volumeMounts:
          - name: my-release-assets-volume
            mountPath: "/usr/share/nginx/html/assets/config"
            readOnly: true
          - name: my-release-did-volume
            mountPath: "/usr/share/nginx/html/.well-known"
            readOnly: true
      restartPolicy: Always
      volumes:
      - name: my-release-assets-volume
        secret:
          secretName: my-release-secret
          optional: false
      - name: my-release-did-volume
        configMap:
          name: my-release-did
          optional: false
status: {}
---
# Source: ditm-connector-dashboard/templates/connector-ingress-api.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-ingress-api
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: ditm-connector-dashboard-0.0.1-master.tgz
    nginx.ingress.kubernetes.io/whitelist-source-range: "134.203.0.0/16,134.221.0.0/16,139.63.0.0/16"
spec:
  tls:
    - hosts:
        - api.connector.edc.ditm.nl
      secretName: api.connector.edc.ditm.nl-tls
  rules:
    - host: api.connector.edc.ditm.nl
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-service
                port:
                  name: "http-api"
---
# Source: ditm-connector-dashboard/templates/connector-ingress-control.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-ingress-control
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: ditm-connector-dashboard-0.0.1-master.tgz
    nginx.ingress.kubernetes.io/whitelist-source-range: "134.203.0.0/16,134.221.0.0/16,139.63.0.0/16"
spec:
  tls:
    - hosts:
        - control.connector.edc.ditm.nl
      secretName: control.connector.edc.ditm.nl-tls
  rules:
    - host: control.connector.edc.ditm.nl
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-service
                port:
                  name: "http-control"
---
# Source: ditm-connector-dashboard/templates/connector-ingress-dsp.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-ingress-dsp
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: ditm-connector-dashboard-0.0.1-master.tgz
spec:
  tls:
    - hosts:
        - dsp.connector.edc.ditm.nl
      secretName: dsp.connector.edc.ditm.nl-tls
  rules:
    - host: dsp.connector.edc.ditm.nl
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-service
                port:
                  name: "http-dsp"
---
# Source: ditm-connector-dashboard/templates/connector-ingress-identity.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-ingress-identity
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: ditm-connector-dashboard-0.0.1-master.tgz
spec:
  tls:
    - hosts:
        - identity.connector.edc.ditm.nl
      secretName: identity.connector.edc.ditm.nl-tls
  rules:
    - host: identity.connector.edc.ditm.nl
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-service
                port:
                  name: "http-identity"
---
# Source: ditm-connector-dashboard/templates/connector-ingress-management.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-ingress-management
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: ditm-connector-dashboard-0.0.1-master.tgz
    nginx.ingress.kubernetes.io/whitelist-source-range: "134.203.0.0/16,134.221.0.0/16,139.63.0.0/16"
spec:
  tls:
    - hosts:
        - management.connector.edc.ditm.nl
      secretName: management.connector.edc.ditm.nl-tls
  rules:
    - host: management.connector.edc.ditm.nl
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-service
                port:
                  name: "http-management"
---
# Source: ditm-connector-dashboard/templates/dashboard-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-dashboard-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    meta.helm.sh/release-name: my-release-dashboard
    meta.helm.sh/release-namespace: ditm-connector-dashboard-0.0.1-master.tgz
spec:
  tls:
    - hosts:
        - connector.edc.ditm.nl
      secretName: connector.edc.ditm.nl-tls
  rules:
    - host: connector.edc.ditm.nl
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-dashboard-service
                port:
                  number: 80
