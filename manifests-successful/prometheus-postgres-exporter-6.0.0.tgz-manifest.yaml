---
# Source: prometheus-postgres-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: my-release-prometheus-postgres-exporter
  labels:
    chart: prometheus-postgres-exporter-6.0.0
    app: prometheus-postgres-exporter
    release: my-release
    heritage: Helm
---
# Source: prometheus-postgres-exporter/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-prometheus-postgres-exporter
  labels:
    chart: prometheus-postgres-exporter-6.0.0
    app: prometheus-postgres-exporter
    release: my-release
    heritage: Helm
type: Opaque
data:
  data_source_password: c29tZXBhc3d3b3Jk
---
# Source: prometheus-postgres-exporter/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-prometheus-postgres-exporter
  labels:
    chart: prometheus-postgres-exporter-6.0.0
    app: prometheus-postgres-exporter
    release: my-release
    heritage: Helm
---
# Source: prometheus-postgres-exporter/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-prometheus-postgres-exporter
  labels:
    chart: prometheus-postgres-exporter-6.0.0
    app: prometheus-postgres-exporter
    release: my-release
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-prometheus-postgres-exporter
subjects:
- kind: ServiceAccount
  name: my-release-prometheus-postgres-exporter
---
# Source: prometheus-postgres-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-prometheus-postgres-exporter
  labels:
    chart: prometheus-postgres-exporter-6.0.0
    app: prometheus-postgres-exporter
    release: my-release
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 9187
      protocol: TCP
      name: http
  selector:
    app: prometheus-postgres-exporter
    release: my-release
---
# Source: prometheus-postgres-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-prometheus-postgres-exporter
  labels:
    chart: prometheus-postgres-exporter-6.0.0
    app: prometheus-postgres-exporter
    release: my-release
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-postgres-exporter
      release: my-release
  template:
    metadata:
      labels:
        app: prometheus-postgres-exporter
        release: my-release
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      automountServiceAccountToken: false
      serviceAccountName: my-release-prometheus-postgres-exporter
      securityContext:
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: prometheus-postgres-exporter
          args:
          - "--config.file=/etc/postgres_exporter.yml"
          - "--web.listen-address=:9187"
          env:
          - name: DATA_SOURCE_URI
            value: ":5432/?sslmode=disable"
          - name: DATA_SOURCE_USER
            value: postgres
          - name: DATA_SOURCE_PASS
            valueFrom:
              secretKeyRef:
                name: my-release-prometheus-postgres-exporter
                key: data_source_password
          image: "quay.io/prometheuscommunity/postgres-exporter:v0.15.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9187
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 0
            timeoutSeconds: 3
            httpGet:
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: 0
            timeoutSeconds: 1
            httpGet:
              path: /
              port: http
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          volumeMounts:
      volumes:
