---
# Source: feed/charts/ghost/templates/serviceaccount-test.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ghost-test
---
# Source: feed/charts/ghost/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ghost
  labels:
    helm.sh/chart: ghost-0.2.0
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
---
# Source: feed/charts/musig/templates/serviceaccount-test.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: musig-test
---
# Source: feed/charts/musig/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: musig
  labels:
    helm.sh/chart: musig-0.2.0
    app.kubernetes.io/name: musig
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
---
# Source: feed/charts/tor-proxy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tor-proxy
  labels:
    helm.sh/chart: tor-proxy-0.0.8
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
---
# Source: feed/charts/tor-proxy/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: tor-proxy-scripts
data:
  entrypoint.sh: |
    #!/bin/sh
    set -e

    mkdir -p "$(dirname $TOR_CONFIG)"

    mkdir -p "$TOR_DATA"
    chown -R tor "$TOR_DATA"
    chmod 700 "$TOR_DATA"

    mkdir -p "/var/lib/tor/hidden_services"
    chown -R tor /var/lib/tor/hidden_services
    chmod 700 /var/lib/tor/hidden_services

    cat <<-EOF > "$TOR_CONFIG"
    ${TOR_EXTRA_ARGS}
    EOF

    if ! [ -z "${TOR_ADDITIONAL_CONFIG}" ]; then
        echo "%include $TOR_ADDITIONAL_CONFIG" >> "$TOR_CONFIG"
        echo "" >> "$TOR_ADDITIONAL_CONFIG"
        echo "Added '%include $TOR_ADDITIONAL_CONFIG' to tor config"
    fi

    chown -R tor "$(dirname $TOR_CONFIG)"

    if ! [ -z "${TOR_PASSWORD}" ]; then
        TOR_PASSWORD_HASH="$(gosu tor tor --hash-password "$TOR_PASSWORD")"
        echo "HashedControlPassword $TOR_PASSWORD_HASH" >> "$TOR_CONFIG"
        echo "'HashedControlPassword $TOR_PASSWORD_HASH' added to tor config"
    fi

    exec gosu tor "$@"
---
# Source: feed/charts/ghost/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ghost-test
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list"]
---
# Source: feed/charts/musig/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: musig-test
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list"]
---
# Source: feed/charts/ghost/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ghost-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ghost-test
subjects:
- kind: ServiceAccount
  name: ghost-test
---
# Source: feed/charts/musig/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: musig-test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: musig-test
subjects:
- kind: ServiceAccount
  name: musig-test
---
# Source: feed/charts/ghost/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ghost
  annotations:
  labels:
    helm.sh/chart: ghost-0.2.0
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: libp2p
  selector:
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: my-release
---
# Source: feed/charts/musig/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: musig
  annotations:
  labels:
    helm.sh/chart: musig-0.2.0
    app.kubernetes.io/name: musig
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 8001
      targetPort: 8001
      protocol: TCP
      name: libp2p
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: webapi
  selector:
    app.kubernetes.io/name: musig
    app.kubernetes.io/instance: my-release
---
# Source: feed/charts/tor-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tor-proxy
  labels:
    helm.sh/chart: tor-proxy-0.0.8
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9050
      targetPort: 9050
      protocol: TCP
      name: socks
  selector:
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: my-release
---
# Source: feed/charts/ghost/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost
  labels:
    helm.sh/chart: ghost-0.2.0
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ghost
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ghost
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: ghost
      securityContext:
        {}
      containers:
        - name: ghost
          securityContext:
            {}
          image: "ghcr.io/chronicleprotocol/ghost:0.29.2"
          args:
            - "run"
            - "-v"
            - "warning"
            - "--log.format"
            - "text"
          imagePullPolicy: Always
          ports:
            - name: libp2p
              containerPort: 8000
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          env:
            - name: CFG_LIBP2P_LISTEN_ADDRS
              value: "/ip4/0.0.0.0/tcp/8000"
            - name: CFG_LIBP2P_EXTERNAL_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: CFG_ITEM_SEPARATOR
              value:  ","
            - name: CFG_ETH_CHAIN_ID
              value: "1"
            - name: WATCHDOG_CONFIG_REGISTRY
              value: "0x94Fea534aef6df5cF66C2DAE5CE0A05d10C068F3"
            - name: WATCHDOG_INTERVAL
              value: "900s"            
            - name: CFG_WEBAPI_ENABLE
              value: "1"
            - name: CFG_WEBAPI_LISTEN_ADDR
              value: ""
            - name: CFG_WEBAPI_SOCKS5_PROXY_ADDR
              value: "tor-proxy:9050"
          resources:
            {}
---
# Source: feed/charts/musig/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: musig
  labels:
    helm.sh/chart: musig-0.2.0
    app.kubernetes.io/name: musig
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: musig
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: musig
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: musig
      securityContext:
        {}
      containers:
        - name: musig
          securityContext:
            {}
          image: "ghcr.io/chronicleprotocol/adria:0.29.2"
          args:
            - "run"
            - "-v"
            - "warning"
            - "--log.format"
            - "text"
          imagePullPolicy: Always
          ports:
            - name: libp2p
              containerPort: 8001
              protocol: TCP
            - name: webapi
              containerPort: 8080
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          env:
            - name: CFG_LIBP2P_LISTEN_ADDRS
              value: "/ip4/0.0.0.0/tcp/8001"
            - name: CFG_LIBP2P_EXTERNAL_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: CFG_ITEM_SEPARATOR
              value:  ","
            - name: CFG_ETH_CHAIN_ID
              value: "1"
            - name: WATCHDOG_CONFIG_REGISTRY
              value: "0x94Fea534aef6df5cF66C2DAE5CE0A05d10C068F3"
            - name: WATCHDOG_INTERVAL
              value: "900s"            
            - name: CFG_WEBAPI_ENABLE
              value: "1"
            - name: CFG_WEBAPI_LISTEN_ADDR
              value: ":8080"
            - name: CFG_WEBAPI_SOCKS5_PROXY_ADDR
              value: "tor-proxy:9050"
          resources:
            {}
---
# Source: feed/charts/tor-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tor-proxy
  labels:
    helm.sh/chart: tor-proxy-0.0.8
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tor-proxy
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tor-proxy
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: tor-proxy
      securityContext:
        {}
      containers:
        - name: tor-proxy
          securityContext:
            {}
          image: "btcpayserver/tor:0.4.7.10"
          imagePullPolicy: IfNotPresent
          # command: ["sleep", "3600"]
          ports:
            - name: socks
              containerPort: 9050
              protocol: TCP
          # livenessProbe:
          #   exec:
          #     command:
          #     - /bin/sh
          #     - -c
          #     - "echo authenticate '""' | nc 127.0.0.1  && echo signal NEWNYM | nc 127.0.0.1 "
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          # readinessProbe:
          #   exec:
          #     command:
          #     - /bin/sh
          #     - -c
          #     - "echo authenticate '""' | nc 127.0.0.1 "
          resources:
            {}
          env:            
            - name: TOR_EXTRA_ARGS
              value: "SocksPort 0.0.0.0:9050\nHiddenServiceDir /var/lib/tor/hidden_services\nHiddenServicePort 8888 musig:8080\n"
          volumeMounts:
            - name: tor-hidden-services
              mountPath: /var/lib/tor/hidden_services
            - name: scripts-volume
              mountPath: entrypoint.sh
              subPath: entrypoint.sh

      volumes:
        - name: scripts-volume
          configMap:
            name: tor-proxy-scripts
            items:
            - key: entrypoint.sh
              path: entrypoint.sh
              mode: 0755
        - name: tor-hidden-services
          emptyDir: {}
---
# Source: feed/charts/ghost/templates/tests/test-logs.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "ghost-test-logs"
  labels:
    helm.sh/chart: ghost-0.2.0
    app.kubernetes.io/name: ghost
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  serviceAccountName: ghost-test
  containers:
    - name: test-ghost-logs
      image: bitnami/kubectl:latest
      command:
        - /bin/sh
        - -c
        - |
          echo 'Running tests';
          kubectl logs --namespace feed-0.2.8.tgz $(kubectl get pods --namespace feed-0.2.8.tgz -l 'app.kubernetes.io/instance=my-release,app.kubernetes.io/name=ghost' -o jsonpath='{.items[0].metadata.name}') | grep 'Starting tag=LIBP2P'
  restartPolicy: Never
---
# Source: feed/charts/musig/templates/tests/test-logs.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "musig-test-logs"
  labels:
    helm.sh/chart: musig-0.2.0
    app.kubernetes.io/name: musig
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.29"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  serviceAccountName: musig-test
  containers:
    - name: test-musig-logs
      image: bitnami/kubectl:latest
      command:
        - /bin/sh
        - -c
        - |
          echo 'Running tests';
          kubectl logs --namespace feed-0.2.8.tgz $(kubectl get pods --namespace feed-0.2.8.tgz -l 'app.kubernetes.io/instance=my-release,app.kubernetes.io/name=musig' -o jsonpath='{.items[0].metadata.name}') | grep 'msg="Connected to a peer"'
  restartPolicy: Never
---
# Source: feed/charts/tor-proxy/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "tor-proxy-test-connection"
  labels:
    helm.sh/chart: tor-proxy-0.0.8
    app.kubernetes.io/name: tor-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.7.10"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: nc-socks
      image: busybox
      command: ['nc']
      args:
        - '-zv'
        - '-v'
        - 'tor-proxy'
        - '9050'
  restartPolicy: Never
