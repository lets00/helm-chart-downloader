---
# Source: furan2/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: furan
  labels:
    app.kubernetes.io/name: furan2
    helm.sh/chart: furan2-0.2.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 4000
      targetPort: 4000
      protocol: TCP
      name: furan
  selector:
    app: furan2
    release: my-release
---
# Source: furan2/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-furan2
  labels:
    app.kubernetes.io/name: furan2
    helm.sh/chart: furan2-0.2.0
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: furan2
      helm.sh/chart: furan2-0.2.0
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/version: "2.0.0"
      app.kubernetes.io/managed-by: Helm
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: furan2
        release: my-release
        app.kubernetes.io/name: furan2
        helm.sh/chart: furan2-0.2.0
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "2.0.0"
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      serviceAccountName: "furan2"
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "2"
        - name: attempts
          value: "5"
        - name: timeout
          value: "1"
      
      containers:
        - name: 'furan'
          image: "dollarshaveclub/furan2:master"
          imagePullPolicy: IfNotPresent
          command:
            - "/usr/local/bin/furan"
          args:
            # all secrets-related args *must* come before the "server" command
            # these will be copied and injected into build job definitions
            - "--secrets-backend"
            - "vault"
            
            
            - "--vault-addr"
            - "http://vault:8200"
            
            - "--vault-token-auth=true"
            - "--vault-token"
            - "root"
            
            
            
            - "--aws-region" # S3 and ECR
            - "us-west-2"
            
            - "--enable-apm=true"
            - "--enable-profiling=true"
            
            - "--apm-addr"
            - "datadog:8126"
            - "--apm-svc-name"
            - "furan2"
            - "--apm-env-name"
            - "development"
            
            # === End auto-injected job flags ===
            - 'server'
            - '--print-root-api-key'
            - "false"
            - '--root-api-key-secret-name'
            - ""
            - '--grpc-addr'
            - '0.0.0.0:4000'
            
            
            
          ports:
            - containerPort: 4000
              protocol: TCP
          env:
            
            # downward API values required for job runner
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            
          volumeMounts:
            
          livenessProbe:
            initialDelaySeconds: 100
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            tcpSocket:
              port: 4000
          readinessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            tcpSocket:
              port: 4000
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
