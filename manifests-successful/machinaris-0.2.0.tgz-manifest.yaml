---
# Source: machinaris/templates/worker.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: machinaris-my-release-chia
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "50Gi"
  storageClassName: ""
---
# Source: machinaris/templates/controller_services.yaml
apiVersion: v1
kind: Service
metadata:
  name: machinaris-my-release-controller
spec:
  type: ClusterIP
  ports:
  - port: 8927
    targetPort: api
    protocol: TCP
    name: api
  selector:
    app.kubernetes.io/name: machinaris-my-release-chia
    app.kubernetes.io/instance: chia
---
# Source: machinaris/templates/controller_services.yaml
apiVersion: v1
kind: Service
metadata:
  name: machinaris-my-release-http
spec:
  type: ClusterIP
  ports:
  - port: 8926
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: machinaris-my-release-chia
    app.kubernetes.io/instance: chia
---
# Source: machinaris/templates/worker.yaml
apiVersion: v1
kind: Service
metadata:
  name: machinaris-my-release-chia-api
spec:
  type: ClusterIP
  ports:
  - port: 8927
    targetPort: api
    protocol: TCP
    name: api
  selector:
    app.kubernetes.io/name: machinaris-my-release-chia
    app.kubernetes.io/instance: chia
---
# Source: machinaris/templates/worker.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: machinaris-my-release-chia
  labels:
    app.kubernetes.io/name: machinaris-my-release-chia
    app.kubernetes.io/instance: chia
spec:
  replicas: 1
  revisionHistoryLimit: 3
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app.kubernetes.io/name: machinaris-my-release-chia
      app.kubernetes.io/instance: chia
  serviceName: machinaris-my-release-chia
  template:
    metadata:
      labels:
        app.kubernetes.io/name: machinaris-my-release-chia
        app.kubernetes.io/instance: chia
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: machinaris-my-release-chia
          image: ghcr.io/guydavis/machinaris:test
          imagePullPolicy: Always
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - cp /mnemonic/mnemonic.txt /root/.chia/mnemonic.txt
          env:
            - name: blockchains
              value: chia
            - name: mode
              value: fullnode
            - name: controller_api_port
              value: "8927"
            - name: controller_host
              value: localhost
            - name: worker_address
              value: 127.0.0.1
            - name: worker_api_port
              value: "8927"
            - name: plots_dir
              value: ""
            - name: TZ
              value: UTC
          volumeMounts:
            - name: config
              mountPath: /root/.chia
            
            
            - name: mnemonic
              mountPath: /mnemonic
          livenessProbe:
            httpGet:
              port: 8927
              path: /ping
            initialDelaySeconds: 30
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              port: 8927
              path: /ping
            initialDelaySeconds: 30
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            httpGet:
              port: 8927
              path: /ping
            initialDelaySeconds: 30
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
          ports:
          - containerPort: 8927
            name: api
          - containerPort: 8926
            name: http
          - containerPort: 8444
            hostPort: 8444
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: machinaris-my-release-chia
        
        
        - name: mnemonic
          secret:
            secretName: mnemonic
            items:
              - key: mnemonic.txt
                path: mnemonic.txt
