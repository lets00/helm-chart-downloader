---
# Source: dynamodb/templates/serviceaccount.yaml
# Copyright 2020 Keyporttech Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for dynamodb-helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-dynamodb
  labels:
    helm.sh/chart: dynamodb-0.1.27
    app.kubernetes.io/name: dynamodb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: dynamodb/templates/service.yaml
# Copyright 2020 Keyporttech Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for dynamodb-helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


apiVersion: v1
kind: Service
metadata:
  name: my-release-dynamodb
  labels:
    helm.sh/chart: dynamodb-0.1.27
    app.kubernetes.io/name: dynamodb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: dynamodb
    - port: 8001
      targetPort: 8001
      protocol: TCP
      name: admin
  selector:
    app.kubernetes.io/name: dynamodb
    app.kubernetes.io/instance: my-release
---
# Source: dynamodb/templates/deployment.yaml
# Copyright 2020 Keyporttech Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for dynamodb-helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-dynamodb
  labels:
    helm.sh/chart: dynamodb-0.1.27
    app.kubernetes.io/name: dynamodb
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dynamodb
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dynamodb
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-dynamodb
      securityContext:
        {}
      containers:
        - name: dynamodb
          securityContext:
            {}
          image: "amazon/dynamodb-local:1.12.0"
          imagePullPolicy: IfNotPresent
          args: [ "-Djava.library.path=./DynamoDBLocal_lib", "-jar", "DynamoDBLocal.jar", "-dbPath", "/mnt/data" ]
          ports:
            - name: dynamodb
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: dynamodb
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: dynamodb
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {}
          volumeMounts:
            - name: dynamodb-data
              mountPath: /mnt/data
        - name: admin
          securityContext:
            {}
          image: "aaronshaf/dynamodb-admin:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: dynamodbadmin
              containerPort: 8001
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: dynamodbadmin
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: dynamodbadmin
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {}
      volumes:
        - name: dynamodb-data
          emptyDir: {}
