---
# Source: prometheus-opencost-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-prometheus-opencost-exporter
  labels:
    helm.sh/chart: prometheus-opencost-exporter-0.1.1
    app.kubernetes.io/name: prometheus-opencost-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.108.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: prometheus-opencost-exporter/templates/clusterrole.yaml
# Cluster role giving opencost to get, list, watch required resources
# No write permissions are required
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-prometheus-opencost-exporter
  labels:
    helm.sh/chart: prometheus-opencost-exporter-0.1.1
    app.kubernetes.io/name: prometheus-opencost-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.108.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources:
      - configmaps
      - deployments
      - nodes
      - pods
      - services
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - persistentvolumeclaims
      - persistentvolumes
      - namespaces
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
      - deployments
      - daemonsets
      - replicasets
    verbs:
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
---
# Source: prometheus-opencost-exporter/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-prometheus-opencost-exporter
  labels:
    helm.sh/chart: prometheus-opencost-exporter-0.1.1
    app.kubernetes.io/name: prometheus-opencost-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.108.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-prometheus-opencost-exporter
subjects:
  - kind: ServiceAccount
    name: my-release-prometheus-opencost-exporter
    namespace: prometheus-opencost-exporter-0.1.1.tgz
---
# Source: prometheus-opencost-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-prometheus-opencost-exporter
  labels:
    helm.sh/chart: prometheus-opencost-exporter-0.1.1
    app.kubernetes.io/name: prometheus-opencost-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.108.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: prometheus-opencost-exporter
    app.kubernetes.io/instance: my-release
  type: ClusterIP
  ports:
    - name: http
      port: 9003
      targetPort: 9003
---
# Source: prometheus-opencost-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-prometheus-opencost-exporter
  labels:
    helm.sh/chart: prometheus-opencost-exporter-0.1.1
    app.kubernetes.io/name: prometheus-opencost-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.108.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-opencost-exporter
      app.kubernetes.io/instance: my-release
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus-opencost-exporter
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-prometheus-opencost-exporter
      containers:
        - name: my-release-prometheus-opencost-exporter
          image: "quay.io/kubecost1/kubecost-cost-model:prod-1.108.0"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9003
              name: http
          resources:
            limits:
              cpu: 999m
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 55Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 120
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 120
            periodSeconds: 10
            failureThreshold: 3
          env:
            - name: PROMETHEUS_SERVER_ENDPOINT
              value: "http://my-prometheus.opencost.svc:9090"
            - name: CLUSTER_ID
              value: "default-cluster"
            # If username, password or bearer_token are defined, pull from secrets
            # Add any additional provided variables
