---
# Source: service-names-port-numbers/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-service-names-port-numbers
  labels:
    helm.sh/chart: service-names-port-numbers-0.26.0
    app.kubernetes.io/name: service-names-port-numbers
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.12.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: service-names-port-numbers/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-service-names-port-numbers
  labels:
    helm.sh/chart: service-names-port-numbers-0.26.0
    app.kubernetes.io/name: service-names-port-numbers
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.12.1"
    app.kubernetes.io/managed-by: Helm
data:
  service-names-port-numbers-app.properties:    |
      server.compression.enabled=true
      datasources.etc_services=true
      my.key=my.value
---
# Source: service-names-port-numbers/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-service-names-port-numbers
  labels:
    helm.sh/chart: service-names-port-numbers-0.26.0
    app.kubernetes.io/name: service-names-port-numbers
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.12.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: service-names-port-numbers
    app.kubernetes.io/instance: my-release
---
# Source: service-names-port-numbers/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-service-names-port-numbers
  labels:
    helm.sh/chart: service-names-port-numbers-0.26.0
    app.kubernetes.io/name: service-names-port-numbers
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.12.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: service-names-port-numbers
      app.kubernetes.io/instance: my-release
  strategy:
    {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: service-names-port-numbers
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/config: a8c360309047a6d24f55915f38203d03cc6ee1653453d1ed30b6a04a0700c31a
    spec:
      serviceAccountName: my-release-service-names-port-numbers
      securityContext:
        {}
      volumes:
      - name: my-release-service-names-port-numbers
        configMap:
          name: my-release-service-names-port-numbers
      containers:
        - name: service-names-port-numbers
          securityContext:
            {}
          image: "rm3l/service-names-port-numbers:0.12.1"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
            - containerPort: 8081
          livenessProbe:
            initialDelaySeconds: 3
            periodSeconds: 90
            timeoutSeconds: 10
            failureThreshold: 
            httpGet:
              path: /graphiql
              port: 8080
          readinessProbe:
            initialDelaySeconds: 3
            periodSeconds: 4
            timeoutSeconds: 
            failureThreshold: 
            httpGet:
              path: /management/health
              port: 8081
          volumeMounts:
            - name: my-release-service-names-port-numbers
              mountPath: /etc/rm3l/service-names-port-numbers-app.properties
          resources:
            {}
---
# Source: service-names-port-numbers/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-service-names-port-numbers-test-connection"
  labels:
    helm.sh/chart: service-names-port-numbers-0.26.0
    app.kubernetes.io/name: service-names-port-numbers
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.12.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
    email: "armel+helm_charts@rm3l.org"
    "ignore-check.kube-linter.io/no-liveness-probe": "This is a one-shot pod for testing. It is not supposed to run forever."
    "ignore-check.kube-linter.io/no-readiness-probe": "This is a one-shot pod for testing. It is not supposed to run forever."
    "ignore-check.kube-linter.io/default-service-account": "This is a one-shot pod for testing."
    "ignore-check.kube-linter.io/non-isolated-pod": "This is a one-shot pod for testing."
spec:
  securityContext:
    runAsNonRoot: true
    # nobody
    runAsUser: 65534
    # nobody
    runAsGroup: 65534
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['-qO', '-', 'my-release-service-names-port-numbers:8080/graphiql']
      securityContext:
        readOnlyRootFilesystem: true
      resources:
        limits:
          cpu: 100m
          memory: 10Mi
        requests:
          cpu: 100m
          memory: 1Mi
  restartPolicy: Never
