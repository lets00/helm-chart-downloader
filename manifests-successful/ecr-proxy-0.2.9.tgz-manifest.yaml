---
# Source: ecr-proxy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-ecr-proxy
  labels:
    helm.sh/chart: ecr-proxy-0.2.9
    app.kubernetes.io/name: ecr-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.5.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: ecr-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-ecr-proxy
  labels:
    helm.sh/chart: ecr-proxy-0.2.9
    app.kubernetes.io/name: ecr-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.5.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ecr-proxy
    app.kubernetes.io/instance: my-release
---
# Source: ecr-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ecr-proxy
  labels:
    helm.sh/chart: ecr-proxy-0.2.9
    app.kubernetes.io/name: ecr-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.5.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ecr-proxy
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ecr-proxy
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-ecr-proxy
      securityContext:
        {}
      containers:
        - name: ecr-proxy
          securityContext:
            null
          image: "esailors/aws-ecr-http-proxy:1.5.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {}
          env:
            - name: PORT
              value: "80"
          volumeMounts:
            - name: cache
              mountPath: /cache
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
