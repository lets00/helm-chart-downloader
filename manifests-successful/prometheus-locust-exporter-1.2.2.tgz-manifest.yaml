---
# Source: prometheus-locust-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-prometheus-locust-exporter
  labels:
    app.kubernetes.io/name: prometheus-locust-exporter
    helm.sh/chart: prometheus-locust-exporter-1.2.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.4.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-locust-exporter
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus-locust-exporter
        app.kubernetes.io/instance: my-release
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9646"
        prometheus.io_scrape: "true"
    spec:
      securityContext:
        {}
      containers:
        - name: prometheus-locust-exporter
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: false
          image: "containersol/locust_exporter:v0.4.1"
          imagePullPolicy: IfNotPresent
          args:
            - --web.listen-address=:9646
            - --web.telemetry-path=/metrics
            - --locust.uri=http://localhost:8089
            - --locust.timeout=5s
            - --log.level=info
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: 9646
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: 9646
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
          ports:
            - name: prometheus
              containerPort: 9646
              protocol: TCP
          resources:
            {}
