---
# Source: customer-center/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-customer-center
  labels:
    helm.sh/chart: customer-center-0.2.31
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: customer-center
    app.kubernetes.io/version: "v3.3.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: customer-center
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: frontend
data:
  OIDC_CLIENT_HOST: "https://example.com/auth/realms/timed/protocol/openid-connect"
  OIDC_CLIENT: "cc"
---
# Source: customer-center/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-customer-center
  labels:
    helm.sh/chart: customer-center-0.2.31
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: customer-center
    app.kubernetes.io/version: "v3.3.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: customer-center
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: frontend
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: my-release-customer-center
  selector:
    app.kubernetes.io/name: customer-center
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: frontend
---
# Source: customer-center/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-customer-center
  labels:
    helm.sh/chart: customer-center-0.2.31
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: customer-center
    app.kubernetes.io/version: "v3.3.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: customer-center
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: customer-center
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        helm.sh/chart: customer-center-0.2.31
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: customer-center
        app.kubernetes.io/version: "v3.3.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: customer-center
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: frontend
    spec:
      containers:
        - name: customer-center
          image: "ghcr.io/adfinis/customer-center/frontend:v3.3.0"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: my-release-customer-center
          ports:
            - containerPort: 80
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
            httpGet:
              path: /account/login
              port: 80
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
            httpGet:
              path: /account/login
              port: 80
          resources:
            {}
---
# Source: customer-center/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-customer-center
  labels:
    helm.sh/chart: customer-center-0.2.31
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: customer-center
    app.kubernetes.io/version: "v3.3.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: customer-center
    app.kubernetes.io/instance: my-release
spec:
  rules:
    - host: my.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-release-customer-center
                port:
                  number: 80
  tls:
    - hosts:
      - my.example.com
      secretName: customer-center-tls
