---
# Source: wharf-helm/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-wharf-helm
  labels:

    helm.sh/chart: wharf-helm-3.2.6
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: wharf-helm/templates/web.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: my-release-wharf-helm-web-config
data:
  config.json: |
    {
      "Environment": {
        "Name": "dev",
        "IsProduction": false
      },
      "UpdateLatency": 20000,
      "UpdateFrequency": 30000,
      "BackendUrls": {
        "Api": "/api",
        "GitlabImport" : "/import",
        "GithubImport" : "/import",
        "AzureDevopsImport" : "/import"
      }
    }
---
# Source: wharf-helm/templates/api.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-wharf-helm-api
  labels:
    helm.sh/chart: wharf-helm-3.2.6
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: "ClusterIP"
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    component: api
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
---
# Source: wharf-helm/templates/provider.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-wharf-helm-azuredevops"
  labels:
    wharf.iver.com/provider: "azuredevops"
    helm.sh/chart: wharf-helm-3.2.6
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: "ClusterIP"
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    wharf.iver.com/provider: "azuredevops"
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
---
# Source: wharf-helm/templates/provider.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-wharf-helm-github"
  labels:
    wharf.iver.com/provider: "github"
    helm.sh/chart: wharf-helm-3.2.6
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: "ClusterIP"
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    wharf.iver.com/provider: "github"
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
---
# Source: wharf-helm/templates/provider.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-wharf-helm-gitlab"
  labels:
    wharf.iver.com/provider: "gitlab"
    helm.sh/chart: wharf-helm-3.2.6
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: "ClusterIP"
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    wharf.iver.com/provider: "gitlab"
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
---
# Source: wharf-helm/templates/web.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-wharf-helm-web
  labels:
    helm.sh/chart: wharf-helm-3.2.6
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    component: web
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
---
# Source: wharf-helm/templates/api.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-wharf-helm-api
  labels:
    helm.sh/chart: wharf-helm-3.2.6
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      component: api
      wharf.iver.com/instance: "dev"
      app.kubernetes.io/name: wharf-helm
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        component: api
        wharf.iver.com/instance: "dev"
        app.kubernetes.io/name: wharf-helm
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-wharf-helm
      containers:
        - name: "wharf-helm"
          image: "quay.io/iver-wharf/wharf-api:v5.2.0"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          env:
            - name: WHARF_INSTANCEID
              value: "dev"
            - name: WHARF_CI_TRIGGERURL
              value: http://jenkins.example.com/generic-webhook-trigger/invoke
            - name: WHARF_CI_TRIGGERTOKEN
              value: changeit
            - name: WHARF_HTTP_BASICAUTH
              value: ""
            - name: WHARF_HTTP_BINDADDRESS
              value: 0.0.0.0:8080
            - name: WHARF_DB_LOG
              value: "true"
            - name: WHARF_DB_DRIVER
              value: postgres
            - name: WHARF_DB_NAME
              value: wharf
            - name: WHARF_DB_USERNAME
              value: postgres
            - name: WHARF_DB_PASSWORD
              value: changeit
            - name: WHARF_DB_PORT
              value: "5432"
            - name: WHARF_DB_HOST
              value: wharf-db
            - name: WHARF_DB_MAXIDLECONNS
              value: "2"
            - name: WHARF_DB_MAXOPENCONNS
              value: "0"
            - name: WHARF_DB_MAXCONNLIFETIME
              value: 20m
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: wharf-helm/templates/provider.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-wharf-helm-azuredevops"
  labels:
    helm.sh/chart: wharf-helm-3.2.6
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      wharf.iver.com/provider: "azuredevops"
      wharf.iver.com/instance: "dev"
      app.kubernetes.io/name: wharf-helm
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        wharf.iver.com/provider: "azuredevops"
        wharf.iver.com/instance: "dev"
        app.kubernetes.io/name: wharf-helm
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-wharf-helm
      containers:
        - name: "azuredevops"
          image: "quay.io/iver-wharf/wharf-provider-azuredevops:v3.0.1"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: WHARF_URL
              value: wharf.example.org
            - name: WHARF_API_URL
              value: http://my-release-wharf-helm-api
            - name: WHARF_PROVIDER_URL_BASE
              value: "/import/azuredevops"
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: wharf-helm/templates/provider.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-wharf-helm-github"
  labels:
    helm.sh/chart: wharf-helm-3.2.6
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      wharf.iver.com/provider: "github"
      wharf.iver.com/instance: "dev"
      app.kubernetes.io/name: wharf-helm
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        wharf.iver.com/provider: "github"
        wharf.iver.com/instance: "dev"
        app.kubernetes.io/name: wharf-helm
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-wharf-helm
      containers:
        - name: "github"
          image: "quay.io/iver-wharf/wharf-provider-github:v3.0.1"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: WHARF_URL
              value: wharf.example.org
            - name: WHARF_API_URL
              value: http://my-release-wharf-helm-api
            - name: WHARF_PROVIDER_URL_BASE
              value: "/import/github"
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: wharf-helm/templates/provider.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-wharf-helm-gitlab"
  labels:
    helm.sh/chart: wharf-helm-3.2.6
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      wharf.iver.com/provider: "gitlab"
      wharf.iver.com/instance: "dev"
      app.kubernetes.io/name: wharf-helm
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        wharf.iver.com/provider: "gitlab"
        wharf.iver.com/instance: "dev"
        app.kubernetes.io/name: wharf-helm
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-wharf-helm
      containers:
        - name: "gitlab"
          image: "quay.io/iver-wharf/wharf-provider-gitlab:v2.0.1"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: WHARF_URL
              value: wharf.example.org
            - name: WHARF_API_URL
              value: http://my-release-wharf-helm-api
            - name: WHARF_PROVIDER_URL_BASE
              value: "/import/gitlab"
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: wharf-helm/templates/web.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-wharf-helm-web
  labels:
    helm.sh/chart: wharf-helm-3.2.6
    wharf.iver.com/instance: "dev"
    app.kubernetes.io/name: wharf-helm
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      component: web
      wharf.iver.com/instance: "dev"
      app.kubernetes.io/name: wharf-helm
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        component: web
        wharf.iver.com/instance: "dev"
        app.kubernetes.io/name: wharf-helm
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-wharf-helm
      volumes:
        - emptyDir: {}
          name: cache
        - emptyDir: {}
          name: run
        - name: my-release-wharf-helm-web-config-volume
          configMap:
            name: my-release-wharf-helm-web-config
      containers:
        - name: "wharf-helm-web"
          image: "quay.io/iver-wharf/wharf-web:v1.6.2"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - mountPath: /var/cache/nginx
              name: cache
            - mountPath: /run
              name: run
            - name: my-release-wharf-helm-web-config-volume
              mountPath: /usr/share/nginx/html/assets/config.json
              subPath: config.json
      nodeSelector:
        kubernetes.io/os: linux
