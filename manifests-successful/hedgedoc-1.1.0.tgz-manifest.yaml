---
# Source: hedgedoc/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-hedgedoc
  labels:
    helm.sh/chart: hedgedoc-1.1.0
    app.kubernetes.io/name: hedgedoc
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hedgedoc
    app.kubernetes.io/instance: my-release
---
# Source: hedgedoc/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-hedgedoc
  labels:
    helm.sh/chart: hedgedoc-1.1.0
    app.kubernetes.io/name: hedgedoc
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: hedgedoc
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hedgedoc
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: default
      dnsPolicy: ClusterFirst
      containers:
      - name: my-release-hedgedoc
        image: "ghcr.io/linuxserver/hedgedoc:version-1.9.0"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        volumeMounts:
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 30
          failureThreshold: 5
          timeoutSeconds: 10
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 30
          failureThreshold: 5
          timeoutSeconds: 10
