---
# Source: frigate/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-frigate-config
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: frigate
    app.kubernetes.io/version: 0.10.0-amd64
    helm.sh/chart: frigate-8.2.2
data:
  config.yml: |
    mqtt:
      host: mqtt.server.com
    cameras:
      back:
        ffmpeg:
          inputs:
            - path: rtsp://demo:demo@ipvmdemo.dyndns.org:5541/onvif-media/media.amp?profile=profile_1_h264&sessiontimeout=60&streamtype=unicast
              roles:
                - detect
                - rtmp
        detect:
          width: 1280
          height: 720
---
# Source: frigate/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-frigate
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: frigate
    app.kubernetes.io/version: 0.10.0-amd64
    helm.sh/chart: frigate-8.2.2
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: frigate
    app.kubernetes.io/instance: my-release
---
# Source: frigate/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-frigate
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: frigate
    app.kubernetes.io/version: 0.10.0-amd64
    helm.sh/chart: frigate-8.2.2
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: frigate
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        
        configmap/checksum: ff7b837f2cc2267d59611e5ae550606184859a0b19b9d13c9048fdaf5b61a2ee
        checksum/config: a5b46ca8a44dcd178056a12cc8b2a21399647aee5cad508793e21bca6ed063f8
      labels:
        app.kubernetes.io/name: frigate
        app.kubernetes.io/instance: my-release
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: my-release-frigate
          image: "blakeblackshear/frigate:0.10.0-amd64"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
          env:
            - name: FRIGATE_RTSP_PASSWORD
              value: ""
            - name: TZ
              value: UTC
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          volumeMounts:
            - name: cache
              mountPath: /dev/shm
            - name: config
              mountPath: /config/config.yml
              subPath: config.yml
          livenessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: cache
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
        - name: config
          configMap:
            name: my-release-frigate-config
