---
# Source: cloudflare-zero-trust-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-cloudflare-zero-trust-operator
  labels:
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: cloudflare-zero-trust-operator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-cloudflare-zero-trust-operator-creds
  labels:
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  CLOUDFLARE_API_EMAIL: ""
  CLOUDFLARE_ACCOUNT_ID: ""
  CLOUDFLARE_API_KEY: ""
  CLOUDFLARE_API_TOKEN: ""
---
# Source: cloudflare-zero-trust-operator/templates/cloudflareaccessapplication-crd.yaml
# DO NOT EDIT
# This file is automatically generated by `make helm`
# 
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: cloudflareaccessapplications.cloudflare.zelic.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  labels:
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: cloudflare.zelic.io
  names:
    kind: CloudflareAccessApplication
    listKind: CloudflareAccessApplicationList
    plural: cloudflareaccessapplications
    singular: cloudflareaccessapplication
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CloudflareAccessApplication is the Schema for the cloudflareaccessapplications
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CloudflareAccessApplicationSpec defines the desired state of
              CloudflareAccessApplication.
            properties:
              allowedIdps:
                description: 'The identity providers your users can select when connecting
                  to this application. Defaults to all IdPs configured in your account.
                  ex: ["699d98642c564d2e855e9661899b7252"]'
                items:
                  type: string
                type: array
              appLauncherVisible:
                default: true
                description: Displays the application in the App Launcher.
                type: boolean
              autoRedirectToIdentity:
                default: false
                description: When set to true, users skip the identity provider selection
                  step during login. You must specify only one identity provider in
                  allowed_idps.
                type: boolean
              domain:
                description: 'The domain and path that Access will secure. ex: "test.example.com/admin"'
                type: string
              enableBindingCookie:
                default: false
                description: Enables the binding cookie, which increases security against
                  compromised authorization tokens and CSRF attacks.
                type: boolean
              httpOnlyCookieAttribute:
                default: true
                description: Enables the HttpOnly cookie attribute, which increases
                  security against XSS attacks.
                type: boolean
              logoUrl:
                description: The image URL for the logo shown in the App Launcher dashboard
                type: string
              name:
                description: Name of the Cloudflare Access Application
                type: string
              policies:
                description: Policies is the ordered set of policies that should be
                  applied to the application Order determines precidence
                items:
                  properties:
                    decision:
                      description: 'Decision ex: allow, deny, non_identity, bypass -
                        defaults to allow'
                      type: string
                    exclude:
                      description: Rules evaluated with a NOT logical operator. To match
                        the policy, a user cannot meet any of the Exclude rules.
                      items:
                        properties:
                          accessGroups:
                            description: Reference to other access groups
                            items:
                              properties:
                                value:
                                  description: 'Optional: no more than one of the following
                                    may be specified. ID of the CloudflareAccessGroup'
                                  type: string
                                valueFrom:
                                  description: Source for the CloudflareAccessGroup's
                                    variable. Cannot be used if value is not empty.
                                  properties:
                                    name:
                                      description: '`name` is the name of the AccessGroup
                                        . Required'
                                      type: string
                                    namespace:
                                      description: '`namespace` is the namespace of
                                        the AccessGroup. Required'
                                      type: string
                                  required:
                                  - name
                                  - namespace
                                  type: object
                              type: object
                            type: array
                          anyAccessServiceToken:
                            description: Matches any valid service token
                            type: boolean
                          commonName:
                            description: Certificate CN
                            items:
                              type: string
                            type: array
                          country:
                            description: Country
                            items:
                              type: string
                            type: array
                          emailDomains:
                            description: Matches a specific email Domain
                            items:
                              type: string
                            type: array
                          emails:
                            description: Matches a Specific email
                            items:
                              type: string
                            type: array
                          everyone:
                            description: Allow Everyone
                            type: boolean
                          googleGroups:
                            description: Matches Google Group
                            items:
                              properties:
                                email:
                                  description: Google group email
                                  type: string
                                identityProviderId:
                                  description: Identity Provider Id
                                  type: string
                              required:
                              - email
                              - identityProviderId
                              type: object
                            type: array
                          ipRanges:
                            description: Matches an IP CIDR block
                            items:
                              type: string
                            type: array
                          loginMethod:
                            description: ID of the login method
                            items:
                              type: string
                            type: array
                          oktaGroup:
                            description: // Okta Groups
                            items:
                              properties:
                                identityProviderId:
                                  description: Identity Provider Id
                                  type: string
                                name:
                                  description: Name of the Okta Group
                                  type: string
                              required:
                              - identityProviderId
                              - name
                              type: object
                            type: array
                          serviceToken:
                            description: Matches a service token
                            items:
                              properties:
                                value:
                                  description: 'Optional: no more than one of the following
                                    may be specified. ID of the CloudflareServiceToken'
                                  type: string
                                valueFrom:
                                  description: Source for the CloudflareServiceToken's
                                    variable. Cannot be used if value is not empty.
                                  properties:
                                    name:
                                      description: '`name` is the name of the AccessGroup
                                        . Required'
                                      type: string
                                    namespace:
                                      description: '`namespace` is the namespace of
                                        the AccessGroup. Required'
                                      type: string
                                  required:
                                  - name
                                  - namespace
                                  type: object
                              type: object
                            type: array
                          validCertificate:
                            description: Any valid certificate will be matched
                            type: boolean
                        type: object
                      type: array
                    include:
                      description: Rules evaluated with an OR logical operator. A user
                        needs to meet only one of the Include rules.
                      items:
                        properties:
                          accessGroups:
                            description: Reference to other access groups
                            items:
                              properties:
                                value:
                                  description: 'Optional: no more than one of the following
                                    may be specified. ID of the CloudflareAccessGroup'
                                  type: string
                                valueFrom:
                                  description: Source for the CloudflareAccessGroup's
                                    variable. Cannot be used if value is not empty.
                                  properties:
                                    name:
                                      description: '`name` is the name of the AccessGroup
                                        . Required'
                                      type: string
                                    namespace:
                                      description: '`namespace` is the namespace of
                                        the AccessGroup. Required'
                                      type: string
                                  required:
                                  - name
                                  - namespace
                                  type: object
                              type: object
                            type: array
                          anyAccessServiceToken:
                            description: Matches any valid service token
                            type: boolean
                          commonName:
                            description: Certificate CN
                            items:
                              type: string
                            type: array
                          country:
                            description: Country
                            items:
                              type: string
                            type: array
                          emailDomains:
                            description: Matches a specific email Domain
                            items:
                              type: string
                            type: array
                          emails:
                            description: Matches a Specific email
                            items:
                              type: string
                            type: array
                          everyone:
                            description: Allow Everyone
                            type: boolean
                          googleGroups:
                            description: Matches Google Group
                            items:
                              properties:
                                email:
                                  description: Google group email
                                  type: string
                                identityProviderId:
                                  description: Identity Provider Id
                                  type: string
                              required:
                              - email
                              - identityProviderId
                              type: object
                            type: array
                          ipRanges:
                            description: Matches an IP CIDR block
                            items:
                              type: string
                            type: array
                          loginMethod:
                            description: ID of the login method
                            items:
                              type: string
                            type: array
                          oktaGroup:
                            description: // Okta Groups
                            items:
                              properties:
                                identityProviderId:
                                  description: Identity Provider Id
                                  type: string
                                name:
                                  description: Name of the Okta Group
                                  type: string
                              required:
                              - identityProviderId
                              - name
                              type: object
                            type: array
                          serviceToken:
                            description: Matches a service token
                            items:
                              properties:
                                value:
                                  description: 'Optional: no more than one of the following
                                    may be specified. ID of the CloudflareServiceToken'
                                  type: string
                                valueFrom:
                                  description: Source for the CloudflareServiceToken's
                                    variable. Cannot be used if value is not empty.
                                  properties:
                                    name:
                                      description: '`name` is the name of the AccessGroup
                                        . Required'
                                      type: string
                                    namespace:
                                      description: '`namespace` is the namespace of
                                        the AccessGroup. Required'
                                      type: string
                                  required:
                                  - name
                                  - namespace
                                  type: object
                              type: object
                            type: array
                          validCertificate:
                            description: Any valid certificate will be matched
                            type: boolean
                        type: object
                      type: array
                    name:
                      description: Name of the Cloudflare Access Policy
                      type: string
                    require:
                      description: Rules evaluated with an AND logical operator. To
                        match the policy, a user must meet all of the Require rules.
                      items:
                        properties:
                          accessGroups:
                            description: Reference to other access groups
                            items:
                              properties:
                                value:
                                  description: 'Optional: no more than one of the following
                                    may be specified. ID of the CloudflareAccessGroup'
                                  type: string
                                valueFrom:
                                  description: Source for the CloudflareAccessGroup's
                                    variable. Cannot be used if value is not empty.
                                  properties:
                                    name:
                                      description: '`name` is the name of the AccessGroup
                                        . Required'
                                      type: string
                                    namespace:
                                      description: '`namespace` is the namespace of
                                        the AccessGroup. Required'
                                      type: string
                                  required:
                                  - name
                                  - namespace
                                  type: object
                              type: object
                            type: array
                          anyAccessServiceToken:
                            description: Matches any valid service token
                            type: boolean
                          commonName:
                            description: Certificate CN
                            items:
                              type: string
                            type: array
                          country:
                            description: Country
                            items:
                              type: string
                            type: array
                          emailDomains:
                            description: Matches a specific email Domain
                            items:
                              type: string
                            type: array
                          emails:
                            description: Matches a Specific email
                            items:
                              type: string
                            type: array
                          everyone:
                            description: Allow Everyone
                            type: boolean
                          googleGroups:
                            description: Matches Google Group
                            items:
                              properties:
                                email:
                                  description: Google group email
                                  type: string
                                identityProviderId:
                                  description: Identity Provider Id
                                  type: string
                              required:
                              - email
                              - identityProviderId
                              type: object
                            type: array
                          ipRanges:
                            description: Matches an IP CIDR block
                            items:
                              type: string
                            type: array
                          loginMethod:
                            description: ID of the login method
                            items:
                              type: string
                            type: array
                          oktaGroup:
                            description: // Okta Groups
                            items:
                              properties:
                                identityProviderId:
                                  description: Identity Provider Id
                                  type: string
                                name:
                                  description: Name of the Okta Group
                                  type: string
                              required:
                              - identityProviderId
                              - name
                              type: object
                            type: array
                          serviceToken:
                            description: Matches a service token
                            items:
                              properties:
                                value:
                                  description: 'Optional: no more than one of the following
                                    may be specified. ID of the CloudflareServiceToken'
                                  type: string
                                valueFrom:
                                  description: Source for the CloudflareServiceToken's
                                    variable. Cannot be used if value is not empty.
                                  properties:
                                    name:
                                      description: '`name` is the name of the AccessGroup
                                        . Required'
                                      type: string
                                    namespace:
                                      description: '`namespace` is the namespace of
                                        the AccessGroup. Required'
                                      type: string
                                  required:
                                  - name
                                  - namespace
                                  type: object
                              type: object
                            type: array
                          validCertificate:
                            description: Any valid certificate will be matched
                            type: boolean
                        type: object
                      type: array
                  required:
                  - decision
                  - name
                  type: object
                type: array
              sessionDuration:
                default: 24h
                description: SessionDuration is the length of the session duration.
                type: string
              type:
                default: self_hosted
                description: The application type. defaults to "self_hosted"
                type: string
            required:
            - domain
            - name
            type: object
          status:
            description: CloudflareAccessApplicationStatus defines the observed state
              of CloudflareAccessApplication.
            properties:
              accessApplicationId:
                type: string
              conditions:
                description: Conditions store the status conditions of the CloudflareAccessApplication
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details
                        about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers of
                        specific condition types may define expected values and meanings
                        for this field, and whether the values are considered a guaranteed
                        API. The value should be a CamelCase string. This field may
                        not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                format: date-time
                type: string
              updatedAt:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: cloudflare-zero-trust-operator/templates/cloudflareaccessgroup-crd.yaml
# DO NOT EDIT
# This file is automatically generated by `make helm`
# 
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: cloudflareaccessgroups.cloudflare.zelic.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  labels:
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: cloudflare.zelic.io
  names:
    kind: CloudflareAccessGroup
    listKind: CloudflareAccessGroupList
    plural: cloudflareaccessgroups
    singular: cloudflareaccessgroup
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CloudflareAccessGroup is the Schema for the cloudflareaccessgroups
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CloudflareAccessGroupSpec defines the desired state of CloudflareAccessGroup.
            properties:
              exclude:
                description: Rules evaluated with a NOT logical operator. To match the
                  policy, a user cannot meet any of the Exclude rules.
                items:
                  properties:
                    accessGroups:
                      description: Reference to other access groups
                      items:
                        properties:
                          value:
                            description: 'Optional: no more than one of the following
                              may be specified. ID of the CloudflareAccessGroup'
                            type: string
                          valueFrom:
                            description: Source for the CloudflareAccessGroup's variable.
                              Cannot be used if value is not empty.
                            properties:
                              name:
                                description: '`name` is the name of the AccessGroup
                                  . Required'
                                type: string
                              namespace:
                                description: '`namespace` is the namespace of the AccessGroup.
                                  Required'
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        type: object
                      type: array
                    anyAccessServiceToken:
                      description: Matches any valid service token
                      type: boolean
                    commonName:
                      description: Certificate CN
                      items:
                        type: string
                      type: array
                    country:
                      description: Country
                      items:
                        type: string
                      type: array
                    emailDomains:
                      description: Matches a specific email Domain
                      items:
                        type: string
                      type: array
                    emails:
                      description: Matches a Specific email
                      items:
                        type: string
                      type: array
                    everyone:
                      description: Allow Everyone
                      type: boolean
                    googleGroups:
                      description: Matches Google Group
                      items:
                        properties:
                          email:
                            description: Google group email
                            type: string
                          identityProviderId:
                            description: Identity Provider Id
                            type: string
                        required:
                        - email
                        - identityProviderId
                        type: object
                      type: array
                    ipRanges:
                      description: Matches an IP CIDR block
                      items:
                        type: string
                      type: array
                    loginMethod:
                      description: ID of the login method
                      items:
                        type: string
                      type: array
                    oktaGroup:
                      description: // Okta Groups
                      items:
                        properties:
                          identityProviderId:
                            description: Identity Provider Id
                            type: string
                          name:
                            description: Name of the Okta Group
                            type: string
                        required:
                        - identityProviderId
                        - name
                        type: object
                      type: array
                    serviceToken:
                      description: Matches a service token
                      items:
                        properties:
                          value:
                            description: 'Optional: no more than one of the following
                              may be specified. ID of the CloudflareServiceToken'
                            type: string
                          valueFrom:
                            description: Source for the CloudflareServiceToken's variable.
                              Cannot be used if value is not empty.
                            properties:
                              name:
                                description: '`name` is the name of the AccessGroup
                                  . Required'
                                type: string
                              namespace:
                                description: '`namespace` is the namespace of the AccessGroup.
                                  Required'
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        type: object
                      type: array
                    validCertificate:
                      description: Any valid certificate will be matched
                      type: boolean
                  type: object
                type: array
              include:
                description: Rules evaluated with an OR logical operator. A user needs
                  to meet only one of the Include rules.
                items:
                  properties:
                    accessGroups:
                      description: Reference to other access groups
                      items:
                        properties:
                          value:
                            description: 'Optional: no more than one of the following
                              may be specified. ID of the CloudflareAccessGroup'
                            type: string
                          valueFrom:
                            description: Source for the CloudflareAccessGroup's variable.
                              Cannot be used if value is not empty.
                            properties:
                              name:
                                description: '`name` is the name of the AccessGroup
                                  . Required'
                                type: string
                              namespace:
                                description: '`namespace` is the namespace of the AccessGroup.
                                  Required'
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        type: object
                      type: array
                    anyAccessServiceToken:
                      description: Matches any valid service token
                      type: boolean
                    commonName:
                      description: Certificate CN
                      items:
                        type: string
                      type: array
                    country:
                      description: Country
                      items:
                        type: string
                      type: array
                    emailDomains:
                      description: Matches a specific email Domain
                      items:
                        type: string
                      type: array
                    emails:
                      description: Matches a Specific email
                      items:
                        type: string
                      type: array
                    everyone:
                      description: Allow Everyone
                      type: boolean
                    googleGroups:
                      description: Matches Google Group
                      items:
                        properties:
                          email:
                            description: Google group email
                            type: string
                          identityProviderId:
                            description: Identity Provider Id
                            type: string
                        required:
                        - email
                        - identityProviderId
                        type: object
                      type: array
                    ipRanges:
                      description: Matches an IP CIDR block
                      items:
                        type: string
                      type: array
                    loginMethod:
                      description: ID of the login method
                      items:
                        type: string
                      type: array
                    oktaGroup:
                      description: // Okta Groups
                      items:
                        properties:
                          identityProviderId:
                            description: Identity Provider Id
                            type: string
                          name:
                            description: Name of the Okta Group
                            type: string
                        required:
                        - identityProviderId
                        - name
                        type: object
                      type: array
                    serviceToken:
                      description: Matches a service token
                      items:
                        properties:
                          value:
                            description: 'Optional: no more than one of the following
                              may be specified. ID of the CloudflareServiceToken'
                            type: string
                          valueFrom:
                            description: Source for the CloudflareServiceToken's variable.
                              Cannot be used if value is not empty.
                            properties:
                              name:
                                description: '`name` is the name of the AccessGroup
                                  . Required'
                                type: string
                              namespace:
                                description: '`namespace` is the namespace of the AccessGroup.
                                  Required'
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        type: object
                      type: array
                    validCertificate:
                      description: Any valid certificate will be matched
                      type: boolean
                  type: object
                type: array
              name:
                description: Name of the Cloudflare Access Group
                type: string
              require:
                description: Rules evaluated with an AND logical operator. To match
                  the policy, a user must meet all of the Require rules.
                items:
                  properties:
                    accessGroups:
                      description: Reference to other access groups
                      items:
                        properties:
                          value:
                            description: 'Optional: no more than one of the following
                              may be specified. ID of the CloudflareAccessGroup'
                            type: string
                          valueFrom:
                            description: Source for the CloudflareAccessGroup's variable.
                              Cannot be used if value is not empty.
                            properties:
                              name:
                                description: '`name` is the name of the AccessGroup
                                  . Required'
                                type: string
                              namespace:
                                description: '`namespace` is the namespace of the AccessGroup.
                                  Required'
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        type: object
                      type: array
                    anyAccessServiceToken:
                      description: Matches any valid service token
                      type: boolean
                    commonName:
                      description: Certificate CN
                      items:
                        type: string
                      type: array
                    country:
                      description: Country
                      items:
                        type: string
                      type: array
                    emailDomains:
                      description: Matches a specific email Domain
                      items:
                        type: string
                      type: array
                    emails:
                      description: Matches a Specific email
                      items:
                        type: string
                      type: array
                    everyone:
                      description: Allow Everyone
                      type: boolean
                    googleGroups:
                      description: Matches Google Group
                      items:
                        properties:
                          email:
                            description: Google group email
                            type: string
                          identityProviderId:
                            description: Identity Provider Id
                            type: string
                        required:
                        - email
                        - identityProviderId
                        type: object
                      type: array
                    ipRanges:
                      description: Matches an IP CIDR block
                      items:
                        type: string
                      type: array
                    loginMethod:
                      description: ID of the login method
                      items:
                        type: string
                      type: array
                    oktaGroup:
                      description: // Okta Groups
                      items:
                        properties:
                          identityProviderId:
                            description: Identity Provider Id
                            type: string
                          name:
                            description: Name of the Okta Group
                            type: string
                        required:
                        - identityProviderId
                        - name
                        type: object
                      type: array
                    serviceToken:
                      description: Matches a service token
                      items:
                        properties:
                          value:
                            description: 'Optional: no more than one of the following
                              may be specified. ID of the CloudflareServiceToken'
                            type: string
                          valueFrom:
                            description: Source for the CloudflareServiceToken's variable.
                              Cannot be used if value is not empty.
                            properties:
                              name:
                                description: '`name` is the name of the AccessGroup
                                  . Required'
                                type: string
                              namespace:
                                description: '`namespace` is the namespace of the AccessGroup.
                                  Required'
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        type: object
                      type: array
                    validCertificate:
                      description: Any valid certificate will be matched
                      type: boolean
                  type: object
                type: array
            required:
            - name
            type: object
          status:
            description: CloudflareAccessGroupStatus defines the observed state of CloudflareAccessGroup.
            properties:
              accessGroupId:
                description: AccessGroupID is the ID of the reference in Cloudflare
                type: string
              conditions:
                description: Conditions store the status conditions of the CloudflareAccessApplication
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details
                        about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers of
                        specific condition types may define expected values and meanings
                        for this field, and whether the values are considered a guaranteed
                        API. The value should be a CamelCase string. This field may
                        not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                description: Creation timestamp of the resource in Cloudflare
                format: date-time
                type: string
              updatedAt:
                description: Updated timestamp of the resource in Cloudflare
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: cloudflare-zero-trust-operator/templates/cloudflareservicetoken-crd.yaml
# DO NOT EDIT
# This file is automatically generated by `make helm`
# 
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: cloudflareservicetokens.cloudflare.zelic.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  labels:
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  group: cloudflare.zelic.io
  names:
    kind: CloudflareServiceToken
    listKind: CloudflareServiceTokenList
    plural: cloudflareservicetokens
    singular: cloudflareservicetoken
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CloudflareServiceToken is the Schema for the cloudflareservicetokens
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CloudflareServiceTokenSpec defines the desired state of CloudflareServiceToken.
            properties:
              minTimeBeforeRenewal:
                default: "0"
                description: Time before the token should be automatically renewed.
                  Defaults to "0" Automatically renewing a service token will change
                  the service token value upon renewal. Tokens will get automatically
                  renewed if the token is expired
                type: string
              name:
                description: Name of the Cloudflare Access Group
                type: string
              recreateMissing:
                default: true
                description: Recreate the token if the secret with the service token
                  value is missing or doesn't exist
                type: boolean
              template:
                default:
                  metadata: null
                description: Template to apply for the generated secret
                properties:
                  clientIdKey:
                    default: cloudflareClientId
                    description: 'Key that should store the secret data. Defaults to
                      cloudflareServiceToken. Warning: changing this value will recreate
                      the secret'
                    type: string
                  clientSecretKey:
                    default: cloudflareSecretKey
                    description: 'Key that should store the secret data. Defaults to
                      cloudflareServiceToken Warning: changing this value will recreate
                      the secret'
                    type: string
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
                    nullable: true
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                type: object
            required:
            - name
            type: object
          status:
            description: CloudflareServiceTokenStatus defines the observed state of
              CloudflareServiceToken.
            properties:
              conditions:
                description: Conditions store the status conditions of the CloudflareAccessApplication
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details
                        about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers of
                        specific condition types may define expected values and meanings
                        for this field, and whether the values are considered a guaranteed
                        API. The value should be a CamelCase string. This field may
                        not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              createdAt:
                description: Creation timestamp of the resource in Cloudflare
                format: date-time
                type: string
              expiresAt:
                description: Updated timestamp of the resource in Cloudflare
                format: date-time
                type: string
              secretRef:
                description: SecretRef is the reference to the secret
                nullable: true
                properties:
                  clientIdKey:
                    description: Key that stores the secret data.
                    type: string
                  clientSecretKey:
                    description: Key that stores the secret data.
                    type: string
                  reference:
                    description: reference to the secret
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              serviceTokenId:
                description: ID of the servicetoken in Cloudflare
                type: string
              updatedAt:
                description: Updated timestamp of the resource in Cloudflare
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: cloudflare-zero-trust-operator/templates/f-zero-trust-operator-manager-rbac.yaml
# DO NOT EDIT
# This file is automatically generated by `make helm`
# 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cloudflare-zero-trust-operator-f-zero-trust-operator-manager-role
  labels:
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cloudflare.zelic.io
  resources:
  - cloudflareaccessapplications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cloudflare.zelic.io
  resources:
  - cloudflareaccessapplications/finalizers
  verbs:
  - update
- apiGroups:
  - cloudflare.zelic.io
  resources:
  - cloudflareaccessapplications/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cloudflare.zelic.io
  resources:
  - cloudflareaccessgroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cloudflare.zelic.io
  resources:
  - cloudflareaccessgroups/finalizers
  verbs:
  - update
- apiGroups:
  - cloudflare.zelic.io
  resources:
  - cloudflareaccessgroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cloudflare.zelic.io
  resources:
  - cloudflareservicetokens
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cloudflare.zelic.io
  resources:
  - cloudflareservicetokens/finalizers
  verbs:
  - update
- apiGroups:
  - cloudflare.zelic.io
  resources:
  - cloudflareservicetokens/status
  verbs:
  - get
  - patch
  - update
---
# Source: cloudflare-zero-trust-operator/templates/f-zero-trust-operator-metrics-reader-rbac.yaml
# DO NOT EDIT
# This file is automatically generated by `make helm`
# 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cloudflare-zero-trust-operator-f-zero-trust-operator-metrics-reader
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: bojanzelic-cloudflare-zero-trust-operator
    app.kubernetes.io/part-of: bojanzelic-cloudflare-zero-trust-operator
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: cloudflare-zero-trust-operator/templates/f-zero-trust-operator-proxy-rbac.yaml
# DO NOT EDIT
# This file is automatically generated by `make helm`
# 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-cloudflare-zero-trust-operator-f-zero-trust-operator-proxy-role
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: bojanzelic-cloudflare-zero-trust-operator
    app.kubernetes.io/part-of: bojanzelic-cloudflare-zero-trust-operator
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: cloudflare-zero-trust-operator/templates/f-zero-trust-operator-manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-cloudflare-zero-trust-operator-f-zero-trust-operator-manager-rolebinding
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: bojanzelic-cloudflare-zero-trust-operator
    app.kubernetes.io/part-of: bojanzelic-cloudflare-zero-trust-operator
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-release-cloudflare-zero-trust-operator-f-zero-trust-operator-manager-role'
subjects:
- kind: ServiceAccount
  name: 'my-release-cloudflare-zero-trust-operator'
  namespace: 'cloudflare-zero-trust-operator-0.4.0.tgz'
---
# Source: cloudflare-zero-trust-operator/templates/f-zero-trust-operator-proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-cloudflare-zero-trust-operator-f-zero-trust-operator-proxy-rolebinding
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: bojanzelic-cloudflare-zero-trust-operator
    app.kubernetes.io/part-of: bojanzelic-cloudflare-zero-trust-operator
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-release-cloudflare-zero-trust-operator-f-zero-trust-operator-proxy-role'
subjects:
- kind: ServiceAccount
  name: 'my-release-cloudflare-zero-trust-operator'
  namespace: 'cloudflare-zero-trust-operator-0.4.0.tgz'
---
# Source: cloudflare-zero-trust-operator/templates/f-zero-trust-operator-leader-election-rbac.yaml
# DO NOT EDIT
# This file is automatically generated by `make helm`
# 
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-cloudflare-zero-trust-operator-f-zero-trust-operator-leader-election-role
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: bojanzelic-cloudflare-zero-trust-operator
    app.kubernetes.io/part-of: bojanzelic-cloudflare-zero-trust-operator
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: cloudflare-zero-trust-operator/templates/f-zero-trust-operator-leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-cloudflare-zero-trust-operator-f-zero-trust-operator-leader-election-rolebinding
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: bojanzelic-cloudflare-zero-trust-operator
    app.kubernetes.io/part-of: bojanzelic-cloudflare-zero-trust-operator
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'my-release-cloudflare-zero-trust-operator-f-zero-trust-operator-leader-election-role'
subjects:
- kind: ServiceAccount
  name: 'my-release-cloudflare-zero-trust-operator'
  namespace: 'cloudflare-zero-trust-operator-0.4.0.tgz'
---
# Source: cloudflare-zero-trust-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-cloudflare-zero-trust-operator
  labels:
    control-plane: controller-manager
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    control-plane: controller-manager
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
---
# Source: cloudflare-zero-trust-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-cloudflare-zero-trust-operator
  labels:
    control-plane: controller-manager
    helm.sh/chart: cloudflare-zero-trust-operator-0.4.0
    app.kubernetes.io/name: cloudflare-zero-trust-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas:  1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudflare-zero-trust-operator
      app.kubernetes.io/instance: my-release
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: cloudflare-zero-trust-operator
        app.kubernetes.io/instance: my-release
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                      - ppc64le
                      - s390x
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
          name: kube-rbac-proxy
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          env:
            - name: CLOUDFLARE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: my-release-cloudflare-zero-trust-operator-creds
                  key: CLOUDFLARE_API_KEY
            - name: CLOUDFLARE_API_EMAIL
              valueFrom:
                secretKeyRef:
                  name: my-release-cloudflare-zero-trust-operator-creds
                  key: CLOUDFLARE_API_EMAIL
            - name: CLOUDFLARE_ACCOUNT_ID
              valueFrom:
                secretKeyRef:
                  name: my-release-cloudflare-zero-trust-operator-creds
                  key: CLOUDFLARE_ACCOUNT_ID
            - name: CLOUDFLARE_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: my-release-cloudflare-zero-trust-operator-creds
                  key: CLOUDFLARE_API_TOKEN
          image: "ghcr.io/bojanzelic/cloudflare-zero-trust-operator:0.4.0"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: cloudflare-zero-trust-operator
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: my-release-cloudflare-zero-trust-operator
      terminationGracePeriodSeconds: 10
