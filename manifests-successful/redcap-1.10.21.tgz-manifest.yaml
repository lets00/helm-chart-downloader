---
# Source: redcap/templates/server-secrets.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: redcap-server-secrets
data:
  DB_PASSWORD: 
  SMB_PASSWORD: 
  SMB_USER: 
  SMB_SOURCEPATH: 
  SMB_DESTPATH: 
  SMB_DOMAIN: 
  SALT: 
  ldap_config.php: IiIK
---
# Source: redcap/templates/conf.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "my-release-conf"
data:
  bootstrap.sh: |-
    #!/bin/bash
    # Montage CIFS

    echo "username=$SMB_USER" > /root/.smbcred
    echo "password=$SMB_PASSWORD" >> /root/.smbcred
    echo "domain=$SMB_DOMAIN" >> /root/.smbcred

    mkdir -p $SMB_DESTPATH

    mount -vvv -t cifs -o noperm,credentials=/root/.smbcred $SMB_SOURCEPATH $SMB_DESTPATH

    # Lancement WATCHDOG
    service watchdog start

    # copie de la conf mail
    cp /config/mail/msmtprc /etc/msmtprc

    # Lancement du serveur web apache
    /usr/sbin/apache2ctl -D FOREGROUND
---
# Source: redcap/templates/conf.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "my-release-conf-mail"
data:
  msmtprc: |-
    # Set default values for all following accounts.
    defaults
    port 25
    
    account redcapmailuser
    host smt.company.com
    from <user>@redcap.company.com
    
    # Set a default account
    account default : redcapmailuser
---
# Source: redcap/templates/conf.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "my-release-conf-mail-cron"
data:
  boot-cron.sh: |-
    #!/bin/bash
    cp /config/mail/msmtprc /etc/msmtprc
    /usr/bin/php /var/www/site/cron.php
---
# Source: redcap/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "my-release-redcap"
spec:
  type: ClusterIP
  ports:
    - name: 80tcp
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: "my-release-redcap"
    release: my-release
---
# Source: redcap/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "my-release-redcap"
  labels:
    app: "my-release-redcap"
    chart: "redcap-1.10.21"
    heritage: Helm
    release: my-release
    app.kubernetes.io/name: redcap
    helm.sh/chart: redcap-1.10.21
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "10.6.13"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: "my-release-redcap"
      release: my-release
  template:
    metadata:
      labels:
        app: "my-release-redcap"
        release: my-release
      annotations:
        rollme: "m27XH"
    spec:
      containers:
      - args:
        - /bin/bash
        - /config/bootstrap.sh
        env:
        - name: DB_HOSTNAME
          value: 
        - name: DB_NAME
          value: 
        - name: DB_USERNAME
          value: 
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: redcap-server-secrets
              optional: false
        - name: SMB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: SMB_PASSWORD
              name: redcap-server-secrets
              optional: false
        - name: SMB_USER
          valueFrom:
            secretKeyRef:
              key: SMB_USER
              name: redcap-server-secrets
              optional: false
        - name: SMB_SOURCEPATH
          valueFrom:
            secretKeyRef:
              key: SMB_SOURCEPATH
              name: redcap-server-secrets
              optional: false
        - name: SMB_DESTPATH
          valueFrom:
            secretKeyRef:
              key: SMB_DESTPATH
              name: redcap-server-secrets
              optional: false
        - name: SMB_DOMAIN
          valueFrom:
            secretKeyRef:
              key: SMB_DOMAIN
              name: redcap-server-secrets
              optional: false
        - name: SALT
          valueFrom:
            secretKeyRef:
              key: SALT
              name: redcap-server-secrets
        name: redcap
        image: ":"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - ls 
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 2
        securityContext:
          allowPrivilegeEscalation: true
          privileged: true
        ports:
        - containerPort: 80
          name: 80tcp
          protocol: TCP
        volumeMounts:
        - mountPath: /var/www/site/webtools2/ldap/
          name: ldap-config
        - mountPath: /config
          name: bootstrap
        - mountPath: /config/mail
          name: mail
      volumes:
      - name: ldap-config
        secret:
          defaultMode: 511
          items:
          - key: ldap_config.php
            path: ./ldap_config.php
          optional: false
          secretName: redcap-server-secrets
      - configMap:
          defaultMode: 256
          items:
          - key: bootstrap.sh
            path: ./bootstrap.sh
          name: "my-release-conf"
          optional: false
        name: bootstrap
      - configMap:
          defaultMode: 420
          name: "my-release-conf-mail"
          items:
          - key: msmtprc
            path: ./msmtprc
        name: mail
---
# Source: redcap/templates/cron.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: my-release-redcap-cron
spec:
  schedule: "0 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 30
      backoffLimit: 1
      completions: 1
      parallelism: 1
      template:
        metadata:
          name: redcap-cron
          labels:
            name: redcap-cron
        spec:
          containers:
          - args:
            - /bin/bash
            - /config/boot-cron.sh
            env:
            - name: DB_HOSTNAME
              value: 
            - name: DB_NAME
              value: 
            - name: DB_USERNAME
              value: 
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DB_PASSWORD
                  name: redcap-server-secrets
                  optional: false
            - name: SALT
              valueFrom:
                secretKeyRef:
                  key: SALT
                  name: redcap-server-secrets
                  optional: false
            volumeMounts:
              - mountPath: /config/mail
                name: mail
              - mountPath: /config
                name: cron-bootstrap
            image: ":"
            imagePullPolicy: IfNotPresent
            name: redcap-cron
          volumes:
              - configMap:
                  defaultMode: 256
                  items:
                    - key: boot-cron.sh
                      path: ./boot-cron.sh
                  name: "my-release-conf-mail-cron"
                name: cron-bootstrap
              - configMap:
                  defaultMode: 420
                  name: "my-release-conf-mail"
                  items:
                    - key: msmtprc
                      path: ./msmtprc
                name: mail
          restartPolicy: Never
---
# Source: redcap/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redcap
  labels:
    app: redcap
    chart: "redcap-1.10.21"
    heritage: Helm
    release: my-release
  annotations:
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/client-body-timeout: "3600"
    nginx.ingress.kubernetes.io/client-header-timeout: "3600"
    nginx.ingress.kubernetes.io/client_max_body_size: 5000m
    nginx.ingress.kubernetes.io/proxy-body-size: 5000m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/session-cookie-expires: "86400"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
spec:
  tls:
    - hosts:
      - redcap.company.com
      secretName: redcap
  rules:
  - host: "redcap.company.com"
    http:
      paths:
        - path: /
          pathType: Prefix        
          backend:
            service:
              name: my-release-redcap
              port:
                name: 80tcp
