---
# Source: kove-deprecations/charts/kove/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kove-deprecations
  namespace: default
  labels:
    app: kove
    helm.sh/chart: kove-0.1.3
    app.kubernetes.io/name: kove
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kove-deprecations/charts/kove/templates/configmap-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kove-deprecations-config
  namespace: default
  labels:
    app: kove
    helm.sh/chart: kove-0.1.3
    app.kubernetes.io/name: kove
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    ignoreChildren: true
    policies:
    - /policies
    regoQuery: data[_].deprecations.main
---
# Source: kove-deprecations/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kove-deprecations-policies
  namespace: default
  labels:
    app: kove-deprecations
    helm.sh/chart: kove-deprecations-0.1.2
    app.kubernetes.io/name: kove-deprecations
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  _cert-manager.rego: "package kove.deprecations\n\n# Based on https://github.com/jetstack/cert-manager/releases/tag/v0.11.0\nmain[return]
    {\n\tkinds := [\"Certificate\", \"Issuer\", \"ClusterIssuer\", \"CertificateRequest\"]\n\tinput.apiVersion
    == \"certmanager.k8s.io/v1alpha1\"\n\tinput.kind == kinds[_]\n\treturn := {\n\t\t\"Name\":
    input.metadata.name,\n\t\t\"Namespace\": input.metadata.namespace,\n\t\t\"Kind\":
    input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\": \"API certmanager.k8s.io/v1alpha1
    is obsolete, use cert-manager.io/v1alpha2 instead.\",\n\t}\n}\n\nmain[return] {\n\tkinds
    := [\"Order\", \"Challenge\"]\n\tinput.apiVersion == \"certmanager.k8s.io/v1alpha1\"\n\tinput.kind
    == kinds[_]\n\treturn := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\":
    input.metadata.namespace,\n\t\t\"Kind\": input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\":
    \"API certmanager.k8s.io/v1alpha1 is obsolete, use acme.cert-manager.io/v1alpha2
    instead.\",\n\t}\n}\n"
  _service-account.rego: "package kove.deprecations\n\n# Based on https://github.com/kubernetes/kubernetes/issues/47198\n#
    Warn about the deprecated serviceAccount field in podSpec.\nmain[return] {\n\tresources
    := [\"Pod\"]\n\tinput.kind == resources[_]\n\tinput.spec.serviceAccount\n\treturn
    := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\": input.metadata.namespace,\n\t\t\"Kind\":
    input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\": \"The serviceAccount
    field in the podSpec will be deprecated soon, use serviceAccountName instead.\",\n\t}\n}\n\nmain[return]
    {\n\tresources := [\"CronJob\"]\n\tinput.kind == resources[_]\n\tinput.spec.jobTemplate.spec.template.spec.serviceAccount\n\treturn
    := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\": input.metadata.namespace,\n\t\t\"Kind\":
    input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\": \"The serviceAccount
    field in the podSpec will be deprecated soon, use serviceAccountName instead.\",\n\t}\n}\n\nmain[return]
    {\n\tresources := [\"Deployment\", \"DaemonSet\", \"Job\", \"ReplicaSet\", \"ReplicationController\",
    \"StatefulSet\"]\n\tinput.kind == resources[_]\n\tinput.spec.template.spec.serviceAccount\n\treturn
    := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\": input.metadata.namespace,\n\t\t\"Kind\":
    input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\": \"The serviceAccount
    field in the podSpec will be deprecated soon, use serviceAccountName instead.\",\n\t}\n}\n"
  get_default.rego: "package kove.deprecations\n\nget_default(val, key, _) = val[key]\n\nget_default(val,
    key, fallback) = fallback {\n\tnot val[key]\n}\n"
  kubernetes-1.16.rego: "package kove.deprecations\n\n# Based on https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.16.md\n\n#
    All resources under apps/v1beta1 and apps/v1beta2 - use apps/v1 instead\nmain[return]
    {\n\tapis := [\"apps/v1beta1\", \"apps/v1beta2\"]\n\tinput.apiVersion == apis[_]\n\treturn
    := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\": input.metadata.namespace,\n\t\t\"Kind\":
    input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\": \"API has been
    deprecated, use apps/v1 instead.\",\n\t}\n}\n\n# daemonsets, deployments, replicasets
    resources under extensions/v1beta1 - use apps/v1 instead\nmain[return] {\n\tresources
    := [\"DaemonSet\", \"Deployment\", \"ReplicaSet\"]\n\tinput.apiVersion == \"extensions/v1beta1\"\n\tinput.kind
    == resources[_]\n\treturn := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\":
    input.metadata.namespace,\n\t\t\"Kind\": input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\":
    \"API extensions/v1beta1 has been deprecated, use apps/v1 instead.\",\n\t}\n}\n\n#
    networkpolicies resources under extensions/v1beta1 - use networking.k8s.io/v1 instead\nmain[return]
    {\n\tinput.apiVersion == \"extensions/v1beta1\"\n\tinput.kind == \"NetworkPolicy\"\n\tmsg
    := sprintf(\"%s/%s: API extensions/v1beta1 for NetworkPolicy has been deprecated,
    use networking.k8s.io/v1 instead.\", [input.kind, input.metadata.name])\n\treturn
    := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\": input.metadata.namespace,\n\t\t\"Kind\":
    input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\": \"API extensions/v1beta1
    has been deprecated, use networking.k8s.io/v1 instead.\",\n\t}\n}\n\n# podsecuritypolicies
    resources under extensions/v1beta1 - use policy/v1beta1 instead\nmain[return] {\n\tinput.apiVersion
    == \"extensions/v1beta1\"\n\tinput.kind == \"PodSecurityPolicy\"\n\tmsg := sprintf(\"%s/%s:
    API extensions/v1beta1 for PodSecurityPolicy has been deprecated, use policy/v1beta1
    instead.\", [input.kind, input.metadata.name])\n\treturn := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\":
    input.metadata.namespace,\n\t\t\"Kind\": input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\":
    \"API extensions/v1beta1 has been deprecated, use policy/v1beta1 instead.\",\n\t}\n}\n\n#
    PriorityClass resources will no longer be served from scheduling.k8s.io/v1beta1
    and scheduling.k8s.io/v1alpha1 in v1.17.\nmain[return] {\n\tapis := [\"scheduling.k8s.io/v1beta1\",
    \"scheduling.k8s.io/v1alpha1\"]\n\tinput.apiVersion == apis[_]\n\tinput.kind ==
    \"PriorityClass\"\n\tmsg := sprintf(\"%s/%s: API %s for PriorityClass has been deprecated,
    use scheduling.k8s.io/v1 instead.\", [input.kind, input.metadata.name, input.apiVersion])\n\treturn
    := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\": input.metadata.namespace,\n\t\t\"Kind\":
    input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\": sprintf(\"API
    %s has been deprecated, use scheduling.k8s.io/v1 instead.\", [input.apiVersion]),\n\t}\n}\n"
  kubernetes-1.17.rego: "package kove.deprecations\n\n# Based on https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.16.md\n\n#
    PriorityClass resources will no longer be served from scheduling.k8s.io/v1beta1
    and scheduling.k8s.io/v1alpha1 in v1.17.\nmain[return] {\n\tapis := [\"scheduling.k8s.io/v1beta1\",
    \"scheduling.k8s.io/v1alpha1\"]\n\tinput.apiVersion == apis[_]\n\tinput.kind ==
    \"PriorityClass\"\n\tmsg := sprintf(\"%s/%s: API %s for PriorityClass has been deprecated,
    use scheduling.k8s.io/v1 instead.\", [input.kind, input.metadata.name, input.apiVersion])\n\treturn
    := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\": input.metadata.namespace,\n\t\t\"Kind\":
    input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\": sprintf(\"API
    %s has been deprecated, use scheduling.k8s.io/v1 instead.\", [input.apiVersion]),\n\t}\n}\n"
  kubernetes-1.18.rego: "package kove.deprecations\n\n# Based on https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.18.md\n\n#
    Within Ingress resources spec.ingressClassName replaces the deprecated kubernetes.io/ingress.class
    annotation.\nmain[return] {\n\tresources := [\"Ingress\"]\n\tinput.kind == resources[_]\n\tinput.metadata.annotations[\"kubernetes.io/ingress.class\"]\n\treturn
    := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\": input.metadata.namespace,\n\t\t\"Kind\":
    input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\": \"Ingress annotation
    kubernetes.io/ingress.class has been deprecated in 1.18, use spec.IngressClassName
    instead.\",\n\t}\n}\n"
  kubernetes-1.19.rego: "package kove.deprecations\n\n# Based on https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.16.md\n#
    Based on https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.19.md\n\n#
    The apiextensions.k8s.io/v1beta1 version of CustomResourceDefinition is deprecated
    in 1.19. Migrate to use apiextensions.k8s.io/v1 instead\nmain[return] {\n\tinput.apiVersion
    == \"apiextensions.k8s.io/v1beta1\"\n\tinput.kind == \"CustomResourceDefinition\"\n\treturn
    := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\": input.metadata.namespace,\n\t\t\"Kind\":
    input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\": \"API apiextensions.k8s.io/v1beta1
    for CustomResourceDefinition is deprecated in 1.19, use apiextensions.k8s.io/v1
    instead.\",\n\t}\n}\n\n# The apiregistration.k8s.io/v1beta1 version is deprecated
    in 1.19. Migrate to use apiregistration.k8s.io/v1 instead\nmain[return] {\n\tinput.apiVersion
    == \"apiregistration.k8s.io/v1beta1\"\n\treturn := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\":
    input.metadata.namespace,\n\t\t\"Kind\": input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\":
    \"API apiregistration.k8s.io/v1beta1 is deprecated in Kubernetes 1.19, use apiregistration.k8s.io/v1
    instead.\",\n\t}\n}\n\n# The authentication.k8s.io/v1beta1 version is deprecated
    in 1.19. Migrate to use authentication.k8s.io/v1 instead\nmain[return] {\n\tinput.apiVersion
    == \"authentication.k8s.io/v1beta1\"\n\treturn := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\":
    input.metadata.namespace,\n\t\t\"Kind\": input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\":
    \"API authentication.k8s.io/v1beta1 is deprecated in Kubernetes 1.19, use authentication.k8s.io/v1
    instead.\",\n\t}\n}\n\n# The authorization.k8s.io/v1beta1 version is deprecated
    in 1.19. Migrate to use authorization.k8s.io/v1 instead\nmain[return] {\n\tinput.apiVersion
    == \"authorization.k8s.io/v1beta1\"\n\treturn := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\":
    input.metadata.namespace,\n\t\t\"Kind\": input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\":
    \"API authorization.k8s.io/v1beta1 is deprecated in Kubernetes 1.19, use authorization.k8s.io/v1
    instead.\",\n\t}\n}\n\n# The autoscaling/v2beta1 version is deprecated in 1.19.
    Migrate to use autoscaling/v2beta2 instead\nmain[return] {\n\tinput.apiVersion ==
    \"autoscaling/v2beta1\"\n\treturn := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\":
    input.metadata.namespace,\n\t\t\"Kind\": input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\":
    \"API autoscaling/v2beta1 is deprecated in Kubernetes 1.19, use autoscaling/v2beta2
    instead.\",\n\t}\n}\n\n# The coordination.k8s.io/v1beta1 version is deprecated in
    1.19. Migrate to use coordination.k8s.io/v1 instead\nmain[return] {\n\tinput.apiVersion
    == \"coordination.k8s.io/v1beta1\"\n\treturn := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\":
    input.metadata.namespace,\n\t\t\"Kind\": input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\":
    \"API coordination.k8s.io/v1beta1 is deprecated in Kubernetes 1.19, use coordination.k8s.io/v1
    instead.\",\n\t}\n}\n\n# The storage.k8s.io/v1beta1 version is deprecated in 1.19.
    Migrate to use storage.k8s.io/v1 instead\nmain[return] {\n\tinput.apiVersion ==
    \"storage.k8s.io/v1beta1\"\n\treturn := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\":
    input.metadata.namespace,\n\t\t\"Kind\": input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\":
    \"API storage.k8s.io/v1beta1 is deprecated in Kubernetes 1.19, use storage.k8s.io/v1
    instead.\",\n\t}\n}\n"
  kubernetes-1.20.rego: "package kove.deprecations\n\n# Based on https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.16.md\n\n#
    Ingress resources will no longer be served from extensions/v1beta1 in v1.20. Migrate
    use to the networking.k8s.io/v1beta1 API, available since v1.14.\nmain[return] {\n\tinput.apiVersion
    == \"extensions/v1beta1\"\n\tinput.kind == \"Ingress\"\n\treturn := {\n\t\t\"Name\":
    input.metadata.name,\n\t\t\"Namespace\": get_default(input.metadata, \"namespace\",
    \"<undefined>\"),\n\t\t\"Kind\": input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\":
    \"API extensions/v1beta1 for Ingress is deprecated from Kubernetes 1.20, use networking.k8s.io/v1beta1
    instead.\",\n\t}\n}\n\n# All resources will no longer be served from rbac.authorization.k8s.io/v1alpha1
    and rbac.authorization.k8s.io/v1beta1 in 1.20. Migrate to use rbac.authorization.k8s.io/v1
    instead\nmain[return] {\n\tapis := [\"rbac.authorization.k8s.io/v1alpha1\", \"rbac.authorization.k8s.io/v1beta1\"]\n\tinput.apiVersion
    == apis[_]\n\treturn := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\":
    input.metadata.namespace,\n\t\t\"Kind\": input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\":
    sprintf(\"API %s is deprecated from Kubernetes 1.20, use rbac.authorization.k8s.io/v1
    instead.\", [input.apiVersion]),\n\t}\n}\n"
  kubernetes-1.22.rego: "package kove.deprecations\n\n# Based on https://github.com/kubernetes/kubernetes/issues/82021\n\n#
    The admissionregistration.k8s.io/v1beta1 versions of MutatingWebhookConfiguration
    and ValidatingWebhookConfiguration are deprecated in 1.19. Migrate to use admissionregistration.k8s.io/v1
    instead\nmain[return] {\n\tkinds := [\"MutatingWebhookConfiguration\", \"ValidatingWebhookConfiguration\"]\n\tinput.apiVersion
    == \"admissionregistration.k8s.io/v1beta1\"\n\tinput.kind == kinds[_]\n\treturn
    := {\n\t\t\"Name\": input.metadata.name,\n\t\t\"Namespace\": input.metadata.namespace,\n\t\t\"Kind\":
    input.kind,\n\t\t\"ApiVersion\": input.apiVersion,\n\t\t\"RuleSet\": \"API admissionregistration.k8s.io/v1beta1
    is deprecated in Kubernetes 1.22, use admissionregistration.k8s.io/v1 instead.\",\n\t}\n}\n"
---
# Source: kove-deprecations/charts/kove/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kove-deprecations
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["get", "watch", "list"]
---
# Source: kove-deprecations/charts/kove/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kove-deprecations
  namespace: default
subjects:
- kind: ServiceAccount
  name: kove-deprecations
  namespace: default
roleRef:
  kind: ClusterRole
  name: kove-deprecations
  apiGroup: rbac.authorization.k8s.io
---
# Source: kove-deprecations/charts/kove/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kove-deprecations
  namespace: default
  labels:
    app: kove
    helm.sh/chart: kove-0.1.3
    app.kubernetes.io/name: kove
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kove
    app.kubernetes.io/instance: my-release
---
# Source: kove-deprecations/charts/kove/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kove-deprecations
  namespace: default
  labels:
    app: kove
    helm.sh/chart: kove-0.1.3
    app.kubernetes.io/name: kove
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kove
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kove
        app.kubernetes.io/instance: my-release
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: kove-deprecations
      automountServiceAccountToken: true
      containers:
        - name: kove
          image: "ghcr.io/cmacrae/kove:v0.1.0"
          args: [ "-config", "/config/config.yaml" ]
          volumeMounts:
          - name: config
            mountPath: "/config"
            readOnly: true
          - name: policies
            mountPath: "/policies"
            readOnly: true
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "/healthz"
              port: http
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: kove-deprecations-config
        - name: policies
          configMap:
            name: kove-deprecations-policies
