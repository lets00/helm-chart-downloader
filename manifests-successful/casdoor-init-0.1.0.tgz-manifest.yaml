---
# Source: casdoor-init/charts/casdoor/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-casdoor
  labels:
    helm.sh/chart: casdoor-v1.511.0
    app.kubernetes.io/name: casdoor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.511.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: casdoor-init/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-casdoor-init
  labels:
    helm.sh/chart: casdoor-init-0.1.0
    app.kubernetes.io/name: casdoor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: casdoor-init/charts/casdoor/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-casdoor-config
  labels:
    helm.sh/chart: casdoor-v1.511.0
    app.kubernetes.io/name: casdoor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.511.0"
    app.kubernetes.io/managed-by: Helm
data:
  app.conf: 
    |
      appname = casdoor
      httpport = 8000
      runmode = dev
      SessionOn = true
      copyrequestbody = true
      driverName = sqlite
      dataSourceName = "file:ent?mode=memory&cache=shared&_fk=1"
      dbName = casdoor
      redisEndpoint =
      defaultStorageProvider =
      isCloudIntranet = false
      authState = "casdoor"
      socks5Proxy = ""
      verificationCodeTimeout = 10
      initScore = 0
      logPostOnly = true
      origin =
      enableGzip = true
---
# Source: casdoor-init/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-casdoor-init-config
  labels:
    helm.sh/chart: casdoor-init-0.1.0
    app.kubernetes.io/name: casdoor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    applications:
    - id: wallet
      name: Wallet
    - id: control-plane
      name: Control Plane
    - id: http-data-plane
      name: HTTP Data Plane
    organization:
      id: TSG
      name: TSG
      overwrite:
        passwordType: argon2id
    roles:
    - id: wallet_view_did
      name: Wallet View Did
      users:
      - admin
      - wallet
    - id: wallet_manage_keys
      name: Wallet Manage Keys
      users:
      - admin
      - wallet
    - id: wallet_view_own_credentials
      name: Wallet View Own Credentials
      users:
      - admin
      - wallet
    - id: wallet_view_all_credentials
      name: Wallet View All Credentials
      users:
      - admin
      - wallet
    - id: wallet_manage_own_credentials
      name: Wallet Manage Own Credentials
      users:
      - admin
      - wallet
    - id: wallet_manage_all_credentials
      name: Wallet Manage All Credentials
      users:
      - admin
      - wallet
    - id: wallet_issue_credentials
      name: Wallet Issue Credentials
      users:
      - admin
      - wallet
      - control-plane
    - id: wallet_view_presentations
      name: Wallet View Presentations
      users:
      - admin
      - wallet
    - id: wallet_manage_clients
      name: Wallet Manage Clients
      users:
      - admin
      - wallet
    - id: controlplane_admin
      name: Controlplane Admin
      users:
      - admin
      - control-plane
    - id: controlplane_dataplane
      name: Controlplane Dataplane
      users:
      - admin
      - control-plane
      - http-data-plane
    url: null
    users:
    - isAdmin: true
      secretName: casdoor-admin-secret
      username: admin
---
# Source: casdoor-init/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-casdoor-init-role
  labels:
    helm.sh/chart: casdoor-init-0.1.0
    app.kubernetes.io/name: casdoor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Source: casdoor-init/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-casdoor-init-binding
  labels:
    helm.sh/chart: casdoor-init-0.1.0
    app.kubernetes.io/name: casdoor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: my-release-casdoor-init
  namespace: casdoor-init-0.1.0.tgz
roleRef:
 kind: Role
 name: my-release-casdoor-init-role
 apiGroup: rbac.authorization.k8s.io
---
# Source: casdoor-init/charts/casdoor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-casdoor
  labels:
    helm.sh/chart: casdoor-v1.511.0
    app.kubernetes.io/name: casdoor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.511.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: casdoor
    app.kubernetes.io/instance: my-release
---
# Source: casdoor-init/charts/casdoor/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-casdoor
  labels:
    helm.sh/chart: casdoor-v1.511.0
    app.kubernetes.io/name: casdoor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.511.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: casdoor
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/config: 529bc7ea51d30d00fefc46d24be7446d0637939827bccc1c3f03755f70059470
      labels:
        app.kubernetes.io/name: casdoor
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-casdoor
      securityContext:
        {}
      containers:
        - name: casdoor
          securityContext:
            {}
          image: "casbin/casdoor:v1.511.0"
          imagePullPolicy: IfNotPresent
          # command: ["sleep", "100000000"]
          env:
            - name: RUNNING_IN_DOCKER
              value: "true"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          
          livenessProbe:
            httpGet:
              path: /
              port: http
          
          
          readinessProbe:
            httpGet:
              path: /
              port: http
          
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /conf
        
      volumes:
        - name: config-volume
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: my-release-casdoor-config
                  items:
                    - key: app.conf
                      path: app.conf
---
# Source: casdoor-init/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-casdoor-init
  labels:
    helm.sh/chart: casdoor-init-0.1.0
    app.kubernetes.io/name: casdoor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  template:
    spec:
      serviceAccountName: my-release-casdoor-init
      restartPolicy: "OnFailure"
      containers:
      - image: docker.nexus.dataspac.es/dsp/utils/casdoor-init:main
        name: casdoor-init
        imagePullPolicy: Always
        args: [ "while true; do sleep 5; done;" ]
        volumeMounts:
        - name: init-config
          mountPath: /app/config.yaml
          subPath: config.yaml
      volumes:
      - name: init-config
        configMap:
          name: my-release-casdoor-init-config
---
# Source: casdoor-init/charts/casdoor/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-casdoor-test-connection"
  labels:
    helm.sh/chart: casdoor-v1.511.0
    app.kubernetes.io/name: casdoor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v1.511.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-casdoor:8000']
  restartPolicy: Never
