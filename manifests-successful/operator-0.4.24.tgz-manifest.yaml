---
# Source: operator/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-operator
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: operator/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-operator-config
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
data:
  controller_manager_config.yaml: |
    map[apiVersion:controller-runtime.sigs.k8s.io/v1alpha1 health:map[healthProbeBindAddress::8081] kind:ControllerManagerConfig leaderElection:map[leaderElect:true resourceName:aa9fc693.vectorized.io] metrics:map[bindAddress:127.0.0.1:8080] webhook:map[port:9443]]
---
# Source: operator/templates/clusterrole_metrics.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-operator-metrics-reader
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: operator/templates/clusterrole_proxy.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-operator-proxy-role
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: operator/templates/clusterrole_proxy_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-operator-proxy-role
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: my-release-operator
  namespace: operator-0.4.24.tgz
---
# Source: operator/templates/extra_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-operator-pvc
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - list
  - delete
---
# Source: operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-operator-election-role
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
# Source: operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-operator
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
rules:
- apiGroups:
    - ""
  resources:
    - persistentvolumeclaims
  verbs:
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - ""
  resources:
    - pods
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - apps
  resources:
    - deployments
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - apps
  resources:
    - replicasets
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - apps
  resources:
    - statefulsets
  verbs:
    - list
    - watch
    - create
    - delete
    - get
    - patch
    - update
- apiGroups:
    - apps
  resources:
    - statefulsets/status
  verbs:
    - patch
    - update
- apiGroups:
    - batch
  resources:
    - jobs
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - cert-manager.io
  resources:
    - certificates
  verbs:
    - create
    - delete
    - get
    - patch
    - update
- apiGroups:
    - cert-manager.io
  resources:
    - issuers
  verbs:
    - create
    - delete
    - get
    - patch
    - update
- apiGroups:
    - cluster.redpanda.com
  resources:
    - redpandas
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - cluster.redpanda.com
  resources:
    - redpandas/finalizers
  verbs:
    - update
- apiGroups:
    - cluster.redpanda.com
  resources:
    - redpandas/status
  verbs:
    - get
    - patch
    - update
- apiGroups:
    - coordination.k8s.io
  resources:
    - leases
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - ""
  resources:
    - configmaps
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - ""
  resources:
    - events
  verbs:
    - create
    - patch
- apiGroups:
    - ""
  resources:
    - secrets
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - ""
  resources:
    - serviceaccounts
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - ""
  resources:
    - pods
  verbs:
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - ""
  resources:
    - pods/status
  verbs:
    - patch
    - update
- apiGroups:
    - ""
  resources:
    - services
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - helm.toolkit.fluxcd.io
  resources:
    - helmreleases
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - helm.toolkit.fluxcd.io
  resources:
    - helmreleases/finalizers
  verbs:
    - update
- apiGroups:
    - helm.toolkit.fluxcd.io
  resources:
    - helmreleases/status
  verbs:
    - get
    - patch
    - update
- apiGroups:
    - monitoring.coreos.com
  resources:
    - podmonitors
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - monitoring.coreos.com
  resources:
    - servicemonitors
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - networking.k8s.io
  resources:
    - ingresses
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - policy
  resources:
    - poddisruptionbudgets
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - rbac.authorization.k8s.io
  resources:
    - rolebindings
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - rbac.authorization.k8s.io
  resources:
    - roles
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - redpanda.vectorized.io
  resources:
    - clusters
  verbs:
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - redpanda.vectorized.io
  resources:
    - consoles
  verbs:
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - source.toolkit.fluxcd.io
  resources:
    - buckets
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - source.toolkit.fluxcd.io
  resources:
    - gitrepositories
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - source.toolkit.fluxcd.io
  resources:
    - gitrepository
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - source.toolkit.fluxcd.io
  resources:
    - gitrepository/finalizers
  verbs:
    - create
    - delete
    - get
    - patch
    - update
- apiGroups:
    - source.toolkit.fluxcd.io
  resources:
    - gitrepository/status
  verbs:
    - get
    - patch
    - update
- apiGroups:
    - source.toolkit.fluxcd.io
  resources:
    - helmcharts
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - source.toolkit.fluxcd.io
  resources:
    - helmcharts/finalizers
  verbs:
    - create
    - delete
    - get
    - patch
    - update
- apiGroups:
    - source.toolkit.fluxcd.io
  resources:
    - helmcharts/status
  verbs:
    - get
    - patch
    - update
- apiGroups:
    - source.toolkit.fluxcd.io
  resources:
    - helmrepositories
  verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - source.toolkit.fluxcd.io
  resources:
    - helmrepositories/finalizers
  verbs:
    - create
    - delete
    - get
    - patch
    - update
- apiGroups:
    - source.toolkit.fluxcd.io
  resources:
    - helmrepositories/status
  verbs:
    - get
    - patch
    - update
- apiGroups:
    - cluster.redpanda.com
  resources:
    - topics
  verbs:
    - get
    - list
    - patch
    - update
    - watch
- apiGroups:
    - cluster.redpanda.com
  resources:
    - topics/finalizers
  verbs:
    - update
- apiGroups:
    - cluster.redpanda.com
  resources:
    - topics/status
  verbs:
    - get
    - patch
    - update
---
# Source: operator/templates/extra_role.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-operator-pvc
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-operator-pvc
subjects:
  - kind: ServiceAccount
    name: my-release-operator
    namespace: operator-0.4.24.tgz
---
# Source: operator/templates/role_binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-operator-election-rolebinding
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
subjects:
- kind: ServiceAccount
  name: my-release-operator
  namespace: operator-0.4.24.tgz
roleRef:
  kind: Role
  name: my-release-operator-election-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: operator/templates/role_binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: my-release-operator
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-operator
subjects:
  - kind: ServiceAccount
    name: my-release-operator
    namespace: operator-0.4.24.tgz
---
# Source: operator/templates/service_metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: operator-metrics-service
  labels:
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/name: operator
    app.kubernetes.io/instance: my-release
---
# Source: operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-operator
  labels:
    
    app.kubernetes.io/name: operator
    helm.sh/chart: operator-0.4.24
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v2.1.20-24.1.2"
    app.kubernetes.io/managed-by: Helm
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: operator
        app.kubernetes.io/instance: my-release
      annotations:
    spec:
      serviceAccountName: my-release-operator
      containers:
      - name: manager
        image: "docker.redpanda.com/redpandadata/redpanda-operator:v2.1.20-24.1.2"
        imagePullPolicy: IfNotPresent
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --configurator-tag=v2.1.20-24.1.2
        - --configurator-base-image=docker.redpanda.com/redpandadata/configurator
        - --webhook-enabled=false
        - --namespace=operator-0.4.24.tgz
        - --log-level=info
        command:
        - /manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
        resources:
            {}
      - name: kube-rbac-proxy
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.14.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8443
          name: https
      securityContext:
        runAsUser: 65532
      terminationGracePeriodSeconds: 10
---
# Source: operator/templates/tests/create-topic-with-client-auth.yaml
apiVersion: v1
kind: Pod
metadata:
  name: create-test-topic-tls
  annotations:
    helm.sh/hook: test
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "2"
spec:
  serviceAccount: my-release-operator
  containers:
    - name: rpk
      image: docker.redpanda.com/redpandadata/redpanda:latest
      env:
        - name: KUBECTL_VERSION
          value: v1.27.4
      command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          # Setup for the test
          mkdir -p /etc/redpanda
          cat > /etc/redpanda/redpanda.yaml << EOF
          redpanda:
          rpk:
            kafka_api:
              brokers:
                - cluster-tls-0.cluster-tls.operator-0.4.24.tgz.svc.cluster.local:9092
                - cluster-tls-1.cluster-tls.operator-0.4.24.tgz.svc.cluster.local:9092
                - cluster-tls-2.cluster-tls.operator-0.4.24.tgz.svc.cluster.local:9092
              tls:
                enabled: true
                key_file: /tmp/tls.key
                cert_file: /tmp/tls.crt
                truststore_file: /tmp/ca.crt
          EOF
          curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /tmp/kubectl-${KUBECTL_VERSION}
          echo "$(curl -Ls https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256) /tmp/kubectl-${KUBECTL_VERSION}" | sha256sum --check
          chmod +x /tmp/kubectl-${KUBECTL_VERSION}
          KUBECTL=/tmp/kubectl-${KUBECTL_VERSION}

          # Create the Redpanda resource
          $KUBECTL -n operator-0.4.24.tgz apply -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha1
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            chartRef:
              chartVersion: ">4.0.0"
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v23.2.2
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: true
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          EOF

          # Wait for things to be ready
          $KUBECTL -n operator-0.4.24.tgz wait --for=condition=Ready --timeout=10m redpanda/cluster-tls
          $KUBECTL -n operator-0.4.24.tgz wait --for=jsonpath='{.metadata.name}'=cluster-tls-user-client --timeout=10m secret/cluster-tls-user-client
          $KUBECTL -n operator-0.4.24.tgz get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.crt") }}' > /tmp/tls.crt
          $KUBECTL -n operator-0.4.24.tgz get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "tls.key") }}' > /tmp/tls.key
          $KUBECTL -n operator-0.4.24.tgz get secret cluster-tls-user-client -o go-template='{{ base64decode (index .data "ca.crt") }}' > /tmp/ca.crt

          # Make sure Redpanda works
          rpk topic create test -v

          # Clean up
          $KUBECTL -n operator-0.4.24.tgz delete -f - <<EOF
          apiVersion: cluster.redpanda.com/v1alpha1
          kind: Redpanda
          metadata:
            name: cluster-tls
          spec:
            chartRef:
              chartVersion: ">4.0.0"
            clusterSpec:
              console:
                enabled: false
              image:
                repository: docker.redpanda.com/redpandadata/redpanda
                tag: v23.2.2
              listeners:
                admin:
                  external: {}
                  port: 9644
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                http:
                  authenticationMethod: none
                  enabled: true
                  external: {}
                  kafkaEndpoint: kafka-default
                  port: 8082
                  tls:
                    cert: ""
                    enabled: false
                    requireClientAuth: false
                kafka:
                  authenticationMethod: none
                  external: {}
                  port: 9092
                  tls:
                    cert: kafka-internal-0
                    enabled: true
                    requireClientAuth: true
                rpc:
                  port: 33145
              logging:
                logLevel: trace
                usageStats:
                  enabled: false
              resources:
                cpu:
                  cores: 1
                memory:
                  container:
                    max: 2Gi
                    min: 2Gi
              statefulset:
                replicas: 3
              storage:
                persistentVolume:
                  enabled: true
                  size: 100Gi
              tls:
                certs:
                  kafka-internal-0:
                    caEnabled: true
                enabled: true
          ---
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: cluster-tls-user-client
          spec:
            emailAddresses:
              - test@domain.dom
            duration: 43800h0m0s
            issuerRef:
              group: cert-manager.io
              kind: Issuer
              name: cluster-tls-kafka-internal-0-root-issuer
            privateKey:
              algorithm: ECDSA
              size: 256
            secretName: cluster-tls-user-client
          EOF
          $KUBECTL -n operator-0.4.24.tgz delete pvc --all
  restartPolicy: Never
