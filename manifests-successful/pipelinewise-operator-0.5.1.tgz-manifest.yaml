---
# Source: pipelinewise-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-pipelinewise-operator
  labels:
    helm.sh/chart: pipelinewise-operator-0.5.1
    app.kubernetes.io/name: pipelinewise-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.5.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: pipelinewise-operator/templates/pipelinewisejob_editor_role.yaml
# permissions for end users to edit pipelinewisejobs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-pipelinewise-operator-editor-role
rules:
- apiGroups:
  - batch.pipelinewise
  resources:
  - pipelinewisejobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch.pipelinewise
  resources:
  - pipelinewisejobs/status
  verbs:
  - get
---
# Source: pipelinewise-operator/templates/pipelinewisejob_viewer_role.yaml
# permissions for end users to view pipelinewisejobs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-pipelinewise-operator-viewer-role
rules:
- apiGroups:
  - batch.pipelinewise
  resources:
  - pipelinewisejobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch.pipelinewise
  resources:
  - pipelinewisejobs/status
  verbs:
  - get
---
# Source: pipelinewise-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: my-release-pipelinewise-operator-manager-role
rules:
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - delete
  - deletecollection
  - get
  - list
  - watch
- apiGroups:
  - batch.pipelinewise
  resources:
  - pipelinewisejobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch.pipelinewise
  resources:
  - pipelinewisejobs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
---
# Source: pipelinewise-operator/templates/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-pipelinewise-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-pipelinewise-operator-manager-role
subjects:
- kind: ServiceAccount
  name: my-release-pipelinewise-operator
  namespace: pipelinewise-operator-0.5.1.tgz
---
# Source: pipelinewise-operator/templates/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-pipelinewise-operator-leader-election-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: pipelinewise-operator/templates/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-pipelinewise-operator-leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: my-release-pipelinewise-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: my-release-pipelinewise-operator
  namespace: pipelinewise-operator-0.5.1.tgz
---
# Source: pipelinewise-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-pipelinewise-operator
  labels:
    helm.sh/chart: pipelinewise-operator-0.5.1
    app.kubernetes.io/name: pipelinewise-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pipelinewise-operator
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pipelinewise-operator
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-pipelinewise-operator
      securityContext:
        {}
      containers:
        - name: pipelinewise-operator
          securityContext:
            {}
          image: "dirathea/pipelinewise-operator:v0.5.0"
          imagePullPolicy: IfNotPresent
          command:
          - /manager
          args:
          - --enable-leader-election
          env:
          - name: PIPELINEWISE_VERSION
            value: master
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
      terminationGracePeriodSeconds: 10
---
# Source: pipelinewise-operator/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-pipelinewise-operator-test-connection"
  labels:
    helm.sh/chart: pipelinewise-operator-0.5.1
    app.kubernetes.io/name: pipelinewise-operator
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.5.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-pipelinewise-operator:80']
  restartPolicy: Never
