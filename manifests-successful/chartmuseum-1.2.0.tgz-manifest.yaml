---
# Source: chartmuseum/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-chartmuseum
  labels:
    helm.sh/chart: chartmuseum-1.2.0
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.15.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
---
# Source: chartmuseum/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-chartmuseum
  labels:
    helm.sh/chart: chartmuseum-1.2.0
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.15.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    name: http
    protocol: TCP
    
  selector:
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: my-release
---
# Source: chartmuseum/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-chartmuseum
  labels:
    helm.sh/chart: chartmuseum-1.2.0
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.15.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: chartmuseum
      app.kubernetes.io/instance: my-release
  replicas: 1
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chartmuseum
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        fsGroup: 1000      
      containers:
      - name: chartmuseum
        image: ghcr.io/helm/chartmuseum:v0.15.0
        imagePullPolicy: IfNotPresent
        securityContext:
          {}
        env:
        - name: "CHART_POST_FORM_FIELD_NAME"
          value: "chart"
        - name: "DISABLE_API"
          value: "true"
        - name: "LOG_JSON"
          value: "true"
        - name: "PROV_POST_FORM_FIELD_NAME"
          value: "prov"
        - name: "STORAGE"
          value: "local"
        args:
        - --port=8080
        - --storage-local-rootdir=/storage
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /storage
          name: storage-volume
      serviceAccountName: default
      automountServiceAccountToken: false
      volumes:
      - name: storage-volume
        emptyDir: {}
