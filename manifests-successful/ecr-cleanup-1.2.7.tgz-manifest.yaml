---
# Source: ecr-cleanup/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-ecr-cleanup
  labels:
    app.kubernetes.io/name: ecr-cleanup
    helm.sh/chart: ecr-cleanup-1.2.7
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: ecr-cleanup/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-ecr-cleanup
  labels:
    app.kubernetes.io/name: ecr-cleanup
    helm.sh/chart: ecr-cleanup-1.2.7
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - "" # core
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
---
# Source: ecr-cleanup/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-ecr-cleanup
  labels:
    app.kubernetes.io/name: ecr-cleanup
    helm.sh/chart: ecr-cleanup-1.2.7
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release-ecr-cleanup
subjects:
  - kind: ServiceAccount
    name: my-release-ecr-cleanup
    namespace: "ecr-cleanup-1.2.7.tgz"
---
# Source: ecr-cleanup/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ecr-cleanup
  labels:
    app.kubernetes.io/name: ecr-cleanup
    helm.sh/chart: ecr-cleanup-1.2.7
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ecr-cleanup
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ecr-cleanup
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-ecr-cleanup
      containers:
        - name: ecr-cleanup
          image: "danielfm/kube-ecr-cleanup-controller:0.1.7"
          imagePullPolicy: Always
          args:
            - --dry-run=true
            - --logtostderr
            - --max-images=900
            - --namespaces=default
            - --region=us-east-1
            - --repos=test-repo
            - --v=1
            - --interval=60
            - --registry-id=
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
