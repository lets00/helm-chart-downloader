---
# Source: pdc-portal/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-pdc-portal
  labels:
    app.kubernetes.io/name: pdc-portal
    helm.sh/chart: pdc-portal-2.3.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  pdc-portal.yml: |-
    cb:
      endpoint: https://localhost/ngsi-ld/v1
    client:
      crt: <pdc-certs>
      id: EU.EORI.NLPACKETDEL
      key: <pdc-private-key>
    express:
      port: 7000
    external:
      host: http://localhost
    idp:
    - authorize_endpoint: https://idp.happypets.com/authorize
      id: EU.EORI.NLHAPPYPETS
      name: Happy Pets Inc.
      token_endpoint: https://idp.happypets.com/token
      url: https://idp.happypets.com
    - authorize_endpoint: https://idp.nocheaper.com/authorize
      id: EU.EORI.NLNOCHEAPER
      name: No Cheaper Inc.
      token_endpoint: https://idp.nocheaper.com/token
      url: https://idp.nocheaper.com
    oidc:
      acr: urn:http://eidas.europa.eu/LoA/NotNotified/high
      redirect_path: /openid_connect1.0/return
    title: Packet Delivery Portal
---
# Source: pdc-portal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-pdc-portal
  labels:
    
    app.kubernetes.io/name: pdc-portal
    helm.sh/chart: pdc-portal-2.3.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 7000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: pdc-portal
    app.kubernetes.io/instance: my-release
---
# Source: pdc-portal/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-pdc-portal
  labels:
    
    app.kubernetes.io/name: pdc-portal
    helm.sh/chart: pdc-portal-2.3.2
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: pdc-portal
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        
        app.kubernetes.io/name: pdc-portal
        helm.sh/chart: pdc-portal-2.3.2
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "2.0.0"
        app.kubernetes.io/managed-by: Helm
    spec: 
      serviceAccountName: default
      containers:
        - name: pdc-portal
          imagePullPolicy: IfNotPresent
          image: "i4trust/pdc-portal:2.0.0"
          ports:
            - name: http
              containerPort: 7000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 7000
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: 7000
            initialDelaySeconds: 21
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            null
          volumeMounts:
            - name: config-volume
              mountPath: /home/portal/config/pdc-portal.yml
              subPath: pdc-portal.yml
      volumes:
        - name: config-volume
          configMap:
            name: my-release-pdc-portal
            items:
              - key: pdc-portal.yml
                path: pdc-portal.yml
