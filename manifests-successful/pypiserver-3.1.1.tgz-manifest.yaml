---
# Source: pypiserver/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
stringData:
  .htpasswd: |-
metadata:
  name: my-release-pypiserver
  labels:
    app.kubernetes.io/name: pypiserver
    helm.sh/chart: pypiserver-3.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
---
# Source: pypiserver/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-pypiserver
  labels:
    app.kubernetes.io/name: pypiserver
    helm.sh/chart: pypiserver-3.1.1
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080

  selector:
    app.kubernetes.io/name: pypiserver
    app.kubernetes.io/instance: my-release
---
# Source: pypiserver/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-pypiserver
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: my-release
    helm.sh/chart: pypiserver-3.1.1
    app.kubernetes.io/name: pypiserver
spec:
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: pypiserver
        app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pypiserver
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/secret: 7ca63b96942278dfe0edc4a8d3b1c1591a790a3ad60ce8194c832aef41e03cdb
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 1000
      containers:
        - name: pypiserver
          image: "pypiserver/pypiserver:v1.3.2"
          imagePullPolicy: IfNotPresent
          command: ["pypi-server"]
          args:
            - --passwords=/config/.htpasswd
            - --authenticate=update
            - --port=8080
            - /data/packages
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /data/packages
              name: packages
              mountPropagation: None
            - mountPath: /config
              name: secrets
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            {}
      volumes:
        - name: secrets
          secret:
            secretName: my-release-pypiserver
        - name: packages
          emptyDir: {}
