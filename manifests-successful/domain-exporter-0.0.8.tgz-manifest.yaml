---
# Source: domain-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-domain-exporter
  labels:
    helm.sh/chart: domain-exporter-0.0.8
    app.kubernetes.io/name: domain-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.13"
    app.kubernetes.io/managed-by: Helm
---
# Source: domain-exporter/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-domain-exporter
  labels:
    helm.sh/chart: domain-exporter-0.0.8
    app.kubernetes.io/name: domain-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.13"
    app.kubernetes.io/managed-by: Helm
data:
  domains.yaml: |-
    domains:
      - google.com
      - goolge.co.uk
---
# Source: domain-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-domain-exporter
  labels:
    helm.sh/chart: domain-exporter-0.0.8
    app.kubernetes.io/name: domain-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.13"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9203
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: domain-exporter
    app.kubernetes.io/instance: my-release
---
# Source: domain-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-domain-exporter
  labels:
    helm.sh/chart: domain-exporter-0.0.8
    app.kubernetes.io/name: domain-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.13"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: domain-exporter
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "false"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9203"
      labels:
        app.kubernetes.io/name: domain-exporter
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-domain-exporter
      securityContext:
        fsGroup: 2000
      containers:
        - name: domain-exporter
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "ghcr.io/shift/domain_exporter:v0.1.13"
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: config
            mountPath: /config/
            readOnly: true
          ports:
            - name: http
              containerPort: 9203
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 10m
              memory: 8Mi
          env:
            - name: CONFIG
              value: /config/domains.yaml
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: my-release-domain-exporter
---
# Source: domain-exporter/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-domain-exporter-test-connection"
  labels:
    helm.sh/chart: domain-exporter-0.0.8
    app.kubernetes.io/name: domain-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.1.13"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-domain-exporter:9203']
  restartPolicy: Never
