---
# Source: dsmr-reader/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-dsmr-reader
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dsmr-reader
    app.kubernetes.io/version: 2021.06.01
    helm.sh/chart: dsmr-reader-6.4.0
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: dsmr-reader
    app.kubernetes.io/instance: my-release
---
# Source: dsmr-reader/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-dsmr-reader
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dsmr-reader
    app.kubernetes.io/version: 2021.06.01
    helm.sh/chart: dsmr-reader-6.4.0
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: dsmr-reader
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dsmr-reader
        app.kubernetes.io/instance: my-release
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: my-release-dsmr-reader
          image: "xirixiz/dsmr-reader-docker:amd64-2021.12.09"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: null
          env:
            - name: DJANGO_DATABASE_NAME
              value: dsmr-reader
            - name: DJANGO_DATABASE_PASSWORD
              value: dsmr-reader-pass
            - name: DJANGO_DATABASE_PORT
              value: "5432"
            - name: DJANGO_DATABASE_USER
              value: dsmr-reader
            - name: DJANGO_TIME_ZONE
              value: UTC
            - name: TZ
              value: UTC
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
