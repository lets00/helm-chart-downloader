---
# Source: prometheus/templates/clusterrole.yml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release
---
# Source: prometheus/templates/configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.52.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/managed-by: helm
data:
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    
    scrape_configs:
      - job_name: "node-exporter"
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [ __meta_kubernetes_endpoints_name ]
            regex: "node-exporter-service"
            action: keep
      ##########################################
      ##########################################
      ##########################################
      - job_name: "kubernetes-apiservers"
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [ __meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name ]
            action: keep
            regex: default;kubernetes;https
      ##########################################
      ##########################################
      ##########################################
      - job_name: "kubernetes-nodes"
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [ __meta_kubernetes_node_name ]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
      ##########################################
      ##########################################
      ##########################################
      - job_name: "kube-state-metrics"
        static_configs:
          - targets: [ "kube-state-metrics-service.default.svc.cluster.local:8080" ]
      ##########################################
      ##########################################
      ##########################################
      - job_name: "kubernetes-cadvisor"
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [ __meta_kubernetes_node_name ]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      ##########################################
      ##########################################
      ##########################################
      - job_name: "kubernetes-service-endpoints"
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scrape ]
            action: keep
            regex: true
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scheme ]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_path ]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [ __address__, __meta_kubernetes_service_annotation_prometheus_io_port ]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [ __meta_kubernetes_namespace ]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [ __meta_kubernetes_service_name ]
            action: replace
            target_label: kubernetes_name
      ##########################################
      ##########################################
      ##########################################
      - job_name: "kubernetes-pods"
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
            action: keep
            regex: true
          - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [ __meta_kubernetes_namespace ]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [ __meta_kubernetes_pod_name ]
            action: replace
            target_label: kubernetes_pod_name
---
# Source: prometheus/templates/clusterrole.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.52.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/managed-by: helm
rules:
  - apiGroups: [ "" ]
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
    verbs: [ "get", "list", "watch" ]
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
      - ingresses
    verbs: [ "get", "list", "watch" ]
  - nonResourceURLs: [ "/metrics" ]
    verbs: [ "get" ]
---
# Source: prometheus/templates/clusterrole.yml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.52.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/managed-by: helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: my-release
subjects:
  - kind: ServiceAccount
    name: my-release
    namespace: prometheus-1.6.0.tgz
---
# Source: prometheus/templates/service.yml
kind: Service
apiVersion: v1
metadata:
  name: my-release
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.52.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/managed-by: helm
spec:
  selector:
    app: my-release
  ports:
    - protocol: TCP
      port: 9090
      targetPort: prometheus
---
# Source: prometheus/templates/deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.52.0"
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/managed-by: helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-release
  template:
    metadata:
      labels:
        app: my-release
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "2.52.0"
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/managed-by: helm
    spec:
      serviceAccountName: my-release
      containers:
        - name: my-release
          image: "prom/prometheus:v2.52.0"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 1024Mi
              cpu: 300m
            requests:
              memory: 1024Mi
              cpu: 300m
          args:
            - "--storage.tsdb.retention.time=12h"
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - name: prometheus
              containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-storage-volume
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: my-release
