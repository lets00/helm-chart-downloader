---
# Source: activepieces/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-activepieces
  labels:
    helm.sh/chart: activepieces-0.1.6
    app.kubernetes.io/name: activepieces
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.26.1"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: activepieces/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-activepieces
  labels:
    helm.sh/chart: activepieces-0.1.6
    app.kubernetes.io/name: activepieces
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.26.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: activepieces
    app.kubernetes.io/instance: my-release
---
# Source: activepieces/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-activepieces
  labels:
    helm.sh/chart: activepieces-0.1.6
    app.kubernetes.io/name: activepieces
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.26.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: activepieces
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        helm.sh/chart: activepieces-0.1.6
        app.kubernetes.io/name: activepieces
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.26.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: my-release-activepieces
      securityContext:
        {}
      containers:
        - name: activepieces
          securityContext:
            {}
          image: "docker.io/activepieces/activepieces:0.23.0"
          imagePullPolicy: IfNotPresent
          env:
            
            - name: AP_FRONTEND_URL
              value: "https://activepieces.local:80"
            
            - name: AP_CLOUD_AUTH_ENABLED
              value: "true"
            - name: AP_API_KEY
              value: 11f7de1fab61f7aa69f3619cc25257f09d8d2f327ab2339d8f4a94c7415e72a3dd62280f22488f5e88d3d8e4b8f6c6efeddc841342d8b6621a6720d2c00711e8
            - name: AP_ENCRYPTION_KEY
              value: b93af1a810b3efd13ccac9f8bd4bdab4
            - name: AP_JWT_SECRET
              value: eace8171b8de00acc813591162319739fb549e300123236ce7e76a3e7520468cb
            
            - name: AP_QUEUE_MODE
              value: MEMORY
            
            
            - name: AP_DB_TYPE
              value: SQLITE3
            
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: activepieces/templates/ngrok-ingress.yaml
# ngrok Ingress Controller Configuration
---
# Source: activepieces/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-activepieces-test-connection"
  labels:
    helm.sh/chart: activepieces-0.1.6
    app.kubernetes.io/name: activepieces
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.26.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-activepieces:80']
  restartPolicy: Never
