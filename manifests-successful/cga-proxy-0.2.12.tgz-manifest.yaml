---
# Source: cga-proxy/templates/envoy/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-cga-proxy-envoy
  labels:
    helm.sh/chart: cga-proxy-0.2.12
    app.kubernetes.io/name: cga-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: envoy
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: listener
      protocol: TCP
      name: listener
  selector:
    app.kubernetes.io/name: cga-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: envoy
---
# Source: cga-proxy/templates/orchestrator/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-cga-proxy-orchestrator
  labels:
    helm.sh/chart: cga-proxy-0.2.12
    app.kubernetes.io/name: cga-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: orchestrator
spec:
  type: ClusterIP
  ports:
    - port: 50051
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: cga-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: orchestrator
---
# Source: cga-proxy/templates/envoy/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-cga-proxy-envoy
  labels:
    helm.sh/chart: cga-proxy-0.2.12
    app.kubernetes.io/name: cga-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: envoy
spec:
  revisionHistoryLimit: 10
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cga-proxy
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: envoy
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: cga-proxy
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: envoy
    spec:
      securityContext:
        {}
      priorityClassName: 
      containers:
        - name: envoy
          securityContext:
            {}
          image: fydeinc/envoyproxy:1.13.8.2@sha256:9fadb0a491db89393736a90188c8a2f01b57835abdd4cd14684f82fd198a7d50
          imagePullPolicy: IfNotPresent
          env:
            - name: FYDE_PROXY_HOST
              value: my-release-cga-proxy-orchestrator
            - name: FYDE_PROXY_PORT
              value: "50051"
          ports:
            - name: listener
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: listener
          resources:
            {}
      nodeSelector:
        {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: envoy
            topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: envoy
                topologyKey: failure-domain.beta.kubernetes.io/zone
      tolerations:
        []
---
# Source: cga-proxy/templates/orchestrator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-cga-proxy-orchestrator
  labels:
    helm.sh/chart: cga-proxy-0.2.12
    app.kubernetes.io/name: cga-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: orchestrator
spec:
  revisionHistoryLimit: 10
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cga-proxy
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: orchestrator
  template:
    metadata:
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/name: cga-proxy
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/component: orchestrator
    spec:
      securityContext:
        {}
      priorityClassName: 
      containers:
        - name: orchestrator
          securityContext:
            {}
          image: fydeinc/fydeproxy:1.3.17@sha256:80e7c00bc9e7cdc04af8821a41db3ea68aa76629ac1024da812b371f48d32a6d
          imagePullPolicy: IfNotPresent
          env:
            - name: FYDE_GRPC_LISTENER
              value: "[::]:50051"
            - name: FYDE_ENROLLMENT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: my-release-cga-proxy-orchestrator
                  key: enrollmentToken
            - name: FYDE_PROXY_PROMETHEUS
              value: "9010"
            - name: FYDE_ENVOY_PROMETHEUS
              value: "9000"
            # Envoy reads the configuration from the orchestrator
            - name: FYDE_ENVOY_LISTENER_PORT
              value: "8000"
          ports:
            - name: grpc
              containerPort: 50051
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            tcpSocket:
              port: grpc
          resources:
            {}
      nodeSelector:
        {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: orchestrator
            topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: orchestrator
                topologyKey: failure-domain.beta.kubernetes.io/zone
      tolerations:
        []
