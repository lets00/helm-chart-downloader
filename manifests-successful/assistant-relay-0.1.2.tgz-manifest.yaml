---
# Source: assistant-relay/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-assistant-relay
  labels:
    helm.sh/chart: assistant-relay-0.1.2
    app.kubernetes.io/name: assistant-relay
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.2.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: assistant-relay/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-assistant-relay
  labels:
    helm.sh/chart: assistant-relay-0.1.2
    app.kubernetes.io/name: assistant-relay
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.2.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "200Mi"
---
# Source: assistant-relay/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-assistant-relay
  labels:
    helm.sh/chart: assistant-relay-0.1.2
    app.kubernetes.io/name: assistant-relay
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.2.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: assistant-relay
    app.kubernetes.io/instance: my-release
---
# Source: assistant-relay/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-assistant-relay
  labels:
    helm.sh/chart: assistant-relay-0.1.2
    app.kubernetes.io/name: assistant-relay
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "3.2.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: assistant-relay
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: assistant-relay
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-assistant-relay
      securityContext:
        {}
      initContainers:
        - name: init-config
          image: busybox:1.28
          # command: ['sh', '-c', 'ln -s /configs/config.j /assistant_relay/bin']
          command: ['sh', '-c', '([[ -e /configs/config.json ]] || echo "{\"port\": 3000}" > /configs/config.json)']
          volumeMounts:
            - name: configs
              mountPath: /configs/
      containers:
        - name: assistant-relay
          securityContext:
            {}
          image: "apipa169/assistant-relay:3.2.0.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: configs
              mountPath: /assistant_relay/bin/config.json
              subPath: config.json
          resources:
            {}
      volumes:
        - name: configs
          persistentVolumeClaim:
            claimName: my-release-assistant-relay
