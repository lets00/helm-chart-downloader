---
# Source: athens-proxy/templates/serviceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: athens-proxy-0.1.2
    app.kubernetes.io/name: athens-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-athens-proxy
---
# Source: athens-proxy/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-athens-proxy
type: Opaque
stringData:
  
  ATHENS_DISK_STORAGE_ROOT: "/var/lib/athens"
  
  ATHENS_STORAGE_TYPE: "disk"
---
# Source: athens-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: athens-proxy-0.1.2
    app.kubernetes.io/name: athens-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
  name: my-release-athens-proxy
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: athens-proxy
    app.kubernetes.io/instance: my-release
---
# Source: athens-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-athens-proxy
  labels:
    helm.sh/chart: athens-proxy-0.1.2
    app.kubernetes.io/name: athens-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: athens-proxy
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: athens-proxy
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: athens-proxy
          envFrom:
          - secretRef:
              name: my-release-athens-proxy
          securityContext:
            {}
          image: "docker.io/gomods/athens:v0.12.1"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: http
          ports:
          - name: http
            containerPort: 3000
            protocol: TCP
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /healthz
              port: http
          resources:
            {}
      nodeSelector:
        kubernetes.io/arch: amd64
      securityContext:
        {}
      serviceAccountName: my-release-athens-proxy
---
# Source: athens-proxy/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-athens-proxy-test-connection"
  labels:
    helm.sh/chart: athens-proxy-0.1.2
    app.kubernetes.io/name: athens-proxy
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.12.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-athens-proxy:3000']
  restartPolicy: Never
