---
# Source: k8s-object-syncer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-k8s-object-syncer
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: k8s-object-syncer/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  name: "my-release-k8s-object-syncer-cluster"
rules:
- verbs: ["list", "get", "watch"]
  apiGroups: [""]
  resources: ["namespaces"]
---
# Source: k8s-object-syncer/templates/target-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  name: "my-release-k8s-object-syncer-dst"
kind: ClusterRole
rules:
- apiGroups:
        - '*'
  resources:
        - '*'
  verbs: ["list", "get", "watch", "create", "delete", "patch", "update"]
---
# Source: k8s-object-syncer/templates/watch-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  name: "my-release-k8s-object-syncer-watch"
kind: ClusterRole
rules:
- apiGroups: ["sync.rustrial.org"]
  resources: ["objectsyncs", "objectsyncs/status"]
  verbs: ["list", "get", "watch", "create", "delete", "patch", "update"]
---
# Source: k8s-object-syncer/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  name: "my-release-k8s-object-syncer-cluster"
subjects:
- kind: ServiceAccount
  name: my-release-k8s-object-syncer
  namespace: k8s-object-syncer-0.1.10.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "my-release-k8s-object-syncer-cluster"
---
# Source: k8s-object-syncer/templates/target-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  name: "my-release-k8s-object-syncer-dst"
kind: ClusterRoleBinding
subjects:
- kind: ServiceAccount
  name: my-release-k8s-object-syncer
  namespace: k8s-object-syncer-0.1.10.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "my-release-k8s-object-syncer-dst"
---
# Source: k8s-object-syncer/templates/watch-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  name: "my-release-k8s-object-syncer-watch"
kind: ClusterRoleBinding
subjects:
- kind: ServiceAccount
  name: my-release-k8s-object-syncer
  namespace: k8s-object-syncer-0.1.10.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "my-release-k8s-object-syncer-watch"
---
# Source: k8s-object-syncer/templates/source-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  name: "my-release-k8s-object-syncer-source"
  namespace: "kube-public"
kind: Role
rules:
- apiGroups:
        - '*'
  resources:
        - '*'
  verbs: ["list", "get", "watch", "patch"]
---
# Source: k8s-object-syncer/templates/source-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  name: "my-release-k8s-object-syncer-source"
  namespace: "kube-system"
kind: Role
rules:
- apiGroups:
        - '*'
  resources:
        - '*'
  verbs: ["list", "get", "watch", "patch"]
---
# Source: k8s-object-syncer/templates/source-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  name: "my-release-k8s-object-syncer-source"
  namespace: "kube-public"
kind: RoleBinding
subjects:
- kind: ServiceAccount
  name: my-release-k8s-object-syncer
  namespace: k8s-object-syncer-0.1.10.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "my-release-k8s-object-syncer-source"
---
# Source: k8s-object-syncer/templates/source-roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  name: "my-release-k8s-object-syncer-source"
  namespace: "kube-system"
kind: RoleBinding
subjects:
- kind: ServiceAccount
  name: my-release-k8s-object-syncer
  namespace: k8s-object-syncer-0.1.10.tgz
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "my-release-k8s-object-syncer-source"
---
# Source: k8s-object-syncer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-k8s-object-syncer
  labels:
    helm.sh/chart: k8s-object-syncer-0.1.10
    app.kubernetes.io/name: k8s-object-syncer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.1.10"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-object-syncer
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "9000"
      labels:
        app.kubernetes.io/name: k8s-object-syncer
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-k8s-object-syncer
      securityContext:
        {}
      containers:
        - name: k8s-object-syncer
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          image: "rustrial/k8s-object-syncer:0.1.10"
          env:
            - name: RUST_LOG
              value: "info"
            - name: WATCH_NAMESPACES
              value: "kube-public,kube-system"
            - name: SOURCE_NAMESPACES
              value: "kube-public,kube-system"
            - name: TARGET_NAMESPACES
              value: "*"
            - name: METRICS_LISTEN_ADDR
              value: "0.0.0.0"
            - name: METRICS_LISTEN_PORT
              value: "9000"
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              containerPort: 9000
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 10m
              memory: 16Mi
      nodeSelector:
        kubernetes.io/os: linux
