---
# Source: facebox/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-facebox
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: facebox
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: facebox-1.2.2
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: facebox
    app.kubernetes.io/instance: my-release
---
# Source: facebox/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-facebox
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: facebox
    app.kubernetes.io/version: 1.0.0
    helm.sh/chart: facebox-1.2.2
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: facebox
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: facebox
        app.kubernetes.io/instance: my-release
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: my-release-facebox
          image: "machinebox/facebox:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: UTC
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
