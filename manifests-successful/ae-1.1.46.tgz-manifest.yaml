---
# Source: ae/templates/engine-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-ae
  annotations:
  labels:
    app.kubernetes.io/name: ae
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.1.5"
    app.kubernetes.io/component: "engine"
    app.kubernetes.io/managed-by: Helm
---
# Source: ae/templates/engine-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-ae-engine
  labels:
    app.kubernetes.io/name: ae
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.1.5"
    app.kubernetes.io/component: "engine"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ae-1.1.46
data:
  gravitee.yml: |
    ingesters:
      ws:
    #    instances: 0
        port: 8072
    #    host: 0.0.0.0
    #    alpn: false
        secured: false
        authentication: # authentication type to be used for HTTP authentication
          type: basic
          users:
            admin: adminadmin

    services:
      core:
        http:
          enabled: true
          port: 18072
          host: localhost
          authentication:
            type: basic
            users:
              admin: adminadmin

    cluster:
      hazelcast:
        config:
          path: ${gravitee.home}/config/hazelcast.xml
      sync:
        time:
          value: 30
          unit: "SECONDS"


  hazelcast.xml: |
    <?xml version="1.0" encoding="UTF-8"?>

    <hazelcast xmlns="http://www.hazelcast.com/schema/config"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="http://www.hazelcast.com/schema/config
               http://www.hazelcast.com/schema/config/hazelcast-config-4.1.xsd">

        <cluster-name>graviteeio-ae</cluster-name>

        <properties>
            <property name="hazelcast.discovery.enabled">true</property>
            <property name="hazelcast.max.wait.seconds.before.join">3</property>
            <property name="hazelcast.member.list.publish.interval.seconds">5</property>
            <property name="hazelcast.socket.client.bind.any">false</property>
        </properties>

        <partition-group enabled="true" group-type="NODE_AWARE"/>

        <topic name="events">
            <multi-threading-enabled>true</multi-threading-enabled>
        </topic>

        <!-- Keep the queue config for backward compatibility -->
        <queue name="channel_*">
            <backup-count>0</backup-count>
            <async-backup-count>1</async-backup-count>
        </queue>

        <reliable-topic name="channel_*">
            <read-batch-size>10</read-batch-size>
        </reliable-topic>

        <map name="cache-properties">
            <time-to-live-seconds>30</time-to-live-seconds>
            <max-idle-seconds>30</max-idle-seconds>
            <eviction size="1000"/>
        </map>

        <map name="dampenings">
            <backup-count>0</backup-count>
            <async-backup-count>1</async-backup-count>
        </map>

        <map name="buckets">
            <backup-count>0</backup-count>
            <async-backup-count>1</async-backup-count>
        </map>

        <network>
            <join>
                <multicast enabled="false"/>
                <tcp-ip enabled="false"/>
                <kubernetes enabled="true">
                    <namespace>ae-1.1.46.tgz</namespace>
                    <service-name>my-release-ae-engine</service-name>
                </kubernetes>
            </join>
        </network>
    </hazelcast>
---
# Source: ae/templates/engine-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-ae-role
  labels:
    app.kubernetes.io/name: ae
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.1.5"
    app.kubernetes.io/component: "engine"
    app.kubernetes.io/managed-by: Helm
rules: 
  - apiGroups:
    - ""
    resources:
    - endpoints
    - pods
    - nodes
    - services
    - configmaps
    - secrets
    verbs:
    - get
    - list
    - watch
---
# Source: ae/templates/engine-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-ae-role-binding
  labels:
    app.kubernetes.io/name: ae
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.1.5"
    app.kubernetes.io/component: "engine"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  name: my-release-ae-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: my-release-ae
  namespace: ae-1.1.46.tgz
---
# Source: ae/templates/engine-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-ae-engine
  labels:
    app.kubernetes.io/name: ae
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.1.5"
    app.kubernetes.io/component: "engine"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ae-1.1.46
  annotations:
spec:
  type: "ClusterIP"
  ports:
    - port: 82
      targetPort: 8072
      protocol: TCP
      
      
      appProtocol: http
      
      
      name: engine
    - port: 5701
      name: engine-hz
      protocol: TCP
      
      
      appProtocol: http
      
      
  selector:
    app.kubernetes.io/name: ae
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/component: "engine"
---
# Source: ae/templates/engine-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ae-engine
  labels:
    app.kubernetes.io/name: ae
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.1.5"
    app.kubernetes.io/component: "engine"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ae-1.1.46
spec:
  strategy: 
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: ae
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/component: "engine"
  template:
    metadata:
      annotations:
        chaos.alpha.kubernetes.io/enabled: "false"
        checksum/config: bfacaeeb6f02b993f1358554284f41784e798e2018f57de77139784a4acba293
      labels:
        app.kubernetes.io/name: ae
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "2.1.5"
        app.kubernetes.io/component: "engine"
    spec:
      serviceAccountName: my-release-ae
      
      affinity: 
        {}
      nodeSelector: 
        {}
      topologySpreadConstraints: 
        []
      tolerations: 
        []
      terminationGracePeriodSeconds: 30
      containers:
        - name: my-release-ae-engine
          image: "graviteeio/ae-engine:2.1.5"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8072
            - name: engine-techapi
              containerPort: 18072
          env:
            - name: gravitee_processors_alertengineprocessoruseragent_enabled
              value: "false"
            - name: gravitee_processors_alertengineprocessorgeoip_enabled
              value: "false"
          envFrom: 
            []
          livenessProbe: 
            failureThreshold: 5
            periodSeconds: 10
            tcpSocket:
              port: http
          readinessProbe: 
            failureThreshold: 3
            periodSeconds: 5
            tcpSocket:
              port: http
          startupProbe: 
            failureThreshold: 20
            initialDelaySeconds: 30
            periodSeconds: 5
            tcpSocket:
              port: http
          resources: 
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: config
              mountPath: /opt/graviteeio-alert-engine/config/gravitee.yml
              subPath: gravitee.yml
            - name: config
              mountPath: /opt/graviteeio-alert-engine/config/hazelcast.xml
              subPath: hazelcast.xml
      volumes:
        - name: config
          configMap:
            name: my-release-ae-engine
---
# Source: ae/templates/engine-autoscaler.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: my-release-ae-engine
  labels:
    app.kubernetes.io/name: ae
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.1.5"
    app.kubernetes.io/component: "engine"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ae-1.1.46
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: my-release-ae-engine
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
      
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
---
# Source: ae/templates/engine-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-ae-engine
  labels:
    app.kubernetes.io/name: ae
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.1.5"
    app.kubernetes.io/component: "engine"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ae-1.1.46
  annotations:
    
    kubernetes.io/app-root: "/"
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: "ae.example.com"
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: my-release-ae-engine
            port:
              number: 82
          
  tls:
    - hosts:
      - ae.example.com
      secretName: api-custom-cert
