---
# Source: redis/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-redis-headless
  labels:
    helm.sh/chart: redis-1.3.0
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.2.5"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: "redis"
      port: 6379
      targetPort: "redis"
      protocol: "TCP"
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: my-release
---
# Source: redis/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-redis
  labels:
    helm.sh/chart: redis-1.3.0
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.2.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: "redis"
      port: 6379
      targetPort: "redis"
      protocol: "TCP"
      appProtocol: "redis"
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: my-release
---
# Source: redis/templates/controller.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-redis
  labels:
    helm.sh/chart: redis-1.3.0
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.2.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: my-release-redis-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: default
      containers:
        - name: redis
          image: "redis:7.2.5"
          imagePullPolicy: IfNotPresent
          ports:
            - name: "redis"
              containerPort: 6379
              protocol: "TCP"
          env:
            - name: "TZ"
              value: "UTC"
          args:
            - 'redis-server'
            - '--save 60 1'
            - '--loglevel warning'
          volumeMounts:
            - name: my-release-redis-storage
              mountPath: /data
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
          resources: {}
  volumeClaimTemplates:
    - metadata:
        name: my-release-redis-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem
