---
# Source: pgadmin4/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-pgadmin4
  labels:
    app.kubernetes.io/name: pgadmin4
    helm.sh/chart: pgadmin4-1.2.30
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.22"
    app.kubernetes.io/managed-by: Helm
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app.kubernetes.io/name: pgadmin4
      app.kubernetes.io/instance: my-release
  ingress:
  - ports:
    - port: http
---
# Source: pgadmin4/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-pgadmin4
  labels:
    app.kubernetes.io/name: pgadmin4
    helm.sh/chart: pgadmin4-1.2.30
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.22"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  password: "U3VwZXJTZWNyZXQ="
---
# Source: pgadmin4/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-pgadmin4
  labels:
    app.kubernetes.io/name: pgadmin4
    helm.sh/chart: pgadmin4-1.2.30
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.22"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: pgadmin4/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-pgadmin4
  labels:
    app.kubernetes.io/name: pgadmin4
    helm.sh/chart: pgadmin4-1.2.30
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.22"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: pgadmin4
    app.kubernetes.io/instance: my-release
---
# Source: pgadmin4/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-pgadmin4
  labels:
    app.kubernetes.io/name: pgadmin4
    helm.sh/chart: pgadmin4-1.2.30
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.22"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pgadmin4
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pgadmin4
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/secret: cc61d46be409d3b779ca53db69ee6d41ba399ba017b138395a1e8c703cf79bd5
    spec:
      initContainers:
      containers:
        - name: pgadmin4
          image: "dpage/pgadmin4:4.22"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          env:
            - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
              value: "False"
            - name: PGADMIN_DEFAULT_EMAIL
              value: user@folio.org
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-pgadmin4
                  key: password
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
          resources:
            {}
      volumes:
        - name: pgadmin-data
          persistentVolumeClaim:
            claimName: my-release-pgadmin4
      securityContext:
        fsGroup: 5050
        runAsGroup: 5050
        runAsUser: 5050
---
# Source: pgadmin4/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-pgadmin4-test-connection"
  labels:
    app.kubernetes.io/name: pgadmin4
    helm.sh/chart: pgadmin4-1.2.30
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "4.22"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['my-release-pgadmin4:80']
  restartPolicy: Never
