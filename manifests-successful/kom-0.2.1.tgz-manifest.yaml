---
# Source: kom/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kom-controller-manager
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kom
    app.kubernetes.io/part-of: kom
    helm.sh/chart: kom-0.2.1
    app.kubernetes.io/name: kom
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: kom/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kom-manager-role
  labels:
    helm.sh/chart: kom-0.2.1
    app.kubernetes.io/name: kom
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - '*'
- apiGroups:
  - helm.toolkit.fluxcd.io
  resources:
  - helmreleases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kom.kkb0318.github.io
  resources:
  - operatormanagers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kom.kkb0318.github.io
  resources:
  - operatormanagers/finalizers
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- apiGroups:
  - kom.kkb0318.github.io
  resources:
  - operatormanagers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kustomize.toolkit.fluxcd.io
  resources:
  - kustomizations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - gitrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - source.toolkit.fluxcd.io
  resources:
  - helmrepositories
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: kom/templates/metrics-reader-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kom-metrics-reader
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kom
    app.kubernetes.io/part-of: kom
    helm.sh/chart: kom-0.2.1
    app.kubernetes.io/name: kom
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: kom/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-release-kom-proxy-role
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kom
    app.kubernetes.io/part-of: kom
    helm.sh/chart: kom-0.2.1
    app.kubernetes.io/name: kom
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: kom/templates/manager-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kom-manager-rolebinding
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kom
    app.kubernetes.io/part-of: kom
    helm.sh/chart: kom-0.2.1
    app.kubernetes.io/name: kom
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-release-kom-manager-role'
subjects:
- kind: ServiceAccount
  name: 'my-release-kom-controller-manager'
  namespace: 'kom-0.2.1.tgz'
---
# Source: kom/templates/proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-release-kom-proxy-rolebinding
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kom
    app.kubernetes.io/part-of: kom
    helm.sh/chart: kom-0.2.1
    app.kubernetes.io/name: kom
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'my-release-kom-proxy-role'
subjects:
- kind: ServiceAccount
  name: 'my-release-kom-controller-manager'
  namespace: 'kom-0.2.1.tgz'
---
# Source: kom/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: my-release-kom-leader-election-role
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kom
    app.kubernetes.io/part-of: kom
    helm.sh/chart: kom-0.2.1
    app.kubernetes.io/name: kom
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: kom/templates/leader-election-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: my-release-kom-leader-election-rolebinding
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: kom
    app.kubernetes.io/part-of: kom
    helm.sh/chart: kom-0.2.1
    app.kubernetes.io/name: kom
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: 'my-release-kom-leader-election-role'
subjects:
- kind: ServiceAccount
  name: 'my-release-kom-controller-manager'
  namespace: 'kom-0.2.1.tgz'
---
# Source: kom/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kom-controller-manager-metrics-service
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: kom
    app.kubernetes.io/part-of: kom
    control-plane: controller-manager
    helm.sh/chart: kom-0.2.1
    app.kubernetes.io/name: kom
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    control-plane: controller-manager
    app.kubernetes.io/name: kom
    app.kubernetes.io/instance: my-release
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
---
# Source: kom/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kom-controller-manager
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kom
    app.kubernetes.io/part-of: kom
    control-plane: controller-manager
    helm.sh/chart: kom-0.2.1
    app.kubernetes.io/name: kom
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: kom
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: kom
        app.kubernetes.io/instance: my-release
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: ghcr.io/kkb0318/kom:0.2.1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: my-release-kom-controller-manager
      terminationGracePeriodSeconds: 10
