---
# Source: ack-iam-controller-crds/templates/iam.services.k8s.aws_groups.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: groups.iam.services.k8s.aws
spec:
  group: iam.services.k8s.aws
  names:
    kind: Group
    listKind: GroupList
    plural: groups
    singular: group
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Group is the Schema for the Groups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "GroupSpec defines the desired state of Group. \n Contains
              information about an IAM group entity. \n This data type is used as
              a response element in the following operations: \n - CreateGroup \n
              - GetGroup \n - ListGroups"
            properties:
              name:
                description: "The name of the group to create. Do not include the
                  path in this value. \n IAM user, group, role, and policy names must
                  be unique within the account. Names are not distinguished by case.
                  For example, you cannot create resources named both \"MyResource\"
                  and \"myresource\"."
                type: string
              path:
                description: "The path to the group. For more information about paths,
                  see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                  in the IAM User Guide. \n This parameter is optional. If it is not
                  included, it defaults to a slash (/). \n This parameter allows (through
                  its regex pattern (http://wikipedia.org/wiki/regex)) a string of
                  characters consisting of either a forward slash (/) by itself or
                  a string that must begin and end with forward slashes. In addition,
                  it can contain any ASCII character from the ! (\\u0021) through
                  the DEL character (\\u007F), including most punctuation characters,
                  digits, and upper and lowercased letters."
                type: string
              policies:
                items:
                  type: string
                type: array
              policyRefs:
                items:
                  description: 'AWSResourceReferenceWrapper provides a wrapper around
                    *AWSResourceReference type to provide more user friendly syntax
                    for references using ''from'' field Ex: APIIDRef: from: name:
                    my-api'
                  properties:
                    from:
                      description: AWSResourceReference provides all the values necessary
                        to reference another k8s resource for finding the identifier(Id/ARN/Name)
                      properties:
                        name:
                          type: string
                      type: object
                  type: object
                type: array
            required:
            - name
            type: object
          status:
            description: GroupStatus defines the observed state of Group
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createDate:
                description: The date and time, in ISO 8601 date-time format (http://www.iso.org/iso/iso8601),
                  when the group was created.
                format: date-time
                type: string
              groupID:
                description: The stable and unique string identifying the group. For
                  more information about IDs, see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                  in the IAM User Guide.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: ack-iam-controller-crds/templates/iam.services.k8s.aws_openidconnectproviders.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: openidconnectproviders.iam.services.k8s.aws
spec:
  group: iam.services.k8s.aws
  names:
    kind: OpenIDConnectProvider
    listKind: OpenIDConnectProviderList
    plural: openidconnectproviders
    singular: openidconnectprovider
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OpenIDConnectProvider is the Schema for the OpenIDConnectProviders
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OpenIDConnectProviderSpec defines the desired state of OpenIDConnectProvider.
            properties:
              clientIDs:
                description: "Provides a list of client IDs, also known as audiences.
                  When a mobile or web app registers with an OpenID Connect provider,
                  they establish a value that identifies the application. This is
                  the value that's sent as the client_id parameter on OAuth requests.
                  \n You can register multiple client IDs with the same provider.
                  For example, you might have multiple applications that use the same
                  OIDC provider. You cannot register more than 100 client IDs with
                  a single IAM OIDC provider. \n There is no defined format for a
                  client ID. The CreateOpenIDConnectProviderRequest operation accepts
                  client IDs up to 255 characters long."
                items:
                  type: string
                type: array
              tags:
                description: "A list of tags that you want to attach to the new IAM
                  OpenID Connect (OIDC) provider. Each tag consists of a key name
                  and an associated value. For more information about tagging, see
                  Tagging IAM resources (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                  in the IAM User Guide. \n If any one of the tags is invalid or if
                  you exceed the allowed maximum number of tags, then the entire request
                  fails and the resource is not created."
                items:
                  description: A structure that represents user-provided metadata
                    that can be associated with an IAM resource. For more information
                    about tagging, see Tagging IAM resources (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                    in the IAM User Guide.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              thumbprints:
                description: "A list of server certificate thumbprints for the OpenID
                  Connect (OIDC) identity provider's server certificates. Typically
                  this list includes only one entry. However, IAM lets you have up
                  to five thumbprints for an OIDC provider. This lets you maintain
                  multiple thumbprints if the identity provider is rotating certificates.
                  \n The server certificate thumbprint is the hex-encoded SHA-1 hash
                  value of the X.509 certificate used by the domain where the OpenID
                  Connect provider makes its keys available. It is always a 40-character
                  string. \n You must provide at least one thumbprint when creating
                  an IAM OIDC provider. For example, assume that the OIDC provider
                  is server.example.com and the provider stores its keys at https://keys.server.example.com/openid-connect.
                  In that case, the thumbprint string would be the hex-encoded SHA-1
                  hash value of the certificate used by https://keys.server.example.com.
                  \n For more information about obtaining the OIDC provider thumbprint,
                  see Obtaining the thumbprint for an OpenID Connect provider (https://docs.aws.amazon.com/IAM/latest/UserGuide/identity-providers-oidc-obtain-thumbprint.html)
                  in the IAM User Guide."
                items:
                  type: string
                type: array
              url:
                description: "The URL of the identity provider. The URL must begin
                  with https:// and should correspond to the iss claim in the provider's
                  OpenID Connect ID tokens. Per the OIDC standard, path components
                  are allowed but query parameters are not. Typically the URL consists
                  of only a hostname, like https://server.example.org or https://example.com.
                  The URL should not contain a port number. \n You cannot register
                  the same provider multiple times in a single Amazon Web Services
                  account. If you try to submit a URL that has already been used for
                  an OpenID Connect provider in the Amazon Web Services account, you
                  will get an error."
                type: string
            required:
            - thumbprints
            - url
            type: object
          status:
            description: OpenIDConnectProviderStatus defines the observed state of
              OpenIDConnectProvider
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: ack-iam-controller-crds/templates/iam.services.k8s.aws_policies.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: policies.iam.services.k8s.aws
spec:
  group: iam.services.k8s.aws
  names:
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Policy is the Schema for the Policies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "PolicySpec defines the desired state of Policy. \n Contains
              information about a managed policy. \n This data type is used as a response
              element in the CreatePolicy, GetPolicy, and ListPolicies operations.
              \n For more information about managed policies, refer to Managed policies
              and inline policies (https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html)
              in the IAM User Guide."
            properties:
              description:
                description: "A friendly description of the policy. \n Typically used
                  to store information about the permissions defined in the policy.
                  For example, \"Grants access to production DynamoDB tables.\" \n
                  The policy description is immutable. After a value is assigned,
                  it cannot be changed."
                type: string
              name:
                description: "The friendly name of the policy. \n IAM user, group,
                  role, and policy names must be unique within the account. Names
                  are not distinguished by case. For example, you cannot create resources
                  named both \"MyResource\" and \"myresource\"."
                type: string
              path:
                description: "The path for the policy. \n For more information about
                  paths, see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                  in the IAM User Guide. \n This parameter is optional. If it is not
                  included, it defaults to a slash (/). \n This parameter allows (through
                  its regex pattern (http://wikipedia.org/wiki/regex)) a string of
                  characters consisting of either a forward slash (/) by itself or
                  a string that must begin and end with forward slashes. In addition,
                  it can contain any ASCII character from the ! (\\u0021) through
                  the DEL character (\\u007F), including most punctuation characters,
                  digits, and upper and lowercased letters. \n You cannot use an asterisk
                  (*) in the path name."
                type: string
              policyDocument:
                description: "The JSON policy document that you want to use as the
                  content for the new policy. \n You must provide policies in JSON
                  format in IAM. However, for CloudFormation templates formatted in
                  YAML, you can provide the policy in JSON or YAML format. CloudFormation
                  always converts a YAML policy to JSON format before submitting it
                  to IAM. \n The maximum length of the policy document that you can
                  pass in this operation, including whitespace, is listed below. To
                  view the maximum character counts of a managed policy with no whitespaces,
                  see IAM and STS character quotas (https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length).
                  \n To learn more about JSON policy grammar, see Grammar of the IAM
                  JSON policy language (https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html)
                  in the IAM User Guide. \n The regex pattern (http://wikipedia.org/wiki/regex)
                  used to validate this parameter is a string of characters consisting
                  of the following: \n - Any printable ASCII character ranging from
                  the space character (\\u0020) through the end of the ASCII character
                  range \n - The printable characters in the Basic Latin and Latin-1
                  Supplement character set (through \\u00FF) \n - The special characters
                  tab (\\u0009), line feed (\\u000A), and carriage return (\\u000D)"
                type: string
              tags:
                description: "A list of tags that you want to attach to the new IAM
                  customer managed policy. Each tag consists of a key name and an
                  associated value. For more information about tagging, see Tagging
                  IAM resources (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                  in the IAM User Guide. \n If any one of the tags is invalid or if
                  you exceed the allowed maximum number of tags, then the entire request
                  fails and the resource is not created."
                items:
                  description: A structure that represents user-provided metadata
                    that can be associated with an IAM resource. For more information
                    about tagging, see Tagging IAM resources (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                    in the IAM User Guide.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - name
            - policyDocument
            type: object
          status:
            description: PolicyStatus defines the observed state of Policy
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              attachmentCount:
                description: The number of entities (users, groups, and roles) that
                  the policy is attached to.
                format: int64
                type: integer
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createDate:
                description: The date and time, in ISO 8601 date-time format (http://www.iso.org/iso/iso8601),
                  when the policy was created.
                format: date-time
                type: string
              defaultVersionID:
                description: The identifier for the version of the policy that is
                  set as the default version.
                type: string
              isAttachable:
                description: Specifies whether the policy can be attached to an IAM
                  user, group, or role.
                type: boolean
              permissionsBoundaryUsageCount:
                description: "The number of entities (users and roles) for which the
                  policy is used to set the permissions boundary. \n For more information
                  about permissions boundaries, see Permissions boundaries for IAM
                  identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html)
                  in the IAM User Guide."
                format: int64
                type: integer
              policyID:
                description: "The stable and unique string identifying the policy.
                  \n For more information about IDs, see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                  in the IAM User Guide."
                type: string
              updateDate:
                description: "The date and time, in ISO 8601 date-time format (http://www.iso.org/iso/iso8601),
                  when the policy was last updated. \n When a policy has only one
                  version, this field contains the date and time when the policy was
                  created. When a policy has more than one version, this field contains
                  the date and time when the most recent policy version was created."
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: ack-iam-controller-crds/templates/iam.services.k8s.aws_roles.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: roles.iam.services.k8s.aws
spec:
  group: iam.services.k8s.aws
  names:
    kind: Role
    listKind: RoleList
    plural: roles
    singular: role
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Role is the Schema for the Roles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "RoleSpec defines the desired state of Role. \n Contains
              information about an IAM role. This structure is returned as a response
              element in several API operations that interact with roles."
            properties:
              assumeRolePolicyDocument:
                description: "The trust relationship policy document that grants an
                  entity permission to assume the role. \n In IAM, you must provide
                  a JSON policy that has been converted to a string. However, for
                  CloudFormation templates formatted in YAML, you can provide the
                  policy in JSON or YAML format. CloudFormation always converts a
                  YAML policy to JSON format before submitting it to IAM. \n The regex
                  pattern (http://wikipedia.org/wiki/regex) used to validate this
                  parameter is a string of characters consisting of the following:
                  \n - Any printable ASCII character ranging from the space character
                  (\\u0020) through the end of the ASCII character range \n - The
                  printable characters in the Basic Latin and Latin-1 Supplement character
                  set (through \\u00FF) \n - The special characters tab (\\u0009),
                  line feed (\\u000A), and carriage return (\\u000D) \n Upon success,
                  the response includes the same trust policy in JSON format."
                type: string
              description:
                description: A description of the role.
                type: string
              maxSessionDuration:
                description: "The maximum session duration (in seconds) that you want
                  to set for the specified role. If you do not specify a value for
                  this setting, the default value of one hour is applied. This setting
                  can have a value from 1 hour to 12 hours. \n Anyone who assumes
                  the role from the or API can use the DurationSeconds API parameter
                  or the duration-seconds CLI parameter to request a longer session.
                  The MaxSessionDuration setting determines the maximum duration that
                  can be requested using the DurationSeconds parameter. If users don't
                  specify a value for the DurationSeconds parameter, their security
                  credentials are valid for one hour by default. This applies when
                  you use the AssumeRole* API operations or the assume-role* CLI operations
                  but does not apply when you use those operations to create a console
                  URL. For more information, see Using IAM roles (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html)
                  in the IAM User Guide."
                format: int64
                type: integer
              name:
                description: "The name of the role to create. \n IAM user, group,
                  role, and policy names must be unique within the account. Names
                  are not distinguished by case. For example, you cannot create resources
                  named both \"MyResource\" and \"myresource\"."
                type: string
              path:
                description: "The path to the role. For more information about paths,
                  see IAM Identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                  in the IAM User Guide. \n This parameter is optional. If it is not
                  included, it defaults to a slash (/). \n This parameter allows (through
                  its regex pattern (http://wikipedia.org/wiki/regex)) a string of
                  characters consisting of either a forward slash (/) by itself or
                  a string that must begin and end with forward slashes. In addition,
                  it can contain any ASCII character from the ! (\\u0021) through
                  the DEL character (\\u007F), including most punctuation characters,
                  digits, and upper and lowercased letters."
                type: string
              permissionsBoundary:
                description: The ARN of the policy that is used to set the permissions
                  boundary for the role.
                type: string
              permissionsBoundaryRef:
                description: 'AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference type to provide more user friendly syntax
                  for references using ''from'' field Ex: APIIDRef: from: name: my-api'
                properties:
                  from:
                    description: AWSResourceReference provides all the values necessary
                      to reference another k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              policies:
                items:
                  type: string
                type: array
              policyRefs:
                items:
                  description: 'AWSResourceReferenceWrapper provides a wrapper around
                    *AWSResourceReference type to provide more user friendly syntax
                    for references using ''from'' field Ex: APIIDRef: from: name:
                    my-api'
                  properties:
                    from:
                      description: AWSResourceReference provides all the values necessary
                        to reference another k8s resource for finding the identifier(Id/ARN/Name)
                      properties:
                        name:
                          type: string
                      type: object
                  type: object
                type: array
              tags:
                description: "A list of tags that you want to attach to the new role.
                  Each tag consists of a key name and an associated value. For more
                  information about tagging, see Tagging IAM resources (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                  in the IAM User Guide. \n If any one of the tags is invalid or if
                  you exceed the allowed maximum number of tags, then the entire request
                  fails and the resource is not created."
                items:
                  description: A structure that represents user-provided metadata
                    that can be associated with an IAM resource. For more information
                    about tagging, see Tagging IAM resources (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                    in the IAM User Guide.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - assumeRolePolicyDocument
            - name
            type: object
          status:
            description: RoleStatus defines the observed state of Role
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createDate:
                description: The date and time, in ISO 8601 date-time format (http://www.iso.org/iso/iso8601),
                  when the role was created.
                format: date-time
                type: string
              roleID:
                description: The stable and unique string identifying the role. For
                  more information about IDs, see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                  in the IAM User Guide.
                type: string
              roleLastUsed:
                description: Contains information about the last time that an IAM
                  role was used. This includes the date and time and the Region in
                  which the role was last used. Activity is only reported for the
                  trailing 400 days. This period can be shorter if your Region began
                  supporting these features within the last year. The role might have
                  been used more than 400 days ago. For more information, see Regions
                  where data is tracked (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period)
                  in the IAM User Guide.
                properties:
                  lastUsedDate:
                    format: date-time
                    type: string
                  region:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: ack-iam-controller-crds/templates/iam.services.k8s.aws_users.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: users.iam.services.k8s.aws
spec:
  group: iam.services.k8s.aws
  names:
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the Users API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "UserSpec defines the desired state of User. \n Contains
              information about an IAM user entity. \n This data type is used as a
              response element in the following operations: \n - CreateUser \n - GetUser
              \n - ListUsers"
            properties:
              name:
                description: "The name of the user to create. \n IAM user, group,
                  role, and policy names must be unique within the account. Names
                  are not distinguished by case. For example, you cannot create resources
                  named both \"MyResource\" and \"myresource\"."
                type: string
              path:
                description: "The path for the user name. For more information about
                  paths, see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                  in the IAM User Guide. \n This parameter is optional. If it is not
                  included, it defaults to a slash (/). \n This parameter allows (through
                  its regex pattern (http://wikipedia.org/wiki/regex)) a string of
                  characters consisting of either a forward slash (/) by itself or
                  a string that must begin and end with forward slashes. In addition,
                  it can contain any ASCII character from the ! (\\u0021) through
                  the DEL character (\\u007F), including most punctuation characters,
                  digits, and upper and lowercased letters."
                type: string
              permissionsBoundary:
                description: The ARN of the policy that is used to set the permissions
                  boundary for the user.
                type: string
              permissionsBoundaryRef:
                description: 'AWSResourceReferenceWrapper provides a wrapper around
                  *AWSResourceReference type to provide more user friendly syntax
                  for references using ''from'' field Ex: APIIDRef: from: name: my-api'
                properties:
                  from:
                    description: AWSResourceReference provides all the values necessary
                      to reference another k8s resource for finding the identifier(Id/ARN/Name)
                    properties:
                      name:
                        type: string
                    type: object
                type: object
              policies:
                items:
                  type: string
                type: array
              policyRefs:
                items:
                  description: 'AWSResourceReferenceWrapper provides a wrapper around
                    *AWSResourceReference type to provide more user friendly syntax
                    for references using ''from'' field Ex: APIIDRef: from: name:
                    my-api'
                  properties:
                    from:
                      description: AWSResourceReference provides all the values necessary
                        to reference another k8s resource for finding the identifier(Id/ARN/Name)
                      properties:
                        name:
                          type: string
                      type: object
                  type: object
                type: array
              tags:
                description: "A list of tags that you want to attach to the new user.
                  Each tag consists of a key name and an associated value. For more
                  information about tagging, see Tagging IAM resources (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                  in the IAM User Guide. \n If any one of the tags is invalid or if
                  you exceed the allowed maximum number of tags, then the entire request
                  fails and the resource is not created."
                items:
                  description: A structure that represents user-provided metadata
                    that can be associated with an IAM resource. For more information
                    about tagging, see Tagging IAM resources (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html)
                    in the IAM User Guide.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - name
            type: object
          status:
            description: UserStatus defines the observed state of User
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              createDate:
                description: The date and time, in ISO 8601 date-time format (http://www.iso.org/iso/iso8601),
                  when the user was created.
                format: date-time
                type: string
              passwordLastUsed:
                description: "The date and time, in ISO 8601 date-time format (http://www.iso.org/iso/iso8601),
                  when the user's password was last used to sign in to an Amazon Web
                  Services website. For a list of Amazon Web Services websites that
                  capture a user's last sign-in time, see the Credential reports (https://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html)
                  topic in the IAM User Guide. If a password is used more than once
                  in a five-minute span, only the first use is returned in this field.
                  If the field is null (no value), then it indicates that they never
                  signed in with a password. This can be because: \n * The user never
                  had a password. \n * A password exists but has not been used since
                  IAM started tracking this information on October 20, 2014. \n A
                  null value does not mean that the user never had a password. Also,
                  if the user does not currently have a password but had one in the
                  past, then this field contains the date and time the most recent
                  password was used. \n This value is returned only in the GetUser
                  and ListUsers operations."
                format: date-time
                type: string
              userID:
                description: The stable and unique string identifying the user. For
                  more information about IDs, see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)
                  in the IAM User Guide.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: ack-iam-controller-crds/templates/services.k8s.aws_adoptedresources.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: adoptedresources.services.k8s.aws
spec:
  group: services.k8s.aws
  names:
    kind: AdoptedResource
    listKind: AdoptedResourceList
    plural: adoptedresources
    singular: adoptedresource
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AdoptedResource is the schema for the AdoptedResource API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AdoptedResourceSpec defines the desired state of the AdoptedResource.
            properties:
              aws:
                description: AWSIdentifiers provide all unique ways to reference an
                  AWS resource.
                properties:
                  additionalKeys:
                    additionalProperties:
                      type: string
                    description: AdditionalKeys represents any additional arbitrary
                      identifiers used when describing the target resource.
                    type: object
                  arn:
                    description: ARN is the AWS Resource Name for the resource. It
                      is a globally unique identifier.
                    type: string
                  nameOrID:
                    description: NameOrId is a user-supplied string identifier for
                      the resource. It may or may not be globally unique, depending
                      on the type of resource.
                    type: string
                type: object
              kubernetes:
                description: ResourceWithMetadata provides the values necessary to
                  create a Kubernetes resource and override any of its metadata values.
                properties:
                  group:
                    type: string
                  kind:
                    type: string
                  metadata:
                    description: "ObjectMeta is metadata that all persisted resources
                      must have, which includes all objects users must create. It
                      is not possible to use `metav1.ObjectMeta` inside spec, as the
                      controller-gen automatically converts this to an arbitrary string-string
                      map. https://github.com/kubernetes-sigs/controller-tools/issues/385
                      \n Active discussion about inclusion of this field in the spec
                      is happening in this PR: https://github.com/kubernetes-sigs/controller-tools/pull/395
                      \n Until this is allowed, or if it never is, we will produce
                      a subset of the object meta that contains only the fields which
                      the user is allowed to modify in the metadata."
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      generateName:
                        description: "GenerateName is an optional prefix, used by
                          the server, to generate a unique name ONLY IF the Name field
                          has not been provided. If this field is used, the name returned
                          to the client will be different than the name passed. This
                          value will also be combined with a unique suffix. The provided
                          value has the same validation rules as the Name field, and
                          may be truncated by the length of the suffix required to
                          make the value unique on the server. \n If this field is
                          specified and the generated name exists, the server will
                          NOT return a 409 - instead, it will either return 201 Created
                          or 500 with Reason ServerTimeout indicating a unique name
                          could not be found in the time allotted, and the client
                          should retry (optionally after the time indicated in the
                          Retry-After header). \n Applied only if Name is not specified.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      name:
                        description: 'Name must be unique within a namespace. Is required
                          when creating resources, although some resources may allow
                          a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence
                          and configuration definition. Cannot be updated. More info:
                          http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                      namespace:
                        description: "Namespace defines the space within each name
                          must be unique. An empty namespace is equivalent to the
                          \"default\" namespace, but \"default\" is the canonical
                          representation. Not all objects are required to be scoped
                          to a namespace - the value of this field for those objects
                          will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                          More info: http://kubernetes.io/docs/user-guide/namespaces"
                        type: string
                      ownerReferences:
                        description: List of objects depended by this object. If ALL
                          objects in the list have been deleted, this object will
                          be garbage collected. If this object is managed by a controller,
                          then an entry in this list will point to this controller,
                          with the controller field set to true. There cannot be more
                          than one managing controller.
                        items:
                          description: OwnerReference contains enough information
                            to let you identify an owning object. An owning object
                            must be in the same namespace as the dependent, or be
                            cluster-scoped, so there is no namespace field.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            blockOwnerDeletion:
                              description: If true, AND if the owner has the "foregroundDeletion"
                                finalizer, then the owner cannot be deleted from the
                                key-value store until this reference is removed. Defaults
                                to false. To set this field, a user needs "delete"
                                permission of the owner, otherwise 422 (Unprocessable
                                Entity) will be returned.
                              type: boolean
                            controller:
                              description: If true, this reference points to the managing
                                controller.
                              type: boolean
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                              type: string
                          required:
                          - apiVersion
                          - kind
                          - name
                          - uid
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                    type: object
                required:
                - group
                - kind
                type: object
            required:
            - aws
            - kubernetes
            type: object
          status:
            description: AdoptedResourceStatus defines the observed status of the
              AdoptedResource.
            properties:
              conditions:
                description: A collection of `ackv1alpha1.Condition` objects that
                  describe the various terminal states of the adopted resource CR
                  and its target custom resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: ack-iam-controller-crds/templates/services.k8s.aws_fieldexports.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: fieldexports.services.k8s.aws
spec:
  group: services.k8s.aws
  names:
    kind: FieldExport
    listKind: FieldExportList
    plural: fieldexports
    singular: fieldexport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FieldExport is the schema for the FieldExport API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FieldExportSpec defines the desired state of the FieldExport.
            properties:
              from:
                description: ResourceFieldSelector provides the values necessary to
                  identify an individual field on an individual K8s resource.
                properties:
                  path:
                    type: string
                  resource:
                    description: NamespacedResource provides all the values necessary
                      to identify an ACK resource of a given type (within the same
                      namespace as the custom resource containing this type).
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                    required:
                    - group
                    - kind
                    - name
                    type: object
                required:
                - path
                - resource
                type: object
              to:
                description: FieldExportTarget provides the values necessary to identify
                  the output path for a field export.
                properties:
                  key:
                    description: Key overrides the default value (`<namespace>.<FieldExport-resource-name>`)
                      for the FieldExport target
                    type: string
                  kind:
                    description: FieldExportOutputType represents all types that can
                      be produced by a field export operation
                    enum:
                    - configmap
                    - secret
                    type: string
                  name:
                    type: string
                  namespace:
                    description: Namespace is marked as optional, so we cannot compose
                      `NamespacedName`
                    type: string
                required:
                - kind
                - name
                type: object
            required:
            - from
            - to
            type: object
          status:
            description: FieldExportStatus defines the observed status of the FieldExport.
            properties:
              conditions:
                description: A collection of `ackv1alpha1.Condition` objects that
                  describe the various recoverable states of the field CR
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
