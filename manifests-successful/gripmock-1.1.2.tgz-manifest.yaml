---
# Source: gripmock/templates/configmap-proto.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-protos
  labels:
    helm.sh/chart: gripmock-1.1.2
    app.kubernetes.io/name: gripmock
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/managed-by: Helm
data:
  hello_service.proto: |
    syntax = 'proto3';
  
    package com.deliveryhero.loadtest.examples.hello;
  
    option go_package = "com.deliveryhero/loadtest/examples/hello";
  
    service HelloService {
      rpc sayHello(HelloRequest) returns (HelloResponse);
    }
  
    message HelloRequest {
      string name = 1;
    }
  
    message HelloResponse {
      string message = 1;
    }
---
# Source: gripmock/templates/configmap-stubs.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-stubs
  labels:
    helm.sh/chart: gripmock-1.1.2
    app.kubernetes.io/name: gripmock
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/managed-by: Helm
data:
  hello_service.json: |
    {
      "service":"HelloService",
      "method":"SayHello",
      "input":{
        "matches":{
          "name":"[\\s\\S]*"
        }
      },
      "output":{
        "data":{
          "message":"Hello there!"
        }
      }
    }
---
# Source: gripmock/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-gripmock
  labels:
    helm.sh/chart: gripmock-1.1.2
    app.kubernetes.io/name: gripmock
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 4770
      targetPort: 4770
      protocol: TCP
      name: grpc
    - port: 4771
      targetPort: 4771
      protocol: TCP
      name: stubs
  selector:
    app.kubernetes.io/name: gripmock
    app.kubernetes.io/instance: my-release
---
# Source: gripmock/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-gripmock
  labels:
    helm.sh/chart: gripmock-1.1.2
    app.kubernetes.io/name: gripmock
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gripmock
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        helm.sh/chart: gripmock-1.1.2
        app.kubernetes.io/name: gripmock
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "1.10.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: gripmock
          image: "tkpd/gripmock:1.10.1"
          imagePullPolicy: IfNotPresent
          args:
            - -imports=/proto
            - -stub=/stubs
            - /proto/hello_service.proto
          volumeMounts:
            - mountPath: /proto
              name: proto
            - mountPath: /stubs
              name: stubs
          ports:
            - name: http
              containerPort: 4771
              protocol: TCP
            - name: grpc
              containerPort: 4770
              protocol: TCP
          resources:
            {}
      volumes:
        - name: proto
          configMap:
            name: example-protos
        - name: stubs
          configMap:
            name: example-stubs
