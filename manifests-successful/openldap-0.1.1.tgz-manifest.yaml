---
# Source: openldap/templates/secret-init.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-openldap-init
  labels:
    app: openldap
    chart: openldap-0.1.1
    release: my-release
    heritage: Helm
stringData:
...
---
# Source: openldap/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-openldap
  labels:
    name: openldap
    instance: openldap
    chart: openldap-0.1.1
    release: my-release
    heritage: Helm
    managed-by: helm
type: Opaque
data:
  LDAP_ADMIN_PASSWORD: "OFlxREpqRzhyOVpZV3lnaDFySmxpNXZXTGxla0FLaVk="
  LDAP_CONFIG_PASSWORD: "WnJPajhUT2ZtUjRhZ1BtRFBZdXpXVTNoc1A0SGFseG4="
stringData:
  LDAP_HOST: my-release-openldap
---
# Source: openldap/templates/cm-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-openldap-env
  labels:
    app: openldap
    chart: openldap-0.1.1
    release: my-release
    heritage: Helm
data:
  LDAP_BACKEND: hdb
  LDAP_DOMAIN: example.org
  LDAP_ORGANISATION: Example Inc.
  LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
  LDAP_TLS: "true"
  LDAP_TLS_ENFORCE: "false"
...
---
# Source: openldap/templates/cm-init.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-openldap-init-script
  labels:
    app: openldap
    chart: openldap-0.1.1
    release: my-release
    heritage: Helm
data:
  check_ready.sh: |
    #!/bin/bash
    USER="cn=admin,dc=$(echo $LDAP_DOMAIN | sed s/\\./,dc=/g)"
    until ldapwhoami -x -h $LDAP_HOST -D $USER -w $LDAP_ADMIN_PASSWORD; do echo waiting for ldap to be ready; sleep 2; done
  init.sh: |
    #!/bin/bash
    USER="cn=admin,dc=$(echo $LDAP_DOMAIN | sed s/\\./,dc=/g)"
    for file in $1
    do
      ldapadd -f $file -h $LDAP_HOST -w $LDAP_ADMIN_PASSWORD -D $USER || exit $?
    done
...
---
# Source: openldap/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-openldap
  labels:
    app: openldap
    chart: openldap-0.1.1
    release: my-release
    heritage: Helm
spec:
  ports:
    - name: ldap
      protocol: TCP
      port: 389
      targetPort: ldap
    - name: ssl-ldap
      protocol: TCP
      port: 636
      targetPort: ssl-ldap
  selector:
    app: openldap
    release: my-release
  type: ClusterIP
---
# Source: openldap/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  my-release-openldap
  labels:
    app: openldap
    chart: openldap-0.1.1
    release: my-release
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openldap
      release: my-release
  template:
    metadata: #todo: add cm checksums as annotation
      labels:
        app: openldap
        release: my-release
    spec:
      containers:
        - name: openldap
          image: "osixia/openldap:1.5.0"
          imagePullPolicy: IfNotPresent
          args:
            - -l
            - info
          ports:
            - name: ldap
              containerPort: 389
            - name: ssl-ldap
              containerPort: 636
          envFrom:
            - configMapRef:
                name: my-release-openldap-env
            - secretRef:
                name: my-release-openldap
          volumeMounts:
            - name: data
              mountPath: /var/lib/ldap
              subPath: data
            - name: data
              mountPath: /etc/ldap/slapd.d
              subPath: config-data
          env:
          livenessProbe:
            tcpSocket:
              port: ldap
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            tcpSocket:
              port: ldap
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 10
          resources:
            {}
      volumes:
        - name: certs 
          emptyDir:
            medium: Memory
        - name: data
          emptyDir: {}
---
# Source: openldap/templates/init-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: init-ldap
  labels:
    app: openldap
    chart: openldap-0.1.1
    release: my-release
    heritage: Helm
spec:
  template:
    spec:
      initContainers:
      - name: lookup-my-release-openldap
        image: "busybox:1.28"
        command: ['sh', '-c', 'until nslookup my-release-openldap.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for ldap; sleep 2; done']
      - name: wait-ready-my-release-openldap
        image: "osixia/openldap:1.5.0"
        command: ['sh', '/init/check_ready.sh']
        volumeMounts:
          - name: init-script
            mountPath: /init
            readOnly: true
        envFrom:
          - configMapRef:
              name: my-release-openldap-env
          - secretRef:
              name: my-release-openldap
      containers:
      - name: ldapadd
        image:  "osixia/openldap:1.5.0"
        imagePullPolicy: "IfNotPresent"
        command: ["/init/script/init.sh"]
        args: ["/init/files"]
        envFrom:
          - configMapRef:
              name: my-release-openldap-env
          - secretRef:
              name: my-release-openldap
        volumeMounts:
          - name: init
            mountPath: /init
          - name: init-files
            mountPath: /init/files
            readOnly: true
          - name: init-script
            mountPath: /init/script
            readOnly: true
      volumes:
        - name: init-script
          configMap:
            name: my-release-openldap-init-script
            defaultMode: 0777
        - name: init-files
          secret:
            secretName: my-release-openldap-init
        - name: init
          emptyDir: {}
      restartPolicy: OnFailure
  backoffLimit: 4
---
# Source: openldap/templates/cm-env.yaml
#
# A ConfigMap spec for openldap that maps the initial data to the pod
#
---
# Source: openldap/templates/cm-init.yaml
#
# A ConfigMap spec for openldap slapd that map directly to env variables in the Pod.
# List of environment variables supported is from the docker image:
# https://github.com/osixia/docker-openldap#beginner-guide
# Note that passwords are defined as secrets
#
---
# Source: openldap/templates/secret-init.yaml
#
# A ConfigMap spec for openldap slapd that map directly to env variables in the Pod.
# List of environment variables supported is from the docker image:
# https://github.com/osixia/docker-openldap#beginner-guide
# Note that passwords are defined as secrets
#
