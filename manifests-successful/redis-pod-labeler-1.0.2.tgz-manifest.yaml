---
# Source: redis-pod-labeler/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-redis-pod-labeler
  labels:
    helm.sh/chart: redis-pod-labeler-1.0.2
    app.kubernetes.io/name: redis-pod-labeler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: redis-pod-labeler/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: redis-pod-labeler-1.0.2
    app.kubernetes.io/name: redis-pod-labeler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  name: redis-pod-labeler-role
  namespace: redis
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods"]
    verbs: ["get", "patch", "list"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list"]
---
# Source: redis-pod-labeler/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: redis-pod-labeler-role-binding
  namespace: redis
  labels:
    helm.sh/chart: redis-pod-labeler-1.0.2
    app.kubernetes.io/name: redis-pod-labeler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redis-pod-labeler-role
subjects:
  - kind: ServiceAccount
    name: my-release-redis-pod-labeler
    namespace: redis
---
# Source: redis-pod-labeler/templates/redis-master-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    {}
  namespace: redis
  name: redis-pod-labeler-master-service
  labels:
    helm.sh/chart: redis-pod-labeler-1.0.2
    app.kubernetes.io/name: redis-pod-labeler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: redis
      protocol: TCP
      port: 6379
      targetPort: redis
  selector:
    
    redis.io/role: master
  
    app.kubernetes.io/name: redis-pod-labeler
    app.kubernetes.io/instance: my-release
---
# Source: redis-pod-labeler/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-redis-pod-labeler
  labels:
    helm.sh/chart: redis-pod-labeler-1.0.2
    app.kubernetes.io/name: redis-pod-labeler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-pod-labeler
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-pod-labeler
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-redis-pod-labeler
      securityContext:
        {}
      containers:
        - name: redis-pod-labeler
          securityContext:
            {}
          image: "hmdmph/redis-pod-labeler:1.0.0-alpine"
          imagePullPolicy: IfNotPresent
          args:
            - ./redis-labeler.py
            - --namespace=redis    # namespace which deployed redis
            - --svc-selector=release=my-redis # key=value of to match and get the redis-ha announce svc
            - --update-period=60   # how frequent labelling should happen( default to 60 seconds = 1 minute )
            - --redis-cluster-name=mymaster # redis cluster name
            - --redis-headless-svc-name=my-redis-redis-ha # redis headless service name
            - --company-domain=redis.io  # company domain
            - --redis-sentinel_port=26379 # sentinel port
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - ps uaxw | egrep 'python' | grep -v 'grep'
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - ps uaxw | egrep 'python' | grep -v 'grep'
          resources:
            {}
---
# Source: redis-pod-labeler/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-redis-pod-labeler-test-connection"
  labels:
    helm.sh/chart: redis-pod-labeler-1.0.2
    app.kubernetes.io/name: redis-pod-labeler
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-redis-pod-labeler:80']
  restartPolicy: Never
