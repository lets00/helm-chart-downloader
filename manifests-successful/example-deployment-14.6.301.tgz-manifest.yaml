---
# Source: example-deployment/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: example-deployment
  labels:
    app.kubernetes.io/name: "example-deployment-0.0.1-secret"
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "localhost"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "helm"
    app.startx.fr/app: "example-deployment"
    app.startx.fr/version: "0.0.1"
    helm.sh/chart: "example-deployment"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "example-deployment"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "0.0.1"
    app.startx.fr/component: "helm"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "localhost"
    app.kubernetes.io/instance: "myscope-myenv-example-deployment-0.0.1"
    app: example-deployment
  annotations:
    openshift.io/generated-by: startx-helm-example-deployment
    idling.alpha.openshift.io/unidle-targets: '[{"kind":"Deployment","name":"example-deployment","group":"apps","replicas": 1 }]'
spec:
  ports:
    - name: http
      port: 8080
  selector:
    app: example-deployment
---
# Source: example-deployment/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-deployment
  labels:
    app.kubernetes.io/name: "example-deployment-0.0.1-secret"
    app.startx.fr/scope: "myscope"
    app.startx.fr/cluster: "localhost"
    app.startx.fr/environment: "myenv"
    app.startx.fr/component: "helm"
    app.startx.fr/app: "example-deployment"
    app.startx.fr/version: "0.0.1"
    helm.sh/chart: "example-deployment"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "example-deployment"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "0.0.1"
    app.startx.fr/component: "helm"
    app.kubernetes.io/component: "helm"
    app.kubernetes.io/part-of: "localhost"
    app.kubernetes.io/instance: "myscope-myenv-example-deployment-0.0.1"
    kube-monkey/enabled: enabled
    kube-monkey/identifier: "example-deployment"
  annotations:
    openshift.io/generated-by: startx-helm-example-deployment
    argocd.argoproj.io/sync-wave: "30"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: example-deployment
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "example-deployment-0.0.1"
        app.startx.fr/scope: "myscope"
        app.startx.fr/cluster: "localhost"
        app.startx.fr/environment: "myenv"
        app.startx.fr/component: "helm"
        app.startx.fr/app: "example-deployment"
        app.startx.fr/version: "0.0.1"
        helm.sh/chart: "example-deployment"
        app.kubernetes.io/component: "helm"
        app.kubernetes.io/part-of: "example-deployment"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "0.0.1"
        app.startx.fr/component: "helm"
        app.kubernetes.io/component: "helm"
        app.kubernetes.io/part-of: "localhost"
        app.kubernetes.io/instance: "myscope-myenv-example-deployment-0.0.1"
        app: example-deployment
        kube-monkey/enabled: enabled
        kube-monkey/identifier: "example-deployment"
      annotations:
        openshift.io/generated-by: startx-helm-example-deployment
    spec: 
      containers:
        - name: service
          image: "quay.io/startx/apache:latest"
          env:
            - name: SX_DEBUG
              value: "true"
            - name: SX_VERBOSE
              value: "true"
          command:
            - "/bin/sx-apache"
          args:
            - "run"
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          livenessProbe:
            exec:
              command:
                - "/bin/sx-apache"
                - isLive
            initialDelaySeconds: 1
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - "/bin/sx-apache"
                - isReady
            initialDelaySeconds: 1
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 20m
              memory: 32Mi
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
