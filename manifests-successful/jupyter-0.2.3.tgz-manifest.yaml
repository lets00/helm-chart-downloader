---
# Source: jupyter/templates/secret.yml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-jupyter
data:
  TOKEN: c0xzaVlydEdGeU5kdjVHOThMaGdNTWhEQ3djRk01WVM=
---
# Source: jupyter/templates/configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-jupyter
data:
  PORT: "8888"
---
# Source: jupyter/templates/service.yml
apiVersion: v1
kind: Service
metadata:
  name: my-release-jupyter
  labels:
    helm.sh/chart: jupyter-0.2.3
    app.kubernetes.io/name: jupyter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.4.12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8888
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: jupyter
    app.kubernetes.io/instance: my-release
---
# Source: jupyter/templates/deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-jupyter
  labels:
    helm.sh/chart: jupyter-0.2.3
    app.kubernetes.io/name: jupyter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.4.12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jupyter
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jupyter
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
      containers:
        - name: jupyter
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          image: ghcr.io/licenseware/jupyter:6.4.12
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8888
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /login
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /login
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          envFrom:
            - configMapRef:
                name: my-release-jupyter
            - secretRef:
                name: my-release-jupyter
          resources:
            {}
