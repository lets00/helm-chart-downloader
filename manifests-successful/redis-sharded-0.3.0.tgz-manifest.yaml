---
# Source: redis-sharded/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-release-redis-sharded
  labels:
    helm.sh/chart: redis-sharded
    app.kubernetes.io/name: redis-sharded
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-sharded
      app.kubernetes.io/instance: my-release
---
# Source: redis-sharded/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-redis-sharded
  labels:
    helm.sh/chart: redis-sharded
    app.kubernetes.io/name: redis-sharded
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
---
# Source: redis-sharded/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-redis-sharded
  labels:
    helm.sh/chart: redis-sharded
    app.kubernetes.io/name: redis-sharded
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
data:
  redis.conf: |-
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.v
    save ""
---
# Source: redis-sharded/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-redis-sharded-backend
  labels:
    helm.sh/chart: redis-sharded
    app.kubernetes.io/name: redis-sharded
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app.kubernetes.io/name: redis-sharded
    app.kubernetes.io/instance: my-release
---
# Source: redis-sharded/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-redis-sharded
  labels:
    helm.sh/chart: redis-sharded
    app.kubernetes.io/name: redis-sharded
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-sharded
      app.kubernetes.io/instance: my-release
  serviceName: my-release-redis-sharded-backend
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-sharded
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/configmap: 6d50fe9c879ba51c4a12e1b531fa9c1ac298d39b1db529be5428645a6ce1fc40
    spec:
      serviceAccountName: my-release-redis-sharded
      securityContext:
        {}
      containers:
      - name: my-release-redis-sharded
        securityContext:
          {}
        image: "redis:6.0.6"
        imagePullPolicy: IfNotPresent
        command:
        - redis-server
        args:
        - /etc/redis/redis.conf
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: REDIS_PORT
          value: "6379"
        ports:
        - name: redis
          containerPort: 6379
        resources:
          {}
        volumeMounts:
        - name: redis-data
          mountPath: /data
          subPath: 
        - name: config
          mountPath: /etc/redis/redis.conf
          subPath: redis.conf
      - name: metrics
        image: "oliver006/redis_exporter:v1.9.0"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: REDIS_ALIAS
          value: my-release-redis-sharded
        ports:
        - name: metrics
          containerPort: 9121
        resources:
          requests:
            cpu: 5m
            memory: 16Mi
      volumes:
      - name: config
        configMap:
          name: my-release-redis-sharded
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          helm.sh/chart: redis-sharded
          app.kubernetes.io/name: redis-sharded
          app.kubernetes.io/instance: my-release
          app.kubernetes.io/managed-by: Helm
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        selector:
