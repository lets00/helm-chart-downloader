---
# Source: depscloud/charts/extractor/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-extractor
  labels:
    helm.sh/chart: extractor-0.3.5
    app.kubernetes.io/name: extractor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: extractor
    
automountServiceAccountToken: false
---
# Source: depscloud/charts/gateway/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-gateway
  labels:
    helm.sh/chart: gateway-0.3.5
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: gateway
    
automountServiceAccountToken: false
---
# Source: depscloud/charts/indexer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-indexer
  labels:
    helm.sh/chart: indexer-0.3.5
    app.kubernetes.io/name: indexer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: indexer
    
automountServiceAccountToken: false
---
# Source: depscloud/charts/tracker/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-tracker
  labels:
    helm.sh/chart: tracker-0.3.5
    app.kubernetes.io/name: tracker
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: tracker
    
automountServiceAccountToken: false
---
# Source: depscloud/charts/indexer/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-indexer
  labels:
    helm.sh/chart: indexer-0.3.5
    app.kubernetes.io/name: indexer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: indexer
    
data:
  config.yaml: YWNjb3VudHM6Ci0gZ2l0aHViOgogICAgb3JnYW5pemF0aW9uczoKICAgIC0gZGVwc2Nsb3VkCiAgICBzdHJhdGVneTogSFRUUA==
---
# Source: depscloud/charts/tracker/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-tracker
  labels:
    helm.sh/chart: tracker-0.3.5
    app.kubernetes.io/name: tracker
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: tracker
    
data:
  STORAGE_DRIVER: "c3FsaXRl"
  STORAGE_ADDRESS: "ZmlsZTo6bWVtb3J5Oj9jYWNoZT1zaGFyZWQ="
  STORAGE_READ_ONLY_ADDRESS: ""
---
# Source: depscloud/charts/extractor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-extractor
  labels:
    helm.sh/chart: extractor-0.3.5
    app.kubernetes.io/name: extractor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: extractor
    
spec:
  clusterIP: None
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
    - port: 8090
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: extractor
    app.kubernetes.io/instance: my-release
---
# Source: depscloud/charts/gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-gateway
  labels:
    helm.sh/chart: gateway-0.3.5
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: gateway
    
spec:
  clusterIP: None
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
    - port: 8090
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: my-release
---
# Source: depscloud/charts/tracker/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-tracker
  labels:
    helm.sh/chart: tracker-0.3.5
    app.kubernetes.io/name: tracker
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: tracker
    
spec:
  clusterIP: None
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
    - port: 8090
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: tracker
    app.kubernetes.io/instance: my-release
---
# Source: depscloud/charts/extractor/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-extractor
  labels:
    helm.sh/chart: extractor-0.3.5
    app.kubernetes.io/name: extractor
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: extractor
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: extractor
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        helm.sh/chart: extractor-0.3.5
        app.kubernetes.io/name: extractor
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.3.5"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: depscloud
        app.kubernetes.io/component: extractor
        
    spec:
      serviceAccountName: my-release-extractor
      securityContext:
        {}
      volumes:
      containers:
        - name: extractor
          securityContext:
            {}
          image: "ocr.sh/depscloud/extractor:0.3.5"
          imagePullPolicy: IfNotPresent
          volumeMounts:
          args:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 8090
              protocol: TCP
          livenessProbe:
            httpGet:
              port: 8080
              path: /healthz
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              port: 8080
              path: /healthz
            initialDelaySeconds: 5
          resources:
            {}
---
# Source: depscloud/charts/gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-gateway
  labels:
    helm.sh/chart: gateway-0.3.5
    app.kubernetes.io/name: gateway
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: gateway
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        helm.sh/chart: gateway-0.3.5
        app.kubernetes.io/name: gateway
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.3.5"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: depscloud
        app.kubernetes.io/component: gateway
        
    spec:
      serviceAccountName: my-release-gateway
      securityContext:
        {}
      volumes:
      containers:
        - name: gateway
          securityContext:
            {}
          image: "ocr.sh/depscloud/gateway:0.3.5"
          imagePullPolicy: IfNotPresent
          volumeMounts:
          args:
            - --extractor-address=dns:///my-release-extractor:8090
            - --tracker-address=dns:///my-release-tracker:8090
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 8090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
          resources:
            {}
---
# Source: depscloud/charts/tracker/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-tracker
  labels:
    helm.sh/chart: tracker-0.3.5
    app.kubernetes.io/name: tracker
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: tracker
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tracker
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        helm.sh/chart: tracker-0.3.5
        app.kubernetes.io/name: tracker
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.3.5"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: depscloud
        app.kubernetes.io/component: tracker
        
    spec:
      serviceAccountName: my-release-tracker
      securityContext:
        {}
      volumes:
      containers:
        - name: tracker
          securityContext:
            {}
          image: "ocr.sh/depscloud/tracker:0.3.5"
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: my-release-tracker
          volumeMounts:
          args:
            - --storage-driver=$(STORAGE_DRIVER)
            - --storage-address=$(STORAGE_ADDRESS)
            - --storage-readonly-address=$(STORAGE_READ_ONLY_ADDRESS)
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 8090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
          resources:
            {}
---
# Source: depscloud/charts/indexer/templates/job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: my-release-indexer
  labels:
    helm.sh/chart: indexer-0.3.5
    app.kubernetes.io/name: indexer
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.3.5"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: depscloud
    app.kubernetes.io/component: indexer
    
spec:
  template:
    metadata:
      labels:
        helm.sh/chart: indexer-0.3.5
        app.kubernetes.io/name: indexer
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/version: "0.3.5"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: depscloud
        app.kubernetes.io/component: indexer
        
    spec:
      restartPolicy: OnFailure
      serviceAccountName: my-release-indexer
      securityContext:
        {}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          secret:
            secretName: my-release-indexer
      containers:
        - name: indexer
          securityContext:
            {}
          image: "ocr.sh/depscloud/indexer:0.3.5"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /etc/indexer
              name: config
            - mountPath: /tmp
              name: tmp
              readOnly: false
          args:
            - --extractor-address=dns:///my-release-extractor:8090
            - --tracker-address=dns:///my-release-tracker:8090
            - --config=/etc/indexer/config.yaml
            - --ssh-keypath=
            - --ssh-user=
            - --workers=5
          resources:
            {}
