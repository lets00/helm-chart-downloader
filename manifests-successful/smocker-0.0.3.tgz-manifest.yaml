---
# Source: smocker/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-smocker
  labels:
    helm.sh/chart: smocker-0.0.3
    app.kubernetes.io/name: smocker
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.18.5"
    app.kubernetes.io/managed-by: Helm
data:
  start.sh: |
    #!/bin/bash

    set -me

    mock_server="localhost:8081"
    mock_definitions="/mocks/mock-definition.yaml"

    wait_server_started() {
      timeout 30 sh -c \
        "until curl -sSf ${mock_server}/version > /dev/null 2>&1; do
          sleep 1
        done"
    }

    set_mocks() {
      echo "Setting session mocks:"
      cat "$mock_definitions"
      curl -sSf -XPOST \
        --header "Content-Type: application/x-yaml" \
        --data-binary "@${mock_definitions}" \
        "${mock_server}/mocks?reset=true"
    }

    # Start the primary process and put it in the background
    /opt/smocker &

    if [ -f "${mock_definitions}" ]; then
      wait_server_started
      set_mocks
    fi

    fg %1
---
# Source: smocker/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-smocker
  labels:
    helm.sh/chart: smocker-0.0.3
    app.kubernetes.io/name: smocker
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.18.5"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: mock
      protocol: TCP
      name: mock
    - port: 8081
      targetPort: admin
      protocol: TCP
      name: admin
  selector:
    app.kubernetes.io/name: smocker
    app.kubernetes.io/instance: my-release
---
# Source: smocker/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-smocker
  labels:
    helm.sh/chart: smocker-0.0.3
    app.kubernetes.io/name: smocker
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.18.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: smocker
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: smocker
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: smocker
          image: "andrcuns/smocker:0.18.5"
          imagePullPolicy: IfNotPresent
          command:
            - start.sh
          ports:
            - name: mock
              containerPort: 8080
              protocol: TCP
            - name: admin
              containerPort: 8081
              protocol: TCP
          env:
            - name: SMOCKER_LOG_LEVEL
              value: info
          volumeMounts:
            - name: startup
              mountPath: /usr/local/bin
          readinessProbe:
            httpGet:
              path: /version
              port: admin
            initialDelaySeconds: 2
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /version
              port: admin
            initialDelaySeconds: 2
            periodSeconds: 30
          resources:
            {}
      volumes:
        - name: startup
          configMap:
            name: my-release-smocker
            defaultMode: 0755
