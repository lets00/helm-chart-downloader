---
# Source: eoloplants/templates/global-np.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-eoloplants-default-deny
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Source: eoloplants/templates/global-np.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-eoloplants-dns-egress
spec:
  podSelector:
    matchLabels:
      dns-policy: enabled
  egress:
  - ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP
---
# Source: eoloplants/templates/mongodb.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-eoloplants-mongodb-from-topo
spec:
  podSelector:
    matchLabels:
      app: my-release-eoloplants-mongodb
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-toposervice
    ports:
    - port: 27017
      protocol: TCP
---
# Source: eoloplants/templates/mysql.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-eoloplants-mysql-from-server
spec:
  podSelector:
    matchLabels:
      app: my-release-eoloplants-mysql
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-server
    ports:
    - port: 3306
      protocol: TCP
---
# Source: eoloplants/templates/planner.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-eoloplants-planner-to-rabbit-weather-topo
spec:
  podSelector:
    matchLabels:
      app: my-release-eoloplants-planner
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-rabbitmq
    ports:
    - port: 5672
      protocol: TCP
  - to:
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-weatherservice
    ports:
    - port: 9090
      protocol: TCP
  - to:
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-toposervice
    ports:
    - port: 8181
      protocol: TCP
---
# Source: eoloplants/templates/rabbitmq.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-eoloplants-rabbitmq-from-planner-server
spec:
  podSelector:
    matchLabels:
      app: my-release-eoloplants-rabbitmq
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-planner
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-server
    ports:
    - port: 5672
      protocol: TCP
---
# Source: eoloplants/templates/server.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-eoloplants-server-to-mysql-rabbit
spec:
  podSelector:
    matchLabels:
      app: my-release-eoloplants-server
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-mysql
    ports:
    - port: 3306
      protocol: TCP
  - to:
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-rabbitmq
    ports:
    - port: 5672
      protocol: TCP
---
# Source: eoloplants/templates/server.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-eoloplants-server-from-ingress
spec:
  podSelector:
    matchLabels:
      app: my-release-eoloplants-server
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            kubernetes.io/metadata.name: ingress-nginx
        podSelector:
          matchLabels:
            app.kubernetes.io/name: ingress-nginx
      ports:
      - protocol: TCP
        port: 3000
---
# Source: eoloplants/templates/toposervice.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-eoloplants-topo-to-mongodb
spec:
  podSelector:
    matchLabels:
      app: my-release-eoloplants-toposervice
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-mongodb
    ports:
    - port: 27017
      protocol: TCP
---
# Source: eoloplants/templates/toposervice.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-eoloplants-topo-from-planner-ingress
spec:
  podSelector:
    matchLabels:
      app: my-release-eoloplants-toposervice
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-planner
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: ingress-nginx
      podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8181
---
# Source: eoloplants/templates/weatherservice.yml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-release-eoloplants-weather-from-planner
spec:
  podSelector:
    matchLabels:
      app: my-release-eoloplants-weatherservice
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: my-release-eoloplants-planner
    ports:
    - port: 9090
      protocol: TCP
---
# Source: eoloplants/templates/mongo-pv.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-release-eoloplants-mongo-pv
spec:
  storageClassName: my-release-eoloplants-mongo
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /my-release-eoloplants/db/mongo---
---
# Source: eoloplants/templates/mysql-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-release-eoloplants-mysql-pv
spec:
  storageClassName: my-release-eoloplants-mysql
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /my-release-eoloplants/db/mysql---
---
# Source: eoloplants/templates/rabbitmq-pv.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-release-eoloplants-rabbit-pv
spec:
  storageClassName: my-release-eoloplants-rabbit
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /my-release-eoloplants/db/rabbitmq---
---
# Source: eoloplants/templates/mongodb.yml
### PVC ###
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-eoloplants-mongo-pvc
spec:
  storageClassName: my-release-eoloplants-mongo
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: eoloplants/templates/mysql.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-eoloplants-mysql-pvc
spec:
  storageClassName: my-release-eoloplants-mysql
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: eoloplants/templates/rabbitmq.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-eoloplants-rabbit-pvc
spec:
  storageClassName: my-release-eoloplants-rabbit
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: eoloplants/templates/mongodb.yml
apiVersion: v1
kind: Service
metadata:
  name: my-release-eoloplants-mongodb-service
  labels:
    app: my-release-eoloplants-mongodb
    helm.sh/chart: eoloplants-0.1.0
    app.kubernetes.io/name: eoloplants
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: my-release-eoloplants-mongodb-port-27017
  - port: 27018
    targetPort: 27018
    protocol: TCP
    name: my-release-eoloplants-mongodb-port-27018
  - port: 27019
    targetPort: 27019
    protocol: TCP
    name: my-release-eoloplants-mongodb-port-27019
  selector:
    app: my-release-eoloplants-mongodb
  type: ClusterIP
---
# Source: eoloplants/templates/mysql.yml
apiVersion: v1
kind: Service
metadata:
  name: my-release-eoloplants-mysql-service
  labels:
    app: my-release-eoloplants-mysql
    helm.sh/chart: eoloplants-0.1.0
    app.kubernetes.io/name: eoloplants
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 3306
    targetPort: 3306
    protocol: TCP
    name: my-release-eoloplants-mysql-port
  selector:
    app: my-release-eoloplants-mysql
  type: ClusterIP
---
# Source: eoloplants/templates/rabbitmq.yml
apiVersion: v1
kind: Service
metadata:
  name: my-release-eoloplants-rabbitmq-service
  labels:
    app: my-release-eoloplants-rabbitmq
    helm.sh/chart: eoloplants-0.1.0
    app.kubernetes.io/name: eoloplants
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 5672
    targetPort: 5672
    protocol: TCP
    name: my-release-eoloplants-rabbitmq-port-5672
  - port: 15672
    targetPort: 15672
    protocol: TCP
    name: my-release-eoloplants-rabbitmq-port-15672
  selector:
    app: my-release-eoloplants-rabbitmq
  type: ClusterIP
---
# Source: eoloplants/templates/server.yml
apiVersion: v1
kind: Service
metadata:
  name: my-release-eoloplants-server-service
  labels:
    app: my-release-eoloplants-server
    helm.sh/chart: eoloplants-0.1.0
    app.kubernetes.io/name: eoloplants
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: my-release-eoloplants-server-port
  selector:
    app: my-release-eoloplants-server
  type: NodePort
---
# Source: eoloplants/templates/toposervice.yml
apiVersion: v1
kind: Service
metadata:
  name: my-release-eoloplants-toposervice-service
  labels:
    app: my-release-eoloplants-toposervice
    app.kubernetes.io/name: eoloplants
    app.kubernetes.io/instance: my-release
spec:
  ports:
  - port: 8181
    targetPort: 8181
    protocol: TCP
    name: my-release-eoloplants-topo-port
  selector:
    app: my-release-eoloplants-toposervice
  type: NodePort
---
# Source: eoloplants/templates/weatherservice.yml
apiVersion: v1
kind: Service
metadata:
  name: my-release-eoloplants-weatherservice-service
  labels:
    app: my-release-eoloplants-weatherservice
    helm.sh/chart: eoloplants-0.1.0
    app.kubernetes.io/name: eoloplants
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: my-release-eoloplants-weatherservice-port
  selector:
    app: my-release-eoloplants-weatherservice
  type: ClusterIP
---
# Source: eoloplants/templates/mongodb.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-eoloplants-mongodb-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: my-release-eoloplants-mongodb
      app.kubernetes.io/name: eoloplants
      app.kubernetes.io/instance: my-release
  replicas: 1
  template:
    metadata:
      labels:
        app: my-release-eoloplants-mongodb
        app.kubernetes.io/name: eoloplants
        app.kubernetes.io/instance: my-release
    spec:
      containers:
      - name: my-release-eoloplants-mongodb
        image: mongo:5.0.6-focal 
        imagePullPolicy: IfNotPresent
        env:
        - name: MONGO_INITDB_DATABASE
          value: topoDB
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: password
        ports:
        - containerPort: 27017
        - containerPort: 27018
        - containerPort: 27019
        volumeMounts:
        - mountPath: /data/db
          name: my-release-eoloplants-datadb
      volumes:
      - name: my-release-eoloplants-datadb
        persistentVolumeClaim:
          claimName: my-release-eoloplants-mongo-pvc
---
# Source: eoloplants/templates/mysql.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-eoloplants-mysql-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: my-release-eoloplants-mysql
      app.kubernetes.io/name: eoloplants
      app.kubernetes.io/instance: my-release
  replicas: 1
  template:
    metadata:
      labels:
        app: my-release-eoloplants-mysql
        app.kubernetes.io/name: eoloplants
        app.kubernetes.io/instance: my-release
    spec:
      containers:
      - name: my-release-eoloplants-mysql
        image: mysql:8.0.28 
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: eoloplantsDB
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: my-release-eoloplants-datadb
      volumes:
      - name: my-release-eoloplants-datadb
        persistentVolumeClaim:
          claimName: my-release-eoloplants-mysql-pvc
---
# Source: eoloplants/templates/planner.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-eoloplants-planner-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: my-release-eoloplants-planner
      app.kubernetes.io/name: eoloplants
      app.kubernetes.io/instance: my-release
  replicas: 1
  template:
    metadata:
      labels:
        app: my-release-eoloplants-planner
        app.kubernetes.io/name: eoloplants
        app.kubernetes.io/instance: my-release
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: my-release-eoloplants-planner
        image: lourdesmorente/new-planner:1.0.0 
        imagePullPolicy: IfNotPresent
        env:
        - name: TOPO_HOST
          value: my-release-eoloplants-toposervice-service
        - name: TOPO_PORT
          value: "8181"
        - name: GRPC_CLIENT_WEATHERSERVER_ADDRESS
          value: static://my-release-eoloplants-weatherservice-service:9090
        - name: SPRING_CLOUD_STREAM_RABBIT_BINDER_NODES
          value: my-release-eoloplants-rabbitmq-service:5672
        - name: SPRING_RABBITMQ_HOST
          value: my-release-eoloplants-rabbitmq-service
        - name: SPRING_RABBITMQ_PORT
          value: "5672"
        - name: SPRING_RABBITMQ_USERNAME
          value: root
        - name: SPRING_RABBITMQ_PASSWORD
          value: password
---
# Source: eoloplants/templates/rabbitmq.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-eoloplants-rabbitmq-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: my-release-eoloplants-rabbitmq
      app.kubernetes.io/name: eoloplants
      app.kubernetes.io/instance: my-release
  replicas: 1
  template:
    metadata:
      labels:
        app: my-release-eoloplants-rabbitmq
        app.kubernetes.io/name: eoloplants
        app.kubernetes.io/instance: my-release
    spec:
      containers:
      - name: my-release-eoloplants-rabbitmq
        image: rabbitmq:3.9-management 
        imagePullPolicy: IfNotPresent
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: root
        - name: RABBITMQ_DEFAULT_PASS
          value: password
        ports:
        - containerPort: 5672
        - containerPort: 15672
        volumeMounts:
        - mountPath: /var/lib/rabbitmq/mnesia
          name: my-release-eoloplants-datarabbit
      volumes:
      - name: my-release-eoloplants-datarabbit
        persistentVolumeClaim:
          claimName: my-release-eoloplants-rabbit-pvc
---
# Source: eoloplants/templates/server.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-eoloplants-server-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: eoloplants
      app.kubernetes.io/instance: my-release
      app: my-release-eoloplants-server
  replicas: 1
  template:
    metadata:
      labels:
        app: my-release-eoloplants-server
        app.kubernetes.io/name: eoloplants
        app.kubernetes.io/instance: my-release
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: my-release-eoloplants-server
        image: codeurjc/server:v1.0 
        imagePullPolicy: IfNotPresent
        command: ["bash"]
        args:
        - "-c"
        - "./wait-for-it.sh my-release-eoloplants-mysql-service:3306 -t 500 -- ./wait-for-it.sh my-release-eoloplants-rabbitmq-service:5672 -t 500 -- node src/server.js"
        env:
        - name: MYSQL_HOST
          value: my-release-eoloplants-mysql-service
        - name: MYSQL_DB
          value: eoloplantsDB
        - name: MYSQL_USER
          value: root
        - name: MYSQL_PASS
          value: password
        - name: RABBITMQ_URL
          value: amqp://root:password@my-release-eoloplants-rabbitmq-service
        ports:
        - containerPort: 3000
---
# Source: eoloplants/templates/toposervice.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-eoloplants-toposervice-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: my-release-eoloplants-toposervice
      app.kubernetes.io/name: eoloplants
      app.kubernetes.io/instance: my-release
  replicas: 1
  template:
    metadata:
      labels:
        app: my-release-eoloplants-toposervice
        app.kubernetes.io/name: eoloplants
        app.kubernetes.io/instance: my-release
        dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: my-release-eoloplants-toposervice
        image: codeurjc/toposervice:v1.0 
        imagePullPolicy: IfNotPresent
        env:
        - name: SPRING_DATA_MONGODB_HOST
          value: my-release-eoloplants-mongodb-service
        - name: SPRING_DATA_MONGODB_PORT
          value: "27017"
        - name: SPRING_DATA_MONGODB_DATABASE
          value: topoDB
        - name: SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE
          value: admin
        - name: SPRING_DATA_MONGODB_USERNAME
          value: root
        - name: SPRING_DATA_MONGODB_PASSWORD
          value: password
        ports:
        - containerPort: 8181
---
# Source: eoloplants/templates/weatherservice.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-eoloplants-weatherservice-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: my-release-eoloplants-weatherservice
      app.kubernetes.io/name: eoloplants
      app.kubernetes.io/instance: my-release
  replicas: 1
  template:
    metadata:
      labels:
        app: my-release-eoloplants-weatherservice
        app.kubernetes.io/name: eoloplants
        app.kubernetes.io/instance: my-release
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: my-release-eoloplants-weatherservice
        image: codeurjc/weatherservice:v1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: GRPC_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: GRPC_PORT
          value: "9090"
        ports:
        - containerPort: 9090
---
# Source: eoloplants/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-eoloplants-test-connection"
  labels:
    helm.sh/chart: eoloplants-0.1.0
    app.kubernetes.io/name: eoloplants
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-eoloplants:3000']
  restartPolicy: Never
