---
# Source: clickhouse/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-clickhouse-config
  labels:
    helm.sh/chart: clickhouse-0.3.0
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "24.2.1.2248-alpine"
    app.kubernetes.io/managed-by: Helm
data:
  clickhouse-config.xml: |
    <clickhouse>
        <logger>
            <level>warning</level>
            <console>true</console>
        </logger>
        <!-- Stop all the unnecessary logging -->
        <query_thread_log remove="remove"/>
        <query_log remove="remove"/>
        <text_log remove="remove"/>
        <trace_log remove="remove"/>
        <metric_log remove="remove"/>
        <asynchronous_metric_log remove="remove"/>
        <session_log remove="remove"/>
        <part_log remove="remove"/>
    </clickhouse>
  clickhouse-user-config.xml: |
    <clickhouse>
        <profiles>
            <default>
                <log_queries>0</log_queries>
                <log_query_threads>0</log_query_threads>
            </default>
        </profiles>
    </clickhouse>
---
# Source: clickhouse/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-clickhouse-headless
  labels:
    helm.sh/chart: clickhouse-0.3.0
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "24.2.1.2248-alpine"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: "rest"
      port: 8123
      targetPort: "rest"
      protocol: "TCP"
    - name: "rpc"
      port: 9000
      targetPort: "rpc"
      protocol: "TCP"
  selector:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: my-release
---
# Source: clickhouse/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-clickhouse
  labels:
    helm.sh/chart: clickhouse-0.3.0
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "24.2.1.2248-alpine"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: "rest"
      port: 8123
      targetPort: "rest"
      protocol: "TCP"
    - name: "rpc"
      port: 9000
      targetPort: "rpc"
      protocol: "TCP"
  selector:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: my-release
---
# Source: clickhouse/templates/controller.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-release-clickhouse
  labels:
    helm.sh/chart: clickhouse-0.3.0
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "24.2.1.2248-alpine"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  serviceName: my-release-clickhouse-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: clickhouse
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: clickhouse
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: default
      containers:
        - name: clickhouse
          image: "clickhouse/clickhouse-server:24.2.1.2248-alpine"
          imagePullPolicy: IfNotPresent
          ports:
            - name: "rest"
              containerPort: 8123
              protocol: "TCP"
            - name: "rpc"
              containerPort: 9000
              protocol: "TCP"
          env:
            - name: "TZ"
              value: "UTC"
          args: []
          volumeMounts:
            - name: config-volume
              mountPath: /etc/clickhouse-server/config.d/logging.xml
              subPath: clickhouse-config.xml
              readOnly: true
            - name: config-volume
              mountPath: /etc/clickhouse-server/users.d/logging.xml
              subPath: clickhouse-user-config.xml
              readOnly: true
            - name: my-release-clickhouse-storage
              mountPath: /var/lib/clickhouse
          livenessProbe:
            httpGet:
              path: /ping
              port: rest
          readinessProbe:
            httpGet:
              path: /ping
              port: rest
          resources: {}
      volumes:
        - name: config-volume
          configMap:
            name: my-release-clickhouse-config
  volumeClaimTemplates:
    - metadata:
        name: my-release-clickhouse-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem
