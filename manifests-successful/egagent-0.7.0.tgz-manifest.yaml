---
# Source: egagent/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: egagent
---
# Source: egagent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: egagent
  namespace: egagent
  labels:
    helm.sh/chart: egagent-0.7.0
    app.kubernetes.io/name: egagent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.2.10"
    app.kubernetes.io/managed-by: Helm
---
# Source: egagent/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: egagent-role
  namespace: egagent
  labels:
    helm.sh/chart: egagent-0.7.0
    app.kubernetes.io/name: egagent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.2.10"
    app.kubernetes.io/managed-by: Helm
rules:
- nonResourceURLs:
    - "/version"
    - "/healthz"
    - "/metrics"
  verbs: ["get"]
  apiGroups: []
  resources: []
- apiGroups: ["batch"]
  resources:
    - "jobs"
    - "cronjobs"
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
    - "deployments"
    - "replicasets"
    - "ingresses"
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
    - "deployments"
    - "replicasets"
    - "daemonsets"
    - "statefulsets"
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
    - "namespaces"
    - "events"
    - "services"
    - "endpoints"
    - "nodes"
    - "nodes/log"
    - "nodes/metrics"
    - "nodes/proxy"
    # - "nodes/spec"
    - "nodes/stats"
    - "pods"
    - "replicationcontrollers"
    - "componentstatuses"
    - "resourcequotas"
    - "persistentvolumes"
    - "persistentvolumeclaims"
    - "limitranges"
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources:
    - "pods"
    - "nodes"
  verbs: ["get", "list", "watch"]
- apiGroups: ["autoscaling"]
  resources:
    - "horizontalpodautoscalers"
  verbs: ["get", "list", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources:
    - "leases"
  verbs: ["get", "list", "watch"]
# - apiGroups: [""]
  # resources:
    # - "endpoints"
  # verbs: ["create", "update", "patch"]
# - apiGroups: ["networking.k8s.io"]
  # resources:
    # - "ingresses"
  # verbs: ["get", "list", "watch"]
- apiGroups: ["apps.openshift.io"]
  resources:
    - "deploymentconfigs"
  verbs: ["get", "list", "watch"]
- apiGroups: ["security.openshift.io"]
  resourceNames: ["privileged"]
  resources: ["securitycontextconstraints"]
  verbs: ["use"]
- apiGroups: ["config.openshift.io"]
  resources:
    - "clusteroperators"
  verbs: ["get", "list", "watch"]
---
# Source: egagent/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: egagent-role-binding
  namespace: egagent
  labels:
    helm.sh/chart: egagent-0.7.0
    app.kubernetes.io/name: egagent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.2.10"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: egagent 
  namespace: egagent
roleRef:
  kind: ClusterRole
  name: egagent-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: egagent/templates/daemonset.yaml
apiVersion: apps/v1
kind: "DaemonSet"
metadata:
  name: egagent
  namespace: egagent
  labels:
    app: egagent
    helm.sh/chart: egagent-0.7.0
    app.kubernetes.io/name: egagent
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "7.2.10"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: egagent
      app.kubernetes.io/name: egagent
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app: egagent
        app.kubernetes.io/name: egagent
        app.kubernetes.io/instance: my-release
    spec: 
      volumes:
      - name: var-log
        hostPath:
          path: /var/log
      - name: var-lib
        hostPath:
          path: /var/lib
      - name: var-run
        hostPath:
          path: /var/run
      # - name: process
        # hostPath:
          # path: /proc
      # - name: host-root
        # hostPath:
          # path: /
      - name: pod-logs
        hostPath:
          path: /var/log/pods
      imagePullSecrets:
      - name: "your-registry-secret-name"        
      containers:
      - name: egagent
        image: "docker.io/eginnovations/agent:7.2.10"
        imagePullPolicy: Always
        securityContext:
          privileged: true
        env:
        - name: EG_MANAGER
          value: "xyz.egmonitoringhost.com"
        - name: EG_MANAGER_PORT
          value: "443"
        - name: EG_MANAGER_SSL
          value: "true"
        - name: JVM_MEMORY
          value: "1024"
        - name: EG_AGENT_IDENTIFIER_ID
          value: ""
        - name: EG_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: EG_HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NAMESPACES_TO_INCLUDE
          value: "*"          
        - name: NAMESPACES_TO_EXCLUDE
          value: "none"              
        - name: EG_AGENT_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: EG_AGENT_NODE_NAME
          valueFrom:
            fieldRef:
               fieldPath: spec.nodeName
        - name: EG_AGENT_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DEBUG
          value: "false"
        # - name: EG_KUBERNETES_CLUSTER_DISCOVERY_ENABLED
          # value: ""
        - name: EG_KUBERNETES_CLUSTER_NAME
          value: "My_Cluster"
        - name: EG_KUBERNETES_CLUSTER_TYPE
          value: "K8S"
        #- name: CONTAINER_RUNTIME_ENDPOINT
          #value: "unix:///var/run/k3s/containerd/containerd.sock"
        #- name: IMAGE_SERVICE_ENDPOINT
          #value: "unix:///var/run/k3s/containerd/containerd.sock"
        
        volumeMounts:
        - name: var-log
          mountPath: /var/log
        - name: var-lib
          mountPath: /var/lib
        - name: var-run
          mountPath: /var/run
        # - name: process
          # mountPath: /media/proc
        # - name: host-root
          # mountPath: /mnt
        - name: pod-logs
          mountPath: /mnt/var/log/pods
      hostIPC: true
      hostNetwork: true
      hostPID: true
      serviceAccountName: egagent
