---
# Source: ingress-nginx-validate-jwt/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-ingress-nginx-validate-jwt
  labels:
    helm.sh/chart: ingress-nginx-validate-jwt-1.13.56
    app.kubernetes.io/name: ingress-nginx-validate-jwt
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.13.56"
    app.kubernetes.io/managed-by: Helm
---
# Source: ingress-nginx-validate-jwt/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-ingress-nginx-validate-jwt
  labels:
    helm.sh/chart: ingress-nginx-validate-jwt-1.13.56
    app.kubernetes.io/name: ingress-nginx-validate-jwt
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.13.56"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ingress-nginx-validate-jwt
    app.kubernetes.io/instance: my-release
---
# Source: ingress-nginx-validate-jwt/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-ingress-nginx-validate-jwt
  labels:
    helm.sh/chart: ingress-nginx-validate-jwt-1.13.56
    app.kubernetes.io/name: ingress-nginx-validate-jwt
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.13.56"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx-validate-jwt
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: ingress-nginx-validate-jwt
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-ingress-nginx-validate-jwt
      securityContext:
        {}
      containers:
        - name: ingress-nginx-validate-jwt
          env:
          - name: "OpenIdProviderConfigurationUrl"
            value: "https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration"
          - name: "Logging__LogLevel__Default"
            value: "Information"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsNonRoot: true
            runAsUser: 1000
          image: "ivanjosipovic/ingress-nginx-validate-jwt:1.13.56"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {}
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir: {}
---
# Source: ingress-nginx-validate-jwt/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-ingress-nginx-validate-jwt-test-connection"
  labels:
    helm.sh/chart: ingress-nginx-validate-jwt-1.13.56
    app.kubernetes.io/name: ingress-nginx-validate-jwt
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.13.56"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-ingress-nginx-validate-jwt:8080']
  restartPolicy: Never
