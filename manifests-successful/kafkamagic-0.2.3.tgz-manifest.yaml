---
# Source: kafkamagic/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-kafkamagic
  labels:
    app: kafkamagic
    release: my-release
    helm.sh/chart: kafkamagic-0.2.3
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kafkamagic/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-kafkamagic
  labels:
    app: kafkamagic
    release: my-release
    helm.sh/chart: kafkamagic-0.2.3
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  KMAGIC_CONFIG_ENCRYPTION_KEY: ZkY4dkIzamZCYmFFRk9JQlBST1RxSkVCSFF6UUF4NFo=
  KMAGIC_CONFIG_STORE_CONNECTION: RGF0YSBTb3VyY2U9L2RhdGEvS2Fma2FNYWdpY0NvbmZpZy5kYjs=
  KMAGIC_CONFIG_STORE_TYPE: ZmlsZQ==
---
# Source: kafkamagic/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-kafkamagic
  labels:
    app: kafkamagic
    release: my-release
    helm.sh/chart: kafkamagic-0.2.3
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
data:
  appsettings.json: |-
    {
      "Kestrel": {
        "Endpoints": {
          "Http": {
            "Url": "http://+:8080"
          }
        }
      }
    }
---
# Source: kafkamagic/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-kafkamagic
  labels:
    app: kafkamagic
    release: my-release
    helm.sh/chart: kafkamagic-0.2.3
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: kafkamagic
    release: my-release
---
# Source: kafkamagic/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-kafkamagic
  labels:
    app: kafkamagic
    release: my-release
    helm.sh/chart: kafkamagic-0.2.3
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kafkamagic
      release: my-release
  template:
    metadata:
      labels:
        app: kafkamagic
        release: my-release
      annotations:
        checksum/secret: c0fda70380f3d810244786e614ef1b50e2b247fdfe0ce1713a6c1f4725939a14
        checksum/config: c6960425b007c64f1b7171729600b9461b542ca1f1242e35e212aa86ac0f1322
    spec:
      serviceAccountName: my-release-kafkamagic
      securityContext:
        {}
      containers:
        - name: kafkamagic
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          image: "digitsy/kafka-magic:2.0.3.4"
          imagePullPolicy: IfNotPresent
          envFrom:
          - secretRef:
              name: my-release-kafkamagic
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: data
              mountPath: /data
            - name: conf
              mountPath: /app/appsettings.json
              readOnly: true
              subPath: appsettings.json
          resources:
            {}
      volumes:
        - name: conf
          configMap:
            name: my-release-kafkamagic
        - name: data
          emptyDir: {}
---
# Source: kafkamagic/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-kafkamagic-test-connection"
  labels:
    app: kafkamagic
    release: my-release
    helm.sh/chart: kafkamagic-0.2.3
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['my-release-kafkamagic:8080']
  restartPolicy: Never
