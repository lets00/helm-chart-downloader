---
# Source: pgbouncer/templates/secret-pgbouncer-users.yaml
apiVersion: v1
kind: Secret
metadata:
  name: my-release-pgbouncer-secret-userlist-txt
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pgbouncer-1.0.15
    
    app.kubernetes.io/name: my-release-pgbouncer
    app.kubernetes.io/instance: my-release
type: Opaque
data:
  userlist.txt: |-
---
# Source: pgbouncer/templates/configmap-pgbouncer-ini.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-pgbouncer-config
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pgbouncer-1.0.15
    
    app.kubernetes.io/name: my-release-pgbouncer
    app.kubernetes.io/instance: my-release
data:
  pgbouncer.ini: |-
    ;; database name = 1
    [databases]
    
    
    [pgbouncer]
    
    ;;; Administrative settings
    ;logfile = /var/log/pgbouncer/pgbouncer.log
    ;pidfile = /var/run/pgbouncer/pgbouncer.pid
    
    ;;; Where to wait for clients
    listen_addr = 0.0.0.0
    listen_port = 5432
    unix_socket_dir = var/run/postgresql
    ;unix_socket_mode = 0777
    ;unix_socket_group =
    ;client_tls_sslmode = disable
    ;client_tls_ca_file = <system default>
    ;client_tls_key_file =
    ;client_tls_cert_file =
    ;client_tls_ciphers = fast
    ;client_tls_protocols = all
    ;client_tls_dheparams = auto
    ;client_tls_ecdhcurve = auto
    ;server_tls_sslmode = disable
    ;server_tls_ca_file = <system default>
    ;server_tls_key_file =
    ;server_tls_cert_file =
    ;server_tls_protocols = all
    ;server_tls_ciphers = fast
    ; any, trust, plain, crypt, md5, cert, hba, pam
    
    ;;; Authentication settings
    
    auth_type = plain
    ;auth_file = /8.0/main/global/pg_auth
    auth_file = /etc/pgbouncer.d/userlist.txt
    ;auth_hba_file =
    
    auth_query = SELECT * FROM pgbouncer.get_auth($1)
    
    ;;; Users allowed into database 'pgbouncer'
    admin_users = 
    stats_users = , stats, root, monitor
    
    ;;; Pooler personality
    
    pool_mode = session
    server_reset_query = DISCARD ALL
    ;server_reset_query_always = 0
    ;ignore_startup_parameters = extra_float_digits
    ;server_check_query = select 1
    ;server_check_delay = 30
    ;application_name_add_host = 0
    
    ;;; Connection limits
    
    max_client_conn = 200
    default_pool_size = 200
    min_pool_size = 15
    reserve_pool_size = 25
    reserve_pool_timeout = 5
    ;max_db_connections = 0
    ;max_user_connections = 0
    ;server_round_robin = 0
    ;syslog = 0
    ;syslog_facility = daemon
    ;syslog_ident = pgbouncer
    
    ;;; Logging
    
    log_connections = 0
    log_disconnections = 0
    log_pooler_errors = 1
    log_stats = 0
    stats_period = 60
    verbose = 0
    
    ;;; Timeouts
    
    ;server_lifetime = 3600
    ;server_idle_timeout = 600
    ;server_connect_timeout = 15
    ;server_login_retry = 15
    ;query_timeout = 0
    ;query_wait_timeout = 120
    ;client_idle_timeout = 
    ;client_login_timeout = 60
    ;autodb_idle_timeout = 3600
    ;suspend_timeout = 10
    ;idle_transaction_timeout = 0
    
    ;;; Low-level tuning options
    
    ;pkt_buf = 4096
    ;listen_backlog = 128
    ;sbuf_loopcnt = 5
    ;max_packet_size = 2147483647
    
    ;tcp_defer_accept = 0
    ;tcp_socket_buffer = 0
    tcp_keepalive = 1
    tcp_keepcnt = 5
    tcp_keepidle = 30
    tcp_keepintvl = 30
    
    ;dns_max_ttl = 15
    ;dns_zone_check_period = 0
    ;dns_nxdomain_ttl = 15
    
    ;disable_pqexec = 0
    ;conffile
    ;service_name = pgbouncer
    ;job_name = pgbouncer
    ;%include /etc/pgbouncer/pgbouncer-other.ini
    
    ;;; Custom attributes added from .Values.customSettings
---
# Source: pgbouncer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-pgbouncer
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pgbouncer-1.0.15
    
    app.kubernetes.io/name: my-release-pgbouncer
    app.kubernetes.io/instance: my-release
  annotations:
spec:
  type: ClusterIP
  selector:
      
      app.kubernetes.io/name: my-release-pgbouncer
      app.kubernetes.io/instance: my-release
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
---
# Source: pgbouncer/templates/deployment-pgbouncer.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-pgbouncer
  labels:
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: pgbouncer-1.0.15
    
    app.kubernetes.io/name: my-release-pgbouncer
    app.kubernetes.io/instance: my-release
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      
      app.kubernetes.io/name: my-release-pgbouncer
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: pgbouncer-1.0.15
        
        app.kubernetes.io/name: my-release-pgbouncer
        app.kubernetes.io/instance: my-release
      annotations:
        checksum/ini: 4c2eebc7ddcd553dd2c52e69835cf905c4481af7f975058a9e56b0919bae1aee
        checksum/users: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    
                    app.kubernetes.io/name: my-release-pgbouncer
                    app.kubernetes.io/instance: my-release
      volumes:
        - name: userssecret
          secret:
            secretName: my-release-pgbouncer-secret-userlist-txt
            items:
              - key: userlist.txt
                path: userlist.txt
        - name: config
          configMap:
            name: my-release-pgbouncer-config
            items:
              - key: pgbouncer.ini
                path: pgbouncer.ini
      containers:
        - name: pgbouncer
          image: "cradlepoint/pgbouncer:1.0.1"
          imagePullPolicy: Always
          ports:
            - name: pgbouncer
              containerPort: 5432
          readinessProbe:
            tcpSocket:
              port: 5432
          livenessProbe:
            tcpSocket:
              port: 5432
          lifecycle:
            preStop:
              exec:
                # https://freecontent.manning.com/handling-client-requests-properly-with-kubernetes/
                command: ["/bin/sh","-c","sleep 5"]
          volumeMounts:
            - name: userssecret
              mountPath: /etc/pgbouncer.d
              readOnly: true
            - name: config
              mountPath: /etc/pgbouncer
              readOnly: true
          resources:
            null
