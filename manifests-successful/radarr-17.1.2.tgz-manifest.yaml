---
# Source: radarr/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-radarr
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    app.kubernetes.io/version: 4.7.5.7809
    helm.sh/chart: radarr-17.1.2
  annotations:
spec:
  type: ClusterIP
  ports:
  - port: 7878
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: radarr
    app.kubernetes.io/instance: my-release
---
# Source: radarr/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-radarr
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    app.kubernetes.io/version: 4.7.5.7809
    helm.sh/chart: radarr-17.1.2
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: radarr
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: radarr
        app.kubernetes.io/instance: my-release
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: my-release-radarr
          image: "ghcr.io/onedr0p/radarr:4.7.5.7809"
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: UTC
          ports:
            - name: http
              containerPort: 7878
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /usr/bin/env
              - bash
              - -c
              - curl --fail localhost:7878/api/v3/system/status?apiKey=`IFS=\> && while read -d
                \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 7878
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 7878
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
