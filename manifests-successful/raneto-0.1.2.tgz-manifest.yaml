---
# Source: raneto/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-raneto
  labels:
    helm.sh/chart: raneto-0.1.2
    app.kubernetes.io/name: raneto
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.16.6"
    app.kubernetes.io/managed-by: Helm
---
# Source: raneto/templates/config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-raneto-config
  labels:
    app: raneto
data:
  config.default.js: |
    'use strict';
    
    // Modules
    var path = require('path');
    
    var config = {
    
      // Your site title (format: page_title - site_title)
      site_title: 'Raneto',
    
      // The base URL of your site (can use %base_url% in Markdown files)
      base_url: '',
      nowrap: true,
    
      // Used for the "Get in touch" page footer link
      support_email: '',
    
      // Footer Text / Copyright
      copyright: 'Copyright &copy; ' + new Date().getFullYear() + ' - <a href="http://raneto.com">Powered by Raneto</a>',
    
      // Excerpt length (used in search)
      excerpt_length: 400,
    
      // The meta value by which to sort pages (value should be an integer)
      // If this option is blank pages will be sorted alphabetically
      page_sort_meta: 'sort',
    
      // Should categories be sorted numerically (true) or alphabetically (false)
      // If true category folders need to contain a "sort" file with an integer value
      category_sort: true,
    
      // Controls behavior of home page if meta ShowOnHome is not present. If set to true
      // all categories or files that do not specify ShowOnHome meta property will be shown
      show_on_home_default: true,
    
      // Specify the path of your content folder where all your '.md' files are located
      // Fix: Needs trailing slash for now!
      // Fix: Cannot be an absolute path
      content_dir : '/config/content/',
    
      // Where is the public directory or document root?
      public_dir  : '/app/raneto/themes/default/public',
    
      // The base URL of your images folder,
      // Relative to config.public_dir
      // (can use %image_url% in Markdown files)
      image_url: '/images',
    
      // Add your analytics tracking code (including script tags)
      analytics: '',
    
      // Set to true to enable the web editor
      allow_editing : true,
    
      // Set to true to enable HTTP Basic Authentication
      authentication : true,
    
      // If editing is enabled, set this to true to only authenticate for editing, not for viewing
      authentication_for_edit: true,
    
      // If authentication is enabled, set this to true to enable authentication for reading too
      authentication_for_read: false,
    
      // Google OAuth
      googleoauth: false,
      google_group_restriction: {
        enabled: false,
        api_key: 'GOOGLE_API_KEY',
        group_name : 'GOOGLE_GROUP_NAME'
      },
      oauth2 : {
        client_id: 'GOOGLE_CLIENT_ID',
        client_secret: 'GOOGLE_CLIENT_SECRET',
        callback: 'http://localhost:3000/auth/google/callback',
        hostedDomain: 'google.com'
      },
      secret: 'someCoolSecretRightHere',
    
      credentials    : [
        {
          username : 'admin',
          password : 'password'
        },
        {
          username : 'admin2',
          password : 'password'
        }
      ],
    
      locale: 'en',
    
      // Support search with extra languages
      searchExtraLanguages: ['ru'],
    
      // Sets the format for datetime's
      datetime_format: 'Do MMM YYYY',
    
      // Set to true to render suitable layout for RTL languages
      rtl_layout: false,
    
      // Edit Home Page title, description, etc.
      home_meta : {
        // title       : 'Custom Home Title',
        // description : 'Custom Home Description'
      },
    
      // Set to true to enable generation of table of contents
      table_of_contents: false,
    
      // Configure generation of table of contents (see markdown-toc's docs for details on available options)
      table_of_contents_options: {},
    
      menu_on_pages: true,
      menu_on_page_collapsible: true
    };
    
    config.public_dir = '/app/raneto/themes/default/public';
    
    // Exports
    module.exports = config;
---
# Source: raneto/templates/content-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-raneto-content
  labels:
    app: my-release-raneto
    chart: "raneto-0.1.2"
    release: "my-release"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: raneto/templates/images-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: my-release-raneto-images
  labels:
    app: my-release-raneto
    chart: "raneto-0.1.2"
    release: "my-release"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: raneto/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-raneto
  labels:
    helm.sh/chart: raneto-0.1.2
    app.kubernetes.io/name: raneto
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.16.6"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: raneto
    app.kubernetes.io/instance: my-release
---
# Source: raneto/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-raneto
  labels:
    helm.sh/chart: raneto-0.1.2
    app.kubernetes.io/name: raneto
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.16.6"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1  
  selector:
    matchLabels:
      app.kubernetes.io/name: raneto
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: raneto
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-raneto
      securityContext:
        {}
      containers:
        - name: raneto
          securityContext:
            {}
          image: "ghcr.io/linuxserver/raneto:version-0.16.6"
          imagePullPolicy: IfNotPresent        
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
          - name: content
            mountPath: /config/content
          - name: images
            mountPath: /config/images
          - name: config
            mountPath: /config/config.default.js
            subPath: config.default.js
      volumes:
      - name: config
        configMap:
          name: my-release-raneto-config
      - name: content
        persistentVolumeClaim:
          claimName: my-release-raneto-content
      - name: images
        persistentVolumeClaim:
          claimName: my-release-raneto-images
---
# Source: raneto/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-raneto-test-connection"
  labels:
    helm.sh/chart: raneto-0.1.2
    app.kubernetes.io/name: raneto
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "0.16.6"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-raneto:3000']
  restartPolicy: Never
