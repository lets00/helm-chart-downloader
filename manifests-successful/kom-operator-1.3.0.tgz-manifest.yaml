---
# Source: kom-operator/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: "kom-operator"
---
# Source: kom-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: "kom-operator"
  name: kom-operator
  labels:
    provider: kaiso
    version: "v2.2.0"
---
# Source: kom-operator/templates/deployment.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 01825d50.kaiso.github.io
kind: ConfigMap
metadata:
  name: kom-manager-config
  namespace: "kom-operator"
---
# Source: kom-operator/templates/clusterrole.yaml
# Role used by kom-operator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kom-operator
rules:
- apiGroups:
  - '*'
  resources:
  - configmaps
  - endpoints
  - events
  - persistentvolumeclaims
  - secrets
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingressclasses
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - kom.kaiso.github.io
  resources:
  - microservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kom.kaiso.github.io
  resources:
  - microservices/finalizers
  verbs:
  - update
- apiGroups:
  - kom.kaiso.github.io
  resources:
  - microservices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - traefik.containo.us
  resources:
  - ingressroutes
  - ingressroutetcps
  - ingressrouteudps
  - middlewares
  - middlewaretcps
  - serverstransports
  - tlsoptions
  - tlsstores
  - traefikservices
  verbs:
  - get
  - list
  - watch
---
# Source: kom-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kom-operator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kom-operator
subjects:
- kind: ServiceAccount
  name: kom-operator
  namespace: "kom-operator"
---
# Source: kom-operator/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kom-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kom-proxy-role
subjects:
- kind: ServiceAccount
  name: kom-operator
  namespace: "kom-operator"
---
# Source: kom-operator/templates/leaderelectionrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kom-leader-election-role
  namespace: "kom-operator"
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: kom-operator/templates/rolebinding.yaml
# roles bindings
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kom-leader-election-rolebinding
  namespace: "kom-operator"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kom-leader-election-role
subjects:
- kind: ServiceAccount
  name: kom-operator
  namespace: "kom-operator"
# end of role bindings
---
# Source: kom-operator/templates/deployment.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    provider: kaiso
    version: "v2.2.0"
  name: kom-controller-manager-metrics-service
  namespace: "kom-operator"
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
# Source: kom-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    provider: kaiso
    version: "v2.2.0"
  name: kom-operator
  namespace: "kom-operator"
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: SMART_RELOAD
          value: "false"
        - name: WATCH_NAMESPACE
          value: ""
        - name: LOADBALANCER_PUBLISHED_SERVICE
          value: ""
        - name: LOADBALANCER_REPLICA_COUNT
          value: "1"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: "kaiso/kom-operator:v2.2.0"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
            {}
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kom-operator
      terminationGracePeriodSeconds: 10
