---
# Source: apache-jena/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-apache-jena
  labels:
    helm.sh/chart: apache-jena-1.0.0
    app.kubernetes.io/name: apache-jena
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: apache-jena/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-release-apache-jena
  labels:
    helm.sh/chart: apache-jena-1.0.0
    app.kubernetes.io/name: apache-jena
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
  storageClassName:
---
# Source: apache-jena/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-apache-jena
  labels:
    helm.sh/chart: apache-jena-1.0.0
    app.kubernetes.io/name: apache-jena
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: apache-jena
    app.kubernetes.io/instance: my-release
---
# Source: apache-jena/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-apache-jena
  labels:
    helm.sh/chart: apache-jena-1.0.0
    app.kubernetes.io/name: apache-jena
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: apache-jena
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: apache-jena
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-apache-jena
      securityContext:
        {}
      containers:
        - name: apache-jena
          securityContext:
            {}
          image: "ghcr.io/bhuwanupadhyay/helm-charts:apache-jena-4.8.0"
          imagePullPolicy: IfNotPresent
          args: [ "--tdb2", "--update", "--loc", "/fuseki/databases", "/ds" ]
          ports:
            - name: http
              containerPort: 3030
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
          volumeMounts:
            - mountPath: /fuseki/databases
              name: fuseki-databases
          resources:
            {}
      volumes:
        - name: fuseki-databases
          persistentVolumeClaim:
            claimName: my-release-apache-jena
---
# Source: apache-jena/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-release-apache-jena
  labels:
    helm.sh/chart: apache-jena-1.0.0
    app.kubernetes.io/name: apache-jena
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "apache-jena.k8s.localdev"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: my-release-apache-jena
                port:
                  number: 80
---
# Source: apache-jena/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "my-release-apache-jena-test-connection"
  labels:
    helm.sh/chart: apache-jena-1.0.0
    app.kubernetes.io/name: apache-jena
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "1.10.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['my-release-apache-jena:80']
  restartPolicy: Never
