---
# Source: druid-tasks-exporter/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: my-release-druid-tasks-exporter
  labels:
    helm.sh/chart: druid-tasks-exporter-0.1.5
    app.kubernetes.io/name: druid-tasks-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: druid-tasks-exporter/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-druid-tasks-exporter
  labels:
    helm.sh/chart: druid-tasks-exporter-0.1.5
    app.kubernetes.io/name: druid-tasks-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: druid-tasks-exporter
    app.kubernetes.io/instance: my-release
---
# Source: druid-tasks-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-druid-tasks-exporter
  labels:
    helm.sh/chart: druid-tasks-exporter-0.1.5
    app.kubernetes.io/name: druid-tasks-exporter
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "v0.3.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: druid-tasks-exporter
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: druid-tasks-exporter
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-druid-tasks-exporter
      securityContext:
        {}
      containers:
        - name: druid-tasks-exporter
          securityContext:
            {}
          image: "ghcr.io/wiremind/druid-tasks-exporter:v0.3.1"
          imagePullPolicy: IfNotPresent
          command: ["/druid-tasks-exporter"]
          args:
            - -druid-uri
            - http://YOUR-DRUID-URI:8888/druid/v2/sql
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            null
