---
# Source: csgo/templates/bundle.yaml
kind: Service
apiVersion: v1
metadata:
  name: my-release-csgo
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: csgo
    app.kubernetes.io/version: 1.0.0
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 27015
      protocol: TCP
      targetPort: srcds
      nodePort: null
  selector:
    
    app.kubernetes.io/name: csgo
    app.kubernetes.io/instance: my-release
---
# Source: csgo/templates/bundle.yaml
kind: Service
apiVersion: v1
metadata:
  name: my-release-tv
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: csgo
    app.kubernetes.io/version: 1.0.0
spec:
  type: ClusterIP
  ports:
    - name: srcds-tv
      port: 27020
      protocol: TCP
      targetPort: srcds-tv
      nodePort: null
  selector:
    
    app.kubernetes.io/name: csgo
    app.kubernetes.io/instance: my-release
---
# Source: csgo/templates/bundle.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: my-release-csgo
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/name: csgo
    app.kubernetes.io/version: 1.0.0
spec:
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: "RollingUpdate"
  replicas: 1
  selector:
    matchLabels:
      
      app.kubernetes.io/name: csgo
      app.kubernetes.io/instance: my-release
  serviceName: my-release-csgo
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: csgo
    spec:
      serviceAccountName: default
      containers:
        -
          name: csgo
          image: docker.io/cm2network/csgo:sourcemod
          imagePullPolicy: 
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: "TZ"
              value: "Europe/Zurich"
            - name: SRCDS_PORT
              value: "27015"
            - name: SRCDS_TV_PORT
              value: "27020"
            - name: SRCDS_HOSTNAME
              value: Custom CS GO Server
            - name: SRCDS_NET_PUBLIC_ADDRESS
              value: "0"
            - name: SRCDS_IP
              value: "0"
            - name: SRCDS_FPSMAX
              value: "300"
            - name: SRCDS_TICKRATE
              value: "128"
            - name: SRCDS_MAXPLAYERS
              value: "14"
            - name: SRCDS_REGION
              value: "3"
            - name: SRCDS_STARTMAP
              value: de_dust2
            - name: SRCDS_MAPGROUP
              value: mg_active
            - name: SRCDS_GAMETYPE
              value: "0"
            - name: SRCDS_GAMEMODE
              value: "1"
            - name: SRCDS_WORKSHOP_START_MAP
              value: "0"
            - name: SRCDS_HOST_WORKSHOP_COLLECTION
              value: "1"
          livenessProbe: 
            initialDelaySeconds: 30
            periodSeconds: 10
            tcpSocket:
              port: srcds
          volumeMounts:
            - mountPath: /home/steam/csgo-dedicated/
              name: home
          ports:
            - containerPort: 27015
              name: srcds
              protocol: TCP
            - containerPort: 27020
              name: srcds-tv
              protocol: TCP
  volumeClaimTemplates:
    - metadata:
        labels:
          app.kubernetes.io/instance: my-release
          app.kubernetes.io/name: csgo
          app.kubernetes.io/version: 1.0.0
        name: home
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: null
