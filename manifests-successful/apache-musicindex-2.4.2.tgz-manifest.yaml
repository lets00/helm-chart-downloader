---
# Source: apache-musicindex/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-apache-musicindex
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: apache-musicindex
    app.kubernetes.io/version: v1.4.1-2
    helm.sh/chart: apache-musicindex-2.4.2
  annotations:
    traefik.ingress.kubernetes.io/service.serversscheme: https
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 443
    targetPort: https
    protocol: TCP
    name: https
  selector:
    app.kubernetes.io/name: apache-musicindex
    app.kubernetes.io/instance: my-release
---
# Source: apache-musicindex/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-apache-musicindex
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: apache-musicindex
    app.kubernetes.io/version: v1.4.1-2
    helm.sh/chart: apache-musicindex-2.4.2
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: apache-musicindex
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: apache-musicindex
        app.kubernetes.io/instance: my-release
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: my-release-apache-musicindex
          image: "ghcr.io/k8s-at-home/apache-musicindex:v1.4.1-2"
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
              - CAP_NET_BIND_SERVICE
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 443
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 443
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 443
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
