---
# Source: socat-tunneller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-socat-tunneller
  labels:
    app.kubernetes.io/name: socat-tunneller
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: socat-tunneller-0.2.0
spec:
  type: ClusterIP
  ports:
    - port: 9999
      targetPort: tunnel-port
      protocol: TCP
      name: tunnel-port
  selector:
    app.kubernetes.io/name: socat-tunneller
    app.kubernetes.io/instance: my-release
---
# Source: socat-tunneller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-socat-tunneller
  labels:
    app.kubernetes.io/name: socat-tunneller
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: socat-tunneller-0.2.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: socat-tunneller
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: socat-tunneller
        app.kubernetes.io/instance: my-release
    spec:
      containers:
        - name: socat-tunneller
          image: "alpine/socat:1.7.4.4"
          imagePullPolicy: IfNotPresent
          command:
            - socat
          args:
            - "TCP-LISTEN:$(TUNNEL_LOCAL_PORT),fork"
            - "TCP:$(TUNNEL_HOST):$(TUNNEL_PORT)"
          env:
            - name: TUNNEL_LOCAL_PORT
              value: "9999"
            - name: TUNNEL_HOST
              value: "myhost"
            - name: TUNNEL_PORT
              value: "9999"
          ports:
            - name: tunnel-port
              containerPort: 9999
              protocol: TCP
          resources:
            {}
