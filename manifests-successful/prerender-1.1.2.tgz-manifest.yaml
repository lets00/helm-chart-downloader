---
# Source: prerender/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-release-prerender
  labels:
    helm.sh/chart: prerender-1.1.2
    app.kubernetes.io/name: prerender
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.4.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: prerender/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-release-prerender
  labels:
    helm.sh/chart: prerender-1.1.2
    app.kubernetes.io/name: prerender
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  NODE_ENV: "production"
---
# Source: prerender/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-prerender
  labels:
    helm.sh/chart: prerender-1.1.2
    app.kubernetes.io/name: prerender
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: prerender
    app.kubernetes.io/instance: my-release
---
# Source: prerender/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-prerender
  labels:
    helm.sh/chart: prerender-1.1.2
    app.kubernetes.io/name: prerender
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "6.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prerender
      app.kubernetes.io/instance: my-release
  template:
    metadata:
      annotations:
        checksum/configmap: fd1e49baa03ebf362ebb7a6399107a2178ab2a2e4d48cbf85dc56ceb0e652ea9
      labels:
        app.kubernetes.io/name: prerender
        app.kubernetes.io/instance: my-release
    spec:
      serviceAccountName: my-release-prerender
      securityContext:
        {}
      containers:
        - name: prerender
          envFrom:
            - configMapRef:
                name: my-release-prerender
          securityContext:
            {}
          image: "docker.io/tvanro/prerender-alpine:6.4.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 3000
          readinessProbe:
            tcpSocket:
              port: 3000
          resources:
            {}
